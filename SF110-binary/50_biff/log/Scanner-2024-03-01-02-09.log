* EvoSuite 1.2.1-SNAPSHOT
* Going to generate test cases for class: Scanner
* Starting Client-0
* Properties loaded from /home/ubuntu/UTestGen/Evaluation/getting_results/dataset/SF110/50_biff/evosuite-files/evosuite.properties
* Connecting to master process on port 16786
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 02:09:13.535 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 02:09:13.543 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 02:09:13.544 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 02:09:13.576 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class Scanner
* Test criteria:
  - Branch Coverage
  - Line Coverage
  - Method-Output Coverage
  - Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 3039
* Using seed 1709258950987
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%]* Initial Number of Goals in DynaMOSA = 276 / 3039
[Progress:>                             0%] [Cov:>                                  0%][Progress:>                             1%] [Cov:===>                               9%][Progress:>                             2%] [Cov:====>                              13%][Progress:>                             2%] [Cov:=========>                         28%][Progress:>                             2%] [Cov:=========>                         28%][Progress:>                             2%] [Cov:=========>                         28%][Progress:>                             3%] [Cov:==========>                        31%][Progress:>                             3%] [Cov:===========>                       32%][Progress:>                             3%] [Cov:===========>                       32%][Progress:>                             3%] [Cov:===========>                       32%][Progress:>                             3%] [Cov:===========>                       32%][Progress:=>                            4%] [Cov:===========>                       32%][Progress:=>                            4%] [Cov:===========>                       32%][Progress:=>                            4%] [Cov:===========>                       32%][Progress:=>                            4%] [Cov:===========>                       32%][Progress:=>                            5%] [Cov:===========>                       32%][Progress:=>                            5%] [Cov:===========>                       32%][Progress:=>                            5%] [Cov:===========>                       32%][Progress:=>                            5%] [Cov:===========>                       32%][Progress:=>                            5%] [Cov:===========>                       32%][Progress:=>                            5%] [Cov:===========>                       32%][Progress:=>                            6%] [Cov:============>                      37%][Progress:=>                            6%] [Cov:============>                      37%][Progress:=>                            6%] [Cov:============>                      37%][Progress:=>                            6%] [Cov:============>                      37%][Progress:=>                            6%] [Cov:============>                      37%][Progress:==>                           7%] [Cov:============>                      37%][Progress:==>                           7%] [Cov:=============>                     38%][Progress:==>                           7%] [Cov:=============>                     38%][Progress:==>                           8%] [Cov:=============>                     38%][Progress:==>                           8%] [Cov:=============>                     38%][Progress:==>                           8%] [Cov:=============>                     38%][Progress:==>                           9%] [Cov:=============>                     38%][Progress:==>                           9%] [Cov:=============>                     38%][Progress:==>                           9%] [Cov:=============>                     38%][Progress:==>                           9%] [Cov:=============>                     38%][Progress:===>                          10%] [Cov:=============>                     38%][Progress:===>                          10%] [Cov:=============>                     38%][Progress:===>                          10%] [Cov:=============>                     38%][Progress:===>                          10%] [Cov:=============>                     38%][Progress:===>                          11%] [Cov:=============>                     38%][Progress:===>                          11%] [Cov:=============>                     38%][Progress:===>                          11%] [Cov:=============>                     38%][Progress:===>                          11%] [Cov:=============>                     38%][Progress:===>                          12%] [Cov:=============>                     38%][Progress:===>                          12%] [Cov:=============>                     38%][Progress:===>                          12%] [Cov:=============>                     38%][Progress:===>                          13%] [Cov:=============>                     38%][Progress:===>                          13%] [Cov:=============>                     38%][Progress:===>                          13%] [Cov:=============>                     38%][Progress:===>                          13%] [Cov:=============>                     39%][Progress:===>                          13%] [Cov:=============>                     39%][Progress:====>                         14%] [Cov:=============>                     39%][Progress:====>                         14%] [Cov:=============>                     39%][Progress:====>                         14%] [Cov:=============>                     39%][Progress:====>                         15%] [Cov:=============>                     39%][Progress:====>                         15%] [Cov:=============>                     39%][Progress:====>                         15%] [Cov:=============>                     39%][Progress:====>                         15%] [Cov:=============>                     39%][Progress:====>                         16%] [Cov:=============>                     39%][Progress:====>                         16%] [Cov:=============>                     39%][Progress:====>                         16%] [Cov:=============>                     39%][Progress:====>                         16%] [Cov:=============>                     39%][Progress:====>                         16%] [Cov:=============>                     39%][Progress:====>                         16%] [Cov:=============>                     39%][Progress:====>                         16%] [Cov:=============>                     39%][Progress:=====>                        17%] [Cov:=============>                     39%][Progress:=====>                        17%] [Cov:=============>                     39%][Progress:=====>                        17%] [Cov:=============>                     39%][Progress:=====>                        17%] [Cov:=============>                     39%][Progress:=====>                        17%] [Cov:=============>                     39%][Progress:=====>                        17%] [Cov:=============>                     39%][Progress:=====>                        17%] [Cov:=============>                     39%][Progress:=====>                        18%] [Cov:=============>                     39%][Progress:=====>                        18%] [Cov:=============>                     39%][Progress:=====>                        18%] [Cov:=============>                     39%][Progress:=====>                        18%] [Cov:=============>                     39%][Progress:=====>                        18%] [Cov:=============>                     39%][Progress:=====>                        18%] [Cov:=============>                     39%][Progress:=====>                        18%] [Cov:=============>                     39%][Progress:=====>                        19%] [Cov:=============>                     39%][Progress:=====>                        19%] [Cov:=============>                     39%][Progress:=====>                        19%] [Cov:=============>                     39%][Progress:=====>                        19%] [Cov:=============>                     39%][Progress:=====>                        19%] [Cov:=============>                     39%][Progress:=====>                        19%] [Cov:=============>                     39%][Progress:=====>                        19%] [Cov:=============>                     39%][Progress:======>                       20%] [Cov:=============>                     39%][Progress:======>                       20%] [Cov:=============>                     39%][Progress:======>                       20%] [Cov:=============>                     39%][Progress:======>                       20%] [Cov:=============>                     39%][Progress:======>                       20%] [Cov:=============>                     39%][Progress:======>                       20%] [Cov:=============>                     39%][Progress:======>                       20%] [Cov:=============>                     39%][Progress:======>                       20%] [Cov:=============>                     39%][Progress:======>                       20%] [Cov:=============>                     39%][Progress:======>                       21%] [Cov:=============>                     39%][Progress:======>                       21%] [Cov:=============>                     39%][Progress:======>                       21%] [Cov:=============>                     39%][Progress:======>                       21%] [Cov:=============>                     39%][Progress:======>                       21%] [Cov:=============>                     39%][Progress:======>                       21%] [Cov:=============>                     39%][Progress:======>                       22%] [Cov:=============>                     39%][Progress:======>                       22%] [Cov:=============>                     39%][Progress:======>                       22%] [Cov:=============>                     39%][Progress:======>                       22%] [Cov:=============>                     39%][Progress:======>                       22%] [Cov:=============>                     39%][Progress:======>                       22%] [Cov:=============>                     39%][Progress:======>                       22%] [Cov:=============>                     39%][Progress:======>                       22%] [Cov:=============>                     39%][Progress:======>                       22%] [Cov:=============>                     39%][Progress:======>                       23%] [Cov:=============>                     39%][Progress:======>                       23%] [Cov:=============>                     39%][Progress:======>                       23%] [Cov:=============>                     39%][Progress:======>                       23%] [Cov:=============>                     39%][Progress:======>                       23%] [Cov:=============>                     39%][Progress:======>                       23%] [Cov:=============>                     39%][Progress:======>                       23%] [Cov:=============>                     39%][Progress:======>                       23%] [Cov:=============>                     39%][Progress:=======>                      24%] [Cov:=============>                     39%][Progress:=======>                      24%] [Cov:=============>                     39%][Progress:=======>                      24%] [Cov:=============>                     39%][Progress:=======>                      24%] [Cov:=============>                     39%][Progress:=======>                      24%] [Cov:=============>                     39%][Progress:=======>                      24%] [Cov:=============>                     39%][Progress:=======>                      24%] [Cov:=============>                     39%][Progress:=======>                      24%] [Cov:=============>                     39%][Progress:=======>                      24%] [Cov:=============>                     39%][Progress:=======>                      25%] [Cov:=============>                     39%][Progress:=======>                      25%] [Cov:=============>                     39%][Progress:=======>                      25%] [Cov:=============>                     39%][Progress:=======>                      25%] [Cov:=============>                     39%][Progress:=======>                      25%] [Cov:=============>                     39%][Progress:=======>                      25%] [Cov:=============>                     39%][Progress:=======>                      25%] [Cov:=============>                     39%][Progress:=======>                      25%] [Cov:=============>                     39%][Progress:=======>                      26%] [Cov:=============>                     39%][Progress:=======>                      26%] [Cov:=============>                     39%][Progress:=======>                      26%] [Cov:=============>                     39%][Progress:=======>                      26%] [Cov:=============>                     39%][Progress:=======>                      26%] [Cov:=============>                     39%][Progress:=======>                      26%] [Cov:=============>                     39%][Progress:=======>                      26%] [Cov:=============>                     39%][Progress:========>                     27%] [Cov:=============>                     39%][Progress:========>                     27%] [Cov:=============>                     39%][Progress:========>                     27%] [Cov:=============>                     39%][Progress:========>                     27%] [Cov:=============>                     39%][Progress:========>                     27%] [Cov:=============>                     39%][Progress:========>                     27%] [Cov:=============>                     39%][Progress:========>                     27%] [Cov:=============>                     39%][Progress:========>                     27%] [Cov:=============>                     39%][Progress:========>                     28%] [Cov:=============>                     39%][Progress:========>                     28%] [Cov:=============>                     39%][Progress:========>                     28%] [Cov:=============>                     39%][Progress:========>                     28%] [Cov:=============>                     39%][Progress:========>                     28%] [Cov:=============>                     39%][Progress:========>                     28%] [Cov:=============>                     39%][Progress:========>                     28%] [Cov:=============>                     39%][Progress:========>                     28%] [Cov:=============>                     39%][Progress:========>                     29%] [Cov:=============>                     39%][Progress:========>                     29%] [Cov:=============>                     39%][Progress:========>                     29%] [Cov:=============>                     39%][Progress:========>                     29%] [Cov:=============>                     39%][Progress:========>                     29%] [Cov:=============>                     39%][Progress:========>                     29%] [Cov:=============>                     39%][Progress:========>                     29%] [Cov:=============>                     39%][Progress:=========>                    30%] [Cov:=============>                     39%][Progress:=========>                    30%] [Cov:=============>                     39%][Progress:=========>                    30%] [Cov:=============>                     39%][Progress:=========>                    30%] [Cov:=============>                     39%][Progress:=========>                    30%] [Cov:=============>                     39%][Progress:=========>                    30%] [Cov:=============>                     39%][Progress:=========>                    30%] [Cov:=============>                     39%][Progress:=========>                    30%] [Cov:=============>                     39%][Progress:=========>                    30%] [Cov:=============>                     39%][Progress:=========>                    30%] [Cov:=============>                     39%][Progress:=========>                    31%] [Cov:=============>                     39%][Progress:=========>                    31%] [Cov:=============>                     39%][Progress:=========>                    31%] [Cov:=============>                     39%][Progress:=========>                    31%] [Cov:=============>                     39%][Progress:=========>                    31%] [Cov:=============>                     39%][Progress:=========>                    31%] [Cov:=============>                     39%][Progress:=========>                    31%] [Cov:=============>                     39%][Progress:=========>                    31%] [Cov:=============>                     39%][Progress:=========>                    31%] [Cov:=============>                     39%][Progress:=========>                    32%] [Cov:=============>                     39%][Progress:=========>                    32%] [Cov:=============>                     39%][Progress:=========>                    32%] [Cov:=============>                     39%][Progress:=========>                    32%] [Cov:=============>                     39%][Progress:=========>                    32%] [Cov:=============>                     39%][Progress:=========>                    32%] [Cov:=============>                     39%][Progress:=========>                    32%] [Cov:=============>                     39%][Progress:=========>                    32%] [Cov:=============>                     39%][Progress:=========>                    32%] [Cov:=============>                     39%][Progress:=========>                    32%] [Cov:=============>                     39%][Progress:=========>                    32%] [Cov:=============>                     39%][Progress:=========>                    33%] [Cov:=============>                     39%][Progress:=========>                    33%] [Cov:=============>                     39%][Progress:=========>                    33%] [Cov:=============>                     39%][Progress:=========>                    33%] [Cov:=============>                     39%][Progress:=========>                    33%] [Cov:=============>                     39%][Progress:=========>                    33%] [Cov:=============>                     39%][Progress:=========>                    33%] [Cov:=============>                     39%][Progress:=========>                    33%] [Cov:=============>                     39%][Progress:=========>                    33%] [Cov:=============>                     39%][Progress:==========>                   34%] [Cov:=============>                     39%][Progress:==========>                   34%] [Cov:=============>                     39%][Progress:==========>                   34%] [Cov:=============>                     39%][Progress:==========>                   34%] [Cov:=============>                     39%][Progress:==========>                   34%] [Cov:=============>                     39%][Progress:==========>                   34%] [Cov:=============>                     39%][Progress:==========>                   34%] [Cov:=============>                     39%][Progress:==========>                   35%] [Cov:=============>                     39%][Progress:==========>                   35%] [Cov:=============>                     39%][Progress:==========>                   35%] [Cov:=============>                     39%][Progress:==========>                   35%] [Cov:=============>                     39%][Progress:==========>                   35%] [Cov:=============>                     39%][Progress:==========>                   35%] [Cov:=============>                     39%][Progress:==========>                   35%] [Cov:=============>                     39%][Progress:==========>                   35%] [Cov:=============>                     39%][Progress:==========>                   35%] [Cov:=============>                     39%][Progress:==========>                   36%] [Cov:=============>                     39%][Progress:==========>                   36%] [Cov:=============>                     39%][Progress:==========>                   36%] [Cov:=============>                     39%][Progress:==========>                   36%] [Cov:=============>                     39%][Progress:==========>                   36%] [Cov:=============>                     39%][Progress:==========>                   36%] [Cov:=============>                     39%][Progress:==========>                   36%] [Cov:=============>                     39%][Progress:===========>                  37%] [Cov:=============>                     39%][Progress:===========>                  37%] [Cov:=============>                     39%][Progress:===========>                  37%] [Cov:=============>                     39%][Progress:===========>                  37%] [Cov:=============>                     39%][Progress:===========>                  37%] [Cov:=============>                     39%][Progress:===========>                  37%] [Cov:=============>                     39%][Progress:===========>                  37%] [Cov:=============>                     39%][Progress:===========>                  37%] [Cov:=============>                     39%][Progress:===========>                  38%] [Cov:=============>                     39%][Progress:===========>                  38%] [Cov:=============>                     39%][Progress:===========>                  38%] [Cov:=============>                     39%][Progress:===========>                  38%] [Cov:=============>                     39%][Progress:===========>                  38%] [Cov:=============>                     39%][Progress:===========>                  38%] [Cov:=============>                     39%][Progress:===========>                  39%] [Cov:=============>                     39%][Progress:===========>                  39%] [Cov:=============>                     39%][Progress:===========>                  39%] [Cov:=============>                     39%][Progress:===========>                  39%] [Cov:=============>                     39%][Progress:===========>                  39%] [Cov:=============>                     39%][Progress:===========>                  39%] [Cov:=============>                     39%][Progress:===========>                  39%] [Cov:=============>                     39%][Progress:===========>                  39%] [Cov:=============>                     39%][Progress:============>                 40%] [Cov:=============>                     39%][Progress:============>                 40%] [Cov:=============>                     39%][Progress:============>                 40%] [Cov:=============>                     39%][Progress:============>                 40%] [Cov:=============>                     39%][Progress:============>                 40%] [Cov:=============>                     39%][Progress:============>                 40%] [Cov:=============>                     39%][Progress:============>                 40%] [Cov:=============>                     39%][Progress:============>                 40%] [Cov:=============>                     39%][Progress:============>                 40%] [Cov:=============>                     39%][Progress:============>                 40%] [Cov:=============>                     39%][Progress:============>                 41%] [Cov:=============>                     39%][Progress:============>                 41%] [Cov:=============>                     39%][Progress:============>                 41%] [Cov:=============>                     39%][Progress:============>                 41%] [Cov:=============>                     39%][Progress:============>                 41%] [Cov:=============>                     39%][Progress:============>                 41%] [Cov:=============>                     39%][Progress:============>                 41%] [Cov:=============>                     39%][Progress:============>                 41%] [Cov:=============>                     39%][Progress:============>                 42%] [Cov:=============>                     39%][Progress:============>                 42%] [Cov:=============>                     39%][Progress:============>                 42%] [Cov:=============>                     39%][Progress:============>                 42%] [Cov:=============>                     39%][Progress:============>                 42%] [Cov:=============>                     39%][Progress:============>                 42%] [Cov:=============>                     39%][Progress:============>                 42%] [Cov:=============>                     39%][Progress:============>                 43%] [Cov:=============>                     39%][Progress:============>                 43%] [Cov:=============>                     39%][Progress:============>                 43%] [Cov:=============>                     39%][Progress:============>                 43%] [Cov:=============>                     39%][Progress:============>                 43%] [Cov:=============>                     39%][Progress:============>                 43%] [Cov:=============>                     39%][Progress:============>                 43%] [Cov:=============>                     39%][Progress:============>                 43%] [Cov:=============>                     39%][Progress:=============>                44%] [Cov:=============>                     39%][Progress:=============>                44%] [Cov:=============>                     39%][Progress:=============>                44%] [Cov:=============>                     39%][Progress:=============>                44%] [Cov:==============>                    40%][Progress:=============>                44%] [Cov:==============>                    40%][Progress:=============>                44%] [Cov:==============>                    40%][Progress:=============>                44%] [Cov:==============>                    40%][Progress:=============>                45%] [Cov:==============>                    40%][Progress:=============>                45%] [Cov:==============>                    40%][Progress:=============>                45%] [Cov:==============>                    40%][Progress:=============>                45%] [Cov:==============>                    40%][Progress:=============>                45%] [Cov:==============>                    40%][Progress:=============>                45%] [Cov:==============>                    40%][Progress:=============>                45%] [Cov:==============>                    40%][Progress:=============>                45%] [Cov:==============>                    40%][Progress:=============>                45%] [Cov:==============>                    40%][Progress:=============>                45%] [Cov:==============>                    40%][Progress:=============>                46%] [Cov:==============>                    40%][Progress:=============>                46%] [Cov:==============>                    40%][Progress:=============>                46%] [Cov:==============>                    40%][Progress:=============>                46%] [Cov:==============>                    40%][Progress:=============>                46%] [Cov:==============>                    40%][Progress:=============>                46%] [Cov:==============>                    40%][Progress:=============>                46%] [Cov:==============>                    40%][Progress:=============>                46%] [Cov:==============>                    40%][Progress:=============>                46%] [Cov:==============>                    40%][Progress:==============>               47%] [Cov:==============>                    40%][Progress:==============>               47%] [Cov:==============>                    40%][Progress:==============>               47%] [Cov:==============>                    40%][Progress:==============>               47%] [Cov:==============>                    40%][Progress:==============>               47%] [Cov:==============>                    40%][Progress:==============>               47%] [Cov:==============>                    40%][Progress:==============>               47%] [Cov:==============>                    40%][Progress:==============>               47%] [Cov:==============>                    40%][Progress:==============>               47%] [Cov:==============>                    40%][Progress:==============>               48%] [Cov:==============>                    40%][Progress:==============>               48%] [Cov:==============>                    40%][Progress:==============>               48%] [Cov:==============>                    40%][Progress:==============>               48%] [Cov:==============>                    40%][Progress:==============>               48%] [Cov:==============>                    40%][Progress:==============>               48%] [Cov:==============>                    40%][Progress:==============>               48%] [Cov:==============>                    40%][Progress:==============>               48%] [Cov:==============>                    40%][Progress:==============>               48%] [Cov:==============>                    40%][Progress:==============>               48%] [Cov:==============>                    40%][Progress:==============>               49%] [Cov:==============>                    40%][Progress:==============>               49%] [Cov:==============>                    40%][Progress:==============>               49%] [Cov:==============>                    40%][Progress:==============>               49%] [Cov:==============>                    40%][Progress:==============>               49%] [Cov:==============>                    40%][Progress:==============>               49%] [Cov:==============>                    40%][Progress:==============>               49%] [Cov:==============>                    40%][Progress:==============>               49%] [Cov:==============>                    40%][Progress:==============>               49%] [Cov:==============>                    40%][Progress:==============>               49%] [Cov:==============>                    40%][Progress:===============>              50%] [Cov:==============>                    40%][Progress:===============>              50%] [Cov:==============>                    40%][Progress:===============>              50%] [Cov:==============>                    40%][Progress:===============>              50%] [Cov:==============>                    40%][Progress:===============>              50%] [Cov:==============>                    40%][Progress:===============>              50%] [Cov:==============>                    40%][Progress:===============>              50%] [Cov:==============>                    40%][Progress:===============>              50%] [Cov:==============>                    40%][Progress:===============>              50%] [Cov:==============>                    40%][Progress:===============>              50%] [Cov:==============>                    40%][Progress:===============>              51%] [Cov:==============>                    40%][Progress:===============>              51%] [Cov:==============>                    40%][Progress:===============>              51%] [Cov:==============>                    40%][Progress:===============>              51%] [Cov:==============>                    40%][Progress:===============>              51%] [Cov:==============>                    40%][Progress:===============>              51%] [Cov:==============>                    40%][Progress:===============>              51%] [Cov:==============>                    40%][Progress:===============>              51%] [Cov:==============>                    40%][Progress:===============>              51%] [Cov:==============>                    40%][Progress:===============>              52%] [Cov:==============>                    40%][Progress:===============>              52%] [Cov:==============>                    40%][Progress:===============>              52%] [Cov:==============>                    40%][Progress:===============>              52%] [Cov:==============>                    40%][Progress:===============>              52%] [Cov:==============>                    40%][Progress:===============>              52%] [Cov:==============>                    40%][Progress:===============>              52%] [Cov:==============>                    40%][Progress:===============>              52%] [Cov:==============>                    40%][Progress:===============>              53%] [Cov:==============>                    40%][Progress:===============>              53%] [Cov:==============>                    40%][Progress:===============>              53%] [Cov:==============>                    40%][Progress:===============>              53%] [Cov:==============>                    40%][Progress:===============>              53%] [Cov:==============>                    40%][Progress:===============>              53%] [Cov:==============>                    40%][Progress:===============>              53%] [Cov:==============>                    40%][Progress:===============>              53%] [Cov:==============>                    40%][Progress:===============>              53%] [Cov:==============>                    40%][Progress:===============>              53%] [Cov:==============>                    40%][Progress:================>             54%] [Cov:==============>                    40%][Progress:================>             54%] [Cov:==============>                    40%][Progress:================>             54%] [Cov:==============>                    40%][Progress:================>             54%] [Cov:==============>                    40%][Progress:================>             54%] [Cov:==============>                    40%][Progress:================>             54%] [Cov:==============>                    40%][Progress:================>             54%] [Cov:==============>                    40%][Progress:================>             54%] [Cov:==============>                    40%][Progress:================>             55%] [Cov:==============>                    40%][Progress:================>             55%] [Cov:==============>                    40%][Progress:================>             55%] [Cov:==============>                    40%][Progress:================>             55%] [Cov:==============>                    40%][Progress:================>             55%] [Cov:==============>                    40%][Progress:================>             55%] [Cov:==============>                    40%][Progress:================>             55%] [Cov:==============>                    40%][Progress:================>             55%] [Cov:==============>                    40%][Progress:================>             55%] [Cov:==============>                    40%][Progress:================>             56%] [Cov:==============>                    40%][Progress:================>             56%] [Cov:==============>                    40%][Progress:================>             56%] [Cov:==============>                    40%][Progress:================>             56%] [Cov:==============>                    40%][Progress:================>             56%] [Cov:==============>                    40%][Progress:================>             56%] [Cov:==============>                    40%][Progress:================>             56%] [Cov:==============>                    40%][Progress:================>             56%] [Cov:==============>                    40%][Progress:================>             56%] [Cov:==============>                    40%][Progress:================>             56%] [Cov:==============>                    40%][Progress:=================>            57%] [Cov:==============>                    40%][Progress:=================>            57%] [Cov:==============>                    40%][Progress:=================>            57%] [Cov:==============>                    40%][Progress:=================>            57%] [Cov:==============>                    40%][Progress:=================>            57%] [Cov:==============>                    40%][Progress:=================>            57%] [Cov:==============>                    40%][Progress:=================>            57%] [Cov:==============>                    40%][Progress:=================>            57%] [Cov:==============>                    40%][Progress:=================>            58%] [Cov:==============>                    40%][Progress:=================>            58%] [Cov:==============>                    40%][Progress:=================>            58%] [Cov:==============>                    40%][Progress:=================>            58%] [Cov:==============>                    40%][Progress:=================>            58%] [Cov:==============>                    40%][Progress:=================>            58%] [Cov:==============>                    40%][Progress:=================>            58%] [Cov:==============>                    40%][Progress:=================>            58%] [Cov:==============>                    40%][Progress:=================>            58%] [Cov:==============>                    40%][Progress:=================>            59%] [Cov:==============>                    40%][Progress:=================>            59%] [Cov:==============>                    40%][Progress:=================>            59%] [Cov:==============>                    40%][Progress:=================>            59%] [Cov:==============>                    40%][Progress:=================>            59%] [Cov:==============>                    40%][Progress:=================>            59%] [Cov:==============>                    40%][Progress:=================>            59%] [Cov:==============>                    40%][Progress:=================>            59%] [Cov:==============>                    40%][Progress:==================>           60%] [Cov:==============>                    40%][Progress:==================>           60%] [Cov:==============>                    40%][Progress:==================>           60%] [Cov:==============>                    40%][Progress:==================>           60%] [Cov:==============>                    40%][Progress:==================>           60%] [Cov:==============>                    40%][Progress:==================>           60%] [Cov:==============>                    40%][Progress:==================>           60%] [Cov:==============>                    40%][Progress:==================>           61%] [Cov:==============>                    40%][Progress:==================>           61%] [Cov:==============>                    40%][Progress:==================>           61%] [Cov:==============>                    40%][Progress:==================>           61%] [Cov:==============>                    40%][Progress:==================>           61%] [Cov:==============>                    40%][Progress:==================>           61%] [Cov:==============>                    40%][Progress:==================>           61%] [Cov:==============>                    40%][Progress:==================>           61%] [Cov:==============>                    40%][Progress:==================>           62%] [Cov:==============>                    40%][Progress:==================>           62%] [Cov:==============>                    40%][Progress:==================>           62%] [Cov:==============>                    40%][Progress:==================>           62%] [Cov:==============>                    40%][Progress:==================>           62%] [Cov:==============>                    40%][Progress:==================>           62%] [Cov:==============>                    40%][Progress:==================>           62%] [Cov:==============>                    40%][Progress:==================>           62%] [Cov:==============>                    40%][Progress:==================>           63%] [Cov:==============>                    40%][Progress:==================>           63%] [Cov:==============>                    40%][Progress:==================>           63%] [Cov:==============>                    40%][Progress:==================>           63%] [Cov:==============>                    40%][Progress:==================>           63%] [Cov:==============>                    40%][Progress:==================>           63%] [Cov:==============>                    40%][Progress:==================>           63%] [Cov:==============>                    40%][Progress:==================>           63%] [Cov:==============>                    40%][Progress:===================>          64%] [Cov:==============>                    40%][Progress:===================>          64%] [Cov:==============>                    40%][Progress:===================>          64%] [Cov:==============>                    40%][Progress:===================>          64%] [Cov:==============>                    40%][Progress:===================>          64%] [Cov:==============>                    40%][Progress:===================>          64%] [Cov:==============>                    40%][Progress:===================>          64%] [Cov:==============>                    40%][Progress:===================>          64%] [Cov:==============>                    40%][Progress:===================>          65%] [Cov:==============>                    40%][Progress:===================>          65%] [Cov:==============>                    40%][Progress:===================>          65%] [Cov:==============>                    40%][Progress:===================>          65%] [Cov:==============>                    40%][Progress:===================>          65%] [Cov:==============>                    40%][Progress:===================>          65%] [Cov:==============>                    40%][Progress:===================>          65%] [Cov:==============>                    40%][Progress:===================>          65%] [Cov:==============>                    40%][Progress:===================>          65%] [Cov:==============>                    40%][Progress:===================>          66%] [Cov:==============>                    40%][Progress:===================>          66%] [Cov:==============>                    40%][Progress:===================>          66%] [Cov:==============>                    40%][Progress:===================>          66%] [Cov:==============>                    40%][Progress:===================>          66%] [Cov:==============>                    40%][Progress:===================>          66%] [Cov:==============>                    40%][Progress:===================>          66%] [Cov:==============>                    40%][Progress:===================>          66%] [Cov:==============>                    40%][Progress:====================>         67%] [Cov:==============>                    40%][Progress:====================>         67%] [Cov:==============>                    40%][Progress:====================>         67%] [Cov:==============>                    40%][Progress:====================>         67%] [Cov:==============>                    40%][Progress:====================>         67%] [Cov:==============>                    40%][Progress:====================>         67%] [Cov:==============>                    40%][Progress:====================>         67%] [Cov:==============>                    40%][Progress:====================>         67%] [Cov:==============>                    40%][Progress:====================>         67%] [Cov:==============>                    40%][Progress:====================>         68%] [Cov:==============>                    40%][Progress:====================>         68%] [Cov:==============>                    40%][Progress:====================>         68%] [Cov:==============>                    40%][Progress:====================>         68%] [Cov:==============>                    40%][Progress:====================>         68%] [Cov:==============>                    40%][Progress:====================>         68%] [Cov:==============>                    40%][Progress:====================>         68%] [Cov:==============>                    40%][Progress:====================>         68%] [Cov:==============>                    40%][Progress:====================>         68%] [Cov:==============>                    40%][Progress:====================>         69%] [Cov:==============>                    40%][Progress:====================>         69%] [Cov:==============>                    40%][Progress:====================>         69%] [Cov:==============>                    40%][Progress:====================>         69%] [Cov:==============>                    40%][Progress:====================>         69%] [Cov:==============>                    40%][Progress:====================>         69%] [Cov:==============>                    40%][Progress:====================>         69%] [Cov:==============>                    40%][Progress:====================>         69%] [Cov:==============>                    40%][Progress:====================>         69%] [Cov:==============>                    40%][Progress:=====================>        70%] [Cov:==============>                    40%][Progress:=====================>        70%] [Cov:==============>                    40%][Progress:=====================>        70%] [Cov:==============>                    40%][Progress:=====================>        70%] [Cov:==============>                    40%][Progress:=====================>        70%] [Cov:==============>                    40%][Progress:=====================>        70%] [Cov:==============>                    40%][Progress:=====================>        70%] [Cov:==============>                    40%][Progress:=====================>        70%] [Cov:==============>                    40%][Progress:=====================>        70%] [Cov:==============>                    40%][Progress:=====================>        70%] [Cov:==============>                    40%][Progress:=====================>        70%] [Cov:==============>                    40%][Progress:=====================>        71%] [Cov:==============>                    40%][Progress:=====================>        71%] [Cov:==============>                    40%][Progress:=====================>        71%] [Cov:==============>                    40%][Progress:=====================>        71%] [Cov:==============>                    40%][Progress:=====================>        71%] [Cov:==============>                    40%][Progress:=====================>        71%] [Cov:==============>                    40%][Progress:=====================>        71%] [Cov:==============>                    40%][Progress:=====================>        71%] [Cov:==============>                    40%][Progress:=====================>        71%] [Cov:==============>                    40%][Progress:=====================>        71%] [Cov:==============>                    40%][Progress:=====================>        72%] [Cov:==============>                    40%][Progress:=====================>        72%] [Cov:==============>                    40%][Progress:=====================>        72%] [Cov:==============>                    40%][Progress:=====================>        72%] [Cov:==============>                    40%][Progress:=====================>        72%] [Cov:==============>                    40%][Progress:=====================>        72%] [Cov:==============>                    40%][Progress:=====================>        72%] [Cov:==============>                    40%][Progress:=====================>        72%] [Cov:==============>                    40%][Progress:=====================>        73%] [Cov:==============>                    40%][Progress:=====================>        73%] [Cov:==============>                    40%][Progress:=====================>        73%] [Cov:==============>                    40%][Progress:=====================>        73%] [Cov:==============>                    40%][Progress:=====================>        73%] [Cov:==============>                    40%][Progress:=====================>        73%] [Cov:==============>                    40%][Progress:=====================>        73%] [Cov:==============>                    40%][Progress:=====================>        73%] [Cov:==============>                    40%][Progress:======================>       74%] [Cov:==============>                    40%][Progress:======================>       74%] [Cov:==============>                    40%][Progress:======================>       74%] [Cov:==============>                    40%][Progress:======================>       74%] [Cov:==============>                    40%][Progress:======================>       74%] [Cov:==============>                    40%][Progress:======================>       74%] [Cov:==============>                    40%][Progress:======================>       74%] [Cov:==============>                    40%][Progress:======================>       74%] [Cov:==============>                    40%][Progress:======================>       74%] [Cov:==============>                    40%][Progress:======================>       75%] [Cov:==============>                    40%][Progress:======================>       75%] [Cov:==============>                    40%][Progress:======================>       75%] [Cov:==============>                    40%][Progress:======================>       75%] [Cov:==============>                    40%][Progress:======================>       75%] [Cov:==============>                    40%][Progress:======================>       75%] [Cov:==============>                    40%][Progress:======================>       75%] [Cov:==============>                    40%][Progress:======================>       75%] [Cov:==============>                    40%][Progress:======================>       75%] [Cov:==============>                    40%][Progress:======================>       76%] [Cov:==============>                    40%][Progress:======================>       76%] [Cov:==============>                    40%][Progress:======================>       76%] [Cov:==============>                    40%][Progress:======================>       76%] [Cov:==============>                    40%][Progress:======================>       76%] [Cov:==============>                    40%][Progress:======================>       76%] [Cov:==============>                    40%][Progress:======================>       76%] [Cov:==============>                    40%][Progress:======================>       76%] [Cov:==============>                    40%][Progress:=======================>      77%] [Cov:==============>                    40%][Progress:=======================>      77%] [Cov:==============>                    40%][Progress:=======================>      77%] [Cov:==============>                    40%][Progress:=======================>      77%] [Cov:==============>                    40%][Progress:=======================>      77%] [Cov:==============>                    40%][Progress:=======================>      77%] [Cov:==============>                    40%][Progress:=======================>      77%] [Cov:==============>                    40%][Progress:=======================>      77%] [Cov:==============>                    40%][Progress:=======================>      78%] [Cov:==============>                    40%][Progress:=======================>      78%] [Cov:==============>                    40%][Progress:=======================>      78%] [Cov:==============>                    40%][Progress:=======================>      78%] [Cov:==============>                    40%][Progress:=======================>      78%] [Cov:==============>                    40%][Progress:=======================>      78%] [Cov:==============>                    40%][Progress:=======================>      78%] [Cov:==============>                    40%][Progress:=======================>      78%] [Cov:==============>                    40%][Progress:=======================>      78%] [Cov:==============>                    40%][Progress:=======================>      78%] [Cov:==============>                    40%][Progress:=======================>      79%] [Cov:==============>                    40%][Progress:=======================>      79%] [Cov:==============>                    40%][Progress:=======================>      79%] [Cov:==============>                    40%][Progress:=======================>      79%] [Cov:==============>                    40%][Progress:=======================>      79%] [Cov:==============>                    40%][Progress:=======================>      79%] [Cov:==============>                    40%][Progress:=======================>      79%] [Cov:==============>                    40%][Progress:=======================>      79%] [Cov:==============>                    40%][Progress:=======================>      79%] [Cov:==============>                    40%][Progress:========================>     80%] [Cov:==============>                    40%][Progress:========================>     80%] [Cov:==============>                    40%][Progress:========================>     80%] [Cov:==============>                    40%][Progress:========================>     80%] [Cov:==============>                    40%][Progress:========================>     80%] [Cov:==============>                    40%][Progress:========================>     80%] [Cov:==============>                    40%][Progress:========================>     80%] [Cov:==============>                    40%][Progress:========================>     80%] [Cov:==============>                    40%][Progress:========================>     81%] [Cov:==============>                    40%][Progress:========================>     81%] [Cov:==============>                    40%][Progress:========================>     81%] [Cov:==============>                    40%][Progress:========================>     81%] [Cov:==============>                    40%][Progress:========================>     81%] [Cov:==============>                    40%][Progress:========================>     81%] [Cov:==============>                    40%][Progress:========================>     81%] [Cov:==============>                    40%][Progress:========================>     81%] [Cov:==============>                    40%][Progress:========================>     81%] [Cov:==============>                    40%][Progress:========================>     82%] [Cov:==============>                    40%][Progress:========================>     82%] [Cov:==============>                    40%][Progress:========================>     82%] [Cov:==============>                    40%][Progress:========================>     82%] [Cov:==============>                    40%][Progress:========================>     82%] [Cov:==============>                    40%][Progress:========================>     82%] [Cov:==============>                    40%][Progress:========================>     82%] [Cov:==============>                    40%][Progress:========================>     82%] [Cov:==============>                    40%][Progress:========================>     82%] [Cov:==============>                    40%][Progress:========================>     83%] [Cov:==============>                    40%][Progress:========================>     83%] [Cov:==============>                    40%][Progress:========================>     83%] [Cov:==============>                    40%][Progress:========================>     83%] [Cov:==============>                    40%][Progress:========================>     83%] [Cov:==============>                    40%][Progress:========================>     83%] [Cov:==============>                    40%][Progress:========================>     83%] [Cov:==============>                    40%][Progress:========================>     83%] [Cov:==============>                    40%][Progress:========================>     83%] [Cov:==============>                    40%][Progress:=========================>    84%] [Cov:==============>                    40%][Progress:=========================>    84%] [Cov:==============>                    40%][Progress:=========================>    84%] [Cov:==============>                    40%][Progress:=========================>    84%] [Cov:==============>                    40%][Progress:=========================>    84%] [Cov:==============>                    40%][Progress:=========================>    84%] [Cov:==============>                    40%][Progress:=========================>    84%] [Cov:==============>                    40%][Progress:=========================>    84%] [Cov:==============>                    40%][Progress:=========================>    84%] [Cov:==============>                    40%][Progress:=========================>    85%] [Cov:==============>                    40%][Progress:=========================>    85%] [Cov:==============>                    40%][Progress:=========================>    85%] [Cov:==============>                    40%][Progress:=========================>    85%] [Cov:==============>                    40%][Progress:=========================>    85%] [Cov:==============>                    40%][Progress:=========================>    85%] [Cov:==============>                    40%][Progress:=========================>    85%] [Cov:==============>                    40%][Progress:=========================>    85%] [Cov:==============>                    40%][Progress:=========================>    85%] [Cov:==============>                    40%][Progress:=========================>    86%] [Cov:==============>                    40%][Progress:=========================>    86%] [Cov:==============>                    40%][Progress:=========================>    86%] [Cov:==============>                    40%][Progress:=========================>    86%] [Cov:==============>                    40%][Progress:=========================>    86%] [Cov:==============>                    40%][Progress:=========================>    86%] [Cov:==============>                    40%][Progress:=========================>    86%] [Cov:==============>                    40%][Progress:=========================>    86%] [Cov:==============>                    40%][Progress:==========================>   87%] [Cov:==============>                    40%][Progress:==========================>   87%] [Cov:==============>                    40%][Progress:==========================>   87%] [Cov:==============>                    40%][Progress:==========================>   87%] [Cov:==============>                    40%][Progress:==========================>   87%] [Cov:==============>                    40%][Progress:==========================>   87%] [Cov:==============>                    40%][Progress:==========================>   87%] [Cov:==============>                    40%][Progress:==========================>   88%] [Cov:==============>                    40%][Progress:==========================>   88%] [Cov:==============>                    40%][Progress:==========================>   88%] [Cov:==============>                    40%][Progress:==========================>   88%] [Cov:==============>                    40%][Progress:==========================>   88%] [Cov:==============>                    40%][Progress:==========================>   88%] [Cov:==============>                    40%][Progress:==========================>   89%] [Cov:==============>                    40%][Progress:==========================>   89%] [Cov:==============>                    40%][Progress:==========================>   89%] [Cov:==============>                    40%][Progress:==========================>   89%] [Cov:==============>                    40%][Progress:==========================>   89%] [Cov:==============>                    40%][Progress:===========================>  90%] [Cov:==============>                    40%][Progress:===========================>  90%] [Cov:==============>                    40%][Progress:===========================>  90%] [Cov:==============>                    40%][Progress:===========================>  90%] [Cov:==============>                    40%][Progress:===========================>  90%] [Cov:==============>                    40%][Progress:===========================>  91%] [Cov:==============>                    40%][Progress:===========================>  91%] [Cov:==============>                    40%][Progress:===========================>  91%] [Cov:==============>                    40%][Progress:===========================>  91%] [Cov:==============>                    40%][Progress:===========================>  91%] [Cov:==============>                    40%][Progress:===========================>  91%] [Cov:==============>                    40%][Progress:===========================>  92%] [Cov:==============>                    40%][Progress:===========================>  92%] [Cov:==============>                    40%][Progress:===========================>  92%] [Cov:==============>                    40%][Progress:===========================>  92%] [Cov:==============>                    40%][Progress:===========================>  92%] [Cov:==============>                    40%][Progress:===========================>  92%] [Cov:==============>                    40%][Progress:===========================>  93%] [Cov:==============>                    40%][Progress:===========================>  93%] [Cov:==============>                    40%][Progress:===========================>  93%] [Cov:==============>                    40%][Progress:===========================>  93%] [Cov:==============>                    40%][Progress:===========================>  93%] [Cov:==============>                    40%][Progress:===========================>  93%] [Cov:==============>                    40%][Progress:============================> 94%] [Cov:==============>                    40%][Progress:============================> 94%] [Cov:==============>                    40%][Progress:============================> 94%] [Cov:==============>                    40%][Progress:============================> 94%] [Cov:==============>                    40%][Progress:============================> 95%] [Cov:==============>                    40%][Progress:============================> 95%] [Cov:==============>                    40%][Progress:============================> 95%] [Cov:==============>                    40%][Progress:============================> 95%] [Cov:==============>                    40%][Progress:============================> 96%] [Cov:==============>                    40%][Progress:============================> 96%] [Cov:==============>                    40%][Progress:============================> 96%] [Cov:==============>                    40%][Progress:============================> 96%] [Cov:==============>                    40%][Progress:============================> 96%] [Cov:==============>                    40%][Progress:=============================>97%] [Cov:==============>                    40%][Progress:=============================>97%] [Cov:==============>                    40%][Progress:=============================>97%] [Cov:==============>                    40%][Progress:=============================>97%] [Cov:==============>                    40%][Progress:=============================>98%] [Cov:==============>                    40%][Progress:=============================>98%] [Cov:==============>                    40%][Progress:=============================>98%] [Cov:==============>                    40%][Progress:=============================>98%] [Cov:==============>                    40%][Progress:=============================>98%] [Cov:==============>                    40%][Progress:=============================>99%] [Cov:==============>                    40%][Progress:=============================>99%] [Cov:==============>                    40%][Progress:=============================>99%] [Cov:==============>                    40%][Progress:=============================>99%] [Cov:==============>                    40%][Progress:=============================>99%] [Cov:==============>                    40%][Progress:=============================>99%] [Cov:==============>                    40%][Progress:==============================100%] [Cov:==============>                    40%][Progress:==============================100%] [Cov:==============>                    40%][Progress:==============================100%] [Cov:==============>                    40%][Progress:==============================100%] [Cov:==============>                    40%][Progress:==============================100%] [Cov:==============>                    40%][Progress:==============================100%] [Cov:==============>                    40%][Progress:==============================100%] [Cov:==============>                    40%][Progress:==============================100%] [Cov:==============>                    40%][Progress:==============================100%] [Cov:==============>                    40%][Progress:==============================100%] [Cov:==============>                    40%][Progress:==============================100%] [Cov:==============>                    40%]
* Search finished after 102s and 740 generations, 176727 statements, best individual has fitness: 2577.0
* Generated before the refinement 27 tests with total length 106
statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;") type is: class org.evosuite.testcase.statements.environment.FileNamePrimitiveStatement return type class org.evosuite.runtime.testdata.EvoSuiteFile
statement code is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;")
statement is: appendLineToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean appendLineToFile = FileSystemHandling.appendLineToFile(arg0, "<>")
statement is: Scanner(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class Scanner
statement code is: Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;")
test data is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;");
FileSystemHandling.appendLineToFile(evoSuiteFile, "<>");
Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        EvoSuiteFile evoSuiteFile = new EvoSuiteFile("example.txt");
        FileSystemHandling.appendLineToFile(evoSuiteFile, "Hello World!");
        Scanner scanner = new Scanner("example.txt");
    }
}
statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("example.txt"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: FileSystemHandling.appendLineToFile(evoSuiteFile, "Hello World!"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: FileSystemHandling.appendLineToFile(evoSuiteFile, "Hello World!") target is: FileSystemHandling method is: appendLineToFile(EvoSuiteFile,java.lang.String)
Matched Method is: appendLineToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;Ljava/lang/String;)Z
i 1 Parameters size() 1 Num of Method Parameters: 2
statement is: Scanner scanner = new Scanner("example.txt"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase is: String string = "Hello World!";
String string = null;
FileSystemHandling.appendLineToFile((EvoSuiteFile) string, string);
String string = "example.txt";
Scanner scanner = new Scanner(string);

statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;") type is: class org.evosuite.testcase.statements.environment.FileNamePrimitiveStatement return type class org.evosuite.runtime.testdata.EvoSuiteFile
statement code is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;")
statement is: appendStringToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean appendStringToFile = FileSystemHandling.appendStringToFile(arg0, "PROGRAM")
statement is: Scanner(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class Scanner
statement code is: Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;")
test data is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;");
FileSystemHandling.appendStringToFile(evoSuiteFile, "PROGRAM");
Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        EvoSuiteFile evoSuiteFile = new EvoSuiteFile("input_file.txt");
        FileSystemHandling.appendStringToFile(evoSuiteFile, "PROGRAM");
        Scanner scanner = new Scanner("A sample input string.");
    }
}
statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("input_file.txt"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: FileSystemHandling.appendStringToFile(evoSuiteFile, "PROGRAM"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: FileSystemHandling.appendStringToFile(evoSuiteFile, "PROGRAM") target is: FileSystemHandling method is: appendStringToFile(EvoSuiteFile,java.lang.String)
Matched Method is: appendStringToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;Ljava/lang/String;)Z
i 1 Parameters size() 1 Num of Method Parameters: 2
statement is: Scanner scanner = new Scanner("A sample input string."), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase is: String string = "PROGRAM";
String string = null;
FileSystemHandling.appendStringToFile((EvoSuiteFile) string, string);
String string = "A sample input string.";
Scanner scanner = new Scanner(string);

statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;") type is: class org.evosuite.testcase.statements.environment.FileNamePrimitiveStatement return type class org.evosuite.runtime.testdata.EvoSuiteFile
statement code is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;")
statement is: appendStringToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean appendStringToFile = FileSystemHandling.appendStringToFile(arg0, "AP0WL*i/h96Qa1v\"")
statement is: Scanner(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class Scanner
statement code is: Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;")
test data is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;");
FileSystemHandling.appendStringToFile(evoSuiteFile, "AP0WL*i/h96Qa1v\"");
Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        EvoSuiteFile evoSuiteFile = new EvoSuiteFile("My Test File.txt");
        FileSystemHandling.appendStringToFile(evoSuiteFile, "Hello World!");
        Scanner scanner = new Scanner("This is a test file.");
    }
}
statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("My Test File.txt"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: FileSystemHandling.appendStringToFile(evoSuiteFile, "Hello World!"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: FileSystemHandling.appendStringToFile(evoSuiteFile, "Hello World!") target is: FileSystemHandling method is: appendStringToFile(EvoSuiteFile,java.lang.String)
Matched Method is: appendStringToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;Ljava/lang/String;)Z
i 1 Parameters size() 1 Num of Method Parameters: 2
statement is: Scanner scanner = new Scanner("This is a test file."), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase is: String string = "Hello World!";
String string = null;
FileSystemHandling.appendStringToFile((EvoSuiteFile) string, string);
String string = "This is a test file.";
Scanner scanner = new Scanner(string);

statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;") type is: class org.evosuite.testcase.statements.environment.FileNamePrimitiveStatement return type class org.evosuite.runtime.testdata.EvoSuiteFile
statement code is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;")
statement is: appendStringToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean appendStringToFile = FileSystemHandling.appendStringToFile(arg0, "\"]P.B\"dvuQMx%i<")
statement is: Scanner(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class Scanner
statement code is: Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;")
test data is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;");
FileSystemHandling.appendStringToFile(evoSuiteFile, "\"]P.B\"dvuQMx%i<");
Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;");
        FileSystemHandling.appendStringToFile(evoSuiteFile, "\"]P.B\"dvuQMx%i<");
        Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;");
    }
}
statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: FileSystemHandling.appendStringToFile(evoSuiteFile, "\"]P.B\"dvuQMx%i<"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: FileSystemHandling.appendStringToFile(evoSuiteFile, "\"]P.B\"dvuQMx%i<") target is: FileSystemHandling method is: appendStringToFile(EvoSuiteFile,java.lang.String)
Matched Method is: appendStringToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;Ljava/lang/String;)Z
i 1 Parameters size() 1 Num of Method Parameters: 2
statement is: Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase is: String string = "\"]P.B\"dvuQMx%i<";
String string = null;
FileSystemHandling.appendStringToFile((EvoSuiteFile) string, string);
String string = "&k6K!G=:! t<,N>V;";
Scanner scanner = new Scanner(string);

statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;") type is: class org.evosuite.testcase.statements.environment.FileNamePrimitiveStatement return type class org.evosuite.runtime.testdata.EvoSuiteFile
statement code is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;")
statement is: appendLineToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean appendLineToFile = FileSystemHandling.appendLineToFile(arg0, "0Etr/'&+")
statement is: Scanner(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class Scanner
statement code is: Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;")
test data is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;");
FileSystemHandling.appendLineToFile(evoSuiteFile, "0Etr/'&+");
Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        EvoSuiteFile evoSuiteFile = new EvoSuiteFile("Test file.txt");
        FileSystemHandling.appendLineToFile(evoSuiteFile, "Hello world!");
        Scanner scanner = new Scanner("This is a test string.");
    }
}
statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("Test file.txt"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: FileSystemHandling.appendLineToFile(evoSuiteFile, "Hello world!"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: FileSystemHandling.appendLineToFile(evoSuiteFile, "Hello world!") target is: FileSystemHandling method is: appendLineToFile(EvoSuiteFile,java.lang.String)
Matched Method is: appendLineToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;Ljava/lang/String;)Z
i 1 Parameters size() 1 Num of Method Parameters: 2
statement is: Scanner scanner = new Scanner("This is a test string."), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase is: String string = "Hello world!";
String string = null;
FileSystemHandling.appendLineToFile((EvoSuiteFile) string, string);
String string = "This is a test string.";
Scanner scanner = new Scanner(string);

statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;") type is: class org.evosuite.testcase.statements.environment.FileNamePrimitiveStatement return type class org.evosuite.runtime.testdata.EvoSuiteFile
statement code is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;")
statement is: appendStringToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean appendStringToFile = FileSystemHandling.appendStringToFile(arg0, "k7bkf=q~x2|O$}0")
statement is: Scanner(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class Scanner
statement code is: Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;")
test data is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;");
FileSystemHandling.appendStringToFile(evoSuiteFile, "k7bkf=q~x2|O$}0");
Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        EvoSuiteFile evoSuiteFile = new EvoSuiteFile("TestDataFile.txt");
        FileSystemHandling.appendStringToFile(evoSuiteFile, "This is a test string for the Scanner class.");
        Scanner scanner = new Scanner("This is a test string for the Scanner class.");
    }
}
statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("TestDataFile.txt"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: FileSystemHandling.appendStringToFile(evoSuiteFile, "This is a test string for the Scanner class."), class spoon.support.reflect.code.CtInvocationImpl
invocation is: FileSystemHandling.appendStringToFile(evoSuiteFile, "This is a test string for the Scanner class.") target is: FileSystemHandling method is: appendStringToFile(EvoSuiteFile,java.lang.String)
Matched Method is: appendStringToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;Ljava/lang/String;)Z
i 1 Parameters size() 1 Num of Method Parameters: 2
statement is: Scanner scanner = new Scanner("This is a test string for the Scanner class."), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase is: String string = "This is a test string for the Scanner class.";
String string = null;
FileSystemHandling.appendStringToFile((EvoSuiteFile) string, string);
String string = "This is a test string for the Scanner class.";
Scanner scanner = new Scanner(string);

statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;") type is: class org.evosuite.testcase.statements.environment.FileNamePrimitiveStatement return type class org.evosuite.runtime.testdata.EvoSuiteFile
statement code is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;")
statement is: appendLineToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean appendLineToFile = FileSystemHandling.appendLineToFile(arg0, "PR.ruGRAM")
statement is: Scanner(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class Scanner
statement code is: Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;")
test data is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;");
FileSystemHandling.appendLineToFile(evoSuiteFile, "PR.ruGRAM");
Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        EvoSuiteFile evoSuiteFile = new EvoSuiteFile("myfile.txt");
        FileSystemHandling.appendLineToFile(evoSuiteFile, "PR.ruGRAM");
        Scanner scanner = new Scanner("myfile.txt");
    }
}
statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("myfile.txt"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: FileSystemHandling.appendLineToFile(evoSuiteFile, "PR.ruGRAM"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: FileSystemHandling.appendLineToFile(evoSuiteFile, "PR.ruGRAM") target is: FileSystemHandling method is: appendLineToFile(EvoSuiteFile,java.lang.String)
Matched Method is: appendLineToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;Ljava/lang/String;)Z
i 1 Parameters size() 1 Num of Method Parameters: 2
statement is: Scanner scanner = new Scanner("myfile.txt"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase is: String string = "PR.ruGRAM";
String string = null;
FileSystemHandling.appendLineToFile((EvoSuiteFile) string, string);
String string = "myfile.txt";
Scanner scanner = new Scanner(string);

statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;") type is: class org.evosuite.testcase.statements.environment.FileNamePrimitiveStatement return type class org.evosuite.runtime.testdata.EvoSuiteFile
statement code is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;")
statement is: appendStringToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean appendStringToFile = FileSystemHandling.appendStringToFile(arg0, "5.@53Y'WuAbV?+o")
statement is: Scanner(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class Scanner
statement code is: Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;")
test data is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;");
FileSystemHandling.appendStringToFile(evoSuiteFile, "5.@53Y'WuAbV?+o");
Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        EvoSuiteFile evoSuiteFile = new EvoSuiteFile("fileContent");
        FileSystemHandling.appendStringToFile(evoSuiteFile, "10.@53Y'WuAbV?+o");
        Scanner scanner = new Scanner("testData");
    }
}
statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("fileContent"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: FileSystemHandling.appendStringToFile(evoSuiteFile, "10.@53Y'WuAbV?+o"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: FileSystemHandling.appendStringToFile(evoSuiteFile, "10.@53Y'WuAbV?+o") target is: FileSystemHandling method is: appendStringToFile(EvoSuiteFile,java.lang.String)
Matched Method is: appendStringToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;Ljava/lang/String;)Z
i 1 Parameters size() 1 Num of Method Parameters: 2
statement is: Scanner scanner = new Scanner("testData"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase is: String string = "10.@53Y'WuAbV?+o";
String string = null;
FileSystemHandling.appendStringToFile((EvoSuiteFile) string, string);
String string = "testData";
Scanner scanner = new Scanner(string);

statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;") type is: class org.evosuite.testcase.statements.environment.FileNamePrimitiveStatement return type class org.evosuite.runtime.testdata.EvoSuiteFile
statement code is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;")
statement is: appendLineToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean appendLineToFile = FileSystemHandling.appendLineToFile(arg0, "expected: END. at theGend _f program")
statement is: Scanner(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class Scanner
statement code is: Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;")
test data is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;");
FileSystemHandling.appendLineToFile(evoSuiteFile, "expected: END. at theGend _f program");
Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        EvoSuiteFile evoSuiteFile = new EvoSuiteFile("test_file.txt");
        FileSystemHandling.appendLineToFile(evoSuiteFile, "expected: END. at the end of the file");
        Scanner scanner = new Scanner(new File("test_file.txt"));
    }
}
statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("test_file.txt"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: FileSystemHandling.appendLineToFile(evoSuiteFile, "expected: END. at the end of the file"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: FileSystemHandling.appendLineToFile(evoSuiteFile, "expected: END. at the end of the file") target is: FileSystemHandling method is: appendLineToFile(EvoSuiteFile,java.lang.String)
Matched Method is: appendLineToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;Ljava/lang/String;)Z
i 1 Parameters size() 1 Num of Method Parameters: 2
statement is: Scanner scanner = new Scanner(new File("test_file.txt")), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase is: String string = "expected: END. at the end of the file";
String string = null;
FileSystemHandling.appendLineToFile((EvoSuiteFile) string, string);
Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;");

statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;") type is: class org.evosuite.testcase.statements.environment.FileNamePrimitiveStatement return type class org.evosuite.runtime.testdata.EvoSuiteFile
statement code is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;")
statement is: org.evosuite.testcase.statements.ArrayStatement@bfde1675 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[5]
statement is: org.evosuite.testcase.statements.AssignmentStatement@da059827 type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[0] = (byte)9
statement is: appendDataToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;[B)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean appendDataToFile = FileSystemHandling.appendDataToFile(arg0, arg1)
statement is: Scanner(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class Scanner
statement code is: Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;")
test data is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;");
byte[] byteArray = new byte[5];
byteArray[0] = (byte)9;
FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        EvoSuiteFile evoSuiteFile = new EvoSuiteFile("myfile.txt");
        byte[] byteArray = new byte[5];
        byteArray[0] = ((byte) (9));
        FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
        Scanner scanner = new Scanner("This is a test string for file reading.");
    }
}
statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("myfile.txt"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: byte[] byteArray = new byte[5], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [5] Ct is: byte[] byteArray = new byte[5] isAssignment: false Array: new byte[5] Elements: []
lengths: [5] [5]
Their type are: class [B byte[]
statement is: byteArray[0] = ((byte) (9)), class spoon.support.reflect.code.CtAssignmentImpl
Assigned : byteArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl byte Assignment:((byte) (9)) Ct is: byteArray[0] = ((byte) (9))
target : byteArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@eb2fde56
statement is: FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray) target is: FileSystemHandling method is: appendDataToFile(EvoSuiteFile,byte[])
Matched Method is: appendDataToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;[B)Z
i 1 Parameters size() 1 Num of Method Parameters: 2
statement is: Scanner scanner = new Scanner("This is a test string for file reading."), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
* this is vulnerable: int _int = 9
TestCase is: byte[] byteArray = new byte[5];
int _int = 9;
byte[] byteArray = null;
FileSystemHandling.appendDataToFile((EvoSuiteFile) byteArray, byteArray);
String string = "This is a test string for file reading.";
Scanner scanner = new Scanner(string);

statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;") type is: class org.evosuite.testcase.statements.environment.FileNamePrimitiveStatement return type class org.evosuite.runtime.testdata.EvoSuiteFile
statement code is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;")
statement is: org.evosuite.testcase.statements.ArrayStatement@fe9b860d type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[3]
statement is: org.evosuite.testcase.statements.AssignmentStatement@f72db7d3 type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[0] = (byte)13
statement is: appendDataToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;[B)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean appendDataToFile = FileSystemHandling.appendDataToFile(arg0, arg1)
statement is: Scanner(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class Scanner
statement code is: Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;")
test data is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;");
byte[] byteArray = new byte[3];
byteArray[0] = (byte)13;
FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        EvoSuiteFile evoSuiteFile = new EvoSuiteFile("example.txt");
        byte[] byteArray = new byte[3];
        byteArray[0] = ((byte) (13));// This is a carriage return character (\r), which is often used to indicate the end of a line in a text file.

        FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
        Scanner scanner = new Scanner("example.txt");
    }
}
statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("example.txt"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: byte[] byteArray = new byte[3], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [3] Ct is: byte[] byteArray = new byte[3] isAssignment: false Array: new byte[3] Elements: []
lengths: [3] [3]
Their type are: class [B byte[]
statement is: byteArray[0] = ((byte) (13))// This is a carriage return character (\r), which is often used to indicate the end of a line in a text file.
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : byteArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl byte Assignment:((byte) (13)) Ct is: byteArray[0] = ((byte) (13))// This is a carriage return character (\r), which is often used to indicate the end of a line in a text file.

target : byteArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@97fab1e4
statement is: FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray) target is: FileSystemHandling method is: appendDataToFile(EvoSuiteFile,byte[])
Matched Method is: appendDataToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;[B)Z
i 1 Parameters size() 1 Num of Method Parameters: 2
statement is: Scanner scanner = new Scanner("example.txt"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
* this is vulnerable: int _int = 13
TestCase is: byte[] byteArray = new byte[3];
int _int = 13;
byte[] byteArray = null;
FileSystemHandling.appendDataToFile((EvoSuiteFile) byteArray, byteArray);
String string = "example.txt";
Scanner scanner = new Scanner(string);

statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;") type is: class org.evosuite.testcase.statements.environment.FileNamePrimitiveStatement return type class org.evosuite.runtime.testdata.EvoSuiteFile
statement code is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;")
statement is: appendStringToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean appendStringToFile = FileSystemHandling.appendStringToFile(arg0, "&k6K!G=:! t<,N>V;")
statement is: Scanner(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class Scanner
statement code is: Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;")
statement is: java.util.ArrayList()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type java.util.ArrayList<java.lang.Object>
statement code is: ArrayList<Object> arrayList = new ArrayList<Object>()
statement is: printLexems(Ljava/util/ArrayList;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: scanner.printLexems(arg0)
test data is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;");
FileSystemHandling.appendStringToFile(evoSuiteFile, "&k6K!G=:! t<,N>V;");
Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;");
ArrayList<Object> arrayList = new ArrayList<Object>();
scanner.printLexems(arrayList);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        EvoSuiteFile evoSuiteFile = new EvoSuiteFile("The quick brown fox jumps over the lazy dog.");
        FileSystemHandling.appendStringToFile(evoSuiteFile, "The quick brown fox jumps over the lazy dog.");
        Scanner scanner = new Scanner("The quick brown fox jumps over the lazy dog.");
        ArrayList<Object> arrayList = new ArrayList<Object>();
        scanner.printLexems(arrayList);
    }
}
statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("The quick brown fox jumps over the lazy dog."), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: FileSystemHandling.appendStringToFile(evoSuiteFile, "The quick brown fox jumps over the lazy dog."), class spoon.support.reflect.code.CtInvocationImpl
invocation is: FileSystemHandling.appendStringToFile(evoSuiteFile, "The quick brown fox jumps over the lazy dog.") target is: FileSystemHandling method is: appendStringToFile(EvoSuiteFile,java.lang.String)
Matched Method is: appendStringToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;Ljava/lang/String;)Z
i 1 Parameters size() 1 Num of Method Parameters: 2
statement is: Scanner scanner = new Scanner("The quick brown fox jumps over the lazy dog."), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ArrayList<Object> arrayList = new ArrayList<Object>(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: scanner.printLexems(arrayList), class spoon.support.reflect.code.CtInvocationImpl
invocation is: scanner.printLexems(arrayList) target is: scanner method is: printLexems(ArrayList)
source statement: Scanner(Ljava/lang/String;)V callee: VariableReference: Statement 2, type Scannerindex is: 4
Matched Method is: printLexems(Ljava/util/ArrayList;)V
TestCase is: String string = "The quick brown fox jumps over the lazy dog.";
String string = null;
boolean appendStringToFile = FileSystemHandling.appendStringToFile((EvoSuiteFile) string, string);
String string = "The quick brown fox jumps over the lazy dog.";
Scanner scanner = new Scanner(string);
ArrayList<Object> arrayList = new ArrayList<Object>();
((Scanner) appendStringToFile).printLexems(arrayList);

statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;") type is: class org.evosuite.testcase.statements.environment.FileNamePrimitiveStatement return type class org.evosuite.runtime.testdata.EvoSuiteFile
statement code is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;")
statement is: appendLineToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean appendLineToFile = FileSystemHandling.appendLineToFile(arg0, "TRUE")
statement is: Scanner(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class Scanner
statement code is: Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;")
test data is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;");
FileSystemHandling.appendLineToFile(evoSuiteFile, "TRUE");
Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        EvoSuiteFile evoSuiteFile = new EvoSuiteFile("example.txt");
        FileSystemHandling.appendLineToFile(evoSuiteFile, "This is a test string with multiple lines and special characters like !@#$%^&*()_+-=[]{}|;\':\"<>,./?`~.");
        Scanner scanner = new Scanner(new FileInputStream(evoSuiteFile));
    }
}
statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("example.txt"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: FileSystemHandling.appendLineToFile(evoSuiteFile, "This is a test string with multiple lines and special characters like !@#$%^&*()_+-=[]{}|;\':\"<>,./?`~."), class spoon.support.reflect.code.CtInvocationImpl
invocation is: FileSystemHandling.appendLineToFile(evoSuiteFile, "This is a test string with multiple lines and special characters like !@#$%^&*()_+-=[]{}|;\':\"<>,./?`~.") target is: FileSystemHandling method is: appendLineToFile(EvoSuiteFile,java.lang.String)
Matched Method is: appendLineToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;Ljava/lang/String;)Z
i 1 Parameters size() 1 Num of Method Parameters: 2
statement is: Scanner scanner = new Scanner(new FileInputStream(evoSuiteFile)), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase is: String string = "This is a test string with multiple lines and special characters like !@#$%^&*()_+-=[]{}|;':\"<>,./?`~.";
String string = null;
FileSystemHandling.appendLineToFile((EvoSuiteFile) string, string);
Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;");

statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;") type is: class org.evosuite.testcase.statements.environment.FileNamePrimitiveStatement return type class org.evosuite.runtime.testdata.EvoSuiteFile
statement code is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;")
statement is: appendLineToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean appendLineToFile = FileSystemHandling.appendLineToFile(arg0, "expected: PROGRAM\n   found: =\n   line: 1\n   column: 1")
statement is: Scanner(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class Scanner
statement code is: Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;")
statement is: java.util.ArrayList()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type java.util.ArrayList<java.lang.Object>
statement code is: ArrayList<Object> arrayList = new ArrayList<Object>()
statement is: advScanning(Ljava/util/ArrayList;)Ljava/util/ArrayList; type is: class org.evosuite.testcase.statements.MethodStatement return type java.util.ArrayList<E>
statement code is: ArrayList advScanning = scanner.advScanning(arg0)
test data is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;");
FileSystemHandling.appendLineToFile(evoSuiteFile, "expected: PROGRAM\n   found: =\n   line: 1\n   column: 1");
Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;");
ArrayList<Object> arrayList = new ArrayList<Object>();
scanner.advScanning(arrayList);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;");
        FileSystemHandling.appendLineToFile(evoSuiteFile, "expected: PROGRAM\n   found: =\n   line: 1\n   column: 1");
        Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;");
        ArrayList<Object> arrayList = new ArrayList<Object>();
        scanner.advScanning(arrayList);
    }
}
statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: FileSystemHandling.appendLineToFile(evoSuiteFile, "expected: PROGRAM\n   found: =\n   line: 1\n   column: 1"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: FileSystemHandling.appendLineToFile(evoSuiteFile, "expected: PROGRAM\n   found: =\n   line: 1\n   column: 1") target is: FileSystemHandling method is: appendLineToFile(EvoSuiteFile,java.lang.String)
Matched Method is: appendLineToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;Ljava/lang/String;)Z
i 1 Parameters size() 1 Num of Method Parameters: 2
statement is: Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ArrayList<Object> arrayList = new ArrayList<Object>(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: scanner.advScanning(arrayList), class spoon.support.reflect.code.CtInvocationImpl
invocation is: scanner.advScanning(arrayList) target is: scanner method is: advScanning(ArrayList)
source statement: Scanner(Ljava/lang/String;)V callee: VariableReference: Statement 2, type Scannerindex is: 4
Matched Method is: advScanning(Ljava/util/ArrayList;)Ljava/util/ArrayList;
TestCase is: String string = "expected: PROGRAM\n   found: =\n   line: 1\n   column: 1";
String string = null;
boolean appendLineToFile = FileSystemHandling.appendLineToFile((EvoSuiteFile) string, string);
String string = "&k6K!G=:! t<,N>V;";
Scanner scanner = new Scanner(string);
ArrayList<Object> arrayList = new ArrayList<Object>();
((Scanner) appendLineToFile).advScanning(arrayList);

statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;") type is: class org.evosuite.testcase.statements.environment.FileNamePrimitiveStatement return type class org.evosuite.runtime.testdata.EvoSuiteFile
statement code is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;")
statement is: appendStringToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean appendStringToFile = FileSystemHandling.appendStringToFile(arg0, "<=")
statement is: Scanner(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class Scanner
statement code is: Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;")
test data is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;");
FileSystemHandling.appendStringToFile(evoSuiteFile, "<=");
Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        EvoSuiteFile evoSuiteFile = new EvoSuiteFile("my_file.txt");
        FileSystemHandling.appendStringToFile(evoSuiteFile, "Hello World!");
        Scanner scanner = new Scanner("my_file.txt");
    }
}
statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("my_file.txt"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: FileSystemHandling.appendStringToFile(evoSuiteFile, "Hello World!"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: FileSystemHandling.appendStringToFile(evoSuiteFile, "Hello World!") target is: FileSystemHandling method is: appendStringToFile(EvoSuiteFile,java.lang.String)
Matched Method is: appendStringToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;Ljava/lang/String;)Z
i 1 Parameters size() 1 Num of Method Parameters: 2
statement is: Scanner scanner = new Scanner("my_file.txt"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase is: String string = "Hello World!";
String string = null;
FileSystemHandling.appendStringToFile((EvoSuiteFile) string, string);
String string = "my_file.txt";
Scanner scanner = new Scanner(string);

statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;") type is: class org.evosuite.testcase.statements.environment.FileNamePrimitiveStatement return type class org.evosuite.runtime.testdata.EvoSuiteFile
statement code is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;")
statement is: appendLineToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean appendLineToFile = FileSystemHandling.appendLineToFile(arg0, "<D")
statement is: Scanner(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class Scanner
statement code is: Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;")
test data is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;");
FileSystemHandling.appendLineToFile(evoSuiteFile, "<D");
Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        EvoSuiteFile evoSuiteFile = new EvoSuiteFile("C:\\Users\\username\\Documents\\testdata.txt");
        FileSystemHandling.appendLineToFile(evoSuiteFile, "Hello World!");
        Scanner scanner = new Scanner(new File("C:\\Users\\username\\Documents\\testdata.txt"));
    }
}
statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("C:\\Users\\username\\Documents\\testdata.txt"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: FileSystemHandling.appendLineToFile(evoSuiteFile, "Hello World!"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: FileSystemHandling.appendLineToFile(evoSuiteFile, "Hello World!") target is: FileSystemHandling method is: appendLineToFile(EvoSuiteFile,java.lang.String)
Matched Method is: appendLineToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;Ljava/lang/String;)Z
i 1 Parameters size() 1 Num of Method Parameters: 2
statement is: Scanner scanner = new Scanner(new File("C:\\Users\\username\\Documents\\testdata.txt")), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase is: String string = "Hello World!";
String string = null;
FileSystemHandling.appendLineToFile((EvoSuiteFile) string, string);
Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;");

statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;") type is: class org.evosuite.testcase.statements.environment.FileNamePrimitiveStatement return type class org.evosuite.runtime.testdata.EvoSuiteFile
statement code is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;")
statement is: appendLineToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean appendLineToFile = FileSystemHandling.appendLineToFile(arg0, "PROGRAM")
statement is: appendLineToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean appendLineToFile = FileSystemHandling.appendLineToFile(arg0, "exp=ced: PRORAM\nq Sound: 2\n   l+ne: \n cljmn: )")
statement is: Scanner(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class Scanner
statement code is: Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;")
test data is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;");
FileSystemHandling.appendLineToFile(evoSuiteFile, "PROGRAM");
FileSystemHandling.appendLineToFile(evoSuiteFile, "exp=ced: PRORAM\nq Sound: 2\n   l+ne: \n cljmn: )");
Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;");
        FileSystemHandling.appendLineToFile(evoSuiteFile, "PROGRAM");
        FileSystemHandling.appendLineToFile(evoSuiteFile, "exp=ced: PRORAM\nq Sound: 2\n   l+ne: \n cljmn: )");
        Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;");
    }
}
statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: FileSystemHandling.appendLineToFile(evoSuiteFile, "PROGRAM"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: FileSystemHandling.appendLineToFile(evoSuiteFile, "PROGRAM") target is: FileSystemHandling method is: appendLineToFile(EvoSuiteFile,java.lang.String)
Matched Method is: appendLineToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;Ljava/lang/String;)Z
i 1 Parameters size() 1 Num of Method Parameters: 2
statement is: FileSystemHandling.appendLineToFile(evoSuiteFile, "exp=ced: PRORAM\nq Sound: 2\n   l+ne: \n cljmn: )"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: FileSystemHandling.appendLineToFile(evoSuiteFile, "exp=ced: PRORAM\nq Sound: 2\n   l+ne: \n cljmn: )") target is: FileSystemHandling method is: appendLineToFile(EvoSuiteFile,java.lang.String)
Matched Method is: appendLineToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;Ljava/lang/String;)Z
i 1 Parameters size() 1 Num of Method Parameters: 2
statement is: Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase is: String string = "PROGRAM";
String string = null;
FileSystemHandling.appendLineToFile((EvoSuiteFile) string, string);
String string = "exp=ced: PRORAM\nq Sound: 2\n   l+ne: \n cljmn: )";
String string = null;
FileSystemHandling.appendLineToFile((EvoSuiteFile) string, string);
String string = "&k6K!G=:! t<,N>V;";
Scanner scanner = new Scanner(string);

statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;") type is: class org.evosuite.testcase.statements.environment.FileNamePrimitiveStatement return type class org.evosuite.runtime.testdata.EvoSuiteFile
statement code is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;")
statement is: appendLineToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean appendLineToFile = FileSystemHandling.appendLineToFile(arg0, "F3fsGm<[e5mopaR!0(a")
statement is: Scanner(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class Scanner
statement code is: Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;")
statement is: advScanning(Ljava/util/ArrayList;)Ljava/util/ArrayList; type is: class org.evosuite.testcase.statements.MethodStatement return type java.util.ArrayList<E>
statement code is: ArrayList advScanning = scanner.advScanning(scanner.lexems)
test data is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;");
FileSystemHandling.appendLineToFile(evoSuiteFile, "F3fsGm<[e5mopaR!0(a");
Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;");
scanner.advScanning(scanner.lexems);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        EvoSuiteFile evoSuiteFile = new EvoSuiteFile("example-input.txt");
        FileSystemHandling.appendLineToFile(evoSuiteFile, "Hello, World!");
        Scanner scanner = new Scanner("example-input.txt");
        scanner.advScanning(scanner.lexems);
    }
}
statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("example-input.txt"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: FileSystemHandling.appendLineToFile(evoSuiteFile, "Hello, World!"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: FileSystemHandling.appendLineToFile(evoSuiteFile, "Hello, World!") target is: FileSystemHandling method is: appendLineToFile(EvoSuiteFile,java.lang.String)
Matched Method is: appendLineToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;Ljava/lang/String;)Z
i 1 Parameters size() 1 Num of Method Parameters: 2
statement is: Scanner scanner = new Scanner("example-input.txt"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: scanner.advScanning(scanner.lexems), class spoon.support.reflect.code.CtInvocationImpl
invocation is: scanner.advScanning(scanner.lexems) target is: scanner method is: advScanning()
source statement: Scanner(Ljava/lang/String;)V callee: VariableReference: Statement 2, type Scannerindex is: 4
Matched Method is: advScanning(Ljava/util/ArrayList;)Ljava/util/ArrayList;
i 0 Parameters size() 0 Num of Method Parameters: 1
TestCase is: String string = "Hello, World!";
String string = null;
boolean appendLineToFile = FileSystemHandling.appendLineToFile((EvoSuiteFile) string, string);
String string = "example-input.txt";
Scanner scanner = new Scanner(string);
ArrayList arrayList = null;
((Scanner) appendLineToFile).advScanning(arrayList);

statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;") type is: class org.evosuite.testcase.statements.environment.FileNamePrimitiveStatement return type class org.evosuite.runtime.testdata.EvoSuiteFile
statement code is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;")
statement is: appendStringToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean appendStringToFile = FileSystemHandling.appendStringToFile(arg0, "AP0WL*i/h96Qa1v\"")
statement is: appendStringToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean appendStringToFile = FileSystemHandling.appendStringToFile(arg0, "AP0WL*i/h96Qa1v\"")
statement is: Scanner(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class Scanner
statement code is: Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;")
statement is: advScanning(Ljava/util/ArrayList;)Ljava/util/ArrayList; type is: class org.evosuite.testcase.statements.MethodStatement return type java.util.ArrayList<E>
statement code is: ArrayList advScanning = scanner.advScanning(scanner.lexems)
test data is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;");
FileSystemHandling.appendStringToFile(evoSuiteFile, "AP0WL*i/h96Qa1v\"");
FileSystemHandling.appendStringToFile(evoSuiteFile, "AP0WL*i/h96Qa1v\"");
Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;");
scanner.advScanning(scanner.lexems);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        EvoSuiteFile evoSuiteFile = new EvoSuiteFile("testFile.txt");
        FileSystemHandling.appendStringToFile(evoSuiteFile, "Hello World!");
        FileSystemHandling.appendStringToFile(evoSuiteFile, "Goodbye World!");
        Scanner scanner = new Scanner("testFile.txt");
        scanner.advScanning(scanner.lexems);
    }
}
statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("testFile.txt"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: FileSystemHandling.appendStringToFile(evoSuiteFile, "Hello World!"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: FileSystemHandling.appendStringToFile(evoSuiteFile, "Hello World!") target is: FileSystemHandling method is: appendStringToFile(EvoSuiteFile,java.lang.String)
Matched Method is: appendStringToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;Ljava/lang/String;)Z
i 1 Parameters size() 1 Num of Method Parameters: 2
statement is: FileSystemHandling.appendStringToFile(evoSuiteFile, "Goodbye World!"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: FileSystemHandling.appendStringToFile(evoSuiteFile, "Goodbye World!") target is: FileSystemHandling method is: appendStringToFile(EvoSuiteFile,java.lang.String)
Matched Method is: appendStringToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;Ljava/lang/String;)Z
i 1 Parameters size() 1 Num of Method Parameters: 2
statement is: Scanner scanner = new Scanner("testFile.txt"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: scanner.advScanning(scanner.lexems), class spoon.support.reflect.code.CtInvocationImpl
invocation is: scanner.advScanning(scanner.lexems) target is: scanner method is: advScanning()
source statement: Scanner(Ljava/lang/String;)V callee: VariableReference: Statement 3, type Scannerindex is: 7
Matched Method is: advScanning(Ljava/util/ArrayList;)Ljava/util/ArrayList;
i 0 Parameters size() 0 Num of Method Parameters: 1
TestCase is: String string = "Hello World!";
String string = null;
FileSystemHandling.appendStringToFile((EvoSuiteFile) string, string);
String string = "Goodbye World!";
String string = null;
FileSystemHandling.appendStringToFile((EvoSuiteFile) string, string);
String string = "testFile.txt";
Scanner scanner = new Scanner(string);
ArrayList arrayList = null;
((Scanner) string).advScanning(arrayList);

statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;") type is: class org.evosuite.testcase.statements.environment.FileNamePrimitiveStatement return type class org.evosuite.runtime.testdata.EvoSuiteFile
statement code is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;")
statement is: appendStringToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean appendStringToFile = FileSystemHandling.appendStringToFile(arg0, "expected: PROGRAM\n   found: >\n   line: 1\n   column: 1")
statement is: Scanner(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class Scanner
statement code is: Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;")
statement is: java.util.ArrayList(Ljava/util/Collection;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type java.util.ArrayList<java.lang.Object>
statement code is: ArrayList<Object> arrayList = new ArrayList<Object>(scanner.lexems)
statement is: advScanning(Ljava/util/ArrayList;)Ljava/util/ArrayList; type is: class org.evosuite.testcase.statements.MethodStatement return type java.util.ArrayList<E>
statement code is: ArrayList advScanning = scanner.advScanning(arg0)
test data is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;");
FileSystemHandling.appendStringToFile(evoSuiteFile, "expected: PROGRAM\n   found: >\n   line: 1\n   column: 1");
Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;");
ArrayList<Object> arrayList = new ArrayList<Object>(scanner.lexems);
scanner.advScanning(arrayList);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;");
        FileSystemHandling.appendStringToFile(evoSuiteFile, "expected: PROGRAM\n   found: >\n   line: 1\n   column: 1");
        Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;");
        ArrayList<Object> arrayList = new ArrayList<Object>(scanner.lexems);
        scanner.advScanning(arrayList);
    }
}
statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: FileSystemHandling.appendStringToFile(evoSuiteFile, "expected: PROGRAM\n   found: >\n   line: 1\n   column: 1"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: FileSystemHandling.appendStringToFile(evoSuiteFile, "expected: PROGRAM\n   found: >\n   line: 1\n   column: 1") target is: FileSystemHandling method is: appendStringToFile(EvoSuiteFile,java.lang.String)
Matched Method is: appendStringToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;Ljava/lang/String;)Z
i 1 Parameters size() 1 Num of Method Parameters: 2
statement is: Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ArrayList<Object> arrayList = new ArrayList<Object>(scanner.lexems), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: scanner.advScanning(arrayList), class spoon.support.reflect.code.CtInvocationImpl
invocation is: scanner.advScanning(arrayList) target is: scanner method is: advScanning(ArrayList)
source statement: Scanner(Ljava/lang/String;)V callee: VariableReference: Statement 2, type Scannerindex is: 4
Matched Method is: advScanning(Ljava/util/ArrayList;)Ljava/util/ArrayList;
TestCase is: String string = "expected: PROGRAM\n   found: >\n   line: 1\n   column: 1";
String string = null;
boolean appendStringToFile = FileSystemHandling.appendStringToFile((EvoSuiteFile) string, string);
String string = "&k6K!G=:! t<,N>V;";
Scanner scanner = new Scanner(string);
ArrayList<Object> arrayList = new ArrayList<Object>(((Scanner) appendStringToFile).lexems);
((Scanner) appendStringToFile).advScanning(arrayList);

statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;") type is: class org.evosuite.testcase.statements.environment.FileNamePrimitiveStatement return type class org.evosuite.runtime.testdata.EvoSuiteFile
statement code is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;")
statement is: appendStringToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean appendStringToFile = FileSystemHandling.appendStringToFile(arg0, "INTEGER VARIABLE")
statement is: Scanner(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class Scanner
statement code is: Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;")
statement is: advScanning(Ljava/util/ArrayList;)Ljava/util/ArrayList; type is: class org.evosuite.testcase.statements.MethodStatement return type java.util.ArrayList<E>
statement code is: ArrayList advScanning = scanner.advScanning(scanner.lexems)
test data is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;");
FileSystemHandling.appendStringToFile(evoSuiteFile, "INTEGER VARIABLE");
Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;");
scanner.advScanning(scanner.lexems);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        EvoSuiteFile evoSuiteFile = new EvoSuiteFile("1234567890");
        FileSystemHandling.appendStringToFile(evoSuiteFile, "INTEGER VARIABLE");
        Scanner scanner = new Scanner("1234567890");
        scanner.advScanning(scanner.lexems);
    }
}
statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("1234567890"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: FileSystemHandling.appendStringToFile(evoSuiteFile, "INTEGER VARIABLE"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: FileSystemHandling.appendStringToFile(evoSuiteFile, "INTEGER VARIABLE") target is: FileSystemHandling method is: appendStringToFile(EvoSuiteFile,java.lang.String)
Matched Method is: appendStringToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;Ljava/lang/String;)Z
i 1 Parameters size() 1 Num of Method Parameters: 2
statement is: Scanner scanner = new Scanner("1234567890"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: scanner.advScanning(scanner.lexems), class spoon.support.reflect.code.CtInvocationImpl
invocation is: scanner.advScanning(scanner.lexems) target is: scanner method is: advScanning()
source statement: Scanner(Ljava/lang/String;)V callee: VariableReference: Statement 2, type Scannerindex is: 4
Matched Method is: advScanning(Ljava/util/ArrayList;)Ljava/util/ArrayList;
i 0 Parameters size() 0 Num of Method Parameters: 1
TestCase is: String string = "INTEGER VARIABLE";
String string = null;
boolean appendStringToFile = FileSystemHandling.appendStringToFile((EvoSuiteFile) string, string);
String string = "1234567890";
Scanner scanner = new Scanner(string);
ArrayList arrayList = null;
((Scanner) appendStringToFile).advScanning(arrayList);

statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;") type is: class org.evosuite.testcase.statements.environment.FileNamePrimitiveStatement return type class org.evosuite.runtime.testdata.EvoSuiteFile
statement code is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;")
statement is: appendStringToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean appendStringToFile = FileSystemHandling.appendStringToFile(arg0, "expected: PROGRAM\n   found: AND\n   line: 1\n   column: 1")
statement is: Scanner(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class Scanner
statement code is: Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;")
statement is: advScanning(Ljava/util/ArrayList;)Ljava/util/ArrayList; type is: class org.evosuite.testcase.statements.MethodStatement return type java.util.ArrayList<E>
statement code is: ArrayList advScanning = scanner.advScanning(scanner.lexems)
test data is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;");
FileSystemHandling.appendStringToFile(evoSuiteFile, "expected: PROGRAM\n   found: AND\n   line: 1\n   column: 1");
Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;");
scanner.advScanning(scanner.lexems);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;");
        FileSystemHandling.appendStringToFile(evoSuiteFile, "expected: PROGRAM\n   found: AND\n   line: 1\n   column: 1");
        Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;");
        scanner.advScanning(scanner.lexems);
    }
}
statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: FileSystemHandling.appendStringToFile(evoSuiteFile, "expected: PROGRAM\n   found: AND\n   line: 1\n   column: 1"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: FileSystemHandling.appendStringToFile(evoSuiteFile, "expected: PROGRAM\n   found: AND\n   line: 1\n   column: 1") target is: FileSystemHandling method is: appendStringToFile(EvoSuiteFile,java.lang.String)
Matched Method is: appendStringToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;Ljava/lang/String;)Z
i 1 Parameters size() 1 Num of Method Parameters: 2
statement is: Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: scanner.advScanning(scanner.lexems), class spoon.support.reflect.code.CtInvocationImpl
invocation is: scanner.advScanning(scanner.lexems) target is: scanner method is: advScanning()
source statement: Scanner(Ljava/lang/String;)V callee: VariableReference: Statement 2, type Scannerindex is: 4
Matched Method is: advScanning(Ljava/util/ArrayList;)Ljava/util/ArrayList;
i 0 Parameters size() 0 Num of Method Parameters: 1
TestCase is: String string = "expected: PROGRAM\n   found: AND\n   line: 1\n   column: 1";
String string = null;
boolean appendStringToFile = FileSystemHandling.appendStringToFile((EvoSuiteFile) string, string);
String string = "&k6K!G=:! t<,N>V;";
Scanner scanner = new Scanner(string);
ArrayList arrayList = null;
((Scanner) appendStringToFile).advScanning(arrayList);

statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;") type is: class org.evosuite.testcase.statements.environment.FileNamePrimitiveStatement return type class org.evosuite.runtime.testdata.EvoSuiteFile
statement code is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;")
statement is: appendStringToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean appendStringToFile = FileSystemHandling.appendStringToFile(arg0, ",")
statement is: Scanner(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class Scanner
statement code is: Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;")
statement is: advScanning(Ljava/util/ArrayList;)Ljava/util/ArrayList; type is: class org.evosuite.testcase.statements.MethodStatement return type java.util.ArrayList<E>
statement code is: ArrayList advScanning = scanner.advScanning(scanner.lexems)
test data is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;");
FileSystemHandling.appendStringToFile(evoSuiteFile, ",");
Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;");
scanner.advScanning(scanner.lexems);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        EvoSuiteFile evoSuiteFile = new EvoSuiteFile("example_file.txt");
        FileSystemHandling.appendStringToFile(evoSuiteFile, "Hello, world!");
        Scanner scanner = new Scanner("example_file.txt");
        scanner.advScanning(scanner.lexems);
    }
}
statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("example_file.txt"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: FileSystemHandling.appendStringToFile(evoSuiteFile, "Hello, world!"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: FileSystemHandling.appendStringToFile(evoSuiteFile, "Hello, world!") target is: FileSystemHandling method is: appendStringToFile(EvoSuiteFile,java.lang.String)
Matched Method is: appendStringToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;Ljava/lang/String;)Z
i 1 Parameters size() 1 Num of Method Parameters: 2
statement is: Scanner scanner = new Scanner("example_file.txt"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: scanner.advScanning(scanner.lexems), class spoon.support.reflect.code.CtInvocationImpl
invocation is: scanner.advScanning(scanner.lexems) target is: scanner method is: advScanning()
source statement: Scanner(Ljava/lang/String;)V callee: VariableReference: Statement 2, type Scannerindex is: 4
Matched Method is: advScanning(Ljava/util/ArrayList;)Ljava/util/ArrayList;
i 0 Parameters size() 0 Num of Method Parameters: 1
TestCase is: String string = "Hello, world!";
String string = null;
boolean appendStringToFile = FileSystemHandling.appendStringToFile((EvoSuiteFile) string, string);
String string = "example_file.txt";
Scanner scanner = new Scanner(string);
ArrayList arrayList = null;
((Scanner) appendStringToFile).advScanning(arrayList);

statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;") type is: class org.evosuite.testcase.statements.environment.FileNamePrimitiveStatement return type class org.evosuite.runtime.testdata.EvoSuiteFile
statement code is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;")
statement is: appendStringToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean appendStringToFile = FileSystemHandling.appendStringToFile(arg0, "T;:")
statement is: Scanner(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class Scanner
statement code is: Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;")
statement is: advScanning(Ljava/util/ArrayList;)Ljava/util/ArrayList; type is: class org.evosuite.testcase.statements.MethodStatement return type java.util.ArrayList<E>
statement code is: ArrayList advScanning = scanner.advScanning(scanner.lexems)
test data is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;");
FileSystemHandling.appendStringToFile(evoSuiteFile, "T;:");
Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;");
scanner.advScanning(scanner.lexems);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        EvoSuiteFile evoSuiteFile = new EvoSuiteFile("Test File");
        FileSystemHandling.appendStringToFile(evoSuiteFile, "This is a test file.");
        Scanner scanner = new Scanner("Test File");
        scanner.advScanning(scanner.lexems);
    }
}
statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("Test File"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: FileSystemHandling.appendStringToFile(evoSuiteFile, "This is a test file."), class spoon.support.reflect.code.CtInvocationImpl
invocation is: FileSystemHandling.appendStringToFile(evoSuiteFile, "This is a test file.") target is: FileSystemHandling method is: appendStringToFile(EvoSuiteFile,java.lang.String)
Matched Method is: appendStringToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;Ljava/lang/String;)Z
i 1 Parameters size() 1 Num of Method Parameters: 2
statement is: Scanner scanner = new Scanner("Test File"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: scanner.advScanning(scanner.lexems), class spoon.support.reflect.code.CtInvocationImpl
invocation is: scanner.advScanning(scanner.lexems) target is: scanner method is: advScanning()
source statement: Scanner(Ljava/lang/String;)V callee: VariableReference: Statement 2, type Scannerindex is: 4
Matched Method is: advScanning(Ljava/util/ArrayList;)Ljava/util/ArrayList;
i 0 Parameters size() 0 Num of Method Parameters: 1
TestCase is: String string = "This is a test file.";
String string = null;
boolean appendStringToFile = FileSystemHandling.appendStringToFile((EvoSuiteFile) string, string);
String string = "Test File";
Scanner scanner = new Scanner(string);
ArrayList arrayList = null;
((Scanner) appendStringToFile).advScanning(arrayList);

statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;") type is: class org.evosuite.testcase.statements.environment.FileNamePrimitiveStatement return type class org.evosuite.runtime.testdata.EvoSuiteFile
statement code is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;")
statement is: appendStringToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean appendStringToFile = FileSystemHandling.appendStringToFile(arg0, ".d/|")
statement is: Scanner(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class Scanner
statement code is: Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;")
statement is: java.util.ArrayList()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type java.util.ArrayList<java.lang.Object>
statement code is: ArrayList<Object> arrayList = new ArrayList<Object>()
statement is: checkStructure(Ljava/util/ArrayList;)Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String checkStructure = scanner.checkStructure(arg0)
test data is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;");
FileSystemHandling.appendStringToFile(evoSuiteFile, ".d/|");
Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;");
ArrayList<Object> arrayList = new ArrayList<Object>();
scanner.checkStructure(arrayList);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        EvoSuiteFile evoSuiteFile = new EvoSuiteFile("testData/junit/foo/bar");
        FileSystemHandling.appendStringToFile(evoSuiteFile, "Hello World!");
        Scanner scanner = new Scanner("testData/junit/foo/bar");
        ArrayList<Object> arrayList = new ArrayList<Object>();
        scanner.checkStructure(arrayList);
    }
}
statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("testData/junit/foo/bar"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: FileSystemHandling.appendStringToFile(evoSuiteFile, "Hello World!"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: FileSystemHandling.appendStringToFile(evoSuiteFile, "Hello World!") target is: FileSystemHandling method is: appendStringToFile(EvoSuiteFile,java.lang.String)
Matched Method is: appendStringToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;Ljava/lang/String;)Z
i 1 Parameters size() 1 Num of Method Parameters: 2
statement is: Scanner scanner = new Scanner("testData/junit/foo/bar"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ArrayList<Object> arrayList = new ArrayList<Object>(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: scanner.checkStructure(arrayList), class spoon.support.reflect.code.CtInvocationImpl
invocation is: scanner.checkStructure(arrayList) target is: scanner method is: checkStructure(ArrayList)
source statement: Scanner(Ljava/lang/String;)V callee: VariableReference: Statement 2, type Scannerindex is: 4
Matched Method is: checkStructure(Ljava/util/ArrayList;)Ljava/lang/String;
TestCase is: String string = "Hello World!";
String string = null;
boolean appendStringToFile = FileSystemHandling.appendStringToFile((EvoSuiteFile) string, string);
String string = "testData/junit/foo/bar";
Scanner scanner = new Scanner(string);
ArrayList<Object> arrayList = new ArrayList<Object>();
((Scanner) appendStringToFile).checkStructure(arrayList);

statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;") type is: class org.evosuite.testcase.statements.environment.FileNamePrimitiveStatement return type class org.evosuite.runtime.testdata.EvoSuiteFile
statement code is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;")
statement is: appendStringToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean appendStringToFile = FileSystemHandling.appendStringToFile(arg0, "expected: PROGRAM\n   found: VALUE\n   line: 1\n   column: 1")
statement is: Scanner(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class Scanner
statement code is: Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;")
statement is: advScanning(Ljava/util/ArrayList;)Ljava/util/ArrayList; type is: class org.evosuite.testcase.statements.MethodStatement return type java.util.ArrayList<E>
statement code is: ArrayList advScanning = scanner.advScanning(scanner.lexems)
statement is: printAdvLexems(Ljava/util/ArrayList;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: scanner.printAdvLexems(arg0)
test data is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;");
FileSystemHandling.appendStringToFile(evoSuiteFile, "expected: PROGRAM\n   found: VALUE\n   line: 1\n   column: 1");
Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;");
ArrayList advScanning = scanner.advScanning(scanner.lexems);
scanner.printAdvLexems(advScanning);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;");
        FileSystemHandling.appendStringToFile(evoSuiteFile, "expected: PROGRAM\n   found: VALUE\n   line: 1\n   column: 1");
        Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;");
        ArrayList advScanning = scanner.advScanning(scanner.lexems);
        scanner.printAdvLexems(advScanning);
    }
}
statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: FileSystemHandling.appendStringToFile(evoSuiteFile, "expected: PROGRAM\n   found: VALUE\n   line: 1\n   column: 1"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: FileSystemHandling.appendStringToFile(evoSuiteFile, "expected: PROGRAM\n   found: VALUE\n   line: 1\n   column: 1") target is: FileSystemHandling method is: appendStringToFile(EvoSuiteFile,java.lang.String)
Matched Method is: appendStringToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;Ljava/lang/String;)Z
i 1 Parameters size() 1 Num of Method Parameters: 2
statement is: Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ArrayList advScanning = scanner.advScanning(scanner.lexems), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: scanner.advScanning(scanner.lexems) target is: scanner method is: advScanning()
source statement: Scanner(Ljava/lang/String;)V callee: VariableReference: Statement 2, type Scannerindex is: 4
Matched Method is: advScanning(Ljava/util/ArrayList;)Ljava/util/ArrayList;
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: scanner.printAdvLexems(advScanning), class spoon.support.reflect.code.CtInvocationImpl
invocation is: scanner.printAdvLexems(advScanning) target is: scanner method is: printAdvLexems(ArrayList)
source statement: Scanner(Ljava/lang/String;)V callee: VariableReference: Statement 2, type Scannerindex is: 4
Matched Method is: printAdvLexems(Ljava/util/ArrayList;)V
TestCase is: String string = "expected: PROGRAM\n   found: VALUE\n   line: 1\n   column: 1";
String string = null;
boolean appendStringToFile = FileSystemHandling.appendStringToFile((EvoSuiteFile) string, string);
String string = "&k6K!G=:! t<,N>V;";
Scanner scanner = new Scanner(string);
ArrayList arrayList = null;
ArrayList advScanning = ((Scanner) appendStringToFile).advScanning(arrayList);
((Scanner) appendStringToFile).printAdvLexems(advScanning);

statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;") type is: class org.evosuite.testcase.statements.environment.FileNamePrimitiveStatement return type class org.evosuite.runtime.testdata.EvoSuiteFile
statement code is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;")
statement is: appendStringToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean appendStringToFile = FileSystemHandling.appendStringToFile(arg0, "")
statement is: java.util.ArrayList()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type java.util.ArrayList<java.lang.Object>
statement code is: ArrayList<Object> arrayList = new ArrayList<Object>()
statement is: add(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean add = arrayList.add((Object) null)
statement is: Scanner(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class Scanner
statement code is: Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;")
statement is: printLexems(Ljava/util/ArrayList;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: scanner.printLexems(arg0)
test data is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;");
FileSystemHandling.appendStringToFile(evoSuiteFile, "");
ArrayList<Object> arrayList = new ArrayList<Object>();
arrayList.add((Object) null);
Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;");
scanner.printLexems(arrayList);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        EvoSuiteFile evoSuiteFile = new EvoSuiteFile("Test file name");
        FileSystemHandling.appendStringToFile(evoSuiteFile, "Test file contents");
        ArrayList<Object> arrayList = new ArrayList<Object>();
        arrayList.add(((Object) (null)));
        Scanner scanner = new Scanner("Input string to be tokenized");
        scanner.printLexems(arrayList);
    }
}
statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("Test file name"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: FileSystemHandling.appendStringToFile(evoSuiteFile, "Test file contents"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: FileSystemHandling.appendStringToFile(evoSuiteFile, "Test file contents") target is: FileSystemHandling method is: appendStringToFile(EvoSuiteFile,java.lang.String)
Matched Method is: appendStringToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;Ljava/lang/String;)Z
i 1 Parameters size() 1 Num of Method Parameters: 2
statement is: ArrayList<Object> arrayList = new ArrayList<Object>(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: arrayList.add(((Object) (null))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: arrayList.add(((Object) (null))) target is: arrayList method is: add(java.lang.Object)
source statement: java.util.ArrayList()V callee: VariableReference: Statement 2, type java.util.ArrayList<java.lang.Object>index is: 3
Matched Method is: add(Ljava/lang/Object;)Z
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: Scanner scanner = new Scanner("Input string to be tokenized"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: scanner.printLexems(arrayList), class spoon.support.reflect.code.CtInvocationImpl
invocation is: scanner.printLexems(arrayList) target is: scanner method is: printLexems(ArrayList)
source statement: Scanner(Ljava/lang/String;)V callee: VariableReference: Statement 4, type Scannerindex is: 7
Matched Method is: printLexems(Ljava/util/ArrayList;)V
TestCase is: String string = "Test file contents";
String string = null;
boolean appendStringToFile = FileSystemHandling.appendStringToFile((EvoSuiteFile) string, string);
ArrayList<Object> arrayList = new ArrayList<Object>();
Object object = null;
((ArrayList) appendStringToFile).add(object);
String string = "Input string to be tokenized";
Scanner scanner = new Scanner(string);
((Scanner) object).printLexems(arrayList);

* test suite isTestSuite: 54
Test 0: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;");
FileSystemHandling.appendLineToFile(evoSuiteFile, "<>");
Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;");
Test 1: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;");
FileSystemHandling.appendStringToFile(evoSuiteFile, "PROGRAM");
Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;");
Test 2: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;");
FileSystemHandling.appendStringToFile(evoSuiteFile, "AP0WL*i/h96Qa1v\"");
Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;");
Test 3: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;");
FileSystemHandling.appendStringToFile(evoSuiteFile, "\"]P.B\"dvuQMx%i<");
Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;");
Test 4: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;");
FileSystemHandling.appendLineToFile(evoSuiteFile, "0Etr/'&+");
Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;");
Test 5: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;");
FileSystemHandling.appendStringToFile(evoSuiteFile, "k7bkf=q~x2|O$}0");
Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;");
Test 6: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;");
FileSystemHandling.appendLineToFile(evoSuiteFile, "PR.ruGRAM");
Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;");
Test 7: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;");
FileSystemHandling.appendStringToFile(evoSuiteFile, "5.@53Y'WuAbV?+o");
Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;");
Test 8: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;");
FileSystemHandling.appendLineToFile(evoSuiteFile, "expected: END. at theGend _f program");
Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;");
Test 9: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;");
byte[] byteArray = new byte[5];
byteArray[0] = (byte)9;
FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;");
Test 10: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;");
byte[] byteArray = new byte[3];
byteArray[0] = (byte)13;
FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;");
Test 11: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;");
FileSystemHandling.appendStringToFile(evoSuiteFile, "&k6K!G=:! t<,N>V;");
Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;");
ArrayList<Object> arrayList = new ArrayList<Object>();
scanner.printLexems(arrayList);
Test 12: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;");
FileSystemHandling.appendLineToFile(evoSuiteFile, "TRUE");
Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;");
Test 13: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;");
FileSystemHandling.appendLineToFile(evoSuiteFile, "expected: PROGRAM\n   found: =\n   line: 1\n   column: 1");
Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;");
ArrayList<Object> arrayList = new ArrayList<Object>();
scanner.advScanning(arrayList);
Test 14: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;");
FileSystemHandling.appendStringToFile(evoSuiteFile, "<=");
Scanner scanner = null;
try {
  scanner = new Scanner("&k6K!G=:! t<,N>V;");
  fail("Expecting exception: IndexOutOfBoundsException");

} catch(IndexOutOfBoundsException e) {
   //
   // Index: 2, Size: 2
   //
   verifyException("java.util.ArrayList", e);
}

Test 15: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;");
FileSystemHandling.appendLineToFile(evoSuiteFile, "<D");
Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;");
Test 16: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;");
FileSystemHandling.appendLineToFile(evoSuiteFile, "PROGRAM");
FileSystemHandling.appendLineToFile(evoSuiteFile, "exp=ced: PRORAM\nq Sound: 2\n   l+ne: \n cljmn: )");
Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;");
Test 17: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;");
FileSystemHandling.appendLineToFile(evoSuiteFile, "F3fsGm<[e5mopaR!0(a");
Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;");
scanner.advScanning(scanner.lexems);
Test 18: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;");
FileSystemHandling.appendStringToFile(evoSuiteFile, "AP0WL*i/h96Qa1v\"");
FileSystemHandling.appendStringToFile(evoSuiteFile, "AP0WL*i/h96Qa1v\"");
Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;");
scanner.advScanning(scanner.lexems);
Test 19: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;");
FileSystemHandling.appendStringToFile(evoSuiteFile, "expected: PROGRAM\n   found: >\n   line: 1\n   column: 1");
Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;");
ArrayList<Object> arrayList = new ArrayList<Object>(scanner.lexems);
scanner.advScanning(arrayList);
Test 20: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;");
FileSystemHandling.appendStringToFile(evoSuiteFile, "INTEGER VARIABLE");
Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;");
scanner.advScanning(scanner.lexems);
Test 21: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;");
FileSystemHandling.appendStringToFile(evoSuiteFile, "expected: PROGRAM\n   found: AND\n   line: 1\n   column: 1");
Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;");
scanner.advScanning(scanner.lexems);
Test 22: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;");
FileSystemHandling.appendStringToFile(evoSuiteFile, ",");
Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;");
scanner.advScanning(scanner.lexems);
Test 23: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;");
FileSystemHandling.appendStringToFile(evoSuiteFile, "T;:");
Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;");
scanner.advScanning(scanner.lexems);
Test 24: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;");
FileSystemHandling.appendStringToFile(evoSuiteFile, ".d/|");
Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;");
ArrayList<Object> arrayList = new ArrayList<Object>();
scanner.checkStructure(arrayList);
Test 25: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;");
FileSystemHandling.appendStringToFile(evoSuiteFile, "expected: PROGRAM\n   found: VALUE\n   line: 1\n   column: 1");
Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;");
ArrayList advScanning = scanner.advScanning(scanner.lexems);
scanner.printAdvLexems(advScanning);
Test 26: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;");
FileSystemHandling.appendStringToFile(evoSuiteFile, "");
ArrayList<Object> arrayList = new ArrayList<Object>();
arrayList.add((Object) null);
Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;");
// Undeclared exception!
try { 
  scanner.printLexems(arrayList);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("Scanner", e);
}

Test 27: 
FileSystemHandling.appendLineToFile((EvoSuiteFile) "Hello World!", (String) null);
String string = "example.txt";
Scanner scanner = new Scanner(string);

Test 28: 
FileSystemHandling.appendStringToFile((EvoSuiteFile) "PROGRAM", (String) null);
String string = "A sample input string.";
Scanner scanner = new Scanner(string);

Test 29: 
FileSystemHandling.appendStringToFile((EvoSuiteFile) "Hello World!", (String) null);
String string = "This is a test file.";
Scanner scanner = new Scanner(string);

Test 30: 
FileSystemHandling.appendStringToFile((EvoSuiteFile) "\"]P.B\"dvuQMx%i<", (String) null);
String string = "&k6K!G=:! t<,N>V;";
Scanner scanner = new Scanner(string);

Test 31: 
FileSystemHandling.appendLineToFile((EvoSuiteFile) "Hello world!", (String) null);
String string = "This is a test string.";
Scanner scanner = new Scanner(string);

Test 32: 
FileSystemHandling.appendStringToFile((EvoSuiteFile) "This is a test string for the Scanner class.", (String) null);
String string = "This is a test string for the Scanner class.";
Scanner scanner = new Scanner(string);

Test 33: 
FileSystemHandling.appendLineToFile((EvoSuiteFile) "PR.ruGRAM", (String) null);
String string = "myfile.txt";
Scanner scanner = new Scanner(string);

Test 34: 
FileSystemHandling.appendStringToFile((EvoSuiteFile) "10.@53Y'WuAbV?+o", (String) null);
String string = "testData";
Scanner scanner = new Scanner(string);

Test 35: 
FileSystemHandling.appendLineToFile((EvoSuiteFile) "expected: END. at the end of the file", (String) null);
Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;");

Test 36: 
byte[] byteArray = new byte[5];
FileSystemHandling.appendDataToFile((EvoSuiteFile) byteArray, (byte[]) null);
String string = "This is a test string for file reading.";
Scanner scanner = new Scanner(string);

Test 37: 
byte[] byteArray = new byte[3];
FileSystemHandling.appendDataToFile((EvoSuiteFile) byteArray, (byte[]) null);
String string = "example.txt";
Scanner scanner = new Scanner(string);

Test 38: 
boolean appendStringToFile = FileSystemHandling.appendStringToFile((EvoSuiteFile) "The quick brown fox jumps over the lazy dog.", (String) null);
String string = "The quick brown fox jumps over the lazy dog.";
Scanner scanner = new Scanner(string);
ArrayList<Object> arrayList = new ArrayList<Object>();
((Scanner) appendStringToFile).printLexems(arrayList);

Test 39: 
FileSystemHandling.appendLineToFile((EvoSuiteFile) "This is a test string with multiple lines and special characters like !@#$%^&*()_+-=[]{}|;':\"<>,./?`~.", (String) null);
Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;");

Test 40: 
boolean appendLineToFile = FileSystemHandling.appendLineToFile((EvoSuiteFile) "expected: PROGRAM\n   found: =\n   line: 1\n   column: 1", (String) null);
String string = "&k6K!G=:! t<,N>V;";
Scanner scanner = new Scanner(string);
ArrayList<Object> arrayList = new ArrayList<Object>();
((Scanner) appendLineToFile).advScanning(arrayList);

Test 41: 
FileSystemHandling.appendStringToFile((EvoSuiteFile) "Hello World!", (String) null);
String string = "my_file.txt";
Scanner scanner = new Scanner(string);

Test 42: 
FileSystemHandling.appendLineToFile((EvoSuiteFile) "Hello World!", (String) null);
Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;");

Test 43: 
FileSystemHandling.appendLineToFile((EvoSuiteFile) "PROGRAM", (String) null);
String string = "exp=ced: PRORAM\nq Sound: 2\n   l+ne: \n cljmn: )";
String string = null;
FileSystemHandling.appendLineToFile((EvoSuiteFile) string, string);
String string = "&k6K!G=:! t<,N>V;";
Scanner scanner = new Scanner(string);

Test 44: 
boolean appendLineToFile = FileSystemHandling.appendLineToFile((EvoSuiteFile) "Hello, World!", (String) null);
String string = "example-input.txt";
Scanner scanner = new Scanner(string);
ArrayList arrayList = null;
((Scanner) appendLineToFile).advScanning(arrayList);

Test 45: 
FileSystemHandling.appendStringToFile((EvoSuiteFile) "Hello World!", (String) null);
String string = "Goodbye World!";
String string = null;
FileSystemHandling.appendStringToFile((EvoSuiteFile) string, string);
String string = "testFile.txt";
Scanner scanner = new Scanner(string);
ArrayList arrayList = null;
((Scanner) string).advScanning(arrayList);

Test 46: 
boolean appendStringToFile = FileSystemHandling.appendStringToFile((EvoSuiteFile) "expected: PROGRAM\n   found: >\n   line: 1\n   column: 1", (String) null);
String string = "&k6K!G=:! t<,N>V;";
Scanner scanner = new Scanner(string);
ArrayList<Object> arrayList = new ArrayList<Object>(((Scanner) appendStringToFile).lexems);
((Scanner) appendStringToFile).advScanning(arrayList);

Test 47: 
boolean appendStringToFile = FileSystemHandling.appendStringToFile((EvoSuiteFile) "INTEGER VARIABLE", (String) null);
String string = "1234567890";
Scanner scanner = new Scanner(string);
ArrayList arrayList = null;
((Scanner) appendStringToFile).advScanning(arrayList);

Test 48: 
boolean appendStringToFile = FileSystemHandling.appendStringToFile((EvoSuiteFile) "expected: PROGRAM\n   found: AND\n   line: 1\n   column: 1", (String) null);
String string = "&k6K!G=:! t<,N>V;";
Scanner scanner = new Scanner(string);
ArrayList arrayList = null;
((Scanner) appendStringToFile).advScanning(arrayList);

Test 49: 
boolean appendStringToFile = FileSystemHandling.appendStringToFile((EvoSuiteFile) "Hello, world!", (String) null);
String string = "example_file.txt";
Scanner scanner = new Scanner(string);
ArrayList arrayList = null;
((Scanner) appendStringToFile).advScanning(arrayList);

Test 50: 
boolean appendStringToFile = FileSystemHandling.appendStringToFile((EvoSuiteFile) "This is a test file.", (String) null);
String string = "Test File";
Scanner scanner = new Scanner(string);
ArrayList arrayList = null;
((Scanner) appendStringToFile).advScanning(arrayList);

Test 51: 
boolean appendStringToFile = FileSystemHandling.appendStringToFile((EvoSuiteFile) "Hello World!", (String) null);
String string = "testData/junit/foo/bar";
Scanner scanner = new Scanner(string);
ArrayList<Object> arrayList = new ArrayList<Object>();
((Scanner) appendStringToFile).checkStructure(arrayList);

Test 52: 
boolean appendStringToFile = FileSystemHandling.appendStringToFile((EvoSuiteFile) "expected: PROGRAM\n   found: VALUE\n   line: 1\n   column: 1", (String) null);
String string = "&k6K!G=:! t<,N>V;";
Scanner scanner = new Scanner(string);
ArrayList arrayList = null;
ArrayList advScanning = ((Scanner) appendStringToFile).advScanning(arrayList);
((Scanner) appendStringToFile).printAdvLexems(advScanning);

Test 53: 
boolean appendStringToFile = FileSystemHandling.appendStringToFile((EvoSuiteFile) "Test file contents", (String) null);
ArrayList<Object> arrayList = new ArrayList<Object>();
Object object = null;
((ArrayList) appendStringToFile).add(object);
String string = "Input string to be tokenized";
Scanner scanner = new Scanner(string);
((Scanner) object).printLexems(arrayList);


* Generated after the refinement and before minimization 54 tests with total length 219
* test suite isTestSuite: 54
Test 0: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;");
FileSystemHandling.appendLineToFile(evoSuiteFile, "<>");
Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;");
Test 1: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;");
FileSystemHandling.appendStringToFile(evoSuiteFile, "PROGRAM");
Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;");
Test 2: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;");
FileSystemHandling.appendStringToFile(evoSuiteFile, "AP0WL*i/h96Qa1v\"");
Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;");
Test 3: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;");
FileSystemHandling.appendStringToFile(evoSuiteFile, "\"]P.B\"dvuQMx%i<");
Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;");
Test 4: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;");
FileSystemHandling.appendLineToFile(evoSuiteFile, "0Etr/'&+");
Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;");
Test 5: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;");
FileSystemHandling.appendStringToFile(evoSuiteFile, "k7bkf=q~x2|O$}0");
Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;");
Test 6: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;");
FileSystemHandling.appendLineToFile(evoSuiteFile, "PR.ruGRAM");
Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;");
Test 7: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;");
FileSystemHandling.appendStringToFile(evoSuiteFile, "5.@53Y'WuAbV?+o");
Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;");
Test 8: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;");
FileSystemHandling.appendLineToFile(evoSuiteFile, "expected: END. at theGend _f program");
Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;");
Test 9: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;");
byte[] byteArray = new byte[5];
byteArray[0] = (byte)9;
FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;");
Test 10: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;");
byte[] byteArray = new byte[3];
byteArray[0] = (byte)13;
FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;");
Test 11: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;");
FileSystemHandling.appendStringToFile(evoSuiteFile, "&k6K!G=:! t<,N>V;");
Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;");
ArrayList<Object> arrayList = new ArrayList<Object>();
scanner.printLexems(arrayList);
Test 12: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;");
FileSystemHandling.appendLineToFile(evoSuiteFile, "TRUE");
Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;");
Test 13: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;");
FileSystemHandling.appendLineToFile(evoSuiteFile, "expected: PROGRAM\n   found: =\n   line: 1\n   column: 1");
Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;");
ArrayList<Object> arrayList = new ArrayList<Object>();
scanner.advScanning(arrayList);
Test 14: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;");
FileSystemHandling.appendStringToFile(evoSuiteFile, "<=");
Scanner scanner = null;
try {
  scanner = new Scanner("&k6K!G=:! t<,N>V;");
  fail("Expecting exception: IndexOutOfBoundsException");

} catch(IndexOutOfBoundsException e) {
   //
   // Index: 2, Size: 2
   //
   verifyException("java.util.ArrayList", e);
}

Test 15: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;");
FileSystemHandling.appendLineToFile(evoSuiteFile, "<D");
Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;");
Test 16: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;");
FileSystemHandling.appendLineToFile(evoSuiteFile, "PROGRAM");
FileSystemHandling.appendLineToFile(evoSuiteFile, "exp=ced: PRORAM\nq Sound: 2\n   l+ne: \n cljmn: )");
Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;");
Test 17: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;");
FileSystemHandling.appendLineToFile(evoSuiteFile, "F3fsGm<[e5mopaR!0(a");
Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;");
scanner.advScanning(scanner.lexems);
Test 18: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;");
FileSystemHandling.appendStringToFile(evoSuiteFile, "AP0WL*i/h96Qa1v\"");
FileSystemHandling.appendStringToFile(evoSuiteFile, "AP0WL*i/h96Qa1v\"");
Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;");
scanner.advScanning(scanner.lexems);
Test 19: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;");
FileSystemHandling.appendStringToFile(evoSuiteFile, "expected: PROGRAM\n   found: >\n   line: 1\n   column: 1");
Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;");
ArrayList<Object> arrayList = new ArrayList<Object>(scanner.lexems);
scanner.advScanning(arrayList);
Test 20: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;");
FileSystemHandling.appendStringToFile(evoSuiteFile, "INTEGER VARIABLE");
Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;");
scanner.advScanning(scanner.lexems);
Test 21: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;");
FileSystemHandling.appendStringToFile(evoSuiteFile, "expected: PROGRAM\n   found: AND\n   line: 1\n   column: 1");
Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;");
scanner.advScanning(scanner.lexems);
Test 22: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;");
FileSystemHandling.appendStringToFile(evoSuiteFile, ",");
Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;");
scanner.advScanning(scanner.lexems);
Test 23: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;");
FileSystemHandling.appendStringToFile(evoSuiteFile, "T;:");
Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;");
scanner.advScanning(scanner.lexems);
Test 24: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;");
FileSystemHandling.appendStringToFile(evoSuiteFile, ".d/|");
Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;");
ArrayList<Object> arrayList = new ArrayList<Object>();
scanner.checkStructure(arrayList);
Test 25: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;");
FileSystemHandling.appendStringToFile(evoSuiteFile, "expected: PROGRAM\n   found: VALUE\n   line: 1\n   column: 1");
Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;");
ArrayList advScanning = scanner.advScanning(scanner.lexems);
scanner.printAdvLexems(advScanning);
Test 26: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;");
FileSystemHandling.appendStringToFile(evoSuiteFile, "");
ArrayList<Object> arrayList = new ArrayList<Object>();
arrayList.add((Object) null);
Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;");
// Undeclared exception!
try { 
  scanner.printLexems(arrayList);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("Scanner", e);
}

Test 27: 
FileSystemHandling.appendLineToFile((EvoSuiteFile) "Hello World!", (String) null);
String string = "example.txt";
Scanner scanner = new Scanner(string);

Test 28: 
FileSystemHandling.appendStringToFile((EvoSuiteFile) "PROGRAM", (String) null);
String string = "A sample input string.";
Scanner scanner = new Scanner(string);

Test 29: 
FileSystemHandling.appendStringToFile((EvoSuiteFile) "Hello World!", (String) null);
String string = "This is a test file.";
Scanner scanner = new Scanner(string);

Test 30: 
FileSystemHandling.appendStringToFile((EvoSuiteFile) "\"]P.B\"dvuQMx%i<", (String) null);
String string = "&k6K!G=:! t<,N>V;";
Scanner scanner = new Scanner(string);

Test 31: 
FileSystemHandling.appendLineToFile((EvoSuiteFile) "Hello world!", (String) null);
String string = "This is a test string.";
Scanner scanner = new Scanner(string);

Test 32: 
FileSystemHandling.appendStringToFile((EvoSuiteFile) "This is a test string for the Scanner class.", (String) null);
String string = "This is a test string for the Scanner class.";
Scanner scanner = new Scanner(string);

Test 33: 
FileSystemHandling.appendLineToFile((EvoSuiteFile) "PR.ruGRAM", (String) null);
String string = "myfile.txt";
Scanner scanner = new Scanner(string);

Test 34: 
FileSystemHandling.appendStringToFile((EvoSuiteFile) "10.@53Y'WuAbV?+o", (String) null);
String string = "testData";
Scanner scanner = new Scanner(string);

Test 35: 
FileSystemHandling.appendLineToFile((EvoSuiteFile) "expected: END. at the end of the file", (String) null);
Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;");

Test 36: 
byte[] byteArray = new byte[5];
FileSystemHandling.appendDataToFile((EvoSuiteFile) byteArray, (byte[]) null);
String string = "This is a test string for file reading.";
Scanner scanner = new Scanner(string);

Test 37: 
byte[] byteArray = new byte[3];
FileSystemHandling.appendDataToFile((EvoSuiteFile) byteArray, (byte[]) null);
String string = "example.txt";
Scanner scanner = new Scanner(string);

Test 38: 
boolean appendStringToFile = FileSystemHandling.appendStringToFile((EvoSuiteFile) "The quick brown fox jumps over the lazy dog.", (String) null);
String string = "The quick brown fox jumps over the lazy dog.";
Scanner scanner = new Scanner(string);
ArrayList<Object> arrayList = new ArrayList<Object>();
((Scanner) appendStringToFile).printLexems(arrayList);

Test 39: 
FileSystemHandling.appendLineToFile((EvoSuiteFile) "This is a test string with multiple lines and special characters like !@#$%^&*()_+-=[]{}|;':\"<>,./?`~.", (String) null);
Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;");

Test 40: 
boolean appendLineToFile = FileSystemHandling.appendLineToFile((EvoSuiteFile) "expected: PROGRAM\n   found: =\n   line: 1\n   column: 1", (String) null);
String string = "&k6K!G=:! t<,N>V;";
Scanner scanner = new Scanner(string);
ArrayList<Object> arrayList = new ArrayList<Object>();
((Scanner) appendLineToFile).advScanning(arrayList);

Test 41: 
FileSystemHandling.appendStringToFile((EvoSuiteFile) "Hello World!", (String) null);
String string = "my_file.txt";
Scanner scanner = new Scanner(string);

Test 42: 
FileSystemHandling.appendLineToFile((EvoSuiteFile) "Hello World!", (String) null);
Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;");

Test 43: 
FileSystemHandling.appendLineToFile((EvoSuiteFile) "PROGRAM", (String) null);
String string = "exp=ced: PRORAM\nq Sound: 2\n   l+ne: \n cljmn: )";
String string = null;
FileSystemHandling.appendLineToFile((EvoSuiteFile) string, string);
String string = "&k6K!G=:! t<,N>V;";
Scanner scanner = new Scanner(string);

Test 44: 
boolean appendLineToFile = FileSystemHandling.appendLineToFile((EvoSuiteFile) "Hello, World!", (String) null);
String string = "example-input.txt";
Scanner scanner = new Scanner(string);
ArrayList arrayList = null;
((Scanner) appendLineToFile).advScanning(arrayList);

Test 45: 
FileSystemHandling.appendStringToFile((EvoSuiteFile) "Hello World!", (String) null);
String string = "Goodbye World!";
String string = null;
FileSystemHandling.appendStringToFile((EvoSuiteFile) string, string);
String string = "testFile.txt";
Scanner scanner = new Scanner(string);
ArrayList arrayList = null;
((Scanner) string).advScanning(arrayList);

Test 46: 
boolean appendStringToFile = FileSystemHandling.appendStringToFile((EvoSuiteFile) "expected: PROGRAM\n   found: >\n   line: 1\n   column: 1", (String) null);
String string = "&k6K!G=:! t<,N>V;";
Scanner scanner = new Scanner(string);
ArrayList<Object> arrayList = new ArrayList<Object>(((Scanner) appendStringToFile).lexems);
((Scanner) appendStringToFile).advScanning(arrayList);

Test 47: 
boolean appendStringToFile = FileSystemHandling.appendStringToFile((EvoSuiteFile) "INTEGER VARIABLE", (String) null);
String string = "1234567890";
Scanner scanner = new Scanner(string);
ArrayList arrayList = null;
((Scanner) appendStringToFile).advScanning(arrayList);

Test 48: 
boolean appendStringToFile = FileSystemHandling.appendStringToFile((EvoSuiteFile) "expected: PROGRAM\n   found: AND\n   line: 1\n   column: 1", (String) null);
String string = "&k6K!G=:! t<,N>V;";
Scanner scanner = new Scanner(string);
ArrayList arrayList = null;
((Scanner) appendStringToFile).advScanning(arrayList);

Test 49: 
boolean appendStringToFile = FileSystemHandling.appendStringToFile((EvoSuiteFile) "Hello, world!", (String) null);
String string = "example_file.txt";
Scanner scanner = new Scanner(string);
ArrayList arrayList = null;
((Scanner) appendStringToFile).advScanning(arrayList);

Test 50: 
boolean appendStringToFile = FileSystemHandling.appendStringToFile((EvoSuiteFile) "This is a test file.", (String) null);
String string = "Test File";
Scanner scanner = new Scanner(string);
ArrayList arrayList = null;
((Scanner) appendStringToFile).advScanning(arrayList);

Test 51: 
boolean appendStringToFile = FileSystemHandling.appendStringToFile((EvoSuiteFile) "Hello World!", (String) null);
String string = "testData/junit/foo/bar";
Scanner scanner = new Scanner(string);
ArrayList<Object> arrayList = new ArrayList<Object>();
((Scanner) appendStringToFile).checkStructure(arrayList);

Test 52: 
boolean appendStringToFile = FileSystemHandling.appendStringToFile((EvoSuiteFile) "expected: PROGRAM\n   found: VALUE\n   line: 1\n   column: 1", (String) null);
String string = "&k6K!G=:! t<,N>V;";
Scanner scanner = new Scanner(string);
ArrayList arrayList = null;
ArrayList advScanning = ((Scanner) appendStringToFile).advScanning(arrayList);
((Scanner) appendStringToFile).printAdvLexems(advScanning);

Test 53: 
boolean appendStringToFile = FileSystemHandling.appendStringToFile((EvoSuiteFile) "Test file contents", (String) null);
ArrayList<Object> arrayList = new ArrayList<Object>();
Object object = null;
((ArrayList) appendStringToFile).add(object);
String string = "Input string to be tokenized";
Scanner scanner = new Scanner(string);
((Scanner) object).printLexems(arrayList);


* Minimizing test suite
* test suite isTestSuite: 27
Test 0: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;");
FileSystemHandling.appendLineToFile(evoSuiteFile, "<>");
Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;");
Test 1: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;");
FileSystemHandling.appendStringToFile(evoSuiteFile, "PROGRAM");
Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;");
Test 2: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;");
FileSystemHandling.appendStringToFile(evoSuiteFile, "AP0WL*i/h96Qa1v\"");
Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;");
Test 3: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;");
FileSystemHandling.appendStringToFile(evoSuiteFile, "\"]P.B\"dvuQMx%i<");
Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;");
Test 4: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;");
FileSystemHandling.appendLineToFile(evoSuiteFile, "0Etr/'&+");
Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;");
Test 5: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;");
FileSystemHandling.appendStringToFile(evoSuiteFile, "k7bkf=q~x2|O$}0");
Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;");
Test 6: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;");
FileSystemHandling.appendLineToFile(evoSuiteFile, "PR.ruGRAM");
Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;");
Test 7: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;");
FileSystemHandling.appendStringToFile(evoSuiteFile, ".d/|");
Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;");
ArrayList<Object> arrayList = new ArrayList<Object>();
scanner.checkStructure(arrayList);
Test 8: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;");
FileSystemHandling.appendStringToFile(evoSuiteFile, "5.@53Y'WuAbV?+o");
Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;");
Test 9: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;");
FileSystemHandling.appendLineToFile(evoSuiteFile, "expected: END. at theGend _f program");
Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;");
Test 10: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;");
byte[] byteArray = new byte[5];
byteArray[0] = (byte)9;
FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;");
Test 11: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;");
byte[] byteArray = new byte[3];
byteArray[0] = (byte)13;
FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;");
Test 12: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;");
FileSystemHandling.appendStringToFile(evoSuiteFile, "&k6K!G=:! t<,N>V;");
Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;");
ArrayList<Object> arrayList = new ArrayList<Object>();
scanner.printLexems(arrayList);
Test 13: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;");
FileSystemHandling.appendStringToFile(evoSuiteFile, "");
ArrayList<Object> arrayList = new ArrayList<Object>();
arrayList.add((Object) null);
Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;");
// Undeclared exception!
try { 
  scanner.printLexems(arrayList);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("Scanner", e);
}

Test 14: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;");
FileSystemHandling.appendStringToFile(evoSuiteFile, "expected: PROGRAM\n   found: VALUE\n   line: 1\n   column: 1");
Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;");
ArrayList advScanning = scanner.advScanning(scanner.lexems);
scanner.printAdvLexems(advScanning);
Test 15: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;");
FileSystemHandling.appendStringToFile(evoSuiteFile, "AP0WL*i/h96Qa1v\"");
FileSystemHandling.appendStringToFile(evoSuiteFile, "AP0WL*i/h96Qa1v\"");
Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;");
scanner.advScanning(scanner.lexems);
Test 16: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;");
FileSystemHandling.appendLineToFile(evoSuiteFile, "TRUE");
Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;");
Test 17: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;");
FileSystemHandling.appendStringToFile(evoSuiteFile, "expected: PROGRAM\n   found: AND\n   line: 1\n   column: 1");
Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;");
scanner.advScanning(scanner.lexems);
Test 18: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;");
FileSystemHandling.appendStringToFile(evoSuiteFile, "INTEGER VARIABLE");
Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;");
scanner.advScanning(scanner.lexems);
Test 19: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;");
FileSystemHandling.appendStringToFile(evoSuiteFile, "T;:");
Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;");
scanner.advScanning(scanner.lexems);
Test 20: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;");
FileSystemHandling.appendLineToFile(evoSuiteFile, "expected: PROGRAM\n   found: =\n   line: 1\n   column: 1");
Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;");
ArrayList<Object> arrayList = new ArrayList<Object>();
scanner.advScanning(arrayList);
Test 21: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;");
FileSystemHandling.appendLineToFile(evoSuiteFile, "F3fsGm<[e5mopaR!0(a");
Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;");
scanner.advScanning(scanner.lexems);
Test 22: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;");
FileSystemHandling.appendStringToFile(evoSuiteFile, "<=");
Scanner scanner = null;
try {
  scanner = new Scanner("&k6K!G=:! t<,N>V;");
  fail("Expecting exception: IndexOutOfBoundsException");

} catch(IndexOutOfBoundsException e) {
   //
   // Index: 2, Size: 2
   //
   verifyException("java.util.ArrayList", e);
}

Test 23: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;");
FileSystemHandling.appendLineToFile(evoSuiteFile, "<D");
Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;");
Test 24: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;");
FileSystemHandling.appendLineToFile(evoSuiteFile, "PROGRAM");
FileSystemHandling.appendLineToFile(evoSuiteFile, "exp=ced: PRORAM\nq Sound: 2\n   l+ne: \n cljmn: )");
Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;");
Test 25: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;");
FileSystemHandling.appendStringToFile(evoSuiteFile, ",");
Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;");
scanner.advScanning(scanner.lexems);
Test 26: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("&k6K!G=:! t<,N>V;");
FileSystemHandling.appendStringToFile(evoSuiteFile, "expected: PROGRAM\n   found: >\n   line: 1\n   column: 1");
Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;");
ArrayList<Object> arrayList = new ArrayList<Object>(scanner.lexems);
scanner.advScanning(arrayList);

* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 17%
* Total number of goals: 817
* Number of covered goals: 135
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 14%
* Total number of goals: 1391
* Number of covered goals: 193
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 56%
* Total number of goals: 9
* Number of covered goals: 5
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 5
* Number of covered goals: 5
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 15%
* Total number of goals: 817
* Number of covered goals: 124
* Generated 27 tests with total length 106
* Resulting test suite's coverage: 40% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 2%
* Compiling and checking tests
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: EvoSuiteFile arg0 = new EvoSuiteFile("&k6K!G=:! t<,N>V;");
FileSystemHandling.appendLineToFile(arg0, "<>");
Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;");

** It was a parseable test case! 
refined test name is: testAppendLineToFileappendsStringToFile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: EvoSuiteFile arg0 = new EvoSuiteFile("&k6K!G=:! t<,N>V;");
FileSystemHandling.appendStringToFile(arg0, "PROGRAM");
Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;");

** It was a parseable test case! 
refined test name is: testAppendingStringToFile
* Compiling Tests
refined test name is: testAppendingStringToFile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: EvoSuiteFile arg0 = new EvoSuiteFile("&k6K!G=:! t<,N>V;");
FileSystemHandling.appendStringToFile(arg0, "AP0WL*i/h96Qa1v\"");
Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;");

** It was a parseable test case! 
refined test name is: testAppendStringToFile
* Compiling Tests
refined test name is: testAppendStringToFile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: EvoSuiteFile arg0 = new EvoSuiteFile("&k6K!G=:! t<,N>V;");
FileSystemHandling.appendStringToFile(arg0, "\"]P.B\"dvuQMx%i<");
Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;");

** It was a parseable test case! 
refined test name is: testAppendStringToFileShouldReturnCorrectResult
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: EvoSuiteFile arg0 = new EvoSuiteFile("&k6K!G=:! t<,N>V;");
FileSystemHandling.appendLineToFile(arg0, "0Etr/'&+");
Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;");

** It was a parseable test case! 
refined test name is: testAppendLineToFileWithExistingFile
* Compiling Tests
refined test name is: testAppendLineToFileWithExistingFile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: EvoSuiteFile arg0 = new EvoSuiteFile("&k6K!G=:! t<,N>V;");
FileSystemHandling.appendStringToFile(arg0, "k7bkf=q~x2|O$}0");
Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;");

** It was a parseable test case! 
refined test name is: testAppendStringWithSpecialCharacters
* Compiling Tests
refined test name is: testAppendStringToFile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: EvoSuiteFile arg0 = new EvoSuiteFile("&k6K!G=:! t<,N>V;");
FileSystemHandling.appendLineToFile(arg0, "PR.ruGRAM");
Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;");

** It was a parseable test case! 
refined test name is: testAppendLineToFile
* Compiling Tests
refined test name is: testScannerReadsNextLineFromFileCorrectly
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: EvoSuiteFile arg0 = new EvoSuiteFile("&k6K!G=:! t<,N>V;");
FileSystemHandling.appendStringToFile(arg0, "5.@53Y'WuAbV?+o");
Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;");

** It was a parseable test case! 
refined test name is: testAppendStringToFile
* Compiling Tests
refined test name is: testAppendingContentToFile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: EvoSuiteFile arg0 = new EvoSuiteFile("&k6K!G=:! t<,N>V;");
FileSystemHandling.appendLineToFile(arg0, "expected: END. at theGend _f program");
Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;");

** It was a parseable test case! 
refined test name is: testAppendLineToFile
* Compiling Tests
refined test name is: testAppendLineToFileExistingFileAndMoreText
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: EvoSuiteFile arg0 = new EvoSuiteFile("&k6K!G=:! t<,N>V;");
byte[] arg1 = new byte[5];
arg1[0] = (byte)9;
FileSystemHandling.appendDataToFile(arg0, arg1);
Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;");

** It was a parseable test case! 
refined test name is: testAppendDataToFile
* Compiling Tests
refined test name is: testAppendDataToFile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: EvoSuiteFile arg0 = new EvoSuiteFile("&k6K!G=:! t<,N>V;");
byte[] arg1 = new byte[3];
arg1[0] = (byte)13;
FileSystemHandling.appendDataToFile(arg0, arg1);
Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;");

** It was a parseable test case! 
refined test name is: testAppendDataToFile
* Compiling Tests
refined test name is: testAppendDataToFileshouldAppendDataToTheGivenFile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: EvoSuiteFile arg0 = new EvoSuiteFile("&k6K!G=:! t<,N>V;");
FileSystemHandling.appendStringToFile(arg0, "AP0WL*i/h96Qa1v\"");
FileSystemHandling.appendStringToFile(arg0, "AP0WL*i/h96Qa1v\"");
Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;");
ArrayList advScanning = scanner.advScanning(scanner.lexems);
assertEquals(6, advScanning.size());


** It was a parseable test case! 
refined test name is: testAppendStringToFileMultipleWrites
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: EvoSuiteFile arg0 = new EvoSuiteFile("&k6K!G=:! t<,N>V;");
FileSystemHandling.appendLineToFile(arg0, "TRUE");
Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;");

** It was a parseable test case! 
refined test name is: testAppendLineToFile
* Compiling Tests
refined test name is: testAppendLineToFileAddsLineToFile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: EvoSuiteFile arg0 = new EvoSuiteFile("&k6K!G=:! t<,N>V;");
FileSystemHandling.appendStringToFile(arg0, "expected: PROGRAM\n   found: AND\n   line: 1\n   column: 1");
Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;");
ArrayList advScanning = scanner.advScanning(scanner.lexems);
assertEquals(12, advScanning.size());


** It was a parseable test case! 
refined test name is: testAppendStringToFile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: EvoSuiteFile arg0 = new EvoSuiteFile("&k6K!G=:! t<,N>V;");
FileSystemHandling.appendStringToFile(arg0, "INTEGER VARIABLE");
Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;");
ArrayList advScanning = scanner.advScanning(scanner.lexems);
assertEquals(2, advScanning.size());


** It was a parseable test case! 
refined test name is: testAppendStringToFileVerifyCorrectnessOfMethod
* Compiling Tests
refined test name is: testAppendStringToFilepreservesContents
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: EvoSuiteFile arg0 = new EvoSuiteFile("&k6K!G=:! t<,N>V;");
FileSystemHandling.appendStringToFile(arg0, "T;:");
Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;");
ArrayList advScanning = scanner.advScanning(scanner.lexems);
assertEquals(3, advScanning.size());


** It was a parseable test case! 
refined test name is: testAppendStringToFileshouldAppendString
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: EvoSuiteFile arg0 = new EvoSuiteFile("&k6K!G=:! t<,N>V;");
FileSystemHandling.appendLineToFile(arg0, "F3fsGm<[e5mopaR!0(a");
Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;");
ArrayList advScanning = scanner.advScanning(scanner.lexems);
assertEquals(2, advScanning.size());


** It was a parseable test case! 
refined test name is: testAppendLineToFileTwoLinesInOutput
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: EvoSuiteFile arg0 = new EvoSuiteFile("&k6K!G=:! t<,N>V;");
FileSystemHandling.appendStringToFile(arg0, "<=");
Scanner scanner = null;
try {
  scanner = new Scanner("&k6K!G=:! t<,N>V;");
  fail("Expecting exception: IndexOutOfBoundsException");

} catch(IndexOutOfBoundsException e) {
   //
   // Index: 2, Size: 2
   //
   verifyException("java.util.ArrayList", e);
}


** It was a parseable test case! 
refined test name is: testAppendingToFileThrowsIndexOutOfBoundsException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: EvoSuiteFile arg0 = new EvoSuiteFile("&k6K!G=:! t<,N>V;");
FileSystemHandling.appendLineToFile(arg0, "<D");
Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;");

** It was a parseable test case! 
refined test name is: testAppendLineToFile
* Compiling Tests
refined test name is: testAppendLineToFile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: EvoSuiteFile arg0 = new EvoSuiteFile("&k6K!G=:! t<,N>V;");
FileSystemHandling.appendLineToFile(arg0, "PROGRAM");
FileSystemHandling.appendLineToFile(arg0, "exp=ced: PRORAM\nq Sound: 2\n   l+ne: \n cljmn: )");
Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;");

** It was a parseable test case! 
refined test name is: testAppendLineToFileWithNewLine
* Compiling Tests
refined test name is: testAppendLineToFileWithNewlineCharacters
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: EvoSuiteFile arg0 = new EvoSuiteFile("&k6K!G=:! t<,N>V;");
FileSystemHandling.appendStringToFile(arg0, ",");
Scanner scanner = new Scanner("&k6K!G=:! t<,N>V;");
ArrayList advScanning = scanner.advScanning(scanner.lexems);
assertEquals(1, advScanning.size());


** It was a parseable test case! 
refined test name is: testAppendStringToFile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 02:15:56.641 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar8616235737807022218.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:15:56.675 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8616235737807022218.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 02:15:56.935 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar8616235737807022218.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:15:56.937 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8616235737807022218.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 02:15:57.030 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar8616235737807022218.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:15:57.033 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8616235737807022218.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 02:15:57.117 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar8616235737807022218.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 02:15:57.120 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8616235737807022218.jar
[MASTER] 02:15:57.204 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar8616235737807022218.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:15:57.207 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8616235737807022218.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 02:15:57.291 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar8616235737807022218.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:15:57.294 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8616235737807022218.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 02:15:57.384 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar8616235737807022218.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:15:57.386 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8616235737807022218.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 02:15:57.471 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar8616235737807022218.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 02:15:57.474 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8616235737807022218.jar
[MASTER] 02:15:57.562 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar8616235737807022218.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:15:57.564 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8616235737807022218.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 02:15:57.652 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar8616235737807022218.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:15:57.655 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8616235737807022218.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 02:15:57.739 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar8616235737807022218.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 02:15:57.741 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8616235737807022218.jar
[MASTER] 02:15:57.833 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar8616235737807022218.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 02:15:57.837 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8616235737807022218.jar
[MASTER] 02:15:57.928 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar8616235737807022218.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:15:57.930 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8616235737807022218.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 02:15:58.026 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar8616235737807022218.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 02:15:58.029 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8616235737807022218.jar
[MASTER] 02:15:58.108 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar8616235737807022218.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:15:58.110 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8616235737807022218.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 02:15:58.196 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar8616235737807022218.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:15:58.199 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8616235737807022218.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 02:15:58.286 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar8616235737807022218.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 02:15:58.288 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8616235737807022218.jar
[MASTER] 02:15:58.375 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar8616235737807022218.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 02:15:58.379 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8616235737807022218.jar
[MASTER] 02:15:58.460 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar8616235737807022218.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 02:15:58.463 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8616235737807022218.jar
[MASTER] 02:15:58.551 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar8616235737807022218.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 02:15:58.555 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8616235737807022218.jar
[MASTER] 02:15:58.629 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar8616235737807022218.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 02:15:58.631 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8616235737807022218.jar
** Write a test suite: 1 called: 0 to improve: false
** Write a test suite: 2 called: 1 to improve: false
** Write a test suite: 4 called: 2 to improve: false
** Write a test suite: 5 called: 3 to improve: false
** Write a test suite: 6 called: 4 to improve: false
** Write a test suite: 7 called: 5 to improve: false
** Write a test suite: 8 called: 6 to improve: false
** Write a test suite: 9 called: 7 to improve: false
** Write a test suite: 10 called: 8 to improve: false
** Write a test suite: 12 called: 9 to improve: false
** Write a test suite: 14 called: 10 to improve: false
** Write a test suite: 18 called: 11 to improve: false
** Write a test suite: 19 called: 12 to improve: false
[MASTER] 02:15:58.821 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar8616235737807022218.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 02:15:58.823 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8616235737807022218.jar
** Write a test suite: 1 called: 0 to improve: false
** Write a test suite: 2 called: 1 to improve: false
** Write a test suite: 6 called: 2 to improve: false
** Write a test suite: 8 called: 3 to improve: false
** Write a test suite: 10 called: 4 to improve: false
** Write a test suite: 11 called: 5 to improve: false
** Write a test suite: 12 called: 6 to improve: false
** Write a test suite: 13 called: 7 to improve: false
** Write a test suite: 14 called: 8 to improve: false
** Write a test suite: 15 called: 9 to improve: false
** Write a test suite: 16 called: 10 to improve: false
** Write a test suite: 18 called: 11 to improve: false
** Write a test suite: 19 called: 12 to improve: false
[MASTER] 02:15:59.142 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar8616235737807022218.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:15:59.144 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8616235737807022218.jar
* Writing tests to file
* Writing JUnit test case 'Scanner_ESTest' to evosuite-tests
** Write a test suite: 1 called: 0 to improve: false
** Write a test suite: 2 called: 1 to improve: false
** Write a test suite: 6 called: 2 to improve: false
** Write a test suite: 8 called: 3 to improve: false
** Write a test suite: 10 called: 4 to improve: false
** Write a test suite: 11 called: 5 to improve: false
** Write a test suite: 12 called: 6 to improve: false
** Write a test suite: 13 called: 7 to improve: false
** Write a test suite: 14 called: 8 to improve: false
** Write a test suite: 15 called: 9 to improve: false
** Write a test suite: 16 called: 10 to improve: false
** Write a test suite: 18 called: 11 to improve: false
** Write a test suite: 19 called: 12 to improve: false
* Done!

* Computation finished
