* EvoSuite 1.0.0-SNAPSHOT
* Going to generate test cases for class: Scanner
* Starting Client-0
* Properties loaded from /home/roham/Results-Utestgen/dataset/SF110-new-res/50_biff/evosuite-files/evosuite.properties
* Connecting to master process on port 11625
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 05:30:33.879 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 05:30:33.888 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 05:30:33.889 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 05:30:33.937 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class Scanner
* Test criteria:
  - Branch Coverage
  - Line Coverage
  - Method-Output Coverage
  - Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 3039
* Using seed 1710221430479
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%]* Initial Number of Goals in DynaMOSA = 276 / 3039
[Progress:>                             0%] [Cov:>                                  0%][Progress:>                             2%] [Cov:>                                  0%][Progress:>                             3%] [Cov:>                                  0%][Progress:>                             3%] [Cov:>                                  0%][Progress:=>                            4%] [Cov:===>                               11%][Progress:=>                            5%] [Cov:===>                               11%][Progress:=>                            6%] [Cov:=========>                         28%][Progress:=>                            6%] [Cov:==========>                        29%][Progress:=>                            6%] [Cov:==========>                        29%][Progress:==>                           7%] [Cov:==========>                        30%][Progress:==>                           7%] [Cov:==========>                        30%][Progress:==>                           7%] [Cov:==========>                        30%][Progress:==>                           7%] [Cov:==========>                        30%][Progress:==>                           8%] [Cov:==========>                        31%][Progress:==>                           8%] [Cov:==========>                        31%][Progress:==>                           8%] [Cov:==========>                        31%][Progress:==>                           9%] [Cov:==========>                        31%][Progress:==>                           9%] [Cov:==========>                        31%][Progress:==>                           9%] [Cov:===========>                       32%][Progress:==>                           9%] [Cov:===========>                       32%][Progress:===>                          10%] [Cov:===========>                       32%][Progress:===>                          10%] [Cov:===========>                       32%][Progress:===>                          10%] [Cov:===========>                       32%][Progress:===>                          10%] [Cov:===========>                       33%][Progress:===>                          10%] [Cov:===========>                       33%][Progress:===>                          10%] [Cov:===========>                       33%][Progress:===>                          11%] [Cov:===========>                       33%][Progress:===>                          11%] [Cov:===========>                       33%][Progress:===>                          11%] [Cov:===========>                       33%][Progress:===>                          11%] [Cov:===========>                       33%][Progress:===>                          12%] [Cov:===========>                       33%][Progress:===>                          12%] [Cov:===========>                       33%][Progress:===>                          12%] [Cov:=============>                     38%][Progress:===>                          12%] [Cov:=============>                     38%][Progress:===>                          12%] [Cov:=============>                     38%][Progress:===>                          12%] [Cov:=============>                     38%][Progress:===>                          13%] [Cov:=============>                     38%][Progress:===>                          13%] [Cov:=============>                     38%][Progress:===>                          13%] [Cov:=============>                     38%][Progress:===>                          13%] [Cov:=============>                     38%][Progress:===>                          13%] [Cov:=============>                     38%][Progress:====>                         14%] [Cov:=============>                     38%][Progress:====>                         14%] [Cov:=============>                     38%][Progress:====>                         14%] [Cov:=============>                     38%][Progress:====>                         14%] [Cov:=============>                     38%][Progress:====>                         14%] [Cov:=============>                     38%][Progress:====>                         14%] [Cov:=============>                     38%][Progress:====>                         14%] [Cov:=============>                     38%][Progress:====>                         15%] [Cov:=============>                     38%][Progress:====>                         15%] [Cov:=============>                     38%][Progress:====>                         15%] [Cov:=============>                     38%][Progress:====>                         15%] [Cov:=============>                     39%][Progress:====>                         15%] [Cov:=============>                     39%][Progress:====>                         16%] [Cov:=============>                     39%][Progress:====>                         16%] [Cov:=============>                     39%][Progress:====>                         16%] [Cov:=============>                     39%][Progress:====>                         16%] [Cov:=============>                     39%][Progress:====>                         16%] [Cov:=============>                     39%][Progress:====>                         16%] [Cov:=============>                     39%][Progress:====>                         16%] [Cov:=============>                     39%][Progress:====>                         16%] [Cov:=============>                     39%][Progress:====>                         16%] [Cov:=============>                     39%][Progress:=====>                        17%] [Cov:=============>                     39%][Progress:=====>                        17%] [Cov:=============>                     39%][Progress:=====>                        17%] [Cov:=============>                     39%][Progress:=====>                        17%] [Cov:=============>                     39%][Progress:=====>                        17%] [Cov:=============>                     39%][Progress:=====>                        17%] [Cov:=============>                     39%][Progress:=====>                        17%] [Cov:=============>                     39%][Progress:=====>                        18%] [Cov:=============>                     39%][Progress:=====>                        18%] [Cov:=============>                     39%][Progress:=====>                        18%] [Cov:=============>                     39%][Progress:=====>                        18%] [Cov:=============>                     39%][Progress:=====>                        18%] [Cov:=============>                     39%][Progress:=====>                        19%] [Cov:=============>                     39%][Progress:=====>                        19%] [Cov:=============>                     39%][Progress:=====>                        19%] [Cov:=============>                     39%][Progress:=====>                        19%] [Cov:=============>                     39%][Progress:=====>                        19%] [Cov:=============>                     39%][Progress:=====>                        19%] [Cov:=============>                     39%][Progress:=====>                        19%] [Cov:=============>                     39%][Progress:======>                       20%] [Cov:=============>                     39%][Progress:======>                       20%] [Cov:=============>                     39%][Progress:======>                       20%] [Cov:=============>                     39%][Progress:======>                       20%] [Cov:=============>                     39%][Progress:======>                       20%] [Cov:=============>                     39%][Progress:======>                       20%] [Cov:=============>                     39%][Progress:======>                       20%] [Cov:=============>                     39%][Progress:======>                       20%] [Cov:=============>                     39%][Progress:======>                       21%] [Cov:=============>                     39%][Progress:======>                       21%] [Cov:=============>                     39%][Progress:======>                       21%] [Cov:=============>                     39%][Progress:======>                       21%] [Cov:=============>                     39%][Progress:======>                       21%] [Cov:=============>                     39%][Progress:======>                       21%] [Cov:=============>                     39%][Progress:======>                       21%] [Cov:=============>                     39%][Progress:======>                       22%] [Cov:=============>                     39%][Progress:======>                       22%] [Cov:=============>                     39%][Progress:======>                       22%] [Cov:=============>                     39%][Progress:======>                       22%] [Cov:=============>                     39%][Progress:======>                       22%] [Cov:=============>                     39%][Progress:======>                       23%] [Cov:=============>                     39%][Progress:======>                       23%] [Cov:=============>                     39%][Progress:======>                       23%] [Cov:=============>                     39%][Progress:======>                       23%] [Cov:=============>                     39%][Progress:======>                       23%] [Cov:=============>                     39%][Progress:======>                       23%] [Cov:=============>                     39%][Progress:======>                       23%] [Cov:=============>                     39%][Progress:=======>                      24%] [Cov:=============>                     39%][Progress:=======>                      24%] [Cov:=============>                     39%][Progress:=======>                      24%] [Cov:=============>                     39%][Progress:=======>                      24%] [Cov:=============>                     39%][Progress:=======>                      24%] [Cov:=============>                     39%][Progress:=======>                      24%] [Cov:=============>                     39%][Progress:=======>                      25%] [Cov:=============>                     39%][Progress:=======>                      25%] [Cov:=============>                     39%][Progress:=======>                      25%] [Cov:=============>                     39%][Progress:=======>                      25%] [Cov:=============>                     39%][Progress:=======>                      25%] [Cov:=============>                     39%][Progress:=======>                      25%] [Cov:=============>                     39%][Progress:=======>                      26%] [Cov:=============>                     39%][Progress:=======>                      26%] [Cov:=============>                     39%][Progress:=======>                      26%] [Cov:=============>                     39%][Progress:=======>                      26%] [Cov:=============>                     39%][Progress:=======>                      26%] [Cov:=============>                     39%][Progress:=======>                      26%] [Cov:=============>                     39%][Progress:=======>                      26%] [Cov:=============>                     39%][Progress:========>                     27%] [Cov:=============>                     39%][Progress:========>                     27%] [Cov:=============>                     39%][Progress:========>                     27%] [Cov:=============>                     39%][Progress:========>                     27%] [Cov:=============>                     39%][Progress:========>                     27%] [Cov:=============>                     39%][Progress:========>                     27%] [Cov:=============>                     39%][Progress:========>                     28%] [Cov:=============>                     39%][Progress:========>                     28%] [Cov:=============>                     39%][Progress:========>                     28%] [Cov:=============>                     39%][Progress:========>                     28%] [Cov:=============>                     39%][Progress:========>                     28%] [Cov:=============>                     39%][Progress:========>                     28%] [Cov:=============>                     39%][Progress:========>                     29%] [Cov:=============>                     39%][Progress:========>                     29%] [Cov:=============>                     39%][Progress:========>                     29%] [Cov:=============>                     39%][Progress:========>                     29%] [Cov:=============>                     39%][Progress:========>                     29%] [Cov:=============>                     39%][Progress:=========>                    30%] [Cov:=============>                     39%][Progress:=========>                    30%] [Cov:=============>                     39%][Progress:=========>                    30%] [Cov:=============>                     39%][Progress:=========>                    30%] [Cov:=============>                     39%][Progress:=========>                    30%] [Cov:=============>                     39%][Progress:=========>                    30%] [Cov:=============>                     39%][Progress:=========>                    31%] [Cov:=============>                     39%][Progress:=========>                    31%] [Cov:=============>                     39%][Progress:=========>                    31%] [Cov:=============>                     39%][Progress:=========>                    31%] [Cov:=============>                     39%][Progress:=========>                    31%] [Cov:=============>                     39%][Progress:=========>                    32%] [Cov:=============>                     39%][Progress:=========>                    32%] [Cov:=============>                     39%][Progress:=========>                    32%] [Cov:=============>                     39%][Progress:=========>                    32%] [Cov:=============>                     39%][Progress:=========>                    32%] [Cov:=============>                     39%][Progress:=========>                    32%] [Cov:=============>                     39%][Progress:=========>                    33%] [Cov:=============>                     39%][Progress:=========>                    33%] [Cov:=============>                     39%][Progress:=========>                    33%] [Cov:=============>                     39%][Progress:=========>                    33%] [Cov:=============>                     39%][Progress:=========>                    33%] [Cov:=============>                     39%][Progress:=========>                    33%] [Cov:=============>                     39%][Progress:=========>                    33%] [Cov:=============>                     39%][Progress:==========>                   34%] [Cov:=============>                     39%][Progress:==========>                   34%] [Cov:=============>                     39%][Progress:==========>                   34%] [Cov:=============>                     39%][Progress:==========>                   34%] [Cov:=============>                     39%][Progress:==========>                   34%] [Cov:=============>                     39%][Progress:==========>                   34%] [Cov:=============>                     39%][Progress:==========>                   35%] [Cov:=============>                     39%][Progress:==========>                   35%] [Cov:=============>                     39%][Progress:==========>                   35%] [Cov:=============>                     39%][Progress:==========>                   35%] [Cov:=============>                     39%][Progress:==========>                   35%] [Cov:=============>                     39%][Progress:==========>                   35%] [Cov:=============>                     39%][Progress:==========>                   35%] [Cov:=============>                     39%][Progress:==========>                   35%] [Cov:=============>                     39%][Progress:==========>                   35%] [Cov:=============>                     39%][Progress:==========>                   36%] [Cov:=============>                     39%][Progress:==========>                   36%] [Cov:=============>                     39%][Progress:==========>                   36%] [Cov:=============>                     39%][Progress:==========>                   36%] [Cov:=============>                     39%][Progress:==========>                   36%] [Cov:=============>                     39%][Progress:==========>                   36%] [Cov:=============>                     39%][Progress:==========>                   36%] [Cov:=============>                     39%][Progress:==========>                   36%] [Cov:=============>                     39%][Progress:==========>                   36%] [Cov:=============>                     39%][Progress:===========>                  37%] [Cov:=============>                     39%][Progress:===========>                  37%] [Cov:=============>                     39%][Progress:===========>                  37%] [Cov:=============>                     39%][Progress:===========>                  37%] [Cov:=============>                     39%][Progress:===========>                  37%] [Cov:=============>                     39%][Progress:===========>                  37%] [Cov:=============>                     39%][Progress:===========>                  37%] [Cov:=============>                     39%][Progress:===========>                  37%] [Cov:=============>                     39%][Progress:===========>                  38%] [Cov:=============>                     39%][Progress:===========>                  38%] [Cov:=============>                     39%][Progress:===========>                  38%] [Cov:=============>                     39%][Progress:===========>                  38%] [Cov:=============>                     39%][Progress:===========>                  38%] [Cov:=============>                     39%][Progress:===========>                  38%] [Cov:=============>                     39%][Progress:===========>                  38%] [Cov:=============>                     39%][Progress:===========>                  38%] [Cov:=============>                     39%][Progress:===========>                  39%] [Cov:=============>                     39%][Progress:===========>                  39%] [Cov:=============>                     39%][Progress:===========>                  39%] [Cov:=============>                     39%][Progress:===========>                  39%] [Cov:=============>                     39%][Progress:===========>                  39%] [Cov:=============>                     39%][Progress:===========>                  39%] [Cov:=============>                     39%][Progress:===========>                  39%] [Cov:=============>                     39%][Progress:============>                 40%] [Cov:=============>                     39%][Progress:============>                 40%] [Cov:=============>                     39%][Progress:============>                 40%] [Cov:=============>                     39%][Progress:============>                 40%] [Cov:=============>                     39%][Progress:============>                 40%] [Cov:=============>                     39%][Progress:============>                 40%] [Cov:=============>                     39%][Progress:============>                 40%] [Cov:=============>                     39%][Progress:============>                 41%] [Cov:=============>                     39%][Progress:============>                 41%] [Cov:=============>                     39%][Progress:============>                 41%] [Cov:=============>                     39%][Progress:============>                 41%] [Cov:=============>                     39%][Progress:============>                 41%] [Cov:=============>                     39%][Progress:============>                 41%] [Cov:=============>                     39%][Progress:============>                 41%] [Cov:=============>                     39%][Progress:============>                 41%] [Cov:=============>                     39%][Progress:============>                 42%] [Cov:=============>                     39%][Progress:============>                 42%] [Cov:=============>                     39%][Progress:============>                 42%] [Cov:=============>                     39%][Progress:============>                 42%] [Cov:=============>                     39%][Progress:============>                 42%] [Cov:=============>                     39%][Progress:============>                 42%] [Cov:=============>                     39%][Progress:============>                 42%] [Cov:=============>                     39%][Progress:============>                 43%] [Cov:=============>                     39%][Progress:============>                 43%] [Cov:=============>                     39%][Progress:============>                 43%] [Cov:=============>                     39%][Progress:============>                 43%] [Cov:=============>                     39%][Progress:============>                 43%] [Cov:=============>                     39%][Progress:=============>                44%] [Cov:=============>                     39%][Progress:=============>                44%] [Cov:=============>                     39%][Progress:=============>                44%] [Cov:=============>                     39%][Progress:=============>                44%] [Cov:=============>                     39%][Progress:=============>                44%] [Cov:=============>                     39%][Progress:=============>                44%] [Cov:=============>                     39%][Progress:=============>                44%] [Cov:=============>                     39%][Progress:=============>                45%] [Cov:=============>                     39%][Progress:=============>                45%] [Cov:=============>                     39%][Progress:=============>                45%] [Cov:=============>                     39%][Progress:=============>                45%] [Cov:=============>                     39%][Progress:=============>                45%] [Cov:=============>                     39%][Progress:=============>                45%] [Cov:=============>                     39%][Progress:=============>                45%] [Cov:=============>                     39%][Progress:=============>                46%] [Cov:=============>                     39%][Progress:=============>                46%] [Cov:=============>                     39%][Progress:=============>                46%] [Cov:=============>                     39%][Progress:=============>                46%] [Cov:=============>                     39%][Progress:=============>                46%] [Cov:=============>                     39%][Progress:=============>                46%] [Cov:=============>                     39%][Progress:=============>                46%] [Cov:=============>                     39%][Progress:=============>                46%] [Cov:=============>                     39%][Progress:==============>               47%] [Cov:=============>                     39%][Progress:==============>               47%] [Cov:=============>                     39%][Progress:==============>               47%] [Cov:=============>                     39%][Progress:==============>               47%] [Cov:=============>                     39%][Progress:==============>               47%] [Cov:=============>                     39%][Progress:==============>               47%] [Cov:=============>                     39%][Progress:==============>               48%] [Cov:=============>                     39%][Progress:==============>               48%] [Cov:=============>                     39%][Progress:==============>               48%] [Cov:=============>                     39%][Progress:==============>               48%] [Cov:=============>                     39%][Progress:==============>               48%] [Cov:=============>                     39%][Progress:==============>               48%] [Cov:=============>                     39%][Progress:==============>               49%] [Cov:=============>                     39%][Progress:==============>               49%] [Cov:=============>                     39%][Progress:==============>               49%] [Cov:=============>                     39%][Progress:==============>               49%] [Cov:=============>                     39%][Progress:==============>               49%] [Cov:=============>                     39%][Progress:==============>               49%] [Cov:=============>                     39%][Progress:==============>               49%] [Cov:=============>                     39%][Progress:==============>               49%] [Cov:=============>                     39%][Progress:==============>               49%] [Cov:=============>                     39%][Progress:===============>              50%] [Cov:=============>                     39%][Progress:===============>              50%] [Cov:=============>                     39%][Progress:===============>              50%] [Cov:=============>                     39%][Progress:===============>              50%] [Cov:=============>                     39%][Progress:===============>              50%] [Cov:=============>                     39%][Progress:===============>              50%] [Cov:=============>                     39%][Progress:===============>              50%] [Cov:=============>                     39%][Progress:===============>              50%] [Cov:=============>                     39%][Progress:===============>              51%] [Cov:=============>                     39%][Progress:===============>              51%] [Cov:=============>                     39%][Progress:===============>              51%] [Cov:=============>                     39%][Progress:===============>              51%] [Cov:=============>                     39%][Progress:===============>              51%] [Cov:=============>                     39%][Progress:===============>              51%] [Cov:=============>                     39%][Progress:===============>              51%] [Cov:=============>                     39%][Progress:===============>              52%] [Cov:=============>                     39%][Progress:===============>              52%] [Cov:=============>                     39%][Progress:===============>              52%] [Cov:=============>                     39%][Progress:===============>              52%] [Cov:=============>                     39%][Progress:===============>              52%] [Cov:=============>                     39%][Progress:===============>              52%] [Cov:=============>                     39%][Progress:===============>              53%] [Cov:=============>                     39%][Progress:===============>              53%] [Cov:=============>                     39%][Progress:===============>              53%] [Cov:=============>                     39%][Progress:===============>              53%] [Cov:=============>                     39%][Progress:===============>              53%] [Cov:=============>                     39%][Progress:===============>              53%] [Cov:=============>                     39%][Progress:===============>              53%] [Cov:=============>                     39%][Progress:================>             54%] [Cov:=============>                     39%][Progress:================>             54%] [Cov:=============>                     39%][Progress:================>             54%] [Cov:=============>                     39%][Progress:================>             54%] [Cov:=============>                     39%][Progress:================>             54%] [Cov:=============>                     39%][Progress:================>             54%] [Cov:=============>                     39%][Progress:================>             54%] [Cov:=============>                     39%][Progress:================>             54%] [Cov:=============>                     39%][Progress:================>             55%] [Cov:=============>                     39%][Progress:================>             55%] [Cov:=============>                     39%][Progress:================>             55%] [Cov:=============>                     39%][Progress:================>             55%] [Cov:=============>                     39%][Progress:================>             55%] [Cov:=============>                     39%][Progress:================>             55%] [Cov:=============>                     39%][Progress:================>             55%] [Cov:=============>                     39%][Progress:================>             55%] [Cov:=============>                     39%][Progress:================>             56%] [Cov:=============>                     39%][Progress:================>             56%] [Cov:=============>                     39%][Progress:================>             56%] [Cov:=============>                     39%][Progress:================>             56%] [Cov:=============>                     39%][Progress:================>             56%] [Cov:=============>                     39%][Progress:================>             56%] [Cov:=============>                     39%][Progress:================>             56%] [Cov:=============>                     39%][Progress:=================>            57%] [Cov:==============>                    40%][Progress:=================>            57%] [Cov:==============>                    40%][Progress:=================>            57%] [Cov:==============>                    40%][Progress:=================>            57%] [Cov:==============>                    40%][Progress:=================>            57%] [Cov:==============>                    40%][Progress:=================>            57%] [Cov:==============>                    40%][Progress:=================>            57%] [Cov:==============>                    40%][Progress:=================>            57%] [Cov:==============>                    40%][Progress:=================>            58%] [Cov:==============>                    40%][Progress:=================>            58%] [Cov:==============>                    40%][Progress:=================>            58%] [Cov:==============>                    40%][Progress:=================>            58%] [Cov:==============>                    40%][Progress:=================>            58%] [Cov:==============>                    40%][Progress:=================>            58%] [Cov:==============>                    40%][Progress:=================>            59%] [Cov:==============>                    40%][Progress:=================>            59%] [Cov:==============>                    40%][Progress:=================>            59%] [Cov:==============>                    40%][Progress:=================>            59%] [Cov:==============>                    40%][Progress:=================>            59%] [Cov:==============>                    40%][Progress:=================>            59%] [Cov:==============>                    40%][Progress:=================>            59%] [Cov:==============>                    40%][Progress:==================>           60%] [Cov:==============>                    40%][Progress:==================>           60%] [Cov:==============>                    40%][Progress:==================>           60%] [Cov:==============>                    40%][Progress:==================>           60%] [Cov:==============>                    40%][Progress:==================>           60%] [Cov:==============>                    40%][Progress:==================>           60%] [Cov:==============>                    40%][Progress:==================>           61%] [Cov:==============>                    40%][Progress:==================>           61%] [Cov:==============>                    40%][Progress:==================>           61%] [Cov:==============>                    40%][Progress:==================>           61%] [Cov:==============>                    40%][Progress:==================>           61%] [Cov:==============>                    40%][Progress:==================>           61%] [Cov:==============>                    40%][Progress:==================>           61%] [Cov:==============>                    40%][Progress:==================>           62%] [Cov:==============>                    40%][Progress:==================>           62%] [Cov:==============>                    40%][Progress:==================>           62%] [Cov:==============>                    40%][Progress:==================>           62%] [Cov:==============>                    40%][Progress:==================>           62%] [Cov:==============>                    40%][Progress:==================>           62%] [Cov:==============>                    40%][Progress:==================>           62%] [Cov:==============>                    40%][Progress:==================>           62%] [Cov:==============>                    40%][Progress:==================>           62%] [Cov:==============>                    40%][Progress:==================>           62%] [Cov:==============>                    40%][Progress:==================>           63%] [Cov:==============>                    40%][Progress:==================>           63%] [Cov:==============>                    40%][Progress:==================>           63%] [Cov:==============>                    40%][Progress:==================>           63%] [Cov:==============>                    40%][Progress:==================>           63%] [Cov:==============>                    40%][Progress:==================>           63%] [Cov:==============>                    40%][Progress:==================>           63%] [Cov:==============>                    40%][Progress:==================>           63%] [Cov:==============>                    40%][Progress:==================>           63%] [Cov:==============>                    40%][Progress:===================>          64%] [Cov:==============>                    40%][Progress:===================>          64%] [Cov:==============>                    40%][Progress:===================>          64%] [Cov:==============>                    40%][Progress:===================>          64%] [Cov:==============>                    40%][Progress:===================>          64%] [Cov:==============>                    40%][Progress:===================>          65%] [Cov:==============>                    40%][Progress:===================>          65%] [Cov:==============>                    40%][Progress:===================>          65%] [Cov:==============>                    40%][Progress:===================>          65%] [Cov:==============>                    40%][Progress:===================>          65%] [Cov:==============>                    40%][Progress:===================>          65%] [Cov:==============>                    40%][Progress:===================>          66%] [Cov:==============>                    40%][Progress:===================>          66%] [Cov:==============>                    40%][Progress:===================>          66%] [Cov:==============>                    40%][Progress:===================>          66%] [Cov:==============>                    40%][Progress:===================>          66%] [Cov:==============>                    40%][Progress:===================>          66%] [Cov:==============>                    40%][Progress:===================>          66%] [Cov:==============>                    40%][Progress:====================>         67%] [Cov:==============>                    40%][Progress:====================>         67%] [Cov:==============>                    40%][Progress:====================>         67%] [Cov:==============>                    40%][Progress:====================>         67%] [Cov:==============>                    40%][Progress:====================>         67%] [Cov:==============>                    40%][Progress:====================>         67%] [Cov:==============>                    40%][Progress:====================>         68%] [Cov:==============>                    40%][Progress:====================>         68%] [Cov:==============>                    40%][Progress:====================>         68%] [Cov:==============>                    40%][Progress:====================>         68%] [Cov:==============>                    40%][Progress:====================>         68%] [Cov:==============>                    40%][Progress:====================>         68%] [Cov:==============>                    40%][Progress:====================>         69%] [Cov:==============>                    40%][Progress:====================>         69%] [Cov:==============>                    40%][Progress:====================>         69%] [Cov:==============>                    40%][Progress:====================>         69%] [Cov:==============>                    40%][Progress:====================>         69%] [Cov:==============>                    40%][Progress:=====================>        70%] [Cov:==============>                    40%][Progress:=====================>        70%] [Cov:==============>                    40%][Progress:=====================>        70%] [Cov:==============>                    40%][Progress:=====================>        70%] [Cov:==============>                    40%][Progress:=====================>        70%] [Cov:==============>                    40%][Progress:=====================>        70%] [Cov:==============>                    40%][Progress:=====================>        71%] [Cov:==============>                    40%][Progress:=====================>        71%] [Cov:==============>                    40%][Progress:=====================>        71%] [Cov:==============>                    40%][Progress:=====================>        71%] [Cov:==============>                    40%][Progress:=====================>        71%] [Cov:==============>                    40%][Progress:=====================>        72%] [Cov:==============>                    40%][Progress:=====================>        72%] [Cov:==============>                    40%][Progress:=====================>        72%] [Cov:==============>                    40%][Progress:=====================>        72%] [Cov:==============>                    40%][Progress:=====================>        72%] [Cov:==============>                    40%][Progress:=====================>        72%] [Cov:==============>                    40%][Progress:=====================>        72%] [Cov:==============>                    40%][Progress:=====================>        73%] [Cov:==============>                    40%][Progress:=====================>        73%] [Cov:==============>                    40%][Progress:=====================>        73%] [Cov:==============>                    40%][Progress:=====================>        73%] [Cov:==============>                    40%][Progress:=====================>        73%] [Cov:==============>                    40%][Progress:=====================>        73%] [Cov:==============>                    40%][Progress:=====================>        73%] [Cov:==============>                    40%][Progress:=====================>        73%] [Cov:==============>                    40%][Progress:=====================>        73%] [Cov:==============>                    40%][Progress:======================>       74%] [Cov:==============>                    40%][Progress:======================>       74%] [Cov:==============>                    40%][Progress:======================>       74%] [Cov:==============>                    40%][Progress:======================>       74%] [Cov:==============>                    40%][Progress:======================>       74%] [Cov:==============>                    40%][Progress:======================>       74%] [Cov:==============>                    40%][Progress:======================>       74%] [Cov:==============>                    40%][Progress:======================>       74%] [Cov:==============>                    40%][Progress:======================>       74%] [Cov:==============>                    40%][Progress:======================>       75%] [Cov:==============>                    40%][Progress:======================>       75%] [Cov:==============>                    40%][Progress:======================>       75%] [Cov:==============>                    40%][Progress:======================>       75%] [Cov:==============>                    40%][Progress:======================>       75%] [Cov:==============>                    40%][Progress:======================>       75%] [Cov:==============>                    40%][Progress:======================>       75%] [Cov:==============>                    40%][Progress:======================>       75%] [Cov:==============>                    40%][Progress:======================>       76%] [Cov:==============>                    40%][Progress:======================>       76%] [Cov:==============>                    40%][Progress:======================>       76%] [Cov:==============>                    40%][Progress:======================>       76%] [Cov:==============>                    40%][Progress:======================>       76%] [Cov:==============>                    40%][Progress:======================>       76%] [Cov:==============>                    40%][Progress:======================>       76%] [Cov:==============>                    40%][Progress:=======================>      77%] [Cov:==============>                    40%][Progress:=======================>      77%] [Cov:==============>                    40%][Progress:=======================>      77%] [Cov:==============>                    40%][Progress:=======================>      77%] [Cov:==============>                    40%][Progress:=======================>      77%] [Cov:==============>                    40%][Progress:=======================>      77%] [Cov:==============>                    40%][Progress:=======================>      78%] [Cov:==============>                    40%][Progress:=======================>      78%] [Cov:==============>                    40%][Progress:=======================>      78%] [Cov:==============>                    40%][Progress:=======================>      78%] [Cov:==============>                    40%][Progress:=======================>      78%] [Cov:==============>                    40%][Progress:=======================>      78%] [Cov:==============>                    40%][Progress:=======================>      79%] [Cov:==============>                    40%][Progress:=======================>      79%] [Cov:==============>                    40%][Progress:=======================>      79%] [Cov:==============>                    40%][Progress:=======================>      79%] [Cov:==============>                    40%][Progress:=======================>      79%] [Cov:==============>                    40%][Progress:=======================>      79%] [Cov:==============>                    40%][Progress:=======================>      79%] [Cov:==============>                    40%][Progress:=======================>      79%] [Cov:==============>                    40%][Progress:=======================>      79%] [Cov:==============>                    40%][Progress:========================>     80%] [Cov:==============>                    40%][Progress:========================>     80%] [Cov:==============>                    40%][Progress:========================>     80%] [Cov:==============>                    40%][Progress:========================>     80%] [Cov:==============>                    40%][Progress:========================>     80%] [Cov:==============>                    40%][Progress:========================>     80%] [Cov:==============>                    40%][Progress:========================>     80%] [Cov:==============>                    40%][Progress:========================>     80%] [Cov:==============>                    40%][Progress:========================>     81%] [Cov:==============>                    40%][Progress:========================>     81%] [Cov:==============>                    40%][Progress:========================>     81%] [Cov:==============>                    40%][Progress:========================>     81%] [Cov:==============>                    40%][Progress:========================>     81%] [Cov:==============>                    40%][Progress:========================>     81%] [Cov:==============>                    40%][Progress:========================>     81%] [Cov:==============>                    40%][Progress:========================>     81%] [Cov:==============>                    40%][Progress:========================>     82%] [Cov:==============>                    40%][Progress:========================>     82%] [Cov:==============>                    40%][Progress:========================>     82%] [Cov:==============>                    40%][Progress:========================>     82%] [Cov:==============>                    40%][Progress:========================>     82%] [Cov:==============>                    40%][Progress:========================>     82%] [Cov:==============>                    40%][Progress:========================>     82%] [Cov:==============>                    40%][Progress:========================>     82%] [Cov:==============>                    40%][Progress:========================>     83%] [Cov:==============>                    40%][Progress:========================>     83%] [Cov:==============>                    40%][Progress:========================>     83%] [Cov:==============>                    40%][Progress:========================>     83%] [Cov:==============>                    40%][Progress:========================>     83%] [Cov:==============>                    40%][Progress:========================>     83%] [Cov:==============>                    40%][Progress:=========================>    84%] [Cov:==============>                    40%][Progress:=========================>    84%] [Cov:==============>                    40%][Progress:=========================>    84%] [Cov:==============>                    40%][Progress:=========================>    84%] [Cov:==============>                    40%][Progress:=========================>    84%] [Cov:==============>                    40%][Progress:=========================>    84%] [Cov:==============>                    40%][Progress:=========================>    85%] [Cov:==============>                    40%][Progress:=========================>    85%] [Cov:==============>                    40%][Progress:=========================>    85%] [Cov:==============>                    40%][Progress:=========================>    85%] [Cov:==============>                    40%][Progress:=========================>    85%] [Cov:==============>                    40%][Progress:=========================>    85%] [Cov:==============>                    40%][Progress:=========================>    85%] [Cov:==============>                    40%][Progress:=========================>    86%] [Cov:==============>                    40%][Progress:=========================>    86%] [Cov:==============>                    40%][Progress:=========================>    86%] [Cov:==============>                    40%][Progress:=========================>    86%] [Cov:==============>                    40%][Progress:=========================>    86%] [Cov:==============>                    40%][Progress:=========================>    86%] [Cov:==============>                    40%][Progress:=========================>    86%] [Cov:==============>                    40%][Progress:=========================>    86%] [Cov:==============>                    40%][Progress:==========================>   87%] [Cov:==============>                    40%][Progress:==========================>   87%] [Cov:==============>                    40%][Progress:==========================>   87%] [Cov:==============>                    40%][Progress:==========================>   87%] [Cov:==============>                    40%][Progress:==========================>   87%] [Cov:==============>                    40%][Progress:==========================>   87%] [Cov:==============>                    40%][Progress:==========================>   87%] [Cov:==============>                    40%][Progress:==========================>   88%] [Cov:==============>                    40%][Progress:==========================>   88%] [Cov:==============>                    40%][Progress:==========================>   88%] [Cov:==============>                    40%][Progress:==========================>   88%] [Cov:==============>                    40%][Progress:==========================>   88%] [Cov:==============>                    40%][Progress:==========================>   88%] [Cov:==============>                    40%][Progress:==========================>   89%] [Cov:==============>                    40%][Progress:==========================>   89%] [Cov:==============>                    40%][Progress:==========================>   89%] [Cov:==============>                    40%][Progress:==========================>   89%] [Cov:==============>                    40%][Progress:==========================>   89%] [Cov:==============>                    40%][Progress:==========================>   89%] [Cov:==============>                    40%][Progress:==========================>   89%] [Cov:==============>                    40%][Progress:==========================>   89%] [Cov:==============>                    40%][Progress:==========================>   89%] [Cov:==============>                    40%][Progress:===========================>  90%] [Cov:==============>                    40%][Progress:===========================>  90%] [Cov:==============>                    40%][Progress:===========================>  90%] [Cov:==============>                    40%][Progress:===========================>  90%] [Cov:==============>                    40%][Progress:===========================>  90%] [Cov:==============>                    40%][Progress:===========================>  90%] [Cov:==============>                    40%][Progress:===========================>  90%] [Cov:==============>                    40%][Progress:===========================>  91%] [Cov:==============>                    40%][Progress:===========================>  91%] [Cov:==============>                    40%][Progress:===========================>  91%] [Cov:==============>                    40%][Progress:===========================>  91%] [Cov:==============>                    40%][Progress:===========================>  91%] [Cov:==============>                    40%][Progress:===========================>  91%] [Cov:==============>                    40%][Progress:===========================>  91%] [Cov:==============>                    40%][Progress:===========================>  91%] [Cov:==============>                    40%][Progress:===========================>  91%] [Cov:==============>                    40%][Progress:===========================>  92%] [Cov:==============>                    40%][Progress:===========================>  92%] [Cov:==============>                    40%][Progress:===========================>  92%] [Cov:==============>                    40%][Progress:===========================>  92%] [Cov:==============>                    40%][Progress:===========================>  92%] [Cov:==============>                    40%][Progress:===========================>  92%] [Cov:==============>                    40%][Progress:===========================>  92%] [Cov:==============>                    40%][Progress:===========================>  92%] [Cov:==============>                    40%][Progress:===========================>  93%] [Cov:==============>                    40%][Progress:===========================>  93%] [Cov:==============>                    40%][Progress:===========================>  93%] [Cov:==============>                    40%][Progress:===========================>  93%] [Cov:==============>                    40%][Progress:===========================>  93%] [Cov:==============>                    40%][Progress:===========================>  93%] [Cov:==============>                    40%][Progress:===========================>  93%] [Cov:==============>                    40%][Progress:===========================>  93%] [Cov:==============>                    40%][Progress:============================> 94%] [Cov:==============>                    40%][Progress:============================> 94%] [Cov:==============>                    40%][Progress:============================> 94%] [Cov:==============>                    40%][Progress:============================> 94%] [Cov:==============>                    40%][Progress:============================> 94%] [Cov:==============>                    40%][Progress:============================> 94%] [Cov:==============>                    40%][Progress:============================> 94%] [Cov:==============>                    40%][Progress:============================> 94%] [Cov:==============>                    40%][Progress:============================> 95%] [Cov:==============>                    40%][Progress:============================> 95%] [Cov:==============>                    40%][Progress:============================> 95%] [Cov:==============>                    40%][Progress:============================> 95%] [Cov:==============>                    40%][Progress:============================> 95%] [Cov:==============>                    40%][Progress:============================> 95%] [Cov:==============>                    40%][Progress:============================> 95%] [Cov:==============>                    40%][Progress:============================> 96%] [Cov:==============>                    40%][Progress:============================> 96%] [Cov:==============>                    40%][Progress:============================> 96%] [Cov:==============>                    40%][Progress:============================> 96%] [Cov:==============>                    40%][Progress:============================> 96%] [Cov:==============>                    40%][Progress:============================> 96%] [Cov:==============>                    40%][Progress:============================> 96%] [Cov:==============>                    40%][Progress:============================> 96%] [Cov:==============>                    40%][Progress:=============================>97%] [Cov:==============>                    40%][Progress:=============================>97%] [Cov:==============>                    40%][Progress:=============================>97%] [Cov:==============>                    40%][Progress:=============================>97%] [Cov:==============>                    40%][Progress:=============================>97%] [Cov:==============>                    40%][Progress:=============================>97%] [Cov:==============>                    40%][Progress:=============================>97%] [Cov:==============>                    40%][Progress:=============================>97%] [Cov:==============>                    40%][Progress:=============================>98%] [Cov:==============>                    40%][Progress:=============================>98%] [Cov:==============>                    40%][Progress:=============================>98%] [Cov:==============>                    40%][Progress:=============================>98%] [Cov:==============>                    40%][Progress:=============================>98%] [Cov:==============>                    40%][Progress:=============================>98%] [Cov:==============>                    40%][Progress:=============================>98%] [Cov:==============>                    40%][Progress:=============================>99%] [Cov:==============>                    40%][Progress:=============================>99%] [Cov:==============>                    40%][Progress:=============================>99%] [Cov:==============>                    40%][Progress:=============================>99%] [Cov:==============>                    40%][Progress:=============================>99%] [Cov:==============>                    40%][Progress:=============================>99%] [Cov:==============>                    40%][Progress:=============================>99%] [Cov:==============>                    40%][Progress:==============================100%] [Cov:==============>                    40%][Progress:==============================100%] [Cov:==============>                    40%][Progress:==============================100%] [Cov:==============>                    40%][Progress:==============================100%] [Cov:==============>                    40%][Progress:==============================100%] [Cov:==============>                    40%][Progress:==============================100%] [Cov:==============>                    40%][Progress:==============================100%] [Cov:==============>                    40%][Progress:==============================100%] [Cov:==============>                    40%][Progress:==============================100%] [Cov:==============>                    40%]
* Search finished after 101s and 654 generations, 215048 statements, best individual has fitness: 2586.0
* Generated before the refinement 28 tests with total length 158
statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem") type is: class org.evosuite.testcase.statements.environment.FileNamePrimitiveStatement return type class org.evosuite.runtime.testdata.EvoSuiteFile
statement code is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem")
statement is: org.evosuite.testcase.statements.ArrayStatement@8f80924c type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[6]
statement is: org.evosuite.testcase.statements.AssignmentStatement@ed4dbd02 type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[0] = (byte)34
statement is: org.evosuite.testcase.statements.AssignmentStatement@bd8dc1e type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[1] = (byte)34
statement is: org.evosuite.testcase.statements.AssignmentStatement@6a606062 type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[2] = (byte)34
statement is: org.evosuite.testcase.statements.AssignmentStatement@1bb46a4e type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[5] = (byte)34
statement is: appendDataToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;[B)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean appendDataToFile = FileSystemHandling.appendDataToFile(arg0, arg1)
statement is: Scanner(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class Scanner
statement code is: Scanner scanner = new Scanner("AdvLexem")
test data is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
byte[] byteArray = new byte[6];
byteArray[0] = (byte)34;
byteArray[1] = (byte)34;
byteArray[2] = (byte)34;
byteArray[5] = (byte)34;
FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
Scanner scanner = new Scanner("AdvLexem");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
        byte[] byteArray = new byte[6];
        byteArray[0] = ((byte) ('\"'));// Changed from (byte)34 to (byte)"", which is a quotation mark

        byteArray[1] = ((byte) ('\"'));
        byteArray[2] = ((byte) ('\"'));
        byteArray[5] = ((byte) ('\"'));
        FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
        Scanner scanner = new Scanner("AdvLexem");// Changed from "AdvLexem" to "AdvLexem", which is a String object representing the word "AdvLexem" }}

    }
}
statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: byte[] byteArray = new byte[6], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [6] Ct is: byte[] byteArray = new byte[6] isAssignment: false Array: new byte[6] Elements: []
lengths: [6] [6]
Their type are: class [B byte[]
statement is: byteArray[0] = ((byte) ('\"'))// Changed from (byte)34 to (byte)"", which is a quotation mark
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : byteArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl byte Assignment:((byte) ('\"')) Ct is: byteArray[0] = ((byte) ('\"'))// Changed from (byte)34 to (byte)"", which is a quotation mark

target : byteArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@e5183a50
statement is: byteArray[1] = ((byte) ('\"')), class spoon.support.reflect.code.CtAssignmentImpl
Assigned : byteArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl byte Assignment:((byte) ('\"')) Ct is: byteArray[1] = ((byte) ('\"'))
target : byteArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@63f7fc03
statement is: byteArray[2] = ((byte) ('\"')), class spoon.support.reflect.code.CtAssignmentImpl
Assigned : byteArray[2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl byte Assignment:((byte) ('\"')) Ct is: byteArray[2] = ((byte) ('\"'))
target : byteArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@9487a5ad
statement is: byteArray[5] = ((byte) ('\"')), class spoon.support.reflect.code.CtAssignmentImpl
Assigned : byteArray[5] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl byte Assignment:((byte) ('\"')) Ct is: byteArray[5] = ((byte) ('\"'))
target : byteArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@e777b1d2
statement is: FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray) target is: FileSystemHandling method is: appendDataToFile(EvoSuiteFile,byte[])
Matched Method is: appendDataToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;[B)Z
i 1 Parameters size() 1 Num of Method Parameters: 2
statement is: Scanner scanner = new Scanner("AdvLexem")// Changed from "AdvLexem" to "AdvLexem", which is a String object representing the word "AdvLexem" }}
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
* this is vulnerable: char _char = '\"'
* this is vulnerable: char _char = '\"'
* this is vulnerable: char _char = '\"'
* this is vulnerable: char _char = '\"'
TestCase is: byte[] byteArray = new byte[6];
char _char = '\"';
char _char = '\"';
char _char = '\"';
char _char = '\"';
byte[] byteArray = null;
FileSystemHandling.appendDataToFile((EvoSuiteFile) byteArray, byteArray);
String string = "AdvLexem";
Scanner scanner = new Scanner(string);

statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem") type is: class org.evosuite.testcase.statements.environment.FileNamePrimitiveStatement return type class org.evosuite.runtime.testdata.EvoSuiteFile
statement code is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem")
statement is: org.evosuite.testcase.statements.ArrayStatement@796b24 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[7]
statement is: appendDataToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;[B)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean appendDataToFile = FileSystemHandling.appendDataToFile(arg0, arg1)
statement is: Scanner(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class Scanner
statement code is: Scanner scanner = new Scanner("AdvLexem")
statement is: java.util.ArrayList()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type java.util.ArrayList<java.lang.Boolean>
statement code is: ArrayList<Boolean> arrayList = new ArrayList<Boolean>()
statement is: checkStructure(Ljava/util/ArrayList;)Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String checkStructure = scanner.checkStructure(arg0)
test data is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
byte[] byteArray = new byte[7];
FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
Scanner scanner = new Scanner("AdvLexem");
ArrayList<Boolean> arrayList = new ArrayList<Boolean>();
scanner.checkStructure(arrayList);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
        byte[] byteArray = new byte[7];
        FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
        Scanner scanner = new Scanner("AdvLexem");
        ArrayList<Boolean> arrayList = new ArrayList<Boolean>();
        scanner.checkStructure(arrayList);
        // Improved test data
        EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvancedLexicon");
        byte[] byteArray = new byte[10];
        FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
        Scanner scanner = new Scanner("AdvancedLexicon");
        ArrayList<Boolean> arrayList = new ArrayList<Boolean>();
        scanner.checkStructure(arrayList);
    }
}
statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: byte[] byteArray = new byte[7], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [7] Ct is: byte[] byteArray = new byte[7] isAssignment: false Array: new byte[7] Elements: []
lengths: [7] [7]
Their type are: class [B byte[]
statement is: FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray) target is: FileSystemHandling method is: appendDataToFile(EvoSuiteFile,byte[])
Matched Method is: appendDataToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;[B)Z
i 1 Parameters size() 1 Num of Method Parameters: 2
statement is: Scanner scanner = new Scanner("AdvLexem"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ArrayList<Boolean> arrayList = new ArrayList<Boolean>(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: scanner.checkStructure(arrayList), class spoon.support.reflect.code.CtInvocationImpl
invocation is: scanner.checkStructure(arrayList) target is: scanner method is: checkStructure(ArrayList)
source statement: Scanner(Ljava/lang/String;)V callee: VariableReference: Statement 3, type Scannerindex is: 4
Matched Method is: checkStructure(Ljava/util/ArrayList;)Ljava/lang/String;
statement is: // Improved test data
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvancedLexicon"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: byte[] byteArray = new byte[10], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [10] Ct is: byte[] byteArray = new byte[7] isAssignment: false Array: new byte[10] Elements: []
lengths: [7] [10]
Their type are: class [B byte[]
statement is: FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray) target is: FileSystemHandling method is: appendDataToFile(EvoSuiteFile,byte[])
Matched Method is: appendDataToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;[B)Z
i 1 Parameters size() 1 Num of Method Parameters: 2
statement is: Scanner scanner = new Scanner("AdvancedLexicon"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ArrayList<Boolean> arrayList = new ArrayList<Boolean>(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: scanner.checkStructure(arrayList), class spoon.support.reflect.code.CtInvocationImpl
invocation is: scanner.checkStructure(arrayList) target is: scanner method is: checkStructure(ArrayList)
source statement: Scanner(Ljava/lang/String;)V callee: VariableReference: Statement 3, type Scannerindex is: 11
Matched Method is: checkStructure(Ljava/util/ArrayList;)Ljava/lang/String;
TestCase is: byte[] byteArray = new byte[7];
byte[] byteArray = null;
FileSystemHandling.appendDataToFile((EvoSuiteFile) byteArray, byteArray);
String string = "AdvLexem";
Scanner scanner = new Scanner(string);
ArrayList<Boolean> arrayList = new ArrayList<Boolean>();
((Scanner) string).checkStructure(arrayList);
byte[] byteArray = new byte[7];
byte[] byteArray = null;
FileSystemHandling.appendDataToFile((EvoSuiteFile) byteArray, byteArray);
String string = "AdvancedLexicon";
Scanner scanner = new Scanner(string);
ArrayList<Boolean> arrayList = new ArrayList<Boolean>();
((Scanner) string).checkStructure(arrayList);

statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem") type is: class org.evosuite.testcase.statements.environment.FileNamePrimitiveStatement return type class org.evosuite.runtime.testdata.EvoSuiteFile
statement code is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem")
statement is: org.evosuite.testcase.statements.ArrayStatement@a6595598 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[2]
statement is: org.evosuite.testcase.statements.AssignmentStatement@30991c12 type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[0] = (byte)34
statement is: org.evosuite.testcase.statements.AssignmentStatement@aaf26e80 type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[1] = (byte)13
statement is: appendDataToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;[B)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean appendDataToFile = FileSystemHandling.appendDataToFile(arg0, arg1)
statement is: Scanner(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class Scanner
statement code is: Scanner scanner = new Scanner("AdvLexem")
test data is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
byte[] byteArray = new byte[2];
byteArray[0] = (byte)34;
byteArray[1] = (byte)13;
FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
Scanner scanner = new Scanner("AdvLexem");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
        byte[] byteArray = new byte[2];
        byteArray[0] = ((byte) (34));// " - double quote

        byteArray[1] = ((byte) (13));// \r - carriage return

        FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
        Scanner scanner = new Scanner("AdvLexem");
    }
}
statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: byte[] byteArray = new byte[2], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [2] Ct is: byte[] byteArray = new byte[2] isAssignment: false Array: new byte[2] Elements: []
lengths: [2] [2]
Their type are: class [B byte[]
statement is: byteArray[0] = ((byte) (34))// " - double quote
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : byteArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl byte Assignment:((byte) (34)) Ct is: byteArray[0] = ((byte) (34))// " - double quote

target : byteArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@672db39
statement is: byteArray[1] = ((byte) (13))// \r - carriage return
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : byteArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl byte Assignment:((byte) (13)) Ct is: byteArray[1] = ((byte) (13))// \r - carriage return

target : byteArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@28bfc793
statement is: FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray) target is: FileSystemHandling method is: appendDataToFile(EvoSuiteFile,byte[])
Matched Method is: appendDataToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;[B)Z
i 1 Parameters size() 1 Num of Method Parameters: 2
statement is: Scanner scanner = new Scanner("AdvLexem"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
* this is vulnerable: int _int = 34
* this is vulnerable: int _int = 13
TestCase is: byte[] byteArray = new byte[2];
int _int = 34;
int _int = 13;
byte[] byteArray = null;
FileSystemHandling.appendDataToFile((EvoSuiteFile) byteArray, byteArray);
String string = "AdvLexem";
Scanner scanner = new Scanner(string);

statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem") type is: class org.evosuite.testcase.statements.environment.FileNamePrimitiveStatement return type class org.evosuite.runtime.testdata.EvoSuiteFile
statement code is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem")
statement is: org.evosuite.testcase.statements.ArrayStatement@5372cbdc type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[15]
statement is: org.evosuite.testcase.statements.AssignmentStatement@b4dd6536 type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[0] = (byte) (-4)
statement is: appendDataToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;[B)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean appendDataToFile = FileSystemHandling.appendDataToFile(arg0, arg1)
statement is: Scanner(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class Scanner
statement code is: Scanner scanner = new Scanner("AdvLexem")
test data is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
byte[] byteArray = new byte[15];
byteArray[0] = (byte) (-4);
FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
Scanner scanner = new Scanner("AdvLexem");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
        byte[] byteArray = new byte[15];
        byteArray[0] = ((byte) (-4));
        // Changed the value of byteArray[0] to be more illustrative of a negative number.
        byteArray[0] = ((byte) (-8));
        FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
        Scanner scanner = new Scanner("AdvLexem");
        // Changed the value of the String argument to be more illustrative.
        scanner = new Scanner("AdvancedLexer");
    }
}
statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: byte[] byteArray = new byte[15], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [15] Ct is: byte[] byteArray = new byte[15] isAssignment: false Array: new byte[15] Elements: []
lengths: [15] [15]
Their type are: class [B byte[]
statement is: byteArray[0] = ((byte) (-4)), class spoon.support.reflect.code.CtAssignmentImpl
Assigned : byteArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl byte Assignment:((byte) (-4)) Ct is: byteArray[0] = ((byte) (-4))
target : byteArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@d874b03d
statement is: // Changed the value of byteArray[0] to be more illustrative of a negative number.
byteArray[0] = ((byte) (-8)), class spoon.support.reflect.code.CtAssignmentImpl
Assigned : byteArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl byte Assignment:((byte) (-8)) Ct is: // Changed the value of byteArray[0] to be more illustrative of a negative number.
byteArray[0] = ((byte) (-8))
target : byteArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@d874b03d
statement is: FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray) target is: FileSystemHandling method is: appendDataToFile(EvoSuiteFile,byte[])
Matched Method is: appendDataToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;[B)Z
i 1 Parameters size() 1 Num of Method Parameters: 2
statement is: Scanner scanner = new Scanner("AdvLexem"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: // Changed the value of the String argument to be more illustrative.
scanner = new Scanner("AdvancedLexer"), class spoon.support.reflect.code.CtAssignmentImpl
TestCase is: byte[] byteArray = new byte[15];
byte[] byteArray = null;
FileSystemHandling.appendDataToFile((EvoSuiteFile) byteArray, byteArray);
String string = "AdvLexem";
Scanner scanner = new Scanner(string);

statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem") type is: class org.evosuite.testcase.statements.environment.FileNamePrimitiveStatement return type class org.evosuite.runtime.testdata.EvoSuiteFile
statement code is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem")
statement is: appendLineToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean appendLineToFile = FileSystemHandling.appendLineToFile(arg0, "expected: PROGRAM\n   found: <\n   line 1\n   column: 1")
statement is: Scanner(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class Scanner
statement code is: Scanner scanner = new Scanner("AdvLexem")
statement is: java.util.ArrayList(Ljava/util/Collection;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type java.util.ArrayList<java.lang.Object>
statement code is: ArrayList<Object> arrayList = new ArrayList<Object>(scanner.lexems)
statement is: advScanning(Ljava/util/ArrayList;)Ljava/util/ArrayList; type is: class org.evosuite.testcase.statements.MethodStatement return type java.util.ArrayList<E>
statement code is: ArrayList advScanning = scanner.advScanning(arg0)
test data is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
FileSystemHandling.appendLineToFile(evoSuiteFile, "expected: PROGRAM\n   found: <\n   line 1\n   column: 1");
Scanner scanner = new Scanner("AdvLexem");
ArrayList<Object> arrayList = new ArrayList<Object>(scanner.lexems);
scanner.advScanning(arrayList);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
        FileSystemHandling.appendLineToFile(evoSuiteFile, "expected: PROGRAM\n   found: <\n   line 1\n   column: 1");
        Scanner scanner = new Scanner("AdvLexem");
        ArrayList<Object> arrayList = new ArrayList<Object>(scanner.lexems);
        scanner.advScanning(arrayList);
    }
}
statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: FileSystemHandling.appendLineToFile(evoSuiteFile, "expected: PROGRAM\n   found: <\n   line 1\n   column: 1"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: FileSystemHandling.appendLineToFile(evoSuiteFile, "expected: PROGRAM\n   found: <\n   line 1\n   column: 1") target is: FileSystemHandling method is: appendLineToFile(EvoSuiteFile,java.lang.String)
Matched Method is: appendLineToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;Ljava/lang/String;)Z
i 1 Parameters size() 1 Num of Method Parameters: 2
statement is: Scanner scanner = new Scanner("AdvLexem"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ArrayList<Object> arrayList = new ArrayList<Object>(scanner.lexems), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: scanner.advScanning(arrayList), class spoon.support.reflect.code.CtInvocationImpl
invocation is: scanner.advScanning(arrayList) target is: scanner method is: advScanning(ArrayList)
source statement: Scanner(Ljava/lang/String;)V callee: VariableReference: Statement 2, type Scannerindex is: 4
Matched Method is: advScanning(Ljava/util/ArrayList;)Ljava/util/ArrayList;
TestCase is: String string = "expected: PROGRAM\n   found: <\n   line 1\n   column: 1";
String string = null;
boolean appendLineToFile = FileSystemHandling.appendLineToFile((EvoSuiteFile) string, string);
String string = "AdvLexem";
Scanner scanner = new Scanner(string);
ArrayList<Object> arrayList = new ArrayList<Object>(((Scanner) appendLineToFile).lexems);
((Scanner) appendLineToFile).advScanning(arrayList);

statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem") type is: class org.evosuite.testcase.statements.environment.FileNamePrimitiveStatement return type class org.evosuite.runtime.testdata.EvoSuiteFile
statement code is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem")
statement is: appendStringToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean appendStringToFile = FileSystemHandling.appendStringToFile(arg0, "5m$+ZPWpQ")
statement is: Scanner(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class Scanner
statement code is: Scanner scanner = new Scanner("AdvLexem")
test data is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
FileSystemHandling.appendStringToFile(evoSuiteFile, "5m$+ZPWpQ");
Scanner scanner = new Scanner("AdvLexem");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
    }
}
statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem") type is: class org.evosuite.testcase.statements.environment.FileNamePrimitiveStatement return type class org.evosuite.runtime.testdata.EvoSuiteFile
statement code is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem")
statement is: appendStringToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean appendStringToFile = FileSystemHandling.appendStringToFile(arg0, "RE1/N")
statement is: Scanner(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class Scanner
statement code is: Scanner scanner = new Scanner("AdvLexem")
test data is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
FileSystemHandling.appendStringToFile(evoSuiteFile, "RE1/N");
Scanner scanner = new Scanner("AdvLexem");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
        FileSystemHandling.appendStringToFile(evoSuiteFile, "RE1/N");
        Scanner scanner = new Scanner("AdvLexem.txt");
    }
}
statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: FileSystemHandling.appendStringToFile(evoSuiteFile, "RE1/N"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: FileSystemHandling.appendStringToFile(evoSuiteFile, "RE1/N") target is: FileSystemHandling method is: appendStringToFile(EvoSuiteFile,java.lang.String)
Matched Method is: appendStringToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;Ljava/lang/String;)Z
i 1 Parameters size() 1 Num of Method Parameters: 2
statement is: Scanner scanner = new Scanner("AdvLexem.txt"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase is: String string = "RE1/N";
String string = null;
FileSystemHandling.appendStringToFile((EvoSuiteFile) string, string);
String string = "AdvLexem.txt";
Scanner scanner = new Scanner(string);

statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem") type is: class org.evosuite.testcase.statements.environment.FileNamePrimitiveStatement return type class org.evosuite.runtime.testdata.EvoSuiteFile
statement code is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem")
statement is: appendLineToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean appendLineToFile = FileSystemHandling.appendLineToFile(arg0, "EN.")
statement is: Scanner(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class Scanner
statement code is: Scanner scanner = new Scanner("AdvLexem")
test data is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
FileSystemHandling.appendLineToFile(evoSuiteFile, "EN.");
Scanner scanner = new Scanner("AdvLexem");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvancedLexem");
        FileSystemHandling.appendLineToFile(evoSuiteFile, "EN.");
        Scanner scanner = new Scanner("AdvancedLexem");
    }
}
statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvancedLexem"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: FileSystemHandling.appendLineToFile(evoSuiteFile, "EN."), class spoon.support.reflect.code.CtInvocationImpl
invocation is: FileSystemHandling.appendLineToFile(evoSuiteFile, "EN.") target is: FileSystemHandling method is: appendLineToFile(EvoSuiteFile,java.lang.String)
Matched Method is: appendLineToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;Ljava/lang/String;)Z
i 1 Parameters size() 1 Num of Method Parameters: 2
statement is: Scanner scanner = new Scanner("AdvancedLexem"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase is: String string = "EN.";
String string = null;
FileSystemHandling.appendLineToFile((EvoSuiteFile) string, string);
String string = "AdvancedLexem";
Scanner scanner = new Scanner(string);

statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem") type is: class org.evosuite.testcase.statements.environment.FileNamePrimitiveStatement return type class org.evosuite.runtime.testdata.EvoSuiteFile
statement code is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem")
statement is: appendStringToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean appendStringToFile = FileSystemHandling.appendStringToFile(arg0, "-.e1C")
statement is: Scanner(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class Scanner
statement code is: Scanner scanner = new Scanner("AdvLexem")
test data is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
FileSystemHandling.appendStringToFile(evoSuiteFile, "-.e1C");
Scanner scanner = new Scanner("AdvLexem");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
        FileSystemHandling.appendStringToFile(evoSuiteFile, "-.e1C");
        Scanner scanner = new Scanner("2x^2 + 3x - 4");
    }
}
statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: FileSystemHandling.appendStringToFile(evoSuiteFile, "-.e1C"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: FileSystemHandling.appendStringToFile(evoSuiteFile, "-.e1C") target is: FileSystemHandling method is: appendStringToFile(EvoSuiteFile,java.lang.String)
Matched Method is: appendStringToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;Ljava/lang/String;)Z
i 1 Parameters size() 1 Num of Method Parameters: 2
statement is: Scanner scanner = new Scanner("2x^2 + 3x - 4"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase is: String string = "-.e1C";
String string = null;
FileSystemHandling.appendStringToFile((EvoSuiteFile) string, string);
String string = "2x^2 + 3x - 4";
Scanner scanner = new Scanner(string);

statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem") type is: class org.evosuite.testcase.statements.environment.FileNamePrimitiveStatement return type class org.evosuite.runtime.testdata.EvoSuiteFile
statement code is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem")
statement is: appendStringToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean appendStringToFile = FileSystemHandling.appendStringToFile(arg0, "END.")
statement is: Scanner(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class Scanner
statement code is: Scanner scanner = new Scanner("AdvLexem")
test data is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
FileSystemHandling.appendStringToFile(evoSuiteFile, "END.");
Scanner scanner = new Scanner("AdvLexem");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvancedLexer");
        FileSystemHandling.appendStringToFile(evoSuiteFile, "END.");
        Scanner scanner = new Scanner("lexem-file");
    }
}
statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvancedLexer"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: FileSystemHandling.appendStringToFile(evoSuiteFile, "END."), class spoon.support.reflect.code.CtInvocationImpl
invocation is: FileSystemHandling.appendStringToFile(evoSuiteFile, "END.") target is: FileSystemHandling method is: appendStringToFile(EvoSuiteFile,java.lang.String)
Matched Method is: appendStringToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;Ljava/lang/String;)Z
i 1 Parameters size() 1 Num of Method Parameters: 2
statement is: Scanner scanner = new Scanner("lexem-file"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase is: String string = "END.";
String string = null;
FileSystemHandling.appendStringToFile((EvoSuiteFile) string, string);
String string = "lexem-file";
Scanner scanner = new Scanner(string);

statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem") type is: class org.evosuite.testcase.statements.environment.FileNamePrimitiveStatement return type class org.evosuite.runtime.testdata.EvoSuiteFile
statement code is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem")
statement is: org.evosuite.testcase.statements.ArrayStatement@5e0fbf0f type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[2]
statement is: org.evosuite.testcase.statements.AssignmentStatement@e211f7c9 type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[0] = (byte)9
statement is: appendDataToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;[B)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean appendDataToFile = FileSystemHandling.appendDataToFile(arg0, arg1)
statement is: Scanner(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class Scanner
statement code is: Scanner scanner = new Scanner("AdvLexem")
test data is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
byte[] byteArray = new byte[2];
byteArray[0] = (byte)9;
FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
Scanner scanner = new Scanner("AdvLexem");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
        byte[] byteArray = new byte[2];
        byteArray[0] = ((byte) (9));
        FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
        Scanner scanner = new Scanner("AdvLexem");
        // Improved test data:
        EvoSuiteFile evoSuiteFile = new EvoSuiteFile("Advanced Lexeme");
        byte[] byteArray = new byte[2];
        byteArray[0] = ((byte) (15));
        FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
        Scanner scanner = new Scanner("Advanced Lexeme");
    }
}
statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: byte[] byteArray = new byte[2], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [2] Ct is: byte[] byteArray = new byte[2] isAssignment: false Array: new byte[2] Elements: []
lengths: [2] [2]
Their type are: class [B byte[]
statement is: byteArray[0] = ((byte) (9)), class spoon.support.reflect.code.CtAssignmentImpl
Assigned : byteArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl byte Assignment:((byte) (9)) Ct is: byteArray[0] = ((byte) (9))
target : byteArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@cecb7253
statement is: FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray) target is: FileSystemHandling method is: appendDataToFile(EvoSuiteFile,byte[])
Matched Method is: appendDataToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;[B)Z
i 1 Parameters size() 1 Num of Method Parameters: 2
statement is: Scanner scanner = new Scanner("AdvLexem"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: // Improved test data:
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("Advanced Lexeme"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: byte[] byteArray = new byte[2], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [2] Ct is: byte[] byteArray = new byte[2] isAssignment: false Array: new byte[2] Elements: []
lengths: [2] [2]
Their type are: class [B byte[]
statement is: byteArray[0] = ((byte) (15)), class spoon.support.reflect.code.CtAssignmentImpl
Assigned : byteArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl byte Assignment:((byte) (15)) Ct is: byteArray[0] = ((byte) (15))
target : byteArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@3470b23
statement is: FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray) target is: FileSystemHandling method is: appendDataToFile(EvoSuiteFile,byte[])
Matched Method is: appendDataToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;[B)Z
i 1 Parameters size() 1 Num of Method Parameters: 2
statement is: Scanner scanner = new Scanner("Advanced Lexeme"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
* this is vulnerable: int _int = 9
* this is vulnerable: int _int = 15
TestCase is: byte[] byteArray = new byte[2];
int _int = 9;
byte[] byteArray = null;
FileSystemHandling.appendDataToFile((EvoSuiteFile) byteArray, byteArray);
String string = "AdvLexem";
Scanner scanner = new Scanner(string);
byte[] byteArray = new byte[2];
int _int = 15;
byte[] byteArray = null;
FileSystemHandling.appendDataToFile((EvoSuiteFile) byteArray, byteArray);
String string = "Advanced Lexeme";
Scanner scanner = new Scanner(string);

statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem") type is: class org.evosuite.testcase.statements.environment.FileNamePrimitiveStatement return type class org.evosuite.runtime.testdata.EvoSuiteFile
statement code is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem")
statement is: org.evosuite.testcase.statements.ArrayStatement@48871a6f type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[5]
statement is: org.evosuite.testcase.statements.AssignmentStatement@2fb92821 type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[0] = (byte)13
statement is: appendDataToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;[B)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean appendDataToFile = FileSystemHandling.appendDataToFile(arg0, arg1)
statement is: Scanner(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class Scanner
statement code is: Scanner scanner = new Scanner("AdvLexem")
test data is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
byte[] byteArray = new byte[5];
byteArray[0] = (byte)13;
FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
Scanner scanner = new Scanner("AdvLexem");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        EvoSuiteFile evoSuiteFile = new EvoSuiteFile("Advanced Lexeme");
        byte[] byteArray = new byte[5];
        byteArray[0] = ((byte) (13));
        FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
        Scanner scanner = new Scanner("Alice in Wonderland");
    }
}
statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("Advanced Lexeme"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: byte[] byteArray = new byte[5], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [5] Ct is: byte[] byteArray = new byte[5] isAssignment: false Array: new byte[5] Elements: []
lengths: [5] [5]
Their type are: class [B byte[]
statement is: byteArray[0] = ((byte) (13)), class spoon.support.reflect.code.CtAssignmentImpl
Assigned : byteArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl byte Assignment:((byte) (13)) Ct is: byteArray[0] = ((byte) (13))
target : byteArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@b46ac755
statement is: FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray) target is: FileSystemHandling method is: appendDataToFile(EvoSuiteFile,byte[])
Matched Method is: appendDataToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;[B)Z
i 1 Parameters size() 1 Num of Method Parameters: 2
statement is: Scanner scanner = new Scanner("Alice in Wonderland"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
* this is vulnerable: int _int = 13
TestCase is: byte[] byteArray = new byte[5];
int _int = 13;
byte[] byteArray = null;
FileSystemHandling.appendDataToFile((EvoSuiteFile) byteArray, byteArray);
String string = "Alice in Wonderland";
Scanner scanner = new Scanner(string);

statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem") type is: class org.evosuite.testcase.statements.environment.FileNamePrimitiveStatement return type class org.evosuite.runtime.testdata.EvoSuiteFile
statement code is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem")
statement is: org.evosuite.testcase.statements.ArrayStatement@2712b8ac type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[7]
statement is: appendDataToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;[B)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean appendDataToFile = FileSystemHandling.appendDataToFile(arg0, arg1)
statement is: Scanner(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class Scanner
statement code is: Scanner scanner = new Scanner("AdvLexem")
statement is: java.util.ArrayList()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type java.util.ArrayList<java.lang.Boolean>
statement code is: ArrayList<Boolean> arrayList = new ArrayList<Boolean>()
statement is: printLexems(Ljava/util/ArrayList;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: scanner.printLexems(arg0)
test data is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
byte[] byteArray = new byte[7];
FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
Scanner scanner = new Scanner("AdvLexem");
ArrayList<Boolean> arrayList = new ArrayList<Boolean>();
scanner.printLexems(arrayList);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
        byte[] byteArray = new byte[]{ 97, 100, 102, 103 };// "advlexem" in ASCII

        FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
        Scanner scanner = new Scanner("AdvLexem");
        ArrayList<Boolean> arrayList = new ArrayList<Boolean>();
        scanner.printLexems(arrayList);
    }
}
statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: byte[] byteArray = new byte[]{ 97, 100, 102, 103 }// "advlexem" in ASCII
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: byte[] byteArray = new byte[7] isAssignment: false Array: new byte[]{ 97, 100, 102, 103 } Elements: [97, 100, 102, 103]
lengths: [7] []
statement is: FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray) target is: FileSystemHandling method is: appendDataToFile(EvoSuiteFile,byte[])
Matched Method is: appendDataToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;[B)Z
i 0 Parameters size() 0 Num of Method Parameters: 2
i 1 Parameters size() 0 Num of Method Parameters: 2
statement is: Scanner scanner = new Scanner("AdvLexem"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ArrayList<Boolean> arrayList = new ArrayList<Boolean>(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: scanner.printLexems(arrayList), class spoon.support.reflect.code.CtInvocationImpl
invocation is: scanner.printLexems(arrayList) target is: scanner method is: printLexems(ArrayList)
source statement: Scanner(Ljava/lang/String;)V callee: VariableReference: Statement 3, type Scannerindex is: 4
Matched Method is: printLexems(Ljava/util/ArrayList;)V
TestCase is: EvoSuiteFile evoSuiteFile = null;
byte[] byteArray = null;
FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
String string = "AdvLexem";
Scanner scanner = new Scanner(string);
ArrayList<Boolean> arrayList = new ArrayList<Boolean>();
((Scanner) string).printLexems(arrayList);

statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem") type is: class org.evosuite.testcase.statements.environment.FileNamePrimitiveStatement return type class org.evosuite.runtime.testdata.EvoSuiteFile
statement code is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem")
statement is: org.evosuite.testcase.statements.ArrayStatement@90e2c725 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[3]
statement is: appendDataToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;[B)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean appendDataToFile = FileSystemHandling.appendDataToFile(arg0, arg1)
statement is: Scanner(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class Scanner
statement code is: Scanner scanner = new Scanner("AdvLexem")
statement is: java.util.ArrayList()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type java.util.ArrayList<java.lang.Object>
statement code is: ArrayList<Object> arrayList = new ArrayList<Object>()
statement is: add(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean add = arrayList.add((Object) null)
statement is: printLexems(Ljava/util/ArrayList;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: scanner.printLexems(arg0)
test data is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
byte[] byteArray = new byte[3];
FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
Scanner scanner = new Scanner("AdvLexem");
ArrayList<Object> arrayList = new ArrayList<Object>();
arrayList.add((Object) null);
scanner.printLexems(arrayList);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
        byte[] byteArray = new byte[3];
        FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
        Scanner scanner = new Scanner("AdvLexem");
        ArrayList<Object> arrayList = new ArrayList<Object>();
        arrayList.add(((Object) ("Hello, World!")));
        scanner.printLexems(arrayList);
    }
}
statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: byte[] byteArray = new byte[3], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [3] Ct is: byte[] byteArray = new byte[3] isAssignment: false Array: new byte[3] Elements: []
lengths: [3] [3]
Their type are: class [B byte[]
statement is: FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray) target is: FileSystemHandling method is: appendDataToFile(EvoSuiteFile,byte[])
Matched Method is: appendDataToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;[B)Z
i 1 Parameters size() 1 Num of Method Parameters: 2
statement is: Scanner scanner = new Scanner("AdvLexem"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ArrayList<Object> arrayList = new ArrayList<Object>(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: arrayList.add(((Object) ("Hello, World!"))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: arrayList.add(((Object) ("Hello, World!"))) target is: arrayList method is: add(java.lang.Object)
source statement: java.util.ArrayList()V callee: VariableReference: Statement 4, type java.util.ArrayList<java.lang.Object>index is: 5
Matched Method is: add(Ljava/lang/Object;)Z
statement is: scanner.printLexems(arrayList), class spoon.support.reflect.code.CtInvocationImpl
invocation is: scanner.printLexems(arrayList) target is: scanner method is: printLexems(ArrayList)
source statement: Scanner(Ljava/lang/String;)V callee: VariableReference: Statement 3, type Scannerindex is: 4
Matched Method is: printLexems(Ljava/util/ArrayList;)V
TestCase is: byte[] byteArray = new byte[3];
byte[] byteArray = null;
FileSystemHandling.appendDataToFile((EvoSuiteFile) byteArray, byteArray);
String string = "AdvLexem";
Scanner scanner = new Scanner(string);
ArrayList<Object> arrayList = new ArrayList<Object>();
String string = "Hello, World!";
((ArrayList) scanner).add((Object) string);
((Scanner) string).printLexems(arrayList);

statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem") type is: class org.evosuite.testcase.statements.environment.FileNamePrimitiveStatement return type class org.evosuite.runtime.testdata.EvoSuiteFile
statement code is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem")
statement is: org.evosuite.testcase.statements.ArrayStatement@c7477033 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[7]
statement is: appendDataToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;[B)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean appendDataToFile = FileSystemHandling.appendDataToFile(arg0, arg1)
statement is: Scanner(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class Scanner
statement code is: Scanner scanner = new Scanner("AdvLexem")
statement is: java.util.ArrayList()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type java.util.ArrayList<java.lang.Boolean>
statement code is: ArrayList<Boolean> arrayList = new ArrayList<Boolean>()
statement is: printAdvLexems(Ljava/util/ArrayList;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: scanner.printAdvLexems(arg0)
test data is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
byte[] byteArray = new byte[7];
FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
Scanner scanner = new Scanner("AdvLexem");
ArrayList<Boolean> arrayList = new ArrayList<Boolean>();
scanner.printAdvLexems(arrayList);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
        byte[] byteArray = new byte[7];
        // Changed the value of byteArray to more descriptive and representative values
        byte[] byteArray = new byte[]{ 0, 1, 2, 3, 4, 5, 6 };
        FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
        Scanner scanner = new Scanner("AdvLexem");
        // Changed the value of scanner to more descriptive and representative values
        Scanner scanner = new Scanner("This is a test string");
        ArrayList<Boolean> arrayList = new ArrayList<Boolean>();
        scanner.printAdvLexems(arrayList);
    }
}
statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: byte[] byteArray = new byte[7], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [7] Ct is: byte[] byteArray = new byte[7] isAssignment: false Array: new byte[7] Elements: []
lengths: [7] [7]
Their type are: class [B byte[]
statement is: // Changed the value of byteArray to more descriptive and representative values
byte[] byteArray = new byte[]{ 0, 1, 2, 3, 4, 5, 6 }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: byte[] byteArray = new byte[7] isAssignment: false Array: new byte[]{ 0, 1, 2, 3, 4, 5, 6 } Elements: [0, 1, 2, 3, 4, 5, 6]
lengths: [7] []
statement is: FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray) target is: FileSystemHandling method is: appendDataToFile(EvoSuiteFile,byte[])
Matched Method is: appendDataToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;[B)Z
i 1 Parameters size() 1 Num of Method Parameters: 2
statement is: Scanner scanner = new Scanner("AdvLexem"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: // Changed the value of scanner to more descriptive and representative values
Scanner scanner = new Scanner("This is a test string"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ArrayList<Boolean> arrayList = new ArrayList<Boolean>(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: scanner.printAdvLexems(arrayList), class spoon.support.reflect.code.CtInvocationImpl
invocation is: scanner.printAdvLexems(arrayList) target is: scanner method is: printAdvLexems(ArrayList)
source statement: Scanner(Ljava/lang/String;)V callee: VariableReference: Statement 3, type Scannerindex is: 6
Matched Method is: printAdvLexems(Ljava/util/ArrayList;)V
TestCase is: byte[] byteArray = new byte[7];
byte[] byteArray = null;
FileSystemHandling.appendDataToFile((EvoSuiteFile) byteArray, byteArray);
String string = "AdvLexem";
Scanner scanner = new Scanner(string);
String string = "This is a test string";
Scanner scanner = new Scanner(string);
ArrayList<Boolean> arrayList = new ArrayList<Boolean>();
((Scanner) string).printAdvLexems(arrayList);

statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem") type is: class org.evosuite.testcase.statements.environment.FileNamePrimitiveStatement return type class org.evosuite.runtime.testdata.EvoSuiteFile
statement code is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem")
statement is: appendLineToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean appendLineToFile = FileSystemHandling.appendLineToFile(arg0, "INTEGER")
statement is: Scanner(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class Scanner
statement code is: Scanner scanner = new Scanner("AdvLexem")
statement is: java.util.ArrayList(Ljava/util/Collection;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type java.util.ArrayList<java.lang.Object>
statement code is: ArrayList<Object> arrayList = new ArrayList<Object>(scanner.lexems)
statement is: advScanning(Ljava/util/ArrayList;)Ljava/util/ArrayList; type is: class org.evosuite.testcase.statements.MethodStatement return type java.util.ArrayList<E>
statement code is: ArrayList advScanning = scanner.advScanning(arg0)
test data is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
FileSystemHandling.appendLineToFile(evoSuiteFile, "INTEGER");
Scanner scanner = new Scanner("AdvLexem");
ArrayList<Object> arrayList = new ArrayList<Object>(scanner.lexems);
scanner.advScanning(arrayList);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvancedLexem");
        FileSystemHandling.appendLineToFile(evoSuiteFile, "INTEGER");
        Scanner scanner = new Scanner("AdvancedLexem");
        ArrayList<Object> arrayList = new ArrayList<Object>(scanner.lexems);
        scanner.advScanning(arrayList);
    }
}
statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvancedLexem"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: FileSystemHandling.appendLineToFile(evoSuiteFile, "INTEGER"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: FileSystemHandling.appendLineToFile(evoSuiteFile, "INTEGER") target is: FileSystemHandling method is: appendLineToFile(EvoSuiteFile,java.lang.String)
Matched Method is: appendLineToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;Ljava/lang/String;)Z
i 1 Parameters size() 1 Num of Method Parameters: 2
statement is: Scanner scanner = new Scanner("AdvancedLexem"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ArrayList<Object> arrayList = new ArrayList<Object>(scanner.lexems), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: scanner.advScanning(arrayList), class spoon.support.reflect.code.CtInvocationImpl
invocation is: scanner.advScanning(arrayList) target is: scanner method is: advScanning(ArrayList)
source statement: Scanner(Ljava/lang/String;)V callee: VariableReference: Statement 2, type Scannerindex is: 4
Matched Method is: advScanning(Ljava/util/ArrayList;)Ljava/util/ArrayList;
TestCase is: String string = "INTEGER";
String string = null;
boolean appendLineToFile = FileSystemHandling.appendLineToFile((EvoSuiteFile) string, string);
String string = "AdvancedLexem";
Scanner scanner = new Scanner(string);
ArrayList<Object> arrayList = new ArrayList<Object>(((Scanner) appendLineToFile).lexems);
((Scanner) appendLineToFile).advScanning(arrayList);

statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem") type is: class org.evosuite.testcase.statements.environment.FileNamePrimitiveStatement return type class org.evosuite.runtime.testdata.EvoSuiteFile
statement code is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem")
statement is: appendStringToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean appendStringToFile = FileSystemHandling.appendStringToFile(arg0, "TRUE")
statement is: Scanner(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class Scanner
statement code is: Scanner scanner = new Scanner("AdvLexem")
test data is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
FileSystemHandling.appendStringToFile(evoSuiteFile, "TRUE");
Scanner scanner = new Scanner("AdvLexem");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        EvoSuiteFile evoSuiteFile = new EvoSuiteFile("ThisIsASuperLongStringThatRepresentsARealisticInputForTheTestCase");
        FileSystemHandling.appendStringToFile(evoSuiteFile, "TRUE");
        Scanner scanner = new Scanner("ThisIsASuperLongStringThatRepresentsARealisticInputForTheTestCase");
    }
}
statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("ThisIsASuperLongStringThatRepresentsARealisticInputForTheTestCase"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: FileSystemHandling.appendStringToFile(evoSuiteFile, "TRUE"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: FileSystemHandling.appendStringToFile(evoSuiteFile, "TRUE") target is: FileSystemHandling method is: appendStringToFile(EvoSuiteFile,java.lang.String)
Matched Method is: appendStringToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;Ljava/lang/String;)Z
i 1 Parameters size() 1 Num of Method Parameters: 2
statement is: Scanner scanner = new Scanner("ThisIsASuperLongStringThatRepresentsARealisticInputForTheTestCase"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase is: String string = "TRUE";
String string = null;
FileSystemHandling.appendStringToFile((EvoSuiteFile) string, string);
String string = "ThisIsASuperLongStringThatRepresentsARealisticInputForTheTestCase";
Scanner scanner = new Scanner(string);

statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem") type is: class org.evosuite.testcase.statements.environment.FileNamePrimitiveStatement return type class org.evosuite.runtime.testdata.EvoSuiteFile
statement code is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem")
statement is: appendLineToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean appendLineToFile = FileSystemHandling.appendLineToFile(arg0, "expected: LOGICAL VALUE\n   found: ")
statement is: Scanner(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class Scanner
statement code is: Scanner scanner = new Scanner("AdvLexem")
statement is: java.util.ArrayList(Ljava/util/Collection;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type java.util.ArrayList<java.lang.Object>
statement code is: ArrayList<Object> arrayList = new ArrayList<Object>(scanner.lexems)
statement is: advScanning(Ljava/util/ArrayList;)Ljava/util/ArrayList; type is: class org.evosuite.testcase.statements.MethodStatement return type java.util.ArrayList<E>
statement code is: ArrayList advScanning = scanner.advScanning(arg0)
test data is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
FileSystemHandling.appendLineToFile(evoSuiteFile, "expected: LOGICAL VALUE\n   found: ");
Scanner scanner = new Scanner("AdvLexem");
ArrayList<Object> arrayList = new ArrayList<Object>(scanner.lexems);
scanner.advScanning(arrayList);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
        FileSystemHandling.appendLineToFile(evoSuiteFile, "expected: LOGICAL VALUE\n   found: ");
        Scanner scanner = new Scanner("AdvLexem");
        ArrayList<Object> arrayList = new ArrayList<Object>(scanner.lexems);
        scanner.advScanning(arrayList);
    }
}
statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: FileSystemHandling.appendLineToFile(evoSuiteFile, "expected: LOGICAL VALUE\n   found: "), class spoon.support.reflect.code.CtInvocationImpl
invocation is: FileSystemHandling.appendLineToFile(evoSuiteFile, "expected: LOGICAL VALUE\n   found: ") target is: FileSystemHandling method is: appendLineToFile(EvoSuiteFile,java.lang.String)
Matched Method is: appendLineToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;Ljava/lang/String;)Z
i 1 Parameters size() 1 Num of Method Parameters: 2
statement is: Scanner scanner = new Scanner("AdvLexem"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ArrayList<Object> arrayList = new ArrayList<Object>(scanner.lexems), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: scanner.advScanning(arrayList), class spoon.support.reflect.code.CtInvocationImpl
invocation is: scanner.advScanning(arrayList) target is: scanner method is: advScanning(ArrayList)
source statement: Scanner(Ljava/lang/String;)V callee: VariableReference: Statement 2, type Scannerindex is: 4
Matched Method is: advScanning(Ljava/util/ArrayList;)Ljava/util/ArrayList;
TestCase is: String string = "expected: LOGICAL VALUE\n   found: ";
String string = null;
boolean appendLineToFile = FileSystemHandling.appendLineToFile((EvoSuiteFile) string, string);
String string = "AdvLexem";
Scanner scanner = new Scanner(string);
ArrayList<Object> arrayList = new ArrayList<Object>(((Scanner) appendLineToFile).lexems);
((Scanner) appendLineToFile).advScanning(arrayList);

statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem") type is: class org.evosuite.testcase.statements.environment.FileNamePrimitiveStatement return type class org.evosuite.runtime.testdata.EvoSuiteFile
statement code is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem")
statement is: appendLineToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean appendLineToFile = FileSystemHandling.appendLineToFile(arg0, "expected: PROGRAM\n   found: :=\n   line: 1\n   column: 1")
statement is: Scanner(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class Scanner
statement code is: Scanner scanner = new Scanner("AdvLexem")
test data is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
FileSystemHandling.appendLineToFile(evoSuiteFile, "expected: PROGRAM\n   found: :=\n   line: 1\n   column: 1");
Scanner scanner = new Scanner("AdvLexem");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem_ifStatement.txt");
        FileSystemHandling.appendLineToFile(evoSuiteFile, "expected: PROGRAM\n   found: :=\n   line: 1\n   column: 1");
    }
}
statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem_ifStatement.txt"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: FileSystemHandling.appendLineToFile(evoSuiteFile, "expected: PROGRAM\n   found: :=\n   line: 1\n   column: 1"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: FileSystemHandling.appendLineToFile(evoSuiteFile, "expected: PROGRAM\n   found: :=\n   line: 1\n   column: 1") target is: FileSystemHandling method is: appendLineToFile(EvoSuiteFile,java.lang.String)
Matched Method is: appendLineToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;Ljava/lang/String;)Z
i 1 Parameters size() 1 Num of Method Parameters: 2
TestCase is: String string = "expected: PROGRAM\n   found: :=\n   line: 1\n   column: 1";
String string = null;
FileSystemHandling.appendLineToFile((EvoSuiteFile) string, string);

statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem") type is: class org.evosuite.testcase.statements.environment.FileNamePrimitiveStatement return type class org.evosuite.runtime.testdata.EvoSuiteFile
statement code is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem")
statement is: appendLineToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean appendLineToFile = FileSystemHandling.appendLineToFile(arg0, "PROGRAM")
statement is: Scanner(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class Scanner
statement code is: Scanner scanner = new Scanner("AdvLexem")
statement is: java.util.ArrayList(Ljava/util/Collection;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type java.util.ArrayList<java.lang.Object>
statement code is: ArrayList<Object> arrayList = new ArrayList<Object>(scanner.lexems)
statement is: advScanning(Ljava/util/ArrayList;)Ljava/util/ArrayList; type is: class org.evosuite.testcase.statements.MethodStatement return type java.util.ArrayList<E>
statement code is: ArrayList advScanning = scanner.advScanning(arg0)
test data is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
FileSystemHandling.appendLineToFile(evoSuiteFile, "PROGRAM");
Scanner scanner = new Scanner("AdvLexem");
ArrayList<Object> arrayList = new ArrayList<Object>(scanner.lexems);
scanner.advScanning(arrayList);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
        FileSystemHandling.appendLineToFile(evoSuiteFile, "PROGRAM");
        Scanner scanner = new Scanner("AdvLexem");
        ArrayList<Object> arrayList = new ArrayList<Object>(scanner.lexems);
        scanner.advScanning(arrayList);
    }
}
statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: FileSystemHandling.appendLineToFile(evoSuiteFile, "PROGRAM"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: FileSystemHandling.appendLineToFile(evoSuiteFile, "PROGRAM") target is: FileSystemHandling method is: appendLineToFile(EvoSuiteFile,java.lang.String)
Matched Method is: appendLineToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;Ljava/lang/String;)Z
i 1 Parameters size() 1 Num of Method Parameters: 2
statement is: Scanner scanner = new Scanner("AdvLexem"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ArrayList<Object> arrayList = new ArrayList<Object>(scanner.lexems), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: scanner.advScanning(arrayList), class spoon.support.reflect.code.CtInvocationImpl
invocation is: scanner.advScanning(arrayList) target is: scanner method is: advScanning(ArrayList)
source statement: Scanner(Ljava/lang/String;)V callee: VariableReference: Statement 2, type Scannerindex is: 4
Matched Method is: advScanning(Ljava/util/ArrayList;)Ljava/util/ArrayList;
TestCase is: String string = "PROGRAM";
String string = null;
boolean appendLineToFile = FileSystemHandling.appendLineToFile((EvoSuiteFile) string, string);
String string = "AdvLexem";
Scanner scanner = new Scanner(string);
ArrayList<Object> arrayList = new ArrayList<Object>(((Scanner) appendLineToFile).lexems);
((Scanner) appendLineToFile).advScanning(arrayList);

statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem") type is: class org.evosuite.testcase.statements.environment.FileNamePrimitiveStatement return type class org.evosuite.runtime.testdata.EvoSuiteFile
statement code is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem")
statement is: org.evosuite.testcase.statements.ArrayStatement@66085a7d type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[6]
statement is: org.evosuite.testcase.statements.AssignmentStatement@73f03b7a type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[0] = (byte)34
statement is: org.evosuite.testcase.statements.AssignmentStatement@db9442f8 type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[1] = (byte)34
statement is: appendDataToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;[B)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean appendDataToFile = FileSystemHandling.appendDataToFile(arg0, arg1)
statement is: Scanner(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class Scanner
statement code is: Scanner scanner = new Scanner("AdvLexem")
statement is: java.util.ArrayList(Ljava/util/Collection;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type java.util.ArrayList<java.lang.Object>
statement code is: ArrayList<Object> arrayList = new ArrayList<Object>(scanner.lexems)
statement is: advScanning(Ljava/util/ArrayList;)Ljava/util/ArrayList; type is: class org.evosuite.testcase.statements.MethodStatement return type java.util.ArrayList<E>
statement code is: ArrayList advScanning = scanner.advScanning(arg0)
test data is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
byte[] byteArray = new byte[6];
byteArray[0] = (byte)34;
byteArray[1] = (byte)34;
FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
Scanner scanner = new Scanner("AdvLexem");
ArrayList<Object> arrayList = new ArrayList<Object>(scanner.lexems);
scanner.advScanning(arrayList);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        EvoSuiteFile evoSuiteFile = new EvoSuiteFile("\"This is a test input for the Scanner class\"");
        byte[] byteArray = new byte[6];
        byteArray[0] = ((byte) (34));
        byteArray[1] = ((byte) (34));
        FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
        Scanner scanner = new Scanner("\"This is a test input for the Scanner class\"");
        ArrayList<Object> arrayList = new ArrayList<Object>(scanner.lexems);
        scanner.advScanning(arrayList);
    }
}
statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("\"This is a test input for the Scanner class\""), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: byte[] byteArray = new byte[6], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [6] Ct is: byte[] byteArray = new byte[6] isAssignment: false Array: new byte[6] Elements: []
lengths: [6] [6]
Their type are: class [B byte[]
statement is: byteArray[0] = ((byte) (34)), class spoon.support.reflect.code.CtAssignmentImpl
Assigned : byteArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl byte Assignment:((byte) (34)) Ct is: byteArray[0] = ((byte) (34))
target : byteArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@393f400c
statement is: byteArray[1] = ((byte) (34)), class spoon.support.reflect.code.CtAssignmentImpl
Assigned : byteArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl byte Assignment:((byte) (34)) Ct is: byteArray[1] = ((byte) (34))
target : byteArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@42f3820b
statement is: FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray) target is: FileSystemHandling method is: appendDataToFile(EvoSuiteFile,byte[])
Matched Method is: appendDataToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;[B)Z
i 1 Parameters size() 1 Num of Method Parameters: 2
statement is: Scanner scanner = new Scanner("\"This is a test input for the Scanner class\""), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ArrayList<Object> arrayList = new ArrayList<Object>(scanner.lexems), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: scanner.advScanning(arrayList), class spoon.support.reflect.code.CtInvocationImpl
invocation is: scanner.advScanning(arrayList) target is: scanner method is: advScanning(ArrayList)
source statement: Scanner(Ljava/lang/String;)V callee: VariableReference: Statement 5, type Scannerindex is: 6
Matched Method is: advScanning(Ljava/util/ArrayList;)Ljava/util/ArrayList;
* this is vulnerable: int _int = 34
* this is vulnerable: int _int = 34
TestCase is: byte[] byteArray = new byte[6];
int _int = 34;
int _int = 34;
byte[] byteArray = null;
FileSystemHandling.appendDataToFile((EvoSuiteFile) byteArray, byteArray);
String string = "\"This is a test input for the Scanner class\"";
Scanner scanner = new Scanner(string);
ArrayList<Object> arrayList = new ArrayList<Object>(((Scanner) string).lexems);
((Scanner) string).advScanning(arrayList);

statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem") type is: class org.evosuite.testcase.statements.environment.FileNamePrimitiveStatement return type class org.evosuite.runtime.testdata.EvoSuiteFile
statement code is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem")
statement is: appendLineToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean appendLineToFile = FileSystemHandling.appendLineToFile(arg0, "AND")
statement is: Scanner(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class Scanner
statement code is: Scanner scanner = new Scanner("AdvLexem")
statement is: java.util.ArrayList(Ljava/util/Collection;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type java.util.ArrayList<java.lang.Object>
statement code is: ArrayList<Object> arrayList = new ArrayList<Object>(scanner.lexems)
statement is: advScanning(Ljava/util/ArrayList;)Ljava/util/ArrayList; type is: class org.evosuite.testcase.statements.MethodStatement return type java.util.ArrayList<E>
statement code is: ArrayList advScanning = scanner.advScanning(arg0)
test data is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
FileSystemHandling.appendLineToFile(evoSuiteFile, "AND");
Scanner scanner = new Scanner("AdvLexem");
ArrayList<Object> arrayList = new ArrayList<Object>(scanner.lexems);
scanner.advScanning(arrayList);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
        FileSystemHandling.appendLineToFile(evoSuiteFile, "AND");
        Scanner scanner = new Scanner("AdvLexem");
        ArrayList<Object> arrayList = new ArrayList<Object>(scanner.lexems);
        scanner.advScanning(arrayList);
    }
}
statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: FileSystemHandling.appendLineToFile(evoSuiteFile, "AND"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: FileSystemHandling.appendLineToFile(evoSuiteFile, "AND") target is: FileSystemHandling method is: appendLineToFile(EvoSuiteFile,java.lang.String)
Matched Method is: appendLineToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;Ljava/lang/String;)Z
i 1 Parameters size() 1 Num of Method Parameters: 2
statement is: Scanner scanner = new Scanner("AdvLexem"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ArrayList<Object> arrayList = new ArrayList<Object>(scanner.lexems), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: scanner.advScanning(arrayList), class spoon.support.reflect.code.CtInvocationImpl
invocation is: scanner.advScanning(arrayList) target is: scanner method is: advScanning(ArrayList)
source statement: Scanner(Ljava/lang/String;)V callee: VariableReference: Statement 2, type Scannerindex is: 4
Matched Method is: advScanning(Ljava/util/ArrayList;)Ljava/util/ArrayList;
TestCase is: String string = "AND";
String string = null;
boolean appendLineToFile = FileSystemHandling.appendLineToFile((EvoSuiteFile) string, string);
String string = "AdvLexem";
Scanner scanner = new Scanner(string);
ArrayList<Object> arrayList = new ArrayList<Object>(((Scanner) appendLineToFile).lexems);
((Scanner) appendLineToFile).advScanning(arrayList);

statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem") type is: class org.evosuite.testcase.statements.environment.FileNamePrimitiveStatement return type class org.evosuite.runtime.testdata.EvoSuiteFile
statement code is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem")
statement is: org.evosuite.testcase.statements.ArrayStatement@8b9e28cc type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[15]
statement is: org.evosuite.testcase.statements.AssignmentStatement@d7dda0ab type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[0] = (byte)40
statement is: appendDataToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;[B)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean appendDataToFile = FileSystemHandling.appendDataToFile(arg0, arg1)
statement is: Scanner(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class Scanner
statement code is: Scanner scanner = new Scanner("AdvLexem")
statement is: java.util.ArrayList(Ljava/util/Collection;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type java.util.ArrayList<java.lang.Object>
statement code is: ArrayList<Object> arrayList = new ArrayList<Object>(scanner.lexems)
statement is: advScanning(Ljava/util/ArrayList;)Ljava/util/ArrayList; type is: class org.evosuite.testcase.statements.MethodStatement return type java.util.ArrayList<E>
statement code is: ArrayList advScanning = scanner.advScanning(arg0)
test data is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
byte[] byteArray = new byte[15];
byteArray[0] = (byte)40;
FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
Scanner scanner = new Scanner("AdvLexem");
ArrayList<Object> arrayList = new ArrayList<Object>(scanner.lexems);
scanner.advScanning(arrayList);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
        byte[] byteArray = new byte[]{ 40 };
        FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
        Scanner scanner = new Scanner("AdvLexem");
        ArrayList<Object> arrayList = new ArrayList<>(scanner.lexems);
        scanner.advScanning(arrayList);
    }
}
statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: byte[] byteArray = new byte[]{ 40 }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: byte[] byteArray = new byte[15] isAssignment: false Array: new byte[]{ 40 } Elements: [40]
lengths: [15] []
statement is: FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray) target is: FileSystemHandling method is: appendDataToFile(EvoSuiteFile,byte[])
Matched Method is: appendDataToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;[B)Z
i 0 Parameters size() 0 Num of Method Parameters: 2
i 1 Parameters size() 0 Num of Method Parameters: 2
statement is: Scanner scanner = new Scanner("AdvLexem"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ArrayList<Object> arrayList = new ArrayList<>(scanner.lexems), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: scanner.advScanning(arrayList), class spoon.support.reflect.code.CtInvocationImpl
invocation is: scanner.advScanning(arrayList) target is: scanner method is: advScanning(ArrayList)
source statement: Scanner(Ljava/lang/String;)V callee: VariableReference: Statement 4, type Scannerindex is: 4
Matched Method is: advScanning(Ljava/util/ArrayList;)Ljava/util/ArrayList;
TestCase is: EvoSuiteFile evoSuiteFile = null;
byte[] byteArray = null;
FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
String string = "AdvLexem";
Scanner scanner = new Scanner(string);
ArrayList<Object> arrayList = new ArrayList<Object>(scanner.lexems);
scanner.advScanning(arrayList);

statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem") type is: class org.evosuite.testcase.statements.environment.FileNamePrimitiveStatement return type class org.evosuite.runtime.testdata.EvoSuiteFile
statement code is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem")
statement is: org.evosuite.testcase.statements.ArrayStatement@2b2f892d type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[9]
statement is: org.evosuite.testcase.statements.AssignmentStatement@6ea1d69f type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[0] = (byte)61
statement is: org.evosuite.testcase.statements.AssignmentStatement@2f19b5f6 type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[1] = (byte)61
statement is: org.evosuite.testcase.statements.AssignmentStatement@2326c4c3 type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[2] = (byte)61
statement is: org.evosuite.testcase.statements.AssignmentStatement@4338192d type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[3] = (byte)61
statement is: org.evosuite.testcase.statements.AssignmentStatement@c28eb2ac type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[4] = (byte)61
statement is: org.evosuite.testcase.statements.AssignmentStatement@f1187f9c type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[5] = (byte)47
statement is: appendDataToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;[B)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean appendDataToFile = FileSystemHandling.appendDataToFile(arg0, arg1)
statement is: Scanner(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class Scanner
statement code is: Scanner scanner = new Scanner("AdvLexem")
statement is: java.util.ArrayList(Ljava/util/Collection;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type java.util.ArrayList<java.lang.Object>
statement code is: ArrayList<Object> arrayList = new ArrayList<Object>(scanner.lexems)
statement is: advScanning(Ljava/util/ArrayList;)Ljava/util/ArrayList; type is: class org.evosuite.testcase.statements.MethodStatement return type java.util.ArrayList<E>
statement code is: ArrayList advScanning = scanner.advScanning(arg0)
test data is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
byte[] byteArray = new byte[9];
byteArray[0] = (byte)61;
byteArray[1] = (byte)61;
byteArray[2] = (byte)61;
byteArray[3] = (byte)61;
byteArray[4] = (byte)61;
byteArray[5] = (byte)47;
FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
Scanner scanner = new Scanner("AdvLexem");
ArrayList<Object> arrayList = new ArrayList<Object>(scanner.lexems);
scanner.advScanning(arrayList);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
        byte[] byteArray = new byte[9];
        byteArray[0] = ((byte) (61));// This byte array represents the characters '='

        byteArray[1] = ((byte) (61));
        byteArray[2] = ((byte) (61));
        byteArray[3] = ((byte) (61));
        byteArray[4] = ((byte) (61));
        byteArray[5] = ((byte) (47));// This byte array represents the character '/'

        FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
        Scanner scanner = new Scanner("AdvLexem");
        ArrayList<Object> arrayList = new ArrayList<Object>(scanner.lexems);
        scanner.advScanning(arrayList);
    }
}
statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: byte[] byteArray = new byte[9], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [9] Ct is: byte[] byteArray = new byte[9] isAssignment: false Array: new byte[9] Elements: []
lengths: [9] [9]
Their type are: class [B byte[]
statement is: byteArray[0] = ((byte) (61))// This byte array represents the characters '='
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : byteArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl byte Assignment:((byte) (61)) Ct is: byteArray[0] = ((byte) (61))// This byte array represents the characters '='

target : byteArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@b0dda089
statement is: byteArray[1] = ((byte) (61)), class spoon.support.reflect.code.CtAssignmentImpl
Assigned : byteArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl byte Assignment:((byte) (61)) Ct is: byteArray[1] = ((byte) (61))
target : byteArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@f0319bc4
statement is: byteArray[2] = ((byte) (61)), class spoon.support.reflect.code.CtAssignmentImpl
Assigned : byteArray[2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl byte Assignment:((byte) (61)) Ct is: byteArray[2] = ((byte) (61))
target : byteArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@57e546a9
statement is: byteArray[3] = ((byte) (61)), class spoon.support.reflect.code.CtAssignmentImpl
Assigned : byteArray[3] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl byte Assignment:((byte) (61)) Ct is: byteArray[3] = ((byte) (61))
target : byteArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@bfdc845c
statement is: byteArray[4] = ((byte) (61)), class spoon.support.reflect.code.CtAssignmentImpl
Assigned : byteArray[4] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl byte Assignment:((byte) (61)) Ct is: byteArray[4] = ((byte) (61))
target : byteArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@71020951
statement is: byteArray[5] = ((byte) (47))// This byte array represents the character '/'
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : byteArray[5] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl byte Assignment:((byte) (47)) Ct is: byteArray[5] = ((byte) (47))// This byte array represents the character '/'

target : byteArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@8f0e3d6a
statement is: FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray) target is: FileSystemHandling method is: appendDataToFile(EvoSuiteFile,byte[])
Matched Method is: appendDataToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;[B)Z
i 1 Parameters size() 1 Num of Method Parameters: 2
statement is: Scanner scanner = new Scanner("AdvLexem"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ArrayList<Object> arrayList = new ArrayList<Object>(scanner.lexems), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: scanner.advScanning(arrayList), class spoon.support.reflect.code.CtInvocationImpl
invocation is: scanner.advScanning(arrayList) target is: scanner method is: advScanning(ArrayList)
source statement: Scanner(Ljava/lang/String;)V callee: VariableReference: Statement 9, type Scannerindex is: 10
Matched Method is: advScanning(Ljava/util/ArrayList;)Ljava/util/ArrayList;
* this is vulnerable: int _int = 61
* this is vulnerable: int _int = 61
* this is vulnerable: int _int = 61
* this is vulnerable: int _int = 61
* this is vulnerable: int _int = 61
* this is vulnerable: int _int = 47
TestCase is: byte[] byteArray = new byte[9];
int _int = 61;
int _int = 61;
int _int = 61;
int _int = 61;
int _int = 61;
int _int = 47;
byte[] byteArray = null;
FileSystemHandling.appendDataToFile((EvoSuiteFile) byteArray, byteArray);
String string = "AdvLexem";
Scanner scanner = new Scanner(string);
ArrayList<Object> arrayList = new ArrayList<Object>(((Scanner) string).lexems);
((Scanner) string).advScanning(arrayList);

statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem") type is: class org.evosuite.testcase.statements.environment.FileNamePrimitiveStatement return type class org.evosuite.runtime.testdata.EvoSuiteFile
statement code is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem")
statement is: org.evosuite.testcase.statements.ArrayStatement@e38e413f type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[9]
statement is: org.evosuite.testcase.statements.AssignmentStatement@662461a6 type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[0] = (byte)61
statement is: org.evosuite.testcase.statements.AssignmentStatement@7aab536b type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[1] = (byte)61
statement is: org.evosuite.testcase.statements.AssignmentStatement@afdd51c9 type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[2] = (byte)60
statement is: appendDataToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;[B)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean appendDataToFile = FileSystemHandling.appendDataToFile(arg0, arg1)
statement is: Scanner(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class Scanner
statement code is: Scanner scanner = new Scanner("AdvLexem")
statement is: java.util.ArrayList(Ljava/util/Collection;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type java.util.ArrayList<java.lang.Object>
statement code is: ArrayList<Object> arrayList = new ArrayList<Object>(scanner.lexems)
statement is: advScanning(Ljava/util/ArrayList;)Ljava/util/ArrayList; type is: class org.evosuite.testcase.statements.MethodStatement return type java.util.ArrayList<E>
statement code is: ArrayList advScanning = scanner.advScanning(arg0)
test data is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
byte[] byteArray = new byte[9];
byteArray[0] = (byte)61;
byteArray[1] = (byte)61;
byteArray[2] = (byte)60;
FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
Scanner scanner = new Scanner("AdvLexem");
ArrayList<Object> arrayList = new ArrayList<Object>(scanner.lexems);
scanner.advScanning(arrayList);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
        byte[] byteArray = new byte[9];
        byteArray[0] = ((byte) (61));// '=' character

        byteArray[1] = ((byte) (61));// '=' character

        byteArray[2] = ((byte) (60));// '<' character

        FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
        Scanner scanner = new Scanner("AdvLexem");
        ArrayList<Object> arrayList = new ArrayList<Object>(scanner.lexems);
        scanner.advScanning(arrayList);
    }
}
statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: byte[] byteArray = new byte[9], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [9] Ct is: byte[] byteArray = new byte[9] isAssignment: false Array: new byte[9] Elements: []
lengths: [9] [9]
Their type are: class [B byte[]
statement is: byteArray[0] = ((byte) (61))// '=' character
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : byteArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl byte Assignment:((byte) (61)) Ct is: byteArray[0] = ((byte) (61))// '=' character

target : byteArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@da9fd55c
statement is: byteArray[1] = ((byte) (61))// '=' character
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : byteArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl byte Assignment:((byte) (61)) Ct is: byteArray[1] = ((byte) (61))// '=' character

target : byteArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@b5a72784
statement is: byteArray[2] = ((byte) (60))// '<' character
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : byteArray[2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl byte Assignment:((byte) (60)) Ct is: byteArray[2] = ((byte) (60))// '<' character

target : byteArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@fa6cf0e9
statement is: FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray) target is: FileSystemHandling method is: appendDataToFile(EvoSuiteFile,byte[])
Matched Method is: appendDataToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;[B)Z
i 1 Parameters size() 1 Num of Method Parameters: 2
statement is: Scanner scanner = new Scanner("AdvLexem"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ArrayList<Object> arrayList = new ArrayList<Object>(scanner.lexems), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: scanner.advScanning(arrayList), class spoon.support.reflect.code.CtInvocationImpl
invocation is: scanner.advScanning(arrayList) target is: scanner method is: advScanning(ArrayList)
source statement: Scanner(Ljava/lang/String;)V callee: VariableReference: Statement 6, type Scannerindex is: 7
Matched Method is: advScanning(Ljava/util/ArrayList;)Ljava/util/ArrayList;
* this is vulnerable: int _int = 61
* this is vulnerable: int _int = 61
* this is vulnerable: int _int = 60
TestCase is: byte[] byteArray = new byte[9];
int _int = 61;
int _int = 61;
int _int = 60;
byte[] byteArray = null;
FileSystemHandling.appendDataToFile((EvoSuiteFile) byteArray, byteArray);
String string = "AdvLexem";
Scanner scanner = new Scanner(string);
ArrayList<Object> arrayList = new ArrayList<Object>(((Scanner) string).lexems);
((Scanner) string).advScanning(arrayList);

statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem") type is: class org.evosuite.testcase.statements.environment.FileNamePrimitiveStatement return type class org.evosuite.runtime.testdata.EvoSuiteFile
statement code is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem")
statement is: org.evosuite.testcase.statements.ArrayStatement@6b2994c8 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[9]
statement is: org.evosuite.testcase.statements.AssignmentStatement@2a3eebb2 type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[0] = (byte)61
statement is: org.evosuite.testcase.statements.AssignmentStatement@26910bfc type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[1] = (byte)61
statement is: org.evosuite.testcase.statements.AssignmentStatement@bd37f86c type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[2] = (byte)60
statement is: org.evosuite.testcase.statements.AssignmentStatement@6b8673bf type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[3] = (byte)61
statement is: appendDataToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;[B)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean appendDataToFile = FileSystemHandling.appendDataToFile(arg0, arg1)
statement is: Scanner(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class Scanner
statement code is: Scanner scanner = new Scanner("AdvLexem")
statement is: java.util.ArrayList(Ljava/util/Collection;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type java.util.ArrayList<java.lang.Object>
statement code is: ArrayList<Object> arrayList = new ArrayList<Object>(scanner.lexems)
statement is: advScanning(Ljava/util/ArrayList;)Ljava/util/ArrayList; type is: class org.evosuite.testcase.statements.MethodStatement return type java.util.ArrayList<E>
statement code is: ArrayList advScanning = scanner.advScanning(arg0)
test data is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
byte[] byteArray = new byte[9];
byteArray[0] = (byte)61;
byteArray[1] = (byte)61;
byteArray[2] = (byte)60;
byteArray[3] = (byte)61;
FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
Scanner scanner = new Scanner("AdvLexem");
ArrayList<Object> arrayList = new ArrayList<Object>(scanner.lexems);
scanner.advScanning(arrayList);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
        byte[] byteArray = new byte[9];
        byteArray[0] = ((byte) (61));// '=' character

        byteArray[1] = ((byte) (61));// '=' character

        byteArray[2] = ((byte) (60));// '<' character

        byteArray[3] = ((byte) (61));// '=' character

        FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
        Scanner scanner = new Scanner("AdvLexem");
        ArrayList<Object> arrayList = new ArrayList<Object>(scanner.lexems);
        scanner.advScanning(arrayList);
    }
}
statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: byte[] byteArray = new byte[9], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [9] Ct is: byte[] byteArray = new byte[9] isAssignment: false Array: new byte[9] Elements: []
lengths: [9] [9]
Their type are: class [B byte[]
statement is: byteArray[0] = ((byte) (61))// '=' character
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : byteArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl byte Assignment:((byte) (61)) Ct is: byteArray[0] = ((byte) (61))// '=' character

target : byteArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@213582f6
statement is: byteArray[1] = ((byte) (61))// '=' character
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : byteArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl byte Assignment:((byte) (61)) Ct is: byteArray[1] = ((byte) (61))// '=' character

target : byteArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@8a72e68d
statement is: byteArray[2] = ((byte) (60))// '<' character
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : byteArray[2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl byte Assignment:((byte) (60)) Ct is: byteArray[2] = ((byte) (60))// '<' character

target : byteArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@8a6e17a1
statement is: byteArray[3] = ((byte) (61))// '=' character
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : byteArray[3] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl byte Assignment:((byte) (61)) Ct is: byteArray[3] = ((byte) (61))// '=' character

target : byteArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@8e300805
statement is: FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray) target is: FileSystemHandling method is: appendDataToFile(EvoSuiteFile,byte[])
Matched Method is: appendDataToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;[B)Z
i 1 Parameters size() 1 Num of Method Parameters: 2
statement is: Scanner scanner = new Scanner("AdvLexem"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ArrayList<Object> arrayList = new ArrayList<Object>(scanner.lexems), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: scanner.advScanning(arrayList), class spoon.support.reflect.code.CtInvocationImpl
invocation is: scanner.advScanning(arrayList) target is: scanner method is: advScanning(ArrayList)
source statement: Scanner(Ljava/lang/String;)V callee: VariableReference: Statement 7, type Scannerindex is: 8
Matched Method is: advScanning(Ljava/util/ArrayList;)Ljava/util/ArrayList;
* this is vulnerable: int _int = 61
* this is vulnerable: int _int = 61
* this is vulnerable: int _int = 60
* this is vulnerable: int _int = 61
TestCase is: byte[] byteArray = new byte[9];
int _int = 61;
int _int = 61;
int _int = 60;
int _int = 61;
byte[] byteArray = null;
FileSystemHandling.appendDataToFile((EvoSuiteFile) byteArray, byteArray);
String string = "AdvLexem";
Scanner scanner = new Scanner(string);
ArrayList<Object> arrayList = new ArrayList<Object>(((Scanner) string).lexems);
((Scanner) string).advScanning(arrayList);

statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem") type is: class org.evosuite.testcase.statements.environment.FileNamePrimitiveStatement return type class org.evosuite.runtime.testdata.EvoSuiteFile
statement code is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem")
statement is: appendStringToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean appendStringToFile = FileSystemHandling.appendStringToFile(arg0, "Not a statement\n   found: ")
statement is: Scanner(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class Scanner
statement code is: Scanner scanner = new Scanner("AdvLexem")
statement is: java.util.ArrayList()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type java.util.ArrayList<java.lang.Object>
statement code is: ArrayList<Object> arrayList = new ArrayList<Object>()
statement is: advScanning(Ljava/util/ArrayList;)Ljava/util/ArrayList; type is: class org.evosuite.testcase.statements.MethodStatement return type java.util.ArrayList<E>
statement code is: ArrayList advScanning = scanner.advScanning(arg0)
test data is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
FileSystemHandling.appendStringToFile(evoSuiteFile, "Not a statement\n   found: ");
Scanner scanner = new Scanner("AdvLexem");
ArrayList<Object> arrayList = new ArrayList<Object>();
scanner.advScanning(arrayList);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
        FileSystemHandling.appendStringToFile(evoSuiteFile, "Not a statement\n   found: ");
        Scanner scanner = new Scanner("AdvLexem");
        ArrayList<Object> arrayList = new ArrayList<Object>();
        scanner.advScanning(arrayList);
        // Additional test data
        EvoSuiteFile evoSuiteFile2 = new EvoSuiteFile("AdvLexem2");
        FileSystemHandling.appendStringToFile(evoSuiteFile2, "Not a statement\n   found: ");
        Scanner scanner2 = new Scanner("AdvLexem2");
        ArrayList<Object> arrayList2 = new ArrayList<Object>();
        scanner2.advScanning(arrayList2);
        // Edge cases
        EvoSuiteFile evoSuiteFile3 = new EvoSuiteFile("AdvLexem3");
        FileSystemHandling.appendStringToFile(evoSuiteFile3, "Not a statement\n   found: ");
        Scanner scanner3 = new Scanner("");// Empty string

        ArrayList<Object> arrayList3 = new ArrayList<Object>();
        scanner3.advScanning(arrayList3);
    }
}
statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: FileSystemHandling.appendStringToFile(evoSuiteFile, "Not a statement\n   found: "), class spoon.support.reflect.code.CtInvocationImpl
invocation is: FileSystemHandling.appendStringToFile(evoSuiteFile, "Not a statement\n   found: ") target is: FileSystemHandling method is: appendStringToFile(EvoSuiteFile,java.lang.String)
Matched Method is: appendStringToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;Ljava/lang/String;)Z
i 1 Parameters size() 1 Num of Method Parameters: 2
statement is: Scanner scanner = new Scanner("AdvLexem"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ArrayList<Object> arrayList = new ArrayList<Object>(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: scanner.advScanning(arrayList), class spoon.support.reflect.code.CtInvocationImpl
invocation is: scanner.advScanning(arrayList) target is: scanner method is: advScanning(ArrayList)
source statement: Scanner(Ljava/lang/String;)V callee: VariableReference: Statement 2, type Scannerindex is: 4
Matched Method is: advScanning(Ljava/util/ArrayList;)Ljava/util/ArrayList;
statement is: // Additional test data
EvoSuiteFile evoSuiteFile2 = new EvoSuiteFile("AdvLexem2"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: FileSystemHandling.appendStringToFile(evoSuiteFile2, "Not a statement\n   found: "), class spoon.support.reflect.code.CtInvocationImpl
invocation is: FileSystemHandling.appendStringToFile(evoSuiteFile2, "Not a statement\n   found: ") target is: FileSystemHandling method is: appendStringToFile(EvoSuiteFile,java.lang.String)
Matched Method is: appendStringToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;Ljava/lang/String;)Z
i 1 Parameters size() 1 Num of Method Parameters: 2
statement is: Scanner scanner2 = new Scanner("AdvLexem2"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ArrayList<Object> arrayList2 = new ArrayList<Object>(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: scanner2.advScanning(arrayList2), class spoon.support.reflect.code.CtInvocationImpl
invocation is: scanner2.advScanning(arrayList2) target is: scanner2 method is: advScanning(ArrayList)
source statement: Scanner(Ljava/lang/String;)V callee: VariableReference: Statement 2, type Scannerindex is: 11
Matched Method is: advScanning(Ljava/util/ArrayList;)Ljava/util/ArrayList;
statement is: // Edge cases
EvoSuiteFile evoSuiteFile3 = new EvoSuiteFile("AdvLexem3"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: FileSystemHandling.appendStringToFile(evoSuiteFile3, "Not a statement\n   found: "), class spoon.support.reflect.code.CtInvocationImpl
invocation is: FileSystemHandling.appendStringToFile(evoSuiteFile3, "Not a statement\n   found: ") target is: FileSystemHandling method is: appendStringToFile(EvoSuiteFile,java.lang.String)
Matched Method is: appendStringToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;Ljava/lang/String;)Z
i 1 Parameters size() 1 Num of Method Parameters: 2
statement is: Scanner scanner3 = new Scanner("")// Empty string
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ArrayList<Object> arrayList3 = new ArrayList<Object>(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: scanner3.advScanning(arrayList3), class spoon.support.reflect.code.CtInvocationImpl
invocation is: scanner3.advScanning(arrayList3) target is: scanner3 method is: advScanning(ArrayList)
source statement: Scanner(Ljava/lang/String;)V callee: VariableReference: Statement 2, type Scannerindex is: 18
Matched Method is: advScanning(Ljava/util/ArrayList;)Ljava/util/ArrayList;
TestCase is: String string = "Not a statement\n   found: ";
String string = null;
boolean appendStringToFile = FileSystemHandling.appendStringToFile((EvoSuiteFile) string, string);
String string = "AdvLexem";
Scanner scanner = new Scanner(string);
ArrayList<Object> arrayList = new ArrayList<Object>();
((Scanner) appendStringToFile).advScanning(arrayList);
String string = "Not a statement\n   found: ";
String string = null;
FileSystemHandling.appendStringToFile((EvoSuiteFile) string, string);
String string = "AdvLexem2";
Scanner scanner = new Scanner(string);
ArrayList<Object> arrayList = new ArrayList<Object>();
((Scanner) appendStringToFile).advScanning(arrayList);
String string = "Not a statement\n   found: ";
String string = null;
FileSystemHandling.appendStringToFile((EvoSuiteFile) string, string);
String string = "";
Scanner scanner = new Scanner(string);
ArrayList<Object> arrayList = new ArrayList<Object>();
((Scanner) appendStringToFile).advScanning(arrayList);

statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem") type is: class org.evosuite.testcase.statements.environment.FileNamePrimitiveStatement return type class org.evosuite.runtime.testdata.EvoSuiteFile
statement code is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem")
statement is: org.evosuite.testcase.statements.ArrayStatement@359b284f type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[4]
statement is: appendDataToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;[B)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean appendDataToFile = FileSystemHandling.appendDataToFile(arg0, arg1)
statement is: Scanner(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class Scanner
statement code is: Scanner scanner = new Scanner("AdvLexem")
statement is: java.util.ArrayList()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type java.util.ArrayList<java.lang.Boolean>
statement code is: ArrayList<Boolean> arrayList = new ArrayList<Boolean>()
statement is: add(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean add = arrayList.add((Boolean) null)
statement is: printAdvLexems(Ljava/util/ArrayList;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: scanner.printAdvLexems(arg0)
test data is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
byte[] byteArray = new byte[4];
FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
Scanner scanner = new Scanner("AdvLexem");
ArrayList<Boolean> arrayList = new ArrayList<Boolean>();
arrayList.add((Boolean) null);
scanner.printAdvLexems(arrayList);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        EvoSuiteFile evoSuiteFile = new EvoSuiteFile("Advanced Lexem");
        byte[] byteArray = new byte[]{ 0x31, 0x32, 0x33, 0x34 };// a binary array with the bytes 1234

        FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
        Scanner scanner = new Scanner("Advanced Lexem");
        ArrayList<Boolean> arrayList = new ArrayList<>();
        arrayList.add(true);// a Boolean value that represents "true"

        scanner.printAdvLexems(arrayList);
    }
}
statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("Advanced Lexem"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: byte[] byteArray = new byte[]{ 0x31, 0x32, 0x33, 0x34 }// a binary array with the bytes 1234
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: byte[] byteArray = new byte[4] isAssignment: false Array: new byte[]{ 0x31, 0x32, 0x33, 0x34 } Elements: [0x31, 0x32, 0x33, 0x34]
lengths: [4] []
statement is: FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray) target is: FileSystemHandling method is: appendDataToFile(EvoSuiteFile,byte[])
Matched Method is: appendDataToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;[B)Z
i 0 Parameters size() 0 Num of Method Parameters: 2
i 1 Parameters size() 0 Num of Method Parameters: 2
statement is: Scanner scanner = new Scanner("Advanced Lexem"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ArrayList<Boolean> arrayList = new ArrayList<>(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: arrayList.add(true)// a Boolean value that represents "true"
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: arrayList.add(true)// a Boolean value that represents "true"
 target is: arrayList method is: add(boolean)
source statement: java.util.ArrayList()V callee: VariableReference: Statement 4, type java.util.ArrayList<java.lang.Boolean>index is: 5
Matched Method is: add(Ljava/lang/Object;)Z
statement is: scanner.printAdvLexems(arrayList), class spoon.support.reflect.code.CtInvocationImpl
invocation is: scanner.printAdvLexems(arrayList) target is: scanner method is: printAdvLexems(ArrayList)
source statement: Scanner(Ljava/lang/String;)V callee: VariableReference: Statement 3, type Scannerindex is: 4
Matched Method is: printAdvLexems(Ljava/util/ArrayList;)V
TestCase is: EvoSuiteFile evoSuiteFile = null;
byte[] byteArray = null;
FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
String string = "Advanced Lexem";
Scanner scanner = new Scanner(string);
ArrayList<Boolean> arrayList = new ArrayList<Boolean>();
boolean _boolean = true;
((ArrayList) scanner).add((Boolean) _boolean);
((Scanner) string).printAdvLexems(arrayList);

* test suite isTestSuite: 55
Test 0: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
byte[] byteArray = new byte[6];
byteArray[0] = (byte)34;
byteArray[1] = (byte)34;
byteArray[2] = (byte)34;
byteArray[5] = (byte)34;
FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
Scanner scanner = new Scanner("AdvLexem");
Test 1: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
byte[] byteArray = new byte[7];
FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
Scanner scanner = new Scanner("AdvLexem");
ArrayList<Boolean> arrayList = new ArrayList<Boolean>();
scanner.checkStructure(arrayList);
Test 2: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
byte[] byteArray = new byte[2];
byteArray[0] = (byte)34;
byteArray[1] = (byte)13;
FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
Scanner scanner = new Scanner("AdvLexem");
Test 3: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
byte[] byteArray = new byte[15];
byteArray[0] = (byte) (-4);
FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
Scanner scanner = new Scanner("AdvLexem");
Test 4: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
FileSystemHandling.appendLineToFile(evoSuiteFile, "expected: PROGRAM\n   found: <\n   line 1\n   column: 1");
Scanner scanner = new Scanner("AdvLexem");
ArrayList<Object> arrayList = new ArrayList<Object>(scanner.lexems);
scanner.advScanning(arrayList);
Test 5: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
FileSystemHandling.appendStringToFile(evoSuiteFile, "5m$+ZPWpQ");
Scanner scanner = new Scanner("AdvLexem");
Test 6: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
FileSystemHandling.appendStringToFile(evoSuiteFile, "RE1/N");
Scanner scanner = new Scanner("AdvLexem");
Test 7: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
FileSystemHandling.appendLineToFile(evoSuiteFile, "EN.");
Scanner scanner = new Scanner("AdvLexem");
Test 8: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
FileSystemHandling.appendStringToFile(evoSuiteFile, "-.e1C");
Scanner scanner = new Scanner("AdvLexem");
Test 9: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
FileSystemHandling.appendStringToFile(evoSuiteFile, "END.");
Scanner scanner = new Scanner("AdvLexem");
Test 10: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
byte[] byteArray = new byte[2];
byteArray[0] = (byte)9;
FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
Scanner scanner = new Scanner("AdvLexem");
Test 11: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
byte[] byteArray = new byte[5];
byteArray[0] = (byte)13;
FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
Scanner scanner = new Scanner("AdvLexem");
Test 12: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
byte[] byteArray = new byte[7];
FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
Scanner scanner = new Scanner("AdvLexem");
ArrayList<Boolean> arrayList = new ArrayList<Boolean>();
scanner.printLexems(arrayList);
Test 13: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
byte[] byteArray = new byte[3];
FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
Scanner scanner = new Scanner("AdvLexem");
ArrayList<Object> arrayList = new ArrayList<Object>();
arrayList.add((Object) null);
// Undeclared exception!
try { 
  scanner.printLexems(arrayList);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("Scanner", e);
}

Test 14: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
byte[] byteArray = new byte[7];
FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
Scanner scanner = new Scanner("AdvLexem");
ArrayList<Boolean> arrayList = new ArrayList<Boolean>();
scanner.printAdvLexems(arrayList);
Test 15: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
FileSystemHandling.appendLineToFile(evoSuiteFile, "INTEGER");
Scanner scanner = new Scanner("AdvLexem");
ArrayList<Object> arrayList = new ArrayList<Object>(scanner.lexems);
scanner.advScanning(arrayList);
Test 16: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
FileSystemHandling.appendStringToFile(evoSuiteFile, "TRUE");
Scanner scanner = new Scanner("AdvLexem");
Test 17: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
FileSystemHandling.appendLineToFile(evoSuiteFile, "expected: LOGICAL VALUE\n   found: ");
Scanner scanner = new Scanner("AdvLexem");
ArrayList<Object> arrayList = new ArrayList<Object>(scanner.lexems);
scanner.advScanning(arrayList);
Test 18: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
FileSystemHandling.appendLineToFile(evoSuiteFile, "expected: PROGRAM\n   found: :=\n   line: 1\n   column: 1");
Scanner scanner = new Scanner("AdvLexem");
Test 19: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
FileSystemHandling.appendLineToFile(evoSuiteFile, "PROGRAM");
Scanner scanner = new Scanner("AdvLexem");
ArrayList<Object> arrayList = new ArrayList<Object>(scanner.lexems);
scanner.advScanning(arrayList);
Test 20: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
byte[] byteArray = new byte[6];
byteArray[0] = (byte)34;
byteArray[1] = (byte)34;
FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
Scanner scanner = new Scanner("AdvLexem");
ArrayList<Object> arrayList = new ArrayList<Object>(scanner.lexems);
scanner.advScanning(arrayList);
Test 21: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
FileSystemHandling.appendLineToFile(evoSuiteFile, "AND");
Scanner scanner = new Scanner("AdvLexem");
ArrayList<Object> arrayList = new ArrayList<Object>(scanner.lexems);
scanner.advScanning(arrayList);
Test 22: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
byte[] byteArray = new byte[15];
byteArray[0] = (byte)40;
FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
Scanner scanner = new Scanner("AdvLexem");
ArrayList<Object> arrayList = new ArrayList<Object>(scanner.lexems);
scanner.advScanning(arrayList);
Test 23: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
byte[] byteArray = new byte[9];
byteArray[0] = (byte)61;
byteArray[1] = (byte)61;
byteArray[2] = (byte)61;
byteArray[3] = (byte)61;
byteArray[4] = (byte)61;
byteArray[5] = (byte)47;
FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
Scanner scanner = new Scanner("AdvLexem");
ArrayList<Object> arrayList = new ArrayList<Object>(scanner.lexems);
scanner.advScanning(arrayList);
Test 24: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
byte[] byteArray = new byte[9];
byteArray[0] = (byte)61;
byteArray[1] = (byte)61;
byteArray[2] = (byte)60;
FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
Scanner scanner = new Scanner("AdvLexem");
ArrayList<Object> arrayList = new ArrayList<Object>(scanner.lexems);
scanner.advScanning(arrayList);
Test 25: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
byte[] byteArray = new byte[9];
byteArray[0] = (byte)61;
byteArray[1] = (byte)61;
byteArray[2] = (byte)60;
byteArray[3] = (byte)61;
FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
Scanner scanner = new Scanner("AdvLexem");
ArrayList<Object> arrayList = new ArrayList<Object>(scanner.lexems);
// Undeclared exception!
try { 
  scanner.advScanning(arrayList);
  fail("Expecting exception: IndexOutOfBoundsException");

} catch(IndexOutOfBoundsException e) {
   //
   // Index: 4, Size: 4
   //
   verifyException("java.util.ArrayList", e);
}

Test 26: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
FileSystemHandling.appendStringToFile(evoSuiteFile, "Not a statement\n   found: ");
Scanner scanner = new Scanner("AdvLexem");
ArrayList<Object> arrayList = new ArrayList<Object>();
scanner.advScanning(arrayList);
Test 27: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
byte[] byteArray = new byte[4];
FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
Scanner scanner = new Scanner("AdvLexem");
ArrayList<Boolean> arrayList = new ArrayList<Boolean>();
arrayList.add((Boolean) null);
// Undeclared exception!
try { 
  scanner.printAdvLexems(arrayList);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("Scanner", e);
}

Test 28: 
byte[] byteArray = new byte[6];
FileSystemHandling.appendDataToFile((EvoSuiteFile) byteArray, (byte[]) null);
String string = "AdvLexem";
Scanner scanner = new Scanner(string);

Test 29: 
byte[] byteArray = new byte[7];
FileSystemHandling.appendDataToFile((EvoSuiteFile) byteArray, (byte[]) null);
String string = "AdvLexem";
Scanner scanner = new Scanner(string);
ArrayList<Boolean> arrayList = new ArrayList<Boolean>();
((Scanner) string).checkStructure(arrayList);
byte[] byteArray = new byte[7];
byte[] byteArray = null;
FileSystemHandling.appendDataToFile((EvoSuiteFile) byteArray, byteArray);
String string = "AdvancedLexicon";
Scanner scanner = new Scanner(string);
ArrayList<Boolean> arrayList = new ArrayList<Boolean>();
((Scanner) string).checkStructure(arrayList);

Test 30: 
byte[] byteArray = new byte[2];
FileSystemHandling.appendDataToFile((EvoSuiteFile) byteArray, (byte[]) null);
String string = "AdvLexem";
Scanner scanner = new Scanner(string);

Test 31: 
byte[] byteArray = new byte[15];
FileSystemHandling.appendDataToFile((EvoSuiteFile) byteArray, (byte[]) null);
String string = "AdvLexem";
Scanner scanner = new Scanner(string);

Test 32: 
boolean appendLineToFile = FileSystemHandling.appendLineToFile((EvoSuiteFile) "expected: PROGRAM\n   found: <\n   line 1\n   column: 1", (String) null);
String string = "AdvLexem";
Scanner scanner = new Scanner(string);
ArrayList<Object> arrayList = new ArrayList<Object>(((Scanner) appendLineToFile).lexems);
((Scanner) appendLineToFile).advScanning(arrayList);

Test 33: 
FileSystemHandling.appendStringToFile((EvoSuiteFile) "RE1/N", (String) null);
String string = "AdvLexem.txt";
Scanner scanner = new Scanner(string);

Test 34: 
FileSystemHandling.appendLineToFile((EvoSuiteFile) "EN.", (String) null);
String string = "AdvancedLexem";
Scanner scanner = new Scanner(string);

Test 35: 
FileSystemHandling.appendStringToFile((EvoSuiteFile) "-.e1C", (String) null);
String string = "2x^2 + 3x - 4";
Scanner scanner = new Scanner(string);

Test 36: 
FileSystemHandling.appendStringToFile((EvoSuiteFile) "END.", (String) null);
String string = "lexem-file";
Scanner scanner = new Scanner(string);

Test 37: 
byte[] byteArray = new byte[2];
FileSystemHandling.appendDataToFile((EvoSuiteFile) byteArray, (byte[]) null);
String string = "AdvLexem";
Scanner scanner = new Scanner(string);
byte[] byteArray = new byte[2];
byte[] byteArray = null;
FileSystemHandling.appendDataToFile((EvoSuiteFile) byteArray, byteArray);
String string = "Advanced Lexeme";
Scanner scanner = new Scanner(string);

Test 38: 
byte[] byteArray = new byte[5];
FileSystemHandling.appendDataToFile((EvoSuiteFile) byteArray, (byte[]) null);
String string = "Alice in Wonderland";
Scanner scanner = new Scanner(string);

Test 39: 
FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
String string = "AdvLexem";
Scanner scanner = new Scanner("AdvLexem");
ArrayList<Boolean> arrayList = new ArrayList<Boolean>();
((Scanner) string).printLexems(arrayList);

Test 40: 
byte[] byteArray = new byte[3];
FileSystemHandling.appendDataToFile((EvoSuiteFile) byteArray, (byte[]) null);
String string = "AdvLexem";
Scanner scanner = new Scanner(string);
ArrayList<Object> arrayList = new ArrayList<Object>();
String string = "Hello, World!";
((ArrayList) scanner).add((Object) string);
((Scanner) string).printLexems(arrayList);

Test 41: 
byte[] byteArray = new byte[7];
FileSystemHandling.appendDataToFile((EvoSuiteFile) byteArray, (byte[]) null);
String string = "AdvLexem";
Scanner scanner = new Scanner(string);
String string = "This is a test string";
Scanner scanner = new Scanner(string);
ArrayList<Boolean> arrayList = new ArrayList<Boolean>();
((Scanner) string).printAdvLexems(arrayList);

Test 42: 
boolean appendLineToFile = FileSystemHandling.appendLineToFile((EvoSuiteFile) "INTEGER", (String) null);
String string = "AdvancedLexem";
Scanner scanner = new Scanner(string);
ArrayList<Object> arrayList = new ArrayList<Object>(((Scanner) appendLineToFile).lexems);
((Scanner) appendLineToFile).advScanning(arrayList);

Test 43: 
FileSystemHandling.appendStringToFile((EvoSuiteFile) "TRUE", (String) null);
String string = "ThisIsASuperLongStringThatRepresentsARealisticInputForTheTestCase";
Scanner scanner = new Scanner(string);

Test 44: 
boolean appendLineToFile = FileSystemHandling.appendLineToFile((EvoSuiteFile) "expected: LOGICAL VALUE\n   found: ", (String) null);
String string = "AdvLexem";
Scanner scanner = new Scanner(string);
ArrayList<Object> arrayList = new ArrayList<Object>(((Scanner) appendLineToFile).lexems);
((Scanner) appendLineToFile).advScanning(arrayList);

Test 45: 
FileSystemHandling.appendLineToFile((EvoSuiteFile) "expected: PROGRAM\n   found: :=\n   line: 1\n   column: 1", (String) null);

Test 46: 
boolean appendLineToFile = FileSystemHandling.appendLineToFile((EvoSuiteFile) "PROGRAM", (String) null);
String string = "AdvLexem";
Scanner scanner = new Scanner(string);
ArrayList<Object> arrayList = new ArrayList<Object>(((Scanner) appendLineToFile).lexems);
((Scanner) appendLineToFile).advScanning(arrayList);

Test 47: 
byte[] byteArray = new byte[6];
FileSystemHandling.appendDataToFile((EvoSuiteFile) byteArray, (byte[]) null);
String string = "\"This is a test input for the Scanner class\"";
Scanner scanner = new Scanner(string);
ArrayList<Object> arrayList = new ArrayList<Object>(((Scanner) string).lexems);
((Scanner) string).advScanning(arrayList);

Test 48: 
boolean appendLineToFile = FileSystemHandling.appendLineToFile((EvoSuiteFile) "AND", (String) null);
String string = "AdvLexem";
Scanner scanner = new Scanner(string);
ArrayList<Object> arrayList = new ArrayList<Object>(((Scanner) appendLineToFile).lexems);
((Scanner) appendLineToFile).advScanning(arrayList);

Test 49: 
FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
Scanner scanner = new Scanner("AdvLexem");
ArrayList<Object> arrayList = new ArrayList<Object>(scanner.lexems);
scanner.advScanning(arrayList);

Test 50: 
byte[] byteArray = new byte[9];
FileSystemHandling.appendDataToFile((EvoSuiteFile) byteArray, (byte[]) null);
String string = "AdvLexem";
Scanner scanner = new Scanner(string);
ArrayList<Object> arrayList = new ArrayList<Object>(((Scanner) string).lexems);
((Scanner) string).advScanning(arrayList);

Test 51: 
byte[] byteArray = new byte[9];
FileSystemHandling.appendDataToFile((EvoSuiteFile) byteArray, (byte[]) null);
String string = "AdvLexem";
Scanner scanner = new Scanner(string);
ArrayList<Object> arrayList = new ArrayList<Object>(((Scanner) string).lexems);
((Scanner) string).advScanning(arrayList);

Test 52: 
byte[] byteArray = new byte[9];
FileSystemHandling.appendDataToFile((EvoSuiteFile) byteArray, (byte[]) null);
String string = "AdvLexem";
Scanner scanner = new Scanner(string);
ArrayList<Object> arrayList = new ArrayList<Object>(((Scanner) string).lexems);
((Scanner) string).advScanning(arrayList);

Test 53: 
boolean appendStringToFile = FileSystemHandling.appendStringToFile((EvoSuiteFile) "Not a statement\n   found: ", (String) null);
String string = "AdvLexem";
Scanner scanner = new Scanner(string);
ArrayList<Object> arrayList = new ArrayList<Object>();
((Scanner) appendStringToFile).advScanning(arrayList);
String string = "Not a statement\n   found: ";
String string = null;
FileSystemHandling.appendStringToFile((EvoSuiteFile) string, string);
String string = "AdvLexem2";
Scanner scanner = new Scanner(string);
ArrayList<Object> arrayList = new ArrayList<Object>();
((Scanner) appendStringToFile).advScanning(arrayList);
String string = "Not a statement\n   found: ";
String string = null;
FileSystemHandling.appendStringToFile((EvoSuiteFile) string, string);
String string = "";
Scanner scanner = new Scanner(string);
ArrayList<Object> arrayList = new ArrayList<Object>();
((Scanner) appendStringToFile).advScanning(arrayList);

Test 54: 
FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
String string = "Advanced Lexem";
Scanner scanner = new Scanner("Advanced Lexem");
ArrayList<Boolean> arrayList = new ArrayList<Boolean>();
boolean _boolean = true;
((ArrayList) scanner).add((Boolean) _boolean);
((Scanner) string).printAdvLexems(arrayList);


* Generated after the refinement and before minimization 55 tests with total length 312
* test suite isTestSuite: 55
Test 0: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
byte[] byteArray = new byte[6];
byteArray[0] = (byte)34;
byteArray[1] = (byte)34;
byteArray[2] = (byte)34;
byteArray[5] = (byte)34;
FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
Scanner scanner = new Scanner("AdvLexem");
Test 1: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
byte[] byteArray = new byte[7];
FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
Scanner scanner = new Scanner("AdvLexem");
ArrayList<Boolean> arrayList = new ArrayList<Boolean>();
scanner.checkStructure(arrayList);
Test 2: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
byte[] byteArray = new byte[2];
byteArray[0] = (byte)34;
byteArray[1] = (byte)13;
FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
Scanner scanner = new Scanner("AdvLexem");
Test 3: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
byte[] byteArray = new byte[15];
byteArray[0] = (byte) (-4);
FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
Scanner scanner = new Scanner("AdvLexem");
Test 4: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
FileSystemHandling.appendLineToFile(evoSuiteFile, "expected: PROGRAM\n   found: <\n   line 1\n   column: 1");
Scanner scanner = new Scanner("AdvLexem");
ArrayList<Object> arrayList = new ArrayList<Object>(scanner.lexems);
scanner.advScanning(arrayList);
Test 5: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
FileSystemHandling.appendStringToFile(evoSuiteFile, "5m$+ZPWpQ");
Scanner scanner = new Scanner("AdvLexem");
Test 6: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
FileSystemHandling.appendStringToFile(evoSuiteFile, "RE1/N");
Scanner scanner = new Scanner("AdvLexem");
Test 7: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
FileSystemHandling.appendLineToFile(evoSuiteFile, "EN.");
Scanner scanner = new Scanner("AdvLexem");
Test 8: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
FileSystemHandling.appendStringToFile(evoSuiteFile, "-.e1C");
Scanner scanner = new Scanner("AdvLexem");
Test 9: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
FileSystemHandling.appendStringToFile(evoSuiteFile, "END.");
Scanner scanner = new Scanner("AdvLexem");
Test 10: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
byte[] byteArray = new byte[2];
byteArray[0] = (byte)9;
FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
Scanner scanner = new Scanner("AdvLexem");
Test 11: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
byte[] byteArray = new byte[5];
byteArray[0] = (byte)13;
FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
Scanner scanner = new Scanner("AdvLexem");
Test 12: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
byte[] byteArray = new byte[7];
FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
Scanner scanner = new Scanner("AdvLexem");
ArrayList<Boolean> arrayList = new ArrayList<Boolean>();
scanner.printLexems(arrayList);
Test 13: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
byte[] byteArray = new byte[3];
FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
Scanner scanner = new Scanner("AdvLexem");
ArrayList<Object> arrayList = new ArrayList<Object>();
arrayList.add((Object) null);
// Undeclared exception!
try { 
  scanner.printLexems(arrayList);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("Scanner", e);
}

Test 14: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
byte[] byteArray = new byte[7];
FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
Scanner scanner = new Scanner("AdvLexem");
ArrayList<Boolean> arrayList = new ArrayList<Boolean>();
scanner.printAdvLexems(arrayList);
Test 15: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
FileSystemHandling.appendLineToFile(evoSuiteFile, "INTEGER");
Scanner scanner = new Scanner("AdvLexem");
ArrayList<Object> arrayList = new ArrayList<Object>(scanner.lexems);
scanner.advScanning(arrayList);
Test 16: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
FileSystemHandling.appendStringToFile(evoSuiteFile, "TRUE");
Scanner scanner = new Scanner("AdvLexem");
Test 17: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
FileSystemHandling.appendLineToFile(evoSuiteFile, "expected: LOGICAL VALUE\n   found: ");
Scanner scanner = new Scanner("AdvLexem");
ArrayList<Object> arrayList = new ArrayList<Object>(scanner.lexems);
scanner.advScanning(arrayList);
Test 18: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
FileSystemHandling.appendLineToFile(evoSuiteFile, "expected: PROGRAM\n   found: :=\n   line: 1\n   column: 1");
Scanner scanner = new Scanner("AdvLexem");
Test 19: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
FileSystemHandling.appendLineToFile(evoSuiteFile, "PROGRAM");
Scanner scanner = new Scanner("AdvLexem");
ArrayList<Object> arrayList = new ArrayList<Object>(scanner.lexems);
scanner.advScanning(arrayList);
Test 20: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
byte[] byteArray = new byte[6];
byteArray[0] = (byte)34;
byteArray[1] = (byte)34;
FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
Scanner scanner = new Scanner("AdvLexem");
ArrayList<Object> arrayList = new ArrayList<Object>(scanner.lexems);
scanner.advScanning(arrayList);
Test 21: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
FileSystemHandling.appendLineToFile(evoSuiteFile, "AND");
Scanner scanner = new Scanner("AdvLexem");
ArrayList<Object> arrayList = new ArrayList<Object>(scanner.lexems);
scanner.advScanning(arrayList);
Test 22: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
byte[] byteArray = new byte[15];
byteArray[0] = (byte)40;
FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
Scanner scanner = new Scanner("AdvLexem");
ArrayList<Object> arrayList = new ArrayList<Object>(scanner.lexems);
scanner.advScanning(arrayList);
Test 23: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
byte[] byteArray = new byte[9];
byteArray[0] = (byte)61;
byteArray[1] = (byte)61;
byteArray[2] = (byte)61;
byteArray[3] = (byte)61;
byteArray[4] = (byte)61;
byteArray[5] = (byte)47;
FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
Scanner scanner = new Scanner("AdvLexem");
ArrayList<Object> arrayList = new ArrayList<Object>(scanner.lexems);
scanner.advScanning(arrayList);
Test 24: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
byte[] byteArray = new byte[9];
byteArray[0] = (byte)61;
byteArray[1] = (byte)61;
byteArray[2] = (byte)60;
FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
Scanner scanner = new Scanner("AdvLexem");
ArrayList<Object> arrayList = new ArrayList<Object>(scanner.lexems);
scanner.advScanning(arrayList);
Test 25: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
byte[] byteArray = new byte[9];
byteArray[0] = (byte)61;
byteArray[1] = (byte)61;
byteArray[2] = (byte)60;
byteArray[3] = (byte)61;
FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
Scanner scanner = new Scanner("AdvLexem");
ArrayList<Object> arrayList = new ArrayList<Object>(scanner.lexems);
// Undeclared exception!
try { 
  scanner.advScanning(arrayList);
  fail("Expecting exception: IndexOutOfBoundsException");

} catch(IndexOutOfBoundsException e) {
   //
   // Index: 4, Size: 4
   //
   verifyException("java.util.ArrayList", e);
}

Test 26: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
FileSystemHandling.appendStringToFile(evoSuiteFile, "Not a statement\n   found: ");
Scanner scanner = new Scanner("AdvLexem");
ArrayList<Object> arrayList = new ArrayList<Object>();
scanner.advScanning(arrayList);
Test 27: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
byte[] byteArray = new byte[4];
FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
Scanner scanner = new Scanner("AdvLexem");
ArrayList<Boolean> arrayList = new ArrayList<Boolean>();
arrayList.add((Boolean) null);
// Undeclared exception!
try { 
  scanner.printAdvLexems(arrayList);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("Scanner", e);
}

Test 28: 
byte[] byteArray = new byte[6];
FileSystemHandling.appendDataToFile((EvoSuiteFile) byteArray, (byte[]) null);
String string = "AdvLexem";
Scanner scanner = new Scanner(string);

Test 29: 
byte[] byteArray = new byte[7];
FileSystemHandling.appendDataToFile((EvoSuiteFile) byteArray, (byte[]) null);
String string = "AdvLexem";
Scanner scanner = new Scanner(string);
ArrayList<Boolean> arrayList = new ArrayList<Boolean>();
((Scanner) string).checkStructure(arrayList);
byte[] byteArray = new byte[7];
byte[] byteArray = null;
FileSystemHandling.appendDataToFile((EvoSuiteFile) byteArray, byteArray);
String string = "AdvancedLexicon";
Scanner scanner = new Scanner(string);
ArrayList<Boolean> arrayList = new ArrayList<Boolean>();
((Scanner) string).checkStructure(arrayList);

Test 30: 
byte[] byteArray = new byte[2];
FileSystemHandling.appendDataToFile((EvoSuiteFile) byteArray, (byte[]) null);
String string = "AdvLexem";
Scanner scanner = new Scanner(string);

Test 31: 
byte[] byteArray = new byte[15];
FileSystemHandling.appendDataToFile((EvoSuiteFile) byteArray, (byte[]) null);
String string = "AdvLexem";
Scanner scanner = new Scanner(string);

Test 32: 
boolean appendLineToFile = FileSystemHandling.appendLineToFile((EvoSuiteFile) "expected: PROGRAM\n   found: <\n   line 1\n   column: 1", (String) null);
String string = "AdvLexem";
Scanner scanner = new Scanner(string);
ArrayList<Object> arrayList = new ArrayList<Object>(((Scanner) appendLineToFile).lexems);
((Scanner) appendLineToFile).advScanning(arrayList);

Test 33: 
FileSystemHandling.appendStringToFile((EvoSuiteFile) "RE1/N", (String) null);
String string = "AdvLexem.txt";
Scanner scanner = new Scanner(string);

Test 34: 
FileSystemHandling.appendLineToFile((EvoSuiteFile) "EN.", (String) null);
String string = "AdvancedLexem";
Scanner scanner = new Scanner(string);

Test 35: 
FileSystemHandling.appendStringToFile((EvoSuiteFile) "-.e1C", (String) null);
String string = "2x^2 + 3x - 4";
Scanner scanner = new Scanner(string);

Test 36: 
FileSystemHandling.appendStringToFile((EvoSuiteFile) "END.", (String) null);
String string = "lexem-file";
Scanner scanner = new Scanner(string);

Test 37: 
byte[] byteArray = new byte[2];
FileSystemHandling.appendDataToFile((EvoSuiteFile) byteArray, (byte[]) null);
String string = "AdvLexem";
Scanner scanner = new Scanner(string);
byte[] byteArray = new byte[2];
byte[] byteArray = null;
FileSystemHandling.appendDataToFile((EvoSuiteFile) byteArray, byteArray);
String string = "Advanced Lexeme";
Scanner scanner = new Scanner(string);

Test 38: 
byte[] byteArray = new byte[5];
FileSystemHandling.appendDataToFile((EvoSuiteFile) byteArray, (byte[]) null);
String string = "Alice in Wonderland";
Scanner scanner = new Scanner(string);

Test 39: 
FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
String string = "AdvLexem";
Scanner scanner = new Scanner("AdvLexem");
ArrayList<Boolean> arrayList = new ArrayList<Boolean>();
((Scanner) string).printLexems(arrayList);

Test 40: 
byte[] byteArray = new byte[3];
FileSystemHandling.appendDataToFile((EvoSuiteFile) byteArray, (byte[]) null);
String string = "AdvLexem";
Scanner scanner = new Scanner(string);
ArrayList<Object> arrayList = new ArrayList<Object>();
String string = "Hello, World!";
((ArrayList) scanner).add((Object) string);
((Scanner) string).printLexems(arrayList);

Test 41: 
byte[] byteArray = new byte[7];
FileSystemHandling.appendDataToFile((EvoSuiteFile) byteArray, (byte[]) null);
String string = "AdvLexem";
Scanner scanner = new Scanner(string);
String string = "This is a test string";
Scanner scanner = new Scanner(string);
ArrayList<Boolean> arrayList = new ArrayList<Boolean>();
((Scanner) string).printAdvLexems(arrayList);

Test 42: 
boolean appendLineToFile = FileSystemHandling.appendLineToFile((EvoSuiteFile) "INTEGER", (String) null);
String string = "AdvancedLexem";
Scanner scanner = new Scanner(string);
ArrayList<Object> arrayList = new ArrayList<Object>(((Scanner) appendLineToFile).lexems);
((Scanner) appendLineToFile).advScanning(arrayList);

Test 43: 
FileSystemHandling.appendStringToFile((EvoSuiteFile) "TRUE", (String) null);
String string = "ThisIsASuperLongStringThatRepresentsARealisticInputForTheTestCase";
Scanner scanner = new Scanner(string);

Test 44: 
boolean appendLineToFile = FileSystemHandling.appendLineToFile((EvoSuiteFile) "expected: LOGICAL VALUE\n   found: ", (String) null);
String string = "AdvLexem";
Scanner scanner = new Scanner(string);
ArrayList<Object> arrayList = new ArrayList<Object>(((Scanner) appendLineToFile).lexems);
((Scanner) appendLineToFile).advScanning(arrayList);

Test 45: 
FileSystemHandling.appendLineToFile((EvoSuiteFile) "expected: PROGRAM\n   found: :=\n   line: 1\n   column: 1", (String) null);

Test 46: 
boolean appendLineToFile = FileSystemHandling.appendLineToFile((EvoSuiteFile) "PROGRAM", (String) null);
String string = "AdvLexem";
Scanner scanner = new Scanner(string);
ArrayList<Object> arrayList = new ArrayList<Object>(((Scanner) appendLineToFile).lexems);
((Scanner) appendLineToFile).advScanning(arrayList);

Test 47: 
byte[] byteArray = new byte[6];
FileSystemHandling.appendDataToFile((EvoSuiteFile) byteArray, (byte[]) null);
String string = "\"This is a test input for the Scanner class\"";
Scanner scanner = new Scanner(string);
ArrayList<Object> arrayList = new ArrayList<Object>(((Scanner) string).lexems);
((Scanner) string).advScanning(arrayList);

Test 48: 
boolean appendLineToFile = FileSystemHandling.appendLineToFile((EvoSuiteFile) "AND", (String) null);
String string = "AdvLexem";
Scanner scanner = new Scanner(string);
ArrayList<Object> arrayList = new ArrayList<Object>(((Scanner) appendLineToFile).lexems);
((Scanner) appendLineToFile).advScanning(arrayList);

Test 49: 
FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
Scanner scanner = new Scanner("AdvLexem");
ArrayList<Object> arrayList = new ArrayList<Object>(scanner.lexems);
scanner.advScanning(arrayList);

Test 50: 
byte[] byteArray = new byte[9];
FileSystemHandling.appendDataToFile((EvoSuiteFile) byteArray, (byte[]) null);
String string = "AdvLexem";
Scanner scanner = new Scanner(string);
ArrayList<Object> arrayList = new ArrayList<Object>(((Scanner) string).lexems);
((Scanner) string).advScanning(arrayList);

Test 51: 
byte[] byteArray = new byte[9];
FileSystemHandling.appendDataToFile((EvoSuiteFile) byteArray, (byte[]) null);
String string = "AdvLexem";
Scanner scanner = new Scanner(string);
ArrayList<Object> arrayList = new ArrayList<Object>(((Scanner) string).lexems);
((Scanner) string).advScanning(arrayList);

Test 52: 
byte[] byteArray = new byte[9];
FileSystemHandling.appendDataToFile((EvoSuiteFile) byteArray, (byte[]) null);
String string = "AdvLexem";
Scanner scanner = new Scanner(string);
ArrayList<Object> arrayList = new ArrayList<Object>(((Scanner) string).lexems);
((Scanner) string).advScanning(arrayList);

Test 53: 
boolean appendStringToFile = FileSystemHandling.appendStringToFile((EvoSuiteFile) "Not a statement\n   found: ", (String) null);
String string = "AdvLexem";
Scanner scanner = new Scanner(string);
ArrayList<Object> arrayList = new ArrayList<Object>();
((Scanner) appendStringToFile).advScanning(arrayList);
String string = "Not a statement\n   found: ";
String string = null;
FileSystemHandling.appendStringToFile((EvoSuiteFile) string, string);
String string = "AdvLexem2";
Scanner scanner = new Scanner(string);
ArrayList<Object> arrayList = new ArrayList<Object>();
((Scanner) appendStringToFile).advScanning(arrayList);
String string = "Not a statement\n   found: ";
String string = null;
FileSystemHandling.appendStringToFile((EvoSuiteFile) string, string);
String string = "";
Scanner scanner = new Scanner(string);
ArrayList<Object> arrayList = new ArrayList<Object>();
((Scanner) appendStringToFile).advScanning(arrayList);

Test 54: 
FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
String string = "Advanced Lexem";
Scanner scanner = new Scanner("Advanced Lexem");
ArrayList<Boolean> arrayList = new ArrayList<Boolean>();
boolean _boolean = true;
((ArrayList) scanner).add((Boolean) _boolean);
((Scanner) string).printAdvLexems(arrayList);


* Minimizing test suite
* test suite isTestSuite: 28
Test 0: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
FileSystemHandling.appendLineToFile(evoSuiteFile, "expected: PROGRAM\n   found: :=\n   line: 1\n   column: 1");
Scanner scanner = new Scanner("AdvLexem");
Test 1: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
FileSystemHandling.appendLineToFile(evoSuiteFile, "PROGRAM");
Scanner scanner = new Scanner("AdvLexem");
ArrayList<Object> arrayList = new ArrayList<Object>(scanner.lexems);
scanner.advScanning(arrayList);
Test 2: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
byte[] byteArray = new byte[2];
byteArray[0] = (byte)34;
FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
Scanner scanner = new Scanner("AdvLexem");
Test 3: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
byte[] byteArray = new byte[6];
byteArray[0] = (byte)34;
byteArray[1] = (byte)34;
FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
Scanner scanner = new Scanner("AdvLexem");
ArrayList<Object> arrayList = new ArrayList<Object>(scanner.lexems);
scanner.advScanning(arrayList);
Test 4: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
byte[] byteArray = new byte[2];
byteArray[0] = (byte)34;
byteArray[1] = (byte)13;
FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
Scanner scanner = new Scanner("AdvLexem");
Test 5: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
FileSystemHandling.appendStringToFile(evoSuiteFile, "RE1/N");
Scanner scanner = new Scanner("AdvLexem");
Test 6: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
byte[] byteArray = new byte[15];
byteArray[0] = (byte) (-4);
FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
Scanner scanner = new Scanner("AdvLexem");
Test 7: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
FileSystemHandling.appendStringToFile(evoSuiteFile, "5m$+ZPWpQ");
Scanner scanner = new Scanner("AdvLexem");
Test 8: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
FileSystemHandling.appendStringToFile(evoSuiteFile, "-.e1C");
Scanner scanner = new Scanner("AdvLexem");
Test 9: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
FileSystemHandling.appendLineToFile(evoSuiteFile, "EN.");
Scanner scanner = new Scanner("AdvLexem");
Test 10: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
FileSystemHandling.appendStringToFile(evoSuiteFile, "END.");
Scanner scanner = new Scanner("AdvLexem");
Test 11: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
byte[] byteArray = new byte[2];
byteArray[0] = (byte)9;
FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
Scanner scanner = new Scanner("AdvLexem");
Test 12: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
byte[] byteArray = new byte[5];
byteArray[0] = (byte)13;
FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
Scanner scanner = new Scanner("AdvLexem");
Test 13: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
byte[] byteArray = new byte[7];
FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
Scanner scanner = new Scanner("AdvLexem");
ArrayList<Boolean> arrayList = new ArrayList<Boolean>();
scanner.printLexems(arrayList);
Test 14: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
byte[] byteArray = new byte[3];
FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
Scanner scanner = new Scanner("AdvLexem");
ArrayList<Object> arrayList = new ArrayList<Object>();
arrayList.add((Object) null);
// Undeclared exception!
try { 
  scanner.printLexems(arrayList);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("Scanner", e);
}

Test 15: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
byte[] byteArray = new byte[7];
FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
Scanner scanner = new Scanner("AdvLexem");
ArrayList<Boolean> arrayList = new ArrayList<Boolean>();
scanner.printAdvLexems(arrayList);
Test 16: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
byte[] byteArray = new byte[4];
FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
Scanner scanner = new Scanner("AdvLexem");
ArrayList<Boolean> arrayList = new ArrayList<Boolean>();
arrayList.add((Boolean) null);
// Undeclared exception!
try { 
  scanner.printAdvLexems(arrayList);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("Scanner", e);
}

Test 17: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
FileSystemHandling.appendStringToFile(evoSuiteFile, "TRUE");
Scanner scanner = new Scanner("AdvLexem");
Test 18: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
FileSystemHandling.appendLineToFile(evoSuiteFile, "AND");
Scanner scanner = new Scanner("AdvLexem");
ArrayList<Object> arrayList = new ArrayList<Object>(scanner.lexems);
scanner.advScanning(arrayList);
Test 19: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
FileSystemHandling.appendLineToFile(evoSuiteFile, "INTEGER");
Scanner scanner = new Scanner("AdvLexem");
ArrayList<Object> arrayList = new ArrayList<Object>(scanner.lexems);
scanner.advScanning(arrayList);
Test 20: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
byte[] byteArray = new byte[15];
byteArray[0] = (byte)40;
FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
Scanner scanner = new Scanner("AdvLexem");
ArrayList<Object> arrayList = new ArrayList<Object>(scanner.lexems);
scanner.advScanning(arrayList);
Test 21: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
FileSystemHandling.appendLineToFile(evoSuiteFile, "expected: LOGICAL VALUE\n   found: ");
Scanner scanner = new Scanner("AdvLexem");
ArrayList<Object> arrayList = new ArrayList<Object>(scanner.lexems);
scanner.advScanning(arrayList);
Test 22: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
FileSystemHandling.appendLineToFile(evoSuiteFile, "expected: PROGRAM\n   found: <\n   line 1\n   column: 1");
Scanner scanner = new Scanner("AdvLexem");
ArrayList<Object> arrayList = new ArrayList<Object>(scanner.lexems);
scanner.advScanning(arrayList);
Test 23: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
byte[] byteArray = new byte[9];
byteArray[0] = (byte)61;
byteArray[1] = (byte)61;
byteArray[2] = (byte)60;
FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
Scanner scanner = new Scanner("AdvLexem");
ArrayList<Object> arrayList = new ArrayList<Object>(scanner.lexems);
scanner.advScanning(arrayList);
Test 24: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
byte[] byteArray = new byte[9];
byteArray[0] = (byte)61;
byteArray[1] = (byte)61;
byteArray[2] = (byte)60;
byteArray[3] = (byte)61;
FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
Scanner scanner = new Scanner("AdvLexem");
ArrayList<Object> arrayList = new ArrayList<Object>(scanner.lexems);
// Undeclared exception!
try { 
  scanner.advScanning(arrayList);
  fail("Expecting exception: IndexOutOfBoundsException");

} catch(IndexOutOfBoundsException e) {
   //
   // Index: 4, Size: 4
   //
   verifyException("java.util.ArrayList", e);
}

Test 25: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
byte[] byteArray = new byte[9];
byteArray[0] = (byte)61;
byteArray[1] = (byte)61;
byteArray[2] = (byte)61;
byteArray[3] = (byte)61;
byteArray[4] = (byte)61;
byteArray[5] = (byte)47;
FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
Scanner scanner = new Scanner("AdvLexem");
ArrayList<Object> arrayList = new ArrayList<Object>(scanner.lexems);
scanner.advScanning(arrayList);
Test 26: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
byte[] byteArray = new byte[7];
FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
Scanner scanner = new Scanner("AdvLexem");
ArrayList<Boolean> arrayList = new ArrayList<Boolean>();
scanner.checkStructure(arrayList);
Test 27: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
FileSystemHandling.appendStringToFile(evoSuiteFile, "Not a statement\n   found: ");
Scanner scanner = new Scanner("AdvLexem");
ArrayList<Object> arrayList = new ArrayList<Object>();
scanner.advScanning(arrayList);

* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 16%
* Total number of goals: 817
* Number of covered goals: 131
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 13%
* Total number of goals: 1391
* Number of covered goals: 185
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 56%
* Total number of goals: 9
* Number of covered goals: 5
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 5
* Number of covered goals: 5
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 16%
* Total number of goals: 817
* Number of covered goals: 127
* Generated 28 tests with total length 155
* Resulting test suite's coverage: 40% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 2%
* Compiling and checking tests
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: EvoSuiteFile arg0 = new EvoSuiteFile("AdvLexem");
FileSystemHandling.appendLineToFile(arg0, "expected: PROGRAM\n   found: :=\n   line: 1\n   column: 1");
Scanner scanner = new Scanner("AdvLexem");

** It was a parseable test case! 
refined test name is: testScannerWithFile
* Compiling Tests
refined test name is: testScannerOutputAdvLexem
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: EvoSuiteFile arg0 = new EvoSuiteFile("AdvLexem");
byte[] arg1 = new byte[2];
arg1[0] = (byte)34;
FileSystemHandling.appendDataToFile(arg0, arg1);
Scanner scanner = new Scanner("AdvLexem");

** It was a parseable test case! 
refined test name is: testAppendDataToFile
* Compiling Tests
refined test name is: testAppendDataToFileWithValidByteArray
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: EvoSuiteFile arg0 = new EvoSuiteFile("AdvLexem");
byte[] arg1 = new byte[2];
arg1[0] = (byte)34;
arg1[1] = (byte)13;
FileSystemHandling.appendDataToFile(arg0, arg1);
Scanner scanner = new Scanner("AdvLexem");

** It was a parseable test case! 
refined test name is: testAppendDataToFile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: EvoSuiteFile arg0 = new EvoSuiteFile("AdvLexem");
FileSystemHandling.appendStringToFile(arg0, "RE1/N");
Scanner scanner = new Scanner("AdvLexem");

** It was a parseable test case! 
refined test name is: testAppendStringToFile
* Compiling Tests
refined test name is: testAppendStringToFileAndCheckIfWritten
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: EvoSuiteFile arg0 = new EvoSuiteFile("AdvLexem");
byte[] arg1 = new byte[15];
arg1[0] = (byte) (-4);
FileSystemHandling.appendDataToFile(arg0, arg1);
Scanner scanner = new Scanner("AdvLexem");

** It was a parseable test case! 
refined test name is: testAppendDataToFile
* Compiling Tests
refined test name is: testReadFromFile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: EvoSuiteFile arg0 = new EvoSuiteFile("AdvLexem");
FileSystemHandling.appendStringToFile(arg0, "5m$+ZPWpQ");
Scanner scanner = new Scanner("AdvLexem");

** It was a parseable test case! 
refined test name is: testAppendStringToFile
* Compiling Tests
refined test name is: testAppendStringToFileUpdatesFileContents
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: EvoSuiteFile arg0 = new EvoSuiteFile("AdvLexem");
FileSystemHandling.appendStringToFile(arg0, "-.e1C");
Scanner scanner = new Scanner("AdvLexem");

** It was a parseable test case! 
refined test name is: testAppendingStringToFile
* Compiling Tests
refined test name is: testAppendStringToFileShouldNotChangeName
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: EvoSuiteFile arg0 = new EvoSuiteFile("AdvLexem");
FileSystemHandling.appendLineToFile(arg0, "EN.");
Scanner scanner = new Scanner("AdvLexem");

** It was a parseable test case! 
refined test name is: testScannerNextLineShouldReturnCorrectValue
* Compiling Tests
refined test name is: testScannerNextLine
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: EvoSuiteFile arg0 = new EvoSuiteFile("AdvLexem");
FileSystemHandling.appendStringToFile(arg0, "END.");
Scanner scanner = new Scanner("AdvLexem");

** It was a parseable test case! 
refined test name is: testScannerFindsStringInFile
* Compiling Tests
refined test name is: testFindStringInFile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: EvoSuiteFile arg0 = new EvoSuiteFile("AdvLexem");
byte[] arg1 = new byte[2];
arg1[0] = (byte)9;
FileSystemHandling.appendDataToFile(arg0, arg1);
Scanner scanner = new Scanner("AdvLexem");

** It was a parseable test case! 
refined test name is: testAppendingDataToFile
* Compiling Tests
refined test name is: testFileAppendData
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: EvoSuiteFile arg0 = new EvoSuiteFile("AdvLexem");
byte[] arg1 = new byte[5];
arg1[0] = (byte)13;
FileSystemHandling.appendDataToFile(arg0, arg1);
Scanner scanner = new Scanner("AdvLexem");

** It was a parseable test case! 
refined test name is: testAppendingDataToFile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: EvoSuiteFile arg0 = new EvoSuiteFile("AdvLexem");
FileSystemHandling.appendStringToFile(arg0, "TRUE");
Scanner scanner = new Scanner("AdvLexem");

** It was a parseable test case! 
refined test name is: testScannerReadsFileCorrectly
* Compiling Tests
refined test name is: testScannerReadsFileCorrectly
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 05:50:18.181 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar2581661158808871897.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:50:18.201 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2581661158808871897.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 05:50:18.252 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar2581661158808871897.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:50:18.254 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2581661158808871897.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 05:50:18.301 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar2581661158808871897.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:50:18.302 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2581661158808871897.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 05:50:18.356 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar2581661158808871897.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:50:18.357 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2581661158808871897.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 05:50:18.447 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar2581661158808871897.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:50:18.449 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2581661158808871897.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 05:50:18.553 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar2581661158808871897.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:50:18.554 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2581661158808871897.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 05:50:18.605 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar2581661158808871897.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:50:18.606 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2581661158808871897.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 05:50:18.657 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar2581661158808871897.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:50:18.658 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2581661158808871897.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 05:50:18.731 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar2581661158808871897.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:50:18.732 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2581661158808871897.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 05:50:18.888 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar2581661158808871897.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:50:18.889 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2581661158808871897.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 05:50:18.990 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar2581661158808871897.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:50:18.991 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2581661158808871897.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 05:50:19.070 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar2581661158808871897.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:50:19.071 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2581661158808871897.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 3 called: 2 to improve: false
** Write a test suite: 4 called: 3 to improve: false
** Write a test suite: 5 called: 4 to improve: false
** Write a test suite: 6 called: 5 to improve: false
** Write a test suite: 7 called: 6 to improve: false
** Write a test suite: 8 called: 7 to improve: false
** Write a test suite: 9 called: 8 to improve: false
** Write a test suite: 11 called: 9 to improve: false
[MASTER] 05:50:19.171 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar2581661158808871897.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:50:19.172 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2581661158808871897.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 2 called: 1 to improve: false
** Write a test suite: 3 called: 2 to improve: false
** Write a test suite: 4 called: 3 to improve: false
** Write a test suite: 5 called: 4 to improve: false
** Write a test suite: 6 called: 5 to improve: false
** Write a test suite: 7 called: 6 to improve: false
** Write a test suite: 8 called: 7 to improve: false
** Write a test suite: 10 called: 8 to improve: false
** Write a test suite: 11 called: 9 to improve: false
[MASTER] 05:50:19.269 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar2581661158808871897.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:50:19.270 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2581661158808871897.jar
[MASTER] 05:50:19.459 [logback-1] WARN  TimeController - Already entered in phase: INLINING. This will mess up the timing calculations.
* test suite isTestSuite: 28
Test 0: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
byte[] byteArray = new byte[6];
byteArray[0] = (byte)34;
byteArray[1] = (byte)34;
byteArray[2] = (byte)34;
byteArray[5] = (byte)34;
FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
Scanner scanner = new Scanner("AdvLexem");
Test 1: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
byte[] byteArray = new byte[7];
FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
Scanner scanner = new Scanner("AdvLexem");
ArrayList<Boolean> arrayList = new ArrayList<Boolean>();
scanner.checkStructure(arrayList);
Test 2: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
byte[] byteArray = new byte[2];
byteArray[0] = (byte)34;
byteArray[1] = (byte)13;
FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
Scanner scanner = new Scanner("AdvLexem");
Test 3: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
byte[] byteArray = new byte[15];
byteArray[0] = (byte) (-4);
FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
Scanner scanner = new Scanner("AdvLexem");
Test 4: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
FileSystemHandling.appendLineToFile(evoSuiteFile, "expected: PROGRAM\n   found: <\n   line 1\n   column: 1");
Scanner scanner = new Scanner("AdvLexem");
ArrayList<Object> arrayList = new ArrayList<Object>(scanner.lexems);
scanner.advScanning(arrayList);
Test 5: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
FileSystemHandling.appendStringToFile(evoSuiteFile, "5m$+ZPWpQ");
Scanner scanner = new Scanner("AdvLexem");
Test 6: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
FileSystemHandling.appendStringToFile(evoSuiteFile, "RE1/N");
Scanner scanner = new Scanner("AdvLexem");
Test 7: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
FileSystemHandling.appendLineToFile(evoSuiteFile, "EN.");
Scanner scanner = new Scanner("AdvLexem");
Test 8: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
FileSystemHandling.appendStringToFile(evoSuiteFile, "-.e1C");
Scanner scanner = new Scanner("AdvLexem");
Test 9: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
FileSystemHandling.appendStringToFile(evoSuiteFile, "END.");
Scanner scanner = new Scanner("AdvLexem");
Test 10: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
byte[] byteArray = new byte[2];
byteArray[0] = (byte)9;
FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
Scanner scanner = new Scanner("AdvLexem");
Test 11: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
byte[] byteArray = new byte[5];
byteArray[0] = (byte)13;
FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
Scanner scanner = new Scanner("AdvLexem");
Test 12: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
byte[] byteArray = new byte[7];
FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
Scanner scanner = new Scanner("AdvLexem");
ArrayList<Boolean> arrayList = new ArrayList<Boolean>();
scanner.printLexems(arrayList);
Test 13: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
byte[] byteArray = new byte[3];
FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
Scanner scanner = new Scanner("AdvLexem");
ArrayList<Object> arrayList = new ArrayList<Object>();
arrayList.add((Object) null);
// Undeclared exception!
try { 
  scanner.printLexems(arrayList);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("Scanner", e);
}

Test 14: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
byte[] byteArray = new byte[7];
FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
Scanner scanner = new Scanner("AdvLexem");
ArrayList<Boolean> arrayList = new ArrayList<Boolean>();
scanner.printAdvLexems(arrayList);
Test 15: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
FileSystemHandling.appendLineToFile(evoSuiteFile, "INTEGER");
Scanner scanner = new Scanner("AdvLexem");
ArrayList<Object> arrayList = new ArrayList<Object>(scanner.lexems);
scanner.advScanning(arrayList);
Test 16: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
FileSystemHandling.appendStringToFile(evoSuiteFile, "TRUE");
Scanner scanner = new Scanner("AdvLexem");
Test 17: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
FileSystemHandling.appendLineToFile(evoSuiteFile, "expected: LOGICAL VALUE\n   found: ");
Scanner scanner = new Scanner("AdvLexem");
ArrayList<Object> arrayList = new ArrayList<Object>(scanner.lexems);
scanner.advScanning(arrayList);
Test 18: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
FileSystemHandling.appendLineToFile(evoSuiteFile, "expected: PROGRAM\n   found: :=\n   line: 1\n   column: 1");
Scanner scanner = new Scanner("AdvLexem");
Test 19: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
FileSystemHandling.appendLineToFile(evoSuiteFile, "PROGRAM");
Scanner scanner = new Scanner("AdvLexem");
ArrayList<Object> arrayList = new ArrayList<Object>(scanner.lexems);
scanner.advScanning(arrayList);
Test 20: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
byte[] byteArray = new byte[6];
byteArray[0] = (byte)34;
byteArray[1] = (byte)34;
FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
Scanner scanner = new Scanner("AdvLexem");
ArrayList<Object> arrayList = new ArrayList<Object>(scanner.lexems);
scanner.advScanning(arrayList);
Test 21: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
FileSystemHandling.appendLineToFile(evoSuiteFile, "AND");
Scanner scanner = new Scanner("AdvLexem");
ArrayList<Object> arrayList = new ArrayList<Object>(scanner.lexems);
scanner.advScanning(arrayList);
Test 22: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
byte[] byteArray = new byte[15];
byteArray[0] = (byte)40;
FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
Scanner scanner = new Scanner("AdvLexem");
ArrayList<Object> arrayList = new ArrayList<Object>(scanner.lexems);
scanner.advScanning(arrayList);
Test 23: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
byte[] byteArray = new byte[9];
byteArray[0] = (byte)61;
byteArray[1] = (byte)61;
byteArray[2] = (byte)61;
byteArray[3] = (byte)61;
byteArray[4] = (byte)61;
byteArray[5] = (byte)47;
FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
Scanner scanner = new Scanner("AdvLexem");
ArrayList<Object> arrayList = new ArrayList<Object>(scanner.lexems);
scanner.advScanning(arrayList);
Test 24: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
byte[] byteArray = new byte[9];
byteArray[0] = (byte)61;
byteArray[1] = (byte)61;
byteArray[2] = (byte)60;
FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
Scanner scanner = new Scanner("AdvLexem");
ArrayList<Object> arrayList = new ArrayList<Object>(scanner.lexems);
scanner.advScanning(arrayList);
Test 25: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
byte[] byteArray = new byte[9];
byteArray[0] = (byte)61;
byteArray[1] = (byte)61;
byteArray[2] = (byte)60;
byteArray[3] = (byte)61;
FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
Scanner scanner = new Scanner("AdvLexem");
ArrayList<Object> arrayList = new ArrayList<Object>(scanner.lexems);
// Undeclared exception!
try { 
  scanner.advScanning(arrayList);
  fail("Expecting exception: IndexOutOfBoundsException");

} catch(IndexOutOfBoundsException e) {
   //
   // Index: 4, Size: 4
   //
   verifyException("java.util.ArrayList", e);
}

Test 26: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
FileSystemHandling.appendStringToFile(evoSuiteFile, "Not a statement\n   found: ");
Scanner scanner = new Scanner("AdvLexem");
ArrayList<Object> arrayList = new ArrayList<Object>();
scanner.advScanning(arrayList);
Test 27: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
byte[] byteArray = new byte[4];
FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
Scanner scanner = new Scanner("AdvLexem");
ArrayList<Boolean> arrayList = new ArrayList<Boolean>();
arrayList.add((Boolean) null);
// Undeclared exception!
try { 
  scanner.printAdvLexems(arrayList);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("Scanner", e);
}


* Minimizing test suite
* test suite isTestSuite: 28
Test 0: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
FileSystemHandling.appendLineToFile(evoSuiteFile, "expected: PROGRAM\n   found: :=\n   line: 1\n   column: 1");
Scanner scanner = new Scanner("AdvLexem");
Test 1: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
FileSystemHandling.appendLineToFile(evoSuiteFile, "PROGRAM");
Scanner scanner = new Scanner("AdvLexem");
ArrayList<Object> arrayList = new ArrayList<Object>(scanner.lexems);
scanner.advScanning(arrayList);
Test 2: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
byte[] byteArray = new byte[2];
byteArray[0] = (byte)34;
FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
Scanner scanner = new Scanner("AdvLexem");
Test 3: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
byte[] byteArray = new byte[6];
byteArray[0] = (byte)34;
byteArray[1] = (byte)34;
FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
Scanner scanner = new Scanner("AdvLexem");
ArrayList<Object> arrayList = new ArrayList<Object>(scanner.lexems);
scanner.advScanning(arrayList);
Test 4: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
byte[] byteArray = new byte[2];
byteArray[0] = (byte)34;
byteArray[1] = (byte)13;
FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
Scanner scanner = new Scanner("AdvLexem");
Test 5: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
FileSystemHandling.appendStringToFile(evoSuiteFile, "RE1/N");
Scanner scanner = new Scanner("AdvLexem");
Test 6: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
byte[] byteArray = new byte[15];
byteArray[0] = (byte) (-4);
FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
Scanner scanner = new Scanner("AdvLexem");
Test 7: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
FileSystemHandling.appendStringToFile(evoSuiteFile, "5m$+ZPWpQ");
Scanner scanner = new Scanner("AdvLexem");
Test 8: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
FileSystemHandling.appendStringToFile(evoSuiteFile, "-.e1C");
Scanner scanner = new Scanner("AdvLexem");
Test 9: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
FileSystemHandling.appendLineToFile(evoSuiteFile, "EN.");
Scanner scanner = new Scanner("AdvLexem");
Test 10: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
FileSystemHandling.appendStringToFile(evoSuiteFile, "END.");
Scanner scanner = new Scanner("AdvLexem");
Test 11: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
byte[] byteArray = new byte[2];
byteArray[0] = (byte)9;
FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
Scanner scanner = new Scanner("AdvLexem");
Test 12: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
byte[] byteArray = new byte[5];
byteArray[0] = (byte)13;
FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
Scanner scanner = new Scanner("AdvLexem");
Test 13: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
byte[] byteArray = new byte[7];
FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
Scanner scanner = new Scanner("AdvLexem");
ArrayList<Boolean> arrayList = new ArrayList<Boolean>();
scanner.printLexems(arrayList);
Test 14: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
byte[] byteArray = new byte[3];
FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
Scanner scanner = new Scanner("AdvLexem");
ArrayList<Object> arrayList = new ArrayList<Object>();
arrayList.add((Object) null);
// Undeclared exception!
try { 
  scanner.printLexems(arrayList);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("Scanner", e);
}

Test 15: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
byte[] byteArray = new byte[7];
FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
Scanner scanner = new Scanner("AdvLexem");
ArrayList<Boolean> arrayList = new ArrayList<Boolean>();
scanner.printAdvLexems(arrayList);
Test 16: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
byte[] byteArray = new byte[4];
FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
Scanner scanner = new Scanner("AdvLexem");
ArrayList<Boolean> arrayList = new ArrayList<Boolean>();
arrayList.add((Boolean) null);
// Undeclared exception!
try { 
  scanner.printAdvLexems(arrayList);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("Scanner", e);
}

Test 17: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
FileSystemHandling.appendStringToFile(evoSuiteFile, "TRUE");
Scanner scanner = new Scanner("AdvLexem");
Test 18: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
FileSystemHandling.appendLineToFile(evoSuiteFile, "AND");
Scanner scanner = new Scanner("AdvLexem");
ArrayList<Object> arrayList = new ArrayList<Object>(scanner.lexems);
scanner.advScanning(arrayList);
Test 19: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
FileSystemHandling.appendLineToFile(evoSuiteFile, "INTEGER");
Scanner scanner = new Scanner("AdvLexem");
ArrayList<Object> arrayList = new ArrayList<Object>(scanner.lexems);
scanner.advScanning(arrayList);
Test 20: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
byte[] byteArray = new byte[15];
byteArray[0] = (byte)40;
FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
Scanner scanner = new Scanner("AdvLexem");
ArrayList<Object> arrayList = new ArrayList<Object>(scanner.lexems);
scanner.advScanning(arrayList);
Test 21: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
FileSystemHandling.appendLineToFile(evoSuiteFile, "expected: LOGICAL VALUE\n   found: ");
Scanner scanner = new Scanner("AdvLexem");
ArrayList<Object> arrayList = new ArrayList<Object>(scanner.lexems);
scanner.advScanning(arrayList);
Test 22: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
FileSystemHandling.appendLineToFile(evoSuiteFile, "expected: PROGRAM\n   found: <\n   line 1\n   column: 1");
Scanner scanner = new Scanner("AdvLexem");
ArrayList<Object> arrayList = new ArrayList<Object>(scanner.lexems);
scanner.advScanning(arrayList);
Test 23: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
byte[] byteArray = new byte[9];
byteArray[0] = (byte)61;
byteArray[1] = (byte)61;
byteArray[2] = (byte)60;
FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
Scanner scanner = new Scanner("AdvLexem");
ArrayList<Object> arrayList = new ArrayList<Object>(scanner.lexems);
scanner.advScanning(arrayList);
Test 24: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
byte[] byteArray = new byte[9];
byteArray[0] = (byte)61;
byteArray[1] = (byte)61;
byteArray[2] = (byte)60;
byteArray[3] = (byte)61;
FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
Scanner scanner = new Scanner("AdvLexem");
ArrayList<Object> arrayList = new ArrayList<Object>(scanner.lexems);
// Undeclared exception!
try { 
  scanner.advScanning(arrayList);
  fail("Expecting exception: IndexOutOfBoundsException");

} catch(IndexOutOfBoundsException e) {
   //
   // Index: 4, Size: 4
   //
   verifyException("java.util.ArrayList", e);
}

Test 25: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
byte[] byteArray = new byte[9];
byteArray[0] = (byte)61;
byteArray[1] = (byte)61;
byteArray[2] = (byte)61;
byteArray[3] = (byte)61;
byteArray[4] = (byte)61;
byteArray[5] = (byte)47;
FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
Scanner scanner = new Scanner("AdvLexem");
ArrayList<Object> arrayList = new ArrayList<Object>(scanner.lexems);
scanner.advScanning(arrayList);
Test 26: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
byte[] byteArray = new byte[7];
FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
Scanner scanner = new Scanner("AdvLexem");
ArrayList<Boolean> arrayList = new ArrayList<Boolean>();
scanner.checkStructure(arrayList);
Test 27: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("AdvLexem");
FileSystemHandling.appendStringToFile(evoSuiteFile, "Not a statement\n   found: ");
Scanner scanner = new Scanner("AdvLexem");
ArrayList<Object> arrayList = new ArrayList<Object>();
scanner.advScanning(arrayList);

[MASTER] 05:50:27.875 [logback-1] WARN  TimeController - Already entered in phase: MINIMIZATION. This will mess up the timing calculations.
* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 16%
* Total number of goals: 817
* Number of covered goals: 131
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 13%
* Total number of goals: 1391
* Number of covered goals: 185
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 56%
* Total number of goals: 9
* Number of covered goals: 5
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 5
* Number of covered goals: 5
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 16%
* Total number of goals: 817
* Number of covered goals: 127
* Generated 28 tests with total length 155
* Resulting test suite's coverage: 40% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 05:50:28.744 [logback-1] WARN  TimeController - Already entered in phase: COVERAGE_ANALYSIS. This will mess up the timing calculations.
* Resulting test suite's mutation score: 2%
* Compiling and checking tests
Going to execute: removeTestsThatDoNotCompile
[MASTER] 05:50:34.883 [logback-1] WARN  TimeController - Already entered in phase: ASSERTION_GENERATION. This will mess up the timing calculations.
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 05:50:36.954 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar2581661158808871897.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:50:36.955 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2581661158808871897.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 05:50:37.022 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar2581661158808871897.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
[MASTER] 05:50:37.023 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2581661158808871897.jar
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 05:50:37.073 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar2581661158808871897.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:50:37.074 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2581661158808871897.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
[MASTER] 05:50:37.120 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar2581661158808871897.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:50:37.121 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2581661158808871897.jar
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 05:50:37.161 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar2581661158808871897.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:50:37.162 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2581661158808871897.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 05:50:37.216 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar2581661158808871897.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:50:37.219 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2581661158808871897.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 05:50:37.264 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar2581661158808871897.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:50:37.265 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2581661158808871897.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 05:50:37.316 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar2581661158808871897.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:50:37.317 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2581661158808871897.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 05:50:37.357 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar2581661158808871897.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:50:37.358 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2581661158808871897.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 05:50:37.414 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar2581661158808871897.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:50:37.415 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2581661158808871897.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 05:50:37.452 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar2581661158808871897.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:50:37.453 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2581661158808871897.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 05:50:37.496 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar2581661158808871897.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:50:37.497 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2581661158808871897.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
** Write a test suite: 4 called: 4 to improve: false
** Write a test suite: 5 called: 5 to improve: false
** Write a test suite: 6 called: 6 to improve: false
** Write a test suite: 7 called: 7 to improve: false
** Write a test suite: 8 called: 8 to improve: false
** Write a test suite: 9 called: 9 to improve: false
** Write a test suite: 10 called: 10 to improve: false
** Write a test suite: 11 called: 11 to improve: false
[MASTER] 05:50:37.754 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar2581661158808871897.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:50:37.755 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2581661158808871897.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
** Write a test suite: 4 called: 4 to improve: false
** Write a test suite: 5 called: 5 to improve: false
** Write a test suite: 6 called: 6 to improve: false
** Write a test suite: 7 called: 7 to improve: false
** Write a test suite: 8 called: 8 to improve: false
** Write a test suite: 9 called: 9 to improve: false
** Write a test suite: 10 called: 10 to improve: false
** Write a test suite: 11 called: 11 to improve: false
[MASTER] 05:50:37.981 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar2581661158808871897.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:50:37.982 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2581661158808871897.jar
* Writing tests to file
[MASTER] 05:50:37.983 [logback-1] WARN  TimeController - Already entered in phase: JUNIT_CHECK. This will mess up the timing calculations.
* Writing JUnit test case 'Scanner_ESTest' to evosuite-tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 2 called: 1 to improve: false
** Write a test suite: 3 called: 2 to improve: false
** Write a test suite: 4 called: 3 to improve: false
** Write a test suite: 5 called: 4 to improve: false
** Write a test suite: 6 called: 5 to improve: false
** Write a test suite: 7 called: 6 to improve: false
** Write a test suite: 8 called: 7 to improve: false
** Write a test suite: 10 called: 8 to improve: false
** Write a test suite: 11 called: 9 to improve: false
* Writing JUnit test case 'Scanner_Original_ESTest' to evosuite-tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
** Write a test suite: 4 called: 4 to improve: false
** Write a test suite: 5 called: 5 to improve: false
** Write a test suite: 6 called: 6 to improve: false
** Write a test suite: 7 called: 7 to improve: false
** Write a test suite: 8 called: 8 to improve: false
** Write a test suite: 9 called: 9 to improve: false
** Write a test suite: 10 called: 10 to improve: false
** Write a test suite: 11 called: 11 to improve: false
* Done!

* Computation finished
