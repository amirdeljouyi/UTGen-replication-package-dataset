* EvoSuite 1.2.0
* WARNING - Generating JUnit 5 tests with the option to use a separate classloader will result in not runnable tests. Set either -Dtest_format=JUNIT4 or -Duse_separate_classloader=false
* Going to generate test cases for class: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
* Starting Client-0
* Properties loaded from /home/roham/Results-Utestgen/dataset/SF110-ES-res/19_jmca/evosuite-files/evosuite.properties
* Connecting to master process on port 11586
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 19:23:25.448 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 19:23:25.451 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 19:23:25.452 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 19:23:25.455 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
* Test criteria:
  - Branch Coverage
  - Line Coverage
  - Method-Output Coverage
  - Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 4410
* Using seed 1709753003805
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%]* Initial Number of Goals in DynaMOSA = 713 / 4410
[Progress:=>                            5%] [Cov:==========>                        31%][Progress:=>                            6%] [Cov:=============>                     38%][Progress:=>                            6%] [Cov:=============>                     38%][Progress:==>                           7%] [Cov:==============>                    42%][Progress:===>                          12%] [Cov:==============>                    42%][Progress:===>                          13%] [Cov:===============>                   45%][Progress:===>                          13%] [Cov:================>                  46%][Progress:===>                          13%] [Cov:================>                  47%][Progress:====>                         14%] [Cov:================>                  47%][Progress:====>                         14%] [Cov:================>                  48%][Progress:====>                         15%] [Cov:=================>                 49%][Progress:====>                         15%] [Cov:==================>                52%][Progress:====>                         15%] [Cov:==================>                54%][Progress:====>                         16%] [Cov:==================>                54%][Progress:====>                         16%] [Cov:===================>               55%][Progress:=====>                        17%] [Cov:===================>               55%][Progress:=====>                        17%] [Cov:===================>               55%][Progress:=====>                        18%] [Cov:===================>               55%][Progress:=====>                        18%] [Cov:===================>               55%][Progress:=====>                        18%] [Cov:===================>               56%][Progress:=======>                      24%] [Cov:===================>               56%][Progress:=======>                      24%] [Cov:===================>               57%][Progress:=======>                      25%] [Cov:===================>               57%][Progress:=======>                      25%] [Cov:===================>               57%][Progress:==========>                   35%] [Cov:===================>               57%][Progress:==========>                   36%] [Cov:===================>               57%][Progress:==========>                   36%] [Cov:===================>               57%][Progress:==========>                   36%] [Cov:====================>              58%][Progress:===========>                  37%] [Cov:====================>              58%][Progress:============>                 42%] [Cov:====================>              58%][Progress:============>                 43%] [Cov:====================>              58%][Progress:============>                 43%] [Cov:====================>              58%][Progress:============>                 43%] [Cov:====================>              59%][Progress:=============>                44%] [Cov:====================>              59%][Progress:=============>                44%] [Cov:====================>              59%][Progress:=============>                44%] [Cov:====================>              59%][Progress:=============>                46%] [Cov:====================>              59%][Progress:=============>                46%] [Cov:====================>              59%][Progress:==============>               47%] [Cov:====================>              59%][Progress:==============>               47%] [Cov:====================>              59%][Progress:==============>               47%] [Cov:====================>              59%][Progress:==============>               48%] [Cov:====================>              59%][Progress:==============>               48%] [Cov:=====================>             60%][Progress:==============>               48%] [Cov:=====================>             60%][Progress:==============>               49%] [Cov:=====================>             60%][Progress:==============>               49%] [Cov:=====================>             60%][Progress:==============>               49%] [Cov:=====================>             60%][Progress:===============>              50%] [Cov:=====================>             61%][Progress:================>             55%] [Cov:=====================>             61%][Progress:================>             56%] [Cov:=====================>             61%][Progress:================>             56%] [Cov:=====================>             61%][Progress:================>             56%] [Cov:=====================>             61%][Progress:=================>            57%] [Cov:=====================>             61%][Progress:=================>            57%] [Cov:=====================>             61%][Progress:=================>            58%] [Cov:=====================>             61%][Progress:=================>            58%] [Cov:=====================>             61%][Progress:=================>            58%] [Cov:=====================>             61%][Progress:=================>            59%] [Cov:=====================>             61%][Progress:=================>            59%] [Cov:=====================>             61%][Progress:=================>            59%] [Cov:=====================>             62%][Progress:==================>           60%] [Cov:=====================>             62%][Progress:==================>           60%] [Cov:=====================>             62%][Progress:==================>           60%] [Cov:=====================>             62%][Progress:==================>           61%] [Cov:=====================>             62%][Progress:==================>           61%] [Cov:=====================>             62%][Progress:==================>           61%] [Cov:=====================>             62%][Progress:==================>           62%] [Cov:=====================>             62%][Progress:==================>           62%] [Cov:=====================>             62%][Progress:==================>           62%] [Cov:======================>            63%][Progress:==================>           63%] [Cov:======================>            63%][Progress:==================>           63%] [Cov:======================>            63%][Progress:==================>           63%] [Cov:======================>            63%][Progress:===================>          64%] [Cov:======================>            63%][Progress:===================>          64%] [Cov:======================>            63%][Progress:===================>          64%] [Cov:======================>            64%][Progress:===================>          64%] [Cov:======================>            64%][Progress:===================>          65%] [Cov:======================>            64%][Progress:===================>          65%] [Cov:======================>            64%][Progress:===================>          66%] [Cov:======================>            64%][Progress:===================>          66%] [Cov:======================>            64%][Progress:===================>          66%] [Cov:======================>            64%][Progress:====================>         67%] [Cov:======================>            64%][Progress:====================>         67%] [Cov:======================>            65%][Progress:====================>         67%] [Cov:======================>            65%][Progress:====================>         68%] [Cov:======================>            65%][Progress:====================>         68%] [Cov:======================>            65%][Progress:====================>         68%] [Cov:======================>            65%][Progress:====================>         69%] [Cov:======================>            65%][Progress:====================>         69%] [Cov:======================>            65%][Progress:======================>       74%] [Cov:======================>            65%][Progress:========================>     80%] [Cov:======================>            65%][Progress:========================>     80%] [Cov:======================>            65%][Progress:========================>     80%] [Cov:======================>            65%][Progress:========================>     81%] [Cov:=======================>           66%][Progress:========================>     81%] [Cov:=======================>           66%][Progress:========================>     81%] [Cov:=======================>           66%][Progress:==========================>   87%] [Cov:=======================>           66%][Progress:==========================>   87%] [Cov:=======================>           66%][Progress:==========================>   87%] [Cov:=======================>           66%][Progress:==========================>   87%] [Cov:=======================>           66%][Progress:==========================>   88%] [Cov:=======================>           66%][Progress:==========================>   88%] [Cov:=======================>           66%][Progress:==========================>   88%] [Cov:=======================>           66%][Progress:==========================>   88%] [Cov:=======================>           66%][Progress:==========================>   89%] [Cov:=======================>           67%][Progress:==========================>   89%] [Cov:=======================>           67%][Progress:==========================>   89%] [Cov:=======================>           67%][Progress:===========================>  90%] [Cov:=======================>           67%][Progress:===========================>  90%] [Cov:=======================>           67%][Progress:===========================>  90%] [Cov:=======================>           67%][Progress:===========================>  90%] [Cov:=======================>           67%][Progress:============================> 96%] [Cov:=======================>           67%][Progress:==============================100%] [Cov:=======================>           67%]
* Search finished after 102s and 112 generations, 78667 statements, best individual has fitness: 1637.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 63%
* Total number of goals: 1707
* Number of covered goals: 1081
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 58%
* Total number of goals: 981
* Number of covered goals: 572
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 50%
* Total number of goals: 4
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 11
* Number of covered goals: 11
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 63%
* Total number of goals: 1707
* Number of covered goals: 1079
* Generated 137 tests with total length 660
* Resulting test suite's coverage: 67% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 21%
* Compiling and checking tests
[MASTER] 19:27:22.803 [logback-1] WARN  JUnitAnalyzer - Found unstable test named testGetNextTokenThrowsError() -> java.lang.AssertionError: Exception was not thrown in com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager but in org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:39): org.opentest4j.AssertionFailedError: Expecting exception: Error
[MASTER] 19:30:29.178 [logback-1] WARN  JUnitAnalyzer - Found unstable test named testCreatesJavaParserTokenManagerAndCallsGetNextToken() -> org.opentest4j.AssertionFailedError: expected: <87> but was: <86>
[MASTER] 19:33:05.657 [logback-1] WARN  JUnitAnalyzer - Found unstable test named testCreatesJavaParserTokenManagerTakingJavaCharStream77() -> org.opentest4j.AssertionFailedError: expected: <87> but was: <86>
[MASTER] 19:33:05.657 [logback-1] WARN  JUnitAnalyzer - Found unstable test named testGetNextTokenThrowsErrorAndCreatesJavaParserTokenManagerTakingJavaCharStream3() -> java.lang.AssertionError: Exception was not thrown in com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager but in org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:39): org.opentest4j.AssertionFailedError: Expecting exception: Error
[MASTER] 19:33:09.682 [logback-1] WARN  JUnitAnalyzer - Found unstable test named testCreatesJavaParserTokenManagerTakingJavaCharStream36() -> org.opentest4j.AssertionFailedError: expected: <87> but was: <86>
[MASTER] 19:33:09.683 [logback-1] WARN  JUnitAnalyzer - Found unstable test named testGetNextTokenThrowsErrorAndCreatesJavaParserTokenManagerTakingJavaCharStream4() -> java.lang.AssertionError: Exception was not thrown in com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager but in org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:39): org.opentest4j.AssertionFailedError: Expecting exception: Error
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 1
* Writing tests to file
* Writing JUnit test case 'JavaParserTokenManager_ESTest' to evosuite-tests
* Done!

* Computation finished
