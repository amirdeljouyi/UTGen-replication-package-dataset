* EvoSuite 1.0.0-SNAPSHOT
* Going to generate test cases for class: com.soops.CEN4010.JMCA.JParser.JavaCharStream
* Starting Client-0
* Properties loaded from /home/roham/Results-Utestgen/dataset/SF110-new-res/19_jmca/evosuite-files/evosuite.properties
* Connecting to master process on port 14993
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class com.soops.CEN4010.JMCA.JParser.JavaCharStream
* Test criteria:
  - Branch Coverage
  - Line Coverage
  - Method-Output Coverage
  - Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 738
* Using seed 1710175222689
[Progress:>                             0%] [Cov:>                                  0%]* Starting evolution
* Initial Number of Goals in DynaMOSA = 297 / 738
[Progress:>                             1%] [Cov:===================>               55%][Progress:>                             1%] [Cov:===================>               57%][Progress:>                             2%] [Cov:=====================>             60%][Progress:>                             2%] [Cov:=====================>             61%][Progress:==>                           8%] [Cov:======================>            63%][Progress:==>                           8%] [Cov:=======================>           66%][Progress:=====>                        18%] [Cov:=======================>           67%][Progress:======>                       23%] [Cov:=======================>           68%][Progress:======>                       23%] [Cov:========================>          69%][Progress:=======>                      24%] [Cov:========================>          70%][Progress:=======>                      24%] [Cov:=========================>         73%][Progress:========>                     29%] [Cov:=========================>         74%][Progress:========>                     29%] [Cov:==========================>        76%][Progress:========>                     29%] [Cov:===========================>       78%][Progress:==========>                   34%] [Cov:===========================>       78%][Progress:============>                 40%] [Cov:===========================>       79%][Progress:============>                 40%] [Cov:============================>      80%][Progress:============>                 40%] [Cov:============================>      80%][Progress:============>                 40%] [Cov:============================>      80%][Progress:============>                 40%] [Cov:============================>      80%][Progress:============>                 40%] [Cov:============================>      81%][Progress:=============>                45%] [Cov:============================>      81%][Progress:=============>                45%] [Cov:============================>      82%][Progress:=============>                45%] [Cov:============================>      82%][Progress:=============>                45%] [Cov:============================>      82%][Progress:===============>              51%] [Cov:=============================>     84%][Progress:===============>              51%] [Cov:=============================>     84%][Progress:===============>              51%] [Cov:=============================>     84%][Progress:================>             56%] [Cov:=============================>     84%][Progress:================>             56%] [Cov:=============================>     85%][Progress:================>             56%] [Cov:=============================>     85%][Progress:================>             56%] [Cov:==============================>    86%][Progress:================>             56%] [Cov:==============================>    86%][Progress:================>             56%] [Cov:==============================>    87%][Progress:================>             56%] [Cov:==============================>    87%][Progress:================>             56%] [Cov:==============================>    87%][Progress:==================>           62%] [Cov:==============================>    87%][Progress:====================>         67%] [Cov:==============================>    87%][Progress:=====================>        72%] [Cov:==============================>    87%][Progress:=======================>      77%] [Cov:==============================>    87%][Progress:=======================>      77%] [Cov:==============================>    88%][Progress:=======================>      77%] [Cov:==============================>    88%][Progress:========================>     83%] [Cov:==============================>    88%][Progress:========================>     83%] [Cov:==============================>    88%][Progress:========================>     83%] [Cov:==============================>    88%][Progress:==========================>   88%] [Cov:==============================>    88%][Progress:==========================>   88%] [Cov:==============================>    88%][Progress:==========================>   88%] [Cov:==============================>    88%][Progress:==========================>   88%] [Cov:==============================>    88%][Progress:==========================>   88%] [Cov:==============================>    88%][Progress:==========================>   88%] [Cov:===============================>   90%][Progress:==========================>   88%] [Cov:===============================>   90%][Progress:==========================>   88%] [Cov:===============================>   90%][Progress:==========================>   88%] [Cov:===============================>   90%][Progress:==========================>   88%] [Cov:===============================>   90%][Progress:==========================>   89%] [Cov:===============================>   90%][Progress:==========================>   89%] [Cov:===============================>   90%][Progress:==========================>   89%] [Cov:===============================>   90%][Progress:==========================>   89%] [Cov:===============================>   90%][Progress:============================> 94%] [Cov:===============================>   91%][Progress:============================> 94%] [Cov:===============================>   91%][Progress:============================> 94%] [Cov:===============================>   91%][Progress:=============================>99%] [Cov:===============================>   91%][Progress:=============================>99%] [Cov:===============================>   91%][Progress:==============================100%] [Cov:================================>  92%][Progress:==============================100%] [Cov:================================>  92%][Progress:==============================100%] [Cov:================================>  92%][Progress:==============================100%] [Cov:================================>  92%][Progress:==============================100%] [Cov:================================>  92%][Progress:==============================100%] [Cov:================================>  92%][Progress:==============================100%] [Cov:================================>  92%][Progress:==============================100%] [Cov:================================>  92%][Progress:==============================100%] [Cov:================================>  92%][Progress:==============================100%] [Cov:================================>  92%][Progress:==============================100%] [Cov:================================>  92%]
* Search finished after 102s and 74 generations, 37827 statements, best individual has fitness: 65.0
* Generated before the refinement 110 tests with total length 290
statement is: org.evosuite.testcase.statements.ArrayStatement@3f3e3df3 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[8]
statement is: java.io.ByteArrayInputStream([B)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.ByteArrayInputStream
statement code is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 1493, (-1))
statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("pWtrdn]pAxbUP")
statement is: ReInit(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: javaCharStream.ReInit((Reader) arg0)
test data is: byte[] byteArray = new byte[8];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, 1493, (-1));
StringReader stringReader = new StringReader("pWtrdn]pAxbUP");
javaCharStream.ReInit((Reader) stringReader);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        byte[] byteArray = new byte[]{ 2, 4, 6, 8 };
        ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
        JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, 1493, -1);
        StringReader stringReader = new StringReader("pWtrdn]pAxbUP");
        javaCharStream.ReInit(((Reader) (stringReader)));
    }
}
statement is: byte[] byteArray = new byte[]{ 2, 4, 6, 8 }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: byte[] byteArray = new byte[8] isAssignment: false Array: new byte[]{ 2, 4, 6, 8 } Elements: [2, 4, 6, 8]
lengths: [8] []
statement is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: java.io.ByteArrayInputStream([B)V
statement is: JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, 1493, -1), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: StringReader stringReader = new StringReader("pWtrdn]pAxbUP"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.ReInit(((Reader) (stringReader))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.ReInit(((Reader) (stringReader))) target is: javaCharStream method is: ReInit(Reader)
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;II)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 1
Matched Method is: ReInit(Ljava/io/Reader;)V
TestCase is: int _int = 1493;
JavaCharStream javaCharStream = new JavaCharStream((InputStream) _int, 1493, (-1));
String string = "pWtrdn]pAxbUP";
StringReader stringReader = new StringReader(string);
((JavaCharStream) string).ReInit((Reader) stringReader);

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader(" 7^,ht^y.r[")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 796, 2452)
statement is: getBeginColumn()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int beginColumn = javaCharStream.getBeginColumn()
test data is: StringReader stringReader = new StringReader(" 7^,ht^y.r[");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 796, 2452);
javaCharStream.getBeginColumn();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("The quick brown fox jumps over the lazy dog.");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, 10, 34);
        javaCharStream.getBeginColumn();
    }
}
statement is: StringReader stringReader = new StringReader("The quick brown fox jumps over the lazy dog."), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, 10, 34), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.getBeginColumn(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.getBeginColumn() target is: javaCharStream method is: getBeginColumn()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 4
Matched Method is: getBeginColumn()I
TestCase is: String string = "The quick brown fox jumps over the lazy dog.";
StringReader stringReader = new StringReader(string);
int _int = 10;
int _int = 34;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int);
((JavaCharStream) stringReader).getBeginColumn();

statement is: org.evosuite.testcase.statements.ArrayStatement@4ce4a55 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[0]
statement is: java.io.ByteArrayInputStream([B)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.ByteArrayInputStream
statement code is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(arg0)
statement is: java.io.SequenceInputStream(Ljava/io/InputStream;Ljava/io/InputStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.SequenceInputStream
statement code is: SequenceInputStream sequenceInputStream = new SequenceInputStream(arg1, arg1)
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;III)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 0, 0, 0)
statement is: ReInit(Ljava/io/InputStream;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: javaCharStream.ReInit((InputStream) arg0)
test data is: byte[] byteArray = new byte[0];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
SequenceInputStream sequenceInputStream = new SequenceInputStream(byteArrayInputStream, byteArrayInputStream);
JavaCharStream javaCharStream = new JavaCharStream(sequenceInputStream, 0, 0, 0);
javaCharStream.ReInit((InputStream) sequenceInputStream);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data for byteArray
        byte[] byteArray = new byte[]{ ((byte) (0xca)), ((byte) (0xfe)), ((byte) (0xba)), ((byte) (0xbe)) };
        // Improved test data for byteArrayInputStream
        ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
        // Improved test data for sequenceInputStream
        SequenceInputStream sequenceInputStream = new SequenceInputStream(byteArrayInputStream, byteArrayInputStream);
        // Improved test data for javaCharStream
        JavaCharStream javaCharStream = new JavaCharStream(sequenceInputStream, 0, 0, 0);
        javaCharStream.ReInit(((InputStream) (sequenceInputStream)));
    }
}
statement is: // Improved test data for byteArray
byte[] byteArray = new byte[]{ ((byte) (0xca)), ((byte) (0xfe)), ((byte) (0xba)), ((byte) (0xbe)) }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: byte[] byteArray = new byte[0] isAssignment: false Array: new byte[]{ ((byte) (0xca)), ((byte) (0xfe)), ((byte) (0xba)), ((byte) (0xbe)) } Elements: [((byte) (0xca)), ((byte) (0xfe)), ((byte) (0xba)), ((byte) (0xbe))]
lengths: [0] []
statement is: // Improved test data for byteArrayInputStream
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: java.io.ByteArrayInputStream([B)V
statement is: // Improved test data for sequenceInputStream
SequenceInputStream sequenceInputStream = new SequenceInputStream(byteArrayInputStream, byteArrayInputStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: java.io.SequenceInputStream(Ljava/io/InputStream;Ljava/io/InputStream;)V
statement is: // Improved test data for javaCharStream
JavaCharStream javaCharStream = new JavaCharStream(sequenceInputStream, 0, 0, 0), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.ReInit(((InputStream) (sequenceInputStream))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.ReInit(((InputStream) (sequenceInputStream))) target is: javaCharStream method is: ReInit(InputStream)
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;III)V callee: VariableReference: Statement 3, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 3
Matched Method is: ReInit(Ljava/io/InputStream;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
TestCase is: int _int = 0;
int _int = 0;
int _int = 0;
JavaCharStream javaCharStream = new JavaCharStream((InputStream) _int, _int, _int, 0);
SequenceInputStream sequenceInputStream = null;
javaCharStream.ReInit((InputStream) sequenceInputStream);

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("C7|WymBRD.75\"")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: ReInit(Ljava/io/Reader;II)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: javaCharStream.ReInit((Reader) arg0, (-2691), 1)
test data is: StringReader stringReader = new StringReader("C7|WymBRD.75\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.ReInit((Reader) stringReader, (-2691), 1);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("C7|WymBRD.75\"");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        javaCharStream.ReInit(((Reader) (stringReader)), 2691, 1);
    }
}
statement is: StringReader stringReader = new StringReader("C7|WymBRD.75\""), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.ReInit(((Reader) (stringReader)), 2691, 1), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.ReInit(((Reader) (stringReader)), 2691, 1) target is: javaCharStream method is: ReInit(Reader,int,int)
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 2
Matched Method is: ReInit(Ljava/io/Reader;II)V
TestCase is: String string = "C7|WymBRD.75\"";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
int _int = 2691;
int _int = 1;
((JavaCharStream) stringReader).ReInit((Reader) stringReader, _int, _int);

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("([k]")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: getBeginLine()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int beginLine = javaCharStream.getBeginLine()
test data is: StringReader stringReader = new StringReader("([k]");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.getBeginLine();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data
        StringReader stringReader = new StringReader("([k]");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        int expectedBeginLine = 1;
        int actualBeginLine = javaCharStream.getBeginLine();
        assertEquals(expectedBeginLine, actualBeginLine);
    }
}
statement is: // Improved test data
StringReader stringReader = new StringReader("([k]"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: int expectedBeginLine = 1, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: int actualBeginLine = javaCharStream.getBeginLine(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.getBeginLine() target is: javaCharStream method is: getBeginLine()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 2
Matched Method is: getBeginLine()I
statement is: assertEquals(expectedBeginLine, actualBeginLine), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(expectedBeginLine, actualBeginLine) target is:  method is: assertEquals(int,int)
* this is vulnerable: int _int = 1
TestCase is: String string = "([k]";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
int _int = 1;
((JavaCharStream) stringReader).getBeginLine();

statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('0')
test data is: JavaCharStream.hexval('0');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream.hexval('a');
    }
}
statement is: CharStream.hexval('a'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: CharStream.hexval('a') target is: CharStream method is: hexval(char)
Matched Method is: hexval(C)I
TestCase is: char _char = 'a';
JavaCharStream.hexval(_char);

statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('7')
test data is: JavaCharStream.hexval('7');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream.hexval('A');// Tests a hexadecimal value with a capital letter

        JavaCharStream.hexval('a');// Tests a hexadecimal value with a lowercase letter

        JavaCharStream.hexval('0');// Tests a hexadecimal value with a leading zer }}

    }
}
statement is: CharStream.hexval('A')// Tests a hexadecimal value with a capital letter
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: CharStream.hexval('A')// Tests a hexadecimal value with a capital letter
 target is: CharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('a')// Tests a hexadecimal value with a lowercase letter
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('a')// Tests a hexadecimal value with a lowercase letter
 target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('0')// Tests a hexadecimal value with a leading zer }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('0')// Tests a hexadecimal value with a leading zer }}
 target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
TestCase is: char _char = 'A';
JavaCharStream.hexval(_char);
char _char = 'a';
JavaCharStream.hexval(_char);
char _char = '0';
JavaCharStream.hexval(_char);

statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('1')
test data is: JavaCharStream.hexval('1');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream.hexval('a');// returns "61"

        JavaCharStream.hexval('A');// returns "41"

        JavaCharStream.hexval('$');// returns "24"

        JavaCharStream.hexval('@');// returns "40 }}

    }
}
statement is: CharStream.hexval('a')// returns "61"
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: CharStream.hexval('a')// returns "61"
 target is: CharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('A')// returns "41"
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('A')// returns "41"
 target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('$')// returns "24"
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('$')// returns "24"
 target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('@')// returns "40 }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('@')// returns "40 }}
 target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
TestCase is: char _char = 'a';
JavaCharStream.hexval(_char);
char _char = 'A';
JavaCharStream.hexval(_char);
char _char = '$';
JavaCharStream.hexval(_char);
char _char = '@';
JavaCharStream.hexval(_char);

statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('2')
test data is: JavaCharStream.hexval('2');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
    }
}
statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('3')
test data is: JavaCharStream.hexval('3');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data
        // 18 in decimal
        // -1034793651 in decimal
        // 3 in decimal }}
    }
}
statement is: // Improved test data, class spoon.support.reflect.code.CtCommentImpl
statement is: // 18 in decimal, class spoon.support.reflect.code.CtCommentImpl
statement is: // -1034793651 in decimal, class spoon.support.reflect.code.CtCommentImpl
statement is: // 3 in decimal }}, class spoon.support.reflect.code.CtCommentImpl
statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('4')
test data is: JavaCharStream.hexval('4');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream.hexval('A');// 'A' is a hexadecimal digit

        JavaCharStream.hexval('a');// 'a' is a hexadecimal digit

        JavaCharStream.hexval('F');// 'F' is a hexadecimal digit

        JavaCharStream.hexval('f');// 'f' is a hexadecimal digi }}

    }
}
statement is: CharStream.hexval('A')// 'A' is a hexadecimal digit
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: CharStream.hexval('A')// 'A' is a hexadecimal digit
 target is: CharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('a')// 'a' is a hexadecimal digit
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('a')// 'a' is a hexadecimal digit
 target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('F')// 'F' is a hexadecimal digit
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('F')// 'F' is a hexadecimal digit
 target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('f')// 'f' is a hexadecimal digi }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('f')// 'f' is a hexadecimal digi }}
 target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
TestCase is: char _char = 'A';
JavaCharStream.hexval(_char);
char _char = 'a';
JavaCharStream.hexval(_char);
char _char = 'F';
JavaCharStream.hexval(_char);
char _char = 'f';
JavaCharStream.hexval(_char);

statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('5')
test data is: JavaCharStream.hexval('5');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
    }
}
statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('6')
test data is: JavaCharStream.hexval('6');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream.hexval('A');// Convert the letter A to its hexadecimal representatio }}

    }
}
statement is: CharStream.hexval('A')// Convert the letter A to its hexadecimal representatio }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: CharStream.hexval('A')// Convert the letter A to its hexadecimal representatio }}
 target is: CharStream method is: hexval(char)
Matched Method is: hexval(C)I
TestCase is: char _char = 'A';
JavaCharStream.hexval(_char);

statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('8')
test data is: JavaCharStream.hexval('8');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream.hexval(0x8);
    }
}
statement is: CharStream.hexval(0x8), class spoon.support.reflect.code.CtInvocationImpl
invocation is: CharStream.hexval(0x8) target is: CharStream method is: hexval(int)
Matched Method is: hexval(C)I
TestCase is: int _int = 8;
JavaCharStream.hexval((char) _int);

statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('9')
test data is: JavaCharStream.hexval('9');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data
        int[] hexVals = new int[]{ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 };
        String[] hexChars = new String[]{ "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "a", "b", "c", "d", "e", "f" };
        for (int i = 0; i < hexVals.length; i++) {
            assertEquals(hexVals[i], JavaCharStream.hexval(hexChars[i].charAt(0)));
        }
    }
}
statement is: // Improved test data
int[] hexVals = new int[]{ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
statement is: String[] hexChars = new String[]{ "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "a", "b", "c", "d", "e", "f" }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
statement is: for (int i = 0; i < hexVals.length; i++) {
    assertEquals(hexVals[i], JavaCharStream.hexval(hexChars[i].charAt(0)));
}, class spoon.support.reflect.code.CtForImpl
statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval(':')
test data is: JavaCharStream.hexval(':');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream.hexval(':');
    }
}
statement is: CharStream.hexval(':'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: CharStream.hexval(':') target is: CharStream method is: hexval(char)
Matched Method is: hexval(C)I
TestCase is: char _char = ':';
JavaCharStream.hexval(_char);

statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval(';')
test data is: JavaCharStream.hexval(';');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream.hexval(';');// returns 59

        JavaCharStream.hexval('F');// returns 15

        JavaCharStream.hexval('z');// returns 2 }}

    }
}
statement is: CharStream.hexval(';')// returns 59
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: CharStream.hexval(';')// returns 59
 target is: CharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('F')// returns 15
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('F')// returns 15
 target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('z')// returns 2 }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('z')// returns 2 }}
 target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
TestCase is: char _char = ';';
JavaCharStream.hexval(_char);
char _char = 'F';
JavaCharStream.hexval(_char);
char _char = 'z';
JavaCharStream.hexval(_char);

statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('<')
test data is: JavaCharStream.hexval('<');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream.hexval('&');
    }
}
statement is: CharStream.hexval('&'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: CharStream.hexval('&') target is: CharStream method is: hexval(char)
Matched Method is: hexval(C)I
TestCase is: char _char = '&';
JavaCharStream.hexval(_char);

statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('=')
test data is: JavaCharStream.hexval('=');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream.hexval('F');
    }
}
statement is: CharStream.hexval('F'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: CharStream.hexval('F') target is: CharStream method is: hexval(char)
Matched Method is: hexval(C)I
TestCase is: char _char = 'F';
JavaCharStream.hexval(_char);

statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('>')
test data is: JavaCharStream.hexval('>');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream.hexval('a');
    }
}
statement is: CharStream.hexval('a'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: CharStream.hexval('a') target is: CharStream method is: hexval(char)
Matched Method is: hexval(C)I
TestCase is: char _char = 'a';
JavaCharStream.hexval(_char);

statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('?')
test data is: JavaCharStream.hexval('?');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream.hexval('A');
    }
}
statement is: CharStream.hexval('A'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: CharStream.hexval('A') target is: CharStream method is: hexval(char)
Matched Method is: hexval(C)I
TestCase is: char _char = 'A';
JavaCharStream.hexval(_char);

statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('@')
test data is: JavaCharStream.hexval('@');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream.hexval('A');
    }
}
statement is: CharStream.hexval('A'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: CharStream.hexval('A') target is: CharStream method is: hexval(char)
Matched Method is: hexval(C)I
TestCase is: char _char = 'A';
JavaCharStream.hexval(_char);

statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('A')
test data is: JavaCharStream.hexval('A');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream.hexval('1');
    }
}
statement is: CharStream.hexval('1'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: CharStream.hexval('1') target is: CharStream method is: hexval(char)
Matched Method is: hexval(C)I
TestCase is: char _char = '1';
JavaCharStream.hexval(_char);

statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('B')
test data is: JavaCharStream.hexval('B');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        return Integer.parseInt("0xAF", 16);
    }
}
statement is: return Integer.parseInt("0xAF", 16), class spoon.support.reflect.code.CtReturnImpl
statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('C')
test data is: JavaCharStream.hexval('C');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data
        int c = 0x1234;// A hexadecimal value

        char ch = 'a';// A character literal

        String str = "hello";// A string literal

        JavaCharStream.hexval(c);
        JavaCharStream.hexval(ch);
        JavaCharStream.hexval(str);
    }
}
statement is: // Improved test data
int c = 0x1234// A hexadecimal value
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: char ch = 'a'// A character literal
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String str = "hello"// A string literal
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: JavaCharStream.hexval(c), class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval(c) target is: JavaCharStream method is: hexval(int)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval(ch), class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval(ch) target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval(str), class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval(str) target is: JavaCharStream method is: hexval(java.lang.String)
Matched Method is: hexval(C)I
TestCase is: int _int = 4660;
char _char = 'a';
String string = "hello";
JavaCharStream.hexval((char) _int);
JavaCharStream.hexval(_char);
JavaCharStream.hexval((char) string);

statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('D')
test data is: JavaCharStream.hexval('D');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream.hexval('0');
        JavaCharStream.hexval('a');
        JavaCharStream.hexval('A');
        JavaCharStream.hexval('f');
        JavaCharStream.hexval('F');
        JavaCharStream.hexval('x');
    }
}
statement is: CharStream.hexval('0'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: CharStream.hexval('0') target is: CharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('a'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('a') target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('A'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('A') target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('f'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('f') target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('F'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('F') target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('x'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('x') target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
TestCase is: char _char = '0';
JavaCharStream.hexval(_char);
char _char = 'a';
JavaCharStream.hexval(_char);
char _char = 'A';
JavaCharStream.hexval(_char);
char _char = 'f';
JavaCharStream.hexval(_char);
char _char = 'F';
JavaCharStream.hexval(_char);
char _char = 'x';
JavaCharStream.hexval(_char);

statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('E')
test data is: JavaCharStream.hexval('E');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream.hexval('1');
    }
}
statement is: CharStream.hexval('1'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: CharStream.hexval('1') target is: CharStream method is: hexval(char)
Matched Method is: hexval(C)I
TestCase is: char _char = '1';
JavaCharStream.hexval(_char);

statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('F')
test data is: JavaCharStream.hexval('F');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream.hexval('A');
    }
}
statement is: CharStream.hexval('A'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: CharStream.hexval('A') target is: CharStream method is: hexval(char)
Matched Method is: hexval(C)I
TestCase is: char _char = 'A';
JavaCharStream.hexval(_char);

statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('G')
test data is: JavaCharStream.hexval('G');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream.hexval('A');
    }
}
statement is: CharStream.hexval('A'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: CharStream.hexval('A') target is: CharStream method is: hexval(char)
Matched Method is: hexval(C)I
TestCase is: char _char = 'A';
JavaCharStream.hexval(_char);

statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('H')
test data is: JavaCharStream.hexval('H');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream.hexval('H');
    }
}
statement is: CharStream.hexval('H'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: CharStream.hexval('H') target is: CharStream method is: hexval(char)
Matched Method is: hexval(C)I
TestCase is: char _char = 'H';
JavaCharStream.hexval(_char);

statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('I')
test data is: JavaCharStream.hexval('I');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream.hexval('A');// hexval of 'A' is 65

        JavaCharStream.hexval('F');// hexval of 'F' is 70

        JavaCharStream.hexval('a');// hexval of 'a' is 97

        JavaCharStream.hexval('f');// hexval of 'f' is 10 }}

    }
}
statement is: CharStream.hexval('A')// hexval of 'A' is 65
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: CharStream.hexval('A')// hexval of 'A' is 65
 target is: CharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('F')// hexval of 'F' is 70
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('F')// hexval of 'F' is 70
 target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('a')// hexval of 'a' is 97
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('a')// hexval of 'a' is 97
 target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('f')// hexval of 'f' is 10 }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('f')// hexval of 'f' is 10 }}
 target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
TestCase is: char _char = 'A';
JavaCharStream.hexval(_char);
char _char = 'F';
JavaCharStream.hexval(_char);
char _char = 'a';
JavaCharStream.hexval(_char);
char _char = 'f';
JavaCharStream.hexval(_char);

statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('J')
test data is: JavaCharStream.hexval('J');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream.hexval('B');
    }
}
statement is: CharStream.hexval('B'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: CharStream.hexval('B') target is: CharStream method is: hexval(char)
Matched Method is: hexval(C)I
TestCase is: char _char = 'B';
JavaCharStream.hexval(_char);

statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('K')
test data is: JavaCharStream.hexval('K');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream.hexval('A');// 10

        JavaCharStream.hexval('F');// 15

        JavaCharStream.hexval('a');// 10

        JavaCharStream.hexval('f');// 15

        JavaCharStream.hexval('0');// 0

        JavaCharStream.hexval('9');// }}

    }
}
statement is: CharStream.hexval('A')// 10
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: CharStream.hexval('A')// 10
 target is: CharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('F')// 15
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('F')// 15
 target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('a')// 10
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('a')// 10
 target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('f')// 15
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('f')// 15
 target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('0')// 0
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('0')// 0
 target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('9')// }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('9')// }}
 target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
TestCase is: char _char = 'A';
JavaCharStream.hexval(_char);
char _char = 'F';
JavaCharStream.hexval(_char);
char _char = 'a';
JavaCharStream.hexval(_char);
char _char = 'f';
JavaCharStream.hexval(_char);
char _char = '0';
JavaCharStream.hexval(_char);
char _char = '9';
JavaCharStream.hexval(_char);

statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('L')
test data is: JavaCharStream.hexval('L');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream.hexval('A');
    }
}
statement is: CharStream.hexval('A'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: CharStream.hexval('A') target is: CharStream method is: hexval(char)
Matched Method is: hexval(C)I
TestCase is: char _char = 'A';
JavaCharStream.hexval(_char);

statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('M')
test data is: JavaCharStream.hexval('M');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream.hexval('F');
    }
}
statement is: CharStream.hexval('F'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: CharStream.hexval('F') target is: CharStream method is: hexval(char)
Matched Method is: hexval(C)I
TestCase is: char _char = 'F';
JavaCharStream.hexval(_char);

statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('N')
test data is: JavaCharStream.hexval('N');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
    }
}
statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('O')
test data is: JavaCharStream.hexval('O');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
    }
}
statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('P')
test data is: JavaCharStream.hexval('P');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data for JavaCharStream.hexval() method
        int hexVal = 0x20;// Hexadecimal value of the character 'P'

        String hexStr = "20";// String representation of the hexadecimal value

        JavaCharStream jcs = new JavaCharStream();
        jcs.hexval(hexVal);// Test the method with a hexadecimal value as an integer

        jcs.hexval(hexStr);// Test the method with a hexadecimal value as a string }}

    }
}
statement is: // Improved test data for JavaCharStream.hexval() method
int hexVal = 0x20// Hexadecimal value of the character 'P'
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String hexStr = "20"// String representation of the hexadecimal value
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: JavaCharStream jcs = new JavaCharStream(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: jcs.hexval(hexVal)// Test the method with a hexadecimal value as an integer
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: jcs.hexval(hexVal)// Test the method with a hexadecimal value as an integer
 target is: jcs method is: hexval(int)
Matched Method is: hexval(C)I
statement is: jcs.hexval(hexStr)// Test the method with a hexadecimal value as a string }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: jcs.hexval(hexStr)// Test the method with a hexadecimal value as a string }}
 target is: jcs method is: hexval(java.lang.String)
Matched Method is: hexval(C)I
TestCase is: int _int = 32;
String string = "20";
JavaCharStream.hexval((char) _int);
JavaCharStream.hexval((char) string);

statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('Q')
test data is: JavaCharStream.hexval('Q');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream.hexval('a');
    }
}
statement is: CharStream.hexval('a'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: CharStream.hexval('a') target is: CharStream method is: hexval(char)
Matched Method is: hexval(C)I
TestCase is: char _char = 'a';
JavaCharStream.hexval(_char);

statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('R')
test data is: JavaCharStream.hexval('R');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        int num = 42;// Changed from 123 to a more arbitrary value

        String str = "a string";
        char c = 'Z';// Changed from 'A' to a random character that is not a letter or digit

        double d = 3.14159;// Changed from 3.14 to a more precise value

        float f = 3.14F;
        boolean b = false;// Changed from true to a different boolean value }}

    }
}
statement is: int num = 42// Changed from 123 to a more arbitrary value
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String str = "a string", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: char c = 'Z'// Changed from 'A' to a random character that is not a letter or digit
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: double d = 3.14159// Changed from 3.14 to a more precise value
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: float f = 3.14F, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: boolean b = false// Changed from true to a different boolean value }}
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
* this is vulnerable: int _int = 42
* this is vulnerable: String string = "a string"
* this is vulnerable: char _char = 'Z'
* this is vulnerable: double _double = 3.14159
* this is vulnerable: float _float = 3.14F
* this is vulnerable: boolean _boolean = false
TestCase is: int _int = 42;
String string = "a string";
char _char = 'Z';
double _double = 3.14159;
float _float = 3.14F;
boolean _boolean = false;

statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('S')
test data is: JavaCharStream.hexval('S');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Test case 1: Checking if hexval() method returns correct value for 'S' character
        assertEquals(JavaCharStream.hexval('S'), 0x53);
        // Test case 2: Checking if hexval() method returns correct value for 'A' character
        assertEquals(JavaCharStream.hexval('A'), 0x41);
    }
}
statement is: // Test case 1: Checking if hexval() method returns correct value for 'S' character
assertEquals(JavaCharStream.hexval('S'), 0x53), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Test case 1: Checking if hexval() method returns correct value for 'S' character
assertEquals(JavaCharStream.hexval('S'), 0x53) target is:  method is: assertEquals(<unknown>,int)
statement is: // Test case 2: Checking if hexval() method returns correct value for 'A' character
assertEquals(JavaCharStream.hexval('A'), 0x41), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Test case 2: Checking if hexval() method returns correct value for 'A' character
assertEquals(JavaCharStream.hexval('A'), 0x41) target is:  method is: assertEquals(<unknown>,int)
statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('T')
test data is: JavaCharStream.hexval('T');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream.hexval('G');
    }
}
statement is: CharStream.hexval('G'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: CharStream.hexval('G') target is: CharStream method is: hexval(char)
Matched Method is: hexval(C)I
TestCase is: char _char = 'G';
JavaCharStream.hexval(_char);

statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('U')
test data is: JavaCharStream.hexval('U');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
    }
}
statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('V')
test data is: JavaCharStream.hexval('V');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream.hexval('A');
        JavaCharStream.hexval('F');
        JavaCharStream.hexval('1');
        JavaCharStream.hexval('9');
        JavaCharStream.hexval('a');
        JavaCharStream.hexval('f');
        JavaCharStream.hexval('0');
        JavaCharStream.hexval('8');
    }
}
statement is: CharStream.hexval('A'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: CharStream.hexval('A') target is: CharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('F'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('F') target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('1'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('1') target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('9'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('9') target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('a'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('a') target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('f'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('f') target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('0'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('0') target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('8'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('8') target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
TestCase is: char _char = 'A';
JavaCharStream.hexval(_char);
char _char = 'F';
JavaCharStream.hexval(_char);
char _char = '1';
JavaCharStream.hexval(_char);
char _char = '9';
JavaCharStream.hexval(_char);
char _char = 'a';
JavaCharStream.hexval(_char);
char _char = 'f';
JavaCharStream.hexval(_char);
char _char = '0';
JavaCharStream.hexval(_char);
char _char = '8';
JavaCharStream.hexval(_char);

statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('W')
test data is: JavaCharStream.hexval('W');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
    }

    public static void main(String[] args) {
        JavaCharStream stream = new JavaCharStream("W");
        int value = stream.hexval();
        System.out.println(value);
    }
}
statement is: JavaCharStream stream = new JavaCharStream("W"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: int value = stream.hexval(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: stream.hexval() target is: stream method is: hexval()
statement is: System.out.println(value), class spoon.support.reflect.code.CtInvocationImpl
invocation is: System.out.println(value) target is: System.out method is: println(int)
statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('X')
test data is: JavaCharStream.hexval('X');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream.hexval('π');
    }
}
statement is: CharStream.hexval('π'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: CharStream.hexval('π') target is: CharStream method is: hexval(char)
Matched Method is: hexval(C)I
TestCase is: char _char = '\u03C0';
JavaCharStream.hexval(_char);

statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('Y')
test data is: JavaCharStream.hexval('Y');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream.hexval('A');// Should return 10

        JavaCharStream.hexval('B');// Should return 11

        JavaCharStream.hexval('C');// Should return 12

        JavaCharStream.hexval('D');// Should return 13

        JavaCharStream.hexval('E');// Should return 1 }}

    }
}
statement is: CharStream.hexval('A')// Should return 10
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: CharStream.hexval('A')// Should return 10
 target is: CharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('B')// Should return 11
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('B')// Should return 11
 target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('C')// Should return 12
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('C')// Should return 12
 target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('D')// Should return 13
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('D')// Should return 13
 target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('E')// Should return 1 }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('E')// Should return 1 }}
 target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
TestCase is: char _char = 'A';
JavaCharStream.hexval(_char);
char _char = 'B';
JavaCharStream.hexval(_char);
char _char = 'C';
JavaCharStream.hexval(_char);
char _char = 'D';
JavaCharStream.hexval(_char);
char _char = 'E';
JavaCharStream.hexval(_char);

statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('Z')
test data is: JavaCharStream.hexval('Z');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream.hexval('a', 'b', 'c');
    }
}
statement is: CharStream.hexval('a', 'b', 'c'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: CharStream.hexval('a', 'b', 'c') target is: CharStream method is: hexval(char,char,char)
statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('[')
test data is: JavaCharStream.hexval('[');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Test data for JavaCharStream.hexval() method
        // Input: '{' - a curly brace character
        // Expected output: 123 (the ASCII value of the curly brace character) }}
    }
}
statement is: // Test data for JavaCharStream.hexval() method, class spoon.support.reflect.code.CtCommentImpl
statement is: // Input: '{' - a curly brace character, class spoon.support.reflect.code.CtCommentImpl
statement is: // Expected output: 123 (the ASCII value of the curly brace character) }}, class spoon.support.reflect.code.CtCommentImpl
statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('\\')
test data is: JavaCharStream.hexval('\\');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream.hexval('\\');
    }
}
statement is: CharStream.hexval('\\'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: CharStream.hexval('\\') target is: CharStream method is: hexval(char)
Matched Method is: hexval(C)I
TestCase is: char _char = '\\';
JavaCharStream.hexval(_char);

statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval(']')
test data is: JavaCharStream.hexval(']');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream.hexval(0x5d);
    }
}
statement is: CharStream.hexval(0x5d), class spoon.support.reflect.code.CtInvocationImpl
invocation is: CharStream.hexval(0x5d) target is: CharStream method is: hexval(int)
Matched Method is: hexval(C)I
TestCase is: int _int = 93;
JavaCharStream.hexval((char) _int);

statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('^')
test data is: JavaCharStream.hexval('^');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
    }
}
statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('_')
test data is: JavaCharStream.hexval('_');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
    }
}
statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('`')
test data is: JavaCharStream.hexval('`');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Before:
        JavaCharStream.hexval('`');
        // After:
        JavaCharStream.hexval('`');
        // The above code uses the Unicode escape sequence for the backtick character (`) to make the test data more descriptive and representative of the situation being tested. }}
    }
}
statement is: // Before:
JavaCharStream.hexval('`'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Before:
JavaCharStream.hexval('`') target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: // After:
JavaCharStream.hexval('`'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // After:
JavaCharStream.hexval('`') target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: // The above code uses the Unicode escape sequence for the backtick character (`) to make the test data more descriptive and representative of the situation being tested. }}, class spoon.support.reflect.code.CtCommentImpl
TestCase is: char _char = '`';
JavaCharStream.hexval(_char);
char _char = '`';
JavaCharStream.hexval(_char);

statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('a')
test data is: JavaCharStream.hexval('a');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream.hexval('A');// replace with a more descriptive value, such as 'a }}

    }
}
statement is: CharStream.hexval('A')// replace with a more descriptive value, such as 'a }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: CharStream.hexval('A')// replace with a more descriptive value, such as 'a }}
 target is: CharStream method is: hexval(char)
Matched Method is: hexval(C)I
TestCase is: char _char = 'A';
JavaCharStream.hexval(_char);

statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('b')
test data is: JavaCharStream.hexval('b');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream.hexval('A');
    }
}
statement is: CharStream.hexval('A'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: CharStream.hexval('A') target is: CharStream method is: hexval(char)
Matched Method is: hexval(C)I
TestCase is: char _char = 'A';
JavaCharStream.hexval(_char);

statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('c')
test data is: JavaCharStream.hexval('c');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream.hexval('E');
    }
}
statement is: CharStream.hexval('E'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: CharStream.hexval('E') target is: CharStream method is: hexval(char)
Matched Method is: hexval(C)I
TestCase is: char _char = 'E';
JavaCharStream.hexval(_char);

statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('d')
test data is: JavaCharStream.hexval('d');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream.hexval('f');
    }
}
statement is: CharStream.hexval('f'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: CharStream.hexval('f') target is: CharStream method is: hexval(char)
Matched Method is: hexval(C)I
TestCase is: char _char = 'f';
JavaCharStream.hexval(_char);

statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('e')
test data is: JavaCharStream.hexval('e');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream.hexval('f');
    }
}
statement is: CharStream.hexval('f'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: CharStream.hexval('f') target is: CharStream method is: hexval(char)
Matched Method is: hexval(C)I
TestCase is: char _char = 'f';
JavaCharStream.hexval(_char);

statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('f')
test data is: JavaCharStream.hexval('f');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream.hexval('a');// returns 10

        JavaCharStream.hexval('b');// returns 11

        JavaCharStream.hexval('c');// returns 12

        JavaCharStream.hexval('d');// returns 13

        JavaCharStream.hexval('e');// returns 14

        JavaCharStream.hexval('f');// returns 1 }}

    }
}
statement is: CharStream.hexval('a')// returns 10
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: CharStream.hexval('a')// returns 10
 target is: CharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('b')// returns 11
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('b')// returns 11
 target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('c')// returns 12
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('c')// returns 12
 target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('d')// returns 13
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('d')// returns 13
 target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('e')// returns 14
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('e')// returns 14
 target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('f')// returns 1 }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('f')// returns 1 }}
 target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
TestCase is: char _char = 'a';
JavaCharStream.hexval(_char);
char _char = 'b';
JavaCharStream.hexval(_char);
char _char = 'c';
JavaCharStream.hexval(_char);
char _char = 'd';
JavaCharStream.hexval(_char);
char _char = 'e';
JavaCharStream.hexval(_char);
char _char = 'f';
JavaCharStream.hexval(_char);

statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('n')
test data is: JavaCharStream.hexval('n');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream.hexval(0x6e);
    }
}
statement is: CharStream.hexval(0x6e), class spoon.support.reflect.code.CtInvocationImpl
invocation is: CharStream.hexval(0x6e) target is: CharStream method is: hexval(int)
Matched Method is: hexval(C)I
TestCase is: int _int = 110;
JavaCharStream.hexval((char) _int);

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("b")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;III)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, (-1), 129, 129)
statement is: AdjustBuffSize()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: javaCharStream.AdjustBuffSize()
test data is: StringReader stringReader = new StringReader("b");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-1), 129, 129);
javaCharStream.AdjustBuffSize();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("This is a sample text");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, -1, 1024, 1024);
        javaCharStream.AdjustBuffSize();
    }
}
statement is: StringReader stringReader = new StringReader("This is a sample text"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, -1, 1024, 1024), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.AdjustBuffSize(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.AdjustBuffSize() target is: javaCharStream method is: AdjustBuffSize()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;III)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 4
Matched Method is: AdjustBuffSize()V
TestCase is: String string = "This is a sample text";
StringReader stringReader = new StringReader(string);
int _int = 1024;
int _int = 1024;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int, 129);
((JavaCharStream) stringReader).AdjustBuffSize();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("C7|WymBRD.75\"")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;III)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 165, 165, 165)
statement is: ExpandBuff(Z)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: javaCharStream.ExpandBuff(true)
test data is: StringReader stringReader = new StringReader("C7|WymBRD.75\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 165, 165, 165);
javaCharStream.ExpandBuff(true);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("C7|WymBRD.75\"");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, 165, 165, 165);
        javaCharStream.ExpandBuff(true);
    }
}
statement is: StringReader stringReader = new StringReader("C7|WymBRD.75\""), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, 165, 165, 165), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.ExpandBuff(true), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.ExpandBuff(true) target is: javaCharStream method is: ExpandBuff(boolean)
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;III)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 5
Matched Method is: ExpandBuff(Z)V
TestCase is: String string = "C7|WymBRD.75\"";
StringReader stringReader = new StringReader(string);
int _int = 165;
int _int = 165;
int _int = 165;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int, _int);
boolean _boolean = true;
((JavaCharStream) stringReader).ExpandBuff(_boolean);

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: BeginToken()C type is: class org.evosuite.testcase.statements.MethodStatement return type char
statement code is: char BeginToken = javaCharStream.BeginToken()
test data is: StringReader stringReader = new StringReader("");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.BeginToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data for StringReader and JavaCharStream
        StringReader stringReader = new StringReader("This is a test String");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        javaCharStream.BeginToken();
    }
}
statement is: // Improved test data for StringReader and JavaCharStream
StringReader stringReader = new StringReader("This is a test String"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.BeginToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.BeginToken() target is: javaCharStream method is: BeginToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 2
Matched Method is: BeginToken()C
TestCase is: String string = "This is a test String";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
((JavaCharStream) stringReader).BeginToken();

statement is: java.io.PipedInputStream(I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.PipedInputStream
statement code is: PipedInputStream pipedInputStream = new PipedInputStream(450)
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 520, 520)
statement is: FillBuff()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: javaCharStream.FillBuff()
test data is: PipedInputStream pipedInputStream = new PipedInputStream(450);
JavaCharStream javaCharStream = new JavaCharStream(pipedInputStream, 520, 520);
javaCharStream.FillBuff();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        PipedInputStream pipedInputStream = new PipedInputStream(CAPACITY_PIPED_INPUT_STREAM);
        JavaCharStream javaCharStream = new JavaCharStream(pipedInputStream, INITIAL_SIZE_AND_CAPACITY_JAVA_CHAR_STREAM, INITIAL_SIZE_AND_CAPACITY_JAVA_CHAR_STREAM);
        javaCharStream.FillBuff();
    }
}
statement is: PipedInputStream pipedInputStream = new PipedInputStream(CAPACITY_PIPED_INPUT_STREAM), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(pipedInputStream, INITIAL_SIZE_AND_CAPACITY_JAVA_CHAR_STREAM, INITIAL_SIZE_AND_CAPACITY_JAVA_CHAR_STREAM), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.FillBuff(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.FillBuff() target is: javaCharStream method is: FillBuff()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;II)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 1
Matched Method is: FillBuff()V
TestCase is: PipedInputStream pipedInputStream = new PipedInputStream(450);
JavaCharStream javaCharStream = new JavaCharStream(pipedInputStream, 520, 520);
javaCharStream.FillBuff();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("C7|WymBRD.75\"")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: BeginToken()C type is: class org.evosuite.testcase.statements.MethodStatement return type char
statement code is: char BeginToken = javaCharStream.BeginToken()
statement is: BeginToken()C type is: class org.evosuite.testcase.statements.MethodStatement return type char
statement code is: char BeginToken = javaCharStream.BeginToken()
test data is: StringReader stringReader = new StringReader("C7|WymBRD.75\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.BeginToken();
javaCharStream.BeginToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("Hello World");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        javaCharStream.BeginToken();
        javaCharStream.BeginToken();
    }
}
statement is: StringReader stringReader = new StringReader("Hello World"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.BeginToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.BeginToken() target is: javaCharStream method is: BeginToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 2
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 2
Matched Method is: BeginToken()C
statement is: javaCharStream.BeginToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.BeginToken() target is: javaCharStream method is: BeginToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 2
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 2
Matched Method is: BeginToken()C
TestCase is: String string = "Hello World";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
((JavaCharStream) stringReader).BeginToken();
((JavaCharStream) stringReader).BeginToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("E]HoO;7")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;III)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 129, 2358, 129)
statement is: org.evosuite.testcase.statements.AssignmentStatement@f9f0ccff type is: class org.evosuite.testcase.statements.AssignmentStatement return type int
statement code is: javaCharStream.available = 78
statement is: AdjustBuffSize()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: javaCharStream.AdjustBuffSize()
test data is: StringReader stringReader = new StringReader("E]HoO;7");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 129, 2358, 129);
javaCharStream.available = 78;
javaCharStream.AdjustBuffSize();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("E]HoO;7");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, 129, 2358, 129);
        javaCharStream.available = 78;
        javaCharStream.AdjustBuffSize();
    }
}
statement is: StringReader stringReader = new StringReader("E]HoO;7"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, 129, 2358, 129), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.available = 78, class spoon.support.reflect.code.CtAssignmentImpl
statement is: javaCharStream.AdjustBuffSize(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.AdjustBuffSize() target is: javaCharStream method is: AdjustBuffSize()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;III)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 5
Matched Method is: AdjustBuffSize()V
TestCase is: String string = "E]HoO;7";
StringReader stringReader = new StringReader(string);
int _int = 129;
int _int = 2358;
int _int = 129;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int, _int);
((JavaCharStream) stringReader).AdjustBuffSize();

statement is: org.evosuite.testcase.statements.ArrayStatement@d19838d8 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[0]
statement is: java.io.ByteArrayInputStream([B)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.ByteArrayInputStream
statement code is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(arg0)
statement is: java.io.BufferedInputStream(Ljava/io/InputStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.BufferedInputStream
statement code is: BufferedInputStream bufferedInputStream = new BufferedInputStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, (-552), 13)
statement is: backup(I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: javaCharStream.backup(13)
statement is: BeginToken()C type is: class org.evosuite.testcase.statements.MethodStatement return type char
statement code is: char BeginToken = javaCharStream.BeginToken()
statement is: AdjustBuffSize()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: javaCharStream.AdjustBuffSize()
test data is: byte[] byteArray = new byte[0];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
BufferedInputStream bufferedInputStream = new BufferedInputStream(byteArrayInputStream);
JavaCharStream javaCharStream = new JavaCharStream(bufferedInputStream, (-552), 13);
javaCharStream.backup(13);
javaCharStream.BeginToken();
javaCharStream.AdjustBuffSize();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        byte[] byteArray = new byte[]{ 0x48, 0x65, 0x6c, 0x6c, 0x6f };
        ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
        BufferedInputStream bufferedInputStream = new BufferedInputStream(byteArrayInputStream);
        JavaCharStream javaCharStream = new JavaCharStream(bufferedInputStream, -552, 13);
        javaCharStream.backup(13);
        javaCharStream.BeginToken();
        javaCharStream.AdjustBuffSize();
    }
}
statement is: byte[] byteArray = new byte[]{ 0x48, 0x65, 0x6c, 0x6c, 0x6f }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: byte[] byteArray = new byte[0] isAssignment: false Array: new byte[]{ 0x48, 0x65, 0x6c, 0x6c, 0x6f } Elements: [0x48, 0x65, 0x6c, 0x6c, 0x6f]
lengths: [0] []
statement is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: java.io.ByteArrayInputStream([B)V
statement is: BufferedInputStream bufferedInputStream = new BufferedInputStream(byteArrayInputStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: java.io.BufferedInputStream(Ljava/io/InputStream;)V
statement is: JavaCharStream javaCharStream = new JavaCharStream(bufferedInputStream, -552, 13), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.backup(13), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.backup(13) target is: javaCharStream method is: backup(int)
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;II)V callee: VariableReference: Statement 3, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 1
Matched Method is: backup(I)V
TestCase Could not be added: backup(I)V
statement is: javaCharStream.BeginToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.BeginToken() target is: javaCharStream method is: BeginToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;II)V callee: VariableReference: Statement 3, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 1
Matched Method is: BeginToken()C
TestCase Could not be added: BeginToken()C
statement is: javaCharStream.AdjustBuffSize(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.AdjustBuffSize() target is: javaCharStream method is: AdjustBuffSize()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;II)V callee: VariableReference: Statement 3, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 1
Matched Method is: AdjustBuffSize()V
TestCase Could not be added: AdjustBuffSize()V
* this is vulnerable: int _int = 13
TestCase is: int _int = 13;
JavaCharStream javaCharStream = new JavaCharStream((InputStream) _int, (-552), 13);
int _int = 13;

statement is: org.evosuite.testcase.statements.ArrayStatement@14fe78a0 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[3]
statement is: java.io.ByteArrayInputStream([B)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.ByteArrayInputStream
statement code is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(arg0)
statement is: java.io.BufferedInputStream(Ljava/io/InputStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.BufferedInputStream
statement code is: BufferedInputStream bufferedInputStream = new BufferedInputStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 0, (byte)7)
statement is: org.evosuite.testcase.statements.AssignmentStatement@a932a112 type is: class org.evosuite.testcase.statements.AssignmentStatement return type boolean
statement code is: javaCharStream.prevCharIsLF = true
statement is: BeginToken()C type is: class org.evosuite.testcase.statements.MethodStatement return type char
statement code is: char BeginToken = javaCharStream.BeginToken()
test data is: byte[] byteArray = new byte[3];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
BufferedInputStream bufferedInputStream = new BufferedInputStream(byteArrayInputStream);
JavaCharStream javaCharStream = new JavaCharStream(bufferedInputStream, 0, (byte)7);
javaCharStream.prevCharIsLF = true;
javaCharStream.BeginToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        byte[] byteArray = new byte[]{ 102, 114, 111 };
        ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
        BufferedInputStream bufferedInputStream = new BufferedInputStream(byteArrayInputStream);
        JavaCharStream javaCharStream = new JavaCharStream(bufferedInputStream, 0, ((byte) (7)));
        javaCharStream.prevCharIsLF = true;
        javaCharStream.BeginToken();
    }
}
statement is: byte[] byteArray = new byte[]{ 102, 114, 111 }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: byte[] byteArray = new byte[3] isAssignment: false Array: new byte[]{ 102, 114, 111 } Elements: [102, 114, 111]
lengths: [3] []
statement is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: java.io.ByteArrayInputStream([B)V
statement is: BufferedInputStream bufferedInputStream = new BufferedInputStream(byteArrayInputStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: java.io.BufferedInputStream(Ljava/io/InputStream;)V
statement is: JavaCharStream javaCharStream = new JavaCharStream(bufferedInputStream, 0, ((byte) (7))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.prevCharIsLF = true, class spoon.support.reflect.code.CtAssignmentImpl
statement is: javaCharStream.BeginToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.BeginToken() target is: javaCharStream method is: BeginToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;II)V callee: VariableReference: Statement 3, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 2
Matched Method is: BeginToken()C
TestCase Could not be added: BeginToken()C
TestCase is: int _int = 0;
int _int = 7;
JavaCharStream javaCharStream = new JavaCharStream((InputStream) _int, _int, (int) (byte)7);

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("iYEp3djXv:u'")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: org.evosuite.testcase.statements.AssignmentStatement@cb2fa569 type is: class org.evosuite.testcase.statements.AssignmentStatement return type boolean
statement code is: javaCharStream.prevCharIsCR = true
statement is: BeginToken()C type is: class org.evosuite.testcase.statements.MethodStatement return type char
statement code is: char BeginToken = javaCharStream.BeginToken()
test data is: StringReader stringReader = new StringReader("iYEp3djXv:u'");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.prevCharIsCR = true;
javaCharStream.BeginToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("Hello world! This is a sample string for testing purposes.");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        javaCharStream.prevCharIsCR = false;
        javaCharStream.BeginToken();
    }
}
statement is: StringReader stringReader = new StringReader("Hello world! This is a sample string for testing purposes."), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.prevCharIsCR = false, class spoon.support.reflect.code.CtAssignmentImpl
statement is: javaCharStream.BeginToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.BeginToken() target is: javaCharStream method is: BeginToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 2
Matched Method is: BeginToken()C
TestCase is: String string = "Hello world! This is a sample string for testing purposes.";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
((JavaCharStream) stringReader).BeginToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("]-7!F=t\"*dOi@y'9lyd")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;III)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 107, 107, 107)
statement is: backup(I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: javaCharStream.backup(107)
statement is: readChar()C type is: class org.evosuite.testcase.statements.MethodStatement return type char
statement code is: char readChar = javaCharStream.readChar()
test data is: StringReader stringReader = new StringReader("]-7!F=t\"*dOi@y'9lyd");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 107, 107, 107);
javaCharStream.backup(107);
javaCharStream.readChar();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("7!F=t\"*dOi@y\'9lyd");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, 107, 107, 107);
        javaCharStream.backup(107);
        javaCharStream.readChar();
    }
}
statement is: StringReader stringReader = new StringReader("7!F=t\"*dOi@y\'9lyd"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, 107, 107, 107), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.backup(107), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.backup(107) target is: javaCharStream method is: backup(int)
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;III)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 5
Matched Method is: backup(I)V
statement is: javaCharStream.readChar(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.readChar() target is: javaCharStream method is: readChar()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;III)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 5
Matched Method is: readChar()C
TestCase is: String string = "7!F=t\"*dOi@y'9lyd";
StringReader stringReader = new StringReader(string);
int _int = 107;
int _int = 107;
int _int = 107;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int, _int);
int _int = 107;
((JavaCharStream) stringReader).backup(_int);
((JavaCharStream) stringReader).readChar();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("]-7!F=\"*di@y'9ld")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;III)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 95, 95, 2)
statement is: org.evosuite.testcase.statements.AssignmentStatement@c45dc9a4 type is: class org.evosuite.testcase.statements.AssignmentStatement return type int
statement code is: javaCharStream.inBuf = 95
statement is: BeginToken()C type is: class org.evosuite.testcase.statements.MethodStatement return type char
statement code is: char BeginToken = javaCharStream.BeginToken()
statement is: BeginToken()C type is: class org.evosuite.testcase.statements.MethodStatement return type char
statement code is: char BeginToken = javaCharStream.BeginToken()
statement is: readChar()C type is: class org.evosuite.testcase.statements.MethodStatement return type char
statement code is: char readChar = javaCharStream.readChar()
test data is: StringReader stringReader = new StringReader("]-7!F=\"*di@y'9ld");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 95, 95, 2);
javaCharStream.inBuf = 95;
javaCharStream.BeginToken();
javaCharStream.BeginToken();
javaCharStream.readChar();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("This is a test sentence.");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, 0, 0, 2);
        javaCharStream.inBuf = 0;
        javaCharStream.BeginToken();
        javaCharStream.BeginToken();
        javaCharStream.readChar();
    }
}
statement is: StringReader stringReader = new StringReader("This is a test sentence."), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, 0, 0, 2), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.inBuf = 0, class spoon.support.reflect.code.CtAssignmentImpl
statement is: javaCharStream.BeginToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.BeginToken() target is: javaCharStream method is: BeginToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;III)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 5
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;III)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 5
Matched Method is: BeginToken()C
statement is: javaCharStream.BeginToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.BeginToken() target is: javaCharStream method is: BeginToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;III)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 5
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;III)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 5
Matched Method is: BeginToken()C
statement is: javaCharStream.readChar(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.readChar() target is: javaCharStream method is: readChar()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;III)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 5
Matched Method is: readChar()C
TestCase is: String string = "This is a test sentence.";
StringReader stringReader = new StringReader(string);
int _int = 0;
int _int = 0;
int _int = 2;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int, _int);
((JavaCharStream) stringReader).BeginToken();
((JavaCharStream) stringReader).BeginToken();
((JavaCharStream) stringReader).readChar();

statement is: org.evosuite.testcase.statements.ArrayStatement@20264c54 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[2]
statement is: org.evosuite.testcase.statements.AssignmentStatement@c2d8c31 type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[0] = (byte)92
statement is: java.io.ByteArrayInputStream([B)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.ByteArrayInputStream
statement code is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(arg0)
statement is: java.io.BufferedInputStream(Ljava/io/InputStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.BufferedInputStream
statement code is: BufferedInputStream bufferedInputStream = new BufferedInputStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: BeginToken()C type is: class org.evosuite.testcase.statements.MethodStatement return type char
statement code is: char BeginToken = javaCharStream.BeginToken()
test data is: byte[] byteArray = new byte[2];
byteArray[0] = (byte)92;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
BufferedInputStream bufferedInputStream = new BufferedInputStream(byteArrayInputStream);
JavaCharStream javaCharStream = new JavaCharStream(bufferedInputStream);
javaCharStream.BeginToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Use more descriptive variable names and representative values
        byte[] byteArray = new byte[]{ 10, 20 };
        FileInputStream inputStream = new FileInputStream("path/to/file");
        BufferedInputStream bufferedInputStream = new BufferedInputStream(inputStream);
        RegexTokenizer tokenizer = new RegexTokenizer(bufferedInputStream, "[a-zA-Z]+");
        tokenizer.BeginToken();
    }
}
statement is: // Use more descriptive variable names and representative values
byte[] byteArray = new byte[]{ 10, 20 }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: byte[] byteArray = new byte[2] isAssignment: false Array: new byte[]{ 10, 20 } Elements: [10, 20]
lengths: [2] []
statement is: FileInputStream inputStream = new FileInputStream("path/to/file"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: BufferedInputStream bufferedInputStream = new BufferedInputStream(inputStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: java.io.BufferedInputStream(Ljava/io/InputStream;)V
statement is: RegexTokenizer tokenizer = new RegexTokenizer(bufferedInputStream, "[a-zA-Z]+"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: tokenizer.BeginToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: tokenizer.BeginToken() target is: tokenizer method is: BeginToken()
statement is: org.evosuite.testcase.statements.ArrayStatement@71c5e946 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[3]
statement is: org.evosuite.testcase.statements.AssignmentStatement@b1f06c8c type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[1] = (byte)92
statement is: org.evosuite.testcase.statements.AssignmentStatement@fc1d7cb2 type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[2] = (byte)92
statement is: java.io.ByteArrayInputStream([B)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.ByteArrayInputStream
statement code is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, (-1), (byte)92)
statement is: BeginToken()C type is: class org.evosuite.testcase.statements.MethodStatement return type char
statement code is: char BeginToken = javaCharStream.BeginToken()
statement is: readChar()C type is: class org.evosuite.testcase.statements.MethodStatement return type char
statement code is: char readChar = javaCharStream.readChar()
test data is: byte[] byteArray = new byte[3];
byteArray[1] = (byte)92;
byteArray[2] = (byte)92;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, (-1), (byte)92);
javaCharStream.BeginToken();
javaCharStream.readChar();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        byte[] byteArray = new byte[]{ 0x40, 0x67, 0x72 };
        ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
        JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, -1, ((byte) (0x5c)));
        javaCharStream.BeginToken();
        javaCharStream.readChar();
    }
}
statement is: byte[] byteArray = new byte[]{ 0x40, 0x67, 0x72 }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: byte[] byteArray = new byte[3] isAssignment: false Array: new byte[]{ 0x40, 0x67, 0x72 } Elements: [0x40, 0x67, 0x72]
lengths: [3] []
statement is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: java.io.ByteArrayInputStream([B)V
statement is: JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, -1, ((byte) (0x5c))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.BeginToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.BeginToken() target is: javaCharStream method is: BeginToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;II)V callee: VariableReference: Statement 4, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 1
Matched Method is: BeginToken()C
TestCase Could not be added: BeginToken()C
statement is: javaCharStream.readChar(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.readChar() target is: javaCharStream method is: readChar()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;II)V callee: VariableReference: Statement 4, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 1
Matched Method is: readChar()C
TestCase Could not be added: readChar()C
TestCase is: int _int = 92;
JavaCharStream javaCharStream = new JavaCharStream((InputStream) _int, (-1), (int) (byte)92);

statement is: org.evosuite.testcase.statements.ArrayStatement@3388f46b type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[2]
statement is: org.evosuite.testcase.statements.AssignmentStatement@43b46cd9 type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[1] = (byte)92
statement is: java.io.ByteArrayInputStream([B)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.ByteArrayInputStream
statement code is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(arg0)
statement is: java.io.BufferedInputStream(Ljava/io/InputStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.BufferedInputStream
statement code is: BufferedInputStream bufferedInputStream = new BufferedInputStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 1493, (-673))
statement is: BeginToken()C type is: class org.evosuite.testcase.statements.MethodStatement return type char
statement code is: char BeginToken = javaCharStream.BeginToken()
statement is: readChar()C type is: class org.evosuite.testcase.statements.MethodStatement return type char
statement code is: char readChar = javaCharStream.readChar()
test data is: byte[] byteArray = new byte[2];
byteArray[1] = (byte)92;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
BufferedInputStream bufferedInputStream = new BufferedInputStream(byteArrayInputStream);
JavaCharStream javaCharStream = new JavaCharStream(bufferedInputStream, 1493, (-673));
javaCharStream.BeginToken();
javaCharStream.readChar();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        byte[] byteArray = new byte[2];
        byteArray[0] = ((byte) (97));// a

        byteArray[1] = ((byte) (92));// Z

        ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
        BufferedInputStream bufferedInputStream = new BufferedInputStream(byteArrayInputStream);
        JavaCharStream javaCharStream = new JavaCharStream(bufferedInputStream, 1493, -673);
        javaCharStream.BeginToken();
        javaCharStream.readChar();
    }
}
statement is: byte[] byteArray = new byte[2], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [2] Ct is: byte[] byteArray = new byte[2] isAssignment: false Array: new byte[2] Elements: []
lengths: [2] [2]
Their type are: class [B byte[]
statement is: byteArray[0] = ((byte) (97))// a
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : byteArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl byte Assignment:((byte) (97)) Ct is: byteArray[0] = ((byte) (97))// a

target : byteArray class spoon.support.reflect.code.CtLiteralImpl
statement is: byteArray[1] = ((byte) (92))// Z
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : byteArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl byte Assignment:((byte) (92)) Ct is: byteArray[1] = ((byte) (92))// Z

target : byteArray class spoon.support.reflect.code.CtLiteralImpl
statement is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: BufferedInputStream bufferedInputStream = new BufferedInputStream(byteArrayInputStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(bufferedInputStream, 1493, -673), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.BeginToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.BeginToken() target is: javaCharStream method is: BeginToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;II)V callee: VariableReference: Statement 4, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 8
Matched Method is: BeginToken()C
statement is: javaCharStream.readChar(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.readChar() target is: javaCharStream method is: readChar()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;II)V callee: VariableReference: Statement 4, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 8
Matched Method is: readChar()C
TestCase is: byte[] byteArray = new byte[2];
int _int = 97;
byteArray[1] = (byte) _int;
int _int = 92;
byteArray[1] = (byte) _int;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
BufferedInputStream bufferedInputStream = new BufferedInputStream(byteArrayInputStream);
int _int = 1493;
JavaCharStream javaCharStream = new JavaCharStream(bufferedInputStream, _int, (-673));
((JavaCharStream) byteArray[1]).BeginToken();
((JavaCharStream) byteArray[1]).readChar();

statement is: org.evosuite.testcase.statements.ArrayStatement@a9859d15 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[0]
statement is: java.io.ByteArrayInputStream([B)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.ByteArrayInputStream
statement code is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(arg0)
statement is: java.io.SequenceInputStream(Ljava/io/InputStream;Ljava/io/InputStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.SequenceInputStream
statement code is: SequenceInputStream sequenceInputStream = new SequenceInputStream(arg1, arg1)
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;III)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 0, 0, 0)
statement is: Done()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: javaCharStream.Done()
statement is: ReInit(Ljava/io/InputStream;II)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: javaCharStream.ReInit((InputStream) arg0, 1, 3997)
test data is: byte[] byteArray = new byte[0];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
SequenceInputStream sequenceInputStream = new SequenceInputStream(byteArrayInputStream, byteArrayInputStream);
JavaCharStream javaCharStream = new JavaCharStream(sequenceInputStream, 0, 0, 0);
javaCharStream.Done();
javaCharStream.ReInit((InputStream) byteArrayInputStream, 1, 3997);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        byte[] byteArray = new byte[]{ ((byte) (0x84)), ((byte) (0x52)), ((byte) (0x86)), ((byte) (0x3d)) };
        ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
        SequenceInputStream sequenceInputStream = new SequenceInputStream(byteArrayInputStream, byteArrayInputStream);
        JavaCharStream javaCharStream = new JavaCharStream(sequenceInputStream, 0, 0, 0);
        javaCharStream.Done();
        javaCharStream.ReInit(((InputStream) (byteArrayInputStream)), 1, 3997);
    }
}
statement is: byte[] byteArray = new byte[]{ ((byte) (0x84)), ((byte) (0x52)), ((byte) (0x86)), ((byte) (0x3d)) }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: byte[] byteArray = new byte[0] isAssignment: false Array: new byte[]{ ((byte) (0x84)), ((byte) (0x52)), ((byte) (0x86)), ((byte) (0x3d)) } Elements: [((byte) (0x84)), ((byte) (0x52)), ((byte) (0x86)), ((byte) (0x3d))]
lengths: [0] []
statement is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: java.io.ByteArrayInputStream([B)V
statement is: SequenceInputStream sequenceInputStream = new SequenceInputStream(byteArrayInputStream, byteArrayInputStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: java.io.SequenceInputStream(Ljava/io/InputStream;Ljava/io/InputStream;)V
statement is: JavaCharStream javaCharStream = new JavaCharStream(sequenceInputStream, 0, 0, 0), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.Done(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.Done() target is: javaCharStream method is: Done()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;III)V callee: VariableReference: Statement 3, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 3
Matched Method is: Done()V
statement is: javaCharStream.ReInit(((InputStream) (byteArrayInputStream)), 1, 3997), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.ReInit(((InputStream) (byteArrayInputStream)), 1, 3997) target is: javaCharStream method is: ReInit(InputStream,int,int)
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;III)V callee: VariableReference: Statement 3, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 3
Matched Method is: ReInit(Ljava/io/InputStream;II)V
i 2 Parameters size() 2 Num of Method Parameters: 3
TestCase is: int _int = 0;
int _int = 0;
int _int = 0;
JavaCharStream javaCharStream = new JavaCharStream((InputStream) _int, _int, _int, 0);
javaCharStream.Done();
int _int = 1;
int _int = 3997;
int _int = null;
javaCharStream.ReInit((InputStream) _int, _int, _int);

statement is: org.evosuite.testcase.statements.ArrayStatement@dc456682 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[6]
statement is: java.io.ByteArrayInputStream([B)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.ByteArrayInputStream
statement code is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 1493, (-1))
statement is: BeginToken()C type is: class org.evosuite.testcase.statements.MethodStatement return type char
statement code is: char BeginToken = javaCharStream.BeginToken()
statement is: GetImage()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String GetImage = javaCharStream.GetImage()
test data is: byte[] byteArray = new byte[6];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, 1493, (-1));
javaCharStream.BeginToken();
javaCharStream.GetImage();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        byte[] byteArray = new byte[]{ 65, 66, 67, 68, 69 };// ASCII codes for "ABCDE"

        ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
        JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, 1493, -1);
        javaCharStream.BeginToken();
        String token = javaCharStream.GetImage();
        System.out.println("Token: " + token);
    }
}
statement is: byte[] byteArray = new byte[]{ 65, 66, 67, 68, 69 }// ASCII codes for "ABCDE"
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: byte[] byteArray = new byte[6] isAssignment: false Array: new byte[]{ 65, 66, 67, 68, 69 } Elements: [65, 66, 67, 68, 69]
lengths: [6] []
statement is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: java.io.ByteArrayInputStream([B)V
statement is: JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, 1493, -1), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.BeginToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.BeginToken() target is: javaCharStream method is: BeginToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;II)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 1
Matched Method is: BeginToken()C
TestCase Could not be added: BeginToken()C
statement is: String token = javaCharStream.GetImage(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.GetImage() target is: javaCharStream method is: GetImage()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;II)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 1
Matched Method is: GetImage()Ljava/lang/String;
TestCase Could not be added: GetImage()Ljava/lang/String;
statement is: System.out.println("Token: " + token), class spoon.support.reflect.code.CtInvocationImpl
invocation is: System.out.println("Token: " + token) target is: System.out method is: println(java.lang.String)
TestCase is: int _int = 1493;
JavaCharStream javaCharStream = new JavaCharStream((InputStream) _int, 1493, (-1));

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: GetSuffix(I)[C type is: class org.evosuite.testcase.statements.MethodStatement return type class [C
statement code is: char[] GetSuffix = javaCharStream.GetSuffix(2048)
test data is: StringReader stringReader = new StringReader("");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.GetSuffix(2048);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("This is a sample text for testing purposes");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        javaCharStream.GetSuffix(2048);
    }
}
statement is: StringReader stringReader = new StringReader("This is a sample text for testing purposes"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.GetSuffix(2048), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.GetSuffix(2048) target is: javaCharStream method is: GetSuffix(int)
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 2
Matched Method is: GetSuffix(I)[C
TestCase is: String string = "This is a sample text for testing purposes";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
int _int = 2048;
((JavaCharStream) stringReader).GetSuffix(_int);

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("C7|WymBRD.75\"")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;III)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 0, 1440, 4989)
statement is: GetSuffix(I)[C type is: class org.evosuite.testcase.statements.MethodStatement return type class [C
statement code is: char[] GetSuffix = javaCharStream.GetSuffix(0)
test data is: StringReader stringReader = new StringReader("C7|WymBRD.75\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 0, 1440, 4989);
javaCharStream.GetSuffix(0);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("C7|WymBRD.75\"");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, 0, 1440, 4989);
        javaCharStream.GetSuffix(0);
    }
}
statement is: StringReader stringReader = new StringReader("C7|WymBRD.75\""), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, 0, 1440, 4989), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.GetSuffix(0), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.GetSuffix(0) target is: javaCharStream method is: GetSuffix(int)
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;III)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 5
Matched Method is: GetSuffix(I)[C
TestCase is: String string = "C7|WymBRD.75\"";
StringReader stringReader = new StringReader(string);
int _int = 0;
int _int = 1440;
int _int = 4989;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int, _int);
int _int = 0;
((JavaCharStream) stringReader).GetSuffix(_int);

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("ZiNw)^eie6.hMz:M")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: readChar()C type is: class org.evosuite.testcase.statements.MethodStatement return type char
statement code is: char readChar = javaCharStream.readChar()
statement is: adjustBeginLineColumn(II)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: javaCharStream.adjustBeginLineColumn(8, 8)
test data is: StringReader stringReader = new StringReader("ZiNw)^eie6.hMz:M");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.readChar();
javaCharStream.adjustBeginLineColumn(8, 8);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("This is a test string for the JavaCC parser.");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        javaCharStream.readChar();
        javaCharStream.adjustBeginLineColumn(8, 8);
    }
}
statement is: StringReader stringReader = new StringReader("This is a test string for the JavaCC parser."), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.readChar(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.readChar() target is: javaCharStream method is: readChar()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 2
Matched Method is: readChar()C
statement is: javaCharStream.adjustBeginLineColumn(8, 8), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.adjustBeginLineColumn(8, 8) target is: javaCharStream method is: adjustBeginLineColumn(int,int)
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 2
Matched Method is: adjustBeginLineColumn(II)V
TestCase is: String string = "This is a test string for the JavaCC parser.";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
((JavaCharStream) stringReader).readChar();
int _int = 8;
int _int = 8;
((JavaCharStream) stringReader).adjustBeginLineColumn(_int, _int);

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader(" column ")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 82, 85)
statement is: adjustBeginLineColumn(II)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: javaCharStream.adjustBeginLineColumn(0, 117)
test data is: StringReader stringReader = new StringReader(" column ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 82, 85);
javaCharStream.adjustBeginLineColumn(0, 117);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader(" column ");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, 82, 85);
        javaCharStream.adjustBeginLineColumn(0, 117);
    }
}
statement is: StringReader stringReader = new StringReader(" column "), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, 82, 85), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.adjustBeginLineColumn(0, 117), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.adjustBeginLineColumn(0, 117) target is: javaCharStream method is: adjustBeginLineColumn(int,int)
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 4
Matched Method is: adjustBeginLineColumn(II)V
TestCase is: String string = " column ";
StringReader stringReader = new StringReader(string);
int _int = 82;
int _int = 85;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int);
int _int = 0;
int _int = 117;
((JavaCharStream) stringReader).adjustBeginLineColumn(_int, _int);

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("^Wqa U;!WsW'u0")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: adjustBeginLineColumn(II)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: javaCharStream.adjustBeginLineColumn((-2490), 14)
statement is: adjustBeginLineColumn(II)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: javaCharStream.adjustBeginLineColumn(83, (-1))
test data is: StringReader stringReader = new StringReader("^Wqa U;!WsW'u0");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.adjustBeginLineColumn((-2490), 14);
javaCharStream.adjustBeginLineColumn(83, (-1));

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("^Wqa U;!WsW'u0");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        javaCharStream.adjustBeginLineColumn(-2490, 14);
        javaCharStream.adjustBeginLineColumn(83, -1);
    }
}
statement is: StringReader stringReader = new StringReader("^Wqa U;!WsW'u0"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.adjustBeginLineColumn(-2490, 14), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.adjustBeginLineColumn(-2490, 14) target is: javaCharStream method is: adjustBeginLineColumn(int,int)
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 2
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 2
Matched Method is: adjustBeginLineColumn(II)V
i 1 Parameters size() 1 Num of Method Parameters: 2
statement is: javaCharStream.adjustBeginLineColumn(83, -1), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.adjustBeginLineColumn(83, -1) target is: javaCharStream method is: adjustBeginLineColumn(int,int)
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 2
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 2
Matched Method is: adjustBeginLineColumn(II)V
i 1 Parameters size() 1 Num of Method Parameters: 2
TestCase is: String string = "^Wqa U;!WsW'u0";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
int _int = 14;
int _int = null;
((JavaCharStream) stringReader).adjustBeginLineColumn(_int, _int);
int _int = 83;
int _int = null;
((JavaCharStream) stringReader).adjustBeginLineColumn(_int, _int);

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("+a[<")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: org.evosuite.testcase.statements.ArrayStatement@835378d type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[2]
statement is: java.io.ByteArrayInputStream([BII)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.ByteArrayInputStream
statement code is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(arg0, (byte)122, (byte)122)
statement is: ReInit(Ljava/io/InputStream;III)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: javaCharStream.ReInit((InputStream) arg0, 0, (int) (byte)122, 0)
test data is: StringReader stringReader = new StringReader("+a[<");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
byte[] byteArray = new byte[2];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray, (byte)122, (byte)122);
javaCharStream.ReInit((InputStream) byteArrayInputStream, 0, (int) (byte)122, 0);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("+a[<");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        byte[] byteArray = new byte[2];
        ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray, ((byte) (97)), ((byte) (122)));
        javaCharStream.ReInit(((InputStream) (byteArrayInputStream)), 0, ((int) ((byte) (122))), 0);
        // Test data for the character 'a'
        char ch = ((char) (byteArray[0]));
        assertEquals('a', ch);
        // Test data for the character 'z'
        ch = ((char) (byteArray[1]));
        assertEquals('z', ch);
    }
}
statement is: StringReader stringReader = new StringReader("+a[<"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: byte[] byteArray = new byte[2], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [2] Ct is: byte[] byteArray = new byte[2] isAssignment: false Array: new byte[2] Elements: []
lengths: [2] [2]
Their type are: class [B byte[]
statement is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray, ((byte) (97)), ((byte) (122))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.ReInit(((InputStream) (byteArrayInputStream)), 0, ((int) ((byte) (122))), 0), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.ReInit(((InputStream) (byteArrayInputStream)), 0, ((int) ((byte) (122))), 0) target is: javaCharStream method is: ReInit(InputStream,int,int,int)
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 2
Matched Method is: ReInit(Ljava/io/InputStream;III)V
statement is: // Test data for the character 'a'
char ch = ((char) (byteArray[0])), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtArrayReadImpl
IT HAS NOT BEEN SUPPORTED YET: ((char) (byteArray[0]))
statement is: assertEquals('a', ch), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals('a', ch) target is:  method is: assertEquals(char,char)
statement is: // Test data for the character 'z'
ch = ((char) (byteArray[1])), class spoon.support.reflect.code.CtAssignmentImpl
statement is: assertEquals('z', ch), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals('z', ch) target is:  method is: assertEquals(char,char)
TestCase is: String string = "+a[<";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
byte[] byteArray = new byte[2];
int _int = 97;
int _int = 122;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray, _int, _int);
int _int = 0;
int _int = 122;
int _int = 0;
((JavaCharStream) stringReader).ReInit((InputStream) byteArrayInputStream, _int, _int, _int);

statement is: org.evosuite.testcase.statements.ArrayStatement@fa6a9950 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[6]
statement is: org.evosuite.testcase.statements.AssignmentStatement@a9c90127 type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[0] = (byte)13
statement is: java.io.ByteArrayInputStream([B)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.ByteArrayInputStream
statement code is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(arg0)
statement is: java.io.BufferedInputStream(Ljava/io/InputStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.BufferedInputStream
statement code is: BufferedInputStream bufferedInputStream = new BufferedInputStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, (byte)13, (-1))
statement is: BeginToken()C type is: class org.evosuite.testcase.statements.MethodStatement return type char
statement code is: char BeginToken = javaCharStream.BeginToken()
test data is: byte[] byteArray = new byte[6];
byteArray[0] = (byte)13;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
BufferedInputStream bufferedInputStream = new BufferedInputStream(byteArrayInputStream);
JavaCharStream javaCharStream = new JavaCharStream(bufferedInputStream, (byte)13, (-1));
javaCharStream.BeginToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        byte[] byteArray = new byte[]{ 0x0, 0x1, 0x2, ((byte) (13)), 0x4, 0x5, ((byte) (255)) };
        ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
        BufferedInputStream bufferedInputStream = new BufferedInputStream(byteArrayInputStream);
        JavaCharStream javaCharStream = new JavaCharStream(bufferedInputStream, ((byte) (13)), -1);
        javaCharStream.BeginToken();
    }
}
statement is: byte[] byteArray = new byte[]{ 0x0, 0x1, 0x2, ((byte) (13)), 0x4, 0x5, ((byte) (255)) }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: byte[] byteArray = new byte[6] isAssignment: false Array: new byte[]{ 0x0, 0x1, 0x2, ((byte) (13)), 0x4, 0x5, ((byte) (255)) } Elements: [0x0, 0x1, 0x2, ((byte) (13)), 0x4, 0x5, ((byte) (255))]
lengths: [6] []
statement is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: java.io.ByteArrayInputStream([B)V
statement is: BufferedInputStream bufferedInputStream = new BufferedInputStream(byteArrayInputStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: java.io.BufferedInputStream(Ljava/io/InputStream;)V
statement is: JavaCharStream javaCharStream = new JavaCharStream(bufferedInputStream, ((byte) (13)), -1), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.BeginToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.BeginToken() target is: javaCharStream method is: BeginToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;II)V callee: VariableReference: Statement 4, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 1
Matched Method is: BeginToken()C
TestCase Could not be added: BeginToken()C
TestCase is: int _int = 13;
JavaCharStream javaCharStream = new JavaCharStream((InputStream) _int, (int) (byte)13, (-1));

statement is: org.evosuite.testcase.statements.ArrayStatement@b49f5203 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[2]
statement is: java.io.ByteArrayInputStream([B)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.ByteArrayInputStream
statement code is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(arg0)
statement is: java.io.BufferedInputStream(Ljava/io/InputStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.BufferedInputStream
statement code is: BufferedInputStream bufferedInputStream = new BufferedInputStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 1493, (byte)92)
statement is: org.evosuite.testcase.statements.AssignmentStatement@bc65b0d4 type is: class org.evosuite.testcase.statements.AssignmentStatement return type int
statement code is: javaCharStream.available = (int) (byte)0
statement is: readChar()C type is: class org.evosuite.testcase.statements.MethodStatement return type char
statement code is: char readChar = javaCharStream.readChar()
test data is: byte[] byteArray = new byte[2];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
BufferedInputStream bufferedInputStream = new BufferedInputStream(byteArrayInputStream);
JavaCharStream javaCharStream = new JavaCharStream(bufferedInputStream, 1493, (byte)92);
javaCharStream.available = (int) (byte)0;
javaCharStream.readChar();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        byte[] byteArray = new byte[]{ 1, 2 };
        ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
        BufferedInputStream bufferedInputStream = new BufferedInputStream(byteArrayInputStream);
        JavaCharStream javaCharStream = new JavaCharStream(bufferedInputStream, 1493, ((byte) (92)));
        javaCharStream.available = 0;
        javaCharStream.readChar();
    }
}
statement is: byte[] byteArray = new byte[]{ 1, 2 }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: byte[] byteArray = new byte[2] isAssignment: false Array: new byte[]{ 1, 2 } Elements: [1, 2]
lengths: [2] []
statement is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: java.io.ByteArrayInputStream([B)V
statement is: BufferedInputStream bufferedInputStream = new BufferedInputStream(byteArrayInputStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: java.io.BufferedInputStream(Ljava/io/InputStream;)V
statement is: JavaCharStream javaCharStream = new JavaCharStream(bufferedInputStream, 1493, ((byte) (92))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.available = 0, class spoon.support.reflect.code.CtAssignmentImpl
statement is: javaCharStream.readChar(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.readChar() target is: javaCharStream method is: readChar()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;II)V callee: VariableReference: Statement 3, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 2
Matched Method is: readChar()C
TestCase Could not be added: readChar()C
TestCase is: int _int = 1493;
int _int = 92;
JavaCharStream javaCharStream = new JavaCharStream((InputStream) _int, _int, (int) (byte)92);

statement is: org.evosuite.testcase.statements.ArrayStatement@6c368732 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[3]
statement is: org.evosuite.testcase.statements.AssignmentStatement@7b13e65d type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[1] = (byte)92
statement is: java.io.ByteArrayInputStream([B)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.ByteArrayInputStream
statement code is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(arg0)
statement is: java.io.BufferedInputStream(Ljava/io/InputStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.BufferedInputStream
statement code is: BufferedInputStream bufferedInputStream = new BufferedInputStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, (-552), (byte)92)
statement is: readChar()C type is: class org.evosuite.testcase.statements.MethodStatement return type char
statement code is: char readChar = javaCharStream.readChar()
statement is: readChar()C type is: class org.evosuite.testcase.statements.MethodStatement return type char
statement code is: char readChar = javaCharStream.readChar()
test data is: byte[] byteArray = new byte[3];
byteArray[1] = (byte)92;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
BufferedInputStream bufferedInputStream = new BufferedInputStream(byteArrayInputStream);
JavaCharStream javaCharStream = new JavaCharStream(bufferedInputStream, (-552), (byte)92);
javaCharStream.readChar();
javaCharStream.readChar();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        byte[] byteArray = new byte[]{ 104, 101, 108, 108, 111 };
        ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
        BufferedInputStream bufferedInputStream = new BufferedInputStream(byteArrayInputStream);
        JavaCharStream javaCharStream = new JavaCharStream(bufferedInputStream, -552, ((byte) (92)));
        javaCharStream.readChar();
        javaCharStream.readChar();
    }
}
statement is: byte[] byteArray = new byte[]{ 104, 101, 108, 108, 111 }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: byte[] byteArray = new byte[3] isAssignment: false Array: new byte[]{ 104, 101, 108, 108, 111 } Elements: [104, 101, 108, 108, 111]
lengths: [3] []
statement is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: java.io.ByteArrayInputStream([B)V
statement is: BufferedInputStream bufferedInputStream = new BufferedInputStream(byteArrayInputStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: java.io.BufferedInputStream(Ljava/io/InputStream;)V
statement is: JavaCharStream javaCharStream = new JavaCharStream(bufferedInputStream, -552, ((byte) (92))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.readChar(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.readChar() target is: javaCharStream method is: readChar()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;II)V callee: VariableReference: Statement 4, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 1
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;II)V callee: VariableReference: Statement 4, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 1
Matched Method is: readChar()C
TestCase Could not be added: readChar()C
statement is: javaCharStream.readChar(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.readChar() target is: javaCharStream method is: readChar()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;II)V callee: VariableReference: Statement 4, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 1
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;II)V callee: VariableReference: Statement 4, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 1
Matched Method is: readChar()C
TestCase Could not be added: readChar()C
TestCase is: int _int = 92;
JavaCharStream javaCharStream = new JavaCharStream((InputStream) _int, (-552), (int) (byte)92);

statement is: org.evosuite.testcase.statements.ArrayStatement@8df3f20d type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[3]
statement is: java.io.ByteArrayInputStream([B)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.ByteArrayInputStream
statement code is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(arg0)
statement is: java.io.BufferedInputStream(Ljava/io/InputStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.BufferedInputStream
statement code is: BufferedInputStream bufferedInputStream = new BufferedInputStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, (-552), (byte)92)
statement is: backup(I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: javaCharStream.backup((-552))
test data is: byte[] byteArray = new byte[3];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
BufferedInputStream bufferedInputStream = new BufferedInputStream(byteArrayInputStream);
JavaCharStream javaCharStream = new JavaCharStream(bufferedInputStream, (-552), (byte)92);
javaCharStream.backup((-552));

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        byte[] byteArray = new byte[]{ 0x1a, 0x3b, 0x5c };
        ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
        BufferedInputStream bufferedInputStream = new BufferedInputStream(byteArrayInputStream);
        JavaCharStream javaCharStream = new JavaCharStream(bufferedInputStream, -128, ((byte) (92)));
        javaCharStream.backup(-128);
    }
}
statement is: byte[] byteArray = new byte[]{ 0x1a, 0x3b, 0x5c }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: byte[] byteArray = new byte[3] isAssignment: false Array: new byte[]{ 0x1a, 0x3b, 0x5c } Elements: [0x1a, 0x3b, 0x5c]
lengths: [3] []
statement is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: java.io.ByteArrayInputStream([B)V
statement is: BufferedInputStream bufferedInputStream = new BufferedInputStream(byteArrayInputStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: java.io.BufferedInputStream(Ljava/io/InputStream;)V
statement is: JavaCharStream javaCharStream = new JavaCharStream(bufferedInputStream, -128, ((byte) (92))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.backup(-128), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.backup(-128) target is: javaCharStream method is: backup(int)
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;II)V callee: VariableReference: Statement 3, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 1
Matched Method is: backup(I)V
i 0 Parameters size() 0 Num of Method Parameters: 1
TestCase Could not be added: backup(I)V
* this is vulnerable: int _int = null
TestCase is: int _int = 92;
JavaCharStream javaCharStream = new JavaCharStream((InputStream) _int, (-552), (int) (byte)92);
int _int = null;

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("rdwxdh(")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;III)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, (byte)55, (byte)55, (byte)55)
statement is: ReInit(Ljava/io/Reader;III)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: javaCharStream.ReInit((Reader) arg0, 8, 4088, 2471)
statement is: ReInit(Ljava/io/Reader;III)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: javaCharStream.ReInit((Reader) arg0, (-41), (int) (byte)55, 2471)
test data is: StringReader stringReader = new StringReader("rdwxdh(");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (byte)55, (byte)55, (byte)55);
javaCharStream.ReInit((Reader) stringReader, 8, 4088, 2471);
javaCharStream.ReInit((Reader) stringReader, (-41), (int) (byte)55, 2471);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("rdwxdh(8, -41, 2000)");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, ((byte) (55)), ((byte) (55)), ((byte) (55)));
        javaCharStream.ReInit(((Reader) (stringReader)), 8, 4088, 2471);
        javaCharStream.ReInit(((Reader) (stringReader)), -41, ((int) ((byte) (55))), 2471);
    }
}
statement is: StringReader stringReader = new StringReader("rdwxdh(8, -41, 2000)"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, ((byte) (55)), ((byte) (55)), ((byte) (55))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.ReInit(((Reader) (stringReader)), 8, 4088, 2471), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.ReInit(((Reader) (stringReader)), 8, 4088, 2471) target is: javaCharStream method is: ReInit(Reader,int,int,int)
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;III)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 5
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;III)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 5
Matched Method is: ReInit(Ljava/io/Reader;III)V
statement is: javaCharStream.ReInit(((Reader) (stringReader)), -41, ((int) ((byte) (55))), 2471), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.ReInit(((Reader) (stringReader)), -41, ((int) ((byte) (55))), 2471) target is: javaCharStream method is: ReInit(Reader,int,int,int)
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;III)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 5
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;III)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 5
Matched Method is: ReInit(Ljava/io/Reader;III)V
i 3 Parameters size() 3 Num of Method Parameters: 4
TestCase is: String string = "rdwxdh(8, -41, 2000)";
StringReader stringReader = new StringReader(string);
int _int = 55;
int _int = 55;
int _int = 55;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int, _int);
int _int = 8;
int _int = 4088;
int _int = 2471;
((JavaCharStream) stringReader).ReInit((Reader) stringReader, _int, _int, _int);
int _int = 55;
int _int = 2471;
int _int = null;
((JavaCharStream) stringReader).ReInit((Reader) stringReader, _int, _int, _int);

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("Z#C/.=N>`")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;III)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 0, 72, 0)
statement is: GetImage()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String GetImage = javaCharStream.GetImage()
test data is: StringReader stringReader = new StringReader("Z#C/.=N>`");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 0, 72, 0);
javaCharStream.GetImage();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("A#B/.=C>`");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, 0, 10, 0);
        javaCharStream.GetImage();
    }
}
statement is: StringReader stringReader = new StringReader("A#B/.=C>`"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, 0, 10, 0), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.GetImage(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.GetImage() target is: javaCharStream method is: GetImage()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;III)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 5
Matched Method is: GetImage()Ljava/lang/String;
TestCase is: String string = "A#B/.=C>`";
StringReader stringReader = new StringReader(string);
int _int = 0;
int _int = 10;
int _int = 0;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int, _int);
((JavaCharStream) stringReader).GetImage();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("Invalid escape character at line ")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: ReadByte()C type is: class org.evosuite.testcase.statements.MethodStatement return type char
statement code is: char ReadByte = javaCharStream.ReadByte()
test data is: StringReader stringReader = new StringReader("Invalid escape character at line ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.ReadByte();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        int lineNumber = 3;
        StringReader stringReader = new StringReader("Invalid escape character at line " + lineNumber);
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        javaCharStream.ReadByte();
    }
}
statement is: int lineNumber = 3, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: StringReader stringReader = new StringReader("Invalid escape character at line " + lineNumber), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.ReadByte(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.ReadByte() target is: javaCharStream method is: ReadByte()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 2
Matched Method is: ReadByte()C
* this is vulnerable: int _int = 3
TestCase is: int _int = 3;
StringReader stringReader = new StringReader("Invalid escape character at line ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
((JavaCharStream) stringReader).ReadByte();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("]-7!F=t\"*dOi@y'9lyd")
statement is: read()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int read = stringReader.read()
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;III)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 98, 98, 2)
statement is: BeginToken()C type is: class org.evosuite.testcase.statements.MethodStatement return type char
statement code is: char BeginToken = javaCharStream.BeginToken()
statement is: ReadByte()C type is: class org.evosuite.testcase.statements.MethodStatement return type char
statement code is: char ReadByte = javaCharStream.ReadByte()
test data is: StringReader stringReader = new StringReader("]-7!F=t\"*dOi@y'9lyd");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 98, 98, 2);
javaCharStream.BeginToken();
javaCharStream.ReadByte();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("-7!F=t\"*dOi@y\'9lyd");
        stringReader.read();
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, 98, 98, 2);
        javaCharStream.BeginToken();
        javaCharStream.ReadByte();
    }
}
statement is: StringReader stringReader = new StringReader("-7!F=t\"*dOi@y\'9lyd"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: stringReader.read(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: stringReader.read() target is: stringReader method is: read()
source statement: java.io.StringReader(Ljava/lang/String;)V callee: VariableReference: Statement 0, type java.io.StringReaderindex is: 1
Matched Method is: read()I
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, 98, 98, 2), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.BeginToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.BeginToken() target is: javaCharStream method is: BeginToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;III)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 6
Matched Method is: BeginToken()C
statement is: javaCharStream.ReadByte(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.ReadByte() target is: javaCharStream method is: ReadByte()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;III)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 6
Matched Method is: ReadByte()C
TestCase is: String string = "-7!F=t\"*dOi@y'9lyd";
StringReader stringReader = new StringReader(string);
int read = ((StringReader) string).read();
int _int = 98;
int _int = 98;
int _int = 2;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int, _int);
((JavaCharStream) read).BeginToken();
((JavaCharStream) read).ReadByte();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("]-7!F=t\"*dOi@y'9lyd")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;III)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 98, 98, 2)
statement is: ReadByte()C type is: class org.evosuite.testcase.statements.MethodStatement return type char
statement code is: char ReadByte = javaCharStream.ReadByte()
test data is: StringReader stringReader = new StringReader("]-7!F=t\"*dOi@y'9lyd");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 98, 98, 2);
javaCharStream.ReadByte();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("Hello World");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, 10, 10, 2);
        javaCharStream.ReadByte();
    }
}
statement is: StringReader stringReader = new StringReader("Hello World"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, 10, 10, 2), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.ReadByte(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.ReadByte() target is: javaCharStream method is: ReadByte()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;III)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 5
Matched Method is: ReadByte()C
TestCase is: String string = "Hello World";
StringReader stringReader = new StringReader(string);
int _int = 10;
int _int = 10;
int _int = 2;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int, _int);
((JavaCharStream) stringReader).ReadByte();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader(" 7^,ht^y.r[")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 796, 2452)
statement is: adjustBeginLineColumn(II)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: javaCharStream.adjustBeginLineColumn(2452, (-1331))
statement is: getBeginColumn()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int beginColumn = javaCharStream.getBeginColumn()
test data is: StringReader stringReader = new StringReader(" 7^,ht^y.r[");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 796, 2452);
javaCharStream.adjustBeginLineColumn(2452, (-1331));
javaCharStream.getBeginColumn();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("7^,ht^y.r[");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, 796, 2452);
        javaCharStream.adjustBeginLineColumn(2452, -1331);
        javaCharStream.getBeginColumn();
    }
}
statement is: StringReader stringReader = new StringReader("7^,ht^y.r["), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, 796, 2452), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.adjustBeginLineColumn(2452, -1331), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.adjustBeginLineColumn(2452, -1331) target is: javaCharStream method is: adjustBeginLineColumn(int,int)
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 4
Matched Method is: adjustBeginLineColumn(II)V
i 1 Parameters size() 1 Num of Method Parameters: 2
statement is: javaCharStream.getBeginColumn(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.getBeginColumn() target is: javaCharStream method is: getBeginColumn()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 4
Matched Method is: getBeginColumn()I
TestCase is: String string = "7^,ht^y.r[";
StringReader stringReader = new StringReader(string);
int _int = 796;
int _int = 2452;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int);
int _int = 2452;
int _int = null;
((JavaCharStream) stringReader).adjustBeginLineColumn(_int, _int);
((JavaCharStream) stringReader).getBeginColumn();

statement is: java.io.PipedOutputStream()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.PipedOutputStream
statement code is: PipedOutputStream pipedOutputStream = new PipedOutputStream()
statement is: java.io.PipedInputStream(Ljava/io/PipedOutputStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.PipedInputStream
statement code is: PipedInputStream pipedInputStream = new PipedInputStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;III)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 86, 1604, 4096)
statement is: adjustBeginLineColumn(II)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: javaCharStream.adjustBeginLineColumn(2850, 4096)
statement is: getBeginColumn()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int beginColumn = javaCharStream.getBeginColumn()
test data is: PipedOutputStream pipedOutputStream = new PipedOutputStream();
PipedInputStream pipedInputStream = new PipedInputStream(pipedOutputStream);
JavaCharStream javaCharStream = new JavaCharStream(pipedInputStream, 86, 1604, 4096);
javaCharStream.adjustBeginLineColumn(2850, 4096);
javaCharStream.getBeginColumn();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        PipedOutputStream pipedOutputStream = new PipedOutputStream();
        PipedInputStream pipedInputStream = new PipedInputStream(pipedOutputStream);
        JavaCharStream javaCharStream = new JavaCharStream(pipedInputStream, 86, 1604, 4096);
        javaCharStream.adjustBeginLineColumn(2850, 4096);
        javaCharStream.getBeginColumn();
    }
}
statement is: PipedOutputStream pipedOutputStream = new PipedOutputStream(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: PipedInputStream pipedInputStream = new PipedInputStream(pipedOutputStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(pipedInputStream, 86, 1604, 4096), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.adjustBeginLineColumn(2850, 4096), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.adjustBeginLineColumn(2850, 4096) target is: javaCharStream method is: adjustBeginLineColumn(int,int)
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;III)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 5
Matched Method is: adjustBeginLineColumn(II)V
statement is: javaCharStream.getBeginColumn(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.getBeginColumn() target is: javaCharStream method is: getBeginColumn()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;III)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 5
Matched Method is: getBeginColumn()I
TestCase is: PipedOutputStream pipedOutputStream = new PipedOutputStream();
PipedInputStream pipedInputStream = new PipedInputStream(pipedOutputStream);
int _int = 86;
int _int = 1604;
int _int = 4096;
JavaCharStream javaCharStream = new JavaCharStream(pipedInputStream, _int, _int, _int);
int _int = 2850;
int _int = 4096;
((JavaCharStream) _int).adjustBeginLineColumn(_int, _int);
((JavaCharStream) _int).getBeginColumn();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("b")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;III)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, (-1), 129, 129)
statement is: BeginToken()C type is: class org.evosuite.testcase.statements.MethodStatement return type char
statement code is: char BeginToken = javaCharStream.BeginToken()
statement is: getBeginLine()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int beginLine = javaCharStream.getBeginLine()
test data is: StringReader stringReader = new StringReader("b");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-1), 129, 129);
javaCharStream.BeginToken();
javaCharStream.getBeginLine();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("This is a test case for the JavaCharStream class.");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, -1, 129, 129);
        javaCharStream.BeginToken();
        javaCharStream.getBeginLine();
    }
}
statement is: StringReader stringReader = new StringReader("This is a test case for the JavaCharStream class."), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, -1, 129, 129), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.BeginToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.BeginToken() target is: javaCharStream method is: BeginToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;III)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 4
Matched Method is: BeginToken()C
statement is: javaCharStream.getBeginLine(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.getBeginLine() target is: javaCharStream method is: getBeginLine()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;III)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 4
Matched Method is: getBeginLine()I
TestCase is: String string = "This is a test case for the JavaCharStream class.";
StringReader stringReader = new StringReader(string);
int _int = 129;
int _int = 129;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int, 129);
((JavaCharStream) stringReader).BeginToken();
((JavaCharStream) stringReader).getBeginLine();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("^Wqa U;!WsW'u0")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: readChar()C type is: class org.evosuite.testcase.statements.MethodStatement return type char
statement code is: char readChar = javaCharStream.readChar()
statement is: getBeginLine()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int beginLine = javaCharStream.getBeginLine()
test data is: StringReader stringReader = new StringReader("^Wqa U;!WsW'u0");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.readChar();
javaCharStream.getBeginLine();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("^Wqa U;!WsW'u0");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        javaCharStream.readChar();
        javaCharStream.getBeginLine();
    }
}
statement is: StringReader stringReader = new StringReader("^Wqa U;!WsW'u0"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.readChar(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.readChar() target is: javaCharStream method is: readChar()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 2
Matched Method is: readChar()C
statement is: javaCharStream.getBeginLine(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.getBeginLine() target is: javaCharStream method is: getBeginLine()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 2
Matched Method is: getBeginLine()I
TestCase is: String string = "^Wqa U;!WsW'u0";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
((JavaCharStream) stringReader).readChar();
((JavaCharStream) stringReader).getBeginLine();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("vN^xq9QX[<'X5o=a@U,")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;III)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 1168, (-3017), 1)
statement is: BeginToken()C type is: class org.evosuite.testcase.statements.MethodStatement return type char
statement code is: char BeginToken = javaCharStream.BeginToken()
statement is: getColumn()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int column = javaCharStream.getColumn()
test data is: StringReader stringReader = new StringReader("vN^xq9QX[<'X5o=a@U,");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1168, (-3017), 1);
javaCharStream.BeginToken();
javaCharStream.getColumn();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("The quick brown fox jumps over the lazy dog.");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1168, -3017, 1);
        javaCharStream.BeginToken();
        javaCharStream.getColumn();
    }
}
statement is: StringReader stringReader = new StringReader("The quick brown fox jumps over the lazy dog."), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1168, -3017, 1), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.BeginToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.BeginToken() target is: javaCharStream method is: BeginToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;III)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 4
Matched Method is: BeginToken()C
statement is: javaCharStream.getColumn(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.getColumn() target is: javaCharStream method is: getColumn()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;III)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 4
Matched Method is: getColumn()I
TestCase is: String string = "The quick brown fox jumps over the lazy dog.";
StringReader stringReader = new StringReader(string);
int _int = 1168;
int _int = 1;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int, 1);
((JavaCharStream) stringReader).BeginToken();
((JavaCharStream) stringReader).getColumn();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("sA")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: BeginToken()C type is: class org.evosuite.testcase.statements.MethodStatement return type char
statement code is: char BeginToken = javaCharStream.BeginToken()
statement is: getColumn()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int column = javaCharStream.getColumn()
test data is: StringReader stringReader = new StringReader("sA");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.BeginToken();
javaCharStream.getColumn();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("sA");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        javaCharStream.BeginToken();
        javaCharStream.getColumn();
        // Improved test data
        // Using a more descriptive and representative value for the column number
        int columnNumber = 3;
        javaCharStream.setColumn(columnNumber);
    }
}
statement is: StringReader stringReader = new StringReader("sA"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.BeginToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.BeginToken() target is: javaCharStream method is: BeginToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 2
Matched Method is: BeginToken()C
statement is: javaCharStream.getColumn(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.getColumn() target is: javaCharStream method is: getColumn()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 2
Matched Method is: getColumn()I
statement is: // Improved test data
// Using a more descriptive and representative value for the column number
int columnNumber = 3, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: javaCharStream.setColumn(columnNumber), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.setColumn(columnNumber) target is: javaCharStream method is: setColumn(int)
* this is vulnerable: int _int = 3
TestCase is: String string = "sA";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
((JavaCharStream) stringReader).BeginToken();
((JavaCharStream) stringReader).getColumn();
int _int = 3;

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: backup(I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: javaCharStream.backup(2)
statement is: getColumn()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int column = javaCharStream.getColumn()
test data is: StringReader stringReader = new StringReader("");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.backup(2);
javaCharStream.getColumn();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("This is a large string from a file or an input stream.");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        javaCharStream.backup(2);
        javaCharStream.getColumn();
        // Additional test cases:
        // Search for specific characters in the stream:
        javaCharStream.find('e');
        javaCharStream.find('l');
        javaCharStream.find('o');
        // Replace certain characters with others:
        javaCharStream.replace('o', '0');
        javaCharStream.replace('i', '1');
    }
}
statement is: StringReader stringReader = new StringReader("This is a large string from a file or an input stream."), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.backup(2), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.backup(2) target is: javaCharStream method is: backup(int)
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 2
Matched Method is: backup(I)V
statement is: javaCharStream.getColumn(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.getColumn() target is: javaCharStream method is: getColumn()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 2
Matched Method is: getColumn()I
statement is: // Additional test cases:
// Search for specific characters in the stream:
javaCharStream.find('e'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Additional test cases:
// Search for specific characters in the stream:
javaCharStream.find('e') target is: javaCharStream method is: find(char)
statement is: javaCharStream.find('l'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.find('l') target is: javaCharStream method is: find(char)
statement is: javaCharStream.find('o'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.find('o') target is: javaCharStream method is: find(char)
statement is: // Replace certain characters with others:
javaCharStream.replace('o', '0'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Replace certain characters with others:
javaCharStream.replace('o', '0') target is: javaCharStream method is: replace(char,char)
statement is: javaCharStream.replace('i', '1'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.replace('i', '1') target is: javaCharStream method is: replace(char,char)
TestCase is: String string = "This is a large string from a file or an input stream.";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
int _int = 2;
((JavaCharStream) stringReader).backup(_int);
((JavaCharStream) stringReader).getColumn();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("PJE")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 82, (-2858))
statement is: BeginToken()C type is: class org.evosuite.testcase.statements.MethodStatement return type char
statement code is: char BeginToken = javaCharStream.BeginToken()
statement is: getEndColumn()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int endColumn = javaCharStream.getEndColumn()
test data is: StringReader stringReader = new StringReader("PJE");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 82, (-2858));
javaCharStream.BeginToken();
javaCharStream.getEndColumn();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("PJE");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, 82, -2858);
        javaCharStream.BeginToken();
        javaCharStream.getEndColumn();
    }
}
statement is: StringReader stringReader = new StringReader("PJE"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, 82, -2858), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.BeginToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.BeginToken() target is: javaCharStream method is: BeginToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 3
Matched Method is: BeginToken()C
statement is: javaCharStream.getEndColumn(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.getEndColumn() target is: javaCharStream method is: getEndColumn()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 3
Matched Method is: getEndColumn()I
TestCase is: String string = "PJE";
StringReader stringReader = new StringReader(string);
int _int = 82;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, (-2858));
((JavaCharStream) stringReader).BeginToken();
((JavaCharStream) stringReader).getEndColumn();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader(" column ")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 82, 85)
statement is: BeginToken()C type is: class org.evosuite.testcase.statements.MethodStatement return type char
statement code is: char BeginToken = javaCharStream.BeginToken()
statement is: getEndColumn()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int endColumn = javaCharStream.getEndColumn()
test data is: StringReader stringReader = new StringReader(" column ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 82, 85);
javaCharStream.BeginToken();
javaCharStream.getEndColumn();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("column");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, 82, 85);
        javaCharStream.BeginToken();
        javaCharStream.getEndColumn();
    }
}
statement is: StringReader stringReader = new StringReader("column"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, 82, 85), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.BeginToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.BeginToken() target is: javaCharStream method is: BeginToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 4
Matched Method is: BeginToken()C
statement is: javaCharStream.getEndColumn(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.getEndColumn() target is: javaCharStream method is: getEndColumn()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 4
Matched Method is: getEndColumn()I
TestCase is: String string = "column";
StringReader stringReader = new StringReader(string);
int _int = 82;
int _int = 85;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int);
((JavaCharStream) stringReader).BeginToken();
((JavaCharStream) stringReader).getEndColumn();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader(" column ")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 82, 85)
statement is: backup(I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: javaCharStream.backup(85)
statement is: getEndColumn()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int endColumn = javaCharStream.getEndColumn()
test data is: StringReader stringReader = new StringReader(" column ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 82, 85);
javaCharStream.backup(85);
javaCharStream.getEndColumn();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader(" column ");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, 100, 105);
        javaCharStream.backup(105);
        javaCharStream.getEndColumn();
    }
}
statement is: StringReader stringReader = new StringReader(" column "), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, 100, 105), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.backup(105), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.backup(105) target is: javaCharStream method is: backup(int)
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 4
Matched Method is: backup(I)V
statement is: javaCharStream.getEndColumn(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.getEndColumn() target is: javaCharStream method is: getEndColumn()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 4
Matched Method is: getEndColumn()I
TestCase is: String string = " column ";
StringReader stringReader = new StringReader(string);
int _int = 100;
int _int = 105;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int);
int _int = 105;
((JavaCharStream) stringReader).backup(_int);
((JavaCharStream) stringReader).getEndColumn();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("]-7!F=\"*di@y'9ld")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;III)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, (byte) (-110), (byte)0, 3919)
statement is: BeginToken()C type is: class org.evosuite.testcase.statements.MethodStatement return type char
statement code is: char BeginToken = javaCharStream.BeginToken()
statement is: getEndLine()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int endLine = javaCharStream.getEndLine()
test data is: StringReader stringReader = new StringReader("]-7!F=\"*di@y'9ld");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (byte) (-110), (byte)0, 3919);
javaCharStream.BeginToken();
javaCharStream.getEndLine();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("]-7!F=\"*di@y\'9ld");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, ((byte) (-100)), ((byte) (0)), 3900);
        javaCharStream.BeginToken();
        javaCharStream.getEndLine();
    }
}
statement is: StringReader stringReader = new StringReader("]-7!F=\"*di@y\'9ld"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, ((byte) (-100)), ((byte) (0)), 3900), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.BeginToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.BeginToken() target is: javaCharStream method is: BeginToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;III)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 4
Matched Method is: BeginToken()C
statement is: javaCharStream.getEndLine(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.getEndLine() target is: javaCharStream method is: getEndLine()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;III)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 4
Matched Method is: getEndLine()I
TestCase is: String string = "]-7!F=\"*di@y'9ld";
StringReader stringReader = new StringReader(string);
int _int = 0;
int _int = 3900;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int, 3919);
((JavaCharStream) stringReader).BeginToken();
((JavaCharStream) stringReader).getEndLine();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("C[@rpu,N*Y@k=B;=")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;III)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 83, 1, 83)
statement is: BeginToken()C type is: class org.evosuite.testcase.statements.MethodStatement return type char
statement code is: char BeginToken = javaCharStream.BeginToken()
statement is: getEndLine()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int endLine = javaCharStream.getEndLine()
test data is: StringReader stringReader = new StringReader("C[@rpu,N*Y@k=B;=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 83, 1, 83);
javaCharStream.BeginToken();
javaCharStream.getEndLine();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("C[rpu,N*Y@k=B;=");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, 83, 1, 83);
        javaCharStream.BeginToken();
        javaCharStream.getEndLine();
        int lineNumber = javaCharStream.getEndLine();
    }
}
statement is: StringReader stringReader = new StringReader("C[rpu,N*Y@k=B;="), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, 83, 1, 83), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.BeginToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.BeginToken() target is: javaCharStream method is: BeginToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;III)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 5
Matched Method is: BeginToken()C
statement is: javaCharStream.getEndLine(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.getEndLine() target is: javaCharStream method is: getEndLine()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;III)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 5
Matched Method is: getEndLine()I
statement is: int lineNumber = javaCharStream.getEndLine(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.getEndLine() target is: javaCharStream method is: getEndLine()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;III)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 5
Matched Method is: getEndLine()I
TestCase is: String string = "C[rpu,N*Y@k=B;=";
StringReader stringReader = new StringReader(string);
int _int = 83;
int _int = 1;
int _int = 83;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int, _int);
((JavaCharStream) stringReader).BeginToken();
((JavaCharStream) stringReader).getEndLine();
((JavaCharStream) stringReader).getEndLine();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("]-7!F=\"*di@y'9ld")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;III)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 95, 95, 2)
statement is: org.evosuite.testcase.statements.AssignmentStatement@ac2e436b type is: class org.evosuite.testcase.statements.AssignmentStatement return type int
statement code is: javaCharStream.inBuf = 95
statement is: BeginToken()C type is: class org.evosuite.testcase.statements.MethodStatement return type char
statement code is: char BeginToken = javaCharStream.BeginToken()
statement is: getEndLine()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int endLine = javaCharStream.getEndLine()
test data is: StringReader stringReader = new StringReader("]-7!F=\"*di@y'9ld");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 95, 95, 2);
javaCharStream.inBuf = 95;
javaCharStream.BeginToken();
javaCharStream.getEndLine();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("Hello World");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1, 1, 2);
        javaCharStream.inBuf = 1;
        javaCharStream.BeginToken();
        javaCharStream.getEndLine();
    }
}
statement is: StringReader stringReader = new StringReader("Hello World"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1, 1, 2), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.inBuf = 1, class spoon.support.reflect.code.CtAssignmentImpl
statement is: javaCharStream.BeginToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.BeginToken() target is: javaCharStream method is: BeginToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;III)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 5
Matched Method is: BeginToken()C
statement is: javaCharStream.getEndLine(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.getEndLine() target is: javaCharStream method is: getEndLine()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;III)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 5
Matched Method is: getEndLine()I
TestCase is: String string = "Hello World";
StringReader stringReader = new StringReader(string);
int _int = 1;
int _int = 1;
int _int = 2;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int, _int);
((JavaCharStream) stringReader).BeginToken();
((JavaCharStream) stringReader).getEndLine();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("b")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;III)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, (-1), 129, 129)
statement is: readChar()C type is: class org.evosuite.testcase.statements.MethodStatement return type char
statement code is: char readChar = javaCharStream.readChar()
statement is: getLine()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int line = javaCharStream.getLine()
test data is: StringReader stringReader = new StringReader("b");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-1), 129, 129);
javaCharStream.readChar();
javaCharStream.getLine();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("The quick brown fox jumps over the lazy dog.");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, -1, 256, 256);
        javaCharStream.readChar();
        javaCharStream.getLine();
    }
}
statement is: StringReader stringReader = new StringReader("The quick brown fox jumps over the lazy dog."), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, -1, 256, 256), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.readChar(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.readChar() target is: javaCharStream method is: readChar()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;III)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 4
Matched Method is: readChar()C
statement is: javaCharStream.getLine(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.getLine() target is: javaCharStream method is: getLine()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;III)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 4
Matched Method is: getLine()I
TestCase is: String string = "The quick brown fox jumps over the lazy dog.";
StringReader stringReader = new StringReader(string);
int _int = 256;
int _int = 256;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int, 129);
((JavaCharStream) stringReader).readChar();
((JavaCharStream) stringReader).getLine();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("C7|WymBRD.75\"")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;III)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 421, 421, 95)
statement is: readChar()C type is: class org.evosuite.testcase.statements.MethodStatement return type char
statement code is: char readChar = javaCharStream.readChar()
statement is: getLine()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int line = javaCharStream.getLine()
test data is: StringReader stringReader = new StringReader("C7|WymBRD.75\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 421, 421, 95);
javaCharStream.readChar();
javaCharStream.getLine();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("C7|WymBRD.75\"");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, 421, 421, 95);
        javaCharStream.readChar();
        javaCharStream.getLine();
    }
}
statement is: StringReader stringReader = new StringReader("C7|WymBRD.75\""), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, 421, 421, 95), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.readChar(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.readChar() target is: javaCharStream method is: readChar()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;III)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 5
Matched Method is: readChar()C
statement is: javaCharStream.getLine(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.getLine() target is: javaCharStream method is: getLine()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;III)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 5
Matched Method is: getLine()I
TestCase is: String string = "C7|WymBRD.75\"";
StringReader stringReader = new StringReader(string);
int _int = 421;
int _int = 421;
int _int = 95;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int, _int);
((JavaCharStream) stringReader).readChar();
((JavaCharStream) stringReader).getLine();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("]-7!F=t\"*dOi@y'9lyd")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;III)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 95, 95, 2)
statement is: org.evosuite.testcase.statements.AssignmentStatement@27cb781 type is: class org.evosuite.testcase.statements.AssignmentStatement return type int
statement code is: javaCharStream.inBuf = 95
statement is: BeginToken()C type is: class org.evosuite.testcase.statements.MethodStatement return type char
statement code is: char BeginToken = javaCharStream.BeginToken()
statement is: getLine()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int line = javaCharStream.getLine()
test data is: StringReader stringReader = new StringReader("]-7!F=t\"*dOi@y'9lyd");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 95, 95, 2);
javaCharStream.inBuf = 95;
javaCharStream.BeginToken();
javaCharStream.getLine();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("This is a sample input for testing.");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, 95, 95, 2);
        javaCharStream.inBuf = 95;
        javaCharStream.BeginToken();
        javaCharStream.getLine();
    }
}
statement is: StringReader stringReader = new StringReader("This is a sample input for testing."), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, 95, 95, 2), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.inBuf = 95, class spoon.support.reflect.code.CtAssignmentImpl
statement is: javaCharStream.BeginToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.BeginToken() target is: javaCharStream method is: BeginToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;III)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 5
Matched Method is: BeginToken()C
statement is: javaCharStream.getLine(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.getLine() target is: javaCharStream method is: getLine()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;III)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 5
Matched Method is: getLine()I
TestCase is: String string = "This is a sample input for testing.";
StringReader stringReader = new StringReader(string);
int _int = 95;
int _int = 95;
int _int = 2;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int, _int);
((JavaCharStream) stringReader).BeginToken();
((JavaCharStream) stringReader).getLine();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("9x([j]`")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: readChar()C type is: class org.evosuite.testcase.statements.MethodStatement return type char
statement code is: char readChar = javaCharStream.readChar()
test data is: StringReader stringReader = new StringReader("9x([j]`");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.readChar();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data
        StringReader stringReader = new StringReader("This is a sample input for the JavaCharStream class.");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        javaCharStream.readChar();
    }
}
statement is: // Improved test data
StringReader stringReader = new StringReader("This is a sample input for the JavaCharStream class."), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.readChar(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.readChar() target is: javaCharStream method is: readChar()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 2
Matched Method is: readChar()C
TestCase is: String string = "This is a sample input for the JavaCharStream class.";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
((JavaCharStream) stringReader).readChar();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("]-7!F=\"*di@y'9ld")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: UpdateLineColumn(C)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: javaCharStream.UpdateLineColumn('a')
test data is: StringReader stringReader = new StringReader("]-7!F=\"*di@y'9ld");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.UpdateLineColumn('a');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("This is a test string.");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        javaCharStream.UpdateLineColumn('a');
    }
}
statement is: StringReader stringReader = new StringReader("This is a test string."), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.UpdateLineColumn('a'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.UpdateLineColumn('a') target is: javaCharStream method is: UpdateLineColumn(char)
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 2
Matched Method is: UpdateLineColumn(C)V
TestCase is: String string = "This is a test string.";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
char _char = 'a';
((JavaCharStream) stringReader).UpdateLineColumn(_char);

* test suite isTestSuite: 205
Test 0: 
byte[] byteArray = new byte[8];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, 1493, (-1));
StringReader stringReader = new StringReader("pWtrdn]pAxbUP");
javaCharStream.ReInit((Reader) stringReader);
Test 1: 
StringReader stringReader = new StringReader(" 7^,ht^y.r[");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 796, 2452);
javaCharStream.getBeginColumn();
Test 2: 
byte[] byteArray = new byte[0];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
SequenceInputStream sequenceInputStream = new SequenceInputStream(byteArrayInputStream, byteArrayInputStream);
JavaCharStream javaCharStream = new JavaCharStream(sequenceInputStream, 0, 0, 0);
javaCharStream.ReInit((InputStream) sequenceInputStream);
Test 3: 
StringReader stringReader = new StringReader("C7|WymBRD.75\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.ReInit((Reader) stringReader, (-2691), 1);
Test 4: 
StringReader stringReader = new StringReader("([k]");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.getBeginLine();
Test 5: 
JavaCharStream.hexval('0');
Test 6: 
JavaCharStream.hexval('7');
Test 7: 
JavaCharStream.hexval('1');
Test 8: 
JavaCharStream.hexval('2');
Test 9: 
JavaCharStream.hexval('3');
Test 10: 
JavaCharStream.hexval('4');
Test 11: 
JavaCharStream.hexval('5');
Test 12: 
JavaCharStream.hexval('6');
Test 13: 
JavaCharStream.hexval('8');
Test 14: 
JavaCharStream.hexval('9');
Test 15: 
try { 
  JavaCharStream.hexval(':');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 16: 
try { 
  JavaCharStream.hexval(';');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 17: 
try { 
  JavaCharStream.hexval('<');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 18: 
try { 
  JavaCharStream.hexval('=');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 19: 
try { 
  JavaCharStream.hexval('>');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 20: 
try { 
  JavaCharStream.hexval('?');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 21: 
try { 
  JavaCharStream.hexval('@');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 22: 
JavaCharStream.hexval('A');
Test 23: 
JavaCharStream.hexval('B');
Test 24: 
JavaCharStream.hexval('C');
Test 25: 
JavaCharStream.hexval('D');
Test 26: 
JavaCharStream.hexval('E');
Test 27: 
JavaCharStream.hexval('F');
Test 28: 
try { 
  JavaCharStream.hexval('G');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 29: 
try { 
  JavaCharStream.hexval('H');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 30: 
try { 
  JavaCharStream.hexval('I');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 31: 
try { 
  JavaCharStream.hexval('J');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 32: 
try { 
  JavaCharStream.hexval('K');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 33: 
try { 
  JavaCharStream.hexval('L');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 34: 
try { 
  JavaCharStream.hexval('M');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 35: 
try { 
  JavaCharStream.hexval('N');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 36: 
try { 
  JavaCharStream.hexval('O');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 37: 
try { 
  JavaCharStream.hexval('P');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 38: 
try { 
  JavaCharStream.hexval('Q');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 39: 
try { 
  JavaCharStream.hexval('R');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 40: 
try { 
  JavaCharStream.hexval('S');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 41: 
try { 
  JavaCharStream.hexval('T');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 42: 
try { 
  JavaCharStream.hexval('U');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 43: 
try { 
  JavaCharStream.hexval('V');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 44: 
try { 
  JavaCharStream.hexval('W');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 45: 
try { 
  JavaCharStream.hexval('X');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 46: 
try { 
  JavaCharStream.hexval('Y');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 47: 
try { 
  JavaCharStream.hexval('Z');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 48: 
try { 
  JavaCharStream.hexval('[');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 49: 
try { 
  JavaCharStream.hexval('\\');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 50: 
try { 
  JavaCharStream.hexval(']');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 51: 
try { 
  JavaCharStream.hexval('^');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 52: 
try { 
  JavaCharStream.hexval('_');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 53: 
try { 
  JavaCharStream.hexval('`');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 54: 
JavaCharStream.hexval('a');
Test 55: 
JavaCharStream.hexval('b');
Test 56: 
JavaCharStream.hexval('c');
Test 57: 
JavaCharStream.hexval('d');
Test 58: 
JavaCharStream.hexval('e');
Test 59: 
JavaCharStream.hexval('f');
Test 60: 
try { 
  JavaCharStream.hexval('n');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 61: 
StringReader stringReader = new StringReader("b");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-1), 129, 129);
javaCharStream.AdjustBuffSize();
Test 62: 
StringReader stringReader = new StringReader("C7|WymBRD.75\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 165, 165, 165);
// Undeclared exception!
try { 
  javaCharStream.ExpandBuff(true);
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 63: 
StringReader stringReader = new StringReader("");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
try { 
  javaCharStream.BeginToken();
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 64: 
PipedInputStream pipedInputStream = new PipedInputStream(450);
JavaCharStream javaCharStream = new JavaCharStream(pipedInputStream, 520, 520);
try { 
  javaCharStream.FillBuff();
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // Pipe not connected
   //
   verifyException("java.io.PipedInputStream", e);
}

Test 65: 
StringReader stringReader = new StringReader("C7|WymBRD.75\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.BeginToken();
javaCharStream.BeginToken();
Test 66: 
StringReader stringReader = new StringReader("E]HoO;7");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 129, 2358, 129);
javaCharStream.available = 78;
javaCharStream.AdjustBuffSize();
Test 67: 
byte[] byteArray = new byte[0];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
BufferedInputStream bufferedInputStream = new BufferedInputStream(byteArrayInputStream);
JavaCharStream javaCharStream = new JavaCharStream(bufferedInputStream, (-552), 13);
javaCharStream.backup(13);
javaCharStream.BeginToken();
javaCharStream.AdjustBuffSize();
Test 68: 
byte[] byteArray = new byte[3];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
BufferedInputStream bufferedInputStream = new BufferedInputStream(byteArrayInputStream);
JavaCharStream javaCharStream = new JavaCharStream(bufferedInputStream, 0, (byte)7);
javaCharStream.prevCharIsLF = true;
javaCharStream.BeginToken();
Test 69: 
StringReader stringReader = new StringReader("iYEp3djXv:u'");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.prevCharIsCR = true;
javaCharStream.BeginToken();
Test 70: 
StringReader stringReader = new StringReader("]-7!F=t\"*dOi@y'9lyd");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 107, 107, 107);
javaCharStream.backup(107);
javaCharStream.readChar();
Test 71: 
StringReader stringReader = new StringReader("]-7!F=\"*di@y'9ld");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 95, 95, 2);
javaCharStream.inBuf = 95;
javaCharStream.BeginToken();
javaCharStream.BeginToken();
javaCharStream.readChar();
Test 72: 
byte[] byteArray = new byte[2];
byteArray[0] = (byte)92;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
BufferedInputStream bufferedInputStream = new BufferedInputStream(byteArrayInputStream);
JavaCharStream javaCharStream = new JavaCharStream(bufferedInputStream);
javaCharStream.BeginToken();
Test 73: 
byte[] byteArray = new byte[3];
byteArray[1] = (byte)92;
byteArray[2] = (byte)92;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, (-1), (byte)92);
javaCharStream.BeginToken();
javaCharStream.readChar();
Test 74: 
byte[] byteArray = new byte[2];
byteArray[1] = (byte)92;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
BufferedInputStream bufferedInputStream = new BufferedInputStream(byteArrayInputStream);
JavaCharStream javaCharStream = new JavaCharStream(bufferedInputStream, 1493, (-673));
javaCharStream.BeginToken();
javaCharStream.readChar();
Test 75: 
byte[] byteArray = new byte[0];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
SequenceInputStream sequenceInputStream = new SequenceInputStream(byteArrayInputStream, byteArrayInputStream);
JavaCharStream javaCharStream = new JavaCharStream(sequenceInputStream, 0, 0, 0);
javaCharStream.Done();
javaCharStream.ReInit((InputStream) byteArrayInputStream, 1, 3997);
Test 76: 
byte[] byteArray = new byte[6];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, 1493, (-1));
javaCharStream.BeginToken();
javaCharStream.GetImage();
Test 77: 
StringReader stringReader = new StringReader("");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.GetSuffix(2048);
Test 78: 
StringReader stringReader = new StringReader("C7|WymBRD.75\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 0, 1440, 4989);
javaCharStream.GetSuffix(0);
Test 79: 
StringReader stringReader = new StringReader("ZiNw)^eie6.hMz:M");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.readChar();
javaCharStream.adjustBeginLineColumn(8, 8);
Test 80: 
StringReader stringReader = new StringReader(" column ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 82, 85);
javaCharStream.adjustBeginLineColumn(0, 117);
Test 81: 
StringReader stringReader = new StringReader("^Wqa U;!WsW'u0");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.adjustBeginLineColumn((-2490), 14);
javaCharStream.adjustBeginLineColumn(83, (-1));
Test 82: 
StringReader stringReader = new StringReader("+a[<");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
byte[] byteArray = new byte[2];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray, (byte)122, (byte)122);
javaCharStream.ReInit((InputStream) byteArrayInputStream, 0, (int) (byte)122, 0);
Test 83: 
byte[] byteArray = new byte[6];
byteArray[0] = (byte)13;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
BufferedInputStream bufferedInputStream = new BufferedInputStream(byteArrayInputStream);
JavaCharStream javaCharStream = new JavaCharStream(bufferedInputStream, (byte)13, (-1));
javaCharStream.BeginToken();
Test 84: 
byte[] byteArray = new byte[2];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
BufferedInputStream bufferedInputStream = new BufferedInputStream(byteArrayInputStream);
JavaCharStream javaCharStream = new JavaCharStream(bufferedInputStream, 1493, (byte)92);
javaCharStream.available = (int) (byte)0;
javaCharStream.readChar();
Test 85: 
byte[] byteArray = new byte[3];
byteArray[1] = (byte)92;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
BufferedInputStream bufferedInputStream = new BufferedInputStream(byteArrayInputStream);
JavaCharStream javaCharStream = new JavaCharStream(bufferedInputStream, (-552), (byte)92);
javaCharStream.readChar();
javaCharStream.readChar();
Test 86: 
byte[] byteArray = new byte[3];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
BufferedInputStream bufferedInputStream = new BufferedInputStream(byteArrayInputStream);
JavaCharStream javaCharStream = new JavaCharStream(bufferedInputStream, (-552), (byte)92);
javaCharStream.backup((-552));
Test 87: 
StringReader stringReader = new StringReader("rdwxdh(");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (byte)55, (byte)55, (byte)55);
javaCharStream.ReInit((Reader) stringReader, 8, 4088, 2471);
javaCharStream.ReInit((Reader) stringReader, (-41), (int) (byte)55, 2471);
Test 88: 
StringReader stringReader = new StringReader("Z#C/.=N>`");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 0, 72, 0);
javaCharStream.GetImage();
Test 89: 
StringReader stringReader = new StringReader("Invalid escape character at line ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.ReadByte();
Test 90: 
StringReader stringReader = new StringReader("]-7!F=t\"*dOi@y'9lyd");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 98, 98, 2);
javaCharStream.BeginToken();
javaCharStream.ReadByte();
Test 91: 
StringReader stringReader = new StringReader("]-7!F=t\"*dOi@y'9lyd");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 98, 98, 2);
javaCharStream.ReadByte();
Test 92: 
StringReader stringReader = new StringReader(" 7^,ht^y.r[");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 796, 2452);
javaCharStream.adjustBeginLineColumn(2452, (-1331));
javaCharStream.getBeginColumn();
Test 93: 
PipedOutputStream pipedOutputStream = new PipedOutputStream();
PipedInputStream pipedInputStream = new PipedInputStream(pipedOutputStream);
JavaCharStream javaCharStream = new JavaCharStream(pipedInputStream, 86, 1604, 4096);
javaCharStream.adjustBeginLineColumn(2850, 4096);
javaCharStream.getBeginColumn();
Test 94: 
StringReader stringReader = new StringReader("b");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-1), 129, 129);
javaCharStream.BeginToken();
javaCharStream.getBeginLine();
Test 95: 
StringReader stringReader = new StringReader("^Wqa U;!WsW'u0");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.readChar();
javaCharStream.getBeginLine();
Test 96: 
StringReader stringReader = new StringReader("vN^xq9QX[<'X5o=a@U,");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1168, (-3017), 1);
javaCharStream.BeginToken();
javaCharStream.getColumn();
Test 97: 
StringReader stringReader = new StringReader("sA");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.BeginToken();
javaCharStream.getColumn();
Test 98: 
StringReader stringReader = new StringReader("");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.backup(2);
javaCharStream.getColumn();
Test 99: 
StringReader stringReader = new StringReader("PJE");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 82, (-2858));
javaCharStream.BeginToken();
javaCharStream.getEndColumn();
Test 100: 
StringReader stringReader = new StringReader(" column ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 82, 85);
javaCharStream.BeginToken();
javaCharStream.getEndColumn();
Test 101: 
StringReader stringReader = new StringReader(" column ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 82, 85);
javaCharStream.backup(85);
javaCharStream.getEndColumn();
Test 102: 
StringReader stringReader = new StringReader("]-7!F=\"*di@y'9ld");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (byte) (-110), (byte)0, 3919);
javaCharStream.BeginToken();
javaCharStream.getEndLine();
Test 103: 
StringReader stringReader = new StringReader("C[@rpu,N*Y@k=B;=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 83, 1, 83);
javaCharStream.BeginToken();
javaCharStream.getEndLine();
Test 104: 
StringReader stringReader = new StringReader("]-7!F=\"*di@y'9ld");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 95, 95, 2);
javaCharStream.inBuf = 95;
javaCharStream.BeginToken();
javaCharStream.getEndLine();
Test 105: 
StringReader stringReader = new StringReader("b");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-1), 129, 129);
javaCharStream.readChar();
javaCharStream.getLine();
Test 106: 
StringReader stringReader = new StringReader("C7|WymBRD.75\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 421, 421, 95);
javaCharStream.readChar();
javaCharStream.getLine();
Test 107: 
StringReader stringReader = new StringReader("]-7!F=t\"*dOi@y'9lyd");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 95, 95, 2);
javaCharStream.inBuf = 95;
javaCharStream.BeginToken();
javaCharStream.getLine();
Test 108: 
StringReader stringReader = new StringReader("9x([j]`");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.readChar();
Test 109: 
StringReader stringReader = new StringReader("]-7!F=\"*di@y'9ld");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
// Undeclared exception!
try { 
  javaCharStream.UpdateLineColumn('a');
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // -1
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 110: 
JavaCharStream javaCharStream = new JavaCharStream((InputStream) 1493, 1493, (-1));
String string = "pWtrdn]pAxbUP";
StringReader stringReader = new StringReader(string);
((JavaCharStream) string).ReInit((Reader) stringReader);

Test 111: 
StringReader stringReader = new StringReader("The quick brown fox jumps over the lazy dog.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 10, 34);
((JavaCharStream) stringReader).getBeginColumn();

Test 112: 
JavaCharStream javaCharStream = new JavaCharStream((InputStream) 0, 0, 0, 0);
SequenceInputStream sequenceInputStream = null;
javaCharStream.ReInit((InputStream) sequenceInputStream);

Test 113: 
StringReader stringReader = new StringReader("C7|WymBRD.75\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
((JavaCharStream) stringReader).ReInit((Reader) stringReader, 2691, 1);

Test 114: 
StringReader stringReader = new StringReader("([k]");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
((JavaCharStream) stringReader).getBeginLine();

Test 115: 
JavaCharStream.hexval('a');

Test 116: 
JavaCharStream.hexval('A');
JavaCharStream.hexval('a');
JavaCharStream.hexval('0');

Test 117: 
JavaCharStream.hexval('a');
JavaCharStream.hexval('A');
JavaCharStream.hexval('$');
char _char = '@';
JavaCharStream.hexval(_char);

Test 118: 
JavaCharStream.hexval('A');
JavaCharStream.hexval('a');
JavaCharStream.hexval('F');
JavaCharStream.hexval('f');

Test 119: 
JavaCharStream.hexval('A');

Test 120: 
JavaCharStream.hexval((char) 8);

Test 121: 
JavaCharStream.hexval(':');

Test 122: 
JavaCharStream.hexval(';');
char _char = 'F';
JavaCharStream.hexval(_char);
char _char = 'z';
JavaCharStream.hexval(_char);

Test 123: 
JavaCharStream.hexval('&');

Test 124: 
JavaCharStream.hexval('F');

Test 125: 
JavaCharStream.hexval('a');

Test 126: 
JavaCharStream.hexval('A');

Test 127: 
JavaCharStream.hexval('A');

Test 128: 
JavaCharStream.hexval('1');

Test 129: 
char _char = 'a';
String string = "hello";
JavaCharStream.hexval((char) 4660);
JavaCharStream.hexval(_char);
JavaCharStream.hexval((char) string);

Test 130: 
JavaCharStream.hexval('0');
JavaCharStream.hexval('a');
JavaCharStream.hexval('A');
JavaCharStream.hexval('f');
JavaCharStream.hexval('F');
JavaCharStream.hexval('x');

Test 131: 
JavaCharStream.hexval('1');

Test 132: 
JavaCharStream.hexval('A');

Test 133: 
JavaCharStream.hexval('A');

Test 134: 
JavaCharStream.hexval('H');

Test 135: 
JavaCharStream.hexval('A');
JavaCharStream.hexval('F');
JavaCharStream.hexval('a');
JavaCharStream.hexval('f');

Test 136: 
JavaCharStream.hexval('B');

Test 137: 
JavaCharStream.hexval('A');
JavaCharStream.hexval('F');
JavaCharStream.hexval('a');
JavaCharStream.hexval('f');
JavaCharStream.hexval('0');
JavaCharStream.hexval('9');

Test 138: 
JavaCharStream.hexval('A');

Test 139: 
JavaCharStream.hexval('F');

Test 140: 
String string = "20";
JavaCharStream.hexval((char) 32);
JavaCharStream.hexval((char) string);

Test 141: 
JavaCharStream.hexval('a');

Test 142: 

Test 143: 
JavaCharStream.hexval('G');

Test 144: 
JavaCharStream.hexval('A');
JavaCharStream.hexval('F');
JavaCharStream.hexval('1');
JavaCharStream.hexval('9');
JavaCharStream.hexval('a');
JavaCharStream.hexval('f');
JavaCharStream.hexval('0');
JavaCharStream.hexval('8');

Test 145: 
JavaCharStream.hexval('\u03C0');

Test 146: 
JavaCharStream.hexval('A');
JavaCharStream.hexval('B');
JavaCharStream.hexval('C');
JavaCharStream.hexval('D');
JavaCharStream.hexval('E');

Test 147: 
JavaCharStream.hexval('\\');

Test 148: 
JavaCharStream.hexval((char) 93);

Test 149: 
JavaCharStream.hexval('`');
char _char = '`';
JavaCharStream.hexval(_char);

Test 150: 
JavaCharStream.hexval('A');

Test 151: 
JavaCharStream.hexval('A');

Test 152: 
JavaCharStream.hexval('E');

Test 153: 
JavaCharStream.hexval('f');

Test 154: 
JavaCharStream.hexval('f');

Test 155: 
JavaCharStream.hexval('a');
JavaCharStream.hexval('b');
JavaCharStream.hexval('c');
JavaCharStream.hexval('d');
JavaCharStream.hexval('e');
JavaCharStream.hexval('f');

Test 156: 
JavaCharStream.hexval((char) 110);

Test 157: 
StringReader stringReader = new StringReader("This is a sample text");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1024, 1024, 129);
((JavaCharStream) stringReader).AdjustBuffSize();

Test 158: 
StringReader stringReader = new StringReader("C7|WymBRD.75\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 165, 165, 165);
((JavaCharStream) stringReader).ExpandBuff(true);

Test 159: 
StringReader stringReader = new StringReader("This is a test String");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
((JavaCharStream) stringReader).BeginToken();

Test 160: 
PipedInputStream pipedInputStream = new PipedInputStream(450);
JavaCharStream javaCharStream = new JavaCharStream(pipedInputStream, 520, 520);
javaCharStream.FillBuff();

Test 161: 
StringReader stringReader = new StringReader("Hello World");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
((JavaCharStream) stringReader).BeginToken();
((JavaCharStream) stringReader).BeginToken();

Test 162: 
StringReader stringReader = new StringReader("E]HoO;7");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 129, 2358, 129);
((JavaCharStream) stringReader).AdjustBuffSize();

Test 163: 
JavaCharStream javaCharStream = new JavaCharStream((InputStream) 13, (-552), 13);

Test 164: 
JavaCharStream javaCharStream = new JavaCharStream((InputStream) 0, 7, (int) (byte)7);

Test 165: 
StringReader stringReader = new StringReader("Hello world! This is a sample string for testing purposes.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
((JavaCharStream) stringReader).BeginToken();

Test 166: 
StringReader stringReader = new StringReader("7!F=t\"*dOi@y'9lyd");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 107, 107, 107);
((JavaCharStream) stringReader).backup(107);
((JavaCharStream) stringReader).readChar();

Test 167: 
StringReader stringReader = new StringReader("This is a test sentence.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 0, 0, 2);
((JavaCharStream) stringReader).BeginToken();
((JavaCharStream) stringReader).BeginToken();
((JavaCharStream) stringReader).readChar();

Test 168: 
JavaCharStream javaCharStream = new JavaCharStream((InputStream) 92, (-1), (int) (byte)92);

Test 169: 
byte[] byteArray = new byte[2];
byteArray[1] = (byte) 97;
byteArray[1] = (byte) 92;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
BufferedInputStream bufferedInputStream = new BufferedInputStream(byteArrayInputStream);
JavaCharStream javaCharStream = new JavaCharStream(bufferedInputStream, 1493, (-673));
((JavaCharStream)(byte)92).BeginToken();
((JavaCharStream) byteArray[1]).readChar();

Test 170: 
JavaCharStream javaCharStream = new JavaCharStream((InputStream) 0, 0, 0, 0);
javaCharStream.Done();
int _int = 1;
int _int = 3997;
int _int = null;
javaCharStream.ReInit((InputStream) _int, _int, _int);

Test 171: 
JavaCharStream javaCharStream = new JavaCharStream((InputStream) 1493, 1493, (-1));

Test 172: 
StringReader stringReader = new StringReader("This is a sample text for testing purposes");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
((JavaCharStream) stringReader).GetSuffix(2048);

Test 173: 
StringReader stringReader = new StringReader("C7|WymBRD.75\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 0, 1440, 4989);
((JavaCharStream) stringReader).GetSuffix(0);

Test 174: 
StringReader stringReader = new StringReader("This is a test string for the JavaCC parser.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
((JavaCharStream) stringReader).readChar();
int _int = 8;
int _int = 8;
((JavaCharStream) stringReader).adjustBeginLineColumn(_int, _int);

Test 175: 
StringReader stringReader = new StringReader(" column ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 82, 85);
((JavaCharStream) stringReader).adjustBeginLineColumn(0, 117);

Test 176: 
StringReader stringReader = new StringReader("^Wqa U;!WsW'u0");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
((JavaCharStream) stringReader).adjustBeginLineColumn(14, (int) (Integer) null);
int _int = 83;
int _int = null;
((JavaCharStream) stringReader).adjustBeginLineColumn(_int, _int);

Test 177: 
StringReader stringReader = new StringReader("+a[<");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
byte[] byteArray = new byte[2];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray, 97, 122);
((JavaCharStream) stringReader).ReInit((InputStream) byteArrayInputStream, 0, 122, 0);

Test 178: 
JavaCharStream javaCharStream = new JavaCharStream((InputStream) 13, (int) (byte)13, (-1));

Test 179: 
JavaCharStream javaCharStream = new JavaCharStream((InputStream) 1493, 92, (int) (byte)92);

Test 180: 
JavaCharStream javaCharStream = new JavaCharStream((InputStream) 92, (-552), (int) (byte)92);

Test 181: 
JavaCharStream javaCharStream = new JavaCharStream((InputStream) 92, (-552), (int) (byte)92);

Test 182: 
StringReader stringReader = new StringReader("rdwxdh(8, -41, 2000)");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 55, 55, 55);
((JavaCharStream) stringReader).ReInit((Reader) stringReader, 8, 4088, 2471);
int _int = 55;
int _int = 2471;
int _int = null;
((JavaCharStream) stringReader).ReInit((Reader) stringReader, _int, _int, _int);

Test 183: 
StringReader stringReader = new StringReader("A#B/.=C>`");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 0, 10, 0);
((JavaCharStream) stringReader).GetImage();

Test 184: 
StringReader stringReader = new StringReader("Invalid escape character at line ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
((JavaCharStream) stringReader).ReadByte();

Test 185: 
StringReader stringReader = new StringReader("-7!F=t\"*dOi@y'9lyd");
int read = ((StringReader)"-7!F=t\"*dOi@y'9lyd").read();
int _int = 98;
int _int = 98;
int _int = 2;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int, _int);
((JavaCharStream) read).BeginToken();
((JavaCharStream) read).ReadByte();

Test 186: 
StringReader stringReader = new StringReader("Hello World");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 10, 10, 2);
((JavaCharStream) stringReader).ReadByte();

Test 187: 
StringReader stringReader = new StringReader("7^,ht^y.r[");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 796, 2452);
((JavaCharStream) stringReader).adjustBeginLineColumn(2452, (int) (Integer) null);
((JavaCharStream) stringReader).getBeginColumn();

Test 188: 
PipedOutputStream pipedOutputStream = new PipedOutputStream();
PipedInputStream pipedInputStream = new PipedInputStream(pipedOutputStream);
int _int = 86;
JavaCharStream javaCharStream = new JavaCharStream(pipedInputStream, 86, 1604, 4096);
((JavaCharStream)86).adjustBeginLineColumn(2850, 4096);
((JavaCharStream) _int).getBeginColumn();

Test 189: 
StringReader stringReader = new StringReader("This is a test case for the JavaCharStream class.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 129, 129, 129);
((JavaCharStream) stringReader).BeginToken();
((JavaCharStream) stringReader).getBeginLine();

Test 190: 
StringReader stringReader = new StringReader("^Wqa U;!WsW'u0");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
((JavaCharStream) stringReader).readChar();
((JavaCharStream) stringReader).getBeginLine();

Test 191: 
StringReader stringReader = new StringReader("The quick brown fox jumps over the lazy dog.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1168, 1, 1);
((JavaCharStream) stringReader).BeginToken();
((JavaCharStream) stringReader).getColumn();

Test 192: 
StringReader stringReader = new StringReader("sA");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
((JavaCharStream) stringReader).BeginToken();
((JavaCharStream) stringReader).getColumn();

Test 193: 
StringReader stringReader = new StringReader("This is a large string from a file or an input stream.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
((JavaCharStream) stringReader).backup(2);
((JavaCharStream) stringReader).getColumn();

Test 194: 
StringReader stringReader = new StringReader("PJE");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 82, (-2858));
((JavaCharStream) stringReader).BeginToken();
((JavaCharStream) stringReader).getEndColumn();

Test 195: 
StringReader stringReader = new StringReader("column");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 82, 85);
((JavaCharStream) stringReader).BeginToken();
((JavaCharStream) stringReader).getEndColumn();

Test 196: 
StringReader stringReader = new StringReader(" column ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 100, 105);
((JavaCharStream) stringReader).backup(105);
((JavaCharStream) stringReader).getEndColumn();

Test 197: 
StringReader stringReader = new StringReader("]-7!F=\"*di@y'9ld");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 0, 3900, 3919);
((JavaCharStream) stringReader).BeginToken();
((JavaCharStream) stringReader).getEndLine();

Test 198: 
StringReader stringReader = new StringReader("C[rpu,N*Y@k=B;=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 83, 1, 83);
((JavaCharStream) stringReader).BeginToken();
((JavaCharStream) stringReader).getEndLine();
((JavaCharStream) stringReader).getEndLine();

Test 199: 
StringReader stringReader = new StringReader("Hello World");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1, 1, 2);
((JavaCharStream) stringReader).BeginToken();
((JavaCharStream) stringReader).getEndLine();

Test 200: 
StringReader stringReader = new StringReader("The quick brown fox jumps over the lazy dog.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 256, 256, 129);
((JavaCharStream) stringReader).readChar();
((JavaCharStream) stringReader).getLine();

Test 201: 
StringReader stringReader = new StringReader("C7|WymBRD.75\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 421, 421, 95);
((JavaCharStream) stringReader).readChar();
((JavaCharStream) stringReader).getLine();

Test 202: 
StringReader stringReader = new StringReader("This is a sample input for testing.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 95, 95, 2);
((JavaCharStream) stringReader).BeginToken();
((JavaCharStream) stringReader).getLine();

Test 203: 
StringReader stringReader = new StringReader("This is a sample input for the JavaCharStream class.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
((JavaCharStream) stringReader).readChar();

Test 204: 
StringReader stringReader = new StringReader("This is a test string.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
((JavaCharStream) stringReader).UpdateLineColumn('a');


* Generated after the refinement and before minimization 205 tests with total length 573
* test suite isTestSuite: 205
Test 0: 
byte[] byteArray = new byte[8];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, 1493, (-1));
StringReader stringReader = new StringReader("pWtrdn]pAxbUP");
javaCharStream.ReInit((Reader) stringReader);
Test 1: 
StringReader stringReader = new StringReader(" 7^,ht^y.r[");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 796, 2452);
javaCharStream.getBeginColumn();
Test 2: 
byte[] byteArray = new byte[0];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
SequenceInputStream sequenceInputStream = new SequenceInputStream(byteArrayInputStream, byteArrayInputStream);
JavaCharStream javaCharStream = new JavaCharStream(sequenceInputStream, 0, 0, 0);
javaCharStream.ReInit((InputStream) sequenceInputStream);
Test 3: 
StringReader stringReader = new StringReader("C7|WymBRD.75\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.ReInit((Reader) stringReader, (-2691), 1);
Test 4: 
StringReader stringReader = new StringReader("([k]");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.getBeginLine();
Test 5: 
JavaCharStream.hexval('0');
Test 6: 
JavaCharStream.hexval('7');
Test 7: 
JavaCharStream.hexval('1');
Test 8: 
JavaCharStream.hexval('2');
Test 9: 
JavaCharStream.hexval('3');
Test 10: 
JavaCharStream.hexval('4');
Test 11: 
JavaCharStream.hexval('5');
Test 12: 
JavaCharStream.hexval('6');
Test 13: 
JavaCharStream.hexval('8');
Test 14: 
JavaCharStream.hexval('9');
Test 15: 
try { 
  JavaCharStream.hexval(':');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 16: 
try { 
  JavaCharStream.hexval(';');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 17: 
try { 
  JavaCharStream.hexval('<');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 18: 
try { 
  JavaCharStream.hexval('=');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 19: 
try { 
  JavaCharStream.hexval('>');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 20: 
try { 
  JavaCharStream.hexval('?');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 21: 
try { 
  JavaCharStream.hexval('@');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 22: 
JavaCharStream.hexval('A');
Test 23: 
JavaCharStream.hexval('B');
Test 24: 
JavaCharStream.hexval('C');
Test 25: 
JavaCharStream.hexval('D');
Test 26: 
JavaCharStream.hexval('E');
Test 27: 
JavaCharStream.hexval('F');
Test 28: 
try { 
  JavaCharStream.hexval('G');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 29: 
try { 
  JavaCharStream.hexval('H');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 30: 
try { 
  JavaCharStream.hexval('I');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 31: 
try { 
  JavaCharStream.hexval('J');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 32: 
try { 
  JavaCharStream.hexval('K');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 33: 
try { 
  JavaCharStream.hexval('L');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 34: 
try { 
  JavaCharStream.hexval('M');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 35: 
try { 
  JavaCharStream.hexval('N');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 36: 
try { 
  JavaCharStream.hexval('O');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 37: 
try { 
  JavaCharStream.hexval('P');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 38: 
try { 
  JavaCharStream.hexval('Q');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 39: 
try { 
  JavaCharStream.hexval('R');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 40: 
try { 
  JavaCharStream.hexval('S');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 41: 
try { 
  JavaCharStream.hexval('T');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 42: 
try { 
  JavaCharStream.hexval('U');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 43: 
try { 
  JavaCharStream.hexval('V');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 44: 
try { 
  JavaCharStream.hexval('W');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 45: 
try { 
  JavaCharStream.hexval('X');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 46: 
try { 
  JavaCharStream.hexval('Y');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 47: 
try { 
  JavaCharStream.hexval('Z');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 48: 
try { 
  JavaCharStream.hexval('[');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 49: 
try { 
  JavaCharStream.hexval('\\');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 50: 
try { 
  JavaCharStream.hexval(']');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 51: 
try { 
  JavaCharStream.hexval('^');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 52: 
try { 
  JavaCharStream.hexval('_');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 53: 
try { 
  JavaCharStream.hexval('`');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 54: 
JavaCharStream.hexval('a');
Test 55: 
JavaCharStream.hexval('b');
Test 56: 
JavaCharStream.hexval('c');
Test 57: 
JavaCharStream.hexval('d');
Test 58: 
JavaCharStream.hexval('e');
Test 59: 
JavaCharStream.hexval('f');
Test 60: 
try { 
  JavaCharStream.hexval('n');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 61: 
StringReader stringReader = new StringReader("b");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-1), 129, 129);
javaCharStream.AdjustBuffSize();
Test 62: 
StringReader stringReader = new StringReader("C7|WymBRD.75\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 165, 165, 165);
// Undeclared exception!
try { 
  javaCharStream.ExpandBuff(true);
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 63: 
StringReader stringReader = new StringReader("");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
try { 
  javaCharStream.BeginToken();
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 64: 
PipedInputStream pipedInputStream = new PipedInputStream(450);
JavaCharStream javaCharStream = new JavaCharStream(pipedInputStream, 520, 520);
try { 
  javaCharStream.FillBuff();
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // Pipe not connected
   //
   verifyException("java.io.PipedInputStream", e);
}

Test 65: 
StringReader stringReader = new StringReader("C7|WymBRD.75\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.BeginToken();
javaCharStream.BeginToken();
Test 66: 
StringReader stringReader = new StringReader("E]HoO;7");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 129, 2358, 129);
javaCharStream.available = 78;
javaCharStream.AdjustBuffSize();
Test 67: 
byte[] byteArray = new byte[0];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
BufferedInputStream bufferedInputStream = new BufferedInputStream(byteArrayInputStream);
JavaCharStream javaCharStream = new JavaCharStream(bufferedInputStream, (-552), 13);
javaCharStream.backup(13);
javaCharStream.BeginToken();
javaCharStream.AdjustBuffSize();
Test 68: 
byte[] byteArray = new byte[3];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
BufferedInputStream bufferedInputStream = new BufferedInputStream(byteArrayInputStream);
JavaCharStream javaCharStream = new JavaCharStream(bufferedInputStream, 0, (byte)7);
javaCharStream.prevCharIsLF = true;
javaCharStream.BeginToken();
Test 69: 
StringReader stringReader = new StringReader("iYEp3djXv:u'");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.prevCharIsCR = true;
javaCharStream.BeginToken();
Test 70: 
StringReader stringReader = new StringReader("]-7!F=t\"*dOi@y'9lyd");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 107, 107, 107);
javaCharStream.backup(107);
javaCharStream.readChar();
Test 71: 
StringReader stringReader = new StringReader("]-7!F=\"*di@y'9ld");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 95, 95, 2);
javaCharStream.inBuf = 95;
javaCharStream.BeginToken();
javaCharStream.BeginToken();
javaCharStream.readChar();
Test 72: 
byte[] byteArray = new byte[2];
byteArray[0] = (byte)92;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
BufferedInputStream bufferedInputStream = new BufferedInputStream(byteArrayInputStream);
JavaCharStream javaCharStream = new JavaCharStream(bufferedInputStream);
javaCharStream.BeginToken();
Test 73: 
byte[] byteArray = new byte[3];
byteArray[1] = (byte)92;
byteArray[2] = (byte)92;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, (-1), (byte)92);
javaCharStream.BeginToken();
javaCharStream.readChar();
Test 74: 
byte[] byteArray = new byte[2];
byteArray[1] = (byte)92;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
BufferedInputStream bufferedInputStream = new BufferedInputStream(byteArrayInputStream);
JavaCharStream javaCharStream = new JavaCharStream(bufferedInputStream, 1493, (-673));
javaCharStream.BeginToken();
javaCharStream.readChar();
Test 75: 
byte[] byteArray = new byte[0];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
SequenceInputStream sequenceInputStream = new SequenceInputStream(byteArrayInputStream, byteArrayInputStream);
JavaCharStream javaCharStream = new JavaCharStream(sequenceInputStream, 0, 0, 0);
javaCharStream.Done();
javaCharStream.ReInit((InputStream) byteArrayInputStream, 1, 3997);
Test 76: 
byte[] byteArray = new byte[6];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, 1493, (-1));
javaCharStream.BeginToken();
javaCharStream.GetImage();
Test 77: 
StringReader stringReader = new StringReader("");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.GetSuffix(2048);
Test 78: 
StringReader stringReader = new StringReader("C7|WymBRD.75\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 0, 1440, 4989);
javaCharStream.GetSuffix(0);
Test 79: 
StringReader stringReader = new StringReader("ZiNw)^eie6.hMz:M");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.readChar();
javaCharStream.adjustBeginLineColumn(8, 8);
Test 80: 
StringReader stringReader = new StringReader(" column ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 82, 85);
javaCharStream.adjustBeginLineColumn(0, 117);
Test 81: 
StringReader stringReader = new StringReader("^Wqa U;!WsW'u0");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.adjustBeginLineColumn((-2490), 14);
javaCharStream.adjustBeginLineColumn(83, (-1));
Test 82: 
StringReader stringReader = new StringReader("+a[<");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
byte[] byteArray = new byte[2];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray, (byte)122, (byte)122);
javaCharStream.ReInit((InputStream) byteArrayInputStream, 0, (int) (byte)122, 0);
Test 83: 
byte[] byteArray = new byte[6];
byteArray[0] = (byte)13;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
BufferedInputStream bufferedInputStream = new BufferedInputStream(byteArrayInputStream);
JavaCharStream javaCharStream = new JavaCharStream(bufferedInputStream, (byte)13, (-1));
javaCharStream.BeginToken();
Test 84: 
byte[] byteArray = new byte[2];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
BufferedInputStream bufferedInputStream = new BufferedInputStream(byteArrayInputStream);
JavaCharStream javaCharStream = new JavaCharStream(bufferedInputStream, 1493, (byte)92);
javaCharStream.available = (int) (byte)0;
javaCharStream.readChar();
Test 85: 
byte[] byteArray = new byte[3];
byteArray[1] = (byte)92;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
BufferedInputStream bufferedInputStream = new BufferedInputStream(byteArrayInputStream);
JavaCharStream javaCharStream = new JavaCharStream(bufferedInputStream, (-552), (byte)92);
javaCharStream.readChar();
javaCharStream.readChar();
Test 86: 
byte[] byteArray = new byte[3];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
BufferedInputStream bufferedInputStream = new BufferedInputStream(byteArrayInputStream);
JavaCharStream javaCharStream = new JavaCharStream(bufferedInputStream, (-552), (byte)92);
javaCharStream.backup((-552));
Test 87: 
StringReader stringReader = new StringReader("rdwxdh(");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (byte)55, (byte)55, (byte)55);
javaCharStream.ReInit((Reader) stringReader, 8, 4088, 2471);
javaCharStream.ReInit((Reader) stringReader, (-41), (int) (byte)55, 2471);
Test 88: 
StringReader stringReader = new StringReader("Z#C/.=N>`");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 0, 72, 0);
javaCharStream.GetImage();
Test 89: 
StringReader stringReader = new StringReader("Invalid escape character at line ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.ReadByte();
Test 90: 
StringReader stringReader = new StringReader("]-7!F=t\"*dOi@y'9lyd");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 98, 98, 2);
javaCharStream.BeginToken();
javaCharStream.ReadByte();
Test 91: 
StringReader stringReader = new StringReader("]-7!F=t\"*dOi@y'9lyd");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 98, 98, 2);
javaCharStream.ReadByte();
Test 92: 
StringReader stringReader = new StringReader(" 7^,ht^y.r[");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 796, 2452);
javaCharStream.adjustBeginLineColumn(2452, (-1331));
javaCharStream.getBeginColumn();
Test 93: 
PipedOutputStream pipedOutputStream = new PipedOutputStream();
PipedInputStream pipedInputStream = new PipedInputStream(pipedOutputStream);
JavaCharStream javaCharStream = new JavaCharStream(pipedInputStream, 86, 1604, 4096);
javaCharStream.adjustBeginLineColumn(2850, 4096);
javaCharStream.getBeginColumn();
Test 94: 
StringReader stringReader = new StringReader("b");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-1), 129, 129);
javaCharStream.BeginToken();
javaCharStream.getBeginLine();
Test 95: 
StringReader stringReader = new StringReader("^Wqa U;!WsW'u0");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.readChar();
javaCharStream.getBeginLine();
Test 96: 
StringReader stringReader = new StringReader("vN^xq9QX[<'X5o=a@U,");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1168, (-3017), 1);
javaCharStream.BeginToken();
javaCharStream.getColumn();
Test 97: 
StringReader stringReader = new StringReader("sA");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.BeginToken();
javaCharStream.getColumn();
Test 98: 
StringReader stringReader = new StringReader("");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.backup(2);
javaCharStream.getColumn();
Test 99: 
StringReader stringReader = new StringReader("PJE");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 82, (-2858));
javaCharStream.BeginToken();
javaCharStream.getEndColumn();
Test 100: 
StringReader stringReader = new StringReader(" column ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 82, 85);
javaCharStream.BeginToken();
javaCharStream.getEndColumn();
Test 101: 
StringReader stringReader = new StringReader(" column ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 82, 85);
javaCharStream.backup(85);
javaCharStream.getEndColumn();
Test 102: 
StringReader stringReader = new StringReader("]-7!F=\"*di@y'9ld");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (byte) (-110), (byte)0, 3919);
javaCharStream.BeginToken();
javaCharStream.getEndLine();
Test 103: 
StringReader stringReader = new StringReader("C[@rpu,N*Y@k=B;=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 83, 1, 83);
javaCharStream.BeginToken();
javaCharStream.getEndLine();
Test 104: 
StringReader stringReader = new StringReader("]-7!F=\"*di@y'9ld");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 95, 95, 2);
javaCharStream.inBuf = 95;
javaCharStream.BeginToken();
javaCharStream.getEndLine();
Test 105: 
StringReader stringReader = new StringReader("b");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-1), 129, 129);
javaCharStream.readChar();
javaCharStream.getLine();
Test 106: 
StringReader stringReader = new StringReader("C7|WymBRD.75\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 421, 421, 95);
javaCharStream.readChar();
javaCharStream.getLine();
Test 107: 
StringReader stringReader = new StringReader("]-7!F=t\"*dOi@y'9lyd");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 95, 95, 2);
javaCharStream.inBuf = 95;
javaCharStream.BeginToken();
javaCharStream.getLine();
Test 108: 
StringReader stringReader = new StringReader("9x([j]`");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.readChar();
Test 109: 
StringReader stringReader = new StringReader("]-7!F=\"*di@y'9ld");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
// Undeclared exception!
try { 
  javaCharStream.UpdateLineColumn('a');
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // -1
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 110: 
JavaCharStream javaCharStream = new JavaCharStream((InputStream) 1493, 1493, (-1));
String string = "pWtrdn]pAxbUP";
StringReader stringReader = new StringReader(string);
((JavaCharStream) string).ReInit((Reader) stringReader);

Test 111: 
StringReader stringReader = new StringReader("The quick brown fox jumps over the lazy dog.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 10, 34);
((JavaCharStream) stringReader).getBeginColumn();

Test 112: 
JavaCharStream javaCharStream = new JavaCharStream((InputStream) 0, 0, 0, 0);
SequenceInputStream sequenceInputStream = null;
javaCharStream.ReInit((InputStream) sequenceInputStream);

Test 113: 
StringReader stringReader = new StringReader("C7|WymBRD.75\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
((JavaCharStream) stringReader).ReInit((Reader) stringReader, 2691, 1);

Test 114: 
StringReader stringReader = new StringReader("([k]");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
((JavaCharStream) stringReader).getBeginLine();

Test 115: 
JavaCharStream.hexval('a');

Test 116: 
JavaCharStream.hexval('A');
JavaCharStream.hexval('a');
JavaCharStream.hexval('0');

Test 117: 
JavaCharStream.hexval('a');
JavaCharStream.hexval('A');
JavaCharStream.hexval('$');
char _char = '@';
JavaCharStream.hexval(_char);

Test 118: 
JavaCharStream.hexval('A');
JavaCharStream.hexval('a');
JavaCharStream.hexval('F');
JavaCharStream.hexval('f');

Test 119: 
JavaCharStream.hexval('A');

Test 120: 
JavaCharStream.hexval((char) 8);

Test 121: 
JavaCharStream.hexval(':');

Test 122: 
JavaCharStream.hexval(';');
char _char = 'F';
JavaCharStream.hexval(_char);
char _char = 'z';
JavaCharStream.hexval(_char);

Test 123: 
JavaCharStream.hexval('&');

Test 124: 
JavaCharStream.hexval('F');

Test 125: 
JavaCharStream.hexval('a');

Test 126: 
JavaCharStream.hexval('A');

Test 127: 
JavaCharStream.hexval('A');

Test 128: 
JavaCharStream.hexval('1');

Test 129: 
char _char = 'a';
String string = "hello";
JavaCharStream.hexval((char) 4660);
JavaCharStream.hexval(_char);
JavaCharStream.hexval((char) string);

Test 130: 
JavaCharStream.hexval('0');
JavaCharStream.hexval('a');
JavaCharStream.hexval('A');
JavaCharStream.hexval('f');
JavaCharStream.hexval('F');
JavaCharStream.hexval('x');

Test 131: 
JavaCharStream.hexval('1');

Test 132: 
JavaCharStream.hexval('A');

Test 133: 
JavaCharStream.hexval('A');

Test 134: 
JavaCharStream.hexval('H');

Test 135: 
JavaCharStream.hexval('A');
JavaCharStream.hexval('F');
JavaCharStream.hexval('a');
JavaCharStream.hexval('f');

Test 136: 
JavaCharStream.hexval('B');

Test 137: 
JavaCharStream.hexval('A');
JavaCharStream.hexval('F');
JavaCharStream.hexval('a');
JavaCharStream.hexval('f');
JavaCharStream.hexval('0');
JavaCharStream.hexval('9');

Test 138: 
JavaCharStream.hexval('A');

Test 139: 
JavaCharStream.hexval('F');

Test 140: 
String string = "20";
JavaCharStream.hexval((char) 32);
JavaCharStream.hexval((char) string);

Test 141: 
JavaCharStream.hexval('a');

Test 142: 

Test 143: 
JavaCharStream.hexval('G');

Test 144: 
JavaCharStream.hexval('A');
JavaCharStream.hexval('F');
JavaCharStream.hexval('1');
JavaCharStream.hexval('9');
JavaCharStream.hexval('a');
JavaCharStream.hexval('f');
JavaCharStream.hexval('0');
JavaCharStream.hexval('8');

Test 145: 
JavaCharStream.hexval('\u03C0');

Test 146: 
JavaCharStream.hexval('A');
JavaCharStream.hexval('B');
JavaCharStream.hexval('C');
JavaCharStream.hexval('D');
JavaCharStream.hexval('E');

Test 147: 
JavaCharStream.hexval('\\');

Test 148: 
JavaCharStream.hexval((char) 93);

Test 149: 
JavaCharStream.hexval('`');
char _char = '`';
JavaCharStream.hexval(_char);

Test 150: 
JavaCharStream.hexval('A');

Test 151: 
JavaCharStream.hexval('A');

Test 152: 
JavaCharStream.hexval('E');

Test 153: 
JavaCharStream.hexval('f');

Test 154: 
JavaCharStream.hexval('f');

Test 155: 
JavaCharStream.hexval('a');
JavaCharStream.hexval('b');
JavaCharStream.hexval('c');
JavaCharStream.hexval('d');
JavaCharStream.hexval('e');
JavaCharStream.hexval('f');

Test 156: 
JavaCharStream.hexval((char) 110);

Test 157: 
StringReader stringReader = new StringReader("This is a sample text");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1024, 1024, 129);
((JavaCharStream) stringReader).AdjustBuffSize();

Test 158: 
StringReader stringReader = new StringReader("C7|WymBRD.75\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 165, 165, 165);
((JavaCharStream) stringReader).ExpandBuff(true);

Test 159: 
StringReader stringReader = new StringReader("This is a test String");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
((JavaCharStream) stringReader).BeginToken();

Test 160: 
PipedInputStream pipedInputStream = new PipedInputStream(450);
JavaCharStream javaCharStream = new JavaCharStream(pipedInputStream, 520, 520);
javaCharStream.FillBuff();

Test 161: 
StringReader stringReader = new StringReader("Hello World");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
((JavaCharStream) stringReader).BeginToken();
((JavaCharStream) stringReader).BeginToken();

Test 162: 
StringReader stringReader = new StringReader("E]HoO;7");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 129, 2358, 129);
((JavaCharStream) stringReader).AdjustBuffSize();

Test 163: 
JavaCharStream javaCharStream = new JavaCharStream((InputStream) 13, (-552), 13);

Test 164: 
JavaCharStream javaCharStream = new JavaCharStream((InputStream) 0, 7, (int) (byte)7);

Test 165: 
StringReader stringReader = new StringReader("Hello world! This is a sample string for testing purposes.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
((JavaCharStream) stringReader).BeginToken();

Test 166: 
StringReader stringReader = new StringReader("7!F=t\"*dOi@y'9lyd");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 107, 107, 107);
((JavaCharStream) stringReader).backup(107);
((JavaCharStream) stringReader).readChar();

Test 167: 
StringReader stringReader = new StringReader("This is a test sentence.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 0, 0, 2);
((JavaCharStream) stringReader).BeginToken();
((JavaCharStream) stringReader).BeginToken();
((JavaCharStream) stringReader).readChar();

Test 168: 
JavaCharStream javaCharStream = new JavaCharStream((InputStream) 92, (-1), (int) (byte)92);

Test 169: 
byte[] byteArray = new byte[2];
byteArray[1] = (byte) 97;
byteArray[1] = (byte) 92;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
BufferedInputStream bufferedInputStream = new BufferedInputStream(byteArrayInputStream);
JavaCharStream javaCharStream = new JavaCharStream(bufferedInputStream, 1493, (-673));
((JavaCharStream)(byte)92).BeginToken();
((JavaCharStream) byteArray[1]).readChar();

Test 170: 
JavaCharStream javaCharStream = new JavaCharStream((InputStream) 0, 0, 0, 0);
javaCharStream.Done();
int _int = 1;
int _int = 3997;
int _int = null;
javaCharStream.ReInit((InputStream) _int, _int, _int);

Test 171: 
JavaCharStream javaCharStream = new JavaCharStream((InputStream) 1493, 1493, (-1));

Test 172: 
StringReader stringReader = new StringReader("This is a sample text for testing purposes");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
((JavaCharStream) stringReader).GetSuffix(2048);

Test 173: 
StringReader stringReader = new StringReader("C7|WymBRD.75\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 0, 1440, 4989);
((JavaCharStream) stringReader).GetSuffix(0);

Test 174: 
StringReader stringReader = new StringReader("This is a test string for the JavaCC parser.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
((JavaCharStream) stringReader).readChar();
int _int = 8;
int _int = 8;
((JavaCharStream) stringReader).adjustBeginLineColumn(_int, _int);

Test 175: 
StringReader stringReader = new StringReader(" column ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 82, 85);
((JavaCharStream) stringReader).adjustBeginLineColumn(0, 117);

Test 176: 
StringReader stringReader = new StringReader("^Wqa U;!WsW'u0");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
((JavaCharStream) stringReader).adjustBeginLineColumn(14, (int) (Integer) null);
int _int = 83;
int _int = null;
((JavaCharStream) stringReader).adjustBeginLineColumn(_int, _int);

Test 177: 
StringReader stringReader = new StringReader("+a[<");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
byte[] byteArray = new byte[2];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray, 97, 122);
((JavaCharStream) stringReader).ReInit((InputStream) byteArrayInputStream, 0, 122, 0);

Test 178: 
JavaCharStream javaCharStream = new JavaCharStream((InputStream) 13, (int) (byte)13, (-1));

Test 179: 
JavaCharStream javaCharStream = new JavaCharStream((InputStream) 1493, 92, (int) (byte)92);

Test 180: 
JavaCharStream javaCharStream = new JavaCharStream((InputStream) 92, (-552), (int) (byte)92);

Test 181: 
JavaCharStream javaCharStream = new JavaCharStream((InputStream) 92, (-552), (int) (byte)92);

Test 182: 
StringReader stringReader = new StringReader("rdwxdh(8, -41, 2000)");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 55, 55, 55);
((JavaCharStream) stringReader).ReInit((Reader) stringReader, 8, 4088, 2471);
int _int = 55;
int _int = 2471;
int _int = null;
((JavaCharStream) stringReader).ReInit((Reader) stringReader, _int, _int, _int);

Test 183: 
StringReader stringReader = new StringReader("A#B/.=C>`");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 0, 10, 0);
((JavaCharStream) stringReader).GetImage();

Test 184: 
StringReader stringReader = new StringReader("Invalid escape character at line ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
((JavaCharStream) stringReader).ReadByte();

Test 185: 
StringReader stringReader = new StringReader("-7!F=t\"*dOi@y'9lyd");
int read = ((StringReader)"-7!F=t\"*dOi@y'9lyd").read();
int _int = 98;
int _int = 98;
int _int = 2;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int, _int);
((JavaCharStream) read).BeginToken();
((JavaCharStream) read).ReadByte();

Test 186: 
StringReader stringReader = new StringReader("Hello World");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 10, 10, 2);
((JavaCharStream) stringReader).ReadByte();

Test 187: 
StringReader stringReader = new StringReader("7^,ht^y.r[");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 796, 2452);
((JavaCharStream) stringReader).adjustBeginLineColumn(2452, (int) (Integer) null);
((JavaCharStream) stringReader).getBeginColumn();

Test 188: 
PipedOutputStream pipedOutputStream = new PipedOutputStream();
PipedInputStream pipedInputStream = new PipedInputStream(pipedOutputStream);
int _int = 86;
JavaCharStream javaCharStream = new JavaCharStream(pipedInputStream, 86, 1604, 4096);
((JavaCharStream)86).adjustBeginLineColumn(2850, 4096);
((JavaCharStream) _int).getBeginColumn();

Test 189: 
StringReader stringReader = new StringReader("This is a test case for the JavaCharStream class.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 129, 129, 129);
((JavaCharStream) stringReader).BeginToken();
((JavaCharStream) stringReader).getBeginLine();

Test 190: 
StringReader stringReader = new StringReader("^Wqa U;!WsW'u0");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
((JavaCharStream) stringReader).readChar();
((JavaCharStream) stringReader).getBeginLine();

Test 191: 
StringReader stringReader = new StringReader("The quick brown fox jumps over the lazy dog.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1168, 1, 1);
((JavaCharStream) stringReader).BeginToken();
((JavaCharStream) stringReader).getColumn();

Test 192: 
StringReader stringReader = new StringReader("sA");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
((JavaCharStream) stringReader).BeginToken();
((JavaCharStream) stringReader).getColumn();

Test 193: 
StringReader stringReader = new StringReader("This is a large string from a file or an input stream.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
((JavaCharStream) stringReader).backup(2);
((JavaCharStream) stringReader).getColumn();

Test 194: 
StringReader stringReader = new StringReader("PJE");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 82, (-2858));
((JavaCharStream) stringReader).BeginToken();
((JavaCharStream) stringReader).getEndColumn();

Test 195: 
StringReader stringReader = new StringReader("column");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 82, 85);
((JavaCharStream) stringReader).BeginToken();
((JavaCharStream) stringReader).getEndColumn();

Test 196: 
StringReader stringReader = new StringReader(" column ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 100, 105);
((JavaCharStream) stringReader).backup(105);
((JavaCharStream) stringReader).getEndColumn();

Test 197: 
StringReader stringReader = new StringReader("]-7!F=\"*di@y'9ld");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 0, 3900, 3919);
((JavaCharStream) stringReader).BeginToken();
((JavaCharStream) stringReader).getEndLine();

Test 198: 
StringReader stringReader = new StringReader("C[rpu,N*Y@k=B;=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 83, 1, 83);
((JavaCharStream) stringReader).BeginToken();
((JavaCharStream) stringReader).getEndLine();
((JavaCharStream) stringReader).getEndLine();

Test 199: 
StringReader stringReader = new StringReader("Hello World");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1, 1, 2);
((JavaCharStream) stringReader).BeginToken();
((JavaCharStream) stringReader).getEndLine();

Test 200: 
StringReader stringReader = new StringReader("The quick brown fox jumps over the lazy dog.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 256, 256, 129);
((JavaCharStream) stringReader).readChar();
((JavaCharStream) stringReader).getLine();

Test 201: 
StringReader stringReader = new StringReader("C7|WymBRD.75\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 421, 421, 95);
((JavaCharStream) stringReader).readChar();
((JavaCharStream) stringReader).getLine();

Test 202: 
StringReader stringReader = new StringReader("This is a sample input for testing.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 95, 95, 2);
((JavaCharStream) stringReader).BeginToken();
((JavaCharStream) stringReader).getLine();

Test 203: 
StringReader stringReader = new StringReader("This is a sample input for the JavaCharStream class.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
((JavaCharStream) stringReader).readChar();

Test 204: 
StringReader stringReader = new StringReader("This is a test string.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
((JavaCharStream) stringReader).UpdateLineColumn('a');


* Minimizing test suite
* test suite isTestSuite: 110
Test 0: 
PipedInputStream pipedInputStream = new PipedInputStream(450);
JavaCharStream javaCharStream = new JavaCharStream(pipedInputStream, 520, 520);
try { 
  javaCharStream.FillBuff();
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // Pipe not connected
   //
   verifyException("java.io.PipedInputStream", e);
}

Test 1: 
byte[] byteArray = new byte[8];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, 1493, (-1));
StringReader stringReader = new StringReader("pWtrdn]pAxbUP");
javaCharStream.ReInit((Reader) stringReader);
Test 2: 
StringReader stringReader = new StringReader(" 7^,ht^y.r[");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 796, 2452);
javaCharStream.getBeginColumn();
Test 3: 
byte[] byteArray = new byte[0];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
SequenceInputStream sequenceInputStream = new SequenceInputStream(byteArrayInputStream, byteArrayInputStream);
JavaCharStream javaCharStream = new JavaCharStream(sequenceInputStream, 0, 0, 0);
javaCharStream.ReInit((InputStream) sequenceInputStream);
Test 4: 
StringReader stringReader = new StringReader("C7|WymBRD.75\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.ReInit((Reader) stringReader, (-2691), 1);
Test 5: 
StringReader stringReader = new StringReader("([k]");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.getBeginLine();
Test 6: 
byte[] byteArray = new byte[0];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
SequenceInputStream sequenceInputStream = new SequenceInputStream(byteArrayInputStream, byteArrayInputStream);
JavaCharStream javaCharStream = new JavaCharStream(sequenceInputStream, 0, 0, 0);
javaCharStream.Done();
javaCharStream.ReInit((InputStream) byteArrayInputStream, 1, 3997);
Test 7: 
JavaCharStream.hexval('0');
Test 8: 
JavaCharStream.hexval('A');
Test 9: 
JavaCharStream.hexval('1');
Test 10: 
JavaCharStream.hexval('2');
Test 11: 
JavaCharStream.hexval('3');
Test 12: 
JavaCharStream.hexval('4');
Test 13: 
JavaCharStream.hexval('5');
Test 14: 
JavaCharStream.hexval('6');
Test 15: 
JavaCharStream.hexval('7');
Test 16: 
JavaCharStream.hexval('8');
Test 17: 
JavaCharStream.hexval('9');
Test 18: 
try { 
  JavaCharStream.hexval(':');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 19: 
try { 
  JavaCharStream.hexval(';');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 20: 
try { 
  JavaCharStream.hexval('<');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 21: 
try { 
  JavaCharStream.hexval('=');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 22: 
try { 
  JavaCharStream.hexval('>');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 23: 
try { 
  JavaCharStream.hexval('?');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 24: 
try { 
  JavaCharStream.hexval('@');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 25: 
JavaCharStream.hexval('B');
Test 26: 
JavaCharStream.hexval('C');
Test 27: 
JavaCharStream.hexval('D');
Test 28: 
JavaCharStream.hexval('E');
Test 29: 
JavaCharStream.hexval('F');
Test 30: 
try { 
  JavaCharStream.hexval('G');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 31: 
try { 
  JavaCharStream.hexval('H');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 32: 
try { 
  JavaCharStream.hexval('I');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 33: 
try { 
  JavaCharStream.hexval('J');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 34: 
try { 
  JavaCharStream.hexval('K');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 35: 
try { 
  JavaCharStream.hexval('L');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 36: 
try { 
  JavaCharStream.hexval('M');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 37: 
try { 
  JavaCharStream.hexval('N');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 38: 
try { 
  JavaCharStream.hexval('O');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 39: 
try { 
  JavaCharStream.hexval('P');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 40: 
try { 
  JavaCharStream.hexval('Q');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 41: 
try { 
  JavaCharStream.hexval('R');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 42: 
try { 
  JavaCharStream.hexval('S');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 43: 
try { 
  JavaCharStream.hexval('T');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 44: 
try { 
  JavaCharStream.hexval('U');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 45: 
try { 
  JavaCharStream.hexval('V');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 46: 
try { 
  JavaCharStream.hexval('W');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 47: 
try { 
  JavaCharStream.hexval('X');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 48: 
try { 
  JavaCharStream.hexval('Y');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 49: 
try { 
  JavaCharStream.hexval('Z');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 50: 
try { 
  JavaCharStream.hexval('[');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 51: 
try { 
  JavaCharStream.hexval('\\');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 52: 
try { 
  JavaCharStream.hexval(']');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 53: 
try { 
  JavaCharStream.hexval('^');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 54: 
try { 
  JavaCharStream.hexval('_');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 55: 
try { 
  JavaCharStream.hexval('`');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 56: 
JavaCharStream.hexval('a');
Test 57: 
JavaCharStream.hexval('b');
Test 58: 
JavaCharStream.hexval('c');
Test 59: 
JavaCharStream.hexval('d');
Test 60: 
JavaCharStream.hexval('e');
Test 61: 
JavaCharStream.hexval('f');
Test 62: 
try { 
  JavaCharStream.hexval('x');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 63: 
StringReader stringReader = new StringReader("b");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-1), 129, 129);
javaCharStream.AdjustBuffSize();
Test 64: 
StringReader stringReader = new StringReader("C7|WymBRD.75\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 165, 165, 165);
// Undeclared exception!
try { 
  javaCharStream.ExpandBuff(true);
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 65: 
StringReader stringReader = new StringReader("9x([j]`");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.readChar();
Test 66: 
StringReader stringReader = new StringReader("");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
try { 
  javaCharStream.BeginToken();
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 67: 
StringReader stringReader = new StringReader("C7|WymBRD.75\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.BeginToken();
javaCharStream.BeginToken();
Test 68: 
StringReader stringReader = new StringReader("]-7!F=\"*di@y'9ld");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 95, 95, 2);
javaCharStream.inBuf = 95;
javaCharStream.BeginToken();
javaCharStream.BeginToken();
javaCharStream.readChar();
Test 69: 
StringReader stringReader = new StringReader("E]HoO;7");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 129, 2358, 129);
javaCharStream.available = 78;
javaCharStream.AdjustBuffSize();
Test 70: 
byte[] byteArray = new byte[0];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
BufferedInputStream bufferedInputStream = new BufferedInputStream(byteArrayInputStream);
JavaCharStream javaCharStream = new JavaCharStream(bufferedInputStream, (-552), 13);
javaCharStream.backup(13);
javaCharStream.BeginToken();
javaCharStream.AdjustBuffSize();
Test 71: 
byte[] byteArray = new byte[2];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
BufferedInputStream bufferedInputStream = new BufferedInputStream(byteArrayInputStream);
JavaCharStream javaCharStream = new JavaCharStream(bufferedInputStream, 1493, (byte)92);
javaCharStream.available = (int) (byte)0;
javaCharStream.readChar();
Test 72: 
byte[] byteArray = new byte[3];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
BufferedInputStream bufferedInputStream = new BufferedInputStream(byteArrayInputStream);
JavaCharStream javaCharStream = new JavaCharStream(bufferedInputStream, 0, (byte)7);
javaCharStream.prevCharIsLF = true;
javaCharStream.BeginToken();
Test 73: 
StringReader stringReader = new StringReader("iYEp3djXv:u'");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.prevCharIsCR = true;
javaCharStream.BeginToken();
Test 74: 
byte[] byteArray = new byte[6];
byteArray[0] = (byte)13;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
BufferedInputStream bufferedInputStream = new BufferedInputStream(byteArrayInputStream);
JavaCharStream javaCharStream = new JavaCharStream(bufferedInputStream, (byte)13, (-1));
javaCharStream.BeginToken();
Test 75: 
StringReader stringReader = new StringReader("]-7!F=t\"*dOi@y'9lyd");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 107, 107, 107);
javaCharStream.backup(107);
javaCharStream.readChar();
Test 76: 
byte[] byteArray = new byte[2];
byteArray[0] = (byte)92;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
BufferedInputStream bufferedInputStream = new BufferedInputStream(byteArrayInputStream);
JavaCharStream javaCharStream = new JavaCharStream(bufferedInputStream);
javaCharStream.BeginToken();
Test 77: 
byte[] byteArray = new byte[3];
byteArray[1] = (byte)92;
byteArray[2] = (byte)92;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, (-1), (byte)92);
javaCharStream.BeginToken();
javaCharStream.readChar();
Test 78: 
byte[] byteArray = new byte[2];
byteArray[1] = (byte)92;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
BufferedInputStream bufferedInputStream = new BufferedInputStream(byteArrayInputStream);
JavaCharStream javaCharStream = new JavaCharStream(bufferedInputStream, 1493, (-673));
javaCharStream.BeginToken();
javaCharStream.readChar();
Test 79: 
StringReader stringReader = new StringReader("rdwxdh(");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (byte)55, (byte)55, (byte)55);
javaCharStream.ReInit((Reader) stringReader, 8, 4088, 2471);
javaCharStream.ReInit((Reader) stringReader, (-41), (int) (byte)55, 2471);
Test 80: 
StringReader stringReader = new StringReader("Z#C/.=N>`");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 0, 72, 0);
javaCharStream.GetImage();
Test 81: 
byte[] byteArray = new byte[6];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, 1493, (-1));
javaCharStream.BeginToken();
javaCharStream.GetImage();
Test 82: 
StringReader stringReader = new StringReader("");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.GetSuffix(2048);
Test 83: 
StringReader stringReader = new StringReader("C7|WymBRD.75\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 0, 1440, 4989);
javaCharStream.GetSuffix(0);
Test 84: 
StringReader stringReader = new StringReader(" column ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 82, 85);
javaCharStream.adjustBeginLineColumn(0, 117);
Test 85: 
StringReader stringReader = new StringReader("ZiNw)^eie6.hMz:M");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.readChar();
javaCharStream.adjustBeginLineColumn(8, 8);
Test 86: 
StringReader stringReader = new StringReader("^Wqa U;!WsW'u0");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.adjustBeginLineColumn((-2490), 14);
javaCharStream.adjustBeginLineColumn(83, (-1));
Test 87: 
StringReader stringReader = new StringReader("+a[<");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
byte[] byteArray = new byte[2];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray, (byte)122, (byte)122);
javaCharStream.ReInit((InputStream) byteArrayInputStream, 0, (int) (byte)122, 0);
Test 88: 
byte[] byteArray = new byte[3];
byteArray[1] = (byte)92;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
BufferedInputStream bufferedInputStream = new BufferedInputStream(byteArrayInputStream);
JavaCharStream javaCharStream = new JavaCharStream(bufferedInputStream, (-552), (byte)92);
javaCharStream.readChar();
javaCharStream.readChar();
Test 89: 
byte[] byteArray = new byte[3];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
BufferedInputStream bufferedInputStream = new BufferedInputStream(byteArrayInputStream);
JavaCharStream javaCharStream = new JavaCharStream(bufferedInputStream, (-552), (byte)92);
javaCharStream.backup((-552));
Test 90: 
StringReader stringReader = new StringReader("Invalid escape character at line ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.ReadByte();
Test 91: 
StringReader stringReader = new StringReader("]-7!F=t\"*dOi@y'9lyd");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 98, 98, 2);
javaCharStream.BeginToken();
javaCharStream.ReadByte();
Test 92: 
StringReader stringReader = new StringReader("]-7!F=t\"*dOi@y'9lyd");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 98, 98, 2);
javaCharStream.ReadByte();
Test 93: 
StringReader stringReader = new StringReader(" 7^,ht^y.r[");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 796, 2452);
javaCharStream.adjustBeginLineColumn(2452, (-1331));
javaCharStream.getBeginColumn();
Test 94: 
PipedOutputStream pipedOutputStream = new PipedOutputStream();
PipedInputStream pipedInputStream = new PipedInputStream(pipedOutputStream);
JavaCharStream javaCharStream = new JavaCharStream(pipedInputStream, 86, 1604, 4096);
javaCharStream.adjustBeginLineColumn(2850, 4096);
javaCharStream.getBeginColumn();
Test 95: 
StringReader stringReader = new StringReader("b");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-1), 129, 129);
javaCharStream.BeginToken();
javaCharStream.getBeginLine();
Test 96: 
StringReader stringReader = new StringReader("^Wqa U;!WsW'u0");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.readChar();
javaCharStream.getBeginLine();
Test 97: 
StringReader stringReader = new StringReader("vN^xq9QX[<'X5o=a@U,");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1168, (-3017), 1);
javaCharStream.BeginToken();
javaCharStream.getColumn();
Test 98: 
StringReader stringReader = new StringReader("sA");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.BeginToken();
javaCharStream.getColumn();
Test 99: 
StringReader stringReader = new StringReader("");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.backup(2);
javaCharStream.getColumn();
Test 100: 
StringReader stringReader = new StringReader("PJE");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 82, (-2858));
javaCharStream.BeginToken();
javaCharStream.getEndColumn();
Test 101: 
StringReader stringReader = new StringReader(" column ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 82, 85);
javaCharStream.BeginToken();
javaCharStream.getEndColumn();
Test 102: 
StringReader stringReader = new StringReader(" column ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 82, 85);
javaCharStream.backup(85);
javaCharStream.getEndColumn();
Test 103: 
StringReader stringReader = new StringReader("]-7!F=\"*di@y'9ld");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (byte) (-110), (byte)0, 3919);
javaCharStream.BeginToken();
javaCharStream.getEndLine();
Test 104: 
StringReader stringReader = new StringReader("C[@rpu,N*Y@k=B;=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 83, 1, 83);
javaCharStream.BeginToken();
javaCharStream.getEndLine();
Test 105: 
StringReader stringReader = new StringReader("]-7!F=\"*di@y'9ld");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 95, 95, 2);
javaCharStream.inBuf = 95;
javaCharStream.BeginToken();
javaCharStream.getEndLine();
Test 106: 
StringReader stringReader = new StringReader("b");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-1), 129, 129);
javaCharStream.readChar();
javaCharStream.getLine();
Test 107: 
StringReader stringReader = new StringReader("C7|WymBRD.75\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 421, 421, 95);
javaCharStream.readChar();
javaCharStream.getLine();
Test 108: 
StringReader stringReader = new StringReader("]-7!F=t\"*dOi@y'9lyd");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 95, 95, 2);
javaCharStream.inBuf = 95;
javaCharStream.BeginToken();
javaCharStream.getLine();
Test 109: 
StringReader stringReader = new StringReader("This is a test string.");
// Undeclared exception!
try { 
  ((JavaCharStream) stringReader).UpdateLineColumn('a');
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
}


* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 92%
* Total number of goals: 216
* Number of covered goals: 198
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 90%
* Total number of goals: 239
* Number of covered goals: 214
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 92%
* Total number of goals: 36
* Number of covered goals: 33
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 31
* Number of covered goals: 31
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 91%
* Total number of goals: 216
* Number of covered goals: 197
* Generated 110 tests with total length 289
* Resulting test suite's coverage: 93% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 31%
* Compiling and checking tests
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: PipedInputStream arg0 = new PipedInputStream(450);
JavaCharStream javaCharStream = new JavaCharStream(arg0, 520, 520);
try { 
  javaCharStream.FillBuff();
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // Pipe not connected
   //
   verifyException("java.io.PipedInputStream", e);
}


** It was a parseable test case! 
refined test name is: testJavaCharStreamFillBufferIOException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: StringReader arg0 = new StringReader(" 7^,ht^y.r[");
JavaCharStream javaCharStream = new JavaCharStream(arg0, 796, 2452);
javaCharStream.getBeginColumn();
assertEquals((-1), javaCharStream.bufpos);


** It was a parseable test case! 
refined test name is: testCreateJavaCharStreamWithValidReader
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: StringReader arg0 = new StringReader("C7|WymBRD.75\"");
JavaCharStream javaCharStream = new JavaCharStream(arg0);
javaCharStream.ReInit((Reader) arg0, (-2691), 1);
assertEquals((-1), javaCharStream.bufpos);


** It was a parseable test case! 
refined test name is: testReInitWithNegativeValue
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: StringReader arg0 = new StringReader("([k]");
JavaCharStream javaCharStream = new JavaCharStream(arg0);
javaCharStream.getBeginLine();
assertEquals((-1), javaCharStream.bufpos);


** It was a parseable test case! 
refined test name is: testJavaCharStreamBufferBeginningLineIsMinusOne
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: int hexval = JavaCharStream.hexval('0');
assertEquals(0, hexval);


** It was a parseable test case! 
refined test name is: testHexvalOfSingleZeroCharacter
* Compiling Tests
refined test name is: testHexvalReturnsZeroForCharZero
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: int hexval = JavaCharStream.hexval('A');
assertEquals(10, hexval);


** It was a parseable test case! 
refined test name is: testHexValOfUppercaseLetterA
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: int hexval = JavaCharStream.hexval('1');
assertEquals(1, hexval);


** It was a parseable test case! 
refined test name is: testHexValReturnsOne
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: int hexval = JavaCharStream.hexval('2');
assertEquals(2, hexval);


** It was a parseable test case! 
refined test name is: testHexValReturnsCorrectValue
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: int hexval = JavaCharStream.hexval('3');
assertEquals(3, hexval);


** It was a parseable test case! 
refined test name is: testHexvalSingleDigitHexCharReturnsDecimalValue
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: int hexval = JavaCharStream.hexval('4');
assertEquals(4, hexval);


** It was a parseable test case! 
refined test name is: testHexVal
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: int hexval = JavaCharStream.hexval('5');
assertEquals(5, hexval);


** It was a parseable test case! 
refined test name is: testHexValMethodInputChar5ExpectedValue5
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: int hexval = JavaCharStream.hexval('6');
assertEquals(6, hexval);


** It was a parseable test case! 
refined test name is: testHexvalCorrectness
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: int hexval = JavaCharStream.hexval('7');
assertEquals(7, hexval);


** It was a parseable test case! 
refined test name is: testHexvalOfCharacterSeven
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: int hexval = JavaCharStream.hexval('8');
assertEquals(8, hexval);


** It was a parseable test case! 
refined test name is: testHexValForCharacterEight
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: int hexval = JavaCharStream.hexval('9');
assertEquals(9, hexval);


** It was a parseable test case! 
refined test name is: testHexValForDigitNine
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: try { 
  JavaCharStream.hexval(':');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}


** It was a parseable test case! 
refined test name is: testHexvalIOException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: try { 
  JavaCharStream.hexval(';');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}


** It was a parseable test case! 
refined test name is: testHexValException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: try { 
  JavaCharStream.hexval('<');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}


** It was a parseable test case! 
refined test name is: testHexvalThrowsIOExceptionWithNonHexCharacter
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: try { 
  JavaCharStream.hexval('=');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}


** It was a parseable test case! 
refined test name is: testHexvalThrowsExceptionOnInvalidInput
* Compiling Tests
refined test name is: testHexvalThrowsExceptionForInvalidInput
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: try { 
  JavaCharStream.hexval('>');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}


** It was a parseable test case! 
refined test name is: testHexvalException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: try { 
  JavaCharStream.hexval('?');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}


** It was a parseable test case! 
refined test name is: testInvalidCharacterThrowsIOException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: try { 
  JavaCharStream.hexval('@');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}


** It was a parseable test case! 
refined test name is: testHexvalWithInvalidCharacterThrowsIOException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: int hexval = JavaCharStream.hexval('B');
assertEquals(11, hexval);


** It was a parseable test case! 
refined test name is: testHexValOfB
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: int hexval = JavaCharStream.hexval('C');
assertEquals(12, hexval);


** It was a parseable test case! 
refined test name is: testHexValOfCharacterC
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: int hexval = JavaCharStream.hexval('D');
assertEquals(13, hexval);


** It was a parseable test case! 
refined test name is: testHexValOfLetterD
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: int hexval = JavaCharStream.hexval('E');
assertEquals(14, hexval);


** It was a parseable test case! 
refined test name is: testHexValForCharacterE
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: int hexval = JavaCharStream.hexval('F');
assertEquals(15, hexval);


** It was a parseable test case! 
refined test name is: testHexValOfFreturns15
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: try { 
  JavaCharStream.hexval('G');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}


** It was a parseable test case! 
refined test name is: testHexValIOException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: try { 
  JavaCharStream.hexval('H');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}


** It was a parseable test case! 
refined test name is: testHexvalInvalidCharacter
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: try { 
  JavaCharStream.hexval('I');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}


** It was a parseable test case! 
refined test name is: testParseHexvalThrowsIOException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: try { 
  JavaCharStream.hexval('J');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}


** It was a parseable test case! 
refined test name is: testInvalidHexValueThrowsIOException
* Compiling Tests
refined test name is: testHexvalThrowsIOExceptionForInvalidCharacter
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: try { 
  JavaCharStream.hexval('K');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}


** It was a parseable test case! 
refined test name is: testHexvalInvalidInputThrowsException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: try { 
  JavaCharStream.hexval('L');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}


** It was a parseable test case! 
refined test name is: testHexvalThrowsIOExceptionWithNoMessage
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: try { 
  JavaCharStream.hexval('M');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}


** It was a parseable test case! 
refined test name is: testHexvalIOExceptionWithoutMessage
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: try { 
  JavaCharStream.hexval('N');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}


** It was a parseable test case! 
refined test name is: testHexvalWithNonHexCharacterThrowsIOException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: try { 
  JavaCharStream.hexval('O');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}


** It was a parseable test case! 
refined test name is: testHexValThrowsIOException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: try { 
  JavaCharStream.hexval('P');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}


** It was a parseable test case! 
refined test name is: testHexValThrowsExceptionForNonHexValue
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: try { 
  JavaCharStream.hexval('Q');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}


** It was a parseable test case! 
refined test name is: testHexvalThrowsExceptionOnNonHexCharacters
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: try { 
  JavaCharStream.hexval('R');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}


** It was a parseable test case! 
refined test name is: testHexvalThrowsExceptionOnInvalidCharacter
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: try { 
  JavaCharStream.hexval('S');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}


** It was a parseable test case! 
refined test name is: testHexvalThrowsIOExceptionOnDoubleCall
* Compiling Tests
refined test name is: testHexvalThrowsIOExceptionWithMessage
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: try { 
  JavaCharStream.hexval('T');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}


** It was a parseable test case! 
refined test name is: testHexvalThrowsExceptionForInvalidCharacters
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: try { 
  JavaCharStream.hexval('U');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}


** It was a parseable test case! 
refined test name is: testHexvalWithInvalidCharShouldThrowIOException
* Compiling Tests
refined test name is: testHexvalthrowsIOExceptionForInvalidCharacter
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: try { 
  JavaCharStream.hexval('V');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}


** It was a parseable test case! 
refined test name is: testHexvalInvalidCharacterThrowsIOException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: try { 
  JavaCharStream.hexval('W');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}


** It was a parseable test case! 
refined test name is: testHexvalInvalidCharacterThrowsIOException
* Compiling Tests
refined test name is: testHexvalThrowsExceptionForInvalidCharacter
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: try { 
  JavaCharStream.hexval('X');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}


** It was a parseable test case! 
refined test name is: testHexvalThrowsIOException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: try { 
  JavaCharStream.hexval('Y');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}


** It was a parseable test case! 
refined test name is: testInvalidCharacterthrowsIOException
* Compiling Tests
refined test name is: testHexvalThrowsIOExceptionForInvalidCharacter
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: try { 
  JavaCharStream.hexval('Z');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}


** It was a parseable test case! 
refined test name is: testHexvalInvalidInput
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: try { 
  JavaCharStream.hexval('[');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}


** It was a parseable test case! 
refined test name is: testHexvalThrowsIOExceptionWithEmptyMessage
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: try { 
  JavaCharStream.hexval('\\');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}


** It was a parseable test case! 
refined test name is: testInvalidEscapeSequenceIOExceptionThrown
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: try { 
  JavaCharStream.hexval(']');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}


** It was a parseable test case! 
refined test name is: testIOExceptionThrownWhenInvalidCharacterInHexval
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: try { 
  JavaCharStream.hexval('^');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}


** It was a parseable test case! 
refined test name is: testHexvalInvalidInputIOException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: try { 
  JavaCharStream.hexval('_');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}


** It was a parseable test case! 
refined test name is: testInvalidCharacterHexvalShouldThrowIOException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: try { 
  JavaCharStream.hexval('`');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}


** It was a parseable test case! 
refined test name is: testHexvalThrowsExceptionWithInvalidCharacter
* Compiling Tests
refined test name is: testHexvalInvalidCharacterThrowsIOException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: int hexval = JavaCharStream.hexval('a');
assertEquals(10, hexval);


** It was a parseable test case! 
refined test name is: testHexValForLowercaseLetter
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: int hexval = JavaCharStream.hexval('b');
assertEquals(11, hexval);


** It was a parseable test case! 
refined test name is: testHexValForCharacterB
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: int hexval = JavaCharStream.hexval('c');
assertEquals(12, hexval);


** It was a parseable test case! 
refined test name is: testHexvalConversion
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: int hexval = JavaCharStream.hexval('d');
assertEquals(13, hexval);


** It was a parseable test case! 
refined test name is: testHexVal
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: int hexval = JavaCharStream.hexval('e');
assertEquals(14, hexval);


** It was a parseable test case! 
refined test name is: testHexValOfE
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: int hexval = JavaCharStream.hexval('f');
assertEquals(15, hexval);


** It was a parseable test case! 
refined test name is: testHexValReturnsCorrectValueForGivenCharacter
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: try { 
  JavaCharStream.hexval('x');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}


** It was a parseable test case! 
refined test name is: testHexvalInvalidInputThrowsIOException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: StringReader arg0 = new StringReader("b");
JavaCharStream javaCharStream = new JavaCharStream(arg0, (-1), 129, 129);
javaCharStream.AdjustBuffSize();
assertEquals((-1), javaCharStream.bufpos);


** It was a parseable test case! 
refined test name is: testBufferSizeAdjustedToFitString
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: StringReader arg0 = new StringReader("C7|WymBRD.75\"");
JavaCharStream javaCharStream = new JavaCharStream(arg0, 165, 165, 165);
// Undeclared exception!
try { 
  javaCharStream.ExpandBuff(true);
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}


** It was a parseable test case! 
refined test name is: testExpandBuffWhenBufferFull
* Compiling Tests
refined test name is: testExpandBufferThrowsErrorWhenFull
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: StringReader arg0 = new StringReader("9x([j]`");
JavaCharStream javaCharStream = new JavaCharStream(arg0);
char readChar = javaCharStream.readChar();
assertEquals(0, javaCharStream.bufpos);
assertEquals('9', readChar);


** It was a parseable test case! 
refined test name is: testReadCharFromJavaCharStream
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: StringReader arg0 = new StringReader("");
JavaCharStream javaCharStream = new JavaCharStream(arg0);
try { 
  javaCharStream.BeginToken();
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}


** It was a parseable test case! 
refined test name is: testEmptyStringReaderThrowsException
* Compiling Tests
refined test name is: testEmptyStringReaderBeginTokenThrowsException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: StringReader arg0 = new StringReader("C7|WymBRD.75\"");
JavaCharStream javaCharStream = new JavaCharStream(arg0);
javaCharStream.BeginToken();
char BeginToken = javaCharStream.BeginToken();
assertEquals(1, javaCharStream.getBeginLine());
assertEquals('7', BeginToken);


** It was a parseable test case! 
refined test name is: testBeginToken
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: StringReader arg0 = new StringReader("]-7!F=\"*di@y'9ld");
JavaCharStream javaCharStream = new JavaCharStream(arg0, 95, 95, 2);
javaCharStream.inBuf = 95;
javaCharStream.BeginToken();
javaCharStream.BeginToken();
char readChar = javaCharStream.readChar();
assertEquals(0, javaCharStream.bufpos);
assertEquals('\u0000', readChar);


** It was a parseable test case! 
refined test name is: testReadCharAtBeginningOfBuffer
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: StringReader arg0 = new StringReader("E]HoO;7");
JavaCharStream javaCharStream = new JavaCharStream(arg0, 129, 2358, 129);
javaCharStream.available = 78;
javaCharStream.AdjustBuffSize();
assertEquals((-1), javaCharStream.bufpos);


** It was a parseable test case! 
refined test name is: testAvailableFieldIsSetTo78
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: StringReader arg0 = new StringReader("iYEp3djXv:u'");
JavaCharStream javaCharStream = new JavaCharStream(arg0);
javaCharStream.prevCharIsCR = true;
char BeginToken = javaCharStream.BeginToken();
assertEquals(0, javaCharStream.bufpos);
assertEquals('i', BeginToken);


** It was a parseable test case! 
refined test name is: testBeginTokenWithNonEmptyStringReader
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: StringReader arg0 = new StringReader("]-7!F=t\"*dOi@y'9lyd");
JavaCharStream javaCharStream = new JavaCharStream(arg0, 107, 107, 107);
javaCharStream.backup(107);
char readChar = javaCharStream.readChar();
assertEquals(0, javaCharStream.bufpos);
assertEquals('\u0000', readChar);


** It was a parseable test case! 
refined test name is: testBackupReadChar
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: StringReader arg0 = new StringReader("rdwxdh(");
JavaCharStream javaCharStream = new JavaCharStream(arg0, (byte)55, (byte)55, (byte)55);
javaCharStream.ReInit((Reader) arg0, 8, 4088, 2471);
javaCharStream.ReInit((Reader) arg0, (-41), (int) (byte)55, 2471);
assertEquals((-1), javaCharStream.bufpos);


** It was a parseable test case! 
refined test name is: testNegativeNewPosition
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: StringReader arg0 = new StringReader("Z#C/.=N>`");
JavaCharStream javaCharStream = new JavaCharStream(arg0, 0, 72, 0);
assertEquals((-1), javaCharStream.bufpos);

String GetImage = javaCharStream.GetImage();
assertEquals("", GetImage);


** It was a parseable test case! 
refined test name is: testEmptyStreamReturnsEmptyString
* Compiling Tests
refined test name is: testEmptyStream
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: StringReader arg0 = new StringReader("");
JavaCharStream javaCharStream = new JavaCharStream(arg0);
char[] GetSuffix = javaCharStream.GetSuffix(2048);
assertEquals((-1), javaCharStream.bufpos);
assertEquals(2048, GetSuffix.length);


** It was a parseable test case! 
refined test name is: testGetSuffixWithEmptyBuffer
* Compiling Tests
refined test name is: testGetSuffixWithEmptyStringReader
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: StringReader arg0 = new StringReader("C7|WymBRD.75\"");
JavaCharStream javaCharStream = new JavaCharStream(arg0, 0, 1440, 4989);
char[] GetSuffix = javaCharStream.GetSuffix(0);
assertEquals(0, GetSuffix.length);
assertEquals((-1), javaCharStream.bufpos);


** It was a parseable test case! 
refined test name is: testGetSuffixLengthZero
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: StringReader arg0 = new StringReader(" column ");
JavaCharStream javaCharStream = new JavaCharStream(arg0, 82, 85);
javaCharStream.adjustBeginLineColumn(0, 117);
assertEquals(117, javaCharStream.getBeginColumn());


** It was a parseable test case! 
refined test name is: testAdjustBeginLineColumn
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: StringReader arg0 = new StringReader("ZiNw)^eie6.hMz:M");
JavaCharStream javaCharStream = new JavaCharStream(arg0);
javaCharStream.readChar();
javaCharStream.adjustBeginLineColumn(8, 8);
assertEquals(0, javaCharStream.bufpos);


** It was a parseable test case! 
refined test name is: testAdjustBeginLineColumn
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: StringReader arg0 = new StringReader("^Wqa U;!WsW'u0");
JavaCharStream javaCharStream = new JavaCharStream(arg0);
javaCharStream.adjustBeginLineColumn((-2490), 14);
javaCharStream.adjustBeginLineColumn(83, (-1));
assertEquals((-1), javaCharStream.getBeginColumn());


** It was a parseable test case! 
refined test name is: testAdjustBeginLineColumnNegativeValues
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: StringReader arg0 = new StringReader("Invalid escape character at line ");
JavaCharStream javaCharStream = new JavaCharStream(arg0);
char ReadByte = javaCharStream.ReadByte();
assertEquals((-1), javaCharStream.bufpos);
assertEquals('I', ReadByte);


** It was a parseable test case! 
refined test name is: testInvalidEscapeCharacterAtLineOne
* Compiling Tests
refined test name is: testInvalidEscapeCharacter
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: StringReader arg0 = new StringReader("]-7!F=t\"*dOi@y'9lyd");
arg0.read();
JavaCharStream javaCharStream = new JavaCharStream(arg0, 98, 98, 2);
javaCharStream.BeginToken();
char ReadByte = javaCharStream.ReadByte();
assertEquals(0, javaCharStream.bufpos);
assertEquals('7', ReadByte);


** It was a parseable test case! 
refined test name is: testBufferSizeAndReadByte
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: StringReader arg0 = new StringReader("]-7!F=t\"*dOi@y'9lyd");
JavaCharStream javaCharStream = new JavaCharStream(arg0, 98, 98, 2);
char ReadByte = javaCharStream.ReadByte();
assertEquals(']', ReadByte);
assertEquals((-1), javaCharStream.bufpos);


** It was a parseable test case! 
refined test name is: testReadBytewithValidInputreturnsExpectedValue
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: StringReader arg0 = new StringReader(" 7^,ht^y.r[");
JavaCharStream javaCharStream = new JavaCharStream(arg0, 796, 2452);
javaCharStream.adjustBeginLineColumn(2452, (-1331));
int beginColumn = javaCharStream.getBeginColumn();
assertEquals(2453, javaCharStream.getBeginLine());
assertEquals((-1331), beginColumn);


** It was a parseable test case! 
refined test name is: testAdjustBeginLineAndColumn
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: StringReader arg0 = new StringReader("b");
JavaCharStream javaCharStream = new JavaCharStream(arg0, (-1), 129, 129);
javaCharStream.BeginToken();
int beginLine = javaCharStream.getBeginLine();
assertEquals(0, javaCharStream.bufpos);
assertEquals((-1), beginLine);


** It was a parseable test case! 
refined test name is: testBeginPositionAndLineNumber
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: StringReader arg0 = new StringReader("^Wqa U;!WsW'u0");
JavaCharStream javaCharStream = new JavaCharStream(arg0);
javaCharStream.readChar();
int beginLine = javaCharStream.getBeginLine();
assertEquals(0, javaCharStream.bufpos);
assertEquals(1, beginLine);


** It was a parseable test case! 
refined test name is: testReadCharInitialPosition
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: StringReader arg0 = new StringReader("vN^xq9QX[<'X5o=a@U,");
JavaCharStream javaCharStream = new JavaCharStream(arg0, 1168, (-3017), 1);
javaCharStream.BeginToken();
int column = javaCharStream.getColumn();
assertEquals(1168, javaCharStream.getBeginLine());
assertEquals((-3017), column);


** It was a parseable test case! 
refined test name is: testFirstTokenReturnedCorrectly
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: StringReader arg0 = new StringReader("sA");
JavaCharStream javaCharStream = new JavaCharStream(arg0);
javaCharStream.BeginToken();
int column = javaCharStream.getColumn();
assertEquals(1, javaCharStream.getBeginColumn());
assertEquals(1, column);


** It was a parseable test case! 
refined test name is: testMoveToFirstTokenAndGetColumnNumber
* Compiling Tests
refined test name is: testGetBeginColumn
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: StringReader arg0 = new StringReader("");
JavaCharStream javaCharStream = new JavaCharStream(arg0);
javaCharStream.backup(2);
javaCharStream.getColumn();
assertEquals(4093, javaCharStream.bufpos);


** It was a parseable test case! 
refined test name is: testBackupWithEmptyInput
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: StringReader arg0 = new StringReader("PJE");
JavaCharStream javaCharStream = new JavaCharStream(arg0, 82, (-2858));
javaCharStream.BeginToken();
int endColumn = javaCharStream.getEndColumn();
assertEquals((-2858), javaCharStream.getBeginColumn());
assertEquals((-2858), endColumn);


** It was a parseable test case! 
refined test name is: testbeginTokensetsBeginAndEndColumns
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: StringReader arg0 = new StringReader(" column ");
JavaCharStream javaCharStream = new JavaCharStream(arg0, 82, 85);
javaCharStream.BeginToken();
int endColumn = javaCharStream.getEndColumn();
assertEquals(85, javaCharStream.getBeginColumn());
assertEquals(85, endColumn);


** It was a parseable test case! 
refined test name is: testBeginTokenSetsColumnsCorrectly
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: StringReader arg0 = new StringReader(" column ");
JavaCharStream javaCharStream = new JavaCharStream(arg0, 82, 85);
javaCharStream.backup(85);
javaCharStream.getEndColumn();
assertEquals(4010, javaCharStream.bufpos);


** It was a parseable test case! 
refined test name is: testBackupPosition
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: StringReader arg0 = new StringReader("]-7!F=\"*di@y'9ld");
JavaCharStream javaCharStream = new JavaCharStream(arg0, (byte) (-110), (byte)0, 3919);
javaCharStream.BeginToken();
int endLine = javaCharStream.getEndLine();
assertEquals(0, javaCharStream.bufpos);
assertEquals((-110), endLine);


** It was a parseable test case! 
refined test name is: testBeginToken
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: StringReader arg0 = new StringReader("C[@rpu,N*Y@k=B;=");
JavaCharStream javaCharStream = new JavaCharStream(arg0, 83, 1, 83);
javaCharStream.BeginToken();
int endLine = javaCharStream.getEndLine();
assertEquals(0, javaCharStream.bufpos);
assertEquals(83, endLine);


** It was a parseable test case! 
refined test name is: testJavaCharStreamConstructorWithBufferSize
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: StringReader arg0 = new StringReader("]-7!F=\"*di@y'9ld");
JavaCharStream javaCharStream = new JavaCharStream(arg0, 95, 95, 2);
javaCharStream.inBuf = 95;
javaCharStream.BeginToken();
javaCharStream.getEndLine();
assertEquals(0, javaCharStream.bufpos);


** It was a parseable test case! 
refined test name is: testInitializeBufferPosition
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: StringReader arg0 = new StringReader("b");
JavaCharStream javaCharStream = new JavaCharStream(arg0, (-1), 129, 129);
javaCharStream.readChar();
int line = javaCharStream.getLine();
assertEquals(0, javaCharStream.bufpos);
assertEquals((-1), line);


** It was a parseable test case! 
refined test name is: testReadChar
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: StringReader arg0 = new StringReader("C7|WymBRD.75\"");
JavaCharStream javaCharStream = new JavaCharStream(arg0, 421, 421, 95);
javaCharStream.readChar();
int line = javaCharStream.getLine();
assertEquals(0, javaCharStream.bufpos);
assertEquals(421, line);


** It was a parseable test case! 
refined test name is: testGetLineReturnsCorrectLineNumber
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: StringReader arg0 = new StringReader("]-7!F=t\"*dOi@y'9lyd");
JavaCharStream javaCharStream = new JavaCharStream(arg0, 95, 95, 2);
javaCharStream.inBuf = 95;
javaCharStream.BeginToken();
javaCharStream.getLine();
assertEquals(0, javaCharStream.bufpos);


** It was a parseable test case! 
refined test name is: testTokenizeInputString
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 17:39:23.035 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:39:23.055 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 17:39:23.103 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 17:39:23.104 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
[MASTER] 17:39:23.151 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 17:39:23.152 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
[MASTER] 17:39:23.205 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:39:23.206 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
[MASTER] 17:39:23.253 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 17:39:23.255 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
[MASTER] 17:39:23.300 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 17:39:23.301 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
[MASTER] 17:39:23.357 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:39:23.358 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 17:39:23.398 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:39:23.399 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 17:39:23.439 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:39:23.440 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 17:39:23.481 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:39:23.482 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
[MASTER] 17:39:23.531 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:39:23.532 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 17:39:23.589 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:39:23.590 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 17:39:23.647 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:39:23.648 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 17:39:23.705 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:39:23.706 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 17:39:23.764 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:39:23.765 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 17:39:23.826 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:39:23.827 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 17:39:23.887 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:39:23.888 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 17:39:23.944 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:39:23.945 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:39:24.011 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:39:24.012 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 17:39:24.072 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:39:24.076 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 17:39:24.136 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:39:24.137 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 17:39:24.194 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:39:24.195 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 17:39:24.253 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:39:24.254 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 17:39:24.317 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:39:24.318 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 17:39:24.375 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:39:24.376 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 17:39:24.429 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:39:24.430 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 17:39:24.479 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:39:24.480 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 17:39:24.531 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:39:24.532 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 17:39:24.580 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:39:24.581 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 17:39:24.626 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:39:24.626 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:39:24.674 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:39:24.675 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 17:39:24.721 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:39:24.722 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 17:39:24.771 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:39:24.771 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 17:39:24.823 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:39:24.824 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 17:39:24.877 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:39:24.877 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
Going to execute: handleTestsThatAreUnstable
[MASTER] 17:39:24.931 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
* Compiling Tests
[MASTER] 17:39:24.932 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
[MASTER] 17:39:24.986 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:39:24.986 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
Going to execute: handleTestsThatAreUnstable
[MASTER] 17:39:25.036 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:39:25.037 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
* Compiling Tests
[MASTER] 17:39:25.085 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:39:25.085 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:39:25.144 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:39:25.150 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 17:39:25.205 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:39:25.206 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:39:25.261 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:39:25.261 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 17:39:25.311 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:39:25.312 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
[MASTER] 17:39:25.362 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:39:25.363 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
* Compiling Tests
[MASTER] 17:39:25.416 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:39:25.417 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:39:25.466 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:39:25.467 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 17:39:25.523 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:39:25.523 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 17:39:25.581 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:39:25.581 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 17:39:25.649 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:39:25.650 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 17:39:25.711 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:39:25.712 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 17:39:25.767 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:39:25.768 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 17:39:25.824 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:39:25.824 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:39:25.882 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:39:25.882 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 17:39:25.938 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:39:25.938 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 17:39:26.024 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:39:26.025 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
[MASTER] 17:39:26.069 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 17:39:26.070 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 17:39:26.128 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:39:26.129 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
[MASTER] 17:39:26.165 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:39:26.165 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 17:39:26.232 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:39:26.235 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 17:39:26.294 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:39:26.294 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 17:39:26.347 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:39:26.347 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:39:26.408 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:39:26.409 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 17:39:26.458 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:39:26.459 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:39:26.519 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:39:26.520 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 17:39:26.588 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:39:26.596 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 17:39:26.691 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:39:26.691 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 17:39:26.768 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:39:26.768 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 17:39:26.847 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:39:26.848 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 17:39:26.926 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:39:26.927 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 17:39:27.007 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:39:27.008 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:39:27.362 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:39:27.367 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:39:27.402 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:39:27.403 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 17:39:27.436 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 17:39:27.437 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
[MASTER] 17:39:28.406 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:39:28.407 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 17:39:28.431 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:39:28.432 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 17:39:29.315 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:39:29.315 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:39:29.337 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:39:29.338 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 17:39:29.362 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:39:29.362 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 17:39:29.386 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:39:29.386 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
[MASTER] 17:39:30.075 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:39:30.076 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 17:39:30.117 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:39:30.118 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 17:39:30.163 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:39:30.163 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 17:39:30.189 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:39:30.189 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:39:30.213 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:39:30.213 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 17:39:30.238 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:39:30.238 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 17:39:30.266 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:39:30.267 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 17:39:30.296 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:39:30.296 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 17:39:30.322 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:39:30.322 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 17:39:30.353 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:39:30.353 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 17:39:30.395 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:39:30.396 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 17:39:30.436 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:39:30.437 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 17:39:30.474 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:39:30.475 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 17:39:30.512 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:39:30.513 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 17:39:30.547 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:39:30.548 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 4 called: 0 to improve: false
** Write a test suite: 18 called: 1 to improve: false
** Write a test suite: 30 called: 2 to improve: false
** Write a test suite: 39 called: 3 to improve: false
** Write a test suite: 41 called: 4 to improve: false
** Write a test suite: 43 called: 5 to improve: false
** Write a test suite: 45 called: 6 to improve: false
** Write a test suite: 52 called: 7 to improve: false
** Write a test suite: 61 called: 8 to improve: false
** Write a test suite: 63 called: 9 to improve: false
** Write a test suite: 70 called: 10 to improve: false
** Write a test suite: 71 called: 11 to improve: false
** Write a test suite: 76 called: 12 to improve: false
** Write a test suite: 83 called: 13 to improve: false
[MASTER] 17:39:33.609 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:39:33.610 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 10 called: 0 to improve: false
** Write a test suite: 17 called: 1 to improve: false
** Write a test suite: 22 called: 2 to improve: false
** Write a test suite: 23 called: 3 to improve: false
** Write a test suite: 30 called: 4 to improve: false
** Write a test suite: 32 called: 5 to improve: false
** Write a test suite: 41 called: 6 to improve: false
** Write a test suite: 48 called: 7 to improve: false
** Write a test suite: 50 called: 8 to improve: false
** Write a test suite: 52 called: 9 to improve: false
** Write a test suite: 54 called: 10 to improve: false
** Write a test suite: 63 called: 11 to improve: false
** Write a test suite: 75 called: 12 to improve: false
** Write a test suite: 89 called: 13 to improve: false
[MASTER] 17:39:36.075 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:39:36.077 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
[MASTER] 17:39:36.515 [logback-1] WARN  TimeController - Already entered in phase: INLINING. This will mess up the timing calculations.
* test suite isTestSuite: 110
Test 0: 
byte[] byteArray = new byte[8];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, 1493, (-1));
StringReader stringReader = new StringReader("pWtrdn]pAxbUP");
javaCharStream.ReInit((Reader) stringReader);
Test 1: 
StringReader stringReader = new StringReader(" 7^,ht^y.r[");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 796, 2452);
javaCharStream.getBeginColumn();
Test 2: 
byte[] byteArray = new byte[0];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
SequenceInputStream sequenceInputStream = new SequenceInputStream(byteArrayInputStream, byteArrayInputStream);
JavaCharStream javaCharStream = new JavaCharStream(sequenceInputStream, 0, 0, 0);
javaCharStream.ReInit((InputStream) sequenceInputStream);
Test 3: 
StringReader stringReader = new StringReader("C7|WymBRD.75\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.ReInit((Reader) stringReader, (-2691), 1);
Test 4: 
StringReader stringReader = new StringReader("([k]");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.getBeginLine();
Test 5: 
JavaCharStream.hexval('0');
Test 6: 
JavaCharStream.hexval('7');
Test 7: 
JavaCharStream.hexval('1');
Test 8: 
JavaCharStream.hexval('2');
Test 9: 
JavaCharStream.hexval('3');
Test 10: 
JavaCharStream.hexval('4');
Test 11: 
JavaCharStream.hexval('5');
Test 12: 
JavaCharStream.hexval('6');
Test 13: 
JavaCharStream.hexval('8');
Test 14: 
JavaCharStream.hexval('9');
Test 15: 
try { 
  JavaCharStream.hexval(':');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 16: 
try { 
  JavaCharStream.hexval(';');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 17: 
try { 
  JavaCharStream.hexval('<');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 18: 
try { 
  JavaCharStream.hexval('=');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 19: 
try { 
  JavaCharStream.hexval('>');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 20: 
try { 
  JavaCharStream.hexval('?');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 21: 
try { 
  JavaCharStream.hexval('@');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 22: 
JavaCharStream.hexval('A');
Test 23: 
JavaCharStream.hexval('B');
Test 24: 
JavaCharStream.hexval('C');
Test 25: 
JavaCharStream.hexval('D');
Test 26: 
JavaCharStream.hexval('E');
Test 27: 
JavaCharStream.hexval('F');
Test 28: 
try { 
  JavaCharStream.hexval('G');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 29: 
try { 
  JavaCharStream.hexval('H');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 30: 
try { 
  JavaCharStream.hexval('I');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 31: 
try { 
  JavaCharStream.hexval('J');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 32: 
try { 
  JavaCharStream.hexval('K');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 33: 
try { 
  JavaCharStream.hexval('L');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 34: 
try { 
  JavaCharStream.hexval('M');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 35: 
try { 
  JavaCharStream.hexval('N');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 36: 
try { 
  JavaCharStream.hexval('O');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 37: 
try { 
  JavaCharStream.hexval('P');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 38: 
try { 
  JavaCharStream.hexval('Q');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 39: 
try { 
  JavaCharStream.hexval('R');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 40: 
try { 
  JavaCharStream.hexval('S');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 41: 
try { 
  JavaCharStream.hexval('T');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 42: 
try { 
  JavaCharStream.hexval('U');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 43: 
try { 
  JavaCharStream.hexval('V');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 44: 
try { 
  JavaCharStream.hexval('W');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 45: 
try { 
  JavaCharStream.hexval('X');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 46: 
try { 
  JavaCharStream.hexval('Y');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 47: 
try { 
  JavaCharStream.hexval('Z');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 48: 
try { 
  JavaCharStream.hexval('[');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 49: 
try { 
  JavaCharStream.hexval('\\');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 50: 
try { 
  JavaCharStream.hexval(']');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 51: 
try { 
  JavaCharStream.hexval('^');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 52: 
try { 
  JavaCharStream.hexval('_');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 53: 
try { 
  JavaCharStream.hexval('`');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 54: 
JavaCharStream.hexval('a');
Test 55: 
JavaCharStream.hexval('b');
Test 56: 
JavaCharStream.hexval('c');
Test 57: 
JavaCharStream.hexval('d');
Test 58: 
JavaCharStream.hexval('e');
Test 59: 
JavaCharStream.hexval('f');
Test 60: 
try { 
  JavaCharStream.hexval('n');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 61: 
StringReader stringReader = new StringReader("b");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-1), 129, 129);
javaCharStream.AdjustBuffSize();
Test 62: 
StringReader stringReader = new StringReader("C7|WymBRD.75\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 165, 165, 165);
// Undeclared exception!
try { 
  javaCharStream.ExpandBuff(true);
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 63: 
StringReader stringReader = new StringReader("");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
try { 
  javaCharStream.BeginToken();
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 64: 
PipedInputStream pipedInputStream = new PipedInputStream(450);
JavaCharStream javaCharStream = new JavaCharStream(pipedInputStream, 520, 520);
try { 
  javaCharStream.FillBuff();
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // Pipe not connected
   //
   verifyException("java.io.PipedInputStream", e);
}

Test 65: 
StringReader stringReader = new StringReader("C7|WymBRD.75\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.BeginToken();
javaCharStream.BeginToken();
Test 66: 
StringReader stringReader = new StringReader("E]HoO;7");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 129, 2358, 129);
javaCharStream.available = 78;
javaCharStream.AdjustBuffSize();
Test 67: 
byte[] byteArray = new byte[0];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
BufferedInputStream bufferedInputStream = new BufferedInputStream(byteArrayInputStream);
JavaCharStream javaCharStream = new JavaCharStream(bufferedInputStream, (-552), 13);
javaCharStream.backup(13);
javaCharStream.BeginToken();
javaCharStream.AdjustBuffSize();
Test 68: 
byte[] byteArray = new byte[3];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
BufferedInputStream bufferedInputStream = new BufferedInputStream(byteArrayInputStream);
JavaCharStream javaCharStream = new JavaCharStream(bufferedInputStream, 0, (byte)7);
javaCharStream.prevCharIsLF = true;
javaCharStream.BeginToken();
Test 69: 
StringReader stringReader = new StringReader("iYEp3djXv:u'");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.prevCharIsCR = true;
javaCharStream.BeginToken();
Test 70: 
StringReader stringReader = new StringReader("]-7!F=t\"*dOi@y'9lyd");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 107, 107, 107);
javaCharStream.backup(107);
javaCharStream.readChar();
Test 71: 
StringReader stringReader = new StringReader("]-7!F=\"*di@y'9ld");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 95, 95, 2);
javaCharStream.inBuf = 95;
javaCharStream.BeginToken();
javaCharStream.BeginToken();
javaCharStream.readChar();
Test 72: 
byte[] byteArray = new byte[2];
byteArray[0] = (byte)92;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
BufferedInputStream bufferedInputStream = new BufferedInputStream(byteArrayInputStream);
JavaCharStream javaCharStream = new JavaCharStream(bufferedInputStream);
javaCharStream.BeginToken();
Test 73: 
byte[] byteArray = new byte[3];
byteArray[1] = (byte)92;
byteArray[2] = (byte)92;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, (-1), (byte)92);
javaCharStream.BeginToken();
javaCharStream.readChar();
Test 74: 
byte[] byteArray = new byte[2];
byteArray[1] = (byte)92;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
BufferedInputStream bufferedInputStream = new BufferedInputStream(byteArrayInputStream);
JavaCharStream javaCharStream = new JavaCharStream(bufferedInputStream, 1493, (-673));
javaCharStream.BeginToken();
javaCharStream.readChar();
Test 75: 
byte[] byteArray = new byte[0];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
SequenceInputStream sequenceInputStream = new SequenceInputStream(byteArrayInputStream, byteArrayInputStream);
JavaCharStream javaCharStream = new JavaCharStream(sequenceInputStream, 0, 0, 0);
javaCharStream.Done();
javaCharStream.ReInit((InputStream) byteArrayInputStream, 1, 3997);
Test 76: 
byte[] byteArray = new byte[6];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, 1493, (-1));
javaCharStream.BeginToken();
javaCharStream.GetImage();
Test 77: 
StringReader stringReader = new StringReader("");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.GetSuffix(2048);
Test 78: 
StringReader stringReader = new StringReader("C7|WymBRD.75\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 0, 1440, 4989);
javaCharStream.GetSuffix(0);
Test 79: 
StringReader stringReader = new StringReader("ZiNw)^eie6.hMz:M");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.readChar();
javaCharStream.adjustBeginLineColumn(8, 8);
Test 80: 
StringReader stringReader = new StringReader(" column ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 82, 85);
javaCharStream.adjustBeginLineColumn(0, 117);
Test 81: 
StringReader stringReader = new StringReader("^Wqa U;!WsW'u0");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.adjustBeginLineColumn((-2490), 14);
javaCharStream.adjustBeginLineColumn(83, (-1));
Test 82: 
StringReader stringReader = new StringReader("+a[<");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
byte[] byteArray = new byte[2];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray, (byte)122, (byte)122);
javaCharStream.ReInit((InputStream) byteArrayInputStream, 0, (int) (byte)122, 0);
Test 83: 
byte[] byteArray = new byte[6];
byteArray[0] = (byte)13;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
BufferedInputStream bufferedInputStream = new BufferedInputStream(byteArrayInputStream);
JavaCharStream javaCharStream = new JavaCharStream(bufferedInputStream, (byte)13, (-1));
javaCharStream.BeginToken();
Test 84: 
byte[] byteArray = new byte[2];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
BufferedInputStream bufferedInputStream = new BufferedInputStream(byteArrayInputStream);
JavaCharStream javaCharStream = new JavaCharStream(bufferedInputStream, 1493, (byte)92);
javaCharStream.available = (int) (byte)0;
javaCharStream.readChar();
Test 85: 
byte[] byteArray = new byte[3];
byteArray[1] = (byte)92;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
BufferedInputStream bufferedInputStream = new BufferedInputStream(byteArrayInputStream);
JavaCharStream javaCharStream = new JavaCharStream(bufferedInputStream, (-552), (byte)92);
javaCharStream.readChar();
javaCharStream.readChar();
Test 86: 
byte[] byteArray = new byte[3];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
BufferedInputStream bufferedInputStream = new BufferedInputStream(byteArrayInputStream);
JavaCharStream javaCharStream = new JavaCharStream(bufferedInputStream, (-552), (byte)92);
javaCharStream.backup((-552));
Test 87: 
StringReader stringReader = new StringReader("rdwxdh(");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (byte)55, (byte)55, (byte)55);
javaCharStream.ReInit((Reader) stringReader, 8, 4088, 2471);
javaCharStream.ReInit((Reader) stringReader, (-41), (int) (byte)55, 2471);
Test 88: 
StringReader stringReader = new StringReader("Z#C/.=N>`");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 0, 72, 0);
javaCharStream.GetImage();
Test 89: 
StringReader stringReader = new StringReader("Invalid escape character at line ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.ReadByte();
Test 90: 
StringReader stringReader = new StringReader("]-7!F=t\"*dOi@y'9lyd");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 98, 98, 2);
javaCharStream.BeginToken();
javaCharStream.ReadByte();
Test 91: 
StringReader stringReader = new StringReader("]-7!F=t\"*dOi@y'9lyd");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 98, 98, 2);
javaCharStream.ReadByte();
Test 92: 
StringReader stringReader = new StringReader(" 7^,ht^y.r[");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 796, 2452);
javaCharStream.adjustBeginLineColumn(2452, (-1331));
javaCharStream.getBeginColumn();
Test 93: 
PipedOutputStream pipedOutputStream = new PipedOutputStream();
PipedInputStream pipedInputStream = new PipedInputStream(pipedOutputStream);
JavaCharStream javaCharStream = new JavaCharStream(pipedInputStream, 86, 1604, 4096);
javaCharStream.adjustBeginLineColumn(2850, 4096);
javaCharStream.getBeginColumn();
Test 94: 
StringReader stringReader = new StringReader("b");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-1), 129, 129);
javaCharStream.BeginToken();
javaCharStream.getBeginLine();
Test 95: 
StringReader stringReader = new StringReader("^Wqa U;!WsW'u0");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.readChar();
javaCharStream.getBeginLine();
Test 96: 
StringReader stringReader = new StringReader("vN^xq9QX[<'X5o=a@U,");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1168, (-3017), 1);
javaCharStream.BeginToken();
javaCharStream.getColumn();
Test 97: 
StringReader stringReader = new StringReader("sA");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.BeginToken();
javaCharStream.getColumn();
Test 98: 
StringReader stringReader = new StringReader("");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.backup(2);
javaCharStream.getColumn();
Test 99: 
StringReader stringReader = new StringReader("PJE");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 82, (-2858));
javaCharStream.BeginToken();
javaCharStream.getEndColumn();
Test 100: 
StringReader stringReader = new StringReader(" column ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 82, 85);
javaCharStream.BeginToken();
javaCharStream.getEndColumn();
Test 101: 
StringReader stringReader = new StringReader(" column ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 82, 85);
javaCharStream.backup(85);
javaCharStream.getEndColumn();
Test 102: 
StringReader stringReader = new StringReader("]-7!F=\"*di@y'9ld");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (byte) (-110), (byte)0, 3919);
javaCharStream.BeginToken();
javaCharStream.getEndLine();
Test 103: 
StringReader stringReader = new StringReader("C[@rpu,N*Y@k=B;=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 83, 1, 83);
javaCharStream.BeginToken();
javaCharStream.getEndLine();
Test 104: 
StringReader stringReader = new StringReader("]-7!F=\"*di@y'9ld");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 95, 95, 2);
javaCharStream.inBuf = 95;
javaCharStream.BeginToken();
javaCharStream.getEndLine();
Test 105: 
StringReader stringReader = new StringReader("b");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-1), 129, 129);
javaCharStream.readChar();
javaCharStream.getLine();
Test 106: 
StringReader stringReader = new StringReader("C7|WymBRD.75\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 421, 421, 95);
javaCharStream.readChar();
javaCharStream.getLine();
Test 107: 
StringReader stringReader = new StringReader("]-7!F=t\"*dOi@y'9lyd");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 95, 95, 2);
javaCharStream.inBuf = 95;
javaCharStream.BeginToken();
javaCharStream.getLine();
Test 108: 
StringReader stringReader = new StringReader("9x([j]`");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.readChar();
Test 109: 
StringReader stringReader = new StringReader("]-7!F=\"*di@y'9ld");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
// Undeclared exception!
try { 
  javaCharStream.UpdateLineColumn('a');
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // -1
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}


* Minimizing test suite
* test suite isTestSuite: 110
Test 0: 
PipedInputStream pipedInputStream = new PipedInputStream(450);
JavaCharStream javaCharStream = new JavaCharStream(pipedInputStream, 520, 520);
try { 
  javaCharStream.FillBuff();
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // Pipe not connected
   //
   verifyException("java.io.PipedInputStream", e);
}

Test 1: 
byte[] byteArray = new byte[8];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, 1493, (-1));
StringReader stringReader = new StringReader("pWtrdn]pAxbUP");
javaCharStream.ReInit((Reader) stringReader);
Test 2: 
StringReader stringReader = new StringReader(" 7^,ht^y.r[");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 796, 2452);
javaCharStream.getBeginColumn();
Test 3: 
byte[] byteArray = new byte[0];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
SequenceInputStream sequenceInputStream = new SequenceInputStream(byteArrayInputStream, byteArrayInputStream);
JavaCharStream javaCharStream = new JavaCharStream(sequenceInputStream, 0, 0, 0);
javaCharStream.ReInit((InputStream) sequenceInputStream);
Test 4: 
StringReader stringReader = new StringReader("C7|WymBRD.75\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.ReInit((Reader) stringReader, (-2691), 1);
Test 5: 
StringReader stringReader = new StringReader("([k]");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.getBeginLine();
Test 6: 
byte[] byteArray = new byte[0];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
SequenceInputStream sequenceInputStream = new SequenceInputStream(byteArrayInputStream, byteArrayInputStream);
JavaCharStream javaCharStream = new JavaCharStream(sequenceInputStream, 0, 0, 0);
javaCharStream.Done();
javaCharStream.ReInit((InputStream) byteArrayInputStream, 1, 3997);
Test 7: 
JavaCharStream.hexval('0');
Test 8: 
JavaCharStream.hexval('1');
Test 9: 
JavaCharStream.hexval('2');
Test 10: 
JavaCharStream.hexval('3');
Test 11: 
JavaCharStream.hexval('4');
Test 12: 
JavaCharStream.hexval('5');
Test 13: 
JavaCharStream.hexval('6');
Test 14: 
JavaCharStream.hexval('7');
Test 15: 
JavaCharStream.hexval('8');
Test 16: 
JavaCharStream.hexval('9');
Test 17: 
try { 
  JavaCharStream.hexval(':');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 18: 
try { 
  JavaCharStream.hexval(';');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 19: 
try { 
  JavaCharStream.hexval('<');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 20: 
try { 
  JavaCharStream.hexval('=');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 21: 
try { 
  JavaCharStream.hexval('>');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 22: 
try { 
  JavaCharStream.hexval('?');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 23: 
try { 
  JavaCharStream.hexval('@');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 24: 
JavaCharStream.hexval('A');
Test 25: 
JavaCharStream.hexval('B');
Test 26: 
JavaCharStream.hexval('C');
Test 27: 
JavaCharStream.hexval('D');
Test 28: 
JavaCharStream.hexval('E');
Test 29: 
JavaCharStream.hexval('F');
Test 30: 
try { 
  JavaCharStream.hexval('G');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 31: 
try { 
  JavaCharStream.hexval('H');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 32: 
try { 
  JavaCharStream.hexval('I');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 33: 
try { 
  JavaCharStream.hexval('J');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 34: 
try { 
  JavaCharStream.hexval('K');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 35: 
try { 
  JavaCharStream.hexval('L');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 36: 
try { 
  JavaCharStream.hexval('M');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 37: 
try { 
  JavaCharStream.hexval('N');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 38: 
try { 
  JavaCharStream.hexval('O');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 39: 
try { 
  JavaCharStream.hexval('P');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 40: 
try { 
  JavaCharStream.hexval('Q');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 41: 
try { 
  JavaCharStream.hexval('R');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 42: 
try { 
  JavaCharStream.hexval('S');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 43: 
try { 
  JavaCharStream.hexval('T');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 44: 
try { 
  JavaCharStream.hexval('U');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 45: 
try { 
  JavaCharStream.hexval('V');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 46: 
try { 
  JavaCharStream.hexval('W');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 47: 
try { 
  JavaCharStream.hexval('X');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 48: 
try { 
  JavaCharStream.hexval('Y');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 49: 
try { 
  JavaCharStream.hexval('Z');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 50: 
try { 
  JavaCharStream.hexval('[');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 51: 
try { 
  JavaCharStream.hexval('\\');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 52: 
try { 
  JavaCharStream.hexval(']');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 53: 
try { 
  JavaCharStream.hexval('^');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 54: 
try { 
  JavaCharStream.hexval('_');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 55: 
try { 
  JavaCharStream.hexval('`');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 56: 
JavaCharStream.hexval('a');
Test 57: 
JavaCharStream.hexval('b');
Test 58: 
JavaCharStream.hexval('c');
Test 59: 
JavaCharStream.hexval('d');
Test 60: 
JavaCharStream.hexval('e');
Test 61: 
JavaCharStream.hexval('f');
Test 62: 
try { 
  JavaCharStream.hexval('n');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 63: 
StringReader stringReader = new StringReader("b");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-1), 129, 129);
javaCharStream.AdjustBuffSize();
Test 64: 
StringReader stringReader = new StringReader("C7|WymBRD.75\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 165, 165, 165);
// Undeclared exception!
try { 
  javaCharStream.ExpandBuff(true);
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 65: 
StringReader stringReader = new StringReader("9x([j]`");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.readChar();
Test 66: 
StringReader stringReader = new StringReader("");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
try { 
  javaCharStream.BeginToken();
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 67: 
StringReader stringReader = new StringReader("C7|WymBRD.75\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.BeginToken();
javaCharStream.BeginToken();
Test 68: 
StringReader stringReader = new StringReader("]-7!F=\"*di@y'9ld");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 95, 95, 2);
javaCharStream.inBuf = 95;
javaCharStream.BeginToken();
javaCharStream.BeginToken();
javaCharStream.readChar();
Test 69: 
StringReader stringReader = new StringReader("E]HoO;7");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 129, 2358, 129);
javaCharStream.available = 78;
javaCharStream.AdjustBuffSize();
Test 70: 
byte[] byteArray = new byte[0];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
BufferedInputStream bufferedInputStream = new BufferedInputStream(byteArrayInputStream);
JavaCharStream javaCharStream = new JavaCharStream(bufferedInputStream, (-552), 13);
javaCharStream.backup(13);
javaCharStream.BeginToken();
javaCharStream.AdjustBuffSize();
Test 71: 
byte[] byteArray = new byte[2];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
BufferedInputStream bufferedInputStream = new BufferedInputStream(byteArrayInputStream);
JavaCharStream javaCharStream = new JavaCharStream(bufferedInputStream, 1493, (byte)92);
javaCharStream.available = (int) (byte)0;
javaCharStream.readChar();
Test 72: 
byte[] byteArray = new byte[3];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
BufferedInputStream bufferedInputStream = new BufferedInputStream(byteArrayInputStream);
JavaCharStream javaCharStream = new JavaCharStream(bufferedInputStream, 0, (byte)7);
javaCharStream.prevCharIsLF = true;
javaCharStream.BeginToken();
Test 73: 
StringReader stringReader = new StringReader("iYEp3djXv:u'");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.prevCharIsCR = true;
javaCharStream.BeginToken();
Test 74: 
byte[] byteArray = new byte[6];
byteArray[0] = (byte)13;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
BufferedInputStream bufferedInputStream = new BufferedInputStream(byteArrayInputStream);
JavaCharStream javaCharStream = new JavaCharStream(bufferedInputStream, (byte)13, (-1));
javaCharStream.BeginToken();
Test 75: 
StringReader stringReader = new StringReader("]-7!F=t\"*dOi@y'9lyd");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 107, 107, 107);
javaCharStream.backup(107);
javaCharStream.readChar();
Test 76: 
byte[] byteArray = new byte[2];
byteArray[0] = (byte)92;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
BufferedInputStream bufferedInputStream = new BufferedInputStream(byteArrayInputStream);
JavaCharStream javaCharStream = new JavaCharStream(bufferedInputStream);
javaCharStream.BeginToken();
Test 77: 
byte[] byteArray = new byte[3];
byteArray[1] = (byte)92;
byteArray[2] = (byte)92;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, (-1), (byte)92);
javaCharStream.BeginToken();
javaCharStream.readChar();
Test 78: 
byte[] byteArray = new byte[2];
byteArray[1] = (byte)92;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
BufferedInputStream bufferedInputStream = new BufferedInputStream(byteArrayInputStream);
JavaCharStream javaCharStream = new JavaCharStream(bufferedInputStream, 1493, (-673));
javaCharStream.BeginToken();
javaCharStream.readChar();
Test 79: 
StringReader stringReader = new StringReader("rdwxdh(");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (byte)55, (byte)55, (byte)55);
javaCharStream.ReInit((Reader) stringReader, 8, 4088, 2471);
javaCharStream.ReInit((Reader) stringReader, (-41), (int) (byte)55, 2471);
Test 80: 
StringReader stringReader = new StringReader("Z#C/.=N>`");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 0, 72, 0);
javaCharStream.GetImage();
Test 81: 
byte[] byteArray = new byte[6];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, 1493, (-1));
javaCharStream.BeginToken();
javaCharStream.GetImage();
Test 82: 
StringReader stringReader = new StringReader("");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.GetSuffix(2048);
Test 83: 
StringReader stringReader = new StringReader("C7|WymBRD.75\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 0, 1440, 4989);
javaCharStream.GetSuffix(0);
Test 84: 
StringReader stringReader = new StringReader(" column ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 82, 85);
javaCharStream.adjustBeginLineColumn(0, 117);
Test 85: 
StringReader stringReader = new StringReader("ZiNw)^eie6.hMz:M");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.readChar();
javaCharStream.adjustBeginLineColumn(8, 8);
Test 86: 
StringReader stringReader = new StringReader("^Wqa U;!WsW'u0");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.adjustBeginLineColumn((-2490), 14);
javaCharStream.adjustBeginLineColumn(83, (-1));
Test 87: 
StringReader stringReader = new StringReader("+a[<");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
byte[] byteArray = new byte[2];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray, (byte)122, (byte)122);
javaCharStream.ReInit((InputStream) byteArrayInputStream, 0, (int) (byte)122, 0);
Test 88: 
byte[] byteArray = new byte[3];
byteArray[1] = (byte)92;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
BufferedInputStream bufferedInputStream = new BufferedInputStream(byteArrayInputStream);
JavaCharStream javaCharStream = new JavaCharStream(bufferedInputStream, (-552), (byte)92);
javaCharStream.readChar();
javaCharStream.readChar();
Test 89: 
byte[] byteArray = new byte[3];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
BufferedInputStream bufferedInputStream = new BufferedInputStream(byteArrayInputStream);
JavaCharStream javaCharStream = new JavaCharStream(bufferedInputStream, (-552), (byte)92);
javaCharStream.backup((-552));
Test 90: 
StringReader stringReader = new StringReader("Invalid escape character at line ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.ReadByte();
Test 91: 
StringReader stringReader = new StringReader("]-7!F=t\"*dOi@y'9lyd");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 98, 98, 2);
javaCharStream.BeginToken();
javaCharStream.ReadByte();
Test 92: 
StringReader stringReader = new StringReader("]-7!F=t\"*dOi@y'9lyd");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 98, 98, 2);
javaCharStream.ReadByte();
Test 93: 
StringReader stringReader = new StringReader(" 7^,ht^y.r[");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 796, 2452);
javaCharStream.adjustBeginLineColumn(2452, (-1331));
javaCharStream.getBeginColumn();
Test 94: 
PipedOutputStream pipedOutputStream = new PipedOutputStream();
PipedInputStream pipedInputStream = new PipedInputStream(pipedOutputStream);
JavaCharStream javaCharStream = new JavaCharStream(pipedInputStream, 86, 1604, 4096);
javaCharStream.adjustBeginLineColumn(2850, 4096);
javaCharStream.getBeginColumn();
Test 95: 
StringReader stringReader = new StringReader("b");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-1), 129, 129);
javaCharStream.BeginToken();
javaCharStream.getBeginLine();
Test 96: 
StringReader stringReader = new StringReader("^Wqa U;!WsW'u0");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.readChar();
javaCharStream.getBeginLine();
Test 97: 
StringReader stringReader = new StringReader("vN^xq9QX[<'X5o=a@U,");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1168, (-3017), 1);
javaCharStream.BeginToken();
javaCharStream.getColumn();
Test 98: 
StringReader stringReader = new StringReader("sA");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.BeginToken();
javaCharStream.getColumn();
Test 99: 
StringReader stringReader = new StringReader("");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.backup(2);
javaCharStream.getColumn();
Test 100: 
StringReader stringReader = new StringReader("PJE");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 82, (-2858));
javaCharStream.BeginToken();
javaCharStream.getEndColumn();
Test 101: 
StringReader stringReader = new StringReader(" column ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 82, 85);
javaCharStream.BeginToken();
javaCharStream.getEndColumn();
Test 102: 
StringReader stringReader = new StringReader(" column ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 82, 85);
javaCharStream.backup(85);
javaCharStream.getEndColumn();
Test 103: 
StringReader stringReader = new StringReader("]-7!F=\"*di@y'9ld");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (byte) (-110), (byte)0, 3919);
javaCharStream.BeginToken();
javaCharStream.getEndLine();
Test 104: 
StringReader stringReader = new StringReader("C[@rpu,N*Y@k=B;=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 83, 1, 83);
javaCharStream.BeginToken();
javaCharStream.getEndLine();
Test 105: 
StringReader stringReader = new StringReader("]-7!F=\"*di@y'9ld");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 95, 95, 2);
javaCharStream.inBuf = 95;
javaCharStream.BeginToken();
javaCharStream.getEndLine();
Test 106: 
StringReader stringReader = new StringReader("b");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-1), 129, 129);
javaCharStream.readChar();
javaCharStream.getLine();
Test 107: 
StringReader stringReader = new StringReader("C7|WymBRD.75\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 421, 421, 95);
javaCharStream.readChar();
javaCharStream.getLine();
Test 108: 
StringReader stringReader = new StringReader("]-7!F=t\"*dOi@y'9lyd");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 95, 95, 2);
javaCharStream.inBuf = 95;
javaCharStream.BeginToken();
javaCharStream.getLine();
Test 109: 
StringReader stringReader = new StringReader("]-7!F=\"*di@y'9ld");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
// Undeclared exception!
try { 
  javaCharStream.UpdateLineColumn('a');
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // -1
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}


[MASTER] 17:39:43.704 [logback-1] WARN  TimeController - Already entered in phase: MINIMIZATION. This will mess up the timing calculations.
* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 92%
* Total number of goals: 216
* Number of covered goals: 198
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 90%
* Total number of goals: 239
* Number of covered goals: 214
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 92%
* Total number of goals: 36
* Number of covered goals: 33
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 31
* Number of covered goals: 31
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 91%
* Total number of goals: 216
* Number of covered goals: 197
* Generated 110 tests with total length 290
* Resulting test suite's coverage: 93% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 17:39:43.948 [logback-1] WARN  TimeController - Already entered in phase: COVERAGE_ANALYSIS. This will mess up the timing calculations.
* Resulting test suite's mutation score: 31%
[MASTER] 17:41:25.102 [logback-1] WARN  TimeController - Already entered in phase: ASSERTION_GENERATION. This will mess up the timing calculations.
* Compiling and checking tests
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:41:31.450 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:41:31.450 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:41:31.478 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:41:31.479 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:41:31.509 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:41:31.510 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:41:31.537 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:41:31.538 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:41:31.565 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:41:31.566 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:41:31.594 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:41:31.595 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:41:31.633 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:41:31.634 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:41:31.681 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:41:31.682 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
[MASTER] 17:41:31.722 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:41:31.723 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:41:31.775 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:41:31.776 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:41:31.817 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:41:31.818 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:41:31.861 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:41:31.862 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:41:31.895 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:41:31.896 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:41:31.925 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:41:31.926 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:41:31.957 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:41:31.958 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:41:31.987 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:41:31.988 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:41:32.016 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:41:32.017 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:41:32.046 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:41:32.047 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:41:32.079 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:41:32.080 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:41:32.110 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:41:32.111 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:41:32.166 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:41:32.167 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:41:32.230 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:41:32.230 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:41:32.279 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:41:32.280 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:41:32.313 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:41:32.313 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:41:32.360 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:41:32.361 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:41:32.394 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:41:32.395 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:41:32.428 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:41:32.429 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:41:32.470 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:41:32.471 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:41:32.511 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:41:32.512 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:41:32.552 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:41:32.553 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:41:32.595 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:41:32.597 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:41:32.642 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:41:32.642 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:41:32.689 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:41:32.690 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:41:32.730 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:41:32.730 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:41:32.768 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:41:32.769 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:41:32.808 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:41:32.809 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:41:32.850 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:41:32.851 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:41:32.892 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:41:32.892 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:41:32.931 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:41:32.932 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:41:32.987 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:41:32.988 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:41:33.041 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:41:33.042 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:41:33.084 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:41:33.085 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:41:33.122 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:41:33.123 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:41:33.158 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:41:33.158 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:41:33.199 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:41:33.200 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:41:33.243 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:41:33.244 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:41:33.286 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:41:33.287 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:41:33.321 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:41:33.321 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:41:33.354 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:41:33.355 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:41:33.388 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:41:33.389 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:41:33.422 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:41:33.423 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:41:33.462 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:41:33.463 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:41:33.497 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:41:33.498 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:41:33.538 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:41:33.538 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:41:33.573 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:41:33.573 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:41:33.620 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:41:33.621 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:41:33.660 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:41:33.661 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:41:33.694 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:41:33.695 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:41:33.730 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:41:33.731 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:41:33.766 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:41:33.767 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:41:33.802 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:41:33.802 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:41:33.839 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:41:33.840 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:41:33.875 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:41:33.876 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:41:33.913 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:41:33.914 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:41:34.010 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:41:34.011 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:41:34.092 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:41:34.093 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:41:34.112 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:41:34.113 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:41:34.133 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:41:34.134 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:41:34.158 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:41:34.159 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:41:34.179 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:41:34.180 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:41:34.201 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:41:34.202 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:41:34.223 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:41:34.223 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:41:34.245 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:41:34.246 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:41:34.888 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:41:34.889 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:41:34.924 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:41:34.924 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:41:35.675 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:41:35.676 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:41:35.724 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:41:35.725 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
[MASTER] 17:41:35.767 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
* Compiling Tests
[MASTER] 17:41:35.768 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:41:35.810 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:41:35.811 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:41:36.491 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:41:36.492 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:41:36.524 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:41:36.524 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:41:36.575 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:41:36.575 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
[MASTER] 17:41:36.602 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:41:36.602 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:41:36.635 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:41:36.635 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:41:36.658 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 17:41:36.658 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:41:36.690 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:41:36.690 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:41:36.713 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:41:36.714 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:41:36.739 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:41:36.740 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:41:36.766 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:41:36.766 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:41:36.796 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:41:36.796 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:41:36.823 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:41:36.824 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:41:36.860 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:41:36.860 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 17:41:36.910 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:41:36.911 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 17:41:36.956 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:41:36.957 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 17:41:36.990 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:41:36.991 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
** Write a test suite: 4 called: 4 to improve: false
** Write a test suite: 5 called: 5 to improve: false
** Write a test suite: 6 called: 6 to improve: false
** Write a test suite: 7 called: 7 to improve: false
** Write a test suite: 8 called: 8 to improve: false
** Write a test suite: 9 called: 9 to improve: false
** Write a test suite: 10 called: 10 to improve: false
** Write a test suite: 11 called: 11 to improve: false
** Write a test suite: 12 called: 12 to improve: false
** Write a test suite: 13 called: 13 to improve: false
** Write a test suite: 14 called: 14 to improve: false
** Write a test suite: 15 called: 15 to improve: false
** Write a test suite: 16 called: 16 to improve: false
** Write a test suite: 17 called: 17 to improve: false
** Write a test suite: 18 called: 18 to improve: false
** Write a test suite: 19 called: 19 to improve: false
** Write a test suite: 20 called: 20 to improve: false
** Write a test suite: 21 called: 21 to improve: false
** Write a test suite: 22 called: 22 to improve: false
** Write a test suite: 23 called: 23 to improve: false
** Write a test suite: 24 called: 24 to improve: false
** Write a test suite: 25 called: 25 to improve: false
** Write a test suite: 26 called: 26 to improve: false
** Write a test suite: 27 called: 27 to improve: false
** Write a test suite: 28 called: 28 to improve: false
** Write a test suite: 29 called: 29 to improve: false
** Write a test suite: 30 called: 30 to improve: false
** Write a test suite: 31 called: 31 to improve: false
** Write a test suite: 32 called: 32 to improve: false
** Write a test suite: 33 called: 33 to improve: false
** Write a test suite: 34 called: 34 to improve: false
** Write a test suite: 35 called: 35 to improve: false
** Write a test suite: 36 called: 36 to improve: false
** Write a test suite: 37 called: 37 to improve: false
** Write a test suite: 38 called: 38 to improve: false
** Write a test suite: 39 called: 39 to improve: false
** Write a test suite: 40 called: 40 to improve: false
** Write a test suite: 41 called: 41 to improve: false
** Write a test suite: 42 called: 42 to improve: false
** Write a test suite: 43 called: 43 to improve: false
** Write a test suite: 44 called: 44 to improve: false
** Write a test suite: 45 called: 45 to improve: false
** Write a test suite: 46 called: 46 to improve: false
** Write a test suite: 47 called: 47 to improve: false
** Write a test suite: 48 called: 48 to improve: false
** Write a test suite: 49 called: 49 to improve: false
** Write a test suite: 50 called: 50 to improve: false
** Write a test suite: 51 called: 51 to improve: false
** Write a test suite: 52 called: 52 to improve: false
** Write a test suite: 53 called: 53 to improve: false
** Write a test suite: 54 called: 54 to improve: false
** Write a test suite: 55 called: 55 to improve: false
** Write a test suite: 56 called: 56 to improve: false
** Write a test suite: 57 called: 57 to improve: false
** Write a test suite: 58 called: 58 to improve: false
** Write a test suite: 59 called: 59 to improve: false
** Write a test suite: 60 called: 60 to improve: false
** Write a test suite: 61 called: 61 to improve: false
** Write a test suite: 62 called: 62 to improve: false
** Write a test suite: 63 called: 63 to improve: false
** Write a test suite: 64 called: 64 to improve: false
** Write a test suite: 65 called: 65 to improve: false
** Write a test suite: 66 called: 66 to improve: false
** Write a test suite: 67 called: 67 to improve: false
** Write a test suite: 68 called: 68 to improve: false
** Write a test suite: 69 called: 69 to improve: false
** Write a test suite: 70 called: 70 to improve: false
** Write a test suite: 71 called: 71 to improve: false
** Write a test suite: 72 called: 72 to improve: false
** Write a test suite: 73 called: 73 to improve: false
** Write a test suite: 74 called: 74 to improve: false
** Write a test suite: 75 called: 75 to improve: false
** Write a test suite: 76 called: 76 to improve: false
** Write a test suite: 77 called: 77 to improve: false
** Write a test suite: 78 called: 78 to improve: false
** Write a test suite: 79 called: 79 to improve: false
** Write a test suite: 80 called: 80 to improve: false
** Write a test suite: 81 called: 81 to improve: false
** Write a test suite: 82 called: 82 to improve: false
** Write a test suite: 83 called: 83 to improve: false
** Write a test suite: 84 called: 84 to improve: false
** Write a test suite: 85 called: 85 to improve: false
** Write a test suite: 86 called: 86 to improve: false
** Write a test suite: 87 called: 87 to improve: false
** Write a test suite: 88 called: 88 to improve: false
** Write a test suite: 89 called: 89 to improve: false
** Write a test suite: 90 called: 90 to improve: false
** Write a test suite: 91 called: 91 to improve: false
** Write a test suite: 92 called: 92 to improve: false
** Write a test suite: 93 called: 93 to improve: false
** Write a test suite: 94 called: 94 to improve: false
[MASTER] 17:41:39.905 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:41:39.906 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
** Write a test suite: 4 called: 4 to improve: false
** Write a test suite: 5 called: 5 to improve: false
** Write a test suite: 6 called: 6 to improve: false
** Write a test suite: 7 called: 7 to improve: false
** Write a test suite: 8 called: 8 to improve: false
** Write a test suite: 9 called: 9 to improve: false
** Write a test suite: 10 called: 10 to improve: false
** Write a test suite: 11 called: 11 to improve: false
** Write a test suite: 12 called: 12 to improve: false
** Write a test suite: 13 called: 13 to improve: false
** Write a test suite: 14 called: 14 to improve: false
** Write a test suite: 15 called: 15 to improve: false
** Write a test suite: 16 called: 16 to improve: false
** Write a test suite: 17 called: 17 to improve: false
** Write a test suite: 18 called: 18 to improve: false
** Write a test suite: 19 called: 19 to improve: false
** Write a test suite: 20 called: 20 to improve: false
** Write a test suite: 21 called: 21 to improve: false
** Write a test suite: 22 called: 22 to improve: false
** Write a test suite: 23 called: 23 to improve: false
** Write a test suite: 24 called: 24 to improve: false
** Write a test suite: 25 called: 25 to improve: false
** Write a test suite: 26 called: 26 to improve: false
** Write a test suite: 27 called: 27 to improve: false
** Write a test suite: 28 called: 28 to improve: false
** Write a test suite: 29 called: 29 to improve: false
** Write a test suite: 30 called: 30 to improve: false
** Write a test suite: 31 called: 31 to improve: false
** Write a test suite: 32 called: 32 to improve: false
** Write a test suite: 33 called: 33 to improve: false
** Write a test suite: 34 called: 34 to improve: false
** Write a test suite: 35 called: 35 to improve: false
** Write a test suite: 36 called: 36 to improve: false
** Write a test suite: 37 called: 37 to improve: false
** Write a test suite: 38 called: 38 to improve: false
** Write a test suite: 39 called: 39 to improve: false
** Write a test suite: 40 called: 40 to improve: false
** Write a test suite: 41 called: 41 to improve: false
** Write a test suite: 42 called: 42 to improve: false
** Write a test suite: 43 called: 43 to improve: false
** Write a test suite: 44 called: 44 to improve: false
** Write a test suite: 45 called: 45 to improve: false
** Write a test suite: 46 called: 46 to improve: false
** Write a test suite: 47 called: 47 to improve: false
** Write a test suite: 48 called: 48 to improve: false
** Write a test suite: 49 called: 49 to improve: false
** Write a test suite: 50 called: 50 to improve: false
** Write a test suite: 51 called: 51 to improve: false
** Write a test suite: 52 called: 52 to improve: false
** Write a test suite: 53 called: 53 to improve: false
** Write a test suite: 54 called: 54 to improve: false
** Write a test suite: 55 called: 55 to improve: false
** Write a test suite: 56 called: 56 to improve: false
** Write a test suite: 57 called: 57 to improve: false
** Write a test suite: 58 called: 58 to improve: false
** Write a test suite: 59 called: 59 to improve: false
** Write a test suite: 60 called: 60 to improve: false
** Write a test suite: 61 called: 61 to improve: false
** Write a test suite: 62 called: 62 to improve: false
** Write a test suite: 63 called: 63 to improve: false
** Write a test suite: 64 called: 64 to improve: false
** Write a test suite: 65 called: 65 to improve: false
** Write a test suite: 66 called: 66 to improve: false
** Write a test suite: 67 called: 67 to improve: false
** Write a test suite: 68 called: 68 to improve: false
** Write a test suite: 69 called: 69 to improve: false
** Write a test suite: 70 called: 70 to improve: false
** Write a test suite: 71 called: 71 to improve: false
** Write a test suite: 72 called: 72 to improve: false
** Write a test suite: 73 called: 73 to improve: false
** Write a test suite: 74 called: 74 to improve: false
** Write a test suite: 75 called: 75 to improve: false
** Write a test suite: 76 called: 76 to improve: false
** Write a test suite: 77 called: 77 to improve: false
** Write a test suite: 78 called: 78 to improve: false
** Write a test suite: 79 called: 79 to improve: false
** Write a test suite: 80 called: 80 to improve: false
** Write a test suite: 81 called: 81 to improve: false
** Write a test suite: 82 called: 82 to improve: false
** Write a test suite: 83 called: 83 to improve: false
** Write a test suite: 84 called: 84 to improve: false
** Write a test suite: 85 called: 85 to improve: false
** Write a test suite: 86 called: 86 to improve: false
** Write a test suite: 87 called: 87 to improve: false
** Write a test suite: 88 called: 88 to improve: false
** Write a test suite: 89 called: 89 to improve: false
** Write a test suite: 90 called: 90 to improve: false
** Write a test suite: 91 called: 91 to improve: false
** Write a test suite: 92 called: 92 to improve: false
** Write a test suite: 93 called: 93 to improve: false
** Write a test suite: 94 called: 94 to improve: false
[MASTER] 17:41:42.776 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar1095326656085649199.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 17:41:42.776 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1095326656085649199.jar
* Writing tests to file
[MASTER] 17:41:42.779 [logback-1] WARN  TimeController - Already entered in phase: JUNIT_CHECK. This will mess up the timing calculations.
* Writing JUnit test case 'JavaCharStream_ESTest' to evosuite-tests
** Write a test suite: 10 called: 0 to improve: false
** Write a test suite: 17 called: 1 to improve: false
** Write a test suite: 22 called: 2 to improve: false
** Write a test suite: 23 called: 3 to improve: false
** Write a test suite: 30 called: 4 to improve: false
** Write a test suite: 32 called: 5 to improve: false
** Write a test suite: 41 called: 6 to improve: false
** Write a test suite: 48 called: 7 to improve: false
** Write a test suite: 50 called: 8 to improve: false
** Write a test suite: 52 called: 9 to improve: false
** Write a test suite: 54 called: 10 to improve: false
** Write a test suite: 63 called: 11 to improve: false
** Write a test suite: 75 called: 12 to improve: false
** Write a test suite: 89 called: 13 to improve: false
* Writing JUnit test case 'JavaCharStream_Original_ESTest' to evosuite-tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
** Write a test suite: 4 called: 4 to improve: false
** Write a test suite: 5 called: 5 to improve: false
** Write a test suite: 6 called: 6 to improve: false
** Write a test suite: 7 called: 7 to improve: false
** Write a test suite: 8 called: 8 to improve: false
** Write a test suite: 9 called: 9 to improve: false
** Write a test suite: 10 called: 10 to improve: false
** Write a test suite: 11 called: 11 to improve: false
** Write a test suite: 12 called: 12 to improve: false
** Write a test suite: 13 called: 13 to improve: false
** Write a test suite: 14 called: 14 to improve: false
** Write a test suite: 15 called: 15 to improve: false
** Write a test suite: 16 called: 16 to improve: false
** Write a test suite: 17 called: 17 to improve: false
** Write a test suite: 18 called: 18 to improve: false
** Write a test suite: 19 called: 19 to improve: false
** Write a test suite: 20 called: 20 to improve: false
** Write a test suite: 21 called: 21 to improve: false
** Write a test suite: 22 called: 22 to improve: false
** Write a test suite: 23 called: 23 to improve: false
** Write a test suite: 24 called: 24 to improve: false
** Write a test suite: 25 called: 25 to improve: false
** Write a test suite: 26 called: 26 to improve: false
** Write a test suite: 27 called: 27 to improve: false
** Write a test suite: 28 called: 28 to improve: false
** Write a test suite: 29 called: 29 to improve: false
** Write a test suite: 30 called: 30 to improve: false
** Write a test suite: 31 called: 31 to improve: false
** Write a test suite: 32 called: 32 to improve: false
** Write a test suite: 33 called: 33 to improve: false
** Write a test suite: 34 called: 34 to improve: false
** Write a test suite: 35 called: 35 to improve: false
** Write a test suite: 36 called: 36 to improve: false
** Write a test suite: 37 called: 37 to improve: false
** Write a test suite: 38 called: 38 to improve: false
** Write a test suite: 39 called: 39 to improve: false
** Write a test suite: 40 called: 40 to improve: false
** Write a test suite: 41 called: 41 to improve: false
** Write a test suite: 42 called: 42 to improve: false
** Write a test suite: 43 called: 43 to improve: false
** Write a test suite: 44 called: 44 to improve: false
** Write a test suite: 45 called: 45 to improve: false
** Write a test suite: 46 called: 46 to improve: false
** Write a test suite: 47 called: 47 to improve: false
** Write a test suite: 48 called: 48 to improve: false
** Write a test suite: 49 called: 49 to improve: false
** Write a test suite: 50 called: 50 to improve: false
** Write a test suite: 51 called: 51 to improve: false
** Write a test suite: 52 called: 52 to improve: false
** Write a test suite: 53 called: 53 to improve: false
** Write a test suite: 54 called: 54 to improve: false
** Write a test suite: 55 called: 55 to improve: false
** Write a test suite: 56 called: 56 to improve: false
** Write a test suite: 57 called: 57 to improve: false
** Write a test suite: 58 called: 58 to improve: false
** Write a test suite: 59 called: 59 to improve: false
** Write a test suite: 60 called: 60 to improve: false
** Write a test suite: 61 called: 61 to improve: false
** Write a test suite: 62 called: 62 to improve: false
** Write a test suite: 63 called: 63 to improve: false
** Write a test suite: 64 called: 64 to improve: false
** Write a test suite: 65 called: 65 to improve: false
** Write a test suite: 66 called: 66 to improve: false
** Write a test suite: 67 called: 67 to improve: false
** Write a test suite: 68 called: 68 to improve: false
** Write a test suite: 69 called: 69 to improve: false
** Write a test suite: 70 called: 70 to improve: false
** Write a test suite: 71 called: 71 to improve: false
** Write a test suite: 72 called: 72 to improve: false
** Write a test suite: 73 called: 73 to improve: false
** Write a test suite: 74 called: 74 to improve: false
** Write a test suite: 75 called: 75 to improve: false
** Write a test suite: 76 called: 76 to improve: false
** Write a test suite: 77 called: 77 to improve: false
** Write a test suite: 78 called: 78 to improve: false
** Write a test suite: 79 called: 79 to improve: false
** Write a test suite: 80 called: 80 to improve: false
** Write a test suite: 81 called: 81 to improve: false
** Write a test suite: 82 called: 82 to improve: false
** Write a test suite: 83 called: 83 to improve: false
** Write a test suite: 84 called: 84 to improve: false
** Write a test suite: 85 called: 85 to improve: false
** Write a test suite: 86 called: 86 to improve: false
** Write a test suite: 87 called: 87 to improve: false
** Write a test suite: 88 called: 88 to improve: false
** Write a test suite: 89 called: 89 to improve: false
** Write a test suite: 90 called: 90 to improve: false
** Write a test suite: 91 called: 91 to improve: false
** Write a test suite: 92 called: 92 to improve: false
** Write a test suite: 93 called: 93 to improve: false
** Write a test suite: 94 called: 94 to improve: false
* Done!

* Computation finished
