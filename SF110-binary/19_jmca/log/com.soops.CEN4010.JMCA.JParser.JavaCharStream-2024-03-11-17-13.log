* EvoSuite 1.0.0-SNAPSHOT
* Going to generate test cases for class: com.soops.CEN4010.JMCA.JParser.JavaCharStream
* Starting Client-0
* Properties loaded from /home/roham/Results-Utestgen/dataset/SF110-new-res/19_jmca/evosuite-files/evosuite.properties
* Connecting to master process on port 20133
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class com.soops.CEN4010.JMCA.JParser.JavaCharStream
* Test criteria:
  - Branch Coverage
  - Line Coverage
  - Method-Output Coverage
  - Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 738
* Using seed 1710177194026
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%]* Initial Number of Goals in DynaMOSA = 297 / 738
[Progress:>                             2%] [Cov:==============>                    40%][Progress:>                             3%] [Cov:================>                  46%][Progress:>                             3%] [Cov:=================>                 49%][Progress:>                             3%] [Cov:====================>              58%][Progress:=>                            4%] [Cov:=====================>             61%][Progress:=>                            4%] [Cov:=====================>             62%][Progress:=>                            4%] [Cov:======================>            63%][Progress:=>                            4%] [Cov:=======================>           67%][Progress:=>                            4%] [Cov:========================>          69%][Progress:=>                            4%] [Cov:========================>          69%][Progress:=>                            4%] [Cov:========================>          70%][Progress:=>                            4%] [Cov:========================>          71%][Progress:=>                            4%] [Cov:=========================>         73%][Progress:=>                            4%] [Cov:=========================>         73%][Progress:==>                           7%] [Cov:=========================>         74%][Progress:==>                           7%] [Cov:=========================>         74%][Progress:==>                           7%] [Cov:==========================>        76%][Progress:==>                           7%] [Cov:==========================>        77%][Progress:==>                           7%] [Cov:===========================>       78%][Progress:==>                           8%] [Cov:===========================>       78%][Progress:==>                           8%] [Cov:===========================>       78%][Progress:===>                          10%] [Cov:===========================>       79%][Progress:===>                          10%] [Cov:===========================>       79%][Progress:===>                          10%] [Cov:===========================>       79%][Progress:===>                          10%] [Cov:============================>      80%][Progress:===>                          13%] [Cov:============================>      81%][Progress:===>                          13%] [Cov:============================>      82%][Progress:===>                          13%] [Cov:============================>      82%][Progress:=====>                        18%] [Cov:=============================>     83%][Progress:=====>                        18%] [Cov:=============================>     83%][Progress:=====>                        18%] [Cov:=============================>     84%][Progress:=====>                        18%] [Cov:=============================>     84%][Progress:=====>                        19%] [Cov:=============================>     85%][Progress:=====>                        19%] [Cov:=============================>     85%][Progress:======>                       21%] [Cov:=============================>     85%][Progress:======>                       21%] [Cov:=============================>     85%][Progress:======>                       21%] [Cov:==============================>    86%][Progress:======>                       21%] [Cov:==============================>    86%][Progress:======>                       21%] [Cov:==============================>    86%][Progress:=======>                      26%] [Cov:==============================>    86%][Progress:========>                     29%] [Cov:==============================>    86%][Progress:===========>                  39%] [Cov:==============================>    86%][Progress:===========>                  39%] [Cov:==============================>    87%][Progress:===========>                  39%] [Cov:==============================>    87%][Progress:===========>                  39%] [Cov:==============================>    88%][Progress:============>                 42%] [Cov:==============================>    88%][Progress:============>                 42%] [Cov:===============================>   89%][Progress:============>                 42%] [Cov:===============================>   90%][Progress:============>                 42%] [Cov:===============================>   91%][Progress:============>                 42%] [Cov:===============================>   91%][Progress:============>                 42%] [Cov:===============================>   91%][Progress:============>                 42%] [Cov:===============================>   91%][Progress:============>                 42%] [Cov:================================>  92%][Progress:============>                 42%] [Cov:================================>  93%][Progress:============>                 42%] [Cov:================================>  93%][Progress:============>                 42%] [Cov:================================>  93%][Progress:=============>                45%] [Cov:================================>  93%][Progress:==============>               48%] [Cov:================================>  93%][Progress:==============>               48%] [Cov:================================>  93%][Progress:==============>               48%] [Cov:================================>  93%][Progress:==============>               48%] [Cov:================================>  93%][Progress:===============>              50%] [Cov:================================>  93%][Progress:===============>              50%] [Cov:================================>  93%][Progress:===============>              50%] [Cov:================================>  93%][Progress:===============>              50%] [Cov:================================>  93%][Progress:===============>              50%] [Cov:================================>  93%][Progress:===============>              53%] [Cov:================================>  93%][Progress:===============>              53%] [Cov:================================>  93%][Progress:===============>              53%] [Cov:================================>  93%][Progress:=================>            58%] [Cov:================================>  93%][Progress:=================>            58%] [Cov:================================>  93%][Progress:=================>            58%] [Cov:================================>  93%][Progress:=================>            58%] [Cov:================================>  93%][Progress:=================>            58%] [Cov:================================>  93%][Progress:=================>            58%] [Cov:================================>  93%][Progress:=================>            58%] [Cov:================================>  93%][Progress:=================>            58%] [Cov:================================>  93%][Progress:=================>            58%] [Cov:================================>  93%][Progress:=================>            58%] [Cov:================================>  93%][Progress:===================>          64%] [Cov:================================>  93%][Progress:===================>          66%] [Cov:================================>  93%][Progress:===================>          66%] [Cov:================================>  93%][Progress:===================>          66%] [Cov:================================>  93%][Progress:====================>         69%] [Cov:================================>  93%][Progress:====================>         69%] [Cov:================================>  93%][Progress:====================>         69%] [Cov:================================>  93%][Progress:====================>         69%] [Cov:================================>  93%][Progress:====================>         69%] [Cov:================================>  94%][Progress:====================>         69%] [Cov:================================>  94%][Progress:====================>         69%] [Cov:================================>  94%][Progress:====================>         69%] [Cov:================================>  94%][Progress:=======================>      77%] [Cov:================================>  94%][Progress:=======================>      77%] [Cov:================================>  94%][Progress:=======================>      77%] [Cov:================================>  94%][Progress:=======================>      77%] [Cov:================================>  94%][Progress:=======================>      77%] [Cov:================================>  94%][Progress:=======================>      77%] [Cov:================================>  94%][Progress:=======================>      77%] [Cov:================================>  94%][Progress:=======================>      79%] [Cov:================================>  94%][Progress:=======================>      79%] [Cov:================================>  94%][Progress:========================>     80%] [Cov:================================>  94%][Progress:========================>     80%] [Cov:================================>  94%][Progress:========================>     82%] [Cov:================================>  94%][Progress:========================>     82%] [Cov:================================>  94%][Progress:========================>     82%] [Cov:================================>  94%][Progress:=========================>    85%] [Cov:================================>  94%][Progress:=========================>    85%] [Cov:================================>  94%][Progress:=========================>    85%] [Cov:================================>  94%][Progress:=========================>    85%] [Cov:================================>  94%][Progress:==========================>   88%] [Cov:================================>  94%][Progress:===========================>  90%] [Cov:================================>  94%][Progress:===========================>  93%] [Cov:================================>  94%][Progress:===========================>  93%] [Cov:================================>  94%][Progress:===========================>  93%] [Cov:================================>  94%][Progress:===========================>  93%] [Cov:================================>  94%][Progress:===========================>  93%] [Cov:================================>  94%][Progress:============================> 95%] [Cov:================================>  94%][Progress:============================> 95%] [Cov:================================>  94%][Progress:==============================100%] [Cov:================================>  94%]
* Search finished after 202s and 118 generations, 61760 statements, best individual has fitness: 45.0
* Generated before the refinement 107 tests with total length 272
statement is: org.evosuite.testcase.statements.ArrayStatement@12317042 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[19]
statement is: java.io.ByteArrayInputStream([B)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.ByteArrayInputStream
statement code is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: ReInit(Ljava/io/InputStream;II)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: javaCharStream.ReInit((InputStream) arg0, (int) (byte)65, (int) (byte)65)
test data is: byte[] byteArray = new byte[19];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
javaCharStream.ReInit((InputStream) byteArrayInputStream, (int) (byte)65, (int) (byte)65);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        byte[] byteArray = new byte[19];
        for (int i = 0; i < byteArray.length; i++) {
            byteArray[i] = ((byte) ('A' + i));
        }
        ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
        JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
        javaCharStream.ReInit(((InputStream) (byteArrayInputStream)), ((int) ((byte) (65))), ((int) ((byte) (65))));
    }
}
statement is: byte[] byteArray = new byte[19], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [19] Ct is: byte[] byteArray = new byte[19] isAssignment: false Array: new byte[19] Elements: []
lengths: [19] [19]
Their type are: class [B byte[]
statement is: for (int i = 0; i < byteArray.length; i++) {
    byteArray[i] = ((byte) ('A' + i));
}, class spoon.support.reflect.code.CtForImpl
statement is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.ReInit(((InputStream) (byteArrayInputStream)), ((int) ((byte) (65))), ((int) ((byte) (65)))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.ReInit(((InputStream) (byteArrayInputStream)), ((int) ((byte) (65))), ((int) ((byte) (65)))) target is: javaCharStream method is: ReInit(InputStream,int,int)
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 2
Matched Method is: ReInit(Ljava/io/InputStream;II)V
TestCase is: byte[] byteArray = new byte[19];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
int _int = 65;
int _int = 65;
javaCharStream.ReInit((InputStream) byteArrayInputStream, _int, _int);

statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream((Reader) null)
statement is: ReInit(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: javaCharStream.ReInit((Reader) null)
test data is: JavaCharStream javaCharStream = new JavaCharStream((Reader) null);
javaCharStream.ReInit((Reader) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream javaCharStream = new JavaCharStream(new StringReader("Hello, world!"));
        javaCharStream.ReInit(new StringReader("Hello, world!"));
    }
}
statement is: CharStream javaCharStream = new JavaCharStream(new StringReader("Hello, world!")), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.ReInit(new StringReader("Hello, world!")), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.ReInit(new StringReader("Hello, world!")) target is: javaCharStream method is: ReInit(StringReader)
TestCase is: JavaCharStream javaCharStream = new JavaCharStream((Reader) null);

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("%]VKHNCW#S]{$aS ")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, (-1153), (-1))
statement is: getBeginColumn()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int beginColumn = javaCharStream.getBeginColumn()
test data is: StringReader stringReader = new StringReader("%]VKHNCW#S]{$aS ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-1153), (-1));
javaCharStream.getBeginColumn();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("This is a sample string that will be read.");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, 0, 10);
        javaCharStream.getBeginColumn();
    }
}
statement is: StringReader stringReader = new StringReader("This is a sample string that will be read."), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, 0, 10), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.getBeginColumn(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.getBeginColumn() target is: javaCharStream method is: getBeginColumn()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 4
Matched Method is: getBeginColumn()I
TestCase is: String string = "This is a sample string that will be read.";
StringReader stringReader = new StringReader(string);
int _int = 0;
int _int = 10;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int);
((JavaCharStream) stringReader).getBeginColumn();

statement is: java.io.PipedInputStream()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.PipedInputStream
statement code is: PipedInputStream pipedInputStream = new PipedInputStream()
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 0, 0)
statement is: ReInit(Ljava/io/InputStream;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: javaCharStream.ReInit((InputStream) arg0)
test data is: PipedInputStream pipedInputStream = new PipedInputStream();
JavaCharStream javaCharStream = new JavaCharStream(pipedInputStream, 0, 0);
javaCharStream.ReInit((InputStream) pipedInputStream);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        PipedInputStream pipedInputStream = new PipedInputStream();
        JavaCharStream javaCharStream = new JavaCharStream(pipedInputStream, 0, 0);
        javaCharStream.ReInit(((InputStream) (pipedInputStream)));
        // Improved test data
        pipedInputStream = new PipedInputStream("Hello World!");
    }
}
statement is: PipedInputStream pipedInputStream = new PipedInputStream(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(pipedInputStream, 0, 0), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.ReInit(((InputStream) (pipedInputStream))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.ReInit(((InputStream) (pipedInputStream))) target is: javaCharStream method is: ReInit(InputStream)
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;II)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 3
Matched Method is: ReInit(Ljava/io/InputStream;)V
statement is: // Improved test data
pipedInputStream = new PipedInputStream("Hello World!"), class spoon.support.reflect.code.CtAssignmentImpl
TestCase is: PipedInputStream pipedInputStream = new PipedInputStream();
int _int = 0;
int _int = 0;
JavaCharStream javaCharStream = new JavaCharStream(pipedInputStream, _int, _int);
((JavaCharStream) _int).ReInit((InputStream) pipedInputStream);

statement is: org.evosuite.testcase.statements.ArrayStatement@2005ce07 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[4]
statement is: java.io.ByteArrayInputStream([BII)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.ByteArrayInputStream
statement code is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(arg0, (-1), (byte)65)
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;III)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, (byte)1, 0, 4815)
statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader(" ]L}1p.qu=:W8d1iy")
statement is: ReInit(Ljava/io/Reader;II)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: javaCharStream.ReInit((Reader) arg0, 4815, (-2221))
statement is: readChar()C type is: class org.evosuite.testcase.statements.MethodStatement return type char
statement code is: char readChar = javaCharStream.readChar()
statement is: getEndColumn()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int endColumn = javaCharStream.getEndColumn()
test data is: byte[] byteArray = new byte[4];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray, (-1), (byte)65);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, (byte)1, 0, 4815);
StringReader stringReader = new StringReader(" ]L}1p.qu=:W8d1iy");
javaCharStream.ReInit((Reader) stringReader, 4815, (-2221));
javaCharStream.readChar();
javaCharStream.getEndColumn();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        byte[] byteArray = new byte[]{ ((byte) (0x68)), ((byte) (0x65)), ((byte) (0x6c)), ((byte) (0x6c)), ((byte) (0x6f)) };
        ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray, -1, ((byte) (65)));
        JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, ((byte) (1)), 0, 4815);
        StringReader stringReader = new StringReader("Hello");
        javaCharStream.ReInit(((Reader) (stringReader)), 4815, -2221);
        javaCharStream.readChar();
        javaCharStream.getEndColumn();
    }
}
statement is: byte[] byteArray = new byte[]{ ((byte) (0x68)), ((byte) (0x65)), ((byte) (0x6c)), ((byte) (0x6c)), ((byte) (0x6f)) }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: byte[] byteArray = new byte[4] isAssignment: false Array: new byte[]{ ((byte) (0x68)), ((byte) (0x65)), ((byte) (0x6c)), ((byte) (0x6c)), ((byte) (0x6f)) } Elements: [((byte) (0x68)), ((byte) (0x65)), ((byte) (0x6c)), ((byte) (0x6c)), ((byte) (0x6f))]
lengths: [4] []
statement is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray, -1, ((byte) (65))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, ((byte) (1)), 0, 4815), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: StringReader stringReader = new StringReader("Hello"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.ReInit(((Reader) (stringReader)), 4815, -2221), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.ReInit(((Reader) (stringReader)), 4815, -2221) target is: javaCharStream method is: ReInit(Reader,int,int)
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;III)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 5
Matched Method is: ReInit(Ljava/io/Reader;II)V
i 2 Parameters size() 2 Num of Method Parameters: 3
statement is: javaCharStream.readChar(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.readChar() target is: javaCharStream method is: readChar()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;III)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 5
Matched Method is: readChar()C
statement is: javaCharStream.getEndColumn(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.getEndColumn() target is: javaCharStream method is: getEndColumn()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;III)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 5
Matched Method is: getEndColumn()I
TestCase is: int _int = 65;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream((byte[]) _int, (-1), (byte)65);
int _int = 1;
int _int = 0;
int _int = 4815;
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, _int, _int, _int);
String string = "Hello";
StringReader stringReader = new StringReader(string);
int _int = 4815;
int _int = null;
((JavaCharStream) _int).ReInit((Reader) stringReader, _int, _int);
((JavaCharStream) _int).readChar();
((JavaCharStream) _int).getEndColumn();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("%]VKHNCW#S]{$aS ")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, (-5410), (-3736))
statement is: getBeginLine()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int beginLine = javaCharStream.getBeginLine()
test data is: StringReader stringReader = new StringReader("%]VKHNCW#S]{$aS ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-5410), (-3736));
javaCharStream.getBeginLine();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("Hello World");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, -5410, -3736);
        javaCharStream.getBeginLine();
    }
}
statement is: StringReader stringReader = new StringReader("Hello World"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, -5410, -3736), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.getBeginLine(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.getBeginLine() target is: javaCharStream method is: getBeginLine()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 2
Matched Method is: getBeginLine()I
TestCase is: String string = "Hello World";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-5410), (-3736));
((JavaCharStream) stringReader).getBeginLine();

statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('0')
test data is: JavaCharStream.hexval('0');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream.hexval('a');// a represents a lowercase letter in the ASCII table

        JavaCharStream.hexval('\n');// \n represents a newline character

        JavaCharStream.hexval(' ');// space represents an empty string

        JavaCharStream.hexval(100);// 100 represents a numbe }}

    }
}
statement is: CharStream.hexval('a')// a represents a lowercase letter in the ASCII table
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: CharStream.hexval('a')// a represents a lowercase letter in the ASCII table
 target is: CharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('\n')// \n represents a newline character
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('\n')// \n represents a newline character
 target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval(' ')// space represents an empty string
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval(' ')// space represents an empty string
 target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval(100)// 100 represents a numbe }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval(100)// 100 represents a numbe }}
 target is: JavaCharStream method is: hexval(int)
Matched Method is: hexval(C)I
TestCase is: char _char = 'a';
JavaCharStream.hexval(_char);
char _char = '\n';
JavaCharStream.hexval(_char);
char _char = ' ';
JavaCharStream.hexval(_char);
int _int = 100;
JavaCharStream.hexval((char) _int);

statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('X')
test data is: JavaCharStream.hexval('X');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream.hexval('1');
    }
}
statement is: CharStream.hexval('1'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: CharStream.hexval('1') target is: CharStream method is: hexval(char)
Matched Method is: hexval(C)I
TestCase is: char _char = '1';
JavaCharStream.hexval(_char);

statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('1')
test data is: JavaCharStream.hexval('1');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream.hexval('a');
    }
}
statement is: CharStream.hexval('a'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: CharStream.hexval('a') target is: CharStream method is: hexval(char)
Matched Method is: hexval(C)I
TestCase is: char _char = 'a';
JavaCharStream.hexval(_char);

statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('2')
test data is: JavaCharStream.hexval('2');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream.hexval('A');
    }
}
statement is: CharStream.hexval('A'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: CharStream.hexval('A') target is: CharStream method is: hexval(char)
Matched Method is: hexval(C)I
TestCase is: char _char = 'A';
JavaCharStream.hexval(_char);

statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('3')
test data is: JavaCharStream.hexval('3');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data for the above code fragment
        JavaCharStream.hexval('A');// hexval of 'A' is 10, which is a non-zero value

        JavaCharStream.hexval('0');// hexval of '0' is 0, which is a zero value }}

    }
}
statement is: // Improved test data for the above code fragment
JavaCharStream.hexval('A')// hexval of 'A' is 10, which is a non-zero value
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Improved test data for the above code fragment
JavaCharStream.hexval('A')// hexval of 'A' is 10, which is a non-zero value
 target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('0')// hexval of '0' is 0, which is a zero value }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('0')// hexval of '0' is 0, which is a zero value }}
 target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
TestCase is: char _char = 'A';
JavaCharStream.hexval(_char);
char _char = '0';
JavaCharStream.hexval(_char);

statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('4')
test data is: JavaCharStream.hexval('4');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Before:
        int x = 5;
        double y = 3.14;
        String str = "hello";
        char c = 'a';
        // After:
        int x = 99;
        double y = 2718.28;
        String str = "goodbye";
        char c = 'z';
    }
}
statement is: // Before:
int x = 5, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: double y = 3.14, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String str = "hello", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: char c = 'a', class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: // After:
int x = 99, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: double y = 2718.28, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String str = "goodbye", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: char c = 'z', class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
* this is vulnerable: int _int = 5
* this is vulnerable: double _double = 3.14
* this is vulnerable: String string = "hello"
* this is vulnerable: char _char = 'a'
* this is vulnerable: int _int = 99
* this is vulnerable: double _double = 2718.28
* this is vulnerable: String string = "goodbye"
* this is vulnerable: char _char = 'z'
TestCase is: int _int = 5;
double _double = 3.14;
String string = "hello";
char _char = 'a';
int _int = 99;
double _double = 2718.28;
String string = "goodbye";
char _char = 'z';

statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('5')
test data is: JavaCharStream.hexval('5');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        int x = 10;
        double y = 3.14;
        String str = "Hello World";
        char ch = 'a';
    }
}
statement is: int x = 10, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: double y = 3.14, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String str = "Hello World", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: char ch = 'a', class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
* this is vulnerable: int _int = 10
* this is vulnerable: double _double = 3.14
* this is vulnerable: String string = "Hello World"
* this is vulnerable: char _char = 'a'
TestCase is: int _int = 10;
double _double = 3.14;
String string = "Hello World";
char _char = 'a';

statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('6')
test data is: JavaCharStream.hexval('6');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        assertEquals(10, JavaCharStream.hexval('A'));
        assertEquals(15, JavaCharStream.hexval('F'));
        assertEquals(24, JavaCharStream.hexval('3'));
        assertEquals(65, JavaCharStream.hexval('A'));
        assertEquals(100, JavaCharStream.hexval('6'));
        // Testing with different cases and special characters
        assertEquals(10, JavaCharStream.hexval('a'));
        assertEquals(15, JavaCharStream.hexval('f'));
        assertEquals(24, JavaCharStream.hexval('3'));
        assertEquals(65, JavaCharStream.hexval('A'));
        assertEquals(100, JavaCharStream.hexval('6'));
        // Testing with invalid input values
        assertEquals(-1, JavaCharStream.hexval('G'));
        assertEquals(-1, JavaCharStream.hexval('h'));
    }
}
statement is: assertEquals(10, JavaCharStream.hexval('A')), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(10, JavaCharStream.hexval('A')) target is:  method is: assertEquals(int,<unknown>)
statement is: assertEquals(15, JavaCharStream.hexval('F')), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(15, JavaCharStream.hexval('F')) target is:  method is: assertEquals(int,<unknown>)
statement is: assertEquals(24, JavaCharStream.hexval('3')), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(24, JavaCharStream.hexval('3')) target is:  method is: assertEquals(int,<unknown>)
statement is: assertEquals(65, JavaCharStream.hexval('A')), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(65, JavaCharStream.hexval('A')) target is:  method is: assertEquals(int,<unknown>)
statement is: assertEquals(100, JavaCharStream.hexval('6')), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(100, JavaCharStream.hexval('6')) target is:  method is: assertEquals(int,<unknown>)
statement is: // Testing with different cases and special characters
assertEquals(10, JavaCharStream.hexval('a')), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Testing with different cases and special characters
assertEquals(10, JavaCharStream.hexval('a')) target is:  method is: assertEquals(int,<unknown>)
statement is: assertEquals(15, JavaCharStream.hexval('f')), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(15, JavaCharStream.hexval('f')) target is:  method is: assertEquals(int,<unknown>)
statement is: assertEquals(24, JavaCharStream.hexval('3')), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(24, JavaCharStream.hexval('3')) target is:  method is: assertEquals(int,<unknown>)
statement is: assertEquals(65, JavaCharStream.hexval('A')), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(65, JavaCharStream.hexval('A')) target is:  method is: assertEquals(int,<unknown>)
statement is: assertEquals(100, JavaCharStream.hexval('6')), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(100, JavaCharStream.hexval('6')) target is:  method is: assertEquals(int,<unknown>)
statement is: // Testing with invalid input values
assertEquals(-1, JavaCharStream.hexval('G')), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Testing with invalid input values
assertEquals(-1, JavaCharStream.hexval('G')) target is:  method is: assertEquals(int,<unknown>)
statement is: assertEquals(-1, JavaCharStream.hexval('h')), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(-1, JavaCharStream.hexval('h')) target is:  method is: assertEquals(int,<unknown>)
statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('7')
test data is: JavaCharStream.hexval('7');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // 12
        // 10
        // 1 }}
    }
}
statement is: // 12, class spoon.support.reflect.code.CtCommentImpl
statement is: // 10, class spoon.support.reflect.code.CtCommentImpl
statement is: // 1 }}, class spoon.support.reflect.code.CtCommentImpl
statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('8')
test data is: JavaCharStream.hexval('8');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        assert '0';
        return 0;
        assert '1';
        return 1;
        assert '2';
        return 2;
        assert '3';
        return 3;
        assert '4';
        return 4;
        assert '5';
        return 5;
        assert '6';
        return 6;
        assert '7';
        return 7;
        assert '8';
        return 8;
        assert '9';
        return 9;
        assert 'a';
        return 10;
        assert 'b';
        return 11;
        assert 'c';
        return 12;
        assert 'd';
        return 13;
        assert 'e';
        return 14;
        assert 'f';
        return 15;
        assert 'A';
        return 10;
        assert 'B';
        return 11;
        assert 'C';
        return 12;
        assert 'D';
        return 13;
        assert 'E';
        return 14;
        assert 'F';
        return 15;
    }
}
statement is: assert '0', class spoon.support.reflect.code.CtAssertImpl
statement is: return 0, class spoon.support.reflect.code.CtReturnImpl
statement is: assert '1', class spoon.support.reflect.code.CtAssertImpl
statement is: return 1, class spoon.support.reflect.code.CtReturnImpl
statement is: assert '2', class spoon.support.reflect.code.CtAssertImpl
statement is: return 2, class spoon.support.reflect.code.CtReturnImpl
statement is: assert '3', class spoon.support.reflect.code.CtAssertImpl
statement is: return 3, class spoon.support.reflect.code.CtReturnImpl
statement is: assert '4', class spoon.support.reflect.code.CtAssertImpl
statement is: return 4, class spoon.support.reflect.code.CtReturnImpl
statement is: assert '5', class spoon.support.reflect.code.CtAssertImpl
statement is: return 5, class spoon.support.reflect.code.CtReturnImpl
statement is: assert '6', class spoon.support.reflect.code.CtAssertImpl
statement is: return 6, class spoon.support.reflect.code.CtReturnImpl
statement is: assert '7', class spoon.support.reflect.code.CtAssertImpl
statement is: return 7, class spoon.support.reflect.code.CtReturnImpl
statement is: assert '8', class spoon.support.reflect.code.CtAssertImpl
statement is: return 8, class spoon.support.reflect.code.CtReturnImpl
statement is: assert '9', class spoon.support.reflect.code.CtAssertImpl
statement is: return 9, class spoon.support.reflect.code.CtReturnImpl
statement is: assert 'a', class spoon.support.reflect.code.CtAssertImpl
statement is: return 10, class spoon.support.reflect.code.CtReturnImpl
statement is: assert 'b', class spoon.support.reflect.code.CtAssertImpl
statement is: return 11, class spoon.support.reflect.code.CtReturnImpl
statement is: assert 'c', class spoon.support.reflect.code.CtAssertImpl
statement is: return 12, class spoon.support.reflect.code.CtReturnImpl
statement is: assert 'd', class spoon.support.reflect.code.CtAssertImpl
statement is: return 13, class spoon.support.reflect.code.CtReturnImpl
statement is: assert 'e', class spoon.support.reflect.code.CtAssertImpl
statement is: return 14, class spoon.support.reflect.code.CtReturnImpl
statement is: assert 'f', class spoon.support.reflect.code.CtAssertImpl
statement is: return 15, class spoon.support.reflect.code.CtReturnImpl
statement is: assert 'A', class spoon.support.reflect.code.CtAssertImpl
statement is: return 10, class spoon.support.reflect.code.CtReturnImpl
statement is: assert 'B', class spoon.support.reflect.code.CtAssertImpl
statement is: return 11, class spoon.support.reflect.code.CtReturnImpl
statement is: assert 'C', class spoon.support.reflect.code.CtAssertImpl
statement is: return 12, class spoon.support.reflect.code.CtReturnImpl
statement is: assert 'D', class spoon.support.reflect.code.CtAssertImpl
statement is: return 13, class spoon.support.reflect.code.CtReturnImpl
statement is: assert 'E', class spoon.support.reflect.code.CtAssertImpl
statement is: return 14, class spoon.support.reflect.code.CtReturnImpl
statement is: assert 'F', class spoon.support.reflect.code.CtAssertImpl
statement is: return 15, class spoon.support.reflect.code.CtReturnImpl
statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('9')
test data is: JavaCharStream.hexval('9');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream.hexval('a');
    }
}
statement is: CharStream.hexval('a'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: CharStream.hexval('a') target is: CharStream method is: hexval(char)
Matched Method is: hexval(C)I
TestCase is: char _char = 'a';
JavaCharStream.hexval(_char);

statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval(':')
test data is: JavaCharStream.hexval(':');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // After Refining
        JavaCharStream.hexval(':');
    }
}
statement is: // After Refining
JavaCharStream.hexval(':'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // After Refining
JavaCharStream.hexval(':') target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
TestCase is: char _char = ':';
JavaCharStream.hexval(_char);

statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval(';')
test data is: JavaCharStream.hexval(';');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        JavaCharStream.hexval('a');
    }
}
statement is: JavaCharStream.hexval('a'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('a') target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
TestCase is: char _char = 'a';
JavaCharStream.hexval(_char);

statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('<')
test data is: JavaCharStream.hexval('<');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream.hexval('A');// A is hexadecimal value for 10, which is an integer

        JavaCharStream.hexval('B');// B is hexadecimal value for 11, which is an integer

        JavaCharStream.hexval('C');// C is hexadecimal value for 12, which is an integer

        JavaCharStream.hexval('D');// D is hexadecimal value for 13, which is an integer

        JavaCharStream.hexval('E');// E is hexadecimal value for 14, which is an intege }}

    }
}
statement is: CharStream.hexval('A')// A is hexadecimal value for 10, which is an integer
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: CharStream.hexval('A')// A is hexadecimal value for 10, which is an integer
 target is: CharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('B')// B is hexadecimal value for 11, which is an integer
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('B')// B is hexadecimal value for 11, which is an integer
 target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('C')// C is hexadecimal value for 12, which is an integer
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('C')// C is hexadecimal value for 12, which is an integer
 target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('D')// D is hexadecimal value for 13, which is an integer
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('D')// D is hexadecimal value for 13, which is an integer
 target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('E')// E is hexadecimal value for 14, which is an intege }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('E')// E is hexadecimal value for 14, which is an intege }}
 target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
TestCase is: char _char = 'A';
JavaCharStream.hexval(_char);
char _char = 'B';
JavaCharStream.hexval(_char);
char _char = 'C';
JavaCharStream.hexval(_char);
char _char = 'D';
JavaCharStream.hexval(_char);
char _char = 'E';
JavaCharStream.hexval(_char);

statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('=')
test data is: JavaCharStream.hexval('=');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream.hexval('A');// 10

        JavaCharStream.hexval('B');// 11

        JavaCharStream.hexval('C');// 12

        JavaCharStream.hexval('D');// 13

        JavaCharStream.hexval('E');// 14

        JavaCharStream.hexval('F');// 15

        JavaCharStream.hexval('a');// 10

        JavaCharStream.hexval('b');// 11

        JavaCharStream.hexval('c');// 12

        JavaCharStream.hexval('d');// 13

        JavaCharStream.hexval('e');// 14

        JavaCharStream.hexval('f');// 1 }}

    }
}
statement is: CharStream.hexval('A')// 10
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: CharStream.hexval('A')// 10
 target is: CharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('B')// 11
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('B')// 11
 target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('C')// 12
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('C')// 12
 target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('D')// 13
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('D')// 13
 target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('E')// 14
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('E')// 14
 target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('F')// 15
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('F')// 15
 target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('a')// 10
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('a')// 10
 target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('b')// 11
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('b')// 11
 target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('c')// 12
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('c')// 12
 target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('d')// 13
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('d')// 13
 target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('e')// 14
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('e')// 14
 target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('f')// 1 }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('f')// 1 }}
 target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
TestCase is: char _char = 'A';
JavaCharStream.hexval(_char);
char _char = 'B';
JavaCharStream.hexval(_char);
char _char = 'C';
JavaCharStream.hexval(_char);
char _char = 'D';
JavaCharStream.hexval(_char);
char _char = 'E';
JavaCharStream.hexval(_char);
char _char = 'F';
JavaCharStream.hexval(_char);
char _char = 'a';
JavaCharStream.hexval(_char);
char _char = 'b';
JavaCharStream.hexval(_char);
char _char = 'c';
JavaCharStream.hexval(_char);
char _char = 'd';
JavaCharStream.hexval(_char);
char _char = 'e';
JavaCharStream.hexval(_char);
char _char = 'f';
JavaCharStream.hexval(_char);

statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('>')
test data is: JavaCharStream.hexval('>');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        String input = "Hello World!";
        char c = '>';
        int expectedOutput = 62;
    }
}
statement is: String input = "Hello World!", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: char c = '>', class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: int expectedOutput = 62, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
* this is vulnerable: String string = "Hello World!"
* this is vulnerable: char _char = '>'
* this is vulnerable: int _int = 62
TestCase is: String string = "Hello World!";
char _char = '>';
int _int = 62;

statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('?')
test data is: JavaCharStream.hexval('?');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream.hexval('⁉');
    }
}
statement is: CharStream.hexval('⁉'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: CharStream.hexval('⁉') target is: CharStream method is: hexval(char)
Matched Method is: hexval(C)I
TestCase is: char _char = '\u2049';
JavaCharStream.hexval(_char);

statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('@')
test data is: JavaCharStream.hexval('@');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Before:
        char c = '@';
        int value = JavaCharStream.hexval(c);
        System.out.println((("Value of " + c) + ": ") + value);
        // After:
        char c = 'A';
        int value = JavaCharStream.hexval(c);
        System.out.println((("Value of " + c) + ": ") + value);
    }
}
statement is: // Before:
char c = '@', class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: int value = JavaCharStream.hexval(c), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval(c) target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: System.out.println((("Value of " + c) + ": ") + value), class spoon.support.reflect.code.CtInvocationImpl
invocation is: System.out.println((("Value of " + c) + ": ") + value) target is: System.out method is: println(java.lang.String)
statement is: // After:
char c = 'A', class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: int value = JavaCharStream.hexval(c), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval(c) target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: System.out.println((("Value of " + c) + ": ") + value), class spoon.support.reflect.code.CtInvocationImpl
invocation is: System.out.println((("Value of " + c) + ": ") + value) target is: System.out method is: println(java.lang.String)
TestCase is: char _char = '@';
JavaCharStream.hexval(_char);
char _char = 'A';
JavaCharStream.hexval(_char);

statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('A')
test data is: JavaCharStream.hexval('A');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
    }
}
statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('B')
test data is: JavaCharStream.hexval('B');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream.hexval('A');
    }
}
statement is: CharStream.hexval('A'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: CharStream.hexval('A') target is: CharStream method is: hexval(char)
Matched Method is: hexval(C)I
TestCase is: char _char = 'A';
JavaCharStream.hexval(_char);

statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('C')
test data is: JavaCharStream.hexval('C');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream.hexval('A');
    }
}
statement is: CharStream.hexval('A'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: CharStream.hexval('A') target is: CharStream method is: hexval(char)
Matched Method is: hexval(C)I
TestCase is: char _char = 'A';
JavaCharStream.hexval(_char);

statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('D')
test data is: JavaCharStream.hexval('D');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream.hexval('E');// hex value 'E }}

    }
}
statement is: CharStream.hexval('E')// hex value 'E }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: CharStream.hexval('E')// hex value 'E }}
 target is: CharStream method is: hexval(char)
Matched Method is: hexval(C)I
TestCase is: char _char = 'E';
JavaCharStream.hexval(_char);

statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('E')
test data is: JavaCharStream.hexval('E');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream.hexval(0xe);
    }
}
statement is: CharStream.hexval(0xe), class spoon.support.reflect.code.CtInvocationImpl
invocation is: CharStream.hexval(0xe) target is: CharStream method is: hexval(int)
Matched Method is: hexval(C)I
TestCase is: int _int = 14;
JavaCharStream.hexval((char) _int);

statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('F')
test data is: JavaCharStream.hexval('F');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream.hexval('A');// The character 'A' in hexadecimal is 0x41

        JavaCharStream.hexval('B');// The character 'B' in hexadecimal is 0x42

        JavaCharStream.hexval('C');// The character 'C' in hexadecimal is 0x4 }}

    }
}
statement is: CharStream.hexval('A')// The character 'A' in hexadecimal is 0x41
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: CharStream.hexval('A')// The character 'A' in hexadecimal is 0x41
 target is: CharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('B')// The character 'B' in hexadecimal is 0x42
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('B')// The character 'B' in hexadecimal is 0x42
 target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('C')// The character 'C' in hexadecimal is 0x4 }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('C')// The character 'C' in hexadecimal is 0x4 }}
 target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
TestCase is: char _char = 'A';
JavaCharStream.hexval(_char);
char _char = 'B';
JavaCharStream.hexval(_char);
char _char = 'C';
JavaCharStream.hexval(_char);

statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('G')
test data is: JavaCharStream.hexval('G');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream.hexval('A');// returns 10

        JavaCharStream.hexval('F');// returns 15

        JavaCharStream.hexval('g');// returns 10

        JavaCharStream.hexval('f');// returns 1 }}

    }
}
statement is: CharStream.hexval('A')// returns 10
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: CharStream.hexval('A')// returns 10
 target is: CharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('F')// returns 15
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('F')// returns 15
 target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('g')// returns 10
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('g')// returns 10
 target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('f')// returns 1 }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('f')// returns 1 }}
 target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
TestCase is: char _char = 'A';
JavaCharStream.hexval(_char);
char _char = 'F';
JavaCharStream.hexval(_char);
char _char = 'g';
JavaCharStream.hexval(_char);
char _char = 'f';
JavaCharStream.hexval(_char);

statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('H')
test data is: JavaCharStream.hexval('H');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
    }

    public static void main(String[] args) {
        // Test data for JavaCharStream.hexval() with more descriptive values
        int c = 'h';
        System.out.println((("The hex value of " + ((char) (c))) + " is ") + JavaCharStream.hexval(c));
    }
}
statement is: // Test data for JavaCharStream.hexval() with more descriptive values
int c = 'h', class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: System.out.println((("The hex value of " + ((char) (c))) + " is ") + JavaCharStream.hexval(c)), class spoon.support.reflect.code.CtInvocationImpl
invocation is: System.out.println((("The hex value of " + ((char) (c))) + " is ") + JavaCharStream.hexval(c)) target is: System.out method is: println(char[])
* this is vulnerable: char _char = 'h'
TestCase is: char _char = 'h';

statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('I')
test data is: JavaCharStream.hexval('I');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data
        JavaCharStream.hexval('İ');
    }
}
statement is: // Improved test data
JavaCharStream.hexval('İ'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Improved test data
JavaCharStream.hexval('İ') target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
TestCase is: char _char = '\u0130';
JavaCharStream.hexval(_char);

statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('J')
test data is: JavaCharStream.hexval('J');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream.hexval('A');
    }
}
statement is: CharStream.hexval('A'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: CharStream.hexval('A') target is: CharStream method is: hexval(char)
Matched Method is: hexval(C)I
TestCase is: char _char = 'A';
JavaCharStream.hexval(_char);

statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('K')
test data is: JavaCharStream.hexval('K');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream.hexval('a');
    }
}
statement is: CharStream.hexval('a'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: CharStream.hexval('a') target is: CharStream method is: hexval(char)
Matched Method is: hexval(C)I
TestCase is: char _char = 'a';
JavaCharStream.hexval(_char);

statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('L')
test data is: JavaCharStream.hexval('L');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        return ((int) (c));
    }
}
statement is: return ((int) (c)), class spoon.support.reflect.code.CtReturnImpl
statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('M')
test data is: JavaCharStream.hexval('M');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        String s = "Goodbye, cruel world!";// change this value to a more descriptive example, such as a longer string or a string with special characters

        System.out.println(s);
    }
}
statement is: String s = "Goodbye, cruel world!"// change this value to a more descriptive example, such as a longer string or a string with special characters
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: System.out.println(s), class spoon.support.reflect.code.CtInvocationImpl
invocation is: System.out.println(s) target is: System.out method is: println(java.lang.String)
* this is vulnerable: String string = "Goodbye, cruel world!"
TestCase is: String string = "Goodbye, cruel world!";

statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('N')
test data is: JavaCharStream.hexval('N');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream.hexval("ABC");
        JavaCharStream.hexval("1234567890");
    }
}
statement is: CharStream.hexval("ABC"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: CharStream.hexval("ABC") target is: CharStream method is: hexval(java.lang.String)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval("1234567890"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval("1234567890") target is: JavaCharStream method is: hexval(java.lang.String)
Matched Method is: hexval(C)I
TestCase is: String string = "ABC";
JavaCharStream.hexval((char) string);
String string = "1234567890";
JavaCharStream.hexval((char) string);

statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('O')
test data is: JavaCharStream.hexval('O');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream.hexval('0');
    }
}
statement is: CharStream.hexval('0'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: CharStream.hexval('0') target is: CharStream method is: hexval(char)
Matched Method is: hexval(C)I
TestCase is: char _char = '0';
JavaCharStream.hexval(_char);

statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('P')
test data is: JavaCharStream.hexval('P');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
    }
}
statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('Q')
test data is: JavaCharStream.hexval('Q');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream.hexval('A');
        JavaCharStream.hexval('F');
        JavaCharStream.hexval('q');
        JavaCharStream.hexval('x');
    }
}
statement is: CharStream.hexval('A'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: CharStream.hexval('A') target is: CharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('F'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('F') target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('q'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('q') target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('x'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('x') target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
TestCase is: char _char = 'A';
JavaCharStream.hexval(_char);
char _char = 'F';
JavaCharStream.hexval(_char);
char _char = 'q';
JavaCharStream.hexval(_char);
char _char = 'x';
JavaCharStream.hexval(_char);

statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('R')
test data is: JavaCharStream.hexval('R');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream.hexval('r');
    }
}
statement is: CharStream.hexval('r'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: CharStream.hexval('r') target is: CharStream method is: hexval(char)
Matched Method is: hexval(C)I
TestCase is: char _char = 'r';
JavaCharStream.hexval(_char);

statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('S')
test data is: JavaCharStream.hexval('S');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream.hexval('A');
        JavaCharStream.hexval('B');
        JavaCharStream.hexval('C');
        JavaCharStream.hexval('D');
        JavaCharStream.hexval('E');
        JavaCharStream.hexval('F');
    }
}
statement is: CharStream.hexval('A'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: CharStream.hexval('A') target is: CharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('B'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('B') target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('C'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('C') target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('D'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('D') target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('E'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('E') target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('F'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('F') target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
TestCase is: char _char = 'A';
JavaCharStream.hexval(_char);
char _char = 'B';
JavaCharStream.hexval(_char);
char _char = 'C';
JavaCharStream.hexval(_char);
char _char = 'D';
JavaCharStream.hexval(_char);
char _char = 'E';
JavaCharStream.hexval(_char);
char _char = 'F';
JavaCharStream.hexval(_char);

statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('T')
test data is: JavaCharStream.hexval('T');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream.hexval('1');// }}

    }
}
statement is: CharStream.hexval('1')// }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: CharStream.hexval('1')// }}
 target is: CharStream method is: hexval(char)
Matched Method is: hexval(C)I
TestCase is: char _char = '1';
JavaCharStream.hexval(_char);

statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('U')
test data is: JavaCharStream.hexval('U');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream.hexval('1');
    }
}
statement is: CharStream.hexval('1'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: CharStream.hexval('1') target is: CharStream method is: hexval(char)
Matched Method is: hexval(C)I
TestCase is: char _char = '1';
JavaCharStream.hexval(_char);

statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('V')
test data is: JavaCharStream.hexval('V');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream.hexval('A');
        JavaCharStream.hexval('F');
        JavaCharStream.hexval('0');
        JavaCharStream.hexval('9');
        JavaCharStream.hexval('a');
        JavaCharStream.hexval('f');
        JavaCharStream.hexval('z');
        JavaCharStream.hexval('Z');
    }
}
statement is: CharStream.hexval('A'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: CharStream.hexval('A') target is: CharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('F'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('F') target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('0'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('0') target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('9'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('9') target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('a'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('a') target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('f'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('f') target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('z'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('z') target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('Z'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('Z') target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
TestCase is: char _char = 'A';
JavaCharStream.hexval(_char);
char _char = 'F';
JavaCharStream.hexval(_char);
char _char = '0';
JavaCharStream.hexval(_char);
char _char = '9';
JavaCharStream.hexval(_char);
char _char = 'a';
JavaCharStream.hexval(_char);
char _char = 'f';
JavaCharStream.hexval(_char);
char _char = 'z';
JavaCharStream.hexval(_char);
char _char = 'Z';
JavaCharStream.hexval(_char);

statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('W')
test data is: JavaCharStream.hexval('W');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream.hexval(0x57);// 'W' is represented as 0x57 in hexadecimal notatio }}

    }
}
statement is: CharStream.hexval(0x57)// 'W' is represented as 0x57 in hexadecimal notatio }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: CharStream.hexval(0x57)// 'W' is represented as 0x57 in hexadecimal notatio }}
 target is: CharStream method is: hexval(int)
Matched Method is: hexval(C)I
TestCase is: int _int = 87;
JavaCharStream.hexval((char) _int);

statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('Y')
test data is: JavaCharStream.hexval('Y');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data:
        JavaCharStream.hexval('F');// 15 }}

    }
}
statement is: // Improved test data:
JavaCharStream.hexval('F')// 15 }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Improved test data:
JavaCharStream.hexval('F')// 15 }}
 target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
TestCase is: char _char = 'F';
JavaCharStream.hexval(_char);

statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('Z')
test data is: JavaCharStream.hexval('Z');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream.hexval('A');
    }
}
statement is: CharStream.hexval('A'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: CharStream.hexval('A') target is: CharStream method is: hexval(char)
Matched Method is: hexval(C)I
TestCase is: char _char = 'A';
JavaCharStream.hexval(_char);

statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('[')
test data is: JavaCharStream.hexval('[');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        int[] arr = new int[]{ 1, 2, 3, 4, 5 };
        JavaCharStream cs = new JavaCharStream(arr);
        cs.hexval('[');
    }
}
statement is: int[] arr = new int[]{ 1, 2, 3, 4, 5 }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
statement is: JavaCharStream cs = new JavaCharStream(arr), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: cs.hexval('['), class spoon.support.reflect.code.CtInvocationImpl
invocation is: cs.hexval('[') target is: cs method is: hexval(char)
Matched Method is: hexval(C)I
TestCase is: char _char = '[';
JavaCharStream.hexval(_char);

statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('\\')
test data is: JavaCharStream.hexval('\\');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data:
        JavaCharStream.hexval('f');// \f - form feed character

        JavaCharStream.hexval('a');// \a - alert character

        JavaCharStream.hexval('b');// \b - backspace character

        JavaCharStream.hexval('t');// \t - horizontal tab character

        JavaCharStream.hexval('n');// \n - newline character

        JavaCharStream.hexval('v');// \v - vertical tab character

        JavaCharStream.hexval('r');// \r - carriage return character }}

    }
}
statement is: // Improved test data:
JavaCharStream.hexval('f')// \f - form feed character
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Improved test data:
JavaCharStream.hexval('f')// \f - form feed character
 target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('a')// \a - alert character
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('a')// \a - alert character
 target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('b')// \b - backspace character
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('b')// \b - backspace character
 target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('t')// \t - horizontal tab character
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('t')// \t - horizontal tab character
 target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('n')// \n - newline character
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('n')// \n - newline character
 target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('v')// \v - vertical tab character
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('v')// \v - vertical tab character
 target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('r')// \r - carriage return character }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('r')// \r - carriage return character }}
 target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
TestCase is: char _char = 'f';
JavaCharStream.hexval(_char);
char _char = 'a';
JavaCharStream.hexval(_char);
char _char = 'b';
JavaCharStream.hexval(_char);
char _char = 't';
JavaCharStream.hexval(_char);
char _char = 'n';
JavaCharStream.hexval(_char);
char _char = 'v';
JavaCharStream.hexval(_char);
char _char = 'r';
JavaCharStream.hexval(_char);

statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval(']')
test data is: JavaCharStream.hexval(']');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data for JavaCharStream.hexval() method
        char[] hexChars = new char[]{ '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f' };
        int[] invalidHexChars = new int[]{ 0x0, 0x1, 0x2, 0x3, 0x4, 0x5, 0x6, 0x7, 0x8, 0x9, 0xa, 0xb, 0xc, 0xd, 0xe, 0xf };
    }
}
statement is: // Improved test data for JavaCharStream.hexval() method
char[] hexChars = new char[]{ '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f' }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
statement is: int[] invalidHexChars = new int[]{ 0x0, 0x1, 0x2, 0x3, 0x4, 0x5, 0x6, 0x7, 0x8, 0x9, 0xa, 0xb, 0xc, 0xd, 0xe, 0xf }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('^')
test data is: JavaCharStream.hexval('^');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream.hexval('A');
    }
}
statement is: CharStream.hexval('A'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: CharStream.hexval('A') target is: CharStream method is: hexval(char)
Matched Method is: hexval(C)I
TestCase is: char _char = 'A';
JavaCharStream.hexval(_char);

statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('_')
test data is: JavaCharStream.hexval('_');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data for JavaCharStream.hexval() method
        char[] hexChars = new char[]{ '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f' };
        int[] invalidHexValues = new int[]{ -1, 0x0 };
    }
}
statement is: // Improved test data for JavaCharStream.hexval() method
char[] hexChars = new char[]{ '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f' }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
statement is: int[] invalidHexValues = new int[]{ -1, 0x0 }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('`')
test data is: JavaCharStream.hexval('`');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream.hexval('a');
    }
}
statement is: CharStream.hexval('a'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: CharStream.hexval('a') target is: CharStream method is: hexval(char)
Matched Method is: hexval(C)I
TestCase is: char _char = 'a';
JavaCharStream.hexval(_char);

statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('a')
test data is: JavaCharStream.hexval('a');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream.hexval('f');
    }
}
statement is: CharStream.hexval('f'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: CharStream.hexval('f') target is: CharStream method is: hexval(char)
Matched Method is: hexval(C)I
TestCase is: char _char = 'f';
JavaCharStream.hexval(_char);

statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('b')
test data is: JavaCharStream.hexval('b');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data: Using the \\x escape sequence to specify a hexadecimal value for the character 'b }}
    }
}
statement is: // Improved test data: Using the \\x escape sequence to specify a hexadecimal value for the character 'b }}, class spoon.support.reflect.code.CtCommentImpl
statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('c')
test data is: JavaCharStream.hexval('c');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream.hexval('e');
    }
}
statement is: CharStream.hexval('e'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: CharStream.hexval('e') target is: CharStream method is: hexval(char)
Matched Method is: hexval(C)I
TestCase is: char _char = 'e';
JavaCharStream.hexval(_char);

statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('d')
test data is: JavaCharStream.hexval('d');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream.hexval(0xd);
    }
}
statement is: CharStream.hexval(0xd), class spoon.support.reflect.code.CtInvocationImpl
invocation is: CharStream.hexval(0xd) target is: CharStream method is: hexval(int)
Matched Method is: hexval(C)I
TestCase is: int _int = 13;
JavaCharStream.hexval((char) _int);

statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('e')
test data is: JavaCharStream.hexval('e');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream.hexval('a');
    }
}
statement is: CharStream.hexval('a'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: CharStream.hexval('a') target is: CharStream method is: hexval(char)
Matched Method is: hexval(C)I
TestCase is: char _char = 'a';
JavaCharStream.hexval(_char);

statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('f')
test data is: JavaCharStream.hexval('f');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream.hexval('a');// Expect 97

        JavaCharStream.hexval('A');// Expect 65

        JavaCharStream.hexval('0');// Expect 48

        JavaCharStream.hexval('9');// Expect 57

        JavaCharStream.hexval('!');// Expect 33

        JavaCharStream.hexval('#');// Expect 35

        JavaCharStream.hexval('.');// Expect 46

        JavaCharStream.hexval('_');// Expect 9 }}

    }
}
statement is: CharStream.hexval('a')// Expect 97
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: CharStream.hexval('a')// Expect 97
 target is: CharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('A')// Expect 65
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('A')// Expect 65
 target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('0')// Expect 48
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('0')// Expect 48
 target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('9')// Expect 57
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('9')// Expect 57
 target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('!')// Expect 33
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('!')// Expect 33
 target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('#')// Expect 35
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('#')// Expect 35
 target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('.')// Expect 46
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('.')// Expect 46
 target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('_')// Expect 9 }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('_')// Expect 9 }}
 target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
TestCase is: char _char = 'a';
JavaCharStream.hexval(_char);
char _char = 'A';
JavaCharStream.hexval(_char);
char _char = '0';
JavaCharStream.hexval(_char);
char _char = '9';
JavaCharStream.hexval(_char);
char _char = '!';
JavaCharStream.hexval(_char);
char _char = '#';
JavaCharStream.hexval(_char);
char _char = '.';
JavaCharStream.hexval(_char);
char _char = '_';
JavaCharStream.hexval(_char);

statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('\"')
test data is: JavaCharStream.hexval('\"');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream.hexval('a');
    }
}
statement is: CharStream.hexval('a'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: CharStream.hexval('a') target is: CharStream method is: hexval(char)
Matched Method is: hexval(C)I
TestCase is: char _char = 'a';
JavaCharStream.hexval(_char);

statement is: java.io.PipedInputStream()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.PipedInputStream
statement code is: PipedInputStream pipedInputStream = new PipedInputStream()
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, (-1718), (byte)77)
statement is: backup(I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: javaCharStream.backup(62)
statement is: BeginToken()C type is: class org.evosuite.testcase.statements.MethodStatement return type char
statement code is: char BeginToken = javaCharStream.BeginToken()
statement is: AdjustBuffSize()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: javaCharStream.AdjustBuffSize()
statement is: AdjustBuffSize()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: javaCharStream.AdjustBuffSize()
test data is: PipedInputStream pipedInputStream = new PipedInputStream();
JavaCharStream javaCharStream = new JavaCharStream(pipedInputStream, (-1718), (byte)77);
javaCharStream.backup(62);
javaCharStream.BeginToken();
javaCharStream.AdjustBuffSize();
javaCharStream.AdjustBuffSize();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        PipedInputStream pipedInputStream = new PipedInputStream(new FileInputStream("path/to/file"));
        JavaCharStream javaCharStream = new JavaCharStream(pipedInputStream, -1718, ((byte) (77)));
        javaCharStream.backup(62);
        javaCharStream.BeginToken();
        javaCharStream.AdjustBuffSize();
        javaCharStream.AdjustBuffSize();
    }
}
statement is: PipedInputStream pipedInputStream = new PipedInputStream(new FileInputStream("path/to/file")), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(pipedInputStream, -1718, ((byte) (77))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.backup(62), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.backup(62) target is: javaCharStream method is: backup(int)
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;II)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 1
Matched Method is: backup(I)V
statement is: javaCharStream.BeginToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.BeginToken() target is: javaCharStream method is: BeginToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;II)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 1
Matched Method is: BeginToken()C
statement is: javaCharStream.AdjustBuffSize(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.AdjustBuffSize() target is: javaCharStream method is: AdjustBuffSize()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;II)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 1
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;II)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 1
Matched Method is: AdjustBuffSize()V
statement is: javaCharStream.AdjustBuffSize(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.AdjustBuffSize() target is: javaCharStream method is: AdjustBuffSize()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;II)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 1
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;II)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 1
Matched Method is: AdjustBuffSize()V
TestCase is: int _int = 77;
JavaCharStream javaCharStream = new JavaCharStream((InputStream) _int, (-1718), (int) (byte)77);
int _int = 62;
javaCharStream.backup(_int);
javaCharStream.BeginToken();
javaCharStream.AdjustBuffSize();
javaCharStream.AdjustBuffSize();

statement is: java.io.PipedInputStream()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.PipedInputStream
statement code is: PipedInputStream pipedInputStream = new PipedInputStream()
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: BeginToken()C type is: class org.evosuite.testcase.statements.MethodStatement return type char
statement code is: char BeginToken = javaCharStream.BeginToken()
test data is: PipedInputStream pipedInputStream = new PipedInputStream();
JavaCharStream javaCharStream = new JavaCharStream(pipedInputStream);
javaCharStream.BeginToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        PipedInputStream pipedInputStream = new PipedInputStream("This is a test string");
        JavaCharStream javaCharStream = new JavaCharStream(pipedInputStream);
        javaCharStream.BeginToken();
    }
}
statement is: PipedInputStream pipedInputStream = new PipedInputStream("This is a test string"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(pipedInputStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;)V
statement is: javaCharStream.BeginToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.BeginToken() target is: javaCharStream method is: BeginToken()
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;III)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream((Reader) null, 1, 1, 1)
statement is: org.evosuite.testcase.statements.AssignmentStatement@29cda03e type is: class org.evosuite.testcase.statements.AssignmentStatement return type int
statement code is: javaCharStream.bufpos = 1
statement is: backup(I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: javaCharStream.backup(1)
statement is: BeginToken()C type is: class org.evosuite.testcase.statements.MethodStatement return type char
statement code is: char BeginToken = javaCharStream.BeginToken()
test data is: JavaCharStream javaCharStream = new JavaCharStream((Reader) null, 1, 1, 1);
javaCharStream.bufpos = 1;
javaCharStream.backup(1);
javaCharStream.BeginToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream javaCharStream = new JavaCharStream(new StringReader("Hello World"), 1, 1, 1);
        javaCharStream.bufpos = 6;
        javaCharStream.backup(5);
        javaCharStream.BeginToken();
    }
}
statement is: CharStream javaCharStream = new JavaCharStream(new StringReader("Hello World"), 1, 1, 1), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.bufpos = 6, class spoon.support.reflect.code.CtAssignmentImpl
statement is: javaCharStream.backup(5), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.backup(5) target is: javaCharStream method is: backup(int)
statement is: javaCharStream.BeginToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.BeginToken() target is: javaCharStream method is: BeginToken()
TestCase is: int _int = 1;
int _int = 1;
int _int = 1;
JavaCharStream javaCharStream = new JavaCharStream((Reader) _int, _int, _int, 1);

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 1439, 1439)
statement is: org.evosuite.testcase.statements.AssignmentStatement@1f770a59 type is: class org.evosuite.testcase.statements.AssignmentStatement return type int
statement code is: javaCharStream.bufsize = 1439
statement is: AdjustBuffSize()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: javaCharStream.AdjustBuffSize()
test data is: StringReader stringReader = new StringReader("");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1439, 1439);
javaCharStream.bufsize = 1439;
javaCharStream.AdjustBuffSize();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("The quick brown fox jumps over the lazy dog.");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1024, 1024);
        javaCharStream.bufsize = 1024;
        javaCharStream.AdjustBuffSize();
    }
}
statement is: StringReader stringReader = new StringReader("The quick brown fox jumps over the lazy dog."), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1024, 1024), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.bufsize = 1024, class spoon.support.reflect.code.CtAssignmentImpl
statement is: javaCharStream.AdjustBuffSize(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.AdjustBuffSize() target is: javaCharStream method is: AdjustBuffSize()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 4
Matched Method is: AdjustBuffSize()V
TestCase is: String string = "The quick brown fox jumps over the lazy dog.";
StringReader stringReader = new StringReader(string);
int _int = 1024;
int _int = 1024;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int);
((JavaCharStream) stringReader).AdjustBuffSize();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("0 ")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: org.evosuite.testcase.statements.AssignmentStatement@cf5cc150 type is: class org.evosuite.testcase.statements.AssignmentStatement return type boolean
statement code is: javaCharStream.prevCharIsCR = true
statement is: BeginToken()C type is: class org.evosuite.testcase.statements.MethodStatement return type char
statement code is: char BeginToken = javaCharStream.BeginToken()
test data is: StringReader stringReader = new StringReader("0 ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.prevCharIsCR = true;
javaCharStream.BeginToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("1 ");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        javaCharStream.prevCharIsCR = false;
        javaCharStream.BeginToken();
    }
}
statement is: StringReader stringReader = new StringReader("1 "), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.prevCharIsCR = false, class spoon.support.reflect.code.CtAssignmentImpl
statement is: javaCharStream.BeginToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.BeginToken() target is: javaCharStream method is: BeginToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 2
Matched Method is: BeginToken()C
TestCase is: String string = "1 ";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
((JavaCharStream) stringReader).BeginToken();

statement is: org.evosuite.testcase.statements.ArrayStatement@f9d5e282 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[1]
statement is: org.evosuite.testcase.statements.AssignmentStatement@145365bf type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[0] = (byte)10
statement is: java.io.ByteArrayInputStream([B)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.ByteArrayInputStream
statement code is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(arg0)
statement is: java.io.DataInputStream(Ljava/io/InputStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.DataInputStream
statement code is: DataInputStream dataInputStream = new DataInputStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: org.evosuite.testcase.statements.AssignmentStatement@b322616e type is: class org.evosuite.testcase.statements.AssignmentStatement return type boolean
statement code is: javaCharStream.prevCharIsCR = true
statement is: readChar()C type is: class org.evosuite.testcase.statements.MethodStatement return type char
statement code is: char readChar = javaCharStream.readChar()
test data is: byte[] byteArray = new byte[1];
byteArray[0] = (byte)10;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
DataInputStream dataInputStream = new DataInputStream(byteArrayInputStream);
JavaCharStream javaCharStream = new JavaCharStream(dataInputStream);
javaCharStream.prevCharIsCR = true;
javaCharStream.readChar();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        byte[] byteArray = new byte[1];
        byteArray[0] = ((byte) (127));
        ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
        DataInputStream dataInputStream = new DataInputStream(byteArrayInputStream);
        JavaCharStream javaCharStream = new JavaCharStream(dataInputStream);
        javaCharStream.prevCharIsCR = true;
        javaCharStream.readChar();
    }
}
statement is: byte[] byteArray = new byte[1], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [1] Ct is: byte[] byteArray = new byte[1] isAssignment: false Array: new byte[1] Elements: []
lengths: [1] [1]
Their type are: class [B byte[]
statement is: byteArray[0] = ((byte) (127)), class spoon.support.reflect.code.CtAssignmentImpl
Assigned : byteArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl byte Assignment:((byte) (127)) Ct is: byteArray[0] = ((byte) (127))
target : byteArray class spoon.support.reflect.code.CtLiteralImpl
statement is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DataInputStream dataInputStream = new DataInputStream(byteArrayInputStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(dataInputStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.prevCharIsCR = true, class spoon.support.reflect.code.CtAssignmentImpl
statement is: javaCharStream.readChar(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.readChar() target is: javaCharStream method is: readChar()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;)V callee: VariableReference: Statement 4, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 5
Matched Method is: readChar()C
TestCase is: byte[] byteArray = new byte[1];
int _int = 127;
byteArray[0] = (byte) _int;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
DataInputStream dataInputStream = new DataInputStream(byteArrayInputStream);
JavaCharStream javaCharStream = new JavaCharStream(dataInputStream);
dataInputStream.readChar();

statement is: org.evosuite.testcase.statements.ArrayStatement@aa396225 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[5]
statement is: org.evosuite.testcase.statements.AssignmentStatement@30709e3d type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[1] = (byte)11
statement is: java.io.ByteArrayInputStream([B)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.ByteArrayInputStream
statement code is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(arg0)
statement is: java.io.DataInputStream(Ljava/io/InputStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.DataInputStream
statement code is: DataInputStream dataInputStream = new DataInputStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: readChar()C type is: class org.evosuite.testcase.statements.MethodStatement return type char
statement code is: char readChar = javaCharStream.readChar()
statement is: readChar()C type is: class org.evosuite.testcase.statements.MethodStatement return type char
statement code is: char readChar = javaCharStream.readChar()
test data is: byte[] byteArray = new byte[5];
byteArray[1] = (byte)11;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
DataInputStream dataInputStream = new DataInputStream(byteArrayInputStream);
JavaCharStream javaCharStream = new JavaCharStream(dataInputStream);
javaCharStream.readChar();
javaCharStream.readChar();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        byte[] byteArray = new byte[]{ 0x11, 0x22, 0x33, 0x44, 0x55 };
        ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
        DataInputStream dataInputStream = new DataInputStream(byteArrayInputStream);
        JavaCharStream javaCharStream = new JavaCharStream(dataInputStream);
        javaCharStream.readChar();// returns '1'

        javaCharStream.readChar();// returns '2' }}

    }
}
statement is: byte[] byteArray = new byte[]{ 0x11, 0x22, 0x33, 0x44, 0x55 }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: byte[] byteArray = new byte[5] isAssignment: false Array: new byte[]{ 0x11, 0x22, 0x33, 0x44, 0x55 } Elements: [0x11, 0x22, 0x33, 0x44, 0x55]
lengths: [5] []
statement is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: java.io.ByteArrayInputStream([B)V
statement is: DataInputStream dataInputStream = new DataInputStream(byteArrayInputStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: java.io.DataInputStream(Ljava/io/InputStream;)V
statement is: JavaCharStream javaCharStream = new JavaCharStream(dataInputStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;)V
statement is: javaCharStream.readChar()// returns '1'
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.readChar()// returns '1'
 target is: javaCharStream method is: readChar()
statement is: javaCharStream.readChar()// returns '2' }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.readChar()// returns '2' }}
 target is: javaCharStream method is: readChar()
statement is: org.evosuite.testcase.statements.ArrayStatement@64c73ac4 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[1]
statement is: org.evosuite.testcase.statements.AssignmentStatement@22e57b78 type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[0] = (byte)13
statement is: java.io.ByteArrayInputStream([B)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.ByteArrayInputStream
statement code is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: BeginToken()C type is: class org.evosuite.testcase.statements.MethodStatement return type char
statement code is: char BeginToken = javaCharStream.BeginToken()
test data is: byte[] byteArray = new byte[1];
byteArray[0] = (byte)13;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
javaCharStream.BeginToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        byte[] byteArray = new byte[]{ 13, -128, 0, 42, 56, 97 };
        ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
        JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
        javaCharStream.BeginToken();
    }
}
statement is: byte[] byteArray = new byte[]{ 13, -128, 0, 42, 56, 97 }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: byte[] byteArray = new byte[1] isAssignment: false Array: new byte[]{ 13, -128, 0, 42, 56, 97 } Elements: [13, -128, 0, 42, 56, 97]
lengths: [1] []
statement is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: java.io.ByteArrayInputStream([B)V
statement is: JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;)V
statement is: javaCharStream.BeginToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.BeginToken() target is: javaCharStream method is: BeginToken()
statement is: org.evosuite.testcase.statements.ArrayStatement@350fa542 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[2]
statement is: org.evosuite.testcase.statements.AssignmentStatement@2f37782 type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[0] = (byte)92
statement is: org.evosuite.testcase.statements.AssignmentStatement@2c910044 type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[1] = (byte)92
statement is: java.io.ByteArrayInputStream([B)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.ByteArrayInputStream
statement code is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(arg0)
statement is: java.io.DataInputStream(Ljava/io/InputStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.DataInputStream
statement code is: DataInputStream dataInputStream = new DataInputStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: readChar()C type is: class org.evosuite.testcase.statements.MethodStatement return type char
statement code is: char readChar = javaCharStream.readChar()
statement is: readChar()C type is: class org.evosuite.testcase.statements.MethodStatement return type char
statement code is: char readChar = javaCharStream.readChar()
test data is: byte[] byteArray = new byte[2];
byteArray[0] = (byte)92;
byteArray[1] = (byte)92;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
DataInputStream dataInputStream = new DataInputStream(byteArrayInputStream);
JavaCharStream javaCharStream = new JavaCharStream(dataInputStream);
javaCharStream.readChar();
javaCharStream.readChar();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        byte[] byteArray = new byte[2];
        byteArray[0] = ((byte) (128));
        byteArray[1] = ((byte) (256));
        ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
        DataInputStream dataInputStream = new DataInputStream(byteArrayInputStream);
        JavaCharStream javaCharStream = new JavaCharStream(dataInputStream);
        javaCharStream.readChar();
        javaCharStream.readChar();
    }
}
statement is: byte[] byteArray = new byte[2], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [2] Ct is: byte[] byteArray = new byte[2] isAssignment: false Array: new byte[2] Elements: []
lengths: [2] [2]
Their type are: class [B byte[]
statement is: byteArray[0] = ((byte) (128)), class spoon.support.reflect.code.CtAssignmentImpl
Assigned : byteArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl byte Assignment:((byte) (128)) Ct is: byteArray[0] = ((byte) (128))
target : byteArray class spoon.support.reflect.code.CtLiteralImpl
statement is: byteArray[1] = ((byte) (256)), class spoon.support.reflect.code.CtAssignmentImpl
Assigned : byteArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl byte Assignment:((byte) (256)) Ct is: byteArray[1] = ((byte) (256))
target : byteArray class spoon.support.reflect.code.CtLiteralImpl
statement is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DataInputStream dataInputStream = new DataInputStream(byteArrayInputStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(dataInputStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.readChar(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.readChar() target is: javaCharStream method is: readChar()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;)V callee: VariableReference: Statement 5, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 7
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;)V callee: VariableReference: Statement 5, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 7
Matched Method is: readChar()C
statement is: javaCharStream.readChar(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.readChar() target is: javaCharStream method is: readChar()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;)V callee: VariableReference: Statement 5, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 7
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;)V callee: VariableReference: Statement 5, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 7
Matched Method is: readChar()C
TestCase is: byte[] byteArray = new byte[2];
int _int = 128;
byteArray[0] = (byte) _int;
int _int = 256;
byteArray[1] = (byte) _int;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
DataInputStream dataInputStream = new DataInputStream(byteArrayInputStream);
JavaCharStream javaCharStream = new JavaCharStream(dataInputStream);
((JavaCharStream) byteArrayInputStream).readChar();
((JavaCharStream) byteArrayInputStream).readChar();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("][")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, (byte)49, (-1))
statement is: Done()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: javaCharStream.Done()
statement is: ReInit(Ljava/io/Reader;III)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: javaCharStream.ReInit((Reader) arg0, (-1166), (int) (byte)49, (int) (byte)1)
test data is: StringReader stringReader = new StringReader("][");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (byte)49, (-1));
javaCharStream.Done();
javaCharStream.ReInit((Reader) stringReader, (-1166), (int) (byte)49, (int) (byte)1);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("][");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, ((int) ((byte) (49))), -1);
        javaCharStream.Done();
        javaCharStream.ReInit(((Reader) (stringReader)), -1, ((int) ((byte) (49))), ((int) ((byte) (1))));
    }
}
statement is: StringReader stringReader = new StringReader("]["), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, ((int) ((byte) (49))), -1), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.Done(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.Done() target is: javaCharStream method is: Done()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 3
Matched Method is: Done()V
statement is: javaCharStream.ReInit(((Reader) (stringReader)), -1, ((int) ((byte) (49))), ((int) ((byte) (1)))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.ReInit(((Reader) (stringReader)), -1, ((int) ((byte) (49))), ((int) ((byte) (1)))) target is: javaCharStream method is: ReInit(Reader,int,int,int)
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 3
Matched Method is: ReInit(Ljava/io/Reader;III)V
i 3 Parameters size() 3 Num of Method Parameters: 4
TestCase is: String string = "][";
StringReader stringReader = new StringReader(string);
int _int = 49;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, (-1));
((JavaCharStream) stringReader).Done();
int _int = 49;
int _int = 1;
byte _byte = null;
((JavaCharStream) stringReader).ReInit((Reader) stringReader, _int, _int, (int) _byte);

statement is: java.io.PipedInputStream()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.PipedInputStream
statement code is: PipedInputStream pipedInputStream = new PipedInputStream()
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;III)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 14, (-2731), 13)
statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("0 ")
statement is: ReInit(Ljava/io/Reader;III)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: javaCharStream.ReInit((Reader) arg0, 13, 13, 47)
statement is: readChar()C type is: class org.evosuite.testcase.statements.MethodStatement return type char
statement code is: char readChar = javaCharStream.readChar()
test data is: PipedInputStream pipedInputStream = new PipedInputStream();
JavaCharStream javaCharStream = new JavaCharStream(pipedInputStream, 14, (-2731), 13);
StringReader stringReader = new StringReader("0 ");
javaCharStream.ReInit((Reader) stringReader, 13, 13, 47);
javaCharStream.readChar();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        PipedInputStream pipedInputStream = new PipedInputStream();
        JavaCharStream javaCharStream = new JavaCharStream(pipedInputStream, 14, -2731, 13);
        StringReader stringReader = new StringReader("This is a test string");
        javaCharStream.ReInit(((Reader) (stringReader)), 13, 13, 47);
        javaCharStream.readChar();
    }
}
statement is: PipedInputStream pipedInputStream = new PipedInputStream(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(pipedInputStream, 14, -2731, 13), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: StringReader stringReader = new StringReader("This is a test string"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.ReInit(((Reader) (stringReader)), 13, 13, 47), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.ReInit(((Reader) (stringReader)), 13, 13, 47) target is: javaCharStream method is: ReInit(Reader,int,int,int)
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;III)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 3
Matched Method is: ReInit(Ljava/io/Reader;III)V
statement is: javaCharStream.readChar(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.readChar() target is: javaCharStream method is: readChar()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;III)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 3
Matched Method is: readChar()C
TestCase is: PipedInputStream pipedInputStream = new PipedInputStream();
int _int = 14;
int _int = 13;
JavaCharStream javaCharStream = new JavaCharStream(pipedInputStream, _int, _int, 13);
String string = "This is a test string";
StringReader stringReader = new StringReader(string);
int _int = 13;
int _int = 13;
int _int = 47;
((JavaCharStream) _int).ReInit((Reader) stringReader, _int, _int, _int);
((JavaCharStream) _int).readChar();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("5KI^me@8d-6wFr$egP:")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: BeginToken()C type is: class org.evosuite.testcase.statements.MethodStatement return type char
statement code is: char BeginToken = javaCharStream.BeginToken()
statement is: GetImage()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String GetImage = javaCharStream.GetImage()
test data is: StringReader stringReader = new StringReader("5KI^me@8d-6wFr$egP:");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.BeginToken();
javaCharStream.GetImage();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("The quick brown fox jumps over the lazy dog");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        javaCharStream.BeginToken();
        javaCharStream.GetImage();
        // The above test data is a more descriptive and representative example of a string that could be used in the JavaCharStream class. }}
    }
}
statement is: StringReader stringReader = new StringReader("The quick brown fox jumps over the lazy dog"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.BeginToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.BeginToken() target is: javaCharStream method is: BeginToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 2
Matched Method is: BeginToken()C
statement is: javaCharStream.GetImage(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.GetImage() target is: javaCharStream method is: GetImage()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 2
Matched Method is: GetImage()Ljava/lang/String;
statement is: // The above test data is a more descriptive and representative example of a string that could be used in the JavaCharStream class. }}, class spoon.support.reflect.code.CtCommentImpl
TestCase is: String string = "The quick brown fox jumps over the lazy dog";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
((JavaCharStream) stringReader).BeginToken();
((JavaCharStream) stringReader).GetImage();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader(".")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: GetSuffix(I)[C type is: class org.evosuite.testcase.statements.MethodStatement return type class [C
statement code is: char[] GetSuffix = javaCharStream.GetSuffix(75)
test data is: StringReader stringReader = new StringReader(".");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.GetSuffix(75);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("This is a longer test sentence that includes multiple words.");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        javaCharStream.GetSuffix(50);
    }
}
statement is: StringReader stringReader = new StringReader("This is a longer test sentence that includes multiple words."), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.GetSuffix(50), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.GetSuffix(50) target is: javaCharStream method is: GetSuffix(int)
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 2
Matched Method is: GetSuffix(I)[C
TestCase is: String string = "This is a longer test sentence that includes multiple words.";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
int _int = 50;
((JavaCharStream) stringReader).GetSuffix(_int);

statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream((Reader) null)
statement is: backup(I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: javaCharStream.backup(1)
statement is: GetSuffix(I)[C type is: class org.evosuite.testcase.statements.MethodStatement return type class [C
statement code is: char[] GetSuffix = javaCharStream.GetSuffix(1)
test data is: JavaCharStream javaCharStream = new JavaCharStream((Reader) null);
javaCharStream.backup(1);
javaCharStream.GetSuffix(1);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data
        JavaCharStream javaCharStream = new JavaCharStream("Hello, world!");
        javaCharStream.backup(1);
        String suffix = javaCharStream.GetSuffix(1);
        assertEquals("world!", suffix);
    }
}
statement is: // Improved test data
JavaCharStream javaCharStream = new JavaCharStream("Hello, world!"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.backup(1), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.backup(1) target is: javaCharStream method is: backup(int)
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V callee: VariableReference: Statement 0, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 1
Matched Method is: backup(I)V
statement is: String suffix = javaCharStream.GetSuffix(1), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.GetSuffix(1) target is: javaCharStream method is: GetSuffix(int)
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V callee: VariableReference: Statement 0, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 1
Matched Method is: GetSuffix(I)[C
statement is: assertEquals("world!", suffix), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals("world!", suffix) target is:  method is: assertEquals(java.lang.String,java.lang.String)
TestCase is: String string = "Hello, world!";
JavaCharStream javaCharStream = new JavaCharStream((Reader) string);
int _int = 1;
((JavaCharStream) string).backup(_int);
int _int = 1;
((JavaCharStream) string).GetSuffix(_int);

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 2674, 2674)
statement is: backup(I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: javaCharStream.backup((-6862))
statement is: adjustBeginLineColumn(II)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: javaCharStream.adjustBeginLineColumn(2119, (-6862))
test data is: StringReader stringReader = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2674, 2674);
javaCharStream.backup((-6862));
javaCharStream.adjustBeginLineColumn(2119, (-6862));

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2674, 2674);
        javaCharStream.backup(-2147483648);// changed to a more descriptive value

        javaCharStream.adjustBeginLineColumn(2119, -2147483648);// changed to a more descriptive value }}

    }
}
statement is: StringReader stringReader = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2674, 2674), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.backup(-2147483648)// changed to a more descriptive value
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.backup(-2147483648)// changed to a more descriptive value
 target is: javaCharStream method is: backup(int)
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 4
Matched Method is: backup(I)V
statement is: javaCharStream.adjustBeginLineColumn(2119, -2147483648)// changed to a more descriptive value }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.adjustBeginLineColumn(2119, -2147483648)// changed to a more descriptive value }}
 target is: javaCharStream method is: adjustBeginLineColumn(int,int)
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 4
Matched Method is: adjustBeginLineColumn(II)V
TestCase is: String string = "com.soops.CEN4010.JMCA.JParser.JavaCharStream";
StringReader stringReader = new StringReader(string);
int _int = 2674;
int _int = 2674;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int);
int _int = Integer.MIN_VALUE;
((JavaCharStream) stringReader).backup(_int);
int _int = 2119;
int _int = Integer.MIN_VALUE;
((JavaCharStream) stringReader).adjustBeginLineColumn(_int, _int);

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;III)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 65, 74, 74)
statement is: backup(I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: javaCharStream.backup(75)
statement is: adjustBeginLineColumn(II)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: javaCharStream.adjustBeginLineColumn(2048, 915)
test data is: StringReader stringReader = new StringReader("");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 65, 74, 74);
javaCharStream.backup(75);
javaCharStream.adjustBeginLineColumn(2048, 915);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("This is a test string for JavaCharStream with different lengths and\tspaces");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, 30, 9.2, 74);
        javaCharStream.backup(75);
        javaCharStream.adjustBeginLineColumn(2048, 915);
    }
}
statement is: StringReader stringReader = new StringReader("This is a test string for JavaCharStream with different lengths and\tspaces"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, 30, 9.2, 74), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.backup(75), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.backup(75) target is: javaCharStream method is: backup(int)
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;III)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 5
Matched Method is: backup(I)V
statement is: javaCharStream.adjustBeginLineColumn(2048, 915), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.adjustBeginLineColumn(2048, 915) target is: javaCharStream method is: adjustBeginLineColumn(int,int)
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;III)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 5
Matched Method is: adjustBeginLineColumn(II)V
TestCase is: String string = "This is a test string for JavaCharStream with different lengths and\tspaces";
StringReader stringReader = new StringReader(string);
int _int = 30;
double _double = 9.2;
int _int = 74;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, (int) _double, _int);
int _int = 75;
((JavaCharStream) stringReader).backup(_int);
int _int = 2048;
int _int = 915;
((JavaCharStream) stringReader).adjustBeginLineColumn(_int, _int);

statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;III)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream((Reader) null, (-2591), (-2591), 1)
statement is: org.evosuite.testcase.statements.ArrayStatement@f0418164 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[0]
statement is: java.io.ByteArrayInputStream([BII)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.ByteArrayInputStream
statement code is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(arg0, 1933, (-316))
statement is: ReInit(Ljava/io/InputStream;III)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: javaCharStream.ReInit((InputStream) arg0, (-1), 0, 537)
test data is: JavaCharStream javaCharStream = new JavaCharStream((Reader) null, (-2591), (-2591), 1);
byte[] byteArray = new byte[0];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray, 1933, (-316));
javaCharStream.ReInit((InputStream) byteArrayInputStream, (-1), 0, 537);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream javaCharStream = new JavaCharStream(((Reader) (null)), -2591, -2591, 1);
        byte[] byteArray = new byte[0];
        ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray, 1933, -316);
        javaCharStream.ReInit(((InputStream) (byteArrayInputStream)), -1, 0, 537);
    }
}
statement is: CharStream javaCharStream = new JavaCharStream(((Reader) (null)), -2591, -2591, 1), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: byte[] byteArray = new byte[0], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [0] Ct is: byte[] byteArray = new byte[0] isAssignment: false Array: new byte[0] Elements: []
lengths: [0] [0]
Their type are: class [B byte[]
statement is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray, 1933, -316), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.ReInit(((InputStream) (byteArrayInputStream)), -1, 0, 537), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.ReInit(((InputStream) (byteArrayInputStream)), -1, 0, 537) target is: javaCharStream method is: ReInit(InputStream,int,int,int)
TestCase is: int _int = 1;
JavaCharStream javaCharStream = new JavaCharStream((Reader) _int, (-2591), (-2591), 1);
byte[] byteArray = new byte[0];
int _int = 1933;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray, _int, (-316));

statement is: org.evosuite.testcase.statements.ArrayStatement@81c1a020 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[5]
statement is: org.evosuite.testcase.statements.AssignmentStatement@b2405b0a type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[0] = (byte)10
statement is: java.io.ByteArrayInputStream([B)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.ByteArrayInputStream
statement code is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(arg0)
statement is: java.io.DataInputStream(Ljava/io/InputStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.DataInputStream
statement code is: DataInputStream dataInputStream = new DataInputStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: readChar()C type is: class org.evosuite.testcase.statements.MethodStatement return type char
statement code is: char readChar = javaCharStream.readChar()
statement is: readChar()C type is: class org.evosuite.testcase.statements.MethodStatement return type char
statement code is: char readChar = javaCharStream.readChar()
test data is: byte[] byteArray = new byte[5];
byteArray[0] = (byte)10;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
DataInputStream dataInputStream = new DataInputStream(byteArrayInputStream);
JavaCharStream javaCharStream = new JavaCharStream(dataInputStream);
javaCharStream.readChar();
javaCharStream.readChar();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        byte[] byteArray = new byte[]{ 65, 66, 67, 68, 69 };// 'A', 'B', 'C', 'D', 'E'

        ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
        DataInputStream dataInputStream = new DataInputStream(byteArrayInputStream);
        JavaCharStream javaCharStream = new JavaCharStream(dataInputStream, "UTF-8", "\n");
        char c;
        try {
            c = javaCharStream.readChar();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
}
statement is: byte[] byteArray = new byte[]{ 65, 66, 67, 68, 69 }// 'A', 'B', 'C', 'D', 'E'
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: byte[] byteArray = new byte[5] isAssignment: false Array: new byte[]{ 65, 66, 67, 68, 69 } Elements: [65, 66, 67, 68, 69]
lengths: [5] []
statement is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: java.io.ByteArrayInputStream([B)V
statement is: DataInputStream dataInputStream = new DataInputStream(byteArrayInputStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: java.io.DataInputStream(Ljava/io/InputStream;)V
statement is: JavaCharStream javaCharStream = new JavaCharStream(dataInputStream, "UTF-8", "\n"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: char c, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: try {
    c = javaCharStream.readChar();
} catch (IOException e) {
    e.printStackTrace();
}, class spoon.support.reflect.code.CtTryImpl
statement is: org.evosuite.testcase.statements.ArrayStatement@4179ec1e type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[5]
statement is: org.evosuite.testcase.statements.AssignmentStatement@79f8cd9 type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[0] = (byte)9
statement is: java.io.ByteArrayInputStream([B)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.ByteArrayInputStream
statement code is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: BeginToken()C type is: class org.evosuite.testcase.statements.MethodStatement return type char
statement code is: char BeginToken = javaCharStream.BeginToken()
test data is: byte[] byteArray = new byte[5];
byteArray[0] = (byte)9;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
javaCharStream.BeginToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        byte[] byteArray = new byte[5];
        byteArray[0] = ((byte) (0x31));// 9

        ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
        JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
        javaCharStream.BeginToken();
    }
}
statement is: byte[] byteArray = new byte[5], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [5] Ct is: byte[] byteArray = new byte[5] isAssignment: false Array: new byte[5] Elements: []
lengths: [5] [5]
Their type are: class [B byte[]
statement is: byteArray[0] = ((byte) (0x31))// 9
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : byteArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl byte Assignment:((byte) (0x31)) Ct is: byteArray[0] = ((byte) (0x31))// 9

target : byteArray class spoon.support.reflect.code.CtLiteralImpl
statement is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.BeginToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.BeginToken() target is: javaCharStream method is: BeginToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;)V callee: VariableReference: Statement 3, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 4
Matched Method is: BeginToken()C
TestCase is: byte[] byteArray = new byte[5];
int _int = 49;
byteArray[0] = (byte) _int;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
((JavaCharStream) byteArrayInputStream).BeginToken();

statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream((Reader) null)
statement is: backup(I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: javaCharStream.backup(1)
statement is: readChar()C type is: class org.evosuite.testcase.statements.MethodStatement return type char
statement code is: char readChar = javaCharStream.readChar()
statement is: readChar()C type is: class org.evosuite.testcase.statements.MethodStatement return type char
statement code is: char readChar = javaCharStream.readChar()
test data is: JavaCharStream javaCharStream = new JavaCharStream((Reader) null);
javaCharStream.backup(1);
javaCharStream.readChar();
javaCharStream.readChar();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream javaCharStream = new JavaCharStream(new StringReader("hello world"));
        javaCharStream.backup(1);
        javaCharStream.readChar();
        javaCharStream.readChar();
    }
}
statement is: CharStream javaCharStream = new JavaCharStream(new StringReader("hello world")), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.backup(1), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.backup(1) target is: javaCharStream method is: backup(int)
statement is: javaCharStream.readChar(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.readChar() target is: javaCharStream method is: readChar()
statement is: javaCharStream.readChar(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.readChar() target is: javaCharStream method is: readChar()
TestCase is: JavaCharStream javaCharStream = new JavaCharStream((Reader) null);

statement is: org.evosuite.testcase.statements.ArrayStatement@767c440 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[6]
statement is: org.evosuite.testcase.statements.AssignmentStatement@1618f41e type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[0] = (byte)92
statement is: java.io.ByteArrayInputStream([B)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.ByteArrayInputStream
statement code is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(arg0)
statement is: java.io.DataInputStream(Ljava/io/InputStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.DataInputStream
statement code is: DataInputStream dataInputStream = new DataInputStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: readChar()C type is: class org.evosuite.testcase.statements.MethodStatement return type char
statement code is: char readChar = javaCharStream.readChar()
test data is: byte[] byteArray = new byte[6];
byteArray[0] = (byte)92;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
DataInputStream dataInputStream = new DataInputStream(byteArrayInputStream);
JavaCharStream javaCharStream = new JavaCharStream(dataInputStream);
javaCharStream.readChar();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        byte[] byteArray = new byte[]{ ((byte) (92)), 65, 43, 10, 78 };
        ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
        DataInputStream dataInputStream = new DataInputStream(byteArrayInputStream);
        JavaCharStream javaCharStream = new JavaCharStream(dataInputStream);
        javaCharStream.readChar();
    }
}
statement is: byte[] byteArray = new byte[]{ ((byte) (92)), 65, 43, 10, 78 }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: byte[] byteArray = new byte[6] isAssignment: false Array: new byte[]{ ((byte) (92)), 65, 43, 10, 78 } Elements: [((byte) (92)), 65, 43, 10, 78]
lengths: [6] []
statement is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: java.io.ByteArrayInputStream([B)V
statement is: DataInputStream dataInputStream = new DataInputStream(byteArrayInputStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: java.io.DataInputStream(Ljava/io/InputStream;)V
statement is: JavaCharStream javaCharStream = new JavaCharStream(dataInputStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;)V
statement is: javaCharStream.readChar(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.readChar() target is: javaCharStream method is: readChar()
statement is: org.evosuite.testcase.statements.ArrayStatement@18b70389 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[2]
statement is: org.evosuite.testcase.statements.AssignmentStatement@c5faac21 type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[1] = (byte)92
statement is: java.io.ByteArrayInputStream([B)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.ByteArrayInputStream
statement code is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(arg0)
statement is: java.io.DataInputStream(Ljava/io/InputStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.DataInputStream
statement code is: DataInputStream dataInputStream = new DataInputStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: readChar()C type is: class org.evosuite.testcase.statements.MethodStatement return type char
statement code is: char readChar = javaCharStream.readChar()
statement is: readChar()C type is: class org.evosuite.testcase.statements.MethodStatement return type char
statement code is: char readChar = javaCharStream.readChar()
test data is: byte[] byteArray = new byte[2];
byteArray[1] = (byte)92;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
DataInputStream dataInputStream = new DataInputStream(byteArrayInputStream);
JavaCharStream javaCharStream = new JavaCharStream(dataInputStream);
javaCharStream.readChar();
javaCharStream.readChar();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        byte[] byteArray = new byte[2];
        byteArray[1] = ((byte) (92));// This is an example of a primitive value being used to represent a specific character in the test data. However, it may not be the most descriptive or representative value for this particular situation.

        ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);// This is an example of an object being instantiated and assigned to a variable. While this is necessary for the code to function properly, it may not provide enough context for a test suite.

        DataInputStream dataInputStream = new DataInputStream(byteArrayInputStream);// This is an example of another object being instantiated and assigned to a variable. Again, while this is necessary for the code to function properly, it may not be the most descriptive or representative value for this particular situation.

        JavaCharStream javaCharStream = new JavaCharStream(dataInputStream);// This is an example of a custom class being instantiated and assigned to a variable. While this class may be relevant for testing the specific scenario, it may not be the most descriptive or representative object for this particular test case.

        javaCharStream.readChar();// This line reads a character from the JavaCharStream object that was created earlier. However, without more context, it is difficult to determine what this character represents in the specific situation being tested.

        javaCharStream.readChar();// This line reads another character from the same JavaCharStream object. Again, without more context, it is difficult to determine what these characters represent in the specific situation being tested. }}

    }
}
statement is: byte[] byteArray = new byte[2], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [2] Ct is: byte[] byteArray = new byte[2] isAssignment: false Array: new byte[2] Elements: []
lengths: [2] [2]
Their type are: class [B byte[]
statement is: byteArray[1] = ((byte) (92))// This is an example of a primitive value being used to represent a specific character in the test data. However, it may not be the most descriptive or representative value for this particular situation.
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : byteArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl byte Assignment:((byte) (92)) Ct is: byteArray[1] = ((byte) (92))// This is an example of a primitive value being used to represent a specific character in the test data. However, it may not be the most descriptive or representative value for this particular situation.

target : byteArray class spoon.support.reflect.code.CtLiteralImpl
statement is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray)// This is an example of an object being instantiated and assigned to a variable. While this is necessary for the code to function properly, it may not provide enough context for a test suite.
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DataInputStream dataInputStream = new DataInputStream(byteArrayInputStream)// This is an example of another object being instantiated and assigned to a variable. Again, while this is necessary for the code to function properly, it may not be the most descriptive or representative value for this particular situation.
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(dataInputStream)// This is an example of a custom class being instantiated and assigned to a variable. While this class may be relevant for testing the specific scenario, it may not be the most descriptive or representative object for this particular test case.
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.readChar()// This line reads a character from the JavaCharStream object that was created earlier. However, without more context, it is difficult to determine what this character represents in the specific situation being tested.
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.readChar()// This line reads a character from the JavaCharStream object that was created earlier. However, without more context, it is difficult to determine what this character represents in the specific situation being tested.
 target is: javaCharStream method is: readChar()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;)V callee: VariableReference: Statement 4, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 5
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;)V callee: VariableReference: Statement 4, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 5
Matched Method is: readChar()C
statement is: javaCharStream.readChar()// This line reads another character from the same JavaCharStream object. Again, without more context, it is difficult to determine what these characters represent in the specific situation being tested. }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.readChar()// This line reads another character from the same JavaCharStream object. Again, without more context, it is difficult to determine what these characters represent in the specific situation being tested. }}
 target is: javaCharStream method is: readChar()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;)V callee: VariableReference: Statement 4, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 5
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;)V callee: VariableReference: Statement 4, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 5
Matched Method is: readChar()C
TestCase is: byte[] byteArray = new byte[2];
int _int = 92;
byteArray[1] = (byte) _int;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
DataInputStream dataInputStream = new DataInputStream(byteArrayInputStream);
JavaCharStream javaCharStream = new JavaCharStream(dataInputStream);
dataInputStream.readChar();
dataInputStream.readChar();

statement is: mock(java.util.Enumeration<java.io.InputStream>) type is: class org.evosuite.testcase.statements.FunctionalMockStatement return type java.util.Enumeration<java.io.InputStream>
statement code is: Enumeration<InputStream> enumeration = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
doReturn(false).when(enumeration).hasMoreElements()
statement is: java.io.SequenceInputStream(Ljava/util/Enumeration;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.SequenceInputStream
statement code is: SequenceInputStream sequenceInputStream = new SequenceInputStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;III)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 4096, (byte)72, (byte)72)
statement is: GetImage()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String GetImage = javaCharStream.GetImage()
statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader(arg0)
statement is: ReInit(Ljava/io/Reader;III)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: javaCharStream.ReInit((Reader) arg0, 3, (int) (byte)72, 3)
statement is: ReInit(Ljava/io/Reader;III)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: javaCharStream.ReInit((Reader) arg0, 55, 950, 3)
test data is: Enumeration<InputStream> enumeration = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
doReturn(false).when(enumeration).hasMoreElements();
SequenceInputStream sequenceInputStream = new SequenceInputStream(enumeration);
JavaCharStream javaCharStream = new JavaCharStream(sequenceInputStream, 4096, (byte)72, (byte)72);
String GetImage = javaCharStream.GetImage();
StringReader stringReader = new StringReader(GetImage);
javaCharStream.ReInit((Reader) stringReader, 3, (int) (byte)72, 3);
javaCharStream.ReInit((Reader) stringReader, 55, 950, 3);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        List<InputStream> enumeration = Arrays.asList(new FileInputStream("image1.jpg"), new FileInputStream("image2.png"));
        SequenceInputStream sequenceInputStream = new SequenceInputStream(enumeration);
        JavaCharStream javaCharStream = new JavaCharStream(sequenceInputStream, 4096, ((byte) (72)), ((byte) (72)));
        String GetImage = javaCharStream.GetImage();
        StringReader stringReader = new StringReader(GetImage);
        javaCharStream.ReInit(((Reader) (stringReader)), 3, ((int) ((byte) (72))), 3);
        javaCharStream.ReInit(((Reader) (stringReader)), 55, 950, 3);
    }
}
statement is: List<InputStream> enumeration = Arrays.asList(new FileInputStream("image1.jpg"), new FileInputStream("image2.png")), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: Arrays.asList(new FileInputStream("image1.jpg"), new FileInputStream("image2.png")) target is: Arrays method is: asList(FileInputStream,FileInputStream)
statement is: SequenceInputStream sequenceInputStream = new SequenceInputStream(enumeration), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: java.io.SequenceInputStream(Ljava/util/Enumeration;)V
statement is: JavaCharStream javaCharStream = new JavaCharStream(sequenceInputStream, 4096, ((byte) (72)), ((byte) (72))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: String GetImage = javaCharStream.GetImage(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.GetImage() target is: javaCharStream method is: GetImage()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;III)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 3
Matched Method is: GetImage()Ljava/lang/String;
statement is: StringReader stringReader = new StringReader(GetImage), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.ReInit(((Reader) (stringReader)), 3, ((int) ((byte) (72))), 3), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.ReInit(((Reader) (stringReader)), 3, ((int) ((byte) (72))), 3) target is: javaCharStream method is: ReInit(Reader,int,int,int)
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;III)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;III)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 3
Matched Method is: ReInit(Ljava/io/Reader;III)V
statement is: javaCharStream.ReInit(((Reader) (stringReader)), 55, 950, 3), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.ReInit(((Reader) (stringReader)), 55, 950, 3) target is: javaCharStream method is: ReInit(Reader,int,int,int)
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;III)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;III)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 3
Matched Method is: ReInit(Ljava/io/Reader;III)V
TestCase is: int _int = 4096;
int _int = 72;
int _int = 72;
JavaCharStream javaCharStream = new JavaCharStream((InputStream) _int, _int, _int, (int) (byte)72);
String GetImage = ((JavaCharStream) _int).GetImage();
StringReader stringReader = new StringReader(GetImage);
int _int = 3;
int _int = 72;
int _int = 3;
((JavaCharStream) _int).ReInit((Reader) stringReader, _int, _int, _int);
int _int = 55;
int _int = 950;
int _int = 3;
((JavaCharStream) _int).ReInit((Reader) stringReader, _int, _int, _int);

statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;III)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream((Reader) null, (-1), (byte)10, (byte)0)
statement is: GetImage()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String GetImage = javaCharStream.GetImage()
test data is: JavaCharStream javaCharStream = new JavaCharStream((Reader) null, (-1), (byte)10, (byte)0);
javaCharStream.GetImage();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream javaCharStream = new JavaCharStream("This is a test string.", -1, ((byte) (10)), ((byte) (0)));
        javaCharStream.GetImage();
    }
}
statement is: CharStream javaCharStream = new JavaCharStream("This is a test string.", -1, ((byte) (10)), ((byte) (0))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.GetImage(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.GetImage() target is: javaCharStream method is: GetImage()
TestCase is: String string = "This is a test string.";
int _int = 10;
int _int = 0;
JavaCharStream javaCharStream = new JavaCharStream((Reader) string, _int, _int, (int) (byte)0);

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("a4Y%yt29{j.v>fm6mM")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, (byte)72, 15)
statement is: GetSuffix(I)[C type is: class org.evosuite.testcase.statements.MethodStatement return type class [C
statement code is: char[] GetSuffix = javaCharStream.GetSuffix((byte)0)
test data is: StringReader stringReader = new StringReader("a4Y%yt29{j.v>fm6mM");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (byte)72, 15);
javaCharStream.GetSuffix((byte)0);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream javaCharStream = new JavaCharStream(stringReader, ((byte) (72)), 15);
        javaCharStream.GetSuffix(((byte) (0)));
    }
}
statement is: CharStream javaCharStream = new JavaCharStream(stringReader, ((byte) (72)), 15), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.GetSuffix(((byte) (0))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.GetSuffix(((byte) (0))) target is: javaCharStream method is: GetSuffix(byte)
TestCase is: int _int = 72;
int _int = 15;
JavaCharStream javaCharStream = new JavaCharStream((Reader) _int, _int, 15);

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("x}w8H1 8RPT")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: ReadByte()C type is: class org.evosuite.testcase.statements.MethodStatement return type char
statement code is: char ReadByte = javaCharStream.ReadByte()
test data is: StringReader stringReader = new StringReader("x}w8H1 8RPT");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.ReadByte();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("This is a test of the emergency broadcast system. This is only a test, do not panic.");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        javaCharStream.ReadByte();
    }
}
statement is: StringReader stringReader = new StringReader("This is a test of the emergency broadcast system. This is only a test, do not panic."), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.ReadByte(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.ReadByte() target is: javaCharStream method is: ReadByte()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 2
Matched Method is: ReadByte()C
TestCase is: String string = "This is a test of the emergency broadcast system. This is only a test, do not panic.";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
((JavaCharStream) stringReader).ReadByte();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("0 ")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: ReadByte()C type is: class org.evosuite.testcase.statements.MethodStatement return type char
statement code is: char ReadByte = javaCharStream.ReadByte()
test data is: StringReader stringReader = new StringReader("0 ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.ReadByte();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("1 ");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        javaCharStream.ReadByte();
    }
}
statement is: StringReader stringReader = new StringReader("1 "), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.ReadByte(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.ReadByte() target is: javaCharStream method is: ReadByte()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 2
Matched Method is: ReadByte()C
TestCase is: String string = "1 ";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
((JavaCharStream) stringReader).ReadByte();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("\"SP+~}<.O%13X$&!2")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 8, 14)
statement is: ReadByte()C type is: class org.evosuite.testcase.statements.MethodStatement return type char
statement code is: char ReadByte = javaCharStream.ReadByte()
test data is: StringReader stringReader = new StringReader("\"SP+~}<.O%13X$&!2");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 8, 14);
javaCharStream.ReadByte();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream javaCharStream = new JavaCharStream(stringReader, 8, 14);
        int byteRead = javaCharStream.ReadByte();
        assertEquals('S', ((char) (byteRead)));
    }
}
statement is: CharStream javaCharStream = new JavaCharStream(stringReader, 8, 14), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: int byteRead = javaCharStream.ReadByte(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.ReadByte() target is: javaCharStream method is: ReadByte()
statement is: assertEquals('S', ((char) (byteRead))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals('S', ((char) (byteRead))) target is:  method is: assertEquals(char,char)
TestCase is: int _int = 8;
int _int = 14;
JavaCharStream javaCharStream = new JavaCharStream((Reader) _int, _int, 14);

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("%]VKHNCW#S]{$aS ")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, (-1153), (-1))
statement is: BeginToken()C type is: class org.evosuite.testcase.statements.MethodStatement return type char
statement code is: char BeginToken = javaCharStream.BeginToken()
statement is: getBeginColumn()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int beginColumn = javaCharStream.getBeginColumn()
test data is: StringReader stringReader = new StringReader("%]VKHNCW#S]{$aS ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-1153), (-1));
javaCharStream.BeginToken();
javaCharStream.getBeginColumn();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream javaCharStream = new JavaCharStream(stringReader, -1153, -1);
        javaCharStream.BeginToken();
        javaCharStream.getBeginColumn();
    }
}
statement is: CharStream javaCharStream = new JavaCharStream(stringReader, -1153, -1), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V
statement is: javaCharStream.BeginToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.BeginToken() target is: javaCharStream method is: BeginToken()
statement is: javaCharStream.getBeginColumn(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.getBeginColumn() target is: javaCharStream method is: getBeginColumn()
statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("0 ")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: BeginToken()C type is: class org.evosuite.testcase.statements.MethodStatement return type char
statement code is: char BeginToken = javaCharStream.BeginToken()
statement is: getBeginColumn()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int beginColumn = javaCharStream.getBeginColumn()
test data is: StringReader stringReader = new StringReader("0 ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.BeginToken();
javaCharStream.getBeginColumn();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("The quick brown fox jumps over the lazy dog.");// added a period at the end to make it a complete sentence

        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        javaCharStream.BeginToken();
        javaCharStream.getBeginColumn();
    }
}
statement is: StringReader stringReader = new StringReader("The quick brown fox jumps over the lazy dog.")// added a period at the end to make it a complete sentence
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.BeginToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.BeginToken() target is: javaCharStream method is: BeginToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 2
Matched Method is: BeginToken()C
statement is: javaCharStream.getBeginColumn(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.getBeginColumn() target is: javaCharStream method is: getBeginColumn()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 2
Matched Method is: getBeginColumn()I
TestCase is: String string = "The quick brown fox jumps over the lazy dog.";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
((JavaCharStream) stringReader).BeginToken();
((JavaCharStream) stringReader).getBeginColumn();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("%]VKHNCW#S]{$aS ")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, (-5410), (-3736))
statement is: readChar()C type is: class org.evosuite.testcase.statements.MethodStatement return type char
statement code is: char readChar = javaCharStream.readChar()
statement is: getBeginLine()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int beginLine = javaCharStream.getBeginLine()
test data is: StringReader stringReader = new StringReader("%]VKHNCW#S]{$aS ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-5410), (-3736));
javaCharStream.readChar();
javaCharStream.getBeginLine();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream javaCharStream = new JavaCharStream(stringReader, -5410, -3736);
        javaCharStream.readChar();
        javaCharStream.getBeginLine();
    }
}
statement is: CharStream javaCharStream = new JavaCharStream(stringReader, -5410, -3736), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V
statement is: javaCharStream.readChar(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.readChar() target is: javaCharStream method is: readChar()
statement is: javaCharStream.getBeginLine(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.getBeginLine() target is: javaCharStream method is: getBeginLine()
statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("0 ")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 14, 14)
statement is: BeginToken()C type is: class org.evosuite.testcase.statements.MethodStatement return type char
statement code is: char BeginToken = javaCharStream.BeginToken()
statement is: getBeginLine()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int beginLine = javaCharStream.getBeginLine()
test data is: StringReader stringReader = new StringReader("0 ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 14, 14);
javaCharStream.BeginToken();
javaCharStream.getBeginLine();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("The quick brown fox jumps over the lazy dog.");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, 30, 14);
        javaCharStream.BeginToken();
        javaCharStream.getBeginLine();
    }
}
statement is: StringReader stringReader = new StringReader("The quick brown fox jumps over the lazy dog."), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, 30, 14), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.BeginToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.BeginToken() target is: javaCharStream method is: BeginToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 4
Matched Method is: BeginToken()C
statement is: javaCharStream.getBeginLine(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.getBeginLine() target is: javaCharStream method is: getBeginLine()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 4
Matched Method is: getBeginLine()I
TestCase is: String string = "The quick brown fox jumps over the lazy dog.";
StringReader stringReader = new StringReader(string);
int _int = 30;
int _int = 14;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int);
((JavaCharStream) stringReader).BeginToken();
((JavaCharStream) stringReader).getBeginLine();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("g9+")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;III)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, (-1), (-1), 14)
statement is: BeginToken()C type is: class org.evosuite.testcase.statements.MethodStatement return type char
statement code is: char BeginToken = javaCharStream.BeginToken()
statement is: getColumn()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int column = javaCharStream.getColumn()
test data is: StringReader stringReader = new StringReader("g9+");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-1), (-1), 14);
javaCharStream.BeginToken();
javaCharStream.getColumn();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("this_is_a_test_string");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, -1, -1, 14);
        javaCharStream.BeginToken();
        javaCharStream.getColumn();
    }
}
statement is: StringReader stringReader = new StringReader("this_is_a_test_string"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, -1, -1, 14), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.BeginToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.BeginToken() target is: javaCharStream method is: BeginToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;III)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 3
Matched Method is: BeginToken()C
statement is: javaCharStream.getColumn(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.getColumn() target is: javaCharStream method is: getColumn()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;III)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 3
Matched Method is: getColumn()I
TestCase is: String string = "this_is_a_test_string";
StringReader stringReader = new StringReader(string);
int _int = 14;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, (-1), 14);
((JavaCharStream) stringReader).BeginToken();
((JavaCharStream) stringReader).getColumn();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("5KI^me@8d-6wFr$egP:")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 1, 1)
statement is: backup(I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: javaCharStream.backup(0)
statement is: UpdateLineColumn(C)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: javaCharStream.UpdateLineColumn('t')
statement is: getColumn()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int column = javaCharStream.getColumn()
test data is: StringReader stringReader = new StringReader("5KI^me@8d-6wFr$egP:");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1, 1);
javaCharStream.backup(0);
javaCharStream.UpdateLineColumn('t');
javaCharStream.getColumn();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("5KI^me@8d-6wFr$egP:");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1, 1);
        javaCharStream.backup(0);
        javaCharStream.UpdateLineColumn('t');
        javaCharStream.getColumn();
        // Improved test data
        StringReader stringReader = new StringReader("The quick brown fox jumps over the lazy dog.");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1, 1);
        javaCharStream.backup(0);
        javaCharStream.UpdateLineColumn('t');
        javaCharStream.getColumn();
    }
}
statement is: StringReader stringReader = new StringReader("5KI^me@8d-6wFr$egP:"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1, 1), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.backup(0), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.backup(0) target is: javaCharStream method is: backup(int)
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 4
Matched Method is: backup(I)V
statement is: javaCharStream.UpdateLineColumn('t'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.UpdateLineColumn('t') target is: javaCharStream method is: UpdateLineColumn(char)
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 4
Matched Method is: UpdateLineColumn(C)V
statement is: javaCharStream.getColumn(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.getColumn() target is: javaCharStream method is: getColumn()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 4
Matched Method is: getColumn()I
statement is: // Improved test data
StringReader stringReader = new StringReader("The quick brown fox jumps over the lazy dog."), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1, 1), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.backup(0), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.backup(0) target is: javaCharStream method is: backup(int)
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 14
Matched Method is: backup(I)V
statement is: javaCharStream.UpdateLineColumn('t'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.UpdateLineColumn('t') target is: javaCharStream method is: UpdateLineColumn(char)
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 14
Matched Method is: UpdateLineColumn(C)V
statement is: javaCharStream.getColumn(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.getColumn() target is: javaCharStream method is: getColumn()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 14
Matched Method is: getColumn()I
TestCase is: String string = "5KI^me@8d-6wFr$egP:";
StringReader stringReader = new StringReader(string);
int _int = 1;
int _int = 1;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int);
int _int = 0;
((JavaCharStream) stringReader).backup(_int);
char _char = 't';
((JavaCharStream) stringReader).UpdateLineColumn(_char);
((JavaCharStream) stringReader).getColumn();
String string = "The quick brown fox jumps over the lazy dog.";
StringReader stringReader = new StringReader(string);
int _int = 1;
int _int = 1;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int);
int _int = 0;
((JavaCharStream) stringReader).backup(_int);
char _char = 't';
((JavaCharStream) stringReader).UpdateLineColumn(_char);
((JavaCharStream) stringReader).getColumn();

statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream((Reader) null)
statement is: backup(I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: javaCharStream.backup(1)
statement is: getColumn()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int column = javaCharStream.getColumn()
test data is: JavaCharStream javaCharStream = new JavaCharStream((Reader) null);
javaCharStream.backup(1);
javaCharStream.getColumn();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream javaCharStream = new JavaCharStream(new StringReader("Hello, world!"));
        javaCharStream.backup(1);
        assertEquals(6, javaCharStream.getColumn());
        // Test data for the backup method
        javaCharStream.backup(0);
        assertEquals(5, javaCharStream.getColumn());
        javaCharStream.backup(2);
        assertEquals(3, javaCharStream.getColumn());
        // Test data for the getColumn method
        javaCharStream.backup(1);
        assertEquals(6, javaCharStream.getColumn());
    }
}
statement is: CharStream javaCharStream = new JavaCharStream(new StringReader("Hello, world!")), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.backup(1), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.backup(1) target is: javaCharStream method is: backup(int)
statement is: assertEquals(6, javaCharStream.getColumn()), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(6, javaCharStream.getColumn()) target is:  method is: assertEquals(int,<unknown>)
statement is: // Test data for the backup method
javaCharStream.backup(0), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Test data for the backup method
javaCharStream.backup(0) target is: javaCharStream method is: backup(int)
statement is: assertEquals(5, javaCharStream.getColumn()), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(5, javaCharStream.getColumn()) target is:  method is: assertEquals(int,<unknown>)
statement is: javaCharStream.backup(2), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.backup(2) target is: javaCharStream method is: backup(int)
statement is: assertEquals(3, javaCharStream.getColumn()), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(3, javaCharStream.getColumn()) target is:  method is: assertEquals(int,<unknown>)
statement is: // Test data for the getColumn method
javaCharStream.backup(1), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Test data for the getColumn method
javaCharStream.backup(1) target is: javaCharStream method is: backup(int)
statement is: assertEquals(6, javaCharStream.getColumn()), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(6, javaCharStream.getColumn()) target is:  method is: assertEquals(int,<unknown>)
TestCase is: JavaCharStream javaCharStream = new JavaCharStream((Reader) null);

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 2155, 2155)
statement is: BeginToken()C type is: class org.evosuite.testcase.statements.MethodStatement return type char
statement code is: char BeginToken = javaCharStream.BeginToken()
statement is: getEndColumn()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int endColumn = javaCharStream.getEndColumn()
test data is: StringReader stringReader = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2155, 2155);
javaCharStream.BeginToken();
javaCharStream.getEndColumn();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2155, 2155);
        javaCharStream.BeginToken();
        javaCharStream.getEndColumn();
    }
}
statement is: StringReader stringReader = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2155, 2155), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.BeginToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.BeginToken() target is: javaCharStream method is: BeginToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 4
Matched Method is: BeginToken()C
statement is: javaCharStream.getEndColumn(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.getEndColumn() target is: javaCharStream method is: getEndColumn()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 4
Matched Method is: getEndColumn()I
TestCase is: String string = "com.soops.CEN4010.JMCA.JParser.JavaCharStream";
StringReader stringReader = new StringReader(string);
int _int = 2155;
int _int = 2155;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int);
((JavaCharStream) stringReader).BeginToken();
((JavaCharStream) stringReader).getEndColumn();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("5KI^me@8d-6wFr$egP:")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 1, 1)
statement is: backup(I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: javaCharStream.backup(0)
statement is: getEndColumn()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int endColumn = javaCharStream.getEndColumn()
test data is: StringReader stringReader = new StringReader("5KI^me@8d-6wFr$egP:");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1, 1);
javaCharStream.backup(0);
javaCharStream.getEndColumn();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*()_+-=[]{}|;\':\"\\,./<>?");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1, 1);
        javaCharStream.backup(0);
        javaCharStream.getEndColumn();
    }
}
statement is: StringReader stringReader = new StringReader("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*()_+-=[]{}|;\':\"\\,./<>?"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1, 1), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.backup(0), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.backup(0) target is: javaCharStream method is: backup(int)
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 4
Matched Method is: backup(I)V
statement is: javaCharStream.getEndColumn(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.getEndColumn() target is: javaCharStream method is: getEndColumn()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 4
Matched Method is: getEndColumn()I
TestCase is: String string = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*()_+-=[]{}|;':\"\\,./<>?";
StringReader stringReader = new StringReader(string);
int _int = 1;
int _int = 1;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int);
int _int = 0;
((JavaCharStream) stringReader).backup(_int);
((JavaCharStream) stringReader).getEndColumn();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("rVx1>nWNaU^:L")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;III)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, (-1555), (-1), 54)
statement is: readChar()C type is: class org.evosuite.testcase.statements.MethodStatement return type char
statement code is: char readChar = javaCharStream.readChar()
statement is: getEndLine()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int endLine = javaCharStream.getEndLine()
test data is: StringReader stringReader = new StringReader("rVx1>nWNaU^:L");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-1555), (-1), 54);
javaCharStream.readChar();
javaCharStream.getEndLine();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("This is a sample string.");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, 0, 10, 25);
        javaCharStream.readChar();
        javaCharStream.getEndLine();
    }
}
statement is: StringReader stringReader = new StringReader("This is a sample string."), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, 0, 10, 25), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.readChar(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.readChar() target is: javaCharStream method is: readChar()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;III)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 5
Matched Method is: readChar()C
statement is: javaCharStream.getEndLine(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.getEndLine() target is: javaCharStream method is: getEndLine()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;III)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 5
Matched Method is: getEndLine()I
TestCase is: String string = "This is a sample string.";
StringReader stringReader = new StringReader(string);
int _int = 0;
int _int = 10;
int _int = 25;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int, _int);
((JavaCharStream) stringReader).readChar();
((JavaCharStream) stringReader).getEndLine();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("w#MIO+jRn)?vGB")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;III)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 3366, (-1), 54)
statement is: readChar()C type is: class org.evosuite.testcase.statements.MethodStatement return type char
statement code is: char readChar = javaCharStream.readChar()
statement is: getEndLine()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int endLine = javaCharStream.getEndLine()
test data is: StringReader stringReader = new StringReader("w#MIO+jRn)?vGB");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 3366, (-1), 54);
javaCharStream.readChar();
javaCharStream.getEndLine();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("w#MIO+jRn)?vGB\r\t ");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, 3366, -1, 54);
        javaCharStream.readChar();
        javaCharStream.getEndLine();
    }
}
statement is: StringReader stringReader = new StringReader("w#MIO+jRn)?vGB\r\t "), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, 3366, -1, 54), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.readChar(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.readChar() target is: javaCharStream method is: readChar()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;III)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 4
Matched Method is: readChar()C
statement is: javaCharStream.getEndLine(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.getEndLine() target is: javaCharStream method is: getEndLine()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;III)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 4
Matched Method is: getEndLine()I
TestCase is: String string = "w#MIO+jRn)?vGB\r\t ";
StringReader stringReader = new StringReader(string);
int _int = 3366;
int _int = 54;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int, 54);
((JavaCharStream) stringReader).readChar();
((JavaCharStream) stringReader).getEndLine();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 2155, 2155)
statement is: backup(I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: javaCharStream.backup((-535))
statement is: getEndLine()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int endLine = javaCharStream.getEndLine()
test data is: StringReader stringReader = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2155, 2155);
javaCharStream.backup((-535));
javaCharStream.getEndLine();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1234, 1234);
        javaCharStream.backup(-50);
        javaCharStream.getEndLine();
    }
}
statement is: StringReader stringReader = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1234, 1234), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.backup(-50), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.backup(-50) target is: javaCharStream method is: backup(int)
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 4
Matched Method is: backup(I)V
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: javaCharStream.getEndLine(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.getEndLine() target is: javaCharStream method is: getEndLine()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 4
Matched Method is: getEndLine()I
TestCase is: String string = "com.soops.CEN4010.JMCA.JParser.JavaCharStream";
StringReader stringReader = new StringReader(string);
int _int = 1234;
int _int = 1234;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int);
int _int = null;
((JavaCharStream) stringReader).backup(_int);
((JavaCharStream) stringReader).getEndLine();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("%]VKHNCW#S]{$aS ")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, (-887), 88)
statement is: readChar()C type is: class org.evosuite.testcase.statements.MethodStatement return type char
statement code is: char readChar = javaCharStream.readChar()
statement is: getLine()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int line = javaCharStream.getLine()
test data is: StringReader stringReader = new StringReader("%]VKHNCW#S]{$aS ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-887), 88);
javaCharStream.readChar();
javaCharStream.getLine();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("This is a test string that contains numbers, uppercase and lowercase letters, special characters, and spaces.");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, -887, 88);
        javaCharStream.readChar();
        javaCharStream.getLine();
    }
}
statement is: StringReader stringReader = new StringReader("This is a test string that contains numbers, uppercase and lowercase letters, special characters, and spaces."), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, -887, 88), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.readChar(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.readChar() target is: javaCharStream method is: readChar()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 3
Matched Method is: readChar()C
statement is: javaCharStream.getLine(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.getLine() target is: javaCharStream method is: getLine()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 3
Matched Method is: getLine()I
TestCase is: String string = "This is a test string that contains numbers, uppercase and lowercase letters, special characters, and spaces.";
StringReader stringReader = new StringReader(string);
int _int = 88;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, 88);
((JavaCharStream) stringReader).readChar();
((JavaCharStream) stringReader).getLine();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("0 ")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: BeginToken()C type is: class org.evosuite.testcase.statements.MethodStatement return type char
statement code is: char BeginToken = javaCharStream.BeginToken()
statement is: getLine()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int line = javaCharStream.getLine()
test data is: StringReader stringReader = new StringReader("0 ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.BeginToken();
javaCharStream.getLine();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("Hello World");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        javaCharStream.BeginToken();
        javaCharStream.getLine();
    }
}
statement is: StringReader stringReader = new StringReader("Hello World"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.BeginToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.BeginToken() target is: javaCharStream method is: BeginToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 2
Matched Method is: BeginToken()C
statement is: javaCharStream.getLine(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.getLine() target is: javaCharStream method is: getLine()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 2
Matched Method is: getLine()I
TestCase is: String string = "Hello World";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
((JavaCharStream) stringReader).BeginToken();
((JavaCharStream) stringReader).getLine();

statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream((Reader) null, (-7), 6)
statement is: org.evosuite.testcase.statements.AssignmentStatement@72632821 type is: class org.evosuite.testcase.statements.AssignmentStatement return type int
statement code is: javaCharStream.bufpos = (int) 't'
statement is: getLine()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int line = javaCharStream.getLine()
test data is: JavaCharStream javaCharStream = new JavaCharStream((Reader) null, (-7), 6);
javaCharStream.bufpos = (int) 't';
javaCharStream.getLine();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        and = $missing$;
    }
}
statement is: and = $missing$, class spoon.support.reflect.code.CtAssignmentImpl
statement is: java.io.PipedInputStream()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.PipedInputStream
statement code is: PipedInputStream pipedInputStream = new PipedInputStream()
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 0, 0)
statement is: ExpandBuff(Z)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: javaCharStream.ExpandBuff(true)
test data is: PipedInputStream pipedInputStream = new PipedInputStream();
JavaCharStream javaCharStream = new JavaCharStream(pipedInputStream, 0, 0);
javaCharStream.ExpandBuff(true);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        PipedInputStream pipedInputStream = new PipedInputStream();
        JavaCharStream javaCharStream = new JavaCharStream(pipedInputStream, 1024, 32);// Changed buffer size to 1024 and initial buffer capacity to 32.

        javaCharStream.ExpandBuff(true);
    }
}
statement is: PipedInputStream pipedInputStream = new PipedInputStream(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(pipedInputStream, 1024, 32)// Changed buffer size to 1024 and initial buffer capacity to 32.
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.ExpandBuff(true), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.ExpandBuff(true) target is: javaCharStream method is: ExpandBuff(boolean)
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;II)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 3
Matched Method is: ExpandBuff(Z)V
TestCase is: PipedInputStream pipedInputStream = new PipedInputStream();
int _int = 1024;
int _int = 32;
JavaCharStream javaCharStream = new JavaCharStream(pipedInputStream, _int, _int);
boolean _boolean = true;
((JavaCharStream) _int).ExpandBuff(_boolean);

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("5FW*F")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;III)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, (-1077), 1907, 95)
statement is: FillBuff()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: javaCharStream.FillBuff()
test data is: StringReader stringReader = new StringReader("5FW*F");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-1077), 1907, 95);
javaCharStream.FillBuff();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("5FW*F");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, -1077, 1907, 95);
        javaCharStream.FillBuff();
    }
}
statement is: StringReader stringReader = new StringReader("5FW*F"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, -1077, 1907, 95), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.FillBuff(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.FillBuff() target is: javaCharStream method is: FillBuff()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;III)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 4
Matched Method is: FillBuff()V
TestCase is: String string = "5FW*F";
StringReader stringReader = new StringReader(string);
int _int = 1907;
int _int = 95;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int, 95);
((JavaCharStream) stringReader).FillBuff();

* test suite isTestSuite: 197
Test 0: 
byte[] byteArray = new byte[19];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
javaCharStream.ReInit((InputStream) byteArrayInputStream, (int) (byte)65, (int) (byte)65);
Test 1: 
JavaCharStream javaCharStream = new JavaCharStream((Reader) null);
javaCharStream.ReInit((Reader) null);
Test 2: 
StringReader stringReader = new StringReader("%]VKHNCW#S]{$aS ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-1153), (-1));
javaCharStream.getBeginColumn();
Test 3: 
PipedInputStream pipedInputStream = new PipedInputStream();
JavaCharStream javaCharStream = new JavaCharStream(pipedInputStream, 0, 0);
javaCharStream.ReInit((InputStream) pipedInputStream);
Test 4: 
byte[] byteArray = new byte[4];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray, (-1), (byte)65);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, (byte)1, 0, 4815);
StringReader stringReader = new StringReader(" ]L}1p.qu=:W8d1iy");
javaCharStream.ReInit((Reader) stringReader, 4815, (-2221));
javaCharStream.readChar();
javaCharStream.getEndColumn();
Test 5: 
StringReader stringReader = new StringReader("%]VKHNCW#S]{$aS ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-5410), (-3736));
javaCharStream.getBeginLine();
Test 6: 
JavaCharStream.hexval('0');
Test 7: 
try { 
  JavaCharStream.hexval('X');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 8: 
JavaCharStream.hexval('1');
Test 9: 
JavaCharStream.hexval('2');
Test 10: 
JavaCharStream.hexval('3');
Test 11: 
JavaCharStream.hexval('4');
Test 12: 
JavaCharStream.hexval('5');
Test 13: 
JavaCharStream.hexval('6');
Test 14: 
JavaCharStream.hexval('7');
Test 15: 
JavaCharStream.hexval('8');
Test 16: 
JavaCharStream.hexval('9');
Test 17: 
try { 
  JavaCharStream.hexval(':');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 18: 
try { 
  JavaCharStream.hexval(';');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 19: 
try { 
  JavaCharStream.hexval('<');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 20: 
try { 
  JavaCharStream.hexval('=');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 21: 
try { 
  JavaCharStream.hexval('>');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 22: 
try { 
  JavaCharStream.hexval('?');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 23: 
try { 
  JavaCharStream.hexval('@');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 24: 
JavaCharStream.hexval('A');
Test 25: 
JavaCharStream.hexval('B');
Test 26: 
JavaCharStream.hexval('C');
Test 27: 
JavaCharStream.hexval('D');
Test 28: 
JavaCharStream.hexval('E');
Test 29: 
JavaCharStream.hexval('F');
Test 30: 
try { 
  JavaCharStream.hexval('G');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 31: 
try { 
  JavaCharStream.hexval('H');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 32: 
try { 
  JavaCharStream.hexval('I');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 33: 
try { 
  JavaCharStream.hexval('J');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 34: 
try { 
  JavaCharStream.hexval('K');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 35: 
try { 
  JavaCharStream.hexval('L');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 36: 
try { 
  JavaCharStream.hexval('M');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 37: 
try { 
  JavaCharStream.hexval('N');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 38: 
try { 
  JavaCharStream.hexval('O');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 39: 
try { 
  JavaCharStream.hexval('P');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 40: 
try { 
  JavaCharStream.hexval('Q');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 41: 
try { 
  JavaCharStream.hexval('R');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 42: 
try { 
  JavaCharStream.hexval('S');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 43: 
try { 
  JavaCharStream.hexval('T');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 44: 
try { 
  JavaCharStream.hexval('U');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 45: 
try { 
  JavaCharStream.hexval('V');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 46: 
try { 
  JavaCharStream.hexval('W');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 47: 
try { 
  JavaCharStream.hexval('Y');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 48: 
try { 
  JavaCharStream.hexval('Z');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 49: 
try { 
  JavaCharStream.hexval('[');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 50: 
try { 
  JavaCharStream.hexval('\\');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 51: 
try { 
  JavaCharStream.hexval(']');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 52: 
try { 
  JavaCharStream.hexval('^');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 53: 
try { 
  JavaCharStream.hexval('_');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 54: 
try { 
  JavaCharStream.hexval('`');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 55: 
JavaCharStream.hexval('a');
Test 56: 
JavaCharStream.hexval('b');
Test 57: 
JavaCharStream.hexval('c');
Test 58: 
JavaCharStream.hexval('d');
Test 59: 
JavaCharStream.hexval('e');
Test 60: 
JavaCharStream.hexval('f');
Test 61: 
try { 
  JavaCharStream.hexval('\"');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 62: 
PipedInputStream pipedInputStream = new PipedInputStream();
JavaCharStream javaCharStream = new JavaCharStream(pipedInputStream, (-1718), (byte)77);
javaCharStream.backup(62);
javaCharStream.BeginToken();
javaCharStream.AdjustBuffSize();
javaCharStream.AdjustBuffSize();
Test 63: 
PipedInputStream pipedInputStream = new PipedInputStream();
JavaCharStream javaCharStream = new JavaCharStream(pipedInputStream);
try { 
  javaCharStream.BeginToken();
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // Pipe not connected
   //
   verifyException("java.io.PipedInputStream", e);
}

Test 64: 
JavaCharStream javaCharStream = new JavaCharStream((Reader) null, 1, 1, 1);
javaCharStream.bufpos = 1;
javaCharStream.backup(1);
javaCharStream.BeginToken();
Test 65: 
StringReader stringReader = new StringReader("");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1439, 1439);
javaCharStream.bufsize = 1439;
javaCharStream.AdjustBuffSize();
Test 66: 
StringReader stringReader = new StringReader("0 ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.prevCharIsCR = true;
javaCharStream.BeginToken();
Test 67: 
byte[] byteArray = new byte[1];
byteArray[0] = (byte)10;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
DataInputStream dataInputStream = new DataInputStream(byteArrayInputStream);
JavaCharStream javaCharStream = new JavaCharStream(dataInputStream);
javaCharStream.prevCharIsCR = true;
javaCharStream.readChar();
Test 68: 
byte[] byteArray = new byte[5];
byteArray[1] = (byte)11;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
DataInputStream dataInputStream = new DataInputStream(byteArrayInputStream);
JavaCharStream javaCharStream = new JavaCharStream(dataInputStream);
javaCharStream.readChar();
javaCharStream.readChar();
Test 69: 
byte[] byteArray = new byte[1];
byteArray[0] = (byte)13;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
javaCharStream.BeginToken();
Test 70: 
byte[] byteArray = new byte[2];
byteArray[0] = (byte)92;
byteArray[1] = (byte)92;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
DataInputStream dataInputStream = new DataInputStream(byteArrayInputStream);
JavaCharStream javaCharStream = new JavaCharStream(dataInputStream);
javaCharStream.readChar();
javaCharStream.readChar();
Test 71: 
StringReader stringReader = new StringReader("][");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (byte)49, (-1));
javaCharStream.Done();
javaCharStream.ReInit((Reader) stringReader, (-1166), (int) (byte)49, (int) (byte)1);
Test 72: 
PipedInputStream pipedInputStream = new PipedInputStream();
JavaCharStream javaCharStream = new JavaCharStream(pipedInputStream, 14, (-2731), 13);
StringReader stringReader = new StringReader("0 ");
javaCharStream.ReInit((Reader) stringReader, 13, 13, 47);
javaCharStream.readChar();
Test 73: 
StringReader stringReader = new StringReader("5KI^me@8d-6wFr$egP:");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.BeginToken();
javaCharStream.GetImage();
Test 74: 
StringReader stringReader = new StringReader(".");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.GetSuffix(75);
Test 75: 
JavaCharStream javaCharStream = new JavaCharStream((Reader) null);
javaCharStream.backup(1);
javaCharStream.GetSuffix(1);
Test 76: 
StringReader stringReader = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2674, 2674);
javaCharStream.backup((-6862));
javaCharStream.adjustBeginLineColumn(2119, (-6862));
Test 77: 
StringReader stringReader = new StringReader("");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 65, 74, 74);
javaCharStream.backup(75);
javaCharStream.adjustBeginLineColumn(2048, 915);
Test 78: 
JavaCharStream javaCharStream = new JavaCharStream((Reader) null, (-2591), (-2591), 1);
byte[] byteArray = new byte[0];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray, 1933, (-316));
javaCharStream.ReInit((InputStream) byteArrayInputStream, (-1), 0, 537);
Test 79: 
byte[] byteArray = new byte[5];
byteArray[0] = (byte)10;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
DataInputStream dataInputStream = new DataInputStream(byteArrayInputStream);
JavaCharStream javaCharStream = new JavaCharStream(dataInputStream);
javaCharStream.readChar();
javaCharStream.readChar();
Test 80: 
byte[] byteArray = new byte[5];
byteArray[0] = (byte)9;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
javaCharStream.BeginToken();
Test 81: 
JavaCharStream javaCharStream = new JavaCharStream((Reader) null);
javaCharStream.backup(1);
javaCharStream.readChar();
// Undeclared exception!
try { 
  javaCharStream.readChar();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 82: 
byte[] byteArray = new byte[6];
byteArray[0] = (byte)92;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
DataInputStream dataInputStream = new DataInputStream(byteArrayInputStream);
JavaCharStream javaCharStream = new JavaCharStream(dataInputStream);
javaCharStream.readChar();
Test 83: 
byte[] byteArray = new byte[2];
byteArray[1] = (byte)92;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
DataInputStream dataInputStream = new DataInputStream(byteArrayInputStream);
JavaCharStream javaCharStream = new JavaCharStream(dataInputStream);
javaCharStream.readChar();
javaCharStream.readChar();
Test 84: 
Enumeration<InputStream> enumeration = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
doReturn(false).when(enumeration).hasMoreElements();
SequenceInputStream sequenceInputStream = new SequenceInputStream(enumeration);
JavaCharStream javaCharStream = new JavaCharStream(sequenceInputStream, 4096, (byte)72, (byte)72);
String GetImage = javaCharStream.GetImage();
StringReader stringReader = new StringReader(GetImage);
javaCharStream.ReInit((Reader) stringReader, 3, (int) (byte)72, 3);
javaCharStream.ReInit((Reader) stringReader, 55, 950, 3);
Test 85: 
JavaCharStream javaCharStream = new JavaCharStream((Reader) null, (-1), (byte)10, (byte)0);
javaCharStream.GetImage();
Test 86: 
StringReader stringReader = new StringReader("a4Y%yt29{j.v>fm6mM");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (byte)72, 15);
javaCharStream.GetSuffix((byte)0);
Test 87: 
StringReader stringReader = new StringReader("x}w8H1 8RPT");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.ReadByte();
Test 88: 
StringReader stringReader = new StringReader("0 ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.ReadByte();
Test 89: 
StringReader stringReader = new StringReader("\"SP+~}<.O%13X$&!2");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 8, 14);
javaCharStream.ReadByte();
Test 90: 
StringReader stringReader = new StringReader("%]VKHNCW#S]{$aS ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-1153), (-1));
javaCharStream.BeginToken();
javaCharStream.getBeginColumn();
Test 91: 
StringReader stringReader = new StringReader("0 ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.BeginToken();
javaCharStream.getBeginColumn();
Test 92: 
StringReader stringReader = new StringReader("%]VKHNCW#S]{$aS ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-5410), (-3736));
javaCharStream.readChar();
javaCharStream.getBeginLine();
Test 93: 
StringReader stringReader = new StringReader("0 ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 14, 14);
javaCharStream.BeginToken();
javaCharStream.getBeginLine();
Test 94: 
StringReader stringReader = new StringReader("g9+");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-1), (-1), 14);
javaCharStream.BeginToken();
javaCharStream.getColumn();
Test 95: 
StringReader stringReader = new StringReader("5KI^me@8d-6wFr$egP:");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1, 1);
javaCharStream.backup(0);
javaCharStream.UpdateLineColumn('t');
javaCharStream.getColumn();
Test 96: 
JavaCharStream javaCharStream = new JavaCharStream((Reader) null);
javaCharStream.backup(1);
javaCharStream.getColumn();
Test 97: 
StringReader stringReader = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2155, 2155);
javaCharStream.BeginToken();
javaCharStream.getEndColumn();
Test 98: 
StringReader stringReader = new StringReader("5KI^me@8d-6wFr$egP:");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1, 1);
javaCharStream.backup(0);
javaCharStream.getEndColumn();
Test 99: 
StringReader stringReader = new StringReader("rVx1>nWNaU^:L");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-1555), (-1), 54);
javaCharStream.readChar();
javaCharStream.getEndLine();
Test 100: 
StringReader stringReader = new StringReader("w#MIO+jRn)?vGB");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 3366, (-1), 54);
javaCharStream.readChar();
javaCharStream.getEndLine();
Test 101: 
StringReader stringReader = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2155, 2155);
javaCharStream.backup((-535));
javaCharStream.getEndLine();
Test 102: 
StringReader stringReader = new StringReader("%]VKHNCW#S]{$aS ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-887), 88);
javaCharStream.readChar();
javaCharStream.getLine();
Test 103: 
StringReader stringReader = new StringReader("0 ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.BeginToken();
javaCharStream.getLine();
Test 104: 
JavaCharStream javaCharStream = new JavaCharStream((Reader) null, (-7), 6);
javaCharStream.bufpos = (int) 't';
javaCharStream.getLine();
Test 105: 
PipedInputStream pipedInputStream = new PipedInputStream();
JavaCharStream javaCharStream = new JavaCharStream(pipedInputStream, 0, 0);
// Undeclared exception!
try { 
  javaCharStream.ExpandBuff(true);
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 106: 
StringReader stringReader = new StringReader("5FW*F");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-1077), 1907, 95);
javaCharStream.FillBuff();
Test 107: 
byte[] byteArray = new byte[19];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
javaCharStream.ReInit((InputStream) byteArrayInputStream, 65, 65);

Test 108: 
JavaCharStream javaCharStream = new JavaCharStream((Reader) null);

Test 109: 
StringReader stringReader = new StringReader("This is a sample string that will be read.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 0, 10);
((JavaCharStream) stringReader).getBeginColumn();

Test 110: 
PipedInputStream pipedInputStream = new PipedInputStream();
JavaCharStream javaCharStream = new JavaCharStream(pipedInputStream, 0, 0);
((JavaCharStream)0).ReInit((InputStream) pipedInputStream);

Test 111: 
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream((byte[]) 65, (-1), (byte)65);
int _int = 1;
int _int = 0;
int _int = 4815;
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, _int, _int, _int);
String string = "Hello";
StringReader stringReader = new StringReader(string);
int _int = 4815;
int _int = null;
((JavaCharStream) _int).ReInit((Reader) stringReader, _int, _int);
((JavaCharStream) _int).readChar();
((JavaCharStream) _int).getEndColumn();

Test 112: 
StringReader stringReader = new StringReader("Hello World");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-5410), (-3736));
((JavaCharStream) stringReader).getBeginLine();

Test 113: 
JavaCharStream.hexval('a');
JavaCharStream.hexval('\n');
char _char = ' ';
JavaCharStream.hexval(_char);
int _int = 100;
JavaCharStream.hexval((char) _int);

Test 114: 
JavaCharStream.hexval('1');

Test 115: 
JavaCharStream.hexval('a');

Test 116: 
JavaCharStream.hexval('A');

Test 117: 
JavaCharStream.hexval('A');
JavaCharStream.hexval('0');

Test 118: 

Test 119: 

Test 120: 
JavaCharStream.hexval('a');

Test 121: 
JavaCharStream.hexval(':');

Test 122: 
JavaCharStream.hexval('a');

Test 123: 
JavaCharStream.hexval('A');
JavaCharStream.hexval('B');
JavaCharStream.hexval('C');
JavaCharStream.hexval('D');
JavaCharStream.hexval('E');

Test 124: 
JavaCharStream.hexval('A');
JavaCharStream.hexval('B');
JavaCharStream.hexval('C');
JavaCharStream.hexval('D');
JavaCharStream.hexval('E');
JavaCharStream.hexval('F');
JavaCharStream.hexval('a');
JavaCharStream.hexval('b');
JavaCharStream.hexval('c');
JavaCharStream.hexval('d');
JavaCharStream.hexval('e');
JavaCharStream.hexval('f');

Test 125: 

Test 126: 
JavaCharStream.hexval('\u2049');

Test 127: 
JavaCharStream.hexval('@');
char _char = 'A';
JavaCharStream.hexval(_char);

Test 128: 
JavaCharStream.hexval('A');

Test 129: 
JavaCharStream.hexval('A');

Test 130: 
JavaCharStream.hexval('E');

Test 131: 
JavaCharStream.hexval((char) 14);

Test 132: 
JavaCharStream.hexval('A');
JavaCharStream.hexval('B');
JavaCharStream.hexval('C');

Test 133: 
JavaCharStream.hexval('A');
JavaCharStream.hexval('F');
JavaCharStream.hexval('g');
char _char = 'f';
JavaCharStream.hexval(_char);

Test 134: 

Test 135: 
JavaCharStream.hexval('\u0130');

Test 136: 
JavaCharStream.hexval('A');

Test 137: 
JavaCharStream.hexval('a');

Test 138: 

Test 139: 
JavaCharStream.hexval((char) "ABC");
String string = "1234567890";
JavaCharStream.hexval((char) string);

Test 140: 
JavaCharStream.hexval('0');

Test 141: 
JavaCharStream.hexval('A');
JavaCharStream.hexval('F');
JavaCharStream.hexval('q');
char _char = 'x';
JavaCharStream.hexval(_char);

Test 142: 
JavaCharStream.hexval('r');

Test 143: 
JavaCharStream.hexval('A');
JavaCharStream.hexval('B');
JavaCharStream.hexval('C');
JavaCharStream.hexval('D');
JavaCharStream.hexval('E');
JavaCharStream.hexval('F');

Test 144: 
JavaCharStream.hexval('1');

Test 145: 
JavaCharStream.hexval('1');

Test 146: 
JavaCharStream.hexval('A');
JavaCharStream.hexval('F');
JavaCharStream.hexval('0');
JavaCharStream.hexval('9');
JavaCharStream.hexval('a');
JavaCharStream.hexval('f');
JavaCharStream.hexval('z');
char _char = 'Z';
JavaCharStream.hexval(_char);

Test 147: 
JavaCharStream.hexval((char) 87);

Test 148: 
JavaCharStream.hexval('F');

Test 149: 
JavaCharStream.hexval('A');

Test 150: 
JavaCharStream.hexval('[');

Test 151: 
JavaCharStream.hexval('f');
JavaCharStream.hexval('a');
JavaCharStream.hexval('b');
JavaCharStream.hexval('t');
char _char = 'n';
JavaCharStream.hexval(_char);
char _char = 'v';
JavaCharStream.hexval(_char);
char _char = 'r';
JavaCharStream.hexval(_char);

Test 152: 
JavaCharStream.hexval('A');

Test 153: 
JavaCharStream.hexval('a');

Test 154: 
JavaCharStream.hexval('f');

Test 155: 
JavaCharStream.hexval('e');

Test 156: 
JavaCharStream.hexval((char) 13);

Test 157: 
JavaCharStream.hexval('a');

Test 158: 
JavaCharStream.hexval('a');
JavaCharStream.hexval('A');
JavaCharStream.hexval('0');
JavaCharStream.hexval('9');
JavaCharStream.hexval('!');
char _char = '#';
JavaCharStream.hexval(_char);
char _char = '.';
JavaCharStream.hexval(_char);
char _char = '_';
JavaCharStream.hexval(_char);

Test 159: 
JavaCharStream.hexval('a');

Test 160: 
JavaCharStream javaCharStream = new JavaCharStream((InputStream) 77, (-1718), (int) (byte)77);
int _int = 62;
javaCharStream.backup(_int);
javaCharStream.BeginToken();
javaCharStream.AdjustBuffSize();
javaCharStream.AdjustBuffSize();

Test 161: 
JavaCharStream javaCharStream = new JavaCharStream((Reader) 1, 1, 1, 1);

Test 162: 
StringReader stringReader = new StringReader("The quick brown fox jumps over the lazy dog.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1024, 1024);
((JavaCharStream) stringReader).AdjustBuffSize();

Test 163: 
StringReader stringReader = new StringReader("1 ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
((JavaCharStream) stringReader).BeginToken();

Test 164: 
byte[] byteArray = new byte[1];
byteArray[0] = (byte) 127;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
DataInputStream dataInputStream = new DataInputStream(byteArrayInputStream);
JavaCharStream javaCharStream = new JavaCharStream(dataInputStream);
dataInputStream.readChar();

Test 165: 
byte[] byteArray = new byte[2];
byteArray[0] = (byte) 128;
byteArray[1] = (byte) 256;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
DataInputStream dataInputStream = new DataInputStream(byteArrayInputStream);
JavaCharStream javaCharStream = new JavaCharStream(dataInputStream);
((JavaCharStream) byteArrayInputStream).readChar();
((JavaCharStream) byteArrayInputStream).readChar();

Test 166: 
StringReader stringReader = new StringReader("][");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 49, (-1));
((JavaCharStream) stringReader).Done();
int _int = 49;
int _int = 1;
byte _byte = null;
((JavaCharStream) stringReader).ReInit((Reader) stringReader, _int, _int, (int) _byte);

Test 167: 
PipedInputStream pipedInputStream = new PipedInputStream();
int _int = 14;
JavaCharStream javaCharStream = new JavaCharStream(pipedInputStream, 14, 13, 13);
StringReader stringReader = new StringReader("This is a test string");
((JavaCharStream)14).ReInit((Reader) stringReader, 13, 13, 47);
((JavaCharStream) _int).readChar();

Test 168: 
StringReader stringReader = new StringReader("The quick brown fox jumps over the lazy dog");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
((JavaCharStream) stringReader).BeginToken();
((JavaCharStream) stringReader).GetImage();

Test 169: 
StringReader stringReader = new StringReader("This is a longer test sentence that includes multiple words.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
((JavaCharStream) stringReader).GetSuffix(50);

Test 170: 
String string = "Hello, world!";
JavaCharStream javaCharStream = new JavaCharStream((Reader) "Hello, world!");
int _int = 1;
((JavaCharStream) string).backup(_int);
int _int = 1;
((JavaCharStream) string).GetSuffix(_int);

Test 171: 
StringReader stringReader = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2674, 2674);
((JavaCharStream) stringReader).backup(Integer.MIN_VALUE);
int _int = 2119;
int _int = Integer.MIN_VALUE;
((JavaCharStream) stringReader).adjustBeginLineColumn(_int, _int);

Test 172: 
StringReader stringReader = new StringReader("This is a test string for JavaCharStream with different lengths and\tspaces");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 30, (int) 9.2, 74);
int _int = 75;
((JavaCharStream) stringReader).backup(_int);
int _int = 2048;
int _int = 915;
((JavaCharStream) stringReader).adjustBeginLineColumn(_int, _int);

Test 173: 
JavaCharStream javaCharStream = new JavaCharStream((Reader) 1, (-2591), (-2591), 1);
byte[] byteArray = new byte[0];
int _int = 1933;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray, _int, (-316));

Test 174: 
byte[] byteArray = new byte[5];
byteArray[0] = (byte) 49;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
((JavaCharStream) byteArrayInputStream).BeginToken();

Test 175: 
JavaCharStream javaCharStream = new JavaCharStream((Reader) null);

Test 176: 
byte[] byteArray = new byte[2];
byteArray[1] = (byte) 92;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
DataInputStream dataInputStream = new DataInputStream(byteArrayInputStream);
JavaCharStream javaCharStream = new JavaCharStream(dataInputStream);
dataInputStream.readChar();
dataInputStream.readChar();

Test 177: 
int _int = 72;
JavaCharStream javaCharStream = new JavaCharStream((InputStream) 4096, 72, 72, (int) (byte)72);
String GetImage = ((JavaCharStream) _int).GetImage();
StringReader stringReader = new StringReader(GetImage);
int _int = 3;
int _int = 72;
int _int = 3;
((JavaCharStream) _int).ReInit((Reader) stringReader, _int, _int, _int);
int _int = 55;
int _int = 950;
int _int = 3;
((JavaCharStream) _int).ReInit((Reader) stringReader, _int, _int, _int);

Test 178: 
JavaCharStream javaCharStream = new JavaCharStream((Reader) "This is a test string.", 10, 0, (int) (byte)0);

Test 179: 
JavaCharStream javaCharStream = new JavaCharStream((Reader) 72, 15, 15);

Test 180: 
StringReader stringReader = new StringReader("This is a test of the emergency broadcast system. This is only a test, do not panic.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
((JavaCharStream) stringReader).ReadByte();

Test 181: 
StringReader stringReader = new StringReader("1 ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
((JavaCharStream) stringReader).ReadByte();

Test 182: 
JavaCharStream javaCharStream = new JavaCharStream((Reader) 8, 14, 14);

Test 183: 
StringReader stringReader = new StringReader("The quick brown fox jumps over the lazy dog.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
((JavaCharStream) stringReader).BeginToken();
((JavaCharStream) stringReader).getBeginColumn();

Test 184: 
StringReader stringReader = new StringReader("The quick brown fox jumps over the lazy dog.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 30, 14);
((JavaCharStream) stringReader).BeginToken();
((JavaCharStream) stringReader).getBeginLine();

Test 185: 
StringReader stringReader = new StringReader("this_is_a_test_string");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 14, (-1), 14);
((JavaCharStream) stringReader).BeginToken();
((JavaCharStream) stringReader).getColumn();

Test 186: 
StringReader stringReader = new StringReader("5KI^me@8d-6wFr$egP:");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1, 1);
((JavaCharStream) stringReader).backup(0);
char _char = 't';
((JavaCharStream) stringReader).UpdateLineColumn(_char);
((JavaCharStream) stringReader).getColumn();
String string = "The quick brown fox jumps over the lazy dog.";
StringReader stringReader = new StringReader(string);
int _int = 1;
int _int = 1;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int);
int _int = 0;
((JavaCharStream) stringReader).backup(_int);
char _char = 't';
((JavaCharStream) stringReader).UpdateLineColumn(_char);
((JavaCharStream) stringReader).getColumn();

Test 187: 
JavaCharStream javaCharStream = new JavaCharStream((Reader) null);

Test 188: 
StringReader stringReader = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2155, 2155);
((JavaCharStream) stringReader).BeginToken();
((JavaCharStream) stringReader).getEndColumn();

Test 189: 
StringReader stringReader = new StringReader("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*()_+-=[]{}|;':\",./<>?");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1, 1);
((JavaCharStream) stringReader).backup(0);
((JavaCharStream) stringReader).getEndColumn();

Test 190: 
StringReader stringReader = new StringReader("This is a sample string.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 0, 10, 25);
((JavaCharStream) stringReader).readChar();
((JavaCharStream) stringReader).getEndLine();

Test 191: 
StringReader stringReader = new StringReader("w#MIO+jRn)?vGB\r\t ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 3366, 54, 54);
((JavaCharStream) stringReader).readChar();
((JavaCharStream) stringReader).getEndLine();

Test 192: 
StringReader stringReader = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1234, 1234);
((JavaCharStream) stringReader).backup((int) (Integer) null);
((JavaCharStream) stringReader).getEndLine();

Test 193: 
StringReader stringReader = new StringReader("This is a test string that contains numbers, uppercase and lowercase letters, special characters, and spaces.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 88, 88);
((JavaCharStream) stringReader).readChar();
((JavaCharStream) stringReader).getLine();

Test 194: 
StringReader stringReader = new StringReader("Hello World");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
((JavaCharStream) stringReader).BeginToken();
((JavaCharStream) stringReader).getLine();

Test 195: 
PipedInputStream pipedInputStream = new PipedInputStream();
JavaCharStream javaCharStream = new JavaCharStream(pipedInputStream, 1024, 32);
((JavaCharStream)1024).ExpandBuff(true);

Test 196: 
StringReader stringReader = new StringReader("5FW*F");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1907, 95, 95);
((JavaCharStream) stringReader).FillBuff();


* Generated after the refinement and before minimization 197 tests with total length 574
* test suite isTestSuite: 197
Test 0: 
byte[] byteArray = new byte[19];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
javaCharStream.ReInit((InputStream) byteArrayInputStream, (int) (byte)65, (int) (byte)65);
Test 1: 
JavaCharStream javaCharStream = new JavaCharStream((Reader) null);
javaCharStream.ReInit((Reader) null);
Test 2: 
StringReader stringReader = new StringReader("%]VKHNCW#S]{$aS ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-1153), (-1));
javaCharStream.getBeginColumn();
Test 3: 
PipedInputStream pipedInputStream = new PipedInputStream();
JavaCharStream javaCharStream = new JavaCharStream(pipedInputStream, 0, 0);
javaCharStream.ReInit((InputStream) pipedInputStream);
Test 4: 
byte[] byteArray = new byte[4];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray, (-1), (byte)65);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, (byte)1, 0, 4815);
StringReader stringReader = new StringReader(" ]L}1p.qu=:W8d1iy");
javaCharStream.ReInit((Reader) stringReader, 4815, (-2221));
javaCharStream.readChar();
javaCharStream.getEndColumn();
Test 5: 
StringReader stringReader = new StringReader("%]VKHNCW#S]{$aS ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-5410), (-3736));
javaCharStream.getBeginLine();
Test 6: 
JavaCharStream.hexval('0');
Test 7: 
try { 
  JavaCharStream.hexval('X');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 8: 
JavaCharStream.hexval('1');
Test 9: 
JavaCharStream.hexval('2');
Test 10: 
JavaCharStream.hexval('3');
Test 11: 
JavaCharStream.hexval('4');
Test 12: 
JavaCharStream.hexval('5');
Test 13: 
JavaCharStream.hexval('6');
Test 14: 
JavaCharStream.hexval('7');
Test 15: 
JavaCharStream.hexval('8');
Test 16: 
JavaCharStream.hexval('9');
Test 17: 
try { 
  JavaCharStream.hexval(':');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 18: 
try { 
  JavaCharStream.hexval(';');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 19: 
try { 
  JavaCharStream.hexval('<');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 20: 
try { 
  JavaCharStream.hexval('=');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 21: 
try { 
  JavaCharStream.hexval('>');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 22: 
try { 
  JavaCharStream.hexval('?');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 23: 
try { 
  JavaCharStream.hexval('@');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 24: 
JavaCharStream.hexval('A');
Test 25: 
JavaCharStream.hexval('B');
Test 26: 
JavaCharStream.hexval('C');
Test 27: 
JavaCharStream.hexval('D');
Test 28: 
JavaCharStream.hexval('E');
Test 29: 
JavaCharStream.hexval('F');
Test 30: 
try { 
  JavaCharStream.hexval('G');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 31: 
try { 
  JavaCharStream.hexval('H');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 32: 
try { 
  JavaCharStream.hexval('I');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 33: 
try { 
  JavaCharStream.hexval('J');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 34: 
try { 
  JavaCharStream.hexval('K');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 35: 
try { 
  JavaCharStream.hexval('L');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 36: 
try { 
  JavaCharStream.hexval('M');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 37: 
try { 
  JavaCharStream.hexval('N');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 38: 
try { 
  JavaCharStream.hexval('O');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 39: 
try { 
  JavaCharStream.hexval('P');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 40: 
try { 
  JavaCharStream.hexval('Q');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 41: 
try { 
  JavaCharStream.hexval('R');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 42: 
try { 
  JavaCharStream.hexval('S');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 43: 
try { 
  JavaCharStream.hexval('T');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 44: 
try { 
  JavaCharStream.hexval('U');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 45: 
try { 
  JavaCharStream.hexval('V');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 46: 
try { 
  JavaCharStream.hexval('W');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 47: 
try { 
  JavaCharStream.hexval('Y');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 48: 
try { 
  JavaCharStream.hexval('Z');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 49: 
try { 
  JavaCharStream.hexval('[');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 50: 
try { 
  JavaCharStream.hexval('\\');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 51: 
try { 
  JavaCharStream.hexval(']');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 52: 
try { 
  JavaCharStream.hexval('^');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 53: 
try { 
  JavaCharStream.hexval('_');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 54: 
try { 
  JavaCharStream.hexval('`');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 55: 
JavaCharStream.hexval('a');
Test 56: 
JavaCharStream.hexval('b');
Test 57: 
JavaCharStream.hexval('c');
Test 58: 
JavaCharStream.hexval('d');
Test 59: 
JavaCharStream.hexval('e');
Test 60: 
JavaCharStream.hexval('f');
Test 61: 
try { 
  JavaCharStream.hexval('\"');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 62: 
PipedInputStream pipedInputStream = new PipedInputStream();
JavaCharStream javaCharStream = new JavaCharStream(pipedInputStream, (-1718), (byte)77);
javaCharStream.backup(62);
javaCharStream.BeginToken();
javaCharStream.AdjustBuffSize();
javaCharStream.AdjustBuffSize();
Test 63: 
PipedInputStream pipedInputStream = new PipedInputStream();
JavaCharStream javaCharStream = new JavaCharStream(pipedInputStream);
try { 
  javaCharStream.BeginToken();
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // Pipe not connected
   //
   verifyException("java.io.PipedInputStream", e);
}

Test 64: 
JavaCharStream javaCharStream = new JavaCharStream((Reader) null, 1, 1, 1);
javaCharStream.bufpos = 1;
javaCharStream.backup(1);
javaCharStream.BeginToken();
Test 65: 
StringReader stringReader = new StringReader("");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1439, 1439);
javaCharStream.bufsize = 1439;
javaCharStream.AdjustBuffSize();
Test 66: 
StringReader stringReader = new StringReader("0 ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.prevCharIsCR = true;
javaCharStream.BeginToken();
Test 67: 
byte[] byteArray = new byte[1];
byteArray[0] = (byte)10;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
DataInputStream dataInputStream = new DataInputStream(byteArrayInputStream);
JavaCharStream javaCharStream = new JavaCharStream(dataInputStream);
javaCharStream.prevCharIsCR = true;
javaCharStream.readChar();
Test 68: 
byte[] byteArray = new byte[5];
byteArray[1] = (byte)11;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
DataInputStream dataInputStream = new DataInputStream(byteArrayInputStream);
JavaCharStream javaCharStream = new JavaCharStream(dataInputStream);
javaCharStream.readChar();
javaCharStream.readChar();
Test 69: 
byte[] byteArray = new byte[1];
byteArray[0] = (byte)13;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
javaCharStream.BeginToken();
Test 70: 
byte[] byteArray = new byte[2];
byteArray[0] = (byte)92;
byteArray[1] = (byte)92;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
DataInputStream dataInputStream = new DataInputStream(byteArrayInputStream);
JavaCharStream javaCharStream = new JavaCharStream(dataInputStream);
javaCharStream.readChar();
javaCharStream.readChar();
Test 71: 
StringReader stringReader = new StringReader("][");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (byte)49, (-1));
javaCharStream.Done();
javaCharStream.ReInit((Reader) stringReader, (-1166), (int) (byte)49, (int) (byte)1);
Test 72: 
PipedInputStream pipedInputStream = new PipedInputStream();
JavaCharStream javaCharStream = new JavaCharStream(pipedInputStream, 14, (-2731), 13);
StringReader stringReader = new StringReader("0 ");
javaCharStream.ReInit((Reader) stringReader, 13, 13, 47);
javaCharStream.readChar();
Test 73: 
StringReader stringReader = new StringReader("5KI^me@8d-6wFr$egP:");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.BeginToken();
javaCharStream.GetImage();
Test 74: 
StringReader stringReader = new StringReader(".");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.GetSuffix(75);
Test 75: 
JavaCharStream javaCharStream = new JavaCharStream((Reader) null);
javaCharStream.backup(1);
javaCharStream.GetSuffix(1);
Test 76: 
StringReader stringReader = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2674, 2674);
javaCharStream.backup((-6862));
javaCharStream.adjustBeginLineColumn(2119, (-6862));
Test 77: 
StringReader stringReader = new StringReader("");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 65, 74, 74);
javaCharStream.backup(75);
javaCharStream.adjustBeginLineColumn(2048, 915);
Test 78: 
JavaCharStream javaCharStream = new JavaCharStream((Reader) null, (-2591), (-2591), 1);
byte[] byteArray = new byte[0];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray, 1933, (-316));
javaCharStream.ReInit((InputStream) byteArrayInputStream, (-1), 0, 537);
Test 79: 
byte[] byteArray = new byte[5];
byteArray[0] = (byte)10;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
DataInputStream dataInputStream = new DataInputStream(byteArrayInputStream);
JavaCharStream javaCharStream = new JavaCharStream(dataInputStream);
javaCharStream.readChar();
javaCharStream.readChar();
Test 80: 
byte[] byteArray = new byte[5];
byteArray[0] = (byte)9;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
javaCharStream.BeginToken();
Test 81: 
JavaCharStream javaCharStream = new JavaCharStream((Reader) null);
javaCharStream.backup(1);
javaCharStream.readChar();
// Undeclared exception!
try { 
  javaCharStream.readChar();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 82: 
byte[] byteArray = new byte[6];
byteArray[0] = (byte)92;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
DataInputStream dataInputStream = new DataInputStream(byteArrayInputStream);
JavaCharStream javaCharStream = new JavaCharStream(dataInputStream);
javaCharStream.readChar();
Test 83: 
byte[] byteArray = new byte[2];
byteArray[1] = (byte)92;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
DataInputStream dataInputStream = new DataInputStream(byteArrayInputStream);
JavaCharStream javaCharStream = new JavaCharStream(dataInputStream);
javaCharStream.readChar();
javaCharStream.readChar();
Test 84: 
Enumeration<InputStream> enumeration = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
doReturn(false).when(enumeration).hasMoreElements();
SequenceInputStream sequenceInputStream = new SequenceInputStream(enumeration);
JavaCharStream javaCharStream = new JavaCharStream(sequenceInputStream, 4096, (byte)72, (byte)72);
String GetImage = javaCharStream.GetImage();
StringReader stringReader = new StringReader(GetImage);
javaCharStream.ReInit((Reader) stringReader, 3, (int) (byte)72, 3);
javaCharStream.ReInit((Reader) stringReader, 55, 950, 3);
Test 85: 
JavaCharStream javaCharStream = new JavaCharStream((Reader) null, (-1), (byte)10, (byte)0);
javaCharStream.GetImage();
Test 86: 
StringReader stringReader = new StringReader("a4Y%yt29{j.v>fm6mM");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (byte)72, 15);
javaCharStream.GetSuffix((byte)0);
Test 87: 
StringReader stringReader = new StringReader("x}w8H1 8RPT");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.ReadByte();
Test 88: 
StringReader stringReader = new StringReader("0 ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.ReadByte();
Test 89: 
StringReader stringReader = new StringReader("\"SP+~}<.O%13X$&!2");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 8, 14);
javaCharStream.ReadByte();
Test 90: 
StringReader stringReader = new StringReader("%]VKHNCW#S]{$aS ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-1153), (-1));
javaCharStream.BeginToken();
javaCharStream.getBeginColumn();
Test 91: 
StringReader stringReader = new StringReader("0 ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.BeginToken();
javaCharStream.getBeginColumn();
Test 92: 
StringReader stringReader = new StringReader("%]VKHNCW#S]{$aS ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-5410), (-3736));
javaCharStream.readChar();
javaCharStream.getBeginLine();
Test 93: 
StringReader stringReader = new StringReader("0 ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 14, 14);
javaCharStream.BeginToken();
javaCharStream.getBeginLine();
Test 94: 
StringReader stringReader = new StringReader("g9+");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-1), (-1), 14);
javaCharStream.BeginToken();
javaCharStream.getColumn();
Test 95: 
StringReader stringReader = new StringReader("5KI^me@8d-6wFr$egP:");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1, 1);
javaCharStream.backup(0);
javaCharStream.UpdateLineColumn('t');
javaCharStream.getColumn();
Test 96: 
JavaCharStream javaCharStream = new JavaCharStream((Reader) null);
javaCharStream.backup(1);
javaCharStream.getColumn();
Test 97: 
StringReader stringReader = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2155, 2155);
javaCharStream.BeginToken();
javaCharStream.getEndColumn();
Test 98: 
StringReader stringReader = new StringReader("5KI^me@8d-6wFr$egP:");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1, 1);
javaCharStream.backup(0);
javaCharStream.getEndColumn();
Test 99: 
StringReader stringReader = new StringReader("rVx1>nWNaU^:L");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-1555), (-1), 54);
javaCharStream.readChar();
javaCharStream.getEndLine();
Test 100: 
StringReader stringReader = new StringReader("w#MIO+jRn)?vGB");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 3366, (-1), 54);
javaCharStream.readChar();
javaCharStream.getEndLine();
Test 101: 
StringReader stringReader = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2155, 2155);
javaCharStream.backup((-535));
javaCharStream.getEndLine();
Test 102: 
StringReader stringReader = new StringReader("%]VKHNCW#S]{$aS ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-887), 88);
javaCharStream.readChar();
javaCharStream.getLine();
Test 103: 
StringReader stringReader = new StringReader("0 ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.BeginToken();
javaCharStream.getLine();
Test 104: 
JavaCharStream javaCharStream = new JavaCharStream((Reader) null, (-7), 6);
javaCharStream.bufpos = (int) 't';
javaCharStream.getLine();
Test 105: 
PipedInputStream pipedInputStream = new PipedInputStream();
JavaCharStream javaCharStream = new JavaCharStream(pipedInputStream, 0, 0);
// Undeclared exception!
try { 
  javaCharStream.ExpandBuff(true);
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 106: 
StringReader stringReader = new StringReader("5FW*F");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-1077), 1907, 95);
javaCharStream.FillBuff();
Test 107: 
byte[] byteArray = new byte[19];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
javaCharStream.ReInit((InputStream) byteArrayInputStream, 65, 65);

Test 108: 
JavaCharStream javaCharStream = new JavaCharStream((Reader) null);

Test 109: 
StringReader stringReader = new StringReader("This is a sample string that will be read.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 0, 10);
((JavaCharStream) stringReader).getBeginColumn();

Test 110: 
PipedInputStream pipedInputStream = new PipedInputStream();
JavaCharStream javaCharStream = new JavaCharStream(pipedInputStream, 0, 0);
((JavaCharStream)0).ReInit((InputStream) pipedInputStream);

Test 111: 
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream((byte[]) 65, (-1), (byte)65);
int _int = 1;
int _int = 0;
int _int = 4815;
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, _int, _int, _int);
String string = "Hello";
StringReader stringReader = new StringReader(string);
int _int = 4815;
int _int = null;
((JavaCharStream) _int).ReInit((Reader) stringReader, _int, _int);
((JavaCharStream) _int).readChar();
((JavaCharStream) _int).getEndColumn();

Test 112: 
StringReader stringReader = new StringReader("Hello World");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-5410), (-3736));
((JavaCharStream) stringReader).getBeginLine();

Test 113: 
JavaCharStream.hexval('a');
JavaCharStream.hexval('\n');
char _char = ' ';
JavaCharStream.hexval(_char);
int _int = 100;
JavaCharStream.hexval((char) _int);

Test 114: 
JavaCharStream.hexval('1');

Test 115: 
JavaCharStream.hexval('a');

Test 116: 
JavaCharStream.hexval('A');

Test 117: 
JavaCharStream.hexval('A');
JavaCharStream.hexval('0');

Test 118: 

Test 119: 

Test 120: 
JavaCharStream.hexval('a');

Test 121: 
JavaCharStream.hexval(':');

Test 122: 
JavaCharStream.hexval('a');

Test 123: 
JavaCharStream.hexval('A');
JavaCharStream.hexval('B');
JavaCharStream.hexval('C');
JavaCharStream.hexval('D');
JavaCharStream.hexval('E');

Test 124: 
JavaCharStream.hexval('A');
JavaCharStream.hexval('B');
JavaCharStream.hexval('C');
JavaCharStream.hexval('D');
JavaCharStream.hexval('E');
JavaCharStream.hexval('F');
JavaCharStream.hexval('a');
JavaCharStream.hexval('b');
JavaCharStream.hexval('c');
JavaCharStream.hexval('d');
JavaCharStream.hexval('e');
JavaCharStream.hexval('f');

Test 125: 

Test 126: 
JavaCharStream.hexval('\u2049');

Test 127: 
JavaCharStream.hexval('@');
char _char = 'A';
JavaCharStream.hexval(_char);

Test 128: 
JavaCharStream.hexval('A');

Test 129: 
JavaCharStream.hexval('A');

Test 130: 
JavaCharStream.hexval('E');

Test 131: 
JavaCharStream.hexval((char) 14);

Test 132: 
JavaCharStream.hexval('A');
JavaCharStream.hexval('B');
JavaCharStream.hexval('C');

Test 133: 
JavaCharStream.hexval('A');
JavaCharStream.hexval('F');
JavaCharStream.hexval('g');
char _char = 'f';
JavaCharStream.hexval(_char);

Test 134: 

Test 135: 
JavaCharStream.hexval('\u0130');

Test 136: 
JavaCharStream.hexval('A');

Test 137: 
JavaCharStream.hexval('a');

Test 138: 

Test 139: 
JavaCharStream.hexval((char) "ABC");
String string = "1234567890";
JavaCharStream.hexval((char) string);

Test 140: 
JavaCharStream.hexval('0');

Test 141: 
JavaCharStream.hexval('A');
JavaCharStream.hexval('F');
JavaCharStream.hexval('q');
char _char = 'x';
JavaCharStream.hexval(_char);

Test 142: 
JavaCharStream.hexval('r');

Test 143: 
JavaCharStream.hexval('A');
JavaCharStream.hexval('B');
JavaCharStream.hexval('C');
JavaCharStream.hexval('D');
JavaCharStream.hexval('E');
JavaCharStream.hexval('F');

Test 144: 
JavaCharStream.hexval('1');

Test 145: 
JavaCharStream.hexval('1');

Test 146: 
JavaCharStream.hexval('A');
JavaCharStream.hexval('F');
JavaCharStream.hexval('0');
JavaCharStream.hexval('9');
JavaCharStream.hexval('a');
JavaCharStream.hexval('f');
JavaCharStream.hexval('z');
char _char = 'Z';
JavaCharStream.hexval(_char);

Test 147: 
JavaCharStream.hexval((char) 87);

Test 148: 
JavaCharStream.hexval('F');

Test 149: 
JavaCharStream.hexval('A');

Test 150: 
JavaCharStream.hexval('[');

Test 151: 
JavaCharStream.hexval('f');
JavaCharStream.hexval('a');
JavaCharStream.hexval('b');
JavaCharStream.hexval('t');
char _char = 'n';
JavaCharStream.hexval(_char);
char _char = 'v';
JavaCharStream.hexval(_char);
char _char = 'r';
JavaCharStream.hexval(_char);

Test 152: 
JavaCharStream.hexval('A');

Test 153: 
JavaCharStream.hexval('a');

Test 154: 
JavaCharStream.hexval('f');

Test 155: 
JavaCharStream.hexval('e');

Test 156: 
JavaCharStream.hexval((char) 13);

Test 157: 
JavaCharStream.hexval('a');

Test 158: 
JavaCharStream.hexval('a');
JavaCharStream.hexval('A');
JavaCharStream.hexval('0');
JavaCharStream.hexval('9');
JavaCharStream.hexval('!');
char _char = '#';
JavaCharStream.hexval(_char);
char _char = '.';
JavaCharStream.hexval(_char);
char _char = '_';
JavaCharStream.hexval(_char);

Test 159: 
JavaCharStream.hexval('a');

Test 160: 
JavaCharStream javaCharStream = new JavaCharStream((InputStream) 77, (-1718), (int) (byte)77);
int _int = 62;
javaCharStream.backup(_int);
javaCharStream.BeginToken();
javaCharStream.AdjustBuffSize();
javaCharStream.AdjustBuffSize();

Test 161: 
JavaCharStream javaCharStream = new JavaCharStream((Reader) 1, 1, 1, 1);

Test 162: 
StringReader stringReader = new StringReader("The quick brown fox jumps over the lazy dog.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1024, 1024);
((JavaCharStream) stringReader).AdjustBuffSize();

Test 163: 
StringReader stringReader = new StringReader("1 ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
((JavaCharStream) stringReader).BeginToken();

Test 164: 
byte[] byteArray = new byte[1];
byteArray[0] = (byte) 127;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
DataInputStream dataInputStream = new DataInputStream(byteArrayInputStream);
JavaCharStream javaCharStream = new JavaCharStream(dataInputStream);
dataInputStream.readChar();

Test 165: 
byte[] byteArray = new byte[2];
byteArray[0] = (byte) 128;
byteArray[1] = (byte) 256;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
DataInputStream dataInputStream = new DataInputStream(byteArrayInputStream);
JavaCharStream javaCharStream = new JavaCharStream(dataInputStream);
((JavaCharStream) byteArrayInputStream).readChar();
((JavaCharStream) byteArrayInputStream).readChar();

Test 166: 
StringReader stringReader = new StringReader("][");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 49, (-1));
((JavaCharStream) stringReader).Done();
int _int = 49;
int _int = 1;
byte _byte = null;
((JavaCharStream) stringReader).ReInit((Reader) stringReader, _int, _int, (int) _byte);

Test 167: 
PipedInputStream pipedInputStream = new PipedInputStream();
int _int = 14;
JavaCharStream javaCharStream = new JavaCharStream(pipedInputStream, 14, 13, 13);
StringReader stringReader = new StringReader("This is a test string");
((JavaCharStream)14).ReInit((Reader) stringReader, 13, 13, 47);
((JavaCharStream) _int).readChar();

Test 168: 
StringReader stringReader = new StringReader("The quick brown fox jumps over the lazy dog");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
((JavaCharStream) stringReader).BeginToken();
((JavaCharStream) stringReader).GetImage();

Test 169: 
StringReader stringReader = new StringReader("This is a longer test sentence that includes multiple words.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
((JavaCharStream) stringReader).GetSuffix(50);

Test 170: 
String string = "Hello, world!";
JavaCharStream javaCharStream = new JavaCharStream((Reader) "Hello, world!");
int _int = 1;
((JavaCharStream) string).backup(_int);
int _int = 1;
((JavaCharStream) string).GetSuffix(_int);

Test 171: 
StringReader stringReader = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2674, 2674);
((JavaCharStream) stringReader).backup(Integer.MIN_VALUE);
int _int = 2119;
int _int = Integer.MIN_VALUE;
((JavaCharStream) stringReader).adjustBeginLineColumn(_int, _int);

Test 172: 
StringReader stringReader = new StringReader("This is a test string for JavaCharStream with different lengths and\tspaces");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 30, (int) 9.2, 74);
int _int = 75;
((JavaCharStream) stringReader).backup(_int);
int _int = 2048;
int _int = 915;
((JavaCharStream) stringReader).adjustBeginLineColumn(_int, _int);

Test 173: 
JavaCharStream javaCharStream = new JavaCharStream((Reader) 1, (-2591), (-2591), 1);
byte[] byteArray = new byte[0];
int _int = 1933;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray, _int, (-316));

Test 174: 
byte[] byteArray = new byte[5];
byteArray[0] = (byte) 49;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
((JavaCharStream) byteArrayInputStream).BeginToken();

Test 175: 
JavaCharStream javaCharStream = new JavaCharStream((Reader) null);

Test 176: 
byte[] byteArray = new byte[2];
byteArray[1] = (byte) 92;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
DataInputStream dataInputStream = new DataInputStream(byteArrayInputStream);
JavaCharStream javaCharStream = new JavaCharStream(dataInputStream);
dataInputStream.readChar();
dataInputStream.readChar();

Test 177: 
int _int = 72;
JavaCharStream javaCharStream = new JavaCharStream((InputStream) 4096, 72, 72, (int) (byte)72);
String GetImage = ((JavaCharStream) _int).GetImage();
StringReader stringReader = new StringReader(GetImage);
int _int = 3;
int _int = 72;
int _int = 3;
((JavaCharStream) _int).ReInit((Reader) stringReader, _int, _int, _int);
int _int = 55;
int _int = 950;
int _int = 3;
((JavaCharStream) _int).ReInit((Reader) stringReader, _int, _int, _int);

Test 178: 
JavaCharStream javaCharStream = new JavaCharStream((Reader) "This is a test string.", 10, 0, (int) (byte)0);

Test 179: 
JavaCharStream javaCharStream = new JavaCharStream((Reader) 72, 15, 15);

Test 180: 
StringReader stringReader = new StringReader("This is a test of the emergency broadcast system. This is only a test, do not panic.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
((JavaCharStream) stringReader).ReadByte();

Test 181: 
StringReader stringReader = new StringReader("1 ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
((JavaCharStream) stringReader).ReadByte();

Test 182: 
JavaCharStream javaCharStream = new JavaCharStream((Reader) 8, 14, 14);

Test 183: 
StringReader stringReader = new StringReader("The quick brown fox jumps over the lazy dog.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
((JavaCharStream) stringReader).BeginToken();
((JavaCharStream) stringReader).getBeginColumn();

Test 184: 
StringReader stringReader = new StringReader("The quick brown fox jumps over the lazy dog.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 30, 14);
((JavaCharStream) stringReader).BeginToken();
((JavaCharStream) stringReader).getBeginLine();

Test 185: 
StringReader stringReader = new StringReader("this_is_a_test_string");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 14, (-1), 14);
((JavaCharStream) stringReader).BeginToken();
((JavaCharStream) stringReader).getColumn();

Test 186: 
StringReader stringReader = new StringReader("5KI^me@8d-6wFr$egP:");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1, 1);
((JavaCharStream) stringReader).backup(0);
char _char = 't';
((JavaCharStream) stringReader).UpdateLineColumn(_char);
((JavaCharStream) stringReader).getColumn();
String string = "The quick brown fox jumps over the lazy dog.";
StringReader stringReader = new StringReader(string);
int _int = 1;
int _int = 1;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int);
int _int = 0;
((JavaCharStream) stringReader).backup(_int);
char _char = 't';
((JavaCharStream) stringReader).UpdateLineColumn(_char);
((JavaCharStream) stringReader).getColumn();

Test 187: 
JavaCharStream javaCharStream = new JavaCharStream((Reader) null);

Test 188: 
StringReader stringReader = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2155, 2155);
((JavaCharStream) stringReader).BeginToken();
((JavaCharStream) stringReader).getEndColumn();

Test 189: 
StringReader stringReader = new StringReader("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*()_+-=[]{}|;':\",./<>?");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1, 1);
((JavaCharStream) stringReader).backup(0);
((JavaCharStream) stringReader).getEndColumn();

Test 190: 
StringReader stringReader = new StringReader("This is a sample string.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 0, 10, 25);
((JavaCharStream) stringReader).readChar();
((JavaCharStream) stringReader).getEndLine();

Test 191: 
StringReader stringReader = new StringReader("w#MIO+jRn)?vGB\r\t ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 3366, 54, 54);
((JavaCharStream) stringReader).readChar();
((JavaCharStream) stringReader).getEndLine();

Test 192: 
StringReader stringReader = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1234, 1234);
((JavaCharStream) stringReader).backup((int) (Integer) null);
((JavaCharStream) stringReader).getEndLine();

Test 193: 
StringReader stringReader = new StringReader("This is a test string that contains numbers, uppercase and lowercase letters, special characters, and spaces.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 88, 88);
((JavaCharStream) stringReader).readChar();
((JavaCharStream) stringReader).getLine();

Test 194: 
StringReader stringReader = new StringReader("Hello World");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
((JavaCharStream) stringReader).BeginToken();
((JavaCharStream) stringReader).getLine();

Test 195: 
PipedInputStream pipedInputStream = new PipedInputStream();
JavaCharStream javaCharStream = new JavaCharStream(pipedInputStream, 1024, 32);
((JavaCharStream)1024).ExpandBuff(true);

Test 196: 
StringReader stringReader = new StringReader("5FW*F");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1907, 95, 95);
((JavaCharStream) stringReader).FillBuff();


* Minimizing test suite
* test suite isTestSuite: 107
Test 0: 
PipedInputStream pipedInputStream = new PipedInputStream();
JavaCharStream javaCharStream = new JavaCharStream(pipedInputStream, 0, 0);
javaCharStream.ReInit((InputStream) pipedInputStream);
Test 1: 
byte[] byteArray = new byte[19];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
javaCharStream.ReInit((InputStream) byteArrayInputStream, 65, 65);
Test 2: 
JavaCharStream javaCharStream = new JavaCharStream((Reader) null);
javaCharStream.ReInit((Reader) null);
Test 3: 
StringReader stringReader = new StringReader("%]VKHNCW#S]{$aS ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-1153), (-1));
javaCharStream.getBeginColumn();
Test 4: 
byte[] byteArray = new byte[4];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray, (-1), (byte)65);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, (byte)1, 0, 4815);
StringReader stringReader = new StringReader(" ]L}1p.qu=:W8d1iy");
javaCharStream.ReInit((Reader) stringReader, 4815, (-2221));
javaCharStream.readChar();
javaCharStream.getEndColumn();
Test 5: 
StringReader stringReader = new StringReader("%]VKHNCW#S]{$aS ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-5410), (-3736));
javaCharStream.getBeginLine();
Test 6: 
StringReader stringReader = new StringReader("][");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (byte)49, (-1));
javaCharStream.Done();
javaCharStream.ReInit((Reader) stringReader, (-1166), (int) (byte)49, (int) (byte)1);
Test 7: 
JavaCharStream.hexval('0');
Test 8: 
JavaCharStream.hexval('A');
Test 9: 
JavaCharStream.hexval('1');
Test 10: 
JavaCharStream.hexval('2');
Test 11: 
JavaCharStream.hexval('3');
Test 12: 
JavaCharStream.hexval('4');
Test 13: 
JavaCharStream.hexval('5');
Test 14: 
JavaCharStream.hexval('6');
Test 15: 
JavaCharStream.hexval('7');
Test 16: 
JavaCharStream.hexval('8');
Test 17: 
JavaCharStream.hexval('9');
Test 18: 
try { 
  JavaCharStream.hexval(':');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 19: 
try { 
  JavaCharStream.hexval(';');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 20: 
try { 
  JavaCharStream.hexval('<');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 21: 
try { 
  JavaCharStream.hexval('=');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 22: 
try { 
  JavaCharStream.hexval('>');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 23: 
try { 
  JavaCharStream.hexval('?');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 24: 
try { 
  JavaCharStream.hexval('@');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 25: 
JavaCharStream.hexval('B');
Test 26: 
JavaCharStream.hexval('C');
Test 27: 
JavaCharStream.hexval('D');
Test 28: 
JavaCharStream.hexval('E');
Test 29: 
JavaCharStream.hexval('F');
Test 30: 
try { 
  JavaCharStream.hexval('G');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 31: 
try { 
  JavaCharStream.hexval('H');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 32: 
try { 
  JavaCharStream.hexval('I');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 33: 
try { 
  JavaCharStream.hexval('J');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 34: 
try { 
  JavaCharStream.hexval('K');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 35: 
try { 
  JavaCharStream.hexval('L');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 36: 
try { 
  JavaCharStream.hexval('M');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 37: 
try { 
  JavaCharStream.hexval('N');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 38: 
try { 
  JavaCharStream.hexval('O');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 39: 
try { 
  JavaCharStream.hexval('P');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 40: 
try { 
  JavaCharStream.hexval('Q');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 41: 
try { 
  JavaCharStream.hexval('R');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 42: 
try { 
  JavaCharStream.hexval('S');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 43: 
try { 
  JavaCharStream.hexval('T');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 44: 
try { 
  JavaCharStream.hexval('U');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 45: 
try { 
  JavaCharStream.hexval('V');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 46: 
try { 
  JavaCharStream.hexval('W');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 47: 
try { 
  JavaCharStream.hexval('X');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 48: 
try { 
  JavaCharStream.hexval('Y');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 49: 
try { 
  JavaCharStream.hexval('Z');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 50: 
try { 
  JavaCharStream.hexval('[');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 51: 
try { 
  JavaCharStream.hexval('\\');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 52: 
try { 
  JavaCharStream.hexval(']');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 53: 
try { 
  JavaCharStream.hexval('^');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 54: 
try { 
  JavaCharStream.hexval('_');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 55: 
try { 
  JavaCharStream.hexval('`');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 56: 
JavaCharStream.hexval('a');
Test 57: 
JavaCharStream.hexval('b');
Test 58: 
JavaCharStream.hexval('c');
Test 59: 
JavaCharStream.hexval('d');
Test 60: 
JavaCharStream.hexval('e');
Test 61: 
JavaCharStream.hexval('f');
Test 62: 
try { 
  JavaCharStream.hexval('z');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 63: 
JavaCharStream javaCharStream = new JavaCharStream((Reader) null);
javaCharStream.backup(1);
javaCharStream.readChar();
// Undeclared exception!
try { 
  javaCharStream.readChar();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 64: 
PipedInputStream pipedInputStream = new PipedInputStream();
JavaCharStream javaCharStream = new JavaCharStream(pipedInputStream, 0, 0);
// Undeclared exception!
try { 
  javaCharStream.ExpandBuff(true);
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 65: 
StringReader stringReader = new StringReader("0 ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.ReadByte();
Test 66: 
byte[] byteArray = new byte[2];
byteArray[1] = (byte)92;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
DataInputStream dataInputStream = new DataInputStream(byteArrayInputStream);
JavaCharStream javaCharStream = new JavaCharStream(dataInputStream);
javaCharStream.readChar();
javaCharStream.readChar();
Test 67: 
PipedInputStream pipedInputStream = new PipedInputStream();
JavaCharStream javaCharStream = new JavaCharStream(pipedInputStream);
try { 
  javaCharStream.BeginToken();
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // Pipe not connected
   //
   verifyException("java.io.PipedInputStream", e);
}

Test 68: 
JavaCharStream javaCharStream = new JavaCharStream((Reader) null, 1, 1, 1);
javaCharStream.bufpos = 1;
javaCharStream.backup(1);
javaCharStream.BeginToken();
Test 69: 
StringReader stringReader = new StringReader("");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1439, 1439);
javaCharStream.bufsize = 1439;
javaCharStream.AdjustBuffSize();
Test 70: 
PipedInputStream pipedInputStream = new PipedInputStream();
JavaCharStream javaCharStream = new JavaCharStream(pipedInputStream, (-1718), (byte)77);
javaCharStream.backup(62);
javaCharStream.BeginToken();
javaCharStream.AdjustBuffSize();
javaCharStream.AdjustBuffSize();
Test 71: 
byte[] byteArray = new byte[5];
byteArray[0] = (byte)10;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
DataInputStream dataInputStream = new DataInputStream(byteArrayInputStream);
JavaCharStream javaCharStream = new JavaCharStream(dataInputStream);
javaCharStream.readChar();
javaCharStream.readChar();
Test 72: 
StringReader stringReader = new StringReader("0 ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.prevCharIsCR = true;
javaCharStream.BeginToken();
Test 73: 
byte[] byteArray = new byte[1];
byteArray[0] = (byte)10;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
DataInputStream dataInputStream = new DataInputStream(byteArrayInputStream);
JavaCharStream javaCharStream = new JavaCharStream(dataInputStream);
javaCharStream.prevCharIsCR = true;
javaCharStream.readChar();
Test 74: 
byte[] byteArray = new byte[5];
byteArray[0] = (byte)9;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
javaCharStream.BeginToken();
Test 75: 
byte[] byteArray = new byte[5];
byteArray[1] = (byte)11;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
DataInputStream dataInputStream = new DataInputStream(byteArrayInputStream);
JavaCharStream javaCharStream = new JavaCharStream(dataInputStream);
javaCharStream.readChar();
javaCharStream.readChar();
Test 76: 
byte[] byteArray = new byte[1];
byteArray[0] = (byte)13;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
javaCharStream.BeginToken();
Test 77: 
byte[] byteArray = new byte[2];
byteArray[0] = (byte)92;
byteArray[1] = (byte)92;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
DataInputStream dataInputStream = new DataInputStream(byteArrayInputStream);
JavaCharStream javaCharStream = new JavaCharStream(dataInputStream);
javaCharStream.readChar();
javaCharStream.readChar();
Test 78: 
byte[] byteArray = new byte[6];
byteArray[0] = (byte)92;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
DataInputStream dataInputStream = new DataInputStream(byteArrayInputStream);
JavaCharStream javaCharStream = new JavaCharStream(dataInputStream);
javaCharStream.readChar();
Test 79: 
JavaCharStream javaCharStream = new JavaCharStream((Reader) null, (-2591), (-2591), 1);
byte[] byteArray = new byte[0];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray, 1933, (-316));
javaCharStream.ReInit((InputStream) byteArrayInputStream, (-1), 0, 537);
Test 80: 
JavaCharStream javaCharStream = new JavaCharStream((Reader) null, (-1), (byte)10, (byte)0);
javaCharStream.GetImage();
Test 81: 
StringReader stringReader = new StringReader("5KI^me@8d-6wFr$egP:");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.BeginToken();
javaCharStream.GetImage();
Test 82: 
StringReader stringReader = new StringReader(".");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.GetSuffix(75);
Test 83: 
JavaCharStream javaCharStream = new JavaCharStream((Reader) null);
javaCharStream.backup(1);
javaCharStream.GetSuffix(1);
Test 84: 
StringReader stringReader = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2674, 2674);
javaCharStream.backup((-6862));
javaCharStream.adjustBeginLineColumn(2119, (-6862));
Test 85: 
StringReader stringReader = new StringReader("");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 65, 74, 74);
javaCharStream.backup(75);
javaCharStream.adjustBeginLineColumn(2048, 915);
Test 86: 
PipedInputStream pipedInputStream = new PipedInputStream();
JavaCharStream javaCharStream = new JavaCharStream(pipedInputStream, 14, (-2731), 13);
StringReader stringReader = new StringReader("0 ");
javaCharStream.ReInit((Reader) stringReader, 13, 13, 47);
javaCharStream.readChar();
Test 87: 
Enumeration<InputStream> enumeration = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
doReturn(false).when(enumeration).hasMoreElements();
SequenceInputStream sequenceInputStream = new SequenceInputStream(enumeration);
JavaCharStream javaCharStream = new JavaCharStream(sequenceInputStream, 4096, (byte)72, (byte)72);
String GetImage = javaCharStream.GetImage();
StringReader stringReader = new StringReader(GetImage);
javaCharStream.ReInit((Reader) stringReader, 3, (int) (byte)72, 3);
javaCharStream.ReInit((Reader) stringReader, 55, 950, 3);
Test 88: 
StringReader stringReader = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2155, 2155);
javaCharStream.BeginToken();
javaCharStream.getEndColumn();
Test 89: 
StringReader stringReader = new StringReader("a4Y%yt29{j.v>fm6mM");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (byte)72, 15);
javaCharStream.GetSuffix((byte)0);
Test 90: 
StringReader stringReader = new StringReader("x}w8H1 8RPT");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.ReadByte();
Test 91: 
StringReader stringReader = new StringReader("\"SP+~}<.O%13X$&!2");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 8, 14);
javaCharStream.ReadByte();
Test 92: 
StringReader stringReader = new StringReader("%]VKHNCW#S]{$aS ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-1153), (-1));
javaCharStream.BeginToken();
javaCharStream.getBeginColumn();
Test 93: 
StringReader stringReader = new StringReader("0 ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.BeginToken();
javaCharStream.getBeginColumn();
Test 94: 
StringReader stringReader = new StringReader("%]VKHNCW#S]{$aS ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-5410), (-3736));
javaCharStream.readChar();
javaCharStream.getBeginLine();
Test 95: 
StringReader stringReader = new StringReader("0 ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 14, 14);
javaCharStream.BeginToken();
javaCharStream.getBeginLine();
Test 96: 
StringReader stringReader = new StringReader("g9+");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-1), (-1), 14);
javaCharStream.BeginToken();
javaCharStream.getColumn();
Test 97: 
StringReader stringReader = new StringReader("5KI^me@8d-6wFr$egP:");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1, 1);
javaCharStream.backup(0);
javaCharStream.UpdateLineColumn('t');
javaCharStream.getColumn();
Test 98: 
JavaCharStream javaCharStream = new JavaCharStream((Reader) null);
javaCharStream.backup(1);
javaCharStream.getColumn();
Test 99: 
StringReader stringReader = new StringReader("5KI^me@8d-6wFr$egP:");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1, 1);
javaCharStream.backup(0);
javaCharStream.getEndColumn();
Test 100: 
StringReader stringReader = new StringReader("rVx1>nWNaU^:L");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-1555), (-1), 54);
javaCharStream.readChar();
javaCharStream.getEndLine();
Test 101: 
StringReader stringReader = new StringReader("w#MIO+jRn)?vGB");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 3366, (-1), 54);
javaCharStream.readChar();
javaCharStream.getEndLine();
Test 102: 
StringReader stringReader = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2155, 2155);
javaCharStream.backup((-535));
javaCharStream.getEndLine();
Test 103: 
StringReader stringReader = new StringReader("%]VKHNCW#S]{$aS ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-887), 88);
javaCharStream.readChar();
javaCharStream.getLine();
Test 104: 
StringReader stringReader = new StringReader("0 ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.BeginToken();
javaCharStream.getLine();
Test 105: 
JavaCharStream javaCharStream = new JavaCharStream((Reader) null, (-7), 6);
javaCharStream.bufpos = (int) 't';
javaCharStream.getLine();
Test 106: 
StringReader stringReader = new StringReader("5FW*F");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-1077), 1907, 95);
javaCharStream.FillBuff();

* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 94%
* Total number of goals: 216
* Number of covered goals: 203
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 92%
* Total number of goals: 239
* Number of covered goals: 221
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 92%
* Total number of goals: 36
* Number of covered goals: 33
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 31
* Number of covered goals: 31
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 94%
* Total number of goals: 216
* Number of covered goals: 203
* Generated 107 tests with total length 272
* Resulting test suite's coverage: 95% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 30%
* Compiling and checking tests
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: PipedInputStream arg0 = new PipedInputStream();
JavaCharStream javaCharStream = new JavaCharStream(arg0, 0, 0);
javaCharStream.ReInit((InputStream) arg0);
assertEquals((-1), javaCharStream.bufpos);


** It was a parseable test case! 
refined test name is: testJavaCharStreamConstructor
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: JavaCharStream javaCharStream = new JavaCharStream((Reader) null);
javaCharStream.ReInit((Reader) null);
assertEquals((-1), javaCharStream.bufpos);


** It was a parseable test case! 
refined test name is: testReInitWithNullInput
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: StringReader arg0 = new StringReader("%]VKHNCW#S]{$aS ");
JavaCharStream javaCharStream = new JavaCharStream(arg0, (-1153), (-1));
javaCharStream.getBeginColumn();
assertEquals((-1), javaCharStream.bufpos);


** It was a parseable test case! 
refined test name is: testGetBeginColumnWhenInputIsEmptyStringReader
* Compiling Tests
refined test name is: testGetBeginColumnReturnsMinusOneForEmptyString
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: StringReader arg0 = new StringReader("%]VKHNCW#S]{$aS ");
JavaCharStream javaCharStream = new JavaCharStream(arg0, (-5410), (-3736));
javaCharStream.getBeginLine();
assertEquals((-1), javaCharStream.bufpos);


** It was a parseable test case! 
refined test name is: testGetBeginLine
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: StringReader arg0 = new StringReader("][");
JavaCharStream javaCharStream = new JavaCharStream(arg0, (byte)49, (-1));
javaCharStream.Done();
javaCharStream.ReInit((Reader) arg0, (-1166), (int) (byte)49, (int) (byte)1);
assertEquals(0, javaCharStream.getBeginColumn());


** It was a parseable test case! 
refined test name is: testReinitializeJavaCharStream
* Compiling Tests
refined test name is: testReInitializeStringReader
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: int hexval = JavaCharStream.hexval('0');
assertEquals(0, hexval);


** It was a parseable test case! 
refined test name is: testHexvalMethodReturnsZeroForSingleCharZero
* Compiling Tests
refined test name is: testHexvalOfZeroShouldReturnZero
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: int hexval = JavaCharStream.hexval('A');
assertEquals(10, hexval);


** It was a parseable test case! 
refined test name is: testHexValOfA
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: int hexval = JavaCharStream.hexval('1');
assertEquals(1, hexval);


** It was a parseable test case! 
refined test name is: testHexvalReturnsCorrectValue
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: int hexval = JavaCharStream.hexval('2');
assertEquals(2, hexval);


** It was a parseable test case! 
refined test name is: testHexValReturnsCorrectValueForGivenCharacter
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: int hexval = JavaCharStream.hexval('3');
assertEquals(3, hexval);


** It was a parseable test case! 
refined test name is: testHexValReturnsCorrectIntegerValue
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: int hexval = JavaCharStream.hexval('4');
assertEquals(4, hexval);


** It was a parseable test case! 
refined test name is: testHexValOfNumberFour
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: int hexval = JavaCharStream.hexval('5');
assertEquals(5, hexval);


** It was a parseable test case! 
refined test name is: testHexVal
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: int hexval = JavaCharStream.hexval('6');
assertEquals(6, hexval);


** It was a parseable test case! 
refined test name is: testHexVal
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: int hexval = JavaCharStream.hexval('7');
assertEquals(7, hexval);


** It was a parseable test case! 
refined test name is: testHexValSingleCharacterReturnsCorrectValue
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: int hexval = JavaCharStream.hexval('8');
assertEquals(8, hexval);


** It was a parseable test case! 
refined test name is: testHexValSingleDigitCharacterReturnsCorrectValue
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: int hexval = JavaCharStream.hexval('9');
assertEquals(9, hexval);


** It was a parseable test case! 
refined test name is: testHexValOfDigitNine
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: try { 
  JavaCharStream.hexval(':');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}


** It was a parseable test case! 
refined test name is: testHexvalThrowsIOException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: try { 
  JavaCharStream.hexval(';');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}


** It was a parseable test case! 
refined test name is: testInvalidCharacterInHexvalThrowsIOException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: try { 
  JavaCharStream.hexval('<');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}


** It was a parseable test case! 
refined test name is: testHexValInvalidCharacterExceptionMessage
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: try { 
  JavaCharStream.hexval('=');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}


** It was a parseable test case! 
refined test name is: testHexvalInvalidCharacterThrowsIOException
* Compiling Tests
refined test name is: testHexvalThrowsIOExceptionWithInvalidInput
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: try { 
  JavaCharStream.hexval('>');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}


** It was a parseable test case! 
refined test name is: testHexvalThrowsExceptionOnInvalidValue
* Compiling Tests
refined test name is: testIOExceptionThrownByHexvalMethod
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: try { 
  JavaCharStream.hexval('?');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}


** It was a parseable test case! 
refined test name is: testHexvalThrowsExceptionWhenInputIsInvalid
* Compiling Tests
refined test name is: testHexValInvalidInput
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: try { 
  JavaCharStream.hexval('@');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}


** It was a parseable test case! 
refined test name is: testHexvalIOExceptionNoMessageThrown
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: int hexval = JavaCharStream.hexval('B');
assertEquals(11, hexval);


** It was a parseable test case! 
refined test name is: testHexValMethodWithArgumentB
* Compiling Tests
refined test name is: testHexValOfB
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: int hexval = JavaCharStream.hexval('C');
assertEquals(12, hexval);


** It was a parseable test case! 
refined test name is: testHexValueForCharacterC
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: int hexval = JavaCharStream.hexval('D');
assertEquals(13, hexval);


** It was a parseable test case! 
refined test name is: testHexvalMethodReturnsCorrectValueForCharacterD
* Compiling Tests
refined test name is: testHexvalMethodReturnsCorrectValue
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: int hexval = JavaCharStream.hexval('E');
assertEquals(14, hexval);


** It was a parseable test case! 
refined test name is: testHexValueOfCharacterE
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: int hexval = JavaCharStream.hexval('F');
assertEquals(15, hexval);


** It was a parseable test case! 
refined test name is: testHexValOfFShouldBeFiveteen
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: try { 
  JavaCharStream.hexval('G');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}


** It was a parseable test case! 
refined test name is: testHexValThrowsIOExceptionWithNoMessage
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: try { 
  JavaCharStream.hexval('H');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}


** It was a parseable test case! 
refined test name is: testHexvalThrowsExceptionOnInvalidCharacter
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: try { 
  JavaCharStream.hexval('I');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}


** It was a parseable test case! 
refined test name is: testHexvalInvalidCharacter
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: try { 
  JavaCharStream.hexval('J');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}


** It was a parseable test case! 
refined test name is: testHexvalInvalidCharacter
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: try { 
  JavaCharStream.hexval('K');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}


** It was a parseable test case! 
refined test name is: testHexvalThrowsIOExceptionWhenNonHexCharInput
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: try { 
  JavaCharStream.hexval('L');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}


** It was a parseable test case! 
refined test name is: testIOExceptionThrownForInvalidCharacterHexval
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: try { 
  JavaCharStream.hexval('M');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}


** It was a parseable test case! 
refined test name is: testHexvalThrowsExceptionOnInvalidCharacter
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: try { 
  JavaCharStream.hexval('N');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}


** It was a parseable test case! 
refined test name is: testHexvalIllegalCharacterThrowsIOException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: try { 
  JavaCharStream.hexval('O');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}


** It was a parseable test case! 
refined test name is: testHexvalException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: try { 
  JavaCharStream.hexval('P');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}


** It was a parseable test case! 
refined test name is: testHexvalInvalidCharacter
* Compiling Tests
refined test name is: testHexvalInvalidCharacterThrowsIOException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: try { 
  JavaCharStream.hexval('Q');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}


** It was a parseable test case! 
refined test name is: testHexvalThrowsIOExceptionWithoutMessage
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: try { 
  JavaCharStream.hexval('R');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}


** It was a parseable test case! 
refined test name is: testHexvalWithInvalidCharacterThrowsIOException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: try { 
  JavaCharStream.hexval('S');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}


** It was a parseable test case! 
refined test name is: testHexvalThrowsIOExceptionForInvalidCharacter
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: try { 
  JavaCharStream.hexval('T');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}


** It was a parseable test case! 
refined test name is: testHexvalWithNoMessageThrowsIOException
* Compiling Tests
refined test name is: testExceptionThrownWhenNoMessageProvided
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: try { 
  JavaCharStream.hexval('U');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}


** It was a parseable test case! 
refined test name is: testInvalidCharacterInHexvalThrowsException
* Compiling Tests
refined test name is: testHexvalInvalidCharacter
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: try { 
  JavaCharStream.hexval('V');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}


** It was a parseable test case! 
refined test name is: testHexvalInvalidCharacter
* Compiling Tests
refined test name is: testThrowExceptionForInvalidHexadecimalCharacter
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: try { 
  JavaCharStream.hexval('W');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}


** It was a parseable test case! 
refined test name is: testStreamThrowsExceptionOnNonHexChar
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: try { 
  JavaCharStream.hexval('X');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}


** It was a parseable test case! 
refined test name is: testHexvalNonHexCharacter
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: try { 
  JavaCharStream.hexval('Y');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}


** It was a parseable test case! 
refined test name is: testHexvalThrowsExceptionForInvalidCharacter
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: try { 
  JavaCharStream.hexval('Z');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}


** It was a parseable test case! 
refined test name is: testNonHexCharacterThrowsIOException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: try { 
  JavaCharStream.hexval('[');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}


** It was a parseable test case! 
refined test name is: testHexvalWithInvalidCharacter
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: try { 
  JavaCharStream.hexval('\\');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}


** It was a parseable test case! 
refined test name is: testJavaCharStreamReadSingleBackslash
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: try { 
  JavaCharStream.hexval(']');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}


** It was a parseable test case! 
refined test name is: testHexvalWithInvalidCharacterThrowsIOException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: try { 
  JavaCharStream.hexval('^');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}


** It was a parseable test case! 
refined test name is: testHexvalThrowsIOExceptionUnexpectedCharacter
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: try { 
  JavaCharStream.hexval('_');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}


** It was a parseable test case! 
refined test name is: testHexvalWithUnderscoreThrowsException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: try { 
  JavaCharStream.hexval('`');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}


** It was a parseable test case! 
refined test name is: testHexvalThrowsIOExceptionForNonHexCharacter
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: int hexval = JavaCharStream.hexval('a');
assertEquals(10, hexval);


** It was a parseable test case! 
refined test name is: testHexValOfAReturns10
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: int hexval = JavaCharStream.hexval('b');
assertEquals(11, hexval);


** It was a parseable test case! 
refined test name is: testHexValOfB
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: int hexval = JavaCharStream.hexval('c');
assertEquals(12, hexval);


** It was a parseable test case! 
refined test name is: testHexValOfCCharReturnsCorrectValue
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: int hexval = JavaCharStream.hexval('d');
assertEquals(13, hexval);


** It was a parseable test case! 
refined test name is: testHexVal
* Compiling Tests
refined test name is: testHexValOfCharD
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: int hexval = JavaCharStream.hexval('e');
assertEquals(14, hexval);


** It was a parseable test case! 
refined test name is: testHexValueForLetterE
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: int hexval = JavaCharStream.hexval('f');
assertEquals(15, hexval);


** It was a parseable test case! 
refined test name is: testHexvalOfCharacterFF
* Compiling Tests
refined test name is: testHexvalReturnsCorrectValueForCharacterF
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: try { 
  JavaCharStream.hexval('z');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}


** It was a parseable test case! 
refined test name is: testHexvalthrowsIOExceptionForNonHexCharacter
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: JavaCharStream javaCharStream = new JavaCharStream((Reader) null);
javaCharStream.backup(1);
javaCharStream.readChar();
// Undeclared exception!
try { 
  javaCharStream.readChar();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}


** It was a parseable test case! 
refined test name is: testBackupthrowsNullPointerException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: PipedInputStream arg0 = new PipedInputStream();
JavaCharStream javaCharStream = new JavaCharStream(arg0, 0, 0);
// Undeclared exception!
try { 
  javaCharStream.ExpandBuff(true);
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}


** It was a parseable test case! 
refined test name is: testExpandBuffThrowsError
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: StringReader arg0 = new StringReader("0 ");
JavaCharStream javaCharStream = new JavaCharStream(arg0);
char ReadByte = javaCharStream.ReadByte();
assertEquals('0', ReadByte);
assertEquals((-1), javaCharStream.bufpos);


** It was a parseable test case! 
refined test name is: testReadByteFromStringReader
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: PipedInputStream arg0 = new PipedInputStream();
JavaCharStream javaCharStream = new JavaCharStream(arg0);
try { 
  javaCharStream.BeginToken();
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // Pipe not connected
   //
   verifyException("java.io.PipedInputStream", e);
}


** It was a parseable test case! 
refined test name is: testBeginTokenThrowsExceptionWhenPipeNotConnected
* Compiling Tests
refined test name is: testBeginTokenThrowsIOExceptionIfPipeNotConnected
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: JavaCharStream javaCharStream = new JavaCharStream((Reader) null, 1, 1, 1);
javaCharStream.bufpos = 1;
javaCharStream.backup(1);
char BeginToken = javaCharStream.BeginToken();
assertEquals('\u0000', BeginToken);


** It was a parseable test case! 
refined test name is: testBackup
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: StringReader arg0 = new StringReader("");
JavaCharStream javaCharStream = new JavaCharStream(arg0, 1439, 1439);
javaCharStream.bufsize = 1439;
javaCharStream.AdjustBuffSize();
assertEquals((-1), javaCharStream.bufpos);


** It was a parseable test case! 
refined test name is: testBufferSizeAdjustment
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: PipedInputStream arg0 = new PipedInputStream();
JavaCharStream javaCharStream = new JavaCharStream(arg0, (-1718), (byte)77);
javaCharStream.backup(62);
javaCharStream.BeginToken();
javaCharStream.AdjustBuffSize();
javaCharStream.AdjustBuffSize();
assertEquals(62, javaCharStream.bufpos);


** It was a parseable test case! 
refined test name is: testBackupAndBeginTokenMethodCalls
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: StringReader arg0 = new StringReader("0 ");
JavaCharStream javaCharStream = new JavaCharStream(arg0);
javaCharStream.prevCharIsCR = true;
char BeginToken = javaCharStream.BeginToken();
assertEquals(0, javaCharStream.bufpos);
assertEquals('0', BeginToken);


** It was a parseable test case! 
refined test name is: testBeginTokenWithPrevCharIsCRTrue
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: JavaCharStream javaCharStream = new JavaCharStream((Reader) null, (-1), (byte)10, (byte)0);
String GetImage = javaCharStream.GetImage();
assertEquals("", GetImage);


** It was a parseable test case! 
refined test name is: testGetImageNullInputStreamReturnsEmptyString
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: StringReader arg0 = new StringReader("5KI^me@8d-6wFr$egP:");
JavaCharStream javaCharStream = new JavaCharStream(arg0);
javaCharStream.BeginToken();
javaCharStream.GetImage();
assertEquals(0, javaCharStream.bufpos);


** It was a parseable test case! 
refined test name is: testJavaCharStreamConstructorWithStringReader
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: StringReader arg0 = new StringReader(".");
JavaCharStream javaCharStream = new JavaCharStream(arg0);
char[] GetSuffix = javaCharStream.GetSuffix(75);
assertEquals((-1), javaCharStream.bufpos);
assertEquals(75, GetSuffix.length);


** It was a parseable test case! 
refined test name is: testJavaCharStreamInitialization
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: JavaCharStream javaCharStream = new JavaCharStream((Reader) null);
javaCharStream.backup(1);
javaCharStream.GetSuffix(1);
assertEquals(4094, javaCharStream.bufpos);


** It was a parseable test case! 
refined test name is: testBackupMethodSetsPositionToNMinusOne
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: StringReader arg0 = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
JavaCharStream javaCharStream = new JavaCharStream(arg0, 2674, 2674);
javaCharStream.backup((-6862));
javaCharStream.adjustBeginLineColumn(2119, (-6862));
assertEquals(6861, javaCharStream.bufpos);


** It was a parseable test case! 
refined test name is: testBackupMethod
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: StringReader arg0 = new StringReader("");
JavaCharStream javaCharStream = new JavaCharStream(arg0, 65, 74, 74);
javaCharStream.backup(75);
javaCharStream.adjustBeginLineColumn(2048, 915);
assertEquals((-2), javaCharStream.bufpos);


** It was a parseable test case! 
refined test name is: testBackupAndAdjustBeginLineColumn
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: StringReader arg0 = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
JavaCharStream javaCharStream = new JavaCharStream(arg0, 2155, 2155);
javaCharStream.BeginToken();
int endColumn = javaCharStream.getEndColumn();
assertEquals(2155, javaCharStream.getBeginLine());
assertEquals(2155, endColumn);


** It was a parseable test case! 
refined test name is: testBeginTokenWithBeginLineAndBeginColumnSet
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: StringReader arg0 = new StringReader("a4Y%yt29{j.v>fm6mM");
JavaCharStream javaCharStream = new JavaCharStream(arg0, (byte)72, 15);
assertEquals((-1), javaCharStream.bufpos);

char[] GetSuffix = javaCharStream.GetSuffix((byte)0);
assertEquals(0, GetSuffix.length);


** It was a parseable test case! 
refined test name is: testGetSuffixReturnsEmptyArrayWhenInputIsNull
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: StringReader arg0 = new StringReader("x}w8H1 8RPT");
JavaCharStream javaCharStream = new JavaCharStream(arg0);
char ReadByte = javaCharStream.ReadByte();
assertEquals('x', ReadByte);
assertEquals((-1), javaCharStream.bufpos);


** It was a parseable test case! 
refined test name is: testReadByteWithValidInputString
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: StringReader arg0 = new StringReader("\"SP+~}<.O%13X$&!2");
JavaCharStream javaCharStream = new JavaCharStream(arg0, 8, 14);
char ReadByte = javaCharStream.ReadByte();
assertEquals('\"', ReadByte);


** It was a parseable test case! 
refined test name is: testStringReaderReadByteMethod
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: StringReader arg0 = new StringReader("%]VKHNCW#S]{$aS ");
JavaCharStream javaCharStream = new JavaCharStream(arg0, (-1153), (-1));
javaCharStream.BeginToken();
int beginColumn = javaCharStream.getBeginColumn();
assertEquals(0, javaCharStream.bufpos);
assertEquals((-1), beginColumn);


** It was a parseable test case! 
refined test name is: testInvalidPositionsConstructor
* Compiling Tests
refined test name is: testConstructorWithInvalidPositions
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: StringReader arg0 = new StringReader("0 ");
JavaCharStream javaCharStream = new JavaCharStream(arg0);
javaCharStream.BeginToken();
int beginColumn = javaCharStream.getBeginColumn();
assertEquals(0, javaCharStream.bufpos);
assertEquals(1, beginColumn);


** It was a parseable test case! 
refined test name is: testBufferPositionAndBeginColumn
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: StringReader arg0 = new StringReader("%]VKHNCW#S]{$aS ");
JavaCharStream javaCharStream = new JavaCharStream(arg0, (-5410), (-3736));
javaCharStream.readChar();
int beginLine = javaCharStream.getBeginLine();
assertEquals(0, javaCharStream.bufpos);
assertEquals((-5410), beginLine);


** It was a parseable test case! 
refined test name is: testReadCharFromStringReader
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: StringReader arg0 = new StringReader("0 ");
JavaCharStream javaCharStream = new JavaCharStream(arg0, 14, 14);
javaCharStream.BeginToken();
int beginLine = javaCharStream.getBeginLine();
assertEquals(0, javaCharStream.bufpos);
assertEquals(14, beginLine);


** It was a parseable test case! 
refined test name is: testBeginTokenWhitespaceCharacter
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: StringReader arg0 = new StringReader("g9+");
JavaCharStream javaCharStream = new JavaCharStream(arg0, (-1), (-1), 14);
javaCharStream.BeginToken();
int column = javaCharStream.getColumn();
assertEquals((-1), javaCharStream.getBeginLine());
assertEquals((-1), column);


** It was a parseable test case! 
refined test name is: testNextToken
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: StringReader arg0 = new StringReader("5KI^me@8d-6wFr$egP:");
JavaCharStream javaCharStream = new JavaCharStream(arg0, 1, 1);
javaCharStream.backup(0);
javaCharStream.UpdateLineColumn('t');
int column = javaCharStream.getColumn();
assertEquals(4095, javaCharStream.bufpos);
assertEquals(1, column);


** It was a parseable test case! 
refined test name is: testBackupUpdateLineColumn
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: JavaCharStream javaCharStream = new JavaCharStream((Reader) null);
javaCharStream.backup(1);
javaCharStream.getColumn();
assertEquals(4094, javaCharStream.bufpos);


** It was a parseable test case! 
refined test name is: testBackupStreamByOneCharacter
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: StringReader arg0 = new StringReader("5KI^me@8d-6wFr$egP:");
JavaCharStream javaCharStream = new JavaCharStream(arg0, 1, 1);
javaCharStream.backup(0);
javaCharStream.getEndColumn();
assertEquals(4095, javaCharStream.bufpos);


** It was a parseable test case! 
refined test name is: testBackupToEndOfStreamWithSpecialChars
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: StringReader arg0 = new StringReader("rVx1>nWNaU^:L");
JavaCharStream javaCharStream = new JavaCharStream(arg0, (-1555), (-1), 54);
javaCharStream.readChar();
int endLine = javaCharStream.getEndLine();
assertEquals(0, javaCharStream.bufpos);
assertEquals((-1555), endLine);


** It was a parseable test case! 
refined test name is: testReadCharValidInputSetsBufposAndEndLine
* Compiling Tests
refined test name is: testReadCharWithValidInputString
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: StringReader arg0 = new StringReader("w#MIO+jRn)?vGB");
JavaCharStream javaCharStream = new JavaCharStream(arg0, 3366, (-1), 54);
javaCharStream.readChar();
int endLine = javaCharStream.getEndLine();
assertEquals(0, javaCharStream.bufpos);
assertEquals(3366, endLine);


** It was a parseable test case! 
refined test name is: testGetEndLine
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: StringReader arg0 = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
JavaCharStream javaCharStream = new JavaCharStream(arg0, 2155, 2155);
javaCharStream.backup((-535));
javaCharStream.getEndLine();
assertEquals(534, javaCharStream.bufpos);


** It was a parseable test case! 
refined test name is: testBackupWithNegativeArgument
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: StringReader arg0 = new StringReader("%]VKHNCW#S]{$aS ");
JavaCharStream javaCharStream = new JavaCharStream(arg0, (-887), 88);
javaCharStream.readChar();
int line = javaCharStream.getLine();
assertEquals(0, javaCharStream.bufpos);
assertEquals((-887), line);


** It was a parseable test case! 
refined test name is: testReadCharCorrectCharacter
* Compiling Tests
refined test name is: testReadFirstCharacterFromStringReader
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: StringReader arg0 = new StringReader("0 ");
JavaCharStream javaCharStream = new JavaCharStream(arg0);
javaCharStream.BeginToken();
int line = javaCharStream.getLine();
assertEquals(0, javaCharStream.bufpos);
assertEquals(1, line);


** It was a parseable test case! 
refined test name is: testJavaCharStreamInitialization
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: JavaCharStream javaCharStream = new JavaCharStream((Reader) null, (-7), 6);
javaCharStream.bufpos = (int) 't';
int line = javaCharStream.getLine();
assertEquals(0, line);


** It was a parseable test case! 
refined test name is: testGetLineAtCharacterT
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: StringReader arg0 = new StringReader("5FW*F");
JavaCharStream javaCharStream = new JavaCharStream(arg0, (-1077), 1907, 95);
javaCharStream.FillBuff();
assertFalse(JavaCharStream.staticFlag);


** It was a parseable test case! 
refined test name is: testFillBuffNotFullBufferSetsStaticFlagToFalse
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 18:23:38.056 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 18:23:38.081 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
[MASTER] 18:23:38.157 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:23:38.158 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
[MASTER] 18:23:38.216 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 18:23:38.216 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
[MASTER] 18:23:38.283 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:23:38.284 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
[MASTER] 18:23:38.343 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:23:38.343 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
[MASTER] 18:23:38.426 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 18:23:38.427 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
[MASTER] 18:23:38.490 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 18:23:38.491 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
[MASTER] 18:23:38.584 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 18:23:38.587 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
[MASTER] 18:23:38.659 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 18:23:38.659 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
[MASTER] 18:23:38.729 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 18:23:38.730 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 18:23:38.795 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:23:38.798 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
[MASTER] 18:23:38.873 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
[MASTER] 18:23:38.873 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
* Compiling Tests
[MASTER] 18:23:38.955 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:23:38.956 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 18:23:39.026 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:23:39.027 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 18:23:39.096 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:23:39.097 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 18:23:39.185 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:23:39.186 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 18:23:39.319 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:23:39.320 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 18:23:39.394 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:23:39.397 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 18:23:39.467 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:23:39.468 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:23:39.555 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:23:39.560 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
[MASTER] 18:23:39.626 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:23:39.626 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:23:39.707 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:23:39.708 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 18:23:39.797 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:23:39.798 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:23:39.868 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:23:39.869 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 18:23:39.941 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:23:39.942 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:23:40.242 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:23:40.243 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 18:23:40.373 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:23:40.374 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 18:23:40.411 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:23:40.412 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 18:23:40.457 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:23:40.459 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 18:23:40.496 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:23:40.497 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 18:23:40.529 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:23:40.530 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 18:23:40.655 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:23:40.668 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 18:23:40.794 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:23:40.796 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 18:23:40.939 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:23:40.940 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 18:23:41.051 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:23:41.052 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 18:23:41.107 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
Going to execute: handleTestsThatAreUnstable
[MASTER] 18:23:41.108 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
[MASTER] 18:23:41.147 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:23:41.147 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:23:41.198 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:23:41.199 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 18:23:41.240 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:23:41.241 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 18:23:41.284 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:23:41.287 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 18:23:41.325 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:23:41.325 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:23:41.366 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:23:41.366 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:23:41.416 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:23:41.417 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:23:41.465 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:23:41.465 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
Going to execute: handleTestsThatAreUnstable
[MASTER] 18:23:41.517 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:23:41.518 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
* Compiling Tests
[MASTER] 18:23:41.583 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:23:41.583 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 18:23:41.625 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:23:41.625 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 18:23:41.677 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:23:41.678 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 18:23:41.722 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:23:41.723 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 18:23:41.806 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:23:41.807 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 18:23:41.852 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
[MASTER] 18:23:41.852 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
* Compiling Tests
[MASTER] 18:23:41.905 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:23:41.906 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 18:23:41.950 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:23:41.950 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
Going to execute: handleTestsThatAreUnstable
[MASTER] 18:23:41.994 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:23:41.995 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
* Compiling Tests
Going to execute: handleTestsThatAreUnstable
[MASTER] 18:23:42.042 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:23:42.043 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
* Compiling Tests
[MASTER] 18:23:42.103 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:23:42.103 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 18:23:42.158 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:23:42.159 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:23:42.208 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:23:42.208 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 18:23:42.257 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:23:42.258 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:23:42.298 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:23:42.298 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 18:23:42.344 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:23:42.345 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 18:23:42.381 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:23:42.382 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 18:23:42.415 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:23:42.415 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 18:23:42.456 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:23:42.457 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:23:42.507 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:23:42.507 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
Going to execute: handleTestsThatAreUnstable
[MASTER] 18:23:42.550 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:23:42.550 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
* Compiling Tests
[MASTER] 18:23:42.601 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:23:42.609 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 18:23:42.655 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:23:42.656 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 18:23:42.704 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:23:42.705 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
Going to execute: handleTestsThatAreUnstable
[MASTER] 18:23:42.751 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:23:42.751 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
* Compiling Tests
[MASTER] 18:23:42.805 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:23:42.805 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 18:23:42.853 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:23:42.854 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 18:23:42.909 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:23:42.911 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 18:23:42.959 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:23:42.959 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 18:23:43.028 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:23:43.029 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 18:23:43.078 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:23:43.079 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 18:23:43.128 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:23:43.129 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 18:23:43.178 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:23:43.179 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 18:23:43.228 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:23:43.228 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:23:43.275 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:23:43.276 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 18:23:43.324 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:23:43.325 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 18:23:43.377 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:23:43.377 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 18:23:43.430 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:23:43.431 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
Going to execute: handleTestsThatAreUnstable
[MASTER] 18:23:43.486 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:23:43.487 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
* Compiling Tests
[MASTER] 18:23:43.541 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:23:43.542 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 18:23:43.593 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:23:43.594 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 18:23:43.649 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:23:43.649 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:23:43.692 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:23:43.693 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 18:23:43.746 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:23:43.747 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 18:23:43.793 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:23:43.794 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
[MASTER] 18:23:43.836 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:23:43.837 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
* Compiling Tests
[MASTER] 18:23:43.890 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:23:43.891 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 18:23:43.956 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:23:43.958 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 18:23:44.026 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:23:44.027 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 2 called: 0 to improve: false
** Write a test suite: 4 called: 1 to improve: false
** Write a test suite: 5 called: 2 to improve: false
** Write a test suite: 19 called: 3 to improve: false
** Write a test suite: 20 called: 4 to improve: false
** Write a test suite: 21 called: 5 to improve: false
** Write a test suite: 23 called: 6 to improve: false
** Write a test suite: 25 called: 7 to improve: false
** Write a test suite: 37 called: 8 to improve: false
** Write a test suite: 41 called: 9 to improve: false
** Write a test suite: 42 called: 10 to improve: false
** Write a test suite: 43 called: 11 to improve: false
** Write a test suite: 57 called: 12 to improve: false
** Write a test suite: 59 called: 13 to improve: false
** Write a test suite: 64 called: 14 to improve: false
** Write a test suite: 79 called: 15 to improve: false
** Write a test suite: 87 called: 16 to improve: false
** Write a test suite: 90 called: 17 to improve: false
[MASTER] 18:23:45.819 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:23:45.820 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 3 called: 0 to improve: false
** Write a test suite: 6 called: 1 to improve: false
** Write a test suite: 14 called: 2 to improve: false
** Write a test suite: 29 called: 3 to improve: false
** Write a test suite: 34 called: 4 to improve: false
** Write a test suite: 36 called: 5 to improve: false
** Write a test suite: 50 called: 6 to improve: false
** Write a test suite: 51 called: 7 to improve: false
** Write a test suite: 52 called: 8 to improve: false
** Write a test suite: 56 called: 9 to improve: false
** Write a test suite: 68 called: 10 to improve: false
** Write a test suite: 70 called: 11 to improve: false
** Write a test suite: 72 called: 12 to improve: false
** Write a test suite: 73 called: 13 to improve: false
** Write a test suite: 74 called: 14 to improve: false
** Write a test suite: 88 called: 15 to improve: false
** Write a test suite: 89 called: 16 to improve: false
** Write a test suite: 91 called: 17 to improve: false
[MASTER] 18:23:48.464 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:23:48.465 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
[MASTER] 18:23:51.465 [logback-1] WARN  TimeController - Already entered in phase: INLINING. This will mess up the timing calculations.
* test suite isTestSuite: 107
Test 0: 
byte[] byteArray = new byte[19];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
javaCharStream.ReInit((InputStream) byteArrayInputStream, (int) (byte)65, (int) (byte)65);
Test 1: 
JavaCharStream javaCharStream = new JavaCharStream((Reader) null);
javaCharStream.ReInit((Reader) null);
Test 2: 
StringReader stringReader = new StringReader("%]VKHNCW#S]{$aS ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-1153), (-1));
javaCharStream.getBeginColumn();
Test 3: 
PipedInputStream pipedInputStream = new PipedInputStream();
JavaCharStream javaCharStream = new JavaCharStream(pipedInputStream, 0, 0);
javaCharStream.ReInit((InputStream) pipedInputStream);
Test 4: 
byte[] byteArray = new byte[4];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray, (-1), (byte)65);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, (byte)1, 0, 4815);
StringReader stringReader = new StringReader(" ]L}1p.qu=:W8d1iy");
javaCharStream.ReInit((Reader) stringReader, 4815, (-2221));
javaCharStream.readChar();
javaCharStream.getEndColumn();
Test 5: 
StringReader stringReader = new StringReader("%]VKHNCW#S]{$aS ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-5410), (-3736));
javaCharStream.getBeginLine();
Test 6: 
JavaCharStream.hexval('0');
Test 7: 
try { 
  JavaCharStream.hexval('X');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 8: 
JavaCharStream.hexval('1');
Test 9: 
JavaCharStream.hexval('2');
Test 10: 
JavaCharStream.hexval('3');
Test 11: 
JavaCharStream.hexval('4');
Test 12: 
JavaCharStream.hexval('5');
Test 13: 
JavaCharStream.hexval('6');
Test 14: 
JavaCharStream.hexval('7');
Test 15: 
JavaCharStream.hexval('8');
Test 16: 
JavaCharStream.hexval('9');
Test 17: 
try { 
  JavaCharStream.hexval(':');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 18: 
try { 
  JavaCharStream.hexval(';');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 19: 
try { 
  JavaCharStream.hexval('<');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 20: 
try { 
  JavaCharStream.hexval('=');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 21: 
try { 
  JavaCharStream.hexval('>');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 22: 
try { 
  JavaCharStream.hexval('?');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 23: 
try { 
  JavaCharStream.hexval('@');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 24: 
JavaCharStream.hexval('A');
Test 25: 
JavaCharStream.hexval('B');
Test 26: 
JavaCharStream.hexval('C');
Test 27: 
JavaCharStream.hexval('D');
Test 28: 
JavaCharStream.hexval('E');
Test 29: 
JavaCharStream.hexval('F');
Test 30: 
try { 
  JavaCharStream.hexval('G');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 31: 
try { 
  JavaCharStream.hexval('H');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 32: 
try { 
  JavaCharStream.hexval('I');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 33: 
try { 
  JavaCharStream.hexval('J');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 34: 
try { 
  JavaCharStream.hexval('K');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 35: 
try { 
  JavaCharStream.hexval('L');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 36: 
try { 
  JavaCharStream.hexval('M');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 37: 
try { 
  JavaCharStream.hexval('N');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 38: 
try { 
  JavaCharStream.hexval('O');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 39: 
try { 
  JavaCharStream.hexval('P');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 40: 
try { 
  JavaCharStream.hexval('Q');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 41: 
try { 
  JavaCharStream.hexval('R');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 42: 
try { 
  JavaCharStream.hexval('S');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 43: 
try { 
  JavaCharStream.hexval('T');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 44: 
try { 
  JavaCharStream.hexval('U');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 45: 
try { 
  JavaCharStream.hexval('V');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 46: 
try { 
  JavaCharStream.hexval('W');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 47: 
try { 
  JavaCharStream.hexval('Y');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 48: 
try { 
  JavaCharStream.hexval('Z');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 49: 
try { 
  JavaCharStream.hexval('[');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 50: 
try { 
  JavaCharStream.hexval('\\');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 51: 
try { 
  JavaCharStream.hexval(']');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 52: 
try { 
  JavaCharStream.hexval('^');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 53: 
try { 
  JavaCharStream.hexval('_');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 54: 
try { 
  JavaCharStream.hexval('`');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 55: 
JavaCharStream.hexval('a');
Test 56: 
JavaCharStream.hexval('b');
Test 57: 
JavaCharStream.hexval('c');
Test 58: 
JavaCharStream.hexval('d');
Test 59: 
JavaCharStream.hexval('e');
Test 60: 
JavaCharStream.hexval('f');
Test 61: 
try { 
  JavaCharStream.hexval('\"');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 62: 
PipedInputStream pipedInputStream = new PipedInputStream();
JavaCharStream javaCharStream = new JavaCharStream(pipedInputStream, (-1718), (byte)77);
javaCharStream.backup(62);
javaCharStream.BeginToken();
javaCharStream.AdjustBuffSize();
javaCharStream.AdjustBuffSize();
Test 63: 
PipedInputStream pipedInputStream = new PipedInputStream();
JavaCharStream javaCharStream = new JavaCharStream(pipedInputStream);
try { 
  javaCharStream.BeginToken();
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // Pipe not connected
   //
   verifyException("java.io.PipedInputStream", e);
}

Test 64: 
JavaCharStream javaCharStream = new JavaCharStream((Reader) null, 1, 1, 1);
javaCharStream.bufpos = 1;
javaCharStream.backup(1);
javaCharStream.BeginToken();
Test 65: 
StringReader stringReader = new StringReader("");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1439, 1439);
javaCharStream.bufsize = 1439;
javaCharStream.AdjustBuffSize();
Test 66: 
StringReader stringReader = new StringReader("0 ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.prevCharIsCR = true;
javaCharStream.BeginToken();
Test 67: 
byte[] byteArray = new byte[1];
byteArray[0] = (byte)10;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
DataInputStream dataInputStream = new DataInputStream(byteArrayInputStream);
JavaCharStream javaCharStream = new JavaCharStream(dataInputStream);
javaCharStream.prevCharIsCR = true;
javaCharStream.readChar();
Test 68: 
byte[] byteArray = new byte[5];
byteArray[1] = (byte)11;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
DataInputStream dataInputStream = new DataInputStream(byteArrayInputStream);
JavaCharStream javaCharStream = new JavaCharStream(dataInputStream);
javaCharStream.readChar();
javaCharStream.readChar();
Test 69: 
byte[] byteArray = new byte[1];
byteArray[0] = (byte)13;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
javaCharStream.BeginToken();
Test 70: 
byte[] byteArray = new byte[2];
byteArray[0] = (byte)92;
byteArray[1] = (byte)92;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
DataInputStream dataInputStream = new DataInputStream(byteArrayInputStream);
JavaCharStream javaCharStream = new JavaCharStream(dataInputStream);
javaCharStream.readChar();
javaCharStream.readChar();
Test 71: 
StringReader stringReader = new StringReader("][");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (byte)49, (-1));
javaCharStream.Done();
javaCharStream.ReInit((Reader) stringReader, (-1166), (int) (byte)49, (int) (byte)1);
Test 72: 
PipedInputStream pipedInputStream = new PipedInputStream();
JavaCharStream javaCharStream = new JavaCharStream(pipedInputStream, 14, (-2731), 13);
StringReader stringReader = new StringReader("0 ");
javaCharStream.ReInit((Reader) stringReader, 13, 13, 47);
javaCharStream.readChar();
Test 73: 
StringReader stringReader = new StringReader("5KI^me@8d-6wFr$egP:");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.BeginToken();
javaCharStream.GetImage();
Test 74: 
StringReader stringReader = new StringReader(".");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.GetSuffix(75);
Test 75: 
JavaCharStream javaCharStream = new JavaCharStream((Reader) null);
javaCharStream.backup(1);
javaCharStream.GetSuffix(1);
Test 76: 
StringReader stringReader = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2674, 2674);
javaCharStream.backup((-6862));
javaCharStream.adjustBeginLineColumn(2119, (-6862));
Test 77: 
StringReader stringReader = new StringReader("");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 65, 74, 74);
javaCharStream.backup(75);
javaCharStream.adjustBeginLineColumn(2048, 915);
Test 78: 
JavaCharStream javaCharStream = new JavaCharStream((Reader) null, (-2591), (-2591), 1);
byte[] byteArray = new byte[0];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray, 1933, (-316));
javaCharStream.ReInit((InputStream) byteArrayInputStream, (-1), 0, 537);
Test 79: 
byte[] byteArray = new byte[5];
byteArray[0] = (byte)10;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
DataInputStream dataInputStream = new DataInputStream(byteArrayInputStream);
JavaCharStream javaCharStream = new JavaCharStream(dataInputStream);
javaCharStream.readChar();
javaCharStream.readChar();
Test 80: 
byte[] byteArray = new byte[5];
byteArray[0] = (byte)9;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
javaCharStream.BeginToken();
Test 81: 
JavaCharStream javaCharStream = new JavaCharStream((Reader) null);
javaCharStream.backup(1);
javaCharStream.readChar();
// Undeclared exception!
try { 
  javaCharStream.readChar();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 82: 
byte[] byteArray = new byte[6];
byteArray[0] = (byte)92;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
DataInputStream dataInputStream = new DataInputStream(byteArrayInputStream);
JavaCharStream javaCharStream = new JavaCharStream(dataInputStream);
javaCharStream.readChar();
Test 83: 
byte[] byteArray = new byte[2];
byteArray[1] = (byte)92;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
DataInputStream dataInputStream = new DataInputStream(byteArrayInputStream);
JavaCharStream javaCharStream = new JavaCharStream(dataInputStream);
javaCharStream.readChar();
javaCharStream.readChar();
Test 84: 
Enumeration<InputStream> enumeration = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
doReturn(false).when(enumeration).hasMoreElements();
SequenceInputStream sequenceInputStream = new SequenceInputStream(enumeration);
JavaCharStream javaCharStream = new JavaCharStream(sequenceInputStream, 4096, (byte)72, (byte)72);
String GetImage = javaCharStream.GetImage();
StringReader stringReader = new StringReader(GetImage);
javaCharStream.ReInit((Reader) stringReader, 3, (int) (byte)72, 3);
javaCharStream.ReInit((Reader) stringReader, 55, 950, 3);
Test 85: 
JavaCharStream javaCharStream = new JavaCharStream((Reader) null, (-1), (byte)10, (byte)0);
javaCharStream.GetImage();
Test 86: 
StringReader stringReader = new StringReader("a4Y%yt29{j.v>fm6mM");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (byte)72, 15);
javaCharStream.GetSuffix((byte)0);
Test 87: 
StringReader stringReader = new StringReader("x}w8H1 8RPT");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.ReadByte();
Test 88: 
StringReader stringReader = new StringReader("0 ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.ReadByte();
Test 89: 
StringReader stringReader = new StringReader("\"SP+~}<.O%13X$&!2");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 8, 14);
javaCharStream.ReadByte();
Test 90: 
StringReader stringReader = new StringReader("%]VKHNCW#S]{$aS ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-1153), (-1));
javaCharStream.BeginToken();
javaCharStream.getBeginColumn();
Test 91: 
StringReader stringReader = new StringReader("0 ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.BeginToken();
javaCharStream.getBeginColumn();
Test 92: 
StringReader stringReader = new StringReader("%]VKHNCW#S]{$aS ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-5410), (-3736));
javaCharStream.readChar();
javaCharStream.getBeginLine();
Test 93: 
StringReader stringReader = new StringReader("0 ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 14, 14);
javaCharStream.BeginToken();
javaCharStream.getBeginLine();
Test 94: 
StringReader stringReader = new StringReader("g9+");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-1), (-1), 14);
javaCharStream.BeginToken();
javaCharStream.getColumn();
Test 95: 
StringReader stringReader = new StringReader("5KI^me@8d-6wFr$egP:");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1, 1);
javaCharStream.backup(0);
javaCharStream.UpdateLineColumn('t');
javaCharStream.getColumn();
Test 96: 
JavaCharStream javaCharStream = new JavaCharStream((Reader) null);
javaCharStream.backup(1);
javaCharStream.getColumn();
Test 97: 
StringReader stringReader = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2155, 2155);
javaCharStream.BeginToken();
javaCharStream.getEndColumn();
Test 98: 
StringReader stringReader = new StringReader("5KI^me@8d-6wFr$egP:");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1, 1);
javaCharStream.backup(0);
javaCharStream.getEndColumn();
Test 99: 
StringReader stringReader = new StringReader("rVx1>nWNaU^:L");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-1555), (-1), 54);
javaCharStream.readChar();
javaCharStream.getEndLine();
Test 100: 
StringReader stringReader = new StringReader("w#MIO+jRn)?vGB");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 3366, (-1), 54);
javaCharStream.readChar();
javaCharStream.getEndLine();
Test 101: 
StringReader stringReader = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2155, 2155);
javaCharStream.backup((-535));
javaCharStream.getEndLine();
Test 102: 
StringReader stringReader = new StringReader("%]VKHNCW#S]{$aS ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-887), 88);
javaCharStream.readChar();
javaCharStream.getLine();
Test 103: 
StringReader stringReader = new StringReader("0 ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.BeginToken();
javaCharStream.getLine();
Test 104: 
JavaCharStream javaCharStream = new JavaCharStream((Reader) null, (-7), 6);
javaCharStream.bufpos = (int) 't';
javaCharStream.getLine();
Test 105: 
PipedInputStream pipedInputStream = new PipedInputStream();
JavaCharStream javaCharStream = new JavaCharStream(pipedInputStream, 0, 0);
// Undeclared exception!
try { 
  javaCharStream.ExpandBuff(true);
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 106: 
StringReader stringReader = new StringReader("5FW*F");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-1077), 1907, 95);
javaCharStream.FillBuff();

* Minimizing test suite
[MASTER] 18:24:03.762 [logback-1] WARN  TimeController - Already entered in phase: MINIMIZATION. This will mess up the timing calculations.
* test suite isTestSuite: 107
Test 0: 
PipedInputStream pipedInputStream = new PipedInputStream();
JavaCharStream javaCharStream = new JavaCharStream(pipedInputStream);
try { 
  javaCharStream.BeginToken();
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // Pipe not connected
   //
   verifyException("java.io.PipedInputStream", e);
}

Test 1: 
byte[] byteArray = new byte[19];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
javaCharStream.ReInit((InputStream) byteArrayInputStream, (int) (byte)65, (int) (byte)65);
Test 2: 
JavaCharStream javaCharStream = new JavaCharStream((Reader) null);
javaCharStream.ReInit((Reader) null);
Test 3: 
StringReader stringReader = new StringReader("%]VKHNCW#S]{$aS ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-1153), (-1));
javaCharStream.getBeginColumn();
Test 4: 
PipedInputStream pipedInputStream = new PipedInputStream();
JavaCharStream javaCharStream = new JavaCharStream(pipedInputStream, 0, 0);
javaCharStream.ReInit((InputStream) pipedInputStream);
Test 5: 
byte[] byteArray = new byte[4];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray, (-1), (byte)65);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, (byte)1, 0, 4815);
StringReader stringReader = new StringReader(" ]L}1p.qu=:W8d1iy");
javaCharStream.ReInit((Reader) stringReader, 4815, (-2221));
javaCharStream.readChar();
javaCharStream.getEndColumn();
Test 6: 
StringReader stringReader = new StringReader("%]VKHNCW#S]{$aS ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-5410), (-3736));
javaCharStream.getBeginLine();
Test 7: 
StringReader stringReader = new StringReader("][");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (byte)49, (-1));
javaCharStream.Done();
javaCharStream.ReInit((Reader) stringReader, (-1166), (int) (byte)49, (int) (byte)1);
Test 8: 
JavaCharStream.hexval('0');
Test 9: 
JavaCharStream.hexval('1');
Test 10: 
JavaCharStream.hexval('2');
Test 11: 
JavaCharStream.hexval('3');
Test 12: 
JavaCharStream.hexval('4');
Test 13: 
JavaCharStream.hexval('5');
Test 14: 
JavaCharStream.hexval('6');
Test 15: 
JavaCharStream.hexval('7');
Test 16: 
JavaCharStream.hexval('8');
Test 17: 
JavaCharStream.hexval('9');
Test 18: 
try { 
  JavaCharStream.hexval(':');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 19: 
try { 
  JavaCharStream.hexval(';');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 20: 
try { 
  JavaCharStream.hexval('<');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 21: 
try { 
  JavaCharStream.hexval('=');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 22: 
try { 
  JavaCharStream.hexval('>');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 23: 
try { 
  JavaCharStream.hexval('?');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 24: 
try { 
  JavaCharStream.hexval('@');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 25: 
JavaCharStream.hexval('A');
Test 26: 
JavaCharStream.hexval('B');
Test 27: 
JavaCharStream.hexval('C');
Test 28: 
JavaCharStream.hexval('D');
Test 29: 
JavaCharStream.hexval('E');
Test 30: 
JavaCharStream.hexval('F');
Test 31: 
try { 
  JavaCharStream.hexval('G');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 32: 
try { 
  JavaCharStream.hexval('H');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 33: 
try { 
  JavaCharStream.hexval('I');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 34: 
try { 
  JavaCharStream.hexval('J');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 35: 
try { 
  JavaCharStream.hexval('K');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 36: 
try { 
  JavaCharStream.hexval('L');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 37: 
try { 
  JavaCharStream.hexval('M');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 38: 
try { 
  JavaCharStream.hexval('N');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 39: 
try { 
  JavaCharStream.hexval('O');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 40: 
try { 
  JavaCharStream.hexval('P');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 41: 
try { 
  JavaCharStream.hexval('Q');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 42: 
try { 
  JavaCharStream.hexval('R');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 43: 
try { 
  JavaCharStream.hexval('S');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 44: 
try { 
  JavaCharStream.hexval('T');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 45: 
try { 
  JavaCharStream.hexval('U');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 46: 
try { 
  JavaCharStream.hexval('V');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 47: 
try { 
  JavaCharStream.hexval('W');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 48: 
try { 
  JavaCharStream.hexval('X');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 49: 
try { 
  JavaCharStream.hexval('Y');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 50: 
try { 
  JavaCharStream.hexval('Z');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 51: 
try { 
  JavaCharStream.hexval('[');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 52: 
try { 
  JavaCharStream.hexval('\\');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 53: 
try { 
  JavaCharStream.hexval(']');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 54: 
try { 
  JavaCharStream.hexval('^');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 55: 
try { 
  JavaCharStream.hexval('_');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 56: 
try { 
  JavaCharStream.hexval('`');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 57: 
JavaCharStream.hexval('a');
Test 58: 
JavaCharStream.hexval('b');
Test 59: 
JavaCharStream.hexval('c');
Test 60: 
JavaCharStream.hexval('d');
Test 61: 
JavaCharStream.hexval('e');
Test 62: 
JavaCharStream.hexval('f');
Test 63: 
try { 
  JavaCharStream.hexval('\"');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 64: 
JavaCharStream javaCharStream = new JavaCharStream((Reader) null);
javaCharStream.backup(1);
javaCharStream.readChar();
// Undeclared exception!
try { 
  javaCharStream.readChar();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 65: 
PipedInputStream pipedInputStream = new PipedInputStream();
JavaCharStream javaCharStream = new JavaCharStream(pipedInputStream, 0, 0);
// Undeclared exception!
try { 
  javaCharStream.ExpandBuff(true);
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 66: 
StringReader stringReader = new StringReader("0 ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.ReadByte();
Test 67: 
byte[] byteArray = new byte[2];
byteArray[1] = (byte)92;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
DataInputStream dataInputStream = new DataInputStream(byteArrayInputStream);
JavaCharStream javaCharStream = new JavaCharStream(dataInputStream);
javaCharStream.readChar();
javaCharStream.readChar();
Test 68: 
JavaCharStream javaCharStream = new JavaCharStream((Reader) null, 1, 1, 1);
javaCharStream.bufpos = 1;
javaCharStream.backup(1);
javaCharStream.BeginToken();
Test 69: 
StringReader stringReader = new StringReader("");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1439, 1439);
javaCharStream.bufsize = 1439;
javaCharStream.AdjustBuffSize();
Test 70: 
PipedInputStream pipedInputStream = new PipedInputStream();
JavaCharStream javaCharStream = new JavaCharStream(pipedInputStream, (-1718), (byte)77);
javaCharStream.backup(62);
javaCharStream.BeginToken();
javaCharStream.AdjustBuffSize();
javaCharStream.AdjustBuffSize();
Test 71: 
byte[] byteArray = new byte[5];
byteArray[0] = (byte)10;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
DataInputStream dataInputStream = new DataInputStream(byteArrayInputStream);
JavaCharStream javaCharStream = new JavaCharStream(dataInputStream);
javaCharStream.readChar();
javaCharStream.readChar();
Test 72: 
StringReader stringReader = new StringReader("0 ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.prevCharIsCR = true;
javaCharStream.BeginToken();
Test 73: 
byte[] byteArray = new byte[1];
byteArray[0] = (byte)10;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
DataInputStream dataInputStream = new DataInputStream(byteArrayInputStream);
JavaCharStream javaCharStream = new JavaCharStream(dataInputStream);
javaCharStream.prevCharIsCR = true;
javaCharStream.readChar();
Test 74: 
byte[] byteArray = new byte[5];
byteArray[0] = (byte)9;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
javaCharStream.BeginToken();
Test 75: 
byte[] byteArray = new byte[5];
byteArray[1] = (byte)11;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
DataInputStream dataInputStream = new DataInputStream(byteArrayInputStream);
JavaCharStream javaCharStream = new JavaCharStream(dataInputStream);
javaCharStream.readChar();
javaCharStream.readChar();
Test 76: 
byte[] byteArray = new byte[1];
byteArray[0] = (byte)13;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
javaCharStream.BeginToken();
Test 77: 
byte[] byteArray = new byte[2];
byteArray[0] = (byte)92;
byteArray[1] = (byte)92;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
DataInputStream dataInputStream = new DataInputStream(byteArrayInputStream);
JavaCharStream javaCharStream = new JavaCharStream(dataInputStream);
javaCharStream.readChar();
javaCharStream.readChar();
Test 78: 
byte[] byteArray = new byte[6];
byteArray[0] = (byte)92;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
DataInputStream dataInputStream = new DataInputStream(byteArrayInputStream);
JavaCharStream javaCharStream = new JavaCharStream(dataInputStream);
javaCharStream.readChar();
Test 79: 
JavaCharStream javaCharStream = new JavaCharStream((Reader) null, (-2591), (-2591), 1);
byte[] byteArray = new byte[0];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray, 1933, (-316));
javaCharStream.ReInit((InputStream) byteArrayInputStream, (-1), 0, 537);
Test 80: 
JavaCharStream javaCharStream = new JavaCharStream((Reader) null, (-1), (byte)10, (byte)0);
javaCharStream.GetImage();
Test 81: 
StringReader stringReader = new StringReader("5KI^me@8d-6wFr$egP:");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.BeginToken();
javaCharStream.GetImage();
Test 82: 
StringReader stringReader = new StringReader(".");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.GetSuffix(75);
Test 83: 
JavaCharStream javaCharStream = new JavaCharStream((Reader) null);
javaCharStream.backup(1);
javaCharStream.GetSuffix(1);
Test 84: 
StringReader stringReader = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2674, 2674);
javaCharStream.backup((-6862));
javaCharStream.adjustBeginLineColumn(2119, (-6862));
Test 85: 
StringReader stringReader = new StringReader("");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 65, 74, 74);
javaCharStream.backup(75);
javaCharStream.adjustBeginLineColumn(2048, 915);
Test 86: 
PipedInputStream pipedInputStream = new PipedInputStream();
JavaCharStream javaCharStream = new JavaCharStream(pipedInputStream, 14, (-2731), 13);
StringReader stringReader = new StringReader("0 ");
javaCharStream.ReInit((Reader) stringReader, 13, 13, 47);
javaCharStream.readChar();
Test 87: 
Enumeration<InputStream> enumeration = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
doReturn(false).when(enumeration).hasMoreElements();
SequenceInputStream sequenceInputStream = new SequenceInputStream(enumeration);
JavaCharStream javaCharStream = new JavaCharStream(sequenceInputStream, 4096, (byte)72, (byte)72);
String GetImage = javaCharStream.GetImage();
StringReader stringReader = new StringReader(GetImage);
javaCharStream.ReInit((Reader) stringReader, 3, (int) (byte)72, 3);
javaCharStream.ReInit((Reader) stringReader, 55, 950, 3);
Test 88: 
StringReader stringReader = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2155, 2155);
javaCharStream.BeginToken();
javaCharStream.getEndColumn();
Test 89: 
StringReader stringReader = new StringReader("a4Y%yt29{j.v>fm6mM");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (byte)72, 15);
javaCharStream.GetSuffix((byte)0);
Test 90: 
StringReader stringReader = new StringReader("x}w8H1 8RPT");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.ReadByte();
Test 91: 
StringReader stringReader = new StringReader("\"SP+~}<.O%13X$&!2");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 8, 14);
javaCharStream.ReadByte();
Test 92: 
StringReader stringReader = new StringReader("%]VKHNCW#S]{$aS ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-1153), (-1));
javaCharStream.BeginToken();
javaCharStream.getBeginColumn();
Test 93: 
StringReader stringReader = new StringReader("0 ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.BeginToken();
javaCharStream.getBeginColumn();
Test 94: 
StringReader stringReader = new StringReader("%]VKHNCW#S]{$aS ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-5410), (-3736));
javaCharStream.readChar();
javaCharStream.getBeginLine();
Test 95: 
StringReader stringReader = new StringReader("0 ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 14, 14);
javaCharStream.BeginToken();
javaCharStream.getBeginLine();
Test 96: 
StringReader stringReader = new StringReader("g9+");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-1), (-1), 14);
javaCharStream.BeginToken();
javaCharStream.getColumn();
Test 97: 
StringReader stringReader = new StringReader("5KI^me@8d-6wFr$egP:");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1, 1);
javaCharStream.backup(0);
javaCharStream.UpdateLineColumn('t');
javaCharStream.getColumn();
Test 98: 
JavaCharStream javaCharStream = new JavaCharStream((Reader) null);
javaCharStream.backup(1);
javaCharStream.getColumn();
Test 99: 
StringReader stringReader = new StringReader("5KI^me@8d-6wFr$egP:");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1, 1);
javaCharStream.backup(0);
javaCharStream.getEndColumn();
Test 100: 
StringReader stringReader = new StringReader("rVx1>nWNaU^:L");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-1555), (-1), 54);
javaCharStream.readChar();
javaCharStream.getEndLine();
Test 101: 
StringReader stringReader = new StringReader("w#MIO+jRn)?vGB");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 3366, (-1), 54);
javaCharStream.readChar();
javaCharStream.getEndLine();
Test 102: 
StringReader stringReader = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2155, 2155);
javaCharStream.backup((-535));
javaCharStream.getEndLine();
Test 103: 
StringReader stringReader = new StringReader("%]VKHNCW#S]{$aS ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-887), 88);
javaCharStream.readChar();
javaCharStream.getLine();
Test 104: 
StringReader stringReader = new StringReader("0 ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.BeginToken();
javaCharStream.getLine();
Test 105: 
JavaCharStream javaCharStream = new JavaCharStream((Reader) null, (-7), 6);
javaCharStream.bufpos = (int) 't';
javaCharStream.getLine();
Test 106: 
StringReader stringReader = new StringReader("5FW*F");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-1077), 1907, 95);
javaCharStream.FillBuff();

* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 94%
* Total number of goals: 216
* Number of covered goals: 203
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 92%
* Total number of goals: 239
* Number of covered goals: 221
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 92%
* Total number of goals: 36
* Number of covered goals: 33
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 31
* Number of covered goals: 31
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 94%
* Total number of goals: 216
* Number of covered goals: 203
* Generated 107 tests with total length 272
* Resulting test suite's coverage: 95% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 18:24:04.120 [logback-1] WARN  TimeController - Already entered in phase: COVERAGE_ANALYSIS. This will mess up the timing calculations.
* Resulting test suite's mutation score: 29%
* Compiling and checking tests
[MASTER] 18:24:23.530 [logback-1] WARN  TimeController - Already entered in phase: ASSERTION_GENERATION. This will mess up the timing calculations.
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:24:27.955 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:24:27.958 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:24:27.994 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:24:27.995 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:24:28.071 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:24:28.072 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:24:28.133 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:24:28.134 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:24:28.185 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:24:28.186 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:24:28.231 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:24:28.232 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:24:28.324 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:24:28.325 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:24:28.390 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:24:28.391 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
[MASTER] 18:24:28.447 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:24:28.448 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:24:28.507 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:24:28.508 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:24:28.557 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:24:28.558 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:24:28.611 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:24:28.612 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:24:28.667 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:24:28.668 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:24:28.722 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:24:28.722 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:24:28.773 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:24:28.774 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:24:28.838 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:24:28.840 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:24:28.906 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:24:28.907 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:24:28.972 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:24:28.974 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:24:29.051 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:24:29.052 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:24:29.108 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:24:29.110 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:24:29.164 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:24:29.165 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:24:29.242 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:24:29.243 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:24:29.297 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:24:29.298 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:24:29.361 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:24:29.362 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:24:29.431 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:24:29.432 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:24:29.502 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:24:29.503 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:24:29.568 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:24:29.569 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:24:29.633 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:24:29.634 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:24:29.699 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:24:29.699 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:24:29.770 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:24:29.771 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:24:29.829 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:24:29.830 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:24:29.927 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:24:29.929 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:24:30.069 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:24:30.071 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:24:30.179 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:24:30.179 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:24:30.254 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:24:30.255 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:24:30.522 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:24:30.523 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:24:30.545 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:24:30.545 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:24:30.573 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:24:30.574 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:24:30.595 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:24:30.595 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:24:30.617 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:24:30.618 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:24:30.639 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:24:30.640 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:24:30.662 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:24:30.663 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:24:30.686 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:24:30.687 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
[MASTER] 18:24:30.708 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:24:30.709 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:24:30.735 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:24:30.736 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
[MASTER] 18:24:30.758 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:24:30.759 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 18:24:30.784 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:24:30.784 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
[MASTER] 18:24:30.812 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:24:30.812 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:24:30.837 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:24:30.837 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
[MASTER] 18:24:30.864 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:24:30.865 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:24:30.891 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:24:30.891 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:24:30.916 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:24:30.917 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:24:30.942 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:24:30.942 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:24:30.972 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:24:30.973 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:24:30.999 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:24:31.000 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:24:31.025 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:24:31.026 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:24:31.052 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:24:31.053 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:24:31.082 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:24:31.083 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:24:31.109 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:24:31.110 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:24:31.135 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:24:31.136 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:24:31.162 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:24:31.163 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:24:31.196 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:24:31.197 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:24:31.227 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:24:31.227 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:24:31.257 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:24:31.258 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:24:31.289 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:24:31.290 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:24:31.328 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:24:31.329 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:24:31.367 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:24:31.368 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:24:31.402 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:24:31.403 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:24:31.431 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:24:31.432 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:24:31.461 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:24:31.462 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:24:31.493 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:24:31.494 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:24:31.525 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:24:31.526 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:24:31.555 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:24:31.556 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:24:31.584 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:24:31.585 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:24:31.642 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:24:31.643 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:24:31.669 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:24:31.670 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:24:31.696 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:24:31.696 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:24:31.724 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:24:31.725 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:24:31.753 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:24:31.754 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:24:31.784 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:24:31.784 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:24:31.813 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:24:31.813 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:24:31.848 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:24:31.849 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:24:31.880 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:24:31.881 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:24:31.916 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:24:31.917 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:24:31.958 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:24:31.959 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:24:31.997 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:24:31.998 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:24:32.036 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:24:32.037 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:24:32.073 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:24:32.074 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:24:32.113 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:24:32.113 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:24:32.148 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:24:32.149 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:24:32.217 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:24:32.218 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:24:32.269 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:24:32.270 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:24:32.317 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:24:32.318 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:24:32.364 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:24:32.364 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
** Write a test suite: 4 called: 4 to improve: false
** Write a test suite: 5 called: 5 to improve: false
** Write a test suite: 6 called: 6 to improve: false
** Write a test suite: 7 called: 7 to improve: false
** Write a test suite: 8 called: 8 to improve: false
** Write a test suite: 9 called: 9 to improve: false
** Write a test suite: 10 called: 10 to improve: false
** Write a test suite: 11 called: 11 to improve: false
** Write a test suite: 12 called: 12 to improve: false
** Write a test suite: 13 called: 13 to improve: false
** Write a test suite: 14 called: 14 to improve: false
** Write a test suite: 15 called: 15 to improve: false
** Write a test suite: 16 called: 16 to improve: false
** Write a test suite: 17 called: 17 to improve: false
** Write a test suite: 18 called: 18 to improve: false
** Write a test suite: 19 called: 19 to improve: false
** Write a test suite: 20 called: 20 to improve: false
** Write a test suite: 21 called: 21 to improve: false
** Write a test suite: 22 called: 22 to improve: false
** Write a test suite: 23 called: 23 to improve: false
** Write a test suite: 24 called: 24 to improve: false
** Write a test suite: 25 called: 25 to improve: false
** Write a test suite: 26 called: 26 to improve: false
** Write a test suite: 27 called: 27 to improve: false
** Write a test suite: 28 called: 28 to improve: false
** Write a test suite: 29 called: 29 to improve: false
** Write a test suite: 30 called: 30 to improve: false
** Write a test suite: 31 called: 31 to improve: false
** Write a test suite: 32 called: 32 to improve: false
** Write a test suite: 33 called: 33 to improve: false
** Write a test suite: 34 called: 34 to improve: false
** Write a test suite: 35 called: 35 to improve: false
** Write a test suite: 36 called: 36 to improve: false
** Write a test suite: 37 called: 37 to improve: false
** Write a test suite: 38 called: 38 to improve: false
** Write a test suite: 39 called: 39 to improve: false
** Write a test suite: 40 called: 40 to improve: false
** Write a test suite: 41 called: 41 to improve: false
** Write a test suite: 42 called: 42 to improve: false
** Write a test suite: 43 called: 43 to improve: false
** Write a test suite: 44 called: 44 to improve: false
** Write a test suite: 45 called: 45 to improve: false
** Write a test suite: 46 called: 46 to improve: false
** Write a test suite: 47 called: 47 to improve: false
** Write a test suite: 48 called: 48 to improve: false
** Write a test suite: 49 called: 49 to improve: false
** Write a test suite: 50 called: 50 to improve: false
** Write a test suite: 51 called: 51 to improve: false
** Write a test suite: 52 called: 52 to improve: false
** Write a test suite: 53 called: 53 to improve: false
** Write a test suite: 54 called: 54 to improve: false
** Write a test suite: 55 called: 55 to improve: false
** Write a test suite: 56 called: 56 to improve: false
** Write a test suite: 57 called: 57 to improve: false
** Write a test suite: 58 called: 58 to improve: false
** Write a test suite: 59 called: 59 to improve: false
** Write a test suite: 60 called: 60 to improve: false
** Write a test suite: 61 called: 61 to improve: false
** Write a test suite: 62 called: 62 to improve: false
** Write a test suite: 63 called: 63 to improve: false
** Write a test suite: 64 called: 64 to improve: false
** Write a test suite: 65 called: 65 to improve: false
** Write a test suite: 66 called: 66 to improve: false
** Write a test suite: 67 called: 67 to improve: false
** Write a test suite: 68 called: 68 to improve: false
** Write a test suite: 69 called: 69 to improve: false
** Write a test suite: 70 called: 70 to improve: false
** Write a test suite: 71 called: 71 to improve: false
** Write a test suite: 72 called: 72 to improve: false
** Write a test suite: 73 called: 73 to improve: false
** Write a test suite: 74 called: 74 to improve: false
** Write a test suite: 75 called: 75 to improve: false
** Write a test suite: 76 called: 76 to improve: false
** Write a test suite: 77 called: 77 to improve: false
** Write a test suite: 78 called: 78 to improve: false
** Write a test suite: 79 called: 79 to improve: false
** Write a test suite: 80 called: 80 to improve: false
** Write a test suite: 81 called: 81 to improve: false
** Write a test suite: 82 called: 82 to improve: false
** Write a test suite: 83 called: 83 to improve: false
** Write a test suite: 84 called: 84 to improve: false
** Write a test suite: 85 called: 85 to improve: false
** Write a test suite: 86 called: 86 to improve: false
** Write a test suite: 87 called: 87 to improve: false
** Write a test suite: 88 called: 88 to improve: false
** Write a test suite: 89 called: 89 to improve: false
** Write a test suite: 90 called: 90 to improve: false
** Write a test suite: 91 called: 91 to improve: false
** Write a test suite: 92 called: 92 to improve: false
** Write a test suite: 93 called: 93 to improve: false
[MASTER] 18:24:34.667 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:24:34.668 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
** Write a test suite: 4 called: 4 to improve: false
** Write a test suite: 5 called: 5 to improve: false
** Write a test suite: 6 called: 6 to improve: false
** Write a test suite: 7 called: 7 to improve: false
** Write a test suite: 8 called: 8 to improve: false
** Write a test suite: 9 called: 9 to improve: false
** Write a test suite: 10 called: 10 to improve: false
** Write a test suite: 11 called: 11 to improve: false
** Write a test suite: 12 called: 12 to improve: false
** Write a test suite: 13 called: 13 to improve: false
** Write a test suite: 14 called: 14 to improve: false
** Write a test suite: 15 called: 15 to improve: false
** Write a test suite: 16 called: 16 to improve: false
** Write a test suite: 17 called: 17 to improve: false
** Write a test suite: 18 called: 18 to improve: false
** Write a test suite: 19 called: 19 to improve: false
** Write a test suite: 20 called: 20 to improve: false
** Write a test suite: 21 called: 21 to improve: false
** Write a test suite: 22 called: 22 to improve: false
** Write a test suite: 23 called: 23 to improve: false
** Write a test suite: 24 called: 24 to improve: false
** Write a test suite: 25 called: 25 to improve: false
** Write a test suite: 26 called: 26 to improve: false
** Write a test suite: 27 called: 27 to improve: false
** Write a test suite: 28 called: 28 to improve: false
** Write a test suite: 29 called: 29 to improve: false
** Write a test suite: 30 called: 30 to improve: false
** Write a test suite: 31 called: 31 to improve: false
** Write a test suite: 32 called: 32 to improve: false
** Write a test suite: 33 called: 33 to improve: false
** Write a test suite: 34 called: 34 to improve: false
** Write a test suite: 35 called: 35 to improve: false
** Write a test suite: 36 called: 36 to improve: false
** Write a test suite: 37 called: 37 to improve: false
** Write a test suite: 38 called: 38 to improve: false
** Write a test suite: 39 called: 39 to improve: false
** Write a test suite: 40 called: 40 to improve: false
** Write a test suite: 41 called: 41 to improve: false
** Write a test suite: 42 called: 42 to improve: false
** Write a test suite: 43 called: 43 to improve: false
** Write a test suite: 44 called: 44 to improve: false
** Write a test suite: 45 called: 45 to improve: false
** Write a test suite: 46 called: 46 to improve: false
** Write a test suite: 47 called: 47 to improve: false
** Write a test suite: 48 called: 48 to improve: false
** Write a test suite: 49 called: 49 to improve: false
** Write a test suite: 50 called: 50 to improve: false
** Write a test suite: 51 called: 51 to improve: false
** Write a test suite: 52 called: 52 to improve: false
** Write a test suite: 53 called: 53 to improve: false
** Write a test suite: 54 called: 54 to improve: false
** Write a test suite: 55 called: 55 to improve: false
** Write a test suite: 56 called: 56 to improve: false
** Write a test suite: 57 called: 57 to improve: false
** Write a test suite: 58 called: 58 to improve: false
** Write a test suite: 59 called: 59 to improve: false
** Write a test suite: 60 called: 60 to improve: false
** Write a test suite: 61 called: 61 to improve: false
** Write a test suite: 62 called: 62 to improve: false
** Write a test suite: 63 called: 63 to improve: false
** Write a test suite: 64 called: 64 to improve: false
** Write a test suite: 65 called: 65 to improve: false
** Write a test suite: 66 called: 66 to improve: false
** Write a test suite: 67 called: 67 to improve: false
** Write a test suite: 68 called: 68 to improve: false
** Write a test suite: 69 called: 69 to improve: false
** Write a test suite: 70 called: 70 to improve: false
** Write a test suite: 71 called: 71 to improve: false
** Write a test suite: 72 called: 72 to improve: false
** Write a test suite: 73 called: 73 to improve: false
** Write a test suite: 74 called: 74 to improve: false
** Write a test suite: 75 called: 75 to improve: false
** Write a test suite: 76 called: 76 to improve: false
** Write a test suite: 77 called: 77 to improve: false
** Write a test suite: 78 called: 78 to improve: false
** Write a test suite: 79 called: 79 to improve: false
** Write a test suite: 80 called: 80 to improve: false
** Write a test suite: 81 called: 81 to improve: false
** Write a test suite: 82 called: 82 to improve: false
** Write a test suite: 83 called: 83 to improve: false
** Write a test suite: 84 called: 84 to improve: false
** Write a test suite: 85 called: 85 to improve: false
** Write a test suite: 86 called: 86 to improve: false
** Write a test suite: 87 called: 87 to improve: false
** Write a test suite: 88 called: 88 to improve: false
** Write a test suite: 89 called: 89 to improve: false
** Write a test suite: 90 called: 90 to improve: false
** Write a test suite: 91 called: 91 to improve: false
** Write a test suite: 92 called: 92 to improve: false
** Write a test suite: 93 called: 93 to improve: false
[MASTER] 18:24:37.344 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar7281548912914421553.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
* Writing tests to file
[MASTER] 18:24:37.348 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7281548912914421553.jar
[MASTER] 18:24:37.350 [logback-1] WARN  TimeController - Already entered in phase: JUNIT_CHECK. This will mess up the timing calculations.
* Writing JUnit test case 'JavaCharStream_ESTest' to evosuite-tests
** Write a test suite: 3 called: 0 to improve: false
** Write a test suite: 6 called: 1 to improve: false
** Write a test suite: 14 called: 2 to improve: false
** Write a test suite: 29 called: 3 to improve: false
** Write a test suite: 34 called: 4 to improve: false
** Write a test suite: 36 called: 5 to improve: false
** Write a test suite: 50 called: 6 to improve: false
** Write a test suite: 51 called: 7 to improve: false
** Write a test suite: 52 called: 8 to improve: false
** Write a test suite: 56 called: 9 to improve: false
** Write a test suite: 68 called: 10 to improve: false
** Write a test suite: 70 called: 11 to improve: false
** Write a test suite: 72 called: 12 to improve: false
** Write a test suite: 73 called: 13 to improve: false
** Write a test suite: 74 called: 14 to improve: false
** Write a test suite: 88 called: 15 to improve: false
** Write a test suite: 89 called: 16 to improve: false
** Write a test suite: 91 called: 17 to improve: false
* Writing JUnit test case 'JavaCharStream_Original_ESTest' to evosuite-tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
** Write a test suite: 4 called: 4 to improve: false
** Write a test suite: 5 called: 5 to improve: false
** Write a test suite: 6 called: 6 to improve: false
** Write a test suite: 7 called: 7 to improve: false
** Write a test suite: 8 called: 8 to improve: false
** Write a test suite: 9 called: 9 to improve: false
** Write a test suite: 10 called: 10 to improve: false
** Write a test suite: 11 called: 11 to improve: false
** Write a test suite: 12 called: 12 to improve: false
** Write a test suite: 13 called: 13 to improve: false
** Write a test suite: 14 called: 14 to improve: false
** Write a test suite: 15 called: 15 to improve: false
** Write a test suite: 16 called: 16 to improve: false
** Write a test suite: 17 called: 17 to improve: false
** Write a test suite: 18 called: 18 to improve: false
** Write a test suite: 19 called: 19 to improve: false
** Write a test suite: 20 called: 20 to improve: false
** Write a test suite: 21 called: 21 to improve: false
** Write a test suite: 22 called: 22 to improve: false
** Write a test suite: 23 called: 23 to improve: false
** Write a test suite: 24 called: 24 to improve: false
** Write a test suite: 25 called: 25 to improve: false
** Write a test suite: 26 called: 26 to improve: false
** Write a test suite: 27 called: 27 to improve: false
** Write a test suite: 28 called: 28 to improve: false
** Write a test suite: 29 called: 29 to improve: false
** Write a test suite: 30 called: 30 to improve: false
** Write a test suite: 31 called: 31 to improve: false
** Write a test suite: 32 called: 32 to improve: false
** Write a test suite: 33 called: 33 to improve: false
** Write a test suite: 34 called: 34 to improve: false
** Write a test suite: 35 called: 35 to improve: false
** Write a test suite: 36 called: 36 to improve: false
** Write a test suite: 37 called: 37 to improve: false
** Write a test suite: 38 called: 38 to improve: false
** Write a test suite: 39 called: 39 to improve: false
** Write a test suite: 40 called: 40 to improve: false
** Write a test suite: 41 called: 41 to improve: false
** Write a test suite: 42 called: 42 to improve: false
** Write a test suite: 43 called: 43 to improve: false
** Write a test suite: 44 called: 44 to improve: false
** Write a test suite: 45 called: 45 to improve: false
** Write a test suite: 46 called: 46 to improve: false
** Write a test suite: 47 called: 47 to improve: false
** Write a test suite: 48 called: 48 to improve: false
** Write a test suite: 49 called: 49 to improve: false
** Write a test suite: 50 called: 50 to improve: false
** Write a test suite: 51 called: 51 to improve: false
** Write a test suite: 52 called: 52 to improve: false
** Write a test suite: 53 called: 53 to improve: false
** Write a test suite: 54 called: 54 to improve: false
** Write a test suite: 55 called: 55 to improve: false
** Write a test suite: 56 called: 56 to improve: false
** Write a test suite: 57 called: 57 to improve: false
** Write a test suite: 58 called: 58 to improve: false
** Write a test suite: 59 called: 59 to improve: false
** Write a test suite: 60 called: 60 to improve: false
** Write a test suite: 61 called: 61 to improve: false
** Write a test suite: 62 called: 62 to improve: false
** Write a test suite: 63 called: 63 to improve: false
** Write a test suite: 64 called: 64 to improve: false
** Write a test suite: 65 called: 65 to improve: false
** Write a test suite: 66 called: 66 to improve: false
** Write a test suite: 67 called: 67 to improve: false
** Write a test suite: 68 called: 68 to improve: false
** Write a test suite: 69 called: 69 to improve: false
** Write a test suite: 70 called: 70 to improve: false
** Write a test suite: 71 called: 71 to improve: false
** Write a test suite: 72 called: 72 to improve: false
** Write a test suite: 73 called: 73 to improve: false
** Write a test suite: 74 called: 74 to improve: false
** Write a test suite: 75 called: 75 to improve: false
** Write a test suite: 76 called: 76 to improve: false
** Write a test suite: 77 called: 77 to improve: false
** Write a test suite: 78 called: 78 to improve: false
** Write a test suite: 79 called: 79 to improve: false
** Write a test suite: 80 called: 80 to improve: false
** Write a test suite: 81 called: 81 to improve: false
** Write a test suite: 82 called: 82 to improve: false
** Write a test suite: 83 called: 83 to improve: false
** Write a test suite: 84 called: 84 to improve: false
** Write a test suite: 85 called: 85 to improve: false
** Write a test suite: 86 called: 86 to improve: false
** Write a test suite: 87 called: 87 to improve: false
** Write a test suite: 88 called: 88 to improve: false
** Write a test suite: 89 called: 89 to improve: false
** Write a test suite: 90 called: 90 to improve: false
** Write a test suite: 91 called: 91 to improve: false
** Write a test suite: 92 called: 92 to improve: false
** Write a test suite: 93 called: 93 to improve: false
* Done!

* Computation finished
