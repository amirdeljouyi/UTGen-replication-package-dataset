* EvoSuite 1.0.0-SNAPSHOT
* Going to generate test cases for class: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
* Starting Client-0
* Properties loaded from /home/roham/Results-Utestgen/dataset/SF110-new-res/19_jmca/evosuite-files/evosuite.properties
* Connecting to master process on port 9190
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 18:24:48.373 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 18:24:48.376 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 18:24:48.376 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 18:24:48.382 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
* Test criteria:
  - Branch Coverage
  - Line Coverage
  - Method-Output Coverage
  - Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 4410
* Using seed 1710181484667
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%]* Initial Number of Goals in DynaMOSA = 713 / 4410
[Progress:>                             0%] [Cov:=============>                     39%][Progress:>                             1%] [Cov:=============>                     39%][Progress:>                             2%] [Cov:==============>                    42%][Progress:>                             2%] [Cov:==============>                    42%][Progress:>                             3%] [Cov:================>                  48%][Progress:>                             3%] [Cov:================>                  48%][Progress:=>                            4%] [Cov:================>                  48%][Progress:=>                            4%] [Cov:================>                  48%][Progress:=>                            5%] [Cov:================>                  48%][Progress:=>                            5%] [Cov:=================>                 50%][Progress:=>                            6%] [Cov:=================>                 50%][Progress:=>                            6%] [Cov:=================>                 51%][Progress:==>                           7%] [Cov:=================>                 51%][Progress:==>                           7%] [Cov:==================>                52%][Progress:==>                           8%] [Cov:==================>                52%][Progress:==>                           8%] [Cov:==================>                52%][Progress:==>                           9%] [Cov:==================>                53%][Progress:==>                           9%] [Cov:===================>               55%][Progress:==>                           9%] [Cov:===================>               55%][Progress:==>                           9%] [Cov:===================>               55%][Progress:===>                          10%] [Cov:===================>               56%][Progress:===>                          11%] [Cov:===================>               56%][Progress:===>                          11%] [Cov:===================>               56%][Progress:===>                          11%] [Cov:===================>               56%][Progress:===>                          12%] [Cov:===================>               56%][Progress:===>                          12%] [Cov:===================>               57%][Progress:===>                          12%] [Cov:===================>               57%][Progress:===>                          13%] [Cov:===================>               57%][Progress:===>                          13%] [Cov:===================>               57%][Progress:===>                          13%] [Cov:====================>              58%][Progress:====>                         14%] [Cov:====================>              58%][Progress:====>                         14%] [Cov:====================>              59%][Progress:====>                         15%] [Cov:====================>              59%][Progress:====>                         15%] [Cov:====================>              59%][Progress:====>                         16%] [Cov:====================>              59%][Progress:====>                         16%] [Cov:=====================>             60%][Progress:=====>                        17%] [Cov:=====================>             60%][Progress:=====>                        17%] [Cov:=====================>             60%][Progress:=====>                        17%] [Cov:=====================>             60%][Progress:=====>                        18%] [Cov:=====================>             60%][Progress:=====>                        18%] [Cov:=====================>             60%][Progress:=====>                        18%] [Cov:=====================>             60%][Progress:=====>                        19%] [Cov:=====================>             60%][Progress:=====>                        19%] [Cov:=====================>             60%][Progress:======>                       20%] [Cov:=====================>             60%][Progress:======>                       20%] [Cov:=====================>             60%][Progress:======>                       20%] [Cov:=====================>             60%][Progress:======>                       21%] [Cov:=====================>             60%][Progress:======>                       23%] [Cov:=====================>             60%][Progress:=======>                      24%] [Cov:=====================>             60%][Progress:=======>                      24%] [Cov:=====================>             61%][Progress:=======>                      25%] [Cov:=====================>             61%][Progress:=======>                      25%] [Cov:=====================>             61%][Progress:=======>                      25%] [Cov:=====================>             61%][Progress:=======>                      25%] [Cov:=====================>             61%][Progress:=======>                      26%] [Cov:=====================>             61%][Progress:=======>                      26%] [Cov:=====================>             61%][Progress:=======>                      26%] [Cov:=====================>             61%][Progress:========>                     27%] [Cov:=====================>             61%][Progress:========>                     27%] [Cov:=====================>             61%][Progress:========>                     27%] [Cov:=====================>             62%][Progress:========>                     28%] [Cov:=====================>             62%][Progress:========>                     28%] [Cov:=====================>             62%][Progress:========>                     29%] [Cov:=====================>             62%][Progress:========>                     29%] [Cov:=====================>             62%][Progress:========>                     29%] [Cov:=====================>             62%][Progress:=========>                    32%] [Cov:=====================>             62%][Progress:==========>                   35%] [Cov:=====================>             62%][Progress:==========>                   36%] [Cov:=====================>             62%][Progress:===========>                  38%] [Cov:=====================>             62%][Progress:===========>                  38%] [Cov:======================>            63%][Progress:===========>                  38%] [Cov:======================>            63%][Progress:===========>                  39%] [Cov:======================>            63%][Progress:===========>                  39%] [Cov:======================>            63%][Progress:===========>                  39%] [Cov:======================>            63%][Progress:===========>                  39%] [Cov:======================>            63%][Progress:============>                 40%] [Cov:======================>            63%][Progress:============>                 40%] [Cov:======================>            63%][Progress:============>                 40%] [Cov:======================>            63%][Progress:============>                 41%] [Cov:======================>            63%][Progress:============>                 41%] [Cov:======================>            63%][Progress:============>                 41%] [Cov:======================>            63%][Progress:============>                 42%] [Cov:======================>            63%][Progress:============>                 42%] [Cov:======================>            63%][Progress:============>                 42%] [Cov:======================>            64%][Progress:============>                 42%] [Cov:======================>            64%][Progress:============>                 43%] [Cov:======================>            64%][Progress:============>                 43%] [Cov:======================>            64%][Progress:============>                 43%] [Cov:======================>            64%][Progress:=============>                44%] [Cov:======================>            64%][Progress:=============>                44%] [Cov:======================>            64%][Progress:=============>                44%] [Cov:======================>            64%][Progress:=============>                44%] [Cov:======================>            64%][Progress:=============>                45%] [Cov:======================>            64%][Progress:=============>                45%] [Cov:======================>            64%][Progress:=============>                45%] [Cov:======================>            65%][Progress:=============>                45%] [Cov:======================>            65%][Progress:=============>                46%] [Cov:======================>            65%][Progress:=============>                46%] [Cov:======================>            65%][Progress:==============>               49%] [Cov:======================>            65%][Progress:==============>               49%] [Cov:======================>            65%][Progress:==============>               49%] [Cov:======================>            65%][Progress:===============>              50%] [Cov:======================>            65%][Progress:===============>              50%] [Cov:======================>            65%][Progress:===============>              50%] [Cov:======================>            65%][Progress:===============>              51%] [Cov:======================>            65%][Progress:===============>              51%] [Cov:======================>            65%][Progress:===============>              51%] [Cov:======================>            65%][Progress:===============>              51%] [Cov:======================>            65%][Progress:================>             54%] [Cov:======================>            65%][Progress:================>             54%] [Cov:=======================>           66%][Progress:================>             55%] [Cov:=======================>           66%][Progress:================>             55%] [Cov:=======================>           66%][Progress:=================>            58%] [Cov:=======================>           66%][Progress:=================>            58%] [Cov:=======================>           66%][Progress:=================>            58%] [Cov:=======================>           66%][Progress:=================>            58%] [Cov:=======================>           66%][Progress:=================>            59%] [Cov:=======================>           66%][Progress:=================>            59%] [Cov:=======================>           66%][Progress:==================>           61%] [Cov:=======================>           66%][Progress:==================>           62%] [Cov:=======================>           66%][Progress:===================>          65%] [Cov:=======================>           66%][Progress:===================>          65%] [Cov:=======================>           66%][Progress:====================>         68%] [Cov:=======================>           66%][Progress:=====================>        71%] [Cov:=======================>           66%][Progress:=====================>        71%] [Cov:=======================>           66%][Progress:======================>       74%] [Cov:=======================>           66%][Progress:======================>       74%] [Cov:=======================>           66%][Progress:======================>       74%] [Cov:=======================>           66%][Progress:======================>       75%] [Cov:=======================>           66%][Progress:======================>       75%] [Cov:=======================>           66%][Progress:=======================>      78%] [Cov:=======================>           66%][Progress:========================>     81%] [Cov:=======================>           66%][Progress:========================>     81%] [Cov:=======================>           66%][Progress:========================>     81%] [Cov:=======================>           66%][Progress:========================>     81%] [Cov:=======================>           66%][Progress:=========================>    84%] [Cov:=======================>           66%][Progress:=========================>    84%] [Cov:=======================>           66%][Progress:=========================>    85%] [Cov:=======================>           66%][Progress:=========================>    85%] [Cov:=======================>           66%][Progress:==========================>   87%] [Cov:=======================>           66%][Progress:===========================>  90%] [Cov:=======================>           66%][Progress:===========================>  90%] [Cov:=======================>           66%][Progress:===========================>  91%] [Cov:=======================>           66%][Progress:===========================>  91%] [Cov:=======================>           66%][Progress:===========================>  91%] [Cov:=======================>           66%][Progress:============================> 95%] [Cov:=======================>           66%][Progress:============================> 95%] [Cov:=======================>           66%][Progress:============================> 95%] [Cov:=======================>           67%][Progress:============================> 95%] [Cov:=======================>           67%][Progress:============================> 96%] [Cov:=======================>           67%][Progress:=============================>97%] [Cov:=======================>           67%][Progress:=============================>98%] [Cov:=======================>           67%][Progress:=============================>98%] [Cov:=======================>           67%][Progress:=============================>98%] [Cov:=======================>           67%][Progress:=============================>98%] [Cov:=======================>           67%][Progress:=============================>99%] [Cov:=======================>           67%][Progress:==============================100%] [Cov:=======================>           67%]
* Search finished after 205s and 157 generations, 84674 statements, best individual has fitness: 1646.0
* Generated before the refinement 141 tests with total length 695
statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("returs")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 122, 2586)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("returs");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 122, 2586);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("return");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, 122, 2586);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("return"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, 122, 2586), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "return";
StringReader stringReader = new StringReader(string);
int _int = 122;
int _int = 2586;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("return")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: ReInit(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: javaParserTokenManager.ReInit(arg0)
test data is: StringReader stringReader = new StringReader("return");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.ReInit(javaCharStream);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("return 5 * (10 + 3);");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.ReInit(javaCharStream);
    }
}
statement is: StringReader stringReader = new StringReader("return 5 * (10 + 3);"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.ReInit(javaCharStream), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.ReInit(javaCharStream) target is: javaParserTokenManager method is: ReInit(JavaCharStream)
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: ReInit(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V
TestCase is: String string = "return 5 * (10 + 3);";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).ReInit(javaCharStream);

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("shv/2Z*Atp:n93l")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("shv/2Z*Atp:n93l");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("main");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("main"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "main";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("GVxb]m")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0, 0)
statement is: setDebugStream(Ljava/io/PrintStream;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: javaParserTokenManager.setDebugStream((PrintStream) null)
test data is: StringReader stringReader = new StringReader("GVxb]m");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 0);
javaParserTokenManager.setDebugStream((PrintStream) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("Hello World!");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 0);
        javaParserTokenManager.setDebugStream(((PrintStream) (null)));
    }
}
statement is: StringReader stringReader = new StringReader("Hello World!"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 0), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.setDebugStream(((PrintStream) (null))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.setDebugStream(((PrintStream) (null))) target is: javaParserTokenManager method is: setDebugStream(PrintStream)
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;I)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
Matched Method is: setDebugStream(Ljava/io/PrintStream;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
TestCase is: String string = "Hello World!";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
int _int = 0;
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, _int);
PrintStream printStream = null;
((JavaParserTokenManager) javaCharStream).setDebugStream(printStream);

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("\"enui;m\"")
statement is: read()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int read = stringReader.read()
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("\"enui;m\"");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("\"This is a sample input for testing\"");
        stringReader.read();
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("\"This is a sample input for testing\""), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: stringReader.read(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: stringReader.read() target is: stringReader method is: read()
source statement: java.io.StringReader(Ljava/lang/String;)V callee: VariableReference: Statement 0, type java.io.StringReaderindex is: 1
Matched Method is: read()I
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 3, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 3, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 3, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 3, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "\"This is a sample input for testing\"";
StringReader stringReader = new StringReader(string);
((StringReader) string).read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("return")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 1858, 7)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("return");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1858, 7);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("return");// Original test data

        JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1858, 7);// Original test data

        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);// Original test data

        javaParserTokenManager.getNextToken();// Original test data

        // Improved test data
        StringReader stringReader = new StringReader("return x;");// More descriptive and representative of the situation being tested

        JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1858, 7);// More descriptive and representative of the situation being tested

        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);// More descriptive and representative of the situation being tested

        javaParserTokenManager.getNextToken();// More descriptive and representative of the situation being tested }}

    }
}
statement is: StringReader stringReader = new StringReader("return")// Original test data
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1858, 7)// Original test data
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream)// Original test data
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken()// Original test data
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken()// Original test data
 target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: // Improved test data
StringReader stringReader = new StringReader("return x;")// More descriptive and representative of the situation being tested
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1858, 7)// More descriptive and representative of the situation being tested
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream)// More descriptive and representative of the situation being tested
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken()// More descriptive and representative of the situation being tested }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken()// More descriptive and representative of the situation being tested }}
 target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 12
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "return";
StringReader stringReader = new StringReader(string);
int _int = 1858;
int _int = 7;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();
String string = "return x;";
StringReader stringReader = new StringReader(string);
int _int = 1858;
int _int = 7;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("GVxb]m")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0, 0)
statement is: ReInit(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: javaParserTokenManager.ReInit(arg0, 0)
test data is: StringReader stringReader = new StringReader("GVxb]m");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 0);
javaParserTokenManager.ReInit(javaCharStream, 0);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("This is a sample input string for testing");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 0);
        javaParserTokenManager.ReInit(javaCharStream, 0);
    }
}
statement is: StringReader stringReader = new StringReader("This is a sample input string for testing"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 0), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.ReInit(javaCharStream, 0), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.ReInit(javaCharStream, 0) target is: javaParserTokenManager method is: ReInit(JavaCharStream,int)
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;I)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
Matched Method is: ReInit(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;I)V
TestCase is: String string = "This is a sample input string for testing";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
int _int = 0;
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, _int);
int _int = 0;
((JavaParserTokenManager) javaCharStream).ReInit(javaCharStream, _int);

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("r3U80|wqd_3kK\"d}")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("r3U80|wqd_3kK\"d}");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("An input string containing a mixture of uppercase and lowercase letters, numbers, and special characters.");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.tokenizeInputString();
    }
}
statement is: StringReader stringReader = new StringReader("An input string containing a mixture of uppercase and lowercase letters, numbers, and special characters."), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.tokenizeInputString(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.tokenizeInputString() target is: javaParserTokenManager method is: tokenizeInputString()
TestCase is: String string = "An input string containing a mixture of uppercase and lowercase letters, numbers, and special characters.";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader(".>Fu?)j&=l")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader(".>Fu?)j&=l");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader(".>Fu?)j&=l");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader(".>Fu?)j&=l"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = ".>Fu?)j&=l";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("\"<<\"")
statement is: read()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int read = stringReader.read()
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, (-1439), (-3520))
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("\"<<\"");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-1439), (-3520));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        BufferedReader bufferedReader = new BufferedReader(new FileReader("input.txt"));
        JavaTokenizer javaTokenizer = new JavaTokenizer(bufferedReader);
        List<String> tokens = new ArrayList<>();
        while (javaTokenizer.getNextToken() != null) {
            tokens.add(javaTokenizer.getToken().getString());
        } 
    }
}
statement is: BufferedReader bufferedReader = new BufferedReader(new FileReader("input.txt")), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaTokenizer javaTokenizer = new JavaTokenizer(bufferedReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: List<String> tokens = new ArrayList<>(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: while (javaTokenizer.getNextToken() != null) {
    tokens.add(javaTokenizer.getToken().getString());
} , class spoon.support.reflect.code.CtWhileImpl
statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("do")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, (-2647), (-1205))
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("do");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-2647), (-1205));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("do");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, -2647, -1205);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("do"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, -2647, -1205), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "do";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-2647), (-1205));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("int")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("int");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("int");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("int"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "int";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("!j!rl~+")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("!j!rl~+");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("!j!rl~+");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("!j!rl~+"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "!j!rl~+";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("\"[\"")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("\"[\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("\"[\"");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        // Improved test data:
        StringReader stringReader = new StringReader("\"[\"");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        // The above test data is more descriptive and representative of the situation being tested, as it uses a more realistic input string that includes a valid JSON array opening bracket. }}
    }
}
statement is: StringReader stringReader = new StringReader("\"[\""), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: // Improved test data:
StringReader stringReader = new StringReader("\"[\""), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 8
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: // The above test data is more descriptive and representative of the situation being tested, as it uses a more realistic input string that includes a valid JSON array opening bracket. }}, class spoon.support.reflect.code.CtCommentImpl
TestCase is: String string = "\"[\"";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "\"[\"";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("#Q9a1l'm")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("#Q9a1l'm");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("The quick brown fox jumps over the lazy dog");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("The quick brown fox jumps over the lazy dog"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "The quick brown fox jumps over the lazy dog";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("$on-")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("$on-");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("$on-");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        // This test case is designed to verify that the getNextToken() method of the JavaParserTokenManager class returns a token with the correct type (in this case, an IDENTIFIER) and value ($on-). }}
    }
}
statement is: StringReader stringReader = new StringReader("$on-"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: // This test case is designed to verify that the getNextToken() method of the JavaParserTokenManager class returns a token with the correct type (in this case, an IDENTIFIER) and value ($on-). }}, class spoon.support.reflect.code.CtCommentImpl
TestCase is: String string = "$on-";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("S{%cru|+X")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("S{%cru|+X");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
    }
}
statement is: CharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("re0F&turs")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;III)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 2758, 108, 29)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("re0F&turs");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2758, 108, 29);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("This is a test string with some interesting characters like $%^&*()_+-=[]{}|;\':\"<>,./");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1024, 512, 8);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("This is a test string with some interesting characters like $%^&*()_+-=[]{}|;\':\"<>,./"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1024, 512, 8), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 6
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 6
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 6
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 6
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "This is a test string with some interesting characters like $%^&*()_+-=[]{}|;':\"<>,./";
StringReader stringReader = new StringReader(string);
int _int = 1024;
int _int = 512;
int _int = 8;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int, _int);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();
((JavaParserTokenManager) _int).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader(":a'B<G6O1h$//")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader(":a'B<G6O1h$//");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader(":a'B<G6O1h$//");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader(":a'B<G6O1h$//"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = ":a'B<G6O1h$//";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("($J#qzy+|R~KVI3I")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("($J#qzy+|R~KVI3I");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("Hello, World!");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("Hello, World!"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "Hello, World!";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("O2mS*)!")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("O2mS*)!");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        stringReader = new StringReader("O2mS*)!");
        javaCharStream = new JavaCharStream(stringReader);
        javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        token1 = javaParserTokenManager.getNextToken();
        token2 = javaParserTokenManager.getNextToken();
        token3 = javaParserTokenManager.getNextToken();
    }
}
statement is: stringReader = new StringReader("O2mS*)!"), class spoon.support.reflect.code.CtAssignmentImpl
statement is: javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtAssignmentImpl
statement is: javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtAssignmentImpl
statement is: token1 = javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtAssignmentImpl
statement is: token2 = javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtAssignmentImpl
statement is: token3 = javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtAssignmentImpl
statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("+NK-lW;qxd:@D$fPwZ")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("+NK-lW;qxd:@D$fPwZ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("+27-lW;qxd:@D$fPwZ");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("+27-lW;qxd:@D$fPwZ"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "+27-lW;qxd:@D$fPwZ";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("Y}=pTn2,%SL.D&h")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("Y}=pTn2,%SL.D&h");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
    }
}
statement is: CharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("?0&+z^_>QV2")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("?0&+z^_>QV2");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("hello world");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("hello world"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "hello world";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("1JBvL)tKE;fZ`>x")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0, 0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("1JBvL)tKE;fZ`>x");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 0);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("1234567890");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 0);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("1234567890"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 0), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;I)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "1234567890";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
int _int = 0;
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, _int);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("3FQ'Um^aU)o\"")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("3FQ'Um^aU)o\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("3FQ\'Um^aU)o\"");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();// returns a token with value '3FQ'Um^aU)o\"" and type IDENTIFIER

        javaParserTokenManager.getNextToken();// returns a token with value 'FQ'Um^aU)o\"" and type STRING_LITERAL

        javaParserTokenManager.getNextToken();// returns a token with value 'Um^aU)o\"" and type IDENTIFIER }}

    }
}
statement is: StringReader stringReader = new StringReader("3FQ\'Um^aU)o\""), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken()// returns a token with value '3FQ'Um^aU)o\"" and type IDENTIFIER
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken()// returns a token with value '3FQ'Um^aU)o\"" and type IDENTIFIER
 target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken()// returns a token with value 'FQ'Um^aU)o\"" and type STRING_LITERAL
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken()// returns a token with value 'FQ'Um^aU)o\"" and type STRING_LITERAL
 target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken()// returns a token with value 'Um^aU)o\"" and type IDENTIFIER }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken()// returns a token with value 'Um^aU)o\"" and type IDENTIFIER }}
 target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "3FQ'Um^aU)o\"";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("k?4td6H_\"")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("k?4td6H_\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("k?4td6H_\"");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        // Token types:
        int tokenType1 = javaParserTokenManager.getNextToken();// IDENTIFIER "k"

        int tokenType2 = javaParserTokenManager.getNextToken();// CHAR '?'

        int tokenType3 = javaParserTokenManager.getNextToken();// INT 4

        int tokenType4 = javaParserTokenManager.getNextToken();// DOUBLE 5.0

        int tokenType5 = javaParserTokenManager.getNextToken();// STRING "Hello World!"

        int tokenType6 = javaParserTokenManager.getNextToken();// CHAR '_'

        int tokenType7 = javaParserTokenManager.getNextToken();// IDENTIFIER "H_" }}

    }
}
statement is: StringReader stringReader = new StringReader("k?4td6H_\""), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: // Token types:
int tokenType1 = javaParserTokenManager.getNextToken()// IDENTIFIER "k"
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: int tokenType2 = javaParserTokenManager.getNextToken()// CHAR '?'
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: int tokenType3 = javaParserTokenManager.getNextToken()// INT 4
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: int tokenType4 = javaParserTokenManager.getNextToken()// DOUBLE 5.0
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: int tokenType5 = javaParserTokenManager.getNextToken()// STRING "Hello World!"
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: int tokenType6 = javaParserTokenManager.getNextToken()// CHAR '_'
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: int tokenType7 = javaParserTokenManager.getNextToken()// IDENTIFIER "H_" }}
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "k?4td6H_\"";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("5cQM_")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;III)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 918, 3736, 29)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("5cQM_");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 918, 3736, 29);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("5cQM_");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, 918, 3736, 29);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("5cQM_"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, 918, 3736, 29), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 6
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 6
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 6
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 6
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "5cQM_";
StringReader stringReader = new StringReader(string);
int _int = 918;
int _int = 3736;
int _int = 29;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int, _int);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();
((JavaParserTokenManager) _int).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader(",6F'&")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader(",6F'&");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader(",6F'&");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();// returns a token representing the ',' character

        javaParserTokenManager.getNextToken();// returns a token representing the "6F'&" String

        javaParserTokenManager.getNextToken();// returns a token representing the end of file }}

    }
}
statement is: StringReader stringReader = new StringReader(",6F'&"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken()// returns a token representing the ',' character
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken()// returns a token representing the ',' character
 target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken()// returns a token representing the "6F'&" String
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken()// returns a token representing the "6F'&" String
 target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken()// returns a token representing the end of file }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken()// returns a token representing the end of file }}
 target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = ",6F'&";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("8g%CxdQd<T?")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("8g%CxdQd<T?");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("8g%CxdQd<T?");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("8g%CxdQd<T?"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "8g%CxdQd<T?";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("7-]9q03~~")
statement is: read()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int read = stringReader.read()
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("7-]9q03~~");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("7-]9q03~~");
        stringReader.read();
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
        // Improved test data
        StringReader stringReader = new StringReader("7-]9q03~~");
        stringReader.read();
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("7-]9q03~~"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: stringReader.read(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: stringReader.read() target is: stringReader method is: read()
source statement: java.io.StringReader(Ljava/lang/String;)V callee: VariableReference: Statement 0, type java.io.StringReaderindex is: 1
Matched Method is: read()I
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 3, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 3, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 3, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 3, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 3, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 3, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 3, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 3, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 3, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: // Improved test data
StringReader stringReader = new StringReader("7-]9q03~~"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: stringReader.read(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: stringReader.read() target is: stringReader method is: read()
source statement: java.io.StringReader(Ljava/lang/String;)V callee: VariableReference: Statement 0, type java.io.StringReaderindex is: 9
Matched Method is: read()I
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 3, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 12
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 3, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 12
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 3, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 12
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 3, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 12
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 3, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 12
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 3, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 12
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 3, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 12
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 3, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 12
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 3, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 12
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 3, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 12
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 3, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 12
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 3, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 12
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 3, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 12
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 3, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 12
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 3, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 12
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "7-]9q03~~";
StringReader stringReader = new StringReader(string);
((StringReader) string).read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "7-]9q03~~";
StringReader stringReader = new StringReader(string);
((StringReader) string).read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("-@ov\"")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("-@ov\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("-@ov\"");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        Token token1 = javaParserTokenManager.getNextToken();
        Token token2 = javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("-@ov\""), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Token token1 = javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: Token token2 = javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "-@ov\"";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("\"A\"")
statement is: read()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int read = stringReader.read()
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 2570, 34)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("\"A\"");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2570, 34);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("\"The quick brown fox jumps over the lazy dog\"");
        stringReader.read();
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2570, 34);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("\"The quick brown fox jumps over the lazy dog\""), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: stringReader.read(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: stringReader.read() target is: stringReader method is: read()
source statement: java.io.StringReader(Ljava/lang/String;)V callee: VariableReference: Statement 0, type java.io.StringReaderindex is: 1
Matched Method is: read()I
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2570, 34), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 3, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 6
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "\"The quick brown fox jumps over the lazy dog\"";
StringReader stringReader = new StringReader(string);
((StringReader) string).read();
int _int = 2570;
int _int = 34;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("02B#fwy-C^")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("02B#fwy-C^");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("02B#fwy-C^");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("02B#fwy-C^"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "02B#fwy-C^";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("CeG$dhfP&L(Zbc/p")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("CeG$dhfP&L(Zbc/p");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("myVariable");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.parseNextToken();
        javaParserTokenManager.parseNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("myVariable"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.parseNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.parseNextToken() target is: javaParserTokenManager method is: parseNextToken()
statement is: javaParserTokenManager.parseNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.parseNextToken() target is: javaParserTokenManager method is: parseNextToken()
TestCase is: String string = "myVariable";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("DF SF")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("DF SF");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: CharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("E5|WvEY1<KP+9")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("E5|WvEY1<KP+9");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("E5|WvEY1<KP+9");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("E5|WvEY1<KP+9"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "E5|WvEY1<KP+9";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("FM$C'SR")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0, 0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("FM$C'SR");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 0);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 0);
        // Tokenize the input string into a stream of tokens
        while (javaParserTokenManager.getNextToken().kind != JavaParserConstants.EOF) {
        } 
        // Do something with the toke }}
    }
}
statement is: CharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 0), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: // Tokenize the input string into a stream of tokens
while (javaParserTokenManager.getNextToken().kind != JavaParserConstants.EOF) {
} , class spoon.support.reflect.code.CtWhileImpl
statement is: // Do something with the toke }}, class spoon.support.reflect.code.CtCommentImpl
TestCase is: int _int = 0;
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager((JavaCharStream) _int, 0);

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("aG+7o5w(<<&0")
statement is: read()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int read = stringReader.read()
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 97, 88)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("aG+7o5w(<<&0");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 97, 88);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("abcdefg");
        stringReader.read();
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, 97, 88);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("abcdefg"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: stringReader.read(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: stringReader.read() target is: stringReader method is: read()
source statement: java.io.StringReader(Ljava/lang/String;)V callee: VariableReference: Statement 0, type java.io.StringReaderindex is: 1
Matched Method is: read()I
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, 97, 88), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 3, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 6
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "abcdefg";
StringReader stringReader = new StringReader(string);
((StringReader) string).read();
int _int = 97;
int _int = 88;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("HU=J.c_U/ifl2<")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("HU=J.c_U/ifl2<");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("LINE_NUMBER=1");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("LINE_NUMBER=1"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "LINE_NUMBER=1";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("rK/I`5FU")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("rK/I`5FU");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("Hello, World!");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("Hello, World!"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "Hello, World!";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("U=[Lbw -JS%I|!")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("U=[Lbw -JS%I|!");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("U=['Hello', 'World']");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("U=['Hello', 'World']"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "U=['Hello', 'World']";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("+NK-lW;qxd:@D$fPwZ")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: backup(I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: javaCharStream.backup((-2018))
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("+NK-lW;qxd:@D$fPwZ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.backup((-2018));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("+NK-lW;qxd:@D$fPwZ");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        javaCharStream.backup(-2018);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        // Added more descriptive test data for the backup function
        int backupValue = 10;
        javaCharStream.backup(backupValue);
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("+NK-lW;qxd:@D$fPwZ"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.backup(-2018), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.backup(-2018) target is: javaCharStream method is: backup(int)
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 2
Matched Method is: backup(I)V
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: // Added more descriptive test data for the backup function
int backupValue = 10, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: javaCharStream.backup(backupValue), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.backup(backupValue) target is: javaCharStream method is: backup(int)
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 2
Matched Method is: backup(I)V
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 3, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 3, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 3, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 3, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "+NK-lW;qxd:@D$fPwZ";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
int _int = null;
((JavaCharStream) stringReader).backup(_int);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
int _int = 10;
((JavaCharStream) stringReader).backup(_int);
((JavaParserTokenManager) _int).getNextToken();
((JavaParserTokenManager) _int).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("O2mS*M)!")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("O2mS*M)!");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("This is a test string.");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("This is a test string."), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "This is a test string.";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("Pjsh0uC?.7")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("Pjsh0uC?.7");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("myJavaIdentifier");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("myJavaIdentifier"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "myJavaIdentifier";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("QqDFM*dmE}UL")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("QqDFM*dmE}UL");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();// returns a token with the value "public"

        javaParserTokenManager.getNextToken();// returns a token with the value "static }}

    }
}
statement is: CharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V
statement is: javaParserTokenManager.getNextToken()// returns a token with the value "public"
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken()// returns a token with the value "public"
 target is: javaParserTokenManager method is: getNextToken()
statement is: javaParserTokenManager.getNextToken()// returns a token with the value "static }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken()// returns a token with the value "static }}
 target is: javaParserTokenManager method is: getNextToken()
statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("<RL.2=BhBg=\"B")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("<RL.2=BhBg=\"B");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("<RL.2=BhBg=\"B");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("<RL.2=BhBg=\"B"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "<RL.2=BhBg=\"B";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("Y}=pTn2,%SL.D&h")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: org.evosuite.testcase.statements.ArrayStatement@54d4a23e type is: class org.evosuite.testcase.statements.ArrayStatement return type class [C
statement code is: char[] charArray = new char[4]
statement is: read([C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int read = stringReader.read(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("Y}=pTn2,%SL.D&h");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
char[] charArray = new char[4];
stringReader.read(charArray);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        char[] charArray = new char[4];
        stringReader.read(charArray);
        javaParserTokenManager.getNextToken();
        // Improved test data:
        StringReader stringReader = new StringReader("This is a sample input string for the Java parser.");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        char[] charArray = new char[4];
        stringReader.read(charArray);
        javaParserTokenManager.getNextToken();
    }
}
statement is: CharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V
statement is: char[] charArray = new char[4], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [4] Ct is: char[] charArray = new char[4] isAssignment: false Array: new char[4] Elements: []
lengths: [4] [4]
Their type are: class [C char[]
statement is: stringReader.read(charArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: stringReader.read(charArray) target is: stringReader method is: read(char[])
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: org.evosuite.testcase.statements.ArrayStatement@5e92cd2a callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 0
statement is: // Improved test data:
StringReader stringReader = new StringReader("This is a sample input string for the Java parser."), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: char[] charArray = new char[4], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [4] Ct is: char[] charArray = new char[4] isAssignment: false Array: new char[4] Elements: []
lengths: [4] [4]
Their type are: class [C char[]
statement is: stringReader.read(charArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: stringReader.read(charArray) target is: stringReader method is: read(char[])
source statement: java.io.StringReader(Ljava/lang/String;)V callee: VariableReference: Statement 0, type java.io.StringReaderindex is: 2
Matched Method is: read([C)I
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: char[] charArray = new char[4];
String string = "This is a sample input string for the Java parser.";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
char[] charArray = new char[4];
((Reader) charArray).read(charArray);
((JavaParserTokenManager) stringReader).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("Vxb]m")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0, 0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("Vxb]m");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 0);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("Vxb]m");
    }
}
statement is: StringReader stringReader = new StringReader("Vxb]m"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase is: String string = "Vxb]m";
StringReader stringReader = new StringReader(string);

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("X*o_Dl7mBw")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("X*o_Dl7mBw");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("public class MyClass { public static void main(String[] args) { System.out.println(\"Hello, world!\"); } }");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("public class MyClass { public static void main(String[] args) { System.out.println(\"Hello, world!\"); } }"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "public class MyClass { public static void main(String[] args) { System.out.println(\"Hello, world!\"); } }";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("C+Z8pp(MFZh>")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("C+Z8pp(MFZh>");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("C+Z8pp(MFZh>");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();// token 1: "C"

        javaParserTokenManager.getNextToken();// token 2: "+"

        javaParserTokenManager.getNextToken();// token 3: "Z"

        javaParserTokenManager.getNextToken();// token 4: "8"

        javaParserTokenManager.getNextToken();// token 5: "pp"

        javaParserTokenManager.getNextToken();// token 6: "(MF"

        javaParserTokenManager.getNextToken();// token 7: "Zh>" }}

    }
}
statement is: StringReader stringReader = new StringReader("C+Z8pp(MFZh>"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken()// token 1: "C"
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken()// token 1: "C"
 target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken()// token 2: "+"
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken()// token 2: "+"
 target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken()// token 3: "Z"
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken()// token 3: "Z"
 target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken()// token 4: "8"
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken()// token 4: "8"
 target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken()// token 5: "pp"
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken()// token 5: "pp"
 target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken()// token 6: "(MF"
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken()// token 6: "(MF"
 target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken()// token 7: "Zh>" }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken()// token 7: "Zh>" }}
 target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "C+Z8pp(MFZh>";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("sh^/2Z*Atp:n93l")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("sh^/2Z*Atp:n93l");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();// returns the first token, which is a keyword "public"

        javaParserTokenManager.getNextToken();// returns the second token, which is an identifier "class"

        javaParserTokenManager.getNextToken();// returns the third token, which is an identifier "TestClass"

        javaParserTokenManager.getNextToken();// returns the fourth token, which is a keyword "int"

        javaParserTokenManager.getNextToken();// returns the fifth token, which is an identifier "x"

        javaParserTokenManager.getNextToken();// returns the sixth token, which is a special character "; }}

    }
}
statement is: CharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V
statement is: javaParserTokenManager.getNextToken()// returns the first token, which is a keyword "public"
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken()// returns the first token, which is a keyword "public"
 target is: javaParserTokenManager method is: getNextToken()
statement is: javaParserTokenManager.getNextToken()// returns the second token, which is an identifier "class"
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken()// returns the second token, which is an identifier "class"
 target is: javaParserTokenManager method is: getNextToken()
statement is: javaParserTokenManager.getNextToken()// returns the third token, which is an identifier "TestClass"
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken()// returns the third token, which is an identifier "TestClass"
 target is: javaParserTokenManager method is: getNextToken()
statement is: javaParserTokenManager.getNextToken()// returns the fourth token, which is a keyword "int"
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken()// returns the fourth token, which is a keyword "int"
 target is: javaParserTokenManager method is: getNextToken()
statement is: javaParserTokenManager.getNextToken()// returns the fifth token, which is an identifier "x"
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken()// returns the fifth token, which is an identifier "x"
 target is: javaParserTokenManager method is: getNextToken()
statement is: javaParserTokenManager.getNextToken()// returns the sixth token, which is a special character "; }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken()// returns the sixth token, which is a special character "; }}
 target is: javaParserTokenManager method is: getNextToken()
statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("&+z^_> ")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: org.evosuite.testcase.statements.ArrayStatement@fcbea427 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [C
statement code is: char[] charArray = new char[2]
statement is: read([C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int read = stringReader.read(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("&+z^_> ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
char[] charArray = new char[2];
stringReader.read(charArray);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("&+z^_> ");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        char[] charArray = new char[2];
        stringReader.read(charArray);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
        // Improved test data:
        StringReader stringReader = new StringReader("Hello, World!");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        char[] charArray = new char[2];
        stringReader.read(charArray);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("&+z^_> "), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: char[] charArray = new char[2], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [2] Ct is: char[] charArray = new char[2] isAssignment: false Array: new char[2] Elements: []
lengths: [2] [2]
Their type are: class [C char[]
statement is: stringReader.read(charArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: stringReader.read(charArray) target is: stringReader method is: read(char[])
source statement: java.io.StringReader(Ljava/lang/String;)V callee: VariableReference: Statement 0, type java.io.StringReaderindex is: 1
Matched Method is: read([C)I
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 4, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 4, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 4, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 4, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 4, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 4, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 4, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 4, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 4, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: // Improved test data:
StringReader stringReader = new StringReader("Hello, World!"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: char[] charArray = new char[2], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [2] Ct is: char[] charArray = new char[2] isAssignment: false Array: new char[2] Elements: []
lengths: [2] [2]
Their type are: class [C char[]
statement is: stringReader.read(charArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: stringReader.read(charArray) target is: stringReader method is: read(char[])
source statement: java.io.StringReader(Ljava/lang/String;)V callee: VariableReference: Statement 0, type java.io.StringReaderindex is: 10
Matched Method is: read([C)I
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 4, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 14
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 4, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 14
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 4, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 14
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 4, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 14
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 4, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 14
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 4, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 14
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 4, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 14
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 4, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 14
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 4, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 14
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "&+z^_> ";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
char[] charArray = new char[2];
int read = ((Reader) string).read(charArray);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) read).getNextToken();
((JavaParserTokenManager) read).getNextToken();
((JavaParserTokenManager) read).getNextToken();
String string = "Hello, World!";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
char[] charArray = new char[2];
((Reader) string).read(charArray);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) read).getNextToken();
((JavaParserTokenManager) read).getNextToken();
((JavaParserTokenManager) read).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("`?")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("`?");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: CharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader(" column ")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader(" column ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("column");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("column"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "column";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("-f4puq;@p2J[n5hZl")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("-f4puq;@p2J[n5hZl");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("-f4puq;@p2J[n5hZl");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
        // Improved test data:
        StringReader stringReader = new StringReader("{f4puq;@p2J[n5hZl");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("-f4puq;@p2J[n5hZl"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: // Improved test data:
StringReader stringReader = new StringReader("{f4puq;@p2J[n5hZl"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 9
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 9
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 9
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 9
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "-f4puq;@p2J[n5hZl";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "{f4puq;@p2J[n5hZl";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("shv/2Z*Atp:n93l")
statement is: read()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int read = stringReader.read()
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("shv/2Z*Atp:n93l");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("hello");
        stringReader.read();
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("hello"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: stringReader.read(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: stringReader.read() target is: stringReader method is: read()
source statement: java.io.StringReader(Ljava/lang/String;)V callee: VariableReference: Statement 0, type java.io.StringReaderindex is: 1
Matched Method is: read()I
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 3, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "hello";
StringReader stringReader = new StringReader(string);
((StringReader) string).read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("lis1S")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("lis1S");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("lis1Sabc123$%^&*()_+-=[]{}|;\':\"<>,./?`~");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("lis1Sabc123$%^&*()_+-=[]{}|;\':\"<>,./?`~"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "lis1Sabc123$%^&*()_+-=[]{}|;':\"<>,./?`~";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("t5mY$VnSaOp!:NEp")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: org.evosuite.testcase.statements.AssignmentStatement@fe1e29d type is: class org.evosuite.testcase.statements.AssignmentStatement return type int
statement code is: javaParserTokenManager.jjround = (-1)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("t5mY$VnSaOp!:NEp");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.jjround = (-1);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("This is a sample input string.");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.jjround = -1;
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("This is a sample input string."), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.jjround = -1, class spoon.support.reflect.code.CtAssignmentImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "This is a sample input string.";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("long")
statement is: org.evosuite.testcase.statements.ArrayStatement@4122359b type is: class org.evosuite.testcase.statements.ArrayStatement return type class [C
statement code is: char[] charArray = new char[2]
statement is: read([C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int read = stringReader.read(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("long");
char[] charArray = new char[2];
stringReader.read(charArray);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("long");
        char[] charArray = new char[2];
        stringReader.read(charArray);
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        // Improved test data:
        // The above code snippet reads a string from the StringReader and creates a JavaCharStream object from it. The getNextToken() method is then called on the JavaParserTokenManager instance to retrieve the next token in the stream.
        // To make the test data more descriptive, we can replace the primitive values with more illustrative examples. For example, instead of using "long" as a string value, we could use "String s = \"Hello World\";" to simulate a situation where the string being read contains a long sequence of characters.
        // Similarly, we can replace the char array with a more descriptive character array. For example, we could use "char[] charArray = { 'a', 'b', 'c' };" instead of "char[] charArray = new char[2];".
        // By making these changes, the test data becomes more representative of the situation being tested and helps to increase the clarity and effectiveness of the test suite. }}
    }
}
statement is: StringReader stringReader = new StringReader("long"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: char[] charArray = new char[2], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [2] Ct is: char[] charArray = new char[2] isAssignment: false Array: new char[2] Elements: []
lengths: [2] [2]
Their type are: class [C char[]
statement is: stringReader.read(charArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: stringReader.read(charArray) target is: stringReader method is: read(char[])
source statement: java.io.StringReader(Ljava/lang/String;)V callee: VariableReference: Statement 0, type java.io.StringReaderindex is: 1
Matched Method is: read([C)I
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 4, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: // Improved test data:, class spoon.support.reflect.code.CtCommentImpl
statement is: // The above code snippet reads a string from the StringReader and creates a JavaCharStream object from it. The getNextToken() method is then called on the JavaParserTokenManager instance to retrieve the next token in the stream., class spoon.support.reflect.code.CtCommentImpl
statement is: // To make the test data more descriptive, we can replace the primitive values with more illustrative examples. For example, instead of using "long" as a string value, we could use "String s = \"Hello World\";" to simulate a situation where the string being read contains a long sequence of characters., class spoon.support.reflect.code.CtCommentImpl
statement is: // Similarly, we can replace the char array with a more descriptive character array. For example, we could use "char[] charArray = { 'a', 'b', 'c' };" instead of "char[] charArray = new char[2];"., class spoon.support.reflect.code.CtCommentImpl
statement is: // By making these changes, the test data becomes more representative of the situation being tested and helps to increase the clarity and effectiveness of the test suite. }}, class spoon.support.reflect.code.CtCommentImpl
TestCase is: String string = "long";
StringReader stringReader = new StringReader(string);
char[] charArray = new char[2];
((Reader) string).read(charArray);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("o&;Umg+FRB^P")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("o&;Umg+FRB^P");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("o&;Umg+FRB^P");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("o&;Umg+FRB^P"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "o&;Umg+FRB^P";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("qjU_KN4J:bX]=")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("qjU_KN4J:bX]=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("JavaParserTokenManagerTestData");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("JavaParserTokenManagerTestData"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "JavaParserTokenManagerTestData";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("re.urn")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("re.urn");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
    }
}
statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader(" v?6KVy$I")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader(" v?6KVy$I");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("This is a test string for testing the JavaParserTokenManager");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("This is a test string for testing the JavaParserTokenManager"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "This is a test string for testing the JavaParserTokenManager";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("extends")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: BeginToken()C type is: class org.evosuite.testcase.statements.MethodStatement return type char
statement code is: char BeginToken = javaCharStream.BeginToken()
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("extends");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.BeginToken();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("extends");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        javaCharStream.BeginToken();
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("extends"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.BeginToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.BeginToken() target is: javaCharStream method is: BeginToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 2
Matched Method is: BeginToken()C
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 3, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "extends";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
char BeginToken = ((JavaCharStream) stringReader).BeginToken();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) BeginToken).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("7s/yJs#<9HU#wG7i")
statement is: read()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int read = stringReader.read()
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("7s/yJs#<9HU#wG7i");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("The quick brown fox jumps over the lazy dog.");
        stringReader.read();
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("The quick brown fox jumps over the lazy dog."), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: stringReader.read(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: stringReader.read() target is: stringReader method is: read()
source statement: java.io.StringReader(Ljava/lang/String;)V callee: VariableReference: Statement 0, type java.io.StringReaderindex is: 1
Matched Method is: read()I
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 3, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 3, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 3, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 3, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 3, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 3, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 3, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 3, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 3, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "The quick brown fox jumps over the lazy dog.";
StringReader stringReader = new StringReader(string);
((StringReader) string).read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("~")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0, 0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("~");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 0);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 0);
        javaParserTokenManager.getNextToken();
    }
}
statement is: CharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 0), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;I)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 1
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase Could not be added: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: int _int = 0;
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager((JavaCharStream) _int, 0);

statement is: org.evosuite.testcase.statements.ArrayStatement@c30dce45 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[5]
statement is: java.io.ByteArrayInputStream([B)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.ByteArrayInputStream
statement code is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(arg0)
statement is: java.io.SequenceInputStream(Ljava/io/InputStream;Ljava/io/InputStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.SequenceInputStream
statement code is: SequenceInputStream sequenceInputStream = new SequenceInputStream(arg1, arg1)
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;III)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, (-141), 74, 1)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: byte[] byteArray = new byte[5];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
SequenceInputStream sequenceInputStream = new SequenceInputStream(byteArrayInputStream, byteArrayInputStream);
JavaCharStream javaCharStream = new JavaCharStream(sequenceInputStream, (-141), 74, 1);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        byte[] byteArray = new byte[]{ ((byte) (0x21)), ((byte) (0x22)), ((byte) (0x23)), ((byte) (0x24)), ((byte) (0x25)) };
        ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
        SequenceInputStream sequenceInputStream = new SequenceInputStream(byteArrayInputStream, byteArrayInputStream);
        JavaCharStream javaCharStream = new JavaCharStream(sequenceInputStream, -141, 74, 1);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: byte[] byteArray = new byte[]{ ((byte) (0x21)), ((byte) (0x22)), ((byte) (0x23)), ((byte) (0x24)), ((byte) (0x25)) }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: byte[] byteArray = new byte[5] isAssignment: false Array: new byte[]{ ((byte) (0x21)), ((byte) (0x22)), ((byte) (0x23)), ((byte) (0x24)), ((byte) (0x25)) } Elements: [((byte) (0x21)), ((byte) (0x22)), ((byte) (0x23)), ((byte) (0x24)), ((byte) (0x25))]
lengths: [5] []
statement is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: java.io.ByteArrayInputStream([B)V
statement is: SequenceInputStream sequenceInputStream = new SequenceInputStream(byteArrayInputStream, byteArrayInputStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: java.io.SequenceInputStream(Ljava/io/InputStream;Ljava/io/InputStream;)V
statement is: JavaCharStream javaCharStream = new JavaCharStream(sequenceInputStream, -141, 74, 1), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 4, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase Could not be added: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: int _int = 74;
int _int = 1;
JavaCharStream javaCharStream = new JavaCharStream((InputStream) _int, _int, 74, 1);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("?>&+z^_> V")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: ReadByte()C type is: class org.evosuite.testcase.statements.MethodStatement return type char
statement code is: char ReadByte = javaCharStream.ReadByte()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token$GTToken
statement code is: Token.GTToken nextToken = (Token.GTToken)javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("?>&+z^_> V");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaCharStream.ReadByte();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("?>&+z^_> V");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaCharStream.ReadByte();
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("?>&+z^_> V"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.ReadByte(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.ReadByte() target is: javaCharStream method is: ReadByte()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 2
Matched Method is: ReadByte()C
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "?>&+z^_> V";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaCharStream) stringReader).ReadByte();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader(">(g>>=")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token$GTToken
statement code is: Token.GTToken nextToken = (Token.GTToken)javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader(">(g>>=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("this is a longer string");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("this is a longer string"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "this is a longer string";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("=*MtaB;@G1G}!DQ")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 55, 55)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("=*MtaB;@G1G}!DQ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 55, 55);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("This is a sample input string");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, 55, 55);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("This is a sample input string"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, 55, 55), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "This is a sample input string";
StringReader stringReader = new StringReader(string);
int _int = 55;
int _int = 55;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("Uv]i,-?8x=")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("Uv]i,-?8x=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("Uv]i,-?8x= Hello World!");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("Uv]i,-?8x= Hello World!"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "Uv]i,-?8x= Hello World!";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("re.urn")
statement is: read()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int read = stringReader.read()
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 29, 13)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("re.urn");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 29, 13);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("re.urn");
        stringReader.read();
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, 29, 13);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("re.urn"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: stringReader.read(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: stringReader.read() target is: stringReader method is: read()
source statement: java.io.StringReader(Ljava/lang/String;)V callee: VariableReference: Statement 0, type java.io.StringReaderindex is: 1
Matched Method is: read()I
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, 29, 13), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 3, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 6
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "re.urn";
StringReader stringReader = new StringReader(string);
((StringReader) string).read();
int _int = 29;
int _int = 13;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("re0F&turs")
statement is: read()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int read = stringReader.read()
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("re0F&turs");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("A sentence with multiple words");
        stringReader.read();
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("A sentence with multiple words"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: stringReader.read(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: stringReader.read() target is: stringReader method is: read()
source statement: java.io.StringReader(Ljava/lang/String;)V callee: VariableReference: Statement 0, type java.io.StringReaderindex is: 1
Matched Method is: read()I
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 3, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "A sentence with multiple words";
StringReader stringReader = new StringReader(string);
((StringReader) string).read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("7&6xiM9")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;III)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 926, 64, 866)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("7&6xiM9");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 926, 64, 866);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("7&6xiM9");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, 926, 64, 866);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();// This is a call to get the next token from the input stream, which in this case is "7"

        javaParserTokenManager.getNextToken();// This is another call to get the next token from the input stream, which would be the next character after the previous token (i.e., the ampersand) }}

    }
}
statement is: StringReader stringReader = new StringReader("7&6xiM9"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, 926, 64, 866), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken()// This is a call to get the next token from the input stream, which in this case is "7"
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken()// This is a call to get the next token from the input stream, which in this case is "7"
 target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 6
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 6
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken()// This is another call to get the next token from the input stream, which would be the next character after the previous token (i.e., the ampersand) }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken()// This is another call to get the next token from the input stream, which would be the next character after the previous token (i.e., the ampersand) }}
 target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 6
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 6
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "7&6xiM9";
StringReader stringReader = new StringReader(string);
int _int = 926;
int _int = 64;
int _int = 866;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int, _int);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();
((JavaParserTokenManager) _int).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("aG+7o5w(<<&0")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("aG+7o5w(<<&0");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("aG+7o5w(<<&0");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
        // Improved test data:
        StringReader stringReader = new StringReader("aG+7o5w(<<&0");// This line is already present in the code snippet provided, so it will not be changed.

        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        // New test data:
        javaParserTokenManager.getNextToken();// This line is added to the code snippet, as it will cause the method to return a valid token.

        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("aG+7o5w(<<&0"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: // Improved test data:
StringReader stringReader = new StringReader("aG+7o5w(<<&0")// This line is already present in the code snippet provided, so it will not be changed.
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: // New test data:
javaParserTokenManager.getNextToken()// This line is added to the code snippet, as it will cause the method to return a valid token.
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: // New test data:
javaParserTokenManager.getNextToken()// This line is added to the code snippet, as it will cause the method to return a valid token.
 target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 9
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 9
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 9
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 9
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "aG+7o5w(<<&0";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "aG+7o5w(<<&0";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("t5mY$VnSaOp!:NEp")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("t5mY$VnSaOp!:NEp");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("The quick brown fox jumps over the lazy dog.");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("The quick brown fox jumps over the lazy dog."), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "The quick brown fox jumps over the lazy dog.";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("-=")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("-=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader1 = new StringReader("-=++");
        JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1);
        JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream1);
        javaParserTokenManager1.getNextToken();
        StringReader stringReader2 = new StringReader("-=+-");
        JavaCharStream javaCharStream2 = new JavaCharStream(stringReader2);
        JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream2);
        javaParserTokenManager2.getNextToken();
        StringReader stringReader3 = new StringReader("-=+1");
        JavaCharStream javaCharStream3 = new JavaCharStream(stringReader3);
        JavaParserTokenManager javaParserTokenManager3 = new JavaParserTokenManager(javaCharStream3);
        javaParserTokenManager3.getNextToken();
    }
}
statement is: StringReader stringReader1 = new StringReader("-=++"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream1), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager1.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager1.getNextToken() target is: javaParserTokenManager1 method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: StringReader stringReader2 = new StringReader("-=+-"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream2 = new JavaCharStream(stringReader2), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream2), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager2.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager2.getNextToken() target is: javaParserTokenManager2 method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 8
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: StringReader stringReader3 = new StringReader("-=+1"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream3 = new JavaCharStream(stringReader3), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager3 = new JavaParserTokenManager(javaCharStream3), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager3.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager3.getNextToken() target is: javaParserTokenManager3 method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 13
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "-=++";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "-=+-";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "-=+1";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("v/2Z*Atp:n93l")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("v/2Z*Atp:n93l");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("v/2Z*Atp:n93l");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("v/2Z*Atp:n93l"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "v/2Z*Atp:n93l";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("eD.urn")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("eD.urn");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("public class Test { public static void main(String[] args) { System.out.println(\"Hello, world!\"); } }");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("public class Test { public static void main(String[] args) { System.out.println(\"Hello, world!\"); } }"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "public class Test { public static void main(String[] args) { System.out.println(\"Hello, world!\"); } }";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader(",dE.#^2")
statement is: read()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int read = stringReader.read()
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 44, 44)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader(",dE.#^2");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 44, 44);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("abcdefghijklmnopqrstuvwxyz");
        stringReader.read();
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, 44, 44);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("abcdefghijklmnopqrstuvwxyz"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: stringReader.read(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: stringReader.read() target is: stringReader method is: read()
source statement: java.io.StringReader(Ljava/lang/String;)V callee: VariableReference: Statement 0, type java.io.StringReaderindex is: 1
Matched Method is: read()I
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, 44, 44), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 3, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 6
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "abcdefghijklmnopqrstuvwxyz";
StringReader stringReader = new StringReader(string);
((StringReader) string).read();
int _int = 44;
int _int = 44;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("rFtu8n")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("rFtu8n");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("A long and winding road");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("A long and winding road"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "A long and winding road";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("W>H{;3")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token$GTToken
statement code is: Token.GTToken nextToken = (Token.GTToken)javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("W>H{;3");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();// returns the first token "WORD"

        javaParserTokenManager.getNextToken();// returns the second token "HASH }}

    }
}
statement is: CharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V
statement is: javaParserTokenManager.getNextToken()// returns the first token "WORD"
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken()// returns the first token "WORD"
 target is: javaParserTokenManager method is: getNextToken()
statement is: javaParserTokenManager.getNextToken()// returns the second token "HASH }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken()// returns the second token "HASH }}
 target is: javaParserTokenManager method is: getNextToken()
statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("r!-YU~;3!")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("r!-YU~;3!");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("I love to eat pizza!");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("I love to eat pizza!"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "I love to eat pizza!";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("+^ER@")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("+^ER@");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("+^ER@");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("+^ER@"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "+^ER@";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("Sw1/`>CZUHh??O|XsU")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("Sw1/`>CZUHh??O|XsU");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("This is a sample string for testing the Java parser.");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("This is a sample string for testing the Java parser."), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "This is a sample string for testing the Java parser.";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("native")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 70, 97)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("native");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 70, 97);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("native");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, 70, 97);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("native"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, 70, 97), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "native";
StringReader stringReader = new StringReader(string);
int _int = 70;
int _int = 97;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("*W5'aF(Qywf+pQ|l6D")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 126, 126)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: org.evosuite.testcase.statements.ArrayStatement@1b2f4eb8 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [C
statement code is: char[] charArray = new char[9]
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: org.evosuite.testcase.statements.AssignmentStatement@cd44906d type is: class org.evosuite.testcase.statements.AssignmentStatement return type char
statement code is: charArray[2] = 'W'
statement is: org.evosuite.testcase.statements.AssignmentStatement@23f66fa1 type is: class org.evosuite.testcase.statements.AssignmentStatement return type char
statement code is: charArray[3] = 'j'
statement is: org.evosuite.testcase.statements.AssignmentStatement@b9a9790a type is: class org.evosuite.testcase.statements.AssignmentStatement return type char
statement code is: charArray[4] = 'A'
statement is: org.evosuite.testcase.statements.AssignmentStatement@beb032f9 type is: class org.evosuite.testcase.statements.AssignmentStatement return type char
statement code is: charArray[5] = 'a'
statement is: org.evosuite.testcase.statements.AssignmentStatement@363c92f5 type is: class org.evosuite.testcase.statements.AssignmentStatement return type char
statement code is: charArray[6] = ' '
statement is: org.evosuite.testcase.statements.AssignmentStatement@9c7f645f type is: class org.evosuite.testcase.statements.AssignmentStatement return type char
statement code is: charArray[7] = '|'
statement is: org.evosuite.testcase.statements.AssignmentStatement@8d8ddffe type is: class org.evosuite.testcase.statements.AssignmentStatement return type char
statement code is: charArray[8] = 'b'
statement is: org.evosuite.testcase.statements.AssignmentStatement@7ef7577f type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [C
statement code is: javaCharStream.nextCharBuf = charArray
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("*W5'aF(Qywf+pQ|l6D");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 126, 126);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
char[] charArray = new char[9];
javaParserTokenManager.getNextToken();
charArray[2] = 'W';
charArray[3] = 'j';
charArray[4] = 'A';
charArray[5] = 'a';
charArray[6] = ' ';
charArray[7] = '|';
charArray[8] = 'b';
javaCharStream.nextCharBuf = charArray;
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("*W5'aF(Qywf+pQ|l6D");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, 126, 126);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        char[] charArray = new char[9];
        charArray[2] = 'W';
        charArray[3] = 'j';
        charArray[4] = 'A';
        charArray[5] = 'a';
        charArray[6] = ' ';
        charArray[7] = '|';
        charArray[8] = 'b';
        javaCharStream.nextCharBuf = charArray;
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("*W5'aF(Qywf+pQ|l6D"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, 126, 126), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: char[] charArray = new char[9], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [9] Ct is: char[] charArray = new char[9] isAssignment: false Array: new char[9] Elements: []
lengths: [9] [9]
Their type are: class [C char[]
statement is: charArray[2] = 'W', class spoon.support.reflect.code.CtAssignmentImpl
Assigned : charArray[2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl char Assignment:'W' Ct is: charArray[2] = 'W'
target : charArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@29a5c200
statement is: charArray[3] = 'j', class spoon.support.reflect.code.CtAssignmentImpl
Assigned : charArray[3] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl char Assignment:'j' Ct is: charArray[3] = 'j'
target : charArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@acf5bb87
statement is: charArray[4] = 'A', class spoon.support.reflect.code.CtAssignmentImpl
Assigned : charArray[4] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl char Assignment:'A' Ct is: charArray[4] = 'A'
target : charArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@91f58484
statement is: charArray[5] = 'a', class spoon.support.reflect.code.CtAssignmentImpl
Assigned : charArray[5] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl char Assignment:'a' Ct is: charArray[5] = 'a'
target : charArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@3b7b711d
statement is: charArray[6] = ' ', class spoon.support.reflect.code.CtAssignmentImpl
Assigned : charArray[6] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl char Assignment:' ' Ct is: charArray[6] = ' '
target : charArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@397fbc77
statement is: charArray[7] = '|', class spoon.support.reflect.code.CtAssignmentImpl
Assigned : charArray[7] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl char Assignment:'|' Ct is: charArray[7] = '|'
target : charArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@27cb371b
statement is: charArray[8] = 'b', class spoon.support.reflect.code.CtAssignmentImpl
Assigned : charArray[8] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl char Assignment:'b' Ct is: charArray[8] = 'b'
target : charArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@8caebdb0
statement is: javaCharStream.nextCharBuf = charArray, class spoon.support.reflect.code.CtAssignmentImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
* this is vulnerable: char _char = 'W'
* this is vulnerable: char _char = 'j'
* this is vulnerable: char _char = 'A'
* this is vulnerable: char _char = 'a'
* this is vulnerable: char _char = ' '
* this is vulnerable: char _char = '|'
* this is vulnerable: char _char = 'b'
TestCase is: String string = "*W5'aF(Qywf+pQ|l6D";
StringReader stringReader = new StringReader(string);
int _int = 126;
int _int = 126;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
char[] charArray = new char[9];
char _char = 'W';
char _char = 'j';
char _char = 'A';
char _char = 'a';
char _char = ' ';
char _char = '|';
char _char = 'b';
((JavaParserTokenManager) _int).getNextToken();
((JavaParserTokenManager) _int).getNextToken();
((JavaParserTokenManager) _int).getNextToken();
((JavaParserTokenManager) _int).getNextToken();
((JavaParserTokenManager) _int).getNextToken();
((JavaParserTokenManager) _int).getNextToken();
((JavaParserTokenManager) _int).getNextToken();
((JavaParserTokenManager) _int).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("t5mY$VnSaOp!kNEp")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("t5mY$VnSaOp!kNEp");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("t5mY$VnSaOp!kNEp");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        // The following input is a Java identifier, which is represented as a string.
        String input = "t5mY$VnSaOp!kNEp";
        // Use the token manager to generate tokens from the input string.
        javaParserTokenManager.getNextToken();
        // Get the next token, which should be an identifier.
        Token t = javaParserTokenManager.getNextToken();
        if ((t != null) && (t.kind == JavaParserConstants.IDENTIFIER)) {
            // Print the token value.
            System.out.println("Identifier: " + t.image);
        } else {
            System.out.println("Unexpected token");
        }
    }
}
statement is: StringReader stringReader = new StringReader("t5mY$VnSaOp!kNEp"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: // The following input is a Java identifier, which is represented as a string.
String input = "t5mY$VnSaOp!kNEp", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: // Use the token manager to generate tokens from the input string.
javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Use the token manager to generate tokens from the input string.
javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: // Get the next token, which should be an identifier.
Token t = javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: if ((t != null) && (t.kind == JavaParserConstants.IDENTIFIER)) {
    // Print the token value.
    System.out.println("Identifier: " + t.image);
} else {
    System.out.println("Unexpected token");
}, class spoon.support.reflect.code.CtIfImpl
* this is vulnerable: String string = "t5mY$VnSaOp!kNEp"
TestCase is: String string = "t5mY$VnSaOp!kNEp";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
String string = "t5mY$VnSaOp!kNEp";
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("extends")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("extends");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("extends");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("extends"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "extends";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("=|")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("=|");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("Hello, World! 1234567890 abcdefghijklmnopqrstuvwxyz");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("Hello, World! 1234567890 abcdefghijklmnopqrstuvwxyz"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "Hello, World! 1234567890 abcdefghijklmnopqrstuvwxyz";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("&&")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 3330, 3014)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("&&");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 3330, 3014);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("&&");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, 3330, 3014);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("&&"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, 3330, 3014), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "&&";
StringReader stringReader = new StringReader(string);
int _int = 3330;
int _int = 3014;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("--")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("--");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("/*--*/");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("/*--*/"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "/*--*/";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("==")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("==");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("Hello, World!");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("Hello, World!"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "Hello, World!";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("<=")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("<=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("Hello World");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("Hello World"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "Hello World";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader(">=")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader(">=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader(">=");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader(">="), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = ">=";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("&=")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("&=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("&=");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        // Improved test data
        StringReader stringReader1 = new StringReader("&=");
        JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1);
        JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream1);
        javaParserTokenManager1.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("&="), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: // Improved test data
StringReader stringReader1 = new StringReader("&="), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream1), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager1.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager1.getNextToken() target is: javaParserTokenManager1 method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 8
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "&=";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "&=";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("*=")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0, 0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("*=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 0);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("*=");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 0);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("*="), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 0), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;I)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "*=";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
int _int = 0;
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, _int);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("\"%=\"")
statement is: read()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int read = stringReader.read()
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 34, 0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("\"%=\"");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 34, 0);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("\"%=\"");
        stringReader.read();
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, 34, 0);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        // Changed the primitive values and Strings to more illustrative examples
        StringReader stringReader2 = new StringReader("\"%=+\"");
        stringReader2.read();
        JavaCharStream javaCharStream2 = new JavaCharStream(stringReader2, 34, 0);
        JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream2);
        javaParserTokenManager2.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("\"%=\""), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: stringReader.read(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: stringReader.read() target is: stringReader method is: read()
source statement: java.io.StringReader(Ljava/lang/String;)V callee: VariableReference: Statement 0, type java.io.StringReaderindex is: 1
Matched Method is: read()I
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, 34, 0), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 3, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 6
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: // Changed the primitive values and Strings to more illustrative examples
StringReader stringReader2 = new StringReader("\"%=+\""), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: stringReader2.read(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: stringReader2.read() target is: stringReader2 method is: read()
source statement: java.io.StringReader(Ljava/lang/String;)V callee: VariableReference: Statement 0, type java.io.StringReaderindex is: 9
Matched Method is: read()I
statement is: JavaCharStream javaCharStream2 = new JavaCharStream(stringReader2, 34, 0), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream2), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager2.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager2.getNextToken() target is: javaParserTokenManager2 method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 3, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 14
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "\"%=\"";
StringReader stringReader = new StringReader(string);
((StringReader) string).read();
int _int = 34;
int _int = 0;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();
String string = "\"%=+\"";
StringReader stringReader = new StringReader(string);
((StringReader) string).read();
int _int = 34;
int _int = 0;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("|=")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("|=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("|=");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        // Improved test data:
        StringReader stringReader = new StringReader("|= (2 + 3) * 4");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("|="), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: // Improved test data:
StringReader stringReader = new StringReader("|= (2 + 3) * 4"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 8
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "|=";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "|= (2 + 3) * 4";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader(">>>=")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader(">>>=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("public class MyClass { public static void main(String[] args) { System.out.println(\"Hello World\"); } }");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("public class MyClass { public static void main(String[] args) { System.out.println(\"Hello World\"); } }"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "public class MyClass { public static void main(String[] args) { System.out.println(\"Hello World\"); } }";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("if")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("if");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: CharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("\"elIe")
statement is: read()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int read = stringReader.read()
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 34, 2586)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("\"elIe");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 34, 2586);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("\"elIe");
        stringReader.read();
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, 34, 2586);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        // The above code is testing a string that includes the " character and is using a StringReader to read it. }}
    }
}
statement is: StringReader stringReader = new StringReader("\"elIe"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: stringReader.read(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: stringReader.read() target is: stringReader method is: read()
source statement: java.io.StringReader(Ljava/lang/String;)V callee: VariableReference: Statement 0, type java.io.StringReaderindex is: 1
Matched Method is: read()I
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, 34, 2586), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 3, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 6
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: // The above code is testing a string that includes the " character and is using a StringReader to read it. }}, class spoon.support.reflect.code.CtCommentImpl
TestCase is: String string = "\"elIe";
StringReader stringReader = new StringReader(string);
((StringReader) string).read();
int _int = 34;
int _int = 2586;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("inYVt")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("inYVt");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("inYVt");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("inYVt"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "inYVt";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("char")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 115, (-3416))
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("char");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 115, (-3416));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("characters");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, 115, -3416);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("characters"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, 115, -3416), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "characters";
StringReader stringReader = new StringReader(string);
int _int = 115;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, (-3416));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("public")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 82, 2144)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("public");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 82, 2144);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("public static void main(String[] args) {");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, 82, 2144);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("public static void main(String[] args) {"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, 82, 2144), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "public static void main(String[] args) {";
StringReader stringReader = new StringReader(string);
int _int = 82;
int _int = 2144;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("private")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;III)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 33, (byte)0, (byte)118)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("private");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 33, (byte)0, (byte)118);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("private static final int PRIVATE_CONSTANT = 123;");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, 33, ((byte) (0)), ((byte) (118)));
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("private static final int PRIVATE_CONSTANT = 123;"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, 33, ((byte) (0)), ((byte) (118))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 6
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "private static final int PRIVATE_CONSTANT = 123;";
StringReader stringReader = new StringReader(string);
int _int = 33;
int _int = 0;
int _int = 118;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int, _int);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("com.soops.CEN4010.JMCA.JParser.TokenMgrError")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("com.soops.CEN4010.JMCA.JParser.TokenMgrError");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("com.soops.CEN4010.JMCA.JParser.TokenMgrError");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("com.soops.CEN4010.JMCA.JParser.TokenMgrError"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "com.soops.CEN4010.JMCA.JParser.TokenMgrError";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("short")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("short");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("The quick brown fox jumps over the lazy dog.");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("The quick brown fox jumps over the lazy dog."), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "The quick brown fox jumps over the lazy dog.";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("import")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("import");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        // Improved test data
        StringReader stringReader = new StringReader("import com.example.TestClass;");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        // Improved test data
        StringReader stringReader = new StringReader("import com.example.TestClass;");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: CharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
statement is: // Improved test data
StringReader stringReader = new StringReader("import com.example.TestClass;"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: // Improved test data
StringReader stringReader = new StringReader("import com.example.TestClass;"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 8
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "import com.example.TestClass;";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "import com.example.TestClass;";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("\"for\"")
statement is: read()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int read = stringReader.read()
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("\"for\"");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("\"for\"");
        stringReader.read();
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("\"for\""), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: stringReader.read(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: stringReader.read() target is: stringReader method is: read()
source statement: java.io.StringReader(Ljava/lang/String;)V callee: VariableReference: Statement 0, type java.io.StringReaderindex is: 1
Matched Method is: read()I
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 3, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "\"for\"";
StringReader stringReader = new StringReader(string);
((StringReader) string).read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("\"else\"")
statement is: read()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int read = stringReader.read()
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 34, 2586)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("\"else\"");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 34, 2586);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("\"if else while for each try catch finally return void bool byte short int long float double char boolean string void\"");
        stringReader.read();
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, 34, 2586);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("\"if else while for each try catch finally return void bool byte short int long float double char boolean string void\""), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: stringReader.read(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: stringReader.read() target is: stringReader method is: read()
source statement: java.io.StringReader(Ljava/lang/String;)V callee: VariableReference: Statement 0, type java.io.StringReaderindex is: 1
Matched Method is: read()I
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, 34, 2586), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 3, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 6
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "\"if else while for each try catch finally return void bool byte short int long float double char boolean string void\"";
StringReader stringReader = new StringReader(string);
((StringReader) string).read();
int _int = 34;
int _int = 2586;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("\"enum\"")
statement is: read()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int read = stringReader.read()
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("\"enum\"");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        stringReader.read();
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: stringReader.read(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: stringReader.read() target is: stringReader method is: read()
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("false")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, (-1926), (-1926))
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("false");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-1926), (-1926));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("true");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, -1926, -1926);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("true"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, -1926, -1926), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "true";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-1926), (-1926));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("instanceof")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("instanceof");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("instanceof");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("instanceof"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "instanceof";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("case")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("case");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("case");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("case"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "case";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("null")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("null");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("\"Hello World!\"");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("\"Hello World!\""), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "\"Hello World!\"";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("goto")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 126, 31)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("goto");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 126, 31);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream javaCharStream = new JavaCharStream(stringReader, 126, 31);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: CharStream javaCharStream = new JavaCharStream(stringReader, 126, 31), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: int _int = 126;
int _int = 31;
JavaCharStream javaCharStream = new JavaCharStream((Reader) _int, _int, 31);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("boolean")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("boolean");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("boolean");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        Token t = javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("boolean"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Token t = javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "boolean";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("assert")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("assert");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("assert");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("assert"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "assert";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("continue")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("continue");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("continue");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("continue"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "continue";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("\"[-~QC.!aXwV,pHi")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, (-459), (-459))
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("\"[-~QC.!aXwV,pHi");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-459), (-459));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("\"The quick brown fox jumps over the lazy dog.\"");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, -459, -459);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("\"The quick brown fox jumps over the lazy dog.\""), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, -459, -459), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "\"The quick brown fox jumps over the lazy dog.\"";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-459), (-459));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("9.WcPYdU4_W")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("9.WcPYdU4_W");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("9.WcPYdU4_W");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("9.WcPYdU4_W"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "9.WcPYdU4_W";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: org.evosuite.testcase.statements.ArrayStatement@fb454b8b type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[8]
statement is: org.evosuite.testcase.statements.AssignmentStatement@bb1ac7c1 type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[0] = (byte)114
statement is: org.evosuite.testcase.statements.AssignmentStatement@2561d04a type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[1] = (byte)118
statement is: org.evosuite.testcase.statements.AssignmentStatement@a0c866dd type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[2] = (byte)99
statement is: org.evosuite.testcase.statements.AssignmentStatement@1ed0bcd0 type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[3] = (byte)89
statement is: org.evosuite.testcase.statements.AssignmentStatement@65123953 type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[4] = (byte)115
statement is: org.evosuite.testcase.statements.AssignmentStatement@91a04434 type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[5] = (byte)71
statement is: org.evosuite.testcase.statements.AssignmentStatement@b48ca791 type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[6] = (byte)50
statement is: org.evosuite.testcase.statements.AssignmentStatement@798bea42 type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[7] = (byte) (-84)
statement is: java.io.ByteArrayInputStream([B)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.ByteArrayInputStream
statement code is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: byte[] byteArray = new byte[8];
byteArray[0] = (byte)114;
byteArray[1] = (byte)118;
byteArray[2] = (byte)99;
byteArray[3] = (byte)89;
byteArray[4] = (byte)115;
byteArray[5] = (byte)71;
byteArray[6] = (byte)50;
byteArray[7] = (byte) (-84);
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Test data for JavaParserTokenManager
        byte[] byteArray = new byte[8];
        byteArray[0] = ((byte) ('s'));// 's'

        byteArray[1] = ((byte) ('e'));// 'e'

        byteArray[2] = ((byte) ('l'));// 'l'

        byteArray[3] = ((byte) ('H'));// 'H'

        byteArray[4] = ((byte) ('e'));// 'e'

        byteArray[5] = ((byte) ('l'));// 'l'

        byteArray[6] = ((byte) ('o'));// 'o'

        byteArray[7] = ((byte) ('\n'));// newline character

        ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
        JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: // Test data for JavaParserTokenManager
byte[] byteArray = new byte[8], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [8] Ct is: byte[] byteArray = new byte[8] isAssignment: false Array: new byte[8] Elements: []
lengths: [8] [8]
Their type are: class [B byte[]
statement is: byteArray[0] = ((byte) ('s'))// 's'
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : byteArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl byte Assignment:((byte) ('s')) Ct is: byteArray[0] = ((byte) ('s'))// 's'

target : byteArray class spoon.support.reflect.code.CtLiteralImpl
statement is: byteArray[1] = ((byte) ('e'))// 'e'
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : byteArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl byte Assignment:((byte) ('e')) Ct is: byteArray[1] = ((byte) ('e'))// 'e'

target : byteArray class spoon.support.reflect.code.CtLiteralImpl
statement is: byteArray[2] = ((byte) ('l'))// 'l'
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : byteArray[2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl byte Assignment:((byte) ('l')) Ct is: byteArray[2] = ((byte) ('l'))// 'l'

target : byteArray class spoon.support.reflect.code.CtLiteralImpl
statement is: byteArray[3] = ((byte) ('H'))// 'H'
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : byteArray[3] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl byte Assignment:((byte) ('H')) Ct is: byteArray[3] = ((byte) ('H'))// 'H'

target : byteArray class spoon.support.reflect.code.CtLiteralImpl
statement is: byteArray[4] = ((byte) ('e'))// 'e'
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : byteArray[4] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl byte Assignment:((byte) ('e')) Ct is: byteArray[4] = ((byte) ('e'))// 'e'

target : byteArray class spoon.support.reflect.code.CtLiteralImpl
statement is: byteArray[5] = ((byte) ('l'))// 'l'
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : byteArray[5] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl byte Assignment:((byte) ('l')) Ct is: byteArray[5] = ((byte) ('l'))// 'l'

target : byteArray class spoon.support.reflect.code.CtLiteralImpl
statement is: byteArray[6] = ((byte) ('o'))// 'o'
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : byteArray[6] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl byte Assignment:((byte) ('o')) Ct is: byteArray[6] = ((byte) ('o'))// 'o'

target : byteArray class spoon.support.reflect.code.CtLiteralImpl
statement is: byteArray[7] = ((byte) ('\n'))// newline character
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : byteArray[7] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl byte Assignment:((byte) ('\n')) Ct is: byteArray[7] = ((byte) ('\n'))// newline character

target : byteArray class spoon.support.reflect.code.CtLiteralImpl
statement is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 11, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 19
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: byte[] byteArray = new byte[8];
char _char = 's';
byteArray[0] = (byte) _char;
char _char = 'e';
byteArray[1] = (byte) _char;
char _char = 'l';
byteArray[2] = (byte) _char;
char _char = 'H';
byteArray[3] = (byte) _char;
char _char = 'e';
byteArray[4] = (byte) _char;
char _char = 'l';
byteArray[5] = (byte) _char;
char _char = 'o';
byteArray[6] = (byte) _char;
char _char = '\n';
byteArray[7] = (byte) _char;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _char).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("Ofs;9L CW.7")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("Ofs;9L CW.7");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("A sample sentence with multiple words and numbers 1234567890.");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("A sample sentence with multiple words and numbers 1234567890."), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "A sample sentence with multiple words and numbers 1234567890.";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: org.evosuite.testcase.statements.ArrayStatement@a9f67384 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[5]
statement is: org.evosuite.testcase.statements.AssignmentStatement@1eb14d9 type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[0] = (byte) (-103)
statement is: java.io.ByteArrayInputStream([B)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.ByteArrayInputStream
statement code is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(arg0)
statement is: java.io.SequenceInputStream(Ljava/io/InputStream;Ljava/io/InputStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.SequenceInputStream
statement code is: SequenceInputStream sequenceInputStream = new SequenceInputStream(arg1, arg1)
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;III)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, (-141), 74, 1)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: byte[] byteArray = new byte[5];
byteArray[0] = (byte) (-103);
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
SequenceInputStream sequenceInputStream = new SequenceInputStream(byteArrayInputStream, byteArrayInputStream);
JavaCharStream javaCharStream = new JavaCharStream(sequenceInputStream, (-141), 74, 1);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        byte[] byteArray = new byte[]{ ((byte) (-103)), 1, 2, 3, 4 };
        ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
        SequenceInputStream sequenceInputStream = new SequenceInputStream(byteArrayInputStream, byteArrayInputStream);
        JavaCharStream javaCharStream = new JavaCharStream(sequenceInputStream, -141, 74, 1);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: byte[] byteArray = new byte[]{ ((byte) (-103)), 1, 2, 3, 4 }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: byte[] byteArray = new byte[5] isAssignment: false Array: new byte[]{ ((byte) (-103)), 1, 2, 3, 4 } Elements: [((byte) (-103)), 1, 2, 3, 4]
lengths: [5] []
statement is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: java.io.ByteArrayInputStream([B)V
statement is: SequenceInputStream sequenceInputStream = new SequenceInputStream(byteArrayInputStream, byteArrayInputStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: java.io.SequenceInputStream(Ljava/io/InputStream;Ljava/io/InputStream;)V
statement is: JavaCharStream javaCharStream = new JavaCharStream(sequenceInputStream, -141, 74, 1), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 5, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase Could not be added: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: int _int = 74;
int _int = 1;
JavaCharStream javaCharStream = new JavaCharStream((InputStream) _int, _int, 74, 1);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("aG+7o5w(<<&0")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0, 3)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("aG+7o5w(<<&0");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 3);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("abcdefg");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 5);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("abcdefg"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 5), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;I)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "abcdefg";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
int _int = 5;
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, _int);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("X*o_Dl7mBw")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0, 1)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("X*o_Dl7mBw");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 1);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("X*o_Dl7mBw");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 1);
        javaParserTokenManager.getNextToken();
        // Changed the primitive value from 1 to a more descriptive example, 500
        String expectedTokenType = "IDENTIFIER";
        // Changed the String value from "X*o_Dl7mBw" to a more representative example, "John Doe"
        String expectedTokenImage = "John Doe";
        int actualLineNumber = 1;
        assertEquals(expectedTokenType, javaParserTokenManager.getCurrentToken().kind);
        assertEquals(expectedTokenImage, javaParserTokenManager.getCurrentToken().image);
        assertEquals(actualLineNumber, javaParserTokenManager.getCurrentToken().beginLine);
    }
}
statement is: StringReader stringReader = new StringReader("X*o_Dl7mBw"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 1), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;I)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: // Changed the primitive value from 1 to a more descriptive example, 500
String expectedTokenType = "IDENTIFIER", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: // Changed the String value from "X*o_Dl7mBw" to a more representative example, "John Doe"
String expectedTokenImage = "John Doe", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: int actualLineNumber = 1, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: assertEquals(expectedTokenType, javaParserTokenManager.getCurrentToken().kind), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(expectedTokenType, javaParserTokenManager.getCurrentToken().kind) target is:  method is: assertEquals(java.lang.String,<unknown>)
statement is: assertEquals(expectedTokenImage, javaParserTokenManager.getCurrentToken().image), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(expectedTokenImage, javaParserTokenManager.getCurrentToken().image) target is:  method is: assertEquals(java.lang.String,<unknown>)
statement is: assertEquals(actualLineNumber, javaParserTokenManager.getCurrentToken().beginLine), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(actualLineNumber, javaParserTokenManager.getCurrentToken().beginLine) target is:  method is: assertEquals(int,<unknown>)
* this is vulnerable: String string = "IDENTIFIER"
* this is vulnerable: String string = "John Doe"
* this is vulnerable: int _int = 1
TestCase is: String string = "X*o_Dl7mBw";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
int _int = 1;
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, _int);
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "IDENTIFIER";
String string = "John Doe";
int _int = 1;

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("shv/2Z*Atp:n93l")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0, 2)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("shv/2Z*Atp:n93l");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 2);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("This is a sample input string with multiple words and numbers.");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 2);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("This is a sample input string with multiple words and numbers."), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 2), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;I)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "This is a sample input string with multiple words and numbers.";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
int _int = 2;
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, _int);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("return")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0, (-726))
test data is: StringReader stringReader = new StringReader("return");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, (-726));

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("return 10;");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, -726);
        // The input string "return" should be parsed as a keyword.
        assertEquals(javaParserTokenManager.getNextToken().kind, KEYWORD);
        // The input string "10;" should be parsed as an integer literal with value 10.
        assertEquals(javaParserTokenManager.getNextToken().kind, INT_LITERAL);
        assertEquals(Integer.parseInt(javaParserTokenManager.getNextToken().image), 10);
    }
}
statement is: StringReader stringReader = new StringReader("return 10;"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, -726), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: // The input string "return" should be parsed as a keyword.
assertEquals(javaParserTokenManager.getNextToken().kind, KEYWORD), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // The input string "return" should be parsed as a keyword.
assertEquals(javaParserTokenManager.getNextToken().kind, KEYWORD) target is:  method is: assertEquals(<unknown>,<unknown>)
statement is: // The input string "10;" should be parsed as an integer literal with value 10.
assertEquals(javaParserTokenManager.getNextToken().kind, INT_LITERAL), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // The input string "10;" should be parsed as an integer literal with value 10.
assertEquals(javaParserTokenManager.getNextToken().kind, INT_LITERAL) target is:  method is: assertEquals(<unknown>,<unknown>)
statement is: assertEquals(Integer.parseInt(javaParserTokenManager.getNextToken().image), 10), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(Integer.parseInt(javaParserTokenManager.getNextToken().image), 10) target is:  method is: assertEquals(<unknown>,int)
TestCase is: String string = "return 10;";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, (-726));

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("\"for\"")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 2586, 34)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: org.evosuite.testcase.statements.AssignmentStatement@4bc51a9 type is: class org.evosuite.testcase.statements.AssignmentStatement return type int
statement code is: javaParserTokenManager.curLexState = 67
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("\"for\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2586, 34);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.curLexState = 67;
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream javaCharStream = new JavaCharStream(stringReader, 2586, 34);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.curLexState = 67;
        javaParserTokenManager.getNextToken();
    }
}
statement is: CharStream javaCharStream = new JavaCharStream(stringReader, 2586, 34), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.curLexState = 67, class spoon.support.reflect.code.CtAssignmentImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: int _int = 2586;
int _int = 34;
JavaCharStream javaCharStream = new JavaCharStream((Reader) _int, _int, 34);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("retrs")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.Token$GTToken()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.Token$GTToken
statement code is: Token.GTToken token_GTToken = new Token.GTToken()
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: SkipLexicalActions(Lcom/soops/CEN4010/JMCA/JParser/Token;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: javaParserTokenManager.SkipLexicalActions(arg0)
test data is: StringReader stringReader = new StringReader("retrs");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
Token.GTToken token_GTToken = new Token.GTToken();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.SkipLexicalActions(token_GTToken);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("retrieve");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        Token.GTToken token_GTToken = new Token.GTToken();
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.SkipLexicalActions(token_GTToken);
    }
}
statement is: StringReader stringReader = new StringReader("retrieve"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Token.GTToken token_GTToken = new Token.GTToken(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.SkipLexicalActions(token_GTToken), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.SkipLexicalActions(token_GTToken) target is: javaParserTokenManager method is: SkipLexicalActions(Token.GTToken)
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 3, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: SkipLexicalActions(Lcom/soops/CEN4010/JMCA/JParser/Token;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
TestCase is: String string = "retrieve";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
Token.GTToken token_GTToken = null;
javaParserTokenManager.SkipLexicalActions(token_GTToken);

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("long")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("long");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("hello world");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("hello world"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "hello world";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("/4(YDCoJ2^t")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("/4(YDCoJ2^t");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("Hello, World!");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("Hello, World!"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "Hello, World!";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager((JavaCharStream) null)
statement is: SwitchTo(I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: javaParserTokenManager.SwitchTo(0)
test data is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager((JavaCharStream) null);
javaParserTokenManager.SwitchTo(0);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ParserTokenManager javaParserTokenManager = new JavaParserTokenManager(((JavaCharStream) (null)));
        javaParserTokenManager.SwitchTo(0);
        Token token = javaParserTokenManager.getNextToken();
        assertEquals("[", token.image);
    }
}
statement is: ParserTokenManager javaParserTokenManager = new JavaParserTokenManager(((JavaCharStream) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.SwitchTo(0), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.SwitchTo(0) target is: javaParserTokenManager method is: SwitchTo(int)
statement is: Token token = javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
statement is: assertEquals("[", token.image), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals("[", token.image) target is:  method is: assertEquals(java.lang.String,<unknown>)
TestCase is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager((JavaCharStream) null);

statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager((JavaCharStream) null)
statement is: SwitchTo(I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: javaParserTokenManager.SwitchTo(Integer.MAX_VALUE)
test data is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager((JavaCharStream) null);
javaParserTokenManager.SwitchTo(Integer.MAX_VALUE);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(((JavaCharStream) (null)));
        javaParserTokenManager.SwitchTo(314159265);// Changed to a more descriptive value }}

    }
}
statement is: // Improved test data
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(((JavaCharStream) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.SwitchTo(314159265)// Changed to a more descriptive value }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.SwitchTo(314159265)// Changed to a more descriptive value }}
 target is: javaParserTokenManager method is: SwitchTo(int)
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 0, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 0
Matched Method is: SwitchTo(I)V
TestCase is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager((JavaCharStream) null);
int _int = 314159265;
javaParserTokenManager.SwitchTo(_int);

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("<DECIMAL_LITERAL>")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: SwitchTo(I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: javaParserTokenManager.SwitchTo((-1))
test data is: StringReader stringReader = new StringReader("<DECIMAL_LITERAL>");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.SwitchTo((-1));

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("1234567890");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.SwitchTo(-1);
    }
}
statement is: StringReader stringReader = new StringReader("1234567890"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.SwitchTo(-1), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.SwitchTo(-1) target is: javaParserTokenManager method is: SwitchTo(int)
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: SwitchTo(I)V
i 0 Parameters size() 0 Num of Method Parameters: 1
TestCase is: String string = "1234567890";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
int _int = null;
((JavaParserTokenManager) javaCharStream).SwitchTo(_int);

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("K")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: jjFillToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token jjFillToken = javaParserTokenManager.jjFillToken()
test data is: StringReader stringReader = new StringReader("K");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.jjFillToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("The quick brown fox jumps over the lazy dog.");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.jjFillToken();
    }
}
statement is: StringReader stringReader = new StringReader("The quick brown fox jumps over the lazy dog."), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.jjFillToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.jjFillToken() target is: javaParserTokenManager method is: jjFillToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: jjFillToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "The quick brown fox jumps over the lazy dog.";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).jjFillToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("|")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("|");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("Hello, World!");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("Hello, World!"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "Hello, World!";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager((JavaCharStream) null)
statement is: MoreLexicalActions()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: javaParserTokenManager.MoreLexicalActions()
test data is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager((JavaCharStream) null);
javaParserTokenManager.MoreLexicalActions();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ParserTokenManager javaParserTokenManager = new JavaParserTokenManager(new JavaCharStream("This is a sample input string"));
        javaParserTokenManager.MoreLexicalActions();
    }
}
statement is: ParserTokenManager javaParserTokenManager = new JavaParserTokenManager(new JavaCharStream("This is a sample input string")), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.MoreLexicalActions(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.MoreLexicalActions() target is: javaParserTokenManager method is: MoreLexicalActions()
TestCase is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager((JavaCharStream) null);

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("K")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: TokenLexicalActions(Lcom/soops/CEN4010/JMCA/JParser/Token;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: javaParserTokenManager.TokenLexicalActions(arg0)
test data is: StringReader stringReader = new StringReader("K");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
Token nextToken = javaParserTokenManager.getNextToken();
javaParserTokenManager.TokenLexicalActions(nextToken);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("K");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        Token nextToken = javaParserTokenManager.getNextToken();
        javaParserTokenManager.TokenLexicalActions(nextToken);
    }
}
statement is: StringReader stringReader = new StringReader("K"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Token nextToken = javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.TokenLexicalActions(nextToken), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.TokenLexicalActions(nextToken) target is: javaParserTokenManager method is: TokenLexicalActions(Token)
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: TokenLexicalActions(Lcom/soops/CEN4010/JMCA/JParser/Token;)V
TestCase is: String string = "K";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
Token nextToken = ((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).TokenLexicalActions(nextToken);

* test suite isTestSuite: 270
Test 0: 
StringReader stringReader = new StringReader("returs");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 122, 2586);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 1: 
StringReader stringReader = new StringReader("return");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.ReInit(javaCharStream);
Test 2: 
StringReader stringReader = new StringReader("shv/2Z*Atp:n93l");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 3: 
StringReader stringReader = new StringReader("GVxb]m");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 0);
javaParserTokenManager.setDebugStream((PrintStream) null);
Test 4: 
StringReader stringReader = new StringReader("\"enui;m\"");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 5: 
StringReader stringReader = new StringReader("return");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1858, 7);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 6: 
StringReader stringReader = new StringReader("GVxb]m");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 0);
javaParserTokenManager.ReInit(javaCharStream, 0);
Test 7: 
StringReader stringReader = new StringReader("r3U80|wqd_3kK\"d}");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 8: 
StringReader stringReader = new StringReader(".>Fu?)j&=l");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 9: 
StringReader stringReader = new StringReader("\"<<\"");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-1439), (-3520));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 10: 
StringReader stringReader = new StringReader("do");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-2647), (-1205));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 11: 
StringReader stringReader = new StringReader("int");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 12: 
StringReader stringReader = new StringReader("!j!rl~+");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 13: 
StringReader stringReader = new StringReader("\"[\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 14: 
StringReader stringReader = new StringReader("#Q9a1l'm");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 1, column 1.  Encountered: \"#\" (35), after : \"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 15: 
StringReader stringReader = new StringReader("$on-");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 16: 
StringReader stringReader = new StringReader("S{%cru|+X");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 17: 
StringReader stringReader = new StringReader("re0F&turs");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2758, 108, 29);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 18: 
StringReader stringReader = new StringReader(":a'B<G6O1h$//");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 1, column 5.  Encountered: \"<\" (60), after : \"\\'B\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 19: 
StringReader stringReader = new StringReader("($J#qzy+|R~KVI3I");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 20: 
StringReader stringReader = new StringReader("O2mS*)!");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 21: 
StringReader stringReader = new StringReader("+NK-lW;qxd:@D$fPwZ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 22: 
StringReader stringReader = new StringReader("Y}=pTn2,%SL.D&h");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 23: 
StringReader stringReader = new StringReader("?0&+z^_>QV2");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 24: 
StringReader stringReader = new StringReader("1JBvL)tKE;fZ`>x");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 0);
javaParserTokenManager.getNextToken();
Test 25: 
StringReader stringReader = new StringReader("3FQ'Um^aU)o\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 1, column 6.  Encountered: \"m\" (109), after : \"\\'U\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 26: 
StringReader stringReader = new StringReader("k?4td6H_\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 27: 
StringReader stringReader = new StringReader("5cQM_");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 918, 3736, 29);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 28: 
StringReader stringReader = new StringReader(",6F'&");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 1, column 6.  Encountered: <EOF> after : \"\\'&\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 29: 
StringReader stringReader = new StringReader("8g%CxdQd<T?");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 30: 
StringReader stringReader = new StringReader("7-]9q03~~");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 31: 
StringReader stringReader = new StringReader("-@ov\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 32: 
StringReader stringReader = new StringReader("\"A\"");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2570, 34);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 33: 
StringReader stringReader = new StringReader("02B#fwy-C^");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 34: 
StringReader stringReader = new StringReader("CeG$dhfP&L(Zbc/p");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 35: 
StringReader stringReader = new StringReader("DF SF");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 36: 
StringReader stringReader = new StringReader("E5|WvEY1<KP+9");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 37: 
StringReader stringReader = new StringReader("FM$C'SR");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 0);
javaParserTokenManager.getNextToken();
Test 38: 
StringReader stringReader = new StringReader("aG+7o5w(<<&0");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 97, 88);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 39: 
StringReader stringReader = new StringReader("HU=J.c_U/ifl2<");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 40: 
StringReader stringReader = new StringReader("rK/I`5FU");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 41: 
StringReader stringReader = new StringReader("U=[Lbw -JS%I|!");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 42: 
StringReader stringReader = new StringReader("+NK-lW;qxd:@D$fPwZ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.backup((-2018));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 43: 
StringReader stringReader = new StringReader("O2mS*M)!");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 44: 
StringReader stringReader = new StringReader("Pjsh0uC?.7");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 45: 
StringReader stringReader = new StringReader("QqDFM*dmE}UL");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 46: 
StringReader stringReader = new StringReader("<RL.2=BhBg=\"B");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 47: 
StringReader stringReader = new StringReader("Y}=pTn2,%SL.D&h");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
char[] charArray = new char[4];
stringReader.read(charArray);
javaParserTokenManager.getNextToken();
Test 48: 
StringReader stringReader = new StringReader("Vxb]m");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 0);
javaParserTokenManager.getNextToken();
Test 49: 
StringReader stringReader = new StringReader("X*o_Dl7mBw");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 50: 
StringReader stringReader = new StringReader("C+Z8pp(MFZh>");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 51: 
StringReader stringReader = new StringReader("sh^/2Z*Atp:n93l");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 52: 
StringReader stringReader = new StringReader("&+z^_> ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
char[] charArray = new char[2];
stringReader.read(charArray);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 53: 
StringReader stringReader = new StringReader("`?");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 1, column 1.  Encountered: \"`\" (96), after : \"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 54: 
StringReader stringReader = new StringReader(" column ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 55: 
StringReader stringReader = new StringReader("-f4puq;@p2J[n5hZl");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 56: 
StringReader stringReader = new StringReader("shv/2Z*Atp:n93l");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 57: 
StringReader stringReader = new StringReader("lis1S");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 58: 
StringReader stringReader = new StringReader("t5mY$VnSaOp!:NEp");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.jjround = (-1);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 59: 
StringReader stringReader = new StringReader("long");
char[] charArray = new char[2];
stringReader.read(charArray);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 60: 
StringReader stringReader = new StringReader("o&;Umg+FRB^P");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 61: 
StringReader stringReader = new StringReader("qjU_KN4J:bX]=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 62: 
StringReader stringReader = new StringReader("re.urn");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 63: 
StringReader stringReader = new StringReader(" v?6KVy$I");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 64: 
StringReader stringReader = new StringReader("extends");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.BeginToken();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 65: 
StringReader stringReader = new StringReader("7s/yJs#<9HU#wG7i");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 66: 
StringReader stringReader = new StringReader("~");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 0);
javaParserTokenManager.getNextToken();
Test 67: 
byte[] byteArray = new byte[5];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
SequenceInputStream sequenceInputStream = new SequenceInputStream(byteArrayInputStream, byteArrayInputStream);
JavaCharStream javaCharStream = new JavaCharStream(sequenceInputStream, (-141), 74, 1);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line -141, column 74.  Encountered: \"\" (0), after : \"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 68: 
StringReader stringReader = new StringReader("?>&+z^_> V");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaCharStream.ReadByte();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 69: 
StringReader stringReader = new StringReader(">(g>>=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 70: 
StringReader stringReader = new StringReader("=*MtaB;@G1G}!DQ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 55, 55);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 71: 
StringReader stringReader = new StringReader("Uv]i,-?8x=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 72: 
StringReader stringReader = new StringReader("re.urn");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 29, 13);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 73: 
StringReader stringReader = new StringReader("re0F&turs");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 74: 
StringReader stringReader = new StringReader("7&6xiM9");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 926, 64, 866);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 75: 
StringReader stringReader = new StringReader("aG+7o5w(<<&0");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 76: 
StringReader stringReader = new StringReader("t5mY$VnSaOp!:NEp");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 77: 
StringReader stringReader = new StringReader("-=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 78: 
StringReader stringReader = new StringReader("v/2Z*Atp:n93l");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 79: 
StringReader stringReader = new StringReader("eD.urn");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 80: 
StringReader stringReader = new StringReader(",dE.#^2");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 44, 44);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 81: 
StringReader stringReader = new StringReader("rFtu8n");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 82: 
StringReader stringReader = new StringReader("W>H{;3");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 83: 
StringReader stringReader = new StringReader("r!-YU~;3!");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 84: 
StringReader stringReader = new StringReader("+^ER@");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 85: 
StringReader stringReader = new StringReader("Sw1/`>CZUHh??O|XsU");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 86: 
StringReader stringReader = new StringReader("native");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 70, 97);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 87: 
StringReader stringReader = new StringReader("*W5'aF(Qywf+pQ|l6D");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 126, 126);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
char[] charArray = new char[9];
javaParserTokenManager.getNextToken();
charArray[2] = 'W';
charArray[3] = 'j';
charArray[4] = 'A';
charArray[5] = 'a';
charArray[6] = ' ';
charArray[7] = '|';
charArray[8] = 'b';
javaCharStream.nextCharBuf = charArray;
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 88: 
StringReader stringReader = new StringReader("t5mY$VnSaOp!kNEp");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 89: 
StringReader stringReader = new StringReader("extends");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 90: 
StringReader stringReader = new StringReader("=|");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 91: 
StringReader stringReader = new StringReader("&&");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 3330, 3014);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 92: 
StringReader stringReader = new StringReader("--");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 93: 
StringReader stringReader = new StringReader("==");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 94: 
StringReader stringReader = new StringReader("<=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 95: 
StringReader stringReader = new StringReader(">=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 96: 
StringReader stringReader = new StringReader("&=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 97: 
StringReader stringReader = new StringReader("*=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 0);
javaParserTokenManager.getNextToken();
Test 98: 
StringReader stringReader = new StringReader("\"%=\"");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 34, 0);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 99: 
StringReader stringReader = new StringReader("|=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 100: 
StringReader stringReader = new StringReader(">>>=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 101: 
StringReader stringReader = new StringReader("if");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 102: 
StringReader stringReader = new StringReader("\"elIe");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 34, 2586);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 103: 
StringReader stringReader = new StringReader("inYVt");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 104: 
StringReader stringReader = new StringReader("char");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 115, (-3416));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 105: 
StringReader stringReader = new StringReader("public");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 82, 2144);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 106: 
StringReader stringReader = new StringReader("private");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 33, (byte)0, (byte)118);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 107: 
StringReader stringReader = new StringReader("com.soops.CEN4010.JMCA.JParser.TokenMgrError");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 108: 
StringReader stringReader = new StringReader("short");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 109: 
StringReader stringReader = new StringReader("import");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 110: 
StringReader stringReader = new StringReader("\"for\"");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 111: 
StringReader stringReader = new StringReader("\"else\"");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 34, 2586);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 112: 
StringReader stringReader = new StringReader("\"enum\"");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 113: 
StringReader stringReader = new StringReader("false");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-1926), (-1926));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 114: 
StringReader stringReader = new StringReader("instanceof");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 115: 
StringReader stringReader = new StringReader("case");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 116: 
StringReader stringReader = new StringReader("null");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 117: 
StringReader stringReader = new StringReader("goto");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 126, 31);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 118: 
StringReader stringReader = new StringReader("boolean");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 119: 
StringReader stringReader = new StringReader("assert");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 120: 
StringReader stringReader = new StringReader("continue");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 121: 
StringReader stringReader = new StringReader("\"[-~QC.!aXwV,pHi");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-459), (-459));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line -459, column -442.  Encountered: <EOF> after : \"\\\"[-~QC.!aXw\\u007fV,pHi\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 122: 
StringReader stringReader = new StringReader("9.WcPYdU4_W");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 123: 
byte[] byteArray = new byte[8];
byteArray[0] = (byte)114;
byteArray[1] = (byte)118;
byteArray[2] = (byte)99;
byteArray[3] = (byte)89;
byteArray[4] = (byte)115;
byteArray[5] = (byte)71;
byteArray[6] = (byte)50;
byteArray[7] = (byte) (-84);
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 124: 
StringReader stringReader = new StringReader("Ofs;9L CW.7");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 125: 
byte[] byteArray = new byte[5];
byteArray[0] = (byte) (-103);
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
SequenceInputStream sequenceInputStream = new SequenceInputStream(byteArrayInputStream, byteArrayInputStream);
JavaCharStream javaCharStream = new JavaCharStream(sequenceInputStream, (-141), 74, 1);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line -141, column 74.  Encountered: \"\\ufffd\" (65533), after : \"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 126: 
StringReader stringReader = new StringReader("aG+7o5w(<<&0");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 3);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 1, column 13.  Encountered: <EOF> after : \"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 127: 
StringReader stringReader = new StringReader("X*o_Dl7mBw");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 1);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 1, column 11.  Encountered: <EOF> after : \"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 128: 
StringReader stringReader = new StringReader("shv/2Z*Atp:n93l");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 2);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 1, column 16.  Encountered: <EOF> after : \"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 129: 
StringReader stringReader = new StringReader("return");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = null;
try {
  javaParserTokenManager = new JavaParserTokenManager(javaCharStream, (-726));
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Error: Ignoring invalid lexical state : -726. State unchanged.
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 130: 
StringReader stringReader = new StringReader("\"for\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2586, 34);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.curLexState = 67;
javaParserTokenManager.getNextToken();
Test 131: 
StringReader stringReader = new StringReader("retrs");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
Token.GTToken token_GTToken = new Token.GTToken();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.SkipLexicalActions(token_GTToken);
Test 132: 
StringReader stringReader = new StringReader("long");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 133: 
StringReader stringReader = new StringReader("/4(YDCoJ2^t");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 134: 
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager((JavaCharStream) null);
javaParserTokenManager.SwitchTo(0);
Test 135: 
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager((JavaCharStream) null);
// Undeclared exception!
try { 
  javaParserTokenManager.SwitchTo(Integer.MAX_VALUE);
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Error: Ignoring invalid lexical state : 2147483647. State unchanged.
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 136: 
StringReader stringReader = new StringReader("<DECIMAL_LITERAL>");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
// Undeclared exception!
try { 
  javaParserTokenManager.SwitchTo((-1));
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Error: Ignoring invalid lexical state : -1. State unchanged.
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 137: 
StringReader stringReader = new StringReader("K");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.jjFillToken();
Test 138: 
StringReader stringReader = new StringReader("|");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 139: 
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager((JavaCharStream) null);
javaParserTokenManager.MoreLexicalActions();
Test 140: 
StringReader stringReader = new StringReader("K");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
Token nextToken = javaParserTokenManager.getNextToken();
javaParserTokenManager.TokenLexicalActions(nextToken);
Test 141: 
StringReader stringReader = new StringReader("return");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 122, 2586);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)122).getNextToken();

Test 142: 
StringReader stringReader = new StringReader("return 5 * (10 + 3);");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).ReInit(javaCharStream);

Test 143: 
StringReader stringReader = new StringReader("main");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 144: 
StringReader stringReader = new StringReader("Hello World!");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 0);
((JavaParserTokenManager) javaCharStream).setDebugStream((PrintStream) null);

Test 145: 
StringReader stringReader = new StringReader("\"This is a sample input for testing\"");
((StringReader)"\"This is a sample input for testing\"").read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 146: 
StringReader stringReader = new StringReader("return");
int _int = 1858;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1858, 7);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)1858).getNextToken();
String string = "return x;";
StringReader stringReader = new StringReader(string);
int _int = 1858;
int _int = 7;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();

Test 147: 
StringReader stringReader = new StringReader("This is a sample input string for testing");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 0);
((JavaParserTokenManager) javaCharStream).ReInit(javaCharStream, 0);

Test 148: 
StringReader stringReader = new StringReader("An input string containing a mixture of uppercase and lowercase letters, numbers, and special characters.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);

Test 149: 
StringReader stringReader = new StringReader(".>Fu?)j&=l");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 150: 
StringReader stringReader = new StringReader("do");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-2647), (-1205));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 151: 
StringReader stringReader = new StringReader("int");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 152: 
StringReader stringReader = new StringReader("!j!rl~+");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 153: 
StringReader stringReader = new StringReader("\"[\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "\"[\"";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 154: 
StringReader stringReader = new StringReader("The quick brown fox jumps over the lazy dog");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 155: 
StringReader stringReader = new StringReader("$on-");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 156: 
StringReader stringReader = new StringReader("This is a test string with some interesting characters like $%^&*()_+-=[]{}|;':\"<>,./");
int _int = 1024;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1024, 512, 8);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)1024).getNextToken();
((JavaParserTokenManager) _int).getNextToken();

Test 157: 
StringReader stringReader = new StringReader(":a'B<G6O1h$//");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 158: 
StringReader stringReader = new StringReader("Hello, World!");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 159: 
StringReader stringReader = new StringReader("+27-lW;qxd:@D$fPwZ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 160: 
StringReader stringReader = new StringReader("hello world");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 161: 
StringReader stringReader = new StringReader("1234567890");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 0);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 162: 
StringReader stringReader = new StringReader("3FQ'Um^aU)o\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 163: 
StringReader stringReader = new StringReader("k?4td6H_\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 164: 
StringReader stringReader = new StringReader("5cQM_");
int _int = 918;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 918, 3736, 29);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)918).getNextToken();
((JavaParserTokenManager) _int).getNextToken();

Test 165: 
StringReader stringReader = new StringReader(",6F'&");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 166: 
StringReader stringReader = new StringReader("8g%CxdQd<T?");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 167: 
String string = "7-]9q03~~";
StringReader stringReader = new StringReader("7-]9q03~~");
((StringReader)"7-]9q03~~").read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "7-]9q03~~";
StringReader stringReader = new StringReader(string);
((StringReader) string).read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 168: 
StringReader stringReader = new StringReader("-@ov\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 169: 
StringReader stringReader = new StringReader("\"The quick brown fox jumps over the lazy dog\"");
((StringReader)"\"The quick brown fox jumps over the lazy dog\"").read();
int _int = 2570;
int _int = 34;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();

Test 170: 
StringReader stringReader = new StringReader("02B#fwy-C^");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 171: 
StringReader stringReader = new StringReader("myVariable");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);

Test 172: 
StringReader stringReader = new StringReader("E5|WvEY1<KP+9");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 173: 
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager((JavaCharStream) 0, 0);

Test 174: 
StringReader stringReader = new StringReader("abcdefg");
((StringReader)"abcdefg").read();
int _int = 97;
int _int = 88;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();

Test 175: 
StringReader stringReader = new StringReader("LINE_NUMBER=1");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 176: 
StringReader stringReader = new StringReader("Hello, World!");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 177: 
StringReader stringReader = new StringReader("U=['Hello', 'World']");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 178: 
StringReader stringReader = new StringReader("+NK-lW;qxd:@D$fPwZ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
int _int = null;
((JavaCharStream) stringReader).backup((int) (Integer) null);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
int _int = 10;
((JavaCharStream) stringReader).backup(_int);
((JavaParserTokenManager) _int).getNextToken();
((JavaParserTokenManager) _int).getNextToken();

Test 179: 
StringReader stringReader = new StringReader("This is a test string.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 180: 
StringReader stringReader = new StringReader("myJavaIdentifier");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 181: 
StringReader stringReader = new StringReader("<RL.2=BhBg=\"B");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 182: 
char[] charArray = new char[4];
StringReader stringReader = new StringReader("This is a sample input string for the Java parser.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
char[] charArray = new char[4];
((Reader) charArray).read(charArray);
((JavaParserTokenManager) stringReader).getNextToken();

Test 183: 
StringReader stringReader = new StringReader("Vxb]m");

Test 184: 
StringReader stringReader = new StringReader("public class MyClass { public static void main(String[] args) { System.out.println(\"Hello, world!\"); } }");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 185: 
StringReader stringReader = new StringReader("C+Z8pp(MFZh>");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 186: 
String string = "&+z^_> ";
StringReader stringReader = new StringReader("&+z^_> ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
char[] charArray = new char[2];
int read = ((Reader)"&+z^_> ").read(charArray);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) read).getNextToken();
((JavaParserTokenManager) read).getNextToken();
((JavaParserTokenManager) read).getNextToken();
String string = "Hello, World!";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
char[] charArray = new char[2];
((Reader) string).read(charArray);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) read).getNextToken();
((JavaParserTokenManager) read).getNextToken();
((JavaParserTokenManager) read).getNextToken();

Test 187: 
StringReader stringReader = new StringReader("column");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 188: 
StringReader stringReader = new StringReader("-f4puq;@p2J[n5hZl");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "{f4puq;@p2J[n5hZl";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 189: 
StringReader stringReader = new StringReader("hello");
((StringReader)"hello").read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 190: 
StringReader stringReader = new StringReader("lis1Sabc123$%^&*()_+-=[]{}|;':\"<>,./?`~");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 191: 
StringReader stringReader = new StringReader("This is a sample input string.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 192: 
StringReader stringReader = new StringReader("long");
char[] charArray = new char[2];
((Reader)"long").read(charArray);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 193: 
StringReader stringReader = new StringReader("o&;Umg+FRB^P");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 194: 
StringReader stringReader = new StringReader("JavaParserTokenManagerTestData");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 195: 
StringReader stringReader = new StringReader("This is a test string for testing the JavaParserTokenManager");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 196: 
StringReader stringReader = new StringReader("extends");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
char BeginToken = ((JavaCharStream) stringReader).BeginToken();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) BeginToken).getNextToken();

Test 197: 
StringReader stringReader = new StringReader("The quick brown fox jumps over the lazy dog.");
((StringReader)"The quick brown fox jumps over the lazy dog.").read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 198: 
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager((JavaCharStream) 0, 0);

Test 199: 
JavaCharStream javaCharStream = new JavaCharStream((InputStream) 74, 1, 74, 1);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);

Test 200: 
StringReader stringReader = new StringReader("?>&+z^_> V");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaCharStream) stringReader).ReadByte();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 201: 
StringReader stringReader = new StringReader("this is a longer string");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 202: 
StringReader stringReader = new StringReader("This is a sample input string");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 55, 55);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)55).getNextToken();

Test 203: 
StringReader stringReader = new StringReader("Uv]i,-?8x= Hello World!");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 204: 
StringReader stringReader = new StringReader("re.urn");
((StringReader)"re.urn").read();
int _int = 29;
int _int = 13;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();

Test 205: 
StringReader stringReader = new StringReader("A sentence with multiple words");
((StringReader)"A sentence with multiple words").read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 206: 
StringReader stringReader = new StringReader("7&6xiM9");
int _int = 926;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 926, 64, 866);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)926).getNextToken();
((JavaParserTokenManager) _int).getNextToken();

Test 207: 
StringReader stringReader = new StringReader("aG+7o5w(<<&0");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "aG+7o5w(<<&0";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 208: 
StringReader stringReader = new StringReader("The quick brown fox jumps over the lazy dog.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 209: 
StringReader stringReader = new StringReader("-=++");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "-=+-";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "-=+1";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 210: 
StringReader stringReader = new StringReader("v/2Z*Atp:n93l");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 211: 
StringReader stringReader = new StringReader("public class Test { public static void main(String[] args) { System.out.println(\"Hello, world!\"); } }");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 212: 
StringReader stringReader = new StringReader("abcdefghijklmnopqrstuvwxyz");
((StringReader)"abcdefghijklmnopqrstuvwxyz").read();
int _int = 44;
int _int = 44;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();

Test 213: 
StringReader stringReader = new StringReader("A long and winding road");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 214: 
StringReader stringReader = new StringReader("I love to eat pizza!");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 215: 
StringReader stringReader = new StringReader("+^ER@");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 216: 
StringReader stringReader = new StringReader("This is a sample string for testing the Java parser.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 217: 
StringReader stringReader = new StringReader("native");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 70, 97);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)70).getNextToken();

Test 218: 
StringReader stringReader = new StringReader("*W5'aF(Qywf+pQ|l6D");
int _int = 126;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 126, 126);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
char[] charArray = new char[9];
((JavaParserTokenManager)126).getNextToken();
((JavaParserTokenManager) _int).getNextToken();
((JavaParserTokenManager) _int).getNextToken();
((JavaParserTokenManager) _int).getNextToken();
((JavaParserTokenManager) _int).getNextToken();
((JavaParserTokenManager) _int).getNextToken();
((JavaParserTokenManager) _int).getNextToken();
((JavaParserTokenManager) _int).getNextToken();

Test 219: 
StringReader stringReader = new StringReader("t5mY$VnSaOp!kNEp");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 220: 
StringReader stringReader = new StringReader("extends");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 221: 
StringReader stringReader = new StringReader("Hello, World! 1234567890 abcdefghijklmnopqrstuvwxyz");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 222: 
StringReader stringReader = new StringReader("&&");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 3330, 3014);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)3330).getNextToken();

Test 223: 
StringReader stringReader = new StringReader("/*--*/");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 224: 
StringReader stringReader = new StringReader("Hello, World!");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 225: 
StringReader stringReader = new StringReader("Hello World");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 226: 
StringReader stringReader = new StringReader(">=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 227: 
StringReader stringReader = new StringReader("&=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "&=";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 228: 
StringReader stringReader = new StringReader("*=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 0);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 229: 
String string = "\"%=\"";
StringReader stringReader = new StringReader("\"%=\"");
((StringReader)"\"%=\"").read();
int _int = 34;
int _int = 0;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();
String string = "\"%=+\"";
StringReader stringReader = new StringReader(string);
((StringReader) string).read();
int _int = 34;
int _int = 0;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();

Test 230: 
StringReader stringReader = new StringReader("|=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "|= (2 + 3) * 4";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 231: 
StringReader stringReader = new StringReader("public class MyClass { public static void main(String[] args) { System.out.println(\"Hello World\"); } }");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 232: 
StringReader stringReader = new StringReader("\"elIe");
((StringReader)"\"elIe").read();
int _int = 34;
int _int = 2586;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();

Test 233: 
StringReader stringReader = new StringReader("inYVt");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 234: 
StringReader stringReader = new StringReader("characters");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 115, (-3416));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)115).getNextToken();

Test 235: 
StringReader stringReader = new StringReader("public static void main(String[] args) {");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 82, 2144);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)82).getNextToken();

Test 236: 
StringReader stringReader = new StringReader("private static final int PRIVATE_CONSTANT = 123;");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 33, 0, 118);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)33).getNextToken();

Test 237: 
StringReader stringReader = new StringReader("com.soops.CEN4010.JMCA.JParser.TokenMgrError");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 238: 
StringReader stringReader = new StringReader("The quick brown fox jumps over the lazy dog.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 239: 
StringReader stringReader = new StringReader("import com.example.TestClass;");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "import com.example.TestClass;";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 240: 
StringReader stringReader = new StringReader("\"for\"");
((StringReader)"\"for\"").read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 241: 
StringReader stringReader = new StringReader("\"if else while for each try catch finally return void bool byte short int long float double char boolean string void\"");
((StringReader)"\"if else while for each try catch finally return void bool byte short int long float double char boolean string void\"").read();
int _int = 34;
int _int = 2586;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();

Test 242: 
StringReader stringReader = new StringReader("true");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-1926), (-1926));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 243: 
StringReader stringReader = new StringReader("instanceof");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 244: 
StringReader stringReader = new StringReader("case");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 245: 
StringReader stringReader = new StringReader("\"Hello World!\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 246: 
JavaCharStream javaCharStream = new JavaCharStream((Reader) 126, 31, 31);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 247: 
StringReader stringReader = new StringReader("boolean");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 248: 
StringReader stringReader = new StringReader("assert");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 249: 
StringReader stringReader = new StringReader("continue");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 250: 
StringReader stringReader = new StringReader("\"The quick brown fox jumps over the lazy dog.\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-459), (-459));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 251: 
StringReader stringReader = new StringReader("9.WcPYdU4_W");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 252: 
byte[] byteArray = new byte[8];
byteArray[0] = (byte) 's';
byteArray[1] = (byte) 'e';
byteArray[2] = (byte) 'l';
byteArray[3] = (byte) 'H';
byteArray[4] = (byte) 'e';
byteArray[5] = (byte) 'l';
byteArray[6] = (byte) 'o';
byteArray[7] = (byte) '\n';
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)'l').getNextToken();

Test 253: 
StringReader stringReader = new StringReader("A sample sentence with multiple words and numbers 1234567890.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 254: 
JavaCharStream javaCharStream = new JavaCharStream((InputStream) 74, 1, 74, 1);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);

Test 255: 
StringReader stringReader = new StringReader("abcdefg");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 5);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 256: 
StringReader stringReader = new StringReader("X*o_Dl7mBw");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 1);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 257: 
StringReader stringReader = new StringReader("This is a sample input string with multiple words and numbers.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 2);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 258: 
StringReader stringReader = new StringReader("return 10;");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, (-726));

Test 259: 
JavaCharStream javaCharStream = new JavaCharStream((Reader) 2586, 34, 34);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 260: 
StringReader stringReader = new StringReader("retrieve");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.SkipLexicalActions((Token) null);

Test 261: 
StringReader stringReader = new StringReader("hello world");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 262: 
StringReader stringReader = new StringReader("Hello, World!");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 263: 
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager((JavaCharStream) null);

Test 264: 
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager((JavaCharStream) null);
javaParserTokenManager.SwitchTo(314159265);

Test 265: 
StringReader stringReader = new StringReader("1234567890");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).SwitchTo((int) (Integer) null);

Test 266: 
StringReader stringReader = new StringReader("The quick brown fox jumps over the lazy dog.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).jjFillToken();

Test 267: 
StringReader stringReader = new StringReader("Hello, World!");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 268: 
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager((JavaCharStream) null);

Test 269: 
StringReader stringReader = new StringReader("K");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
Token nextToken = ((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).TokenLexicalActions(nextToken);


* Generated after the refinement and before minimization 270 tests with total length 1401
* test suite isTestSuite: 270
Test 0: 
StringReader stringReader = new StringReader("returs");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 122, 2586);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 1: 
StringReader stringReader = new StringReader("return");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.ReInit(javaCharStream);
Test 2: 
StringReader stringReader = new StringReader("shv/2Z*Atp:n93l");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 3: 
StringReader stringReader = new StringReader("GVxb]m");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 0);
javaParserTokenManager.setDebugStream((PrintStream) null);
Test 4: 
StringReader stringReader = new StringReader("\"enui;m\"");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 5: 
StringReader stringReader = new StringReader("return");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1858, 7);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 6: 
StringReader stringReader = new StringReader("GVxb]m");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 0);
javaParserTokenManager.ReInit(javaCharStream, 0);
Test 7: 
StringReader stringReader = new StringReader("r3U80|wqd_3kK\"d}");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 8: 
StringReader stringReader = new StringReader(".>Fu?)j&=l");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 9: 
StringReader stringReader = new StringReader("\"<<\"");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-1439), (-3520));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 10: 
StringReader stringReader = new StringReader("do");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-2647), (-1205));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 11: 
StringReader stringReader = new StringReader("int");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 12: 
StringReader stringReader = new StringReader("!j!rl~+");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 13: 
StringReader stringReader = new StringReader("\"[\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 14: 
StringReader stringReader = new StringReader("#Q9a1l'm");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 1, column 1.  Encountered: \"#\" (35), after : \"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 15: 
StringReader stringReader = new StringReader("$on-");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 16: 
StringReader stringReader = new StringReader("S{%cru|+X");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 17: 
StringReader stringReader = new StringReader("re0F&turs");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2758, 108, 29);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 18: 
StringReader stringReader = new StringReader(":a'B<G6O1h$//");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 1, column 5.  Encountered: \"<\" (60), after : \"\\'B\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 19: 
StringReader stringReader = new StringReader("($J#qzy+|R~KVI3I");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 20: 
StringReader stringReader = new StringReader("O2mS*)!");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 21: 
StringReader stringReader = new StringReader("+NK-lW;qxd:@D$fPwZ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 22: 
StringReader stringReader = new StringReader("Y}=pTn2,%SL.D&h");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 23: 
StringReader stringReader = new StringReader("?0&+z^_>QV2");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 24: 
StringReader stringReader = new StringReader("1JBvL)tKE;fZ`>x");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 0);
javaParserTokenManager.getNextToken();
Test 25: 
StringReader stringReader = new StringReader("3FQ'Um^aU)o\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 1, column 6.  Encountered: \"m\" (109), after : \"\\'U\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 26: 
StringReader stringReader = new StringReader("k?4td6H_\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 27: 
StringReader stringReader = new StringReader("5cQM_");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 918, 3736, 29);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 28: 
StringReader stringReader = new StringReader(",6F'&");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 1, column 6.  Encountered: <EOF> after : \"\\'&\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 29: 
StringReader stringReader = new StringReader("8g%CxdQd<T?");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 30: 
StringReader stringReader = new StringReader("7-]9q03~~");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 31: 
StringReader stringReader = new StringReader("-@ov\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 32: 
StringReader stringReader = new StringReader("\"A\"");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2570, 34);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 33: 
StringReader stringReader = new StringReader("02B#fwy-C^");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 34: 
StringReader stringReader = new StringReader("CeG$dhfP&L(Zbc/p");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 35: 
StringReader stringReader = new StringReader("DF SF");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 36: 
StringReader stringReader = new StringReader("E5|WvEY1<KP+9");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 37: 
StringReader stringReader = new StringReader("FM$C'SR");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 0);
javaParserTokenManager.getNextToken();
Test 38: 
StringReader stringReader = new StringReader("aG+7o5w(<<&0");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 97, 88);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 39: 
StringReader stringReader = new StringReader("HU=J.c_U/ifl2<");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 40: 
StringReader stringReader = new StringReader("rK/I`5FU");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 41: 
StringReader stringReader = new StringReader("U=[Lbw -JS%I|!");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 42: 
StringReader stringReader = new StringReader("+NK-lW;qxd:@D$fPwZ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.backup((-2018));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 43: 
StringReader stringReader = new StringReader("O2mS*M)!");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 44: 
StringReader stringReader = new StringReader("Pjsh0uC?.7");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 45: 
StringReader stringReader = new StringReader("QqDFM*dmE}UL");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 46: 
StringReader stringReader = new StringReader("<RL.2=BhBg=\"B");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 47: 
StringReader stringReader = new StringReader("Y}=pTn2,%SL.D&h");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
char[] charArray = new char[4];
stringReader.read(charArray);
javaParserTokenManager.getNextToken();
Test 48: 
StringReader stringReader = new StringReader("Vxb]m");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 0);
javaParserTokenManager.getNextToken();
Test 49: 
StringReader stringReader = new StringReader("X*o_Dl7mBw");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 50: 
StringReader stringReader = new StringReader("C+Z8pp(MFZh>");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 51: 
StringReader stringReader = new StringReader("sh^/2Z*Atp:n93l");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 52: 
StringReader stringReader = new StringReader("&+z^_> ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
char[] charArray = new char[2];
stringReader.read(charArray);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 53: 
StringReader stringReader = new StringReader("`?");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 1, column 1.  Encountered: \"`\" (96), after : \"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 54: 
StringReader stringReader = new StringReader(" column ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 55: 
StringReader stringReader = new StringReader("-f4puq;@p2J[n5hZl");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 56: 
StringReader stringReader = new StringReader("shv/2Z*Atp:n93l");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 57: 
StringReader stringReader = new StringReader("lis1S");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 58: 
StringReader stringReader = new StringReader("t5mY$VnSaOp!:NEp");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.jjround = (-1);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 59: 
StringReader stringReader = new StringReader("long");
char[] charArray = new char[2];
stringReader.read(charArray);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 60: 
StringReader stringReader = new StringReader("o&;Umg+FRB^P");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 61: 
StringReader stringReader = new StringReader("qjU_KN4J:bX]=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 62: 
StringReader stringReader = new StringReader("re.urn");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 63: 
StringReader stringReader = new StringReader(" v?6KVy$I");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 64: 
StringReader stringReader = new StringReader("extends");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.BeginToken();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 65: 
StringReader stringReader = new StringReader("7s/yJs#<9HU#wG7i");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 66: 
StringReader stringReader = new StringReader("~");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 0);
javaParserTokenManager.getNextToken();
Test 67: 
byte[] byteArray = new byte[5];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
SequenceInputStream sequenceInputStream = new SequenceInputStream(byteArrayInputStream, byteArrayInputStream);
JavaCharStream javaCharStream = new JavaCharStream(sequenceInputStream, (-141), 74, 1);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line -141, column 74.  Encountered: \"\" (0), after : \"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 68: 
StringReader stringReader = new StringReader("?>&+z^_> V");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaCharStream.ReadByte();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 69: 
StringReader stringReader = new StringReader(">(g>>=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 70: 
StringReader stringReader = new StringReader("=*MtaB;@G1G}!DQ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 55, 55);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 71: 
StringReader stringReader = new StringReader("Uv]i,-?8x=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 72: 
StringReader stringReader = new StringReader("re.urn");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 29, 13);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 73: 
StringReader stringReader = new StringReader("re0F&turs");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 74: 
StringReader stringReader = new StringReader("7&6xiM9");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 926, 64, 866);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 75: 
StringReader stringReader = new StringReader("aG+7o5w(<<&0");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 76: 
StringReader stringReader = new StringReader("t5mY$VnSaOp!:NEp");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 77: 
StringReader stringReader = new StringReader("-=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 78: 
StringReader stringReader = new StringReader("v/2Z*Atp:n93l");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 79: 
StringReader stringReader = new StringReader("eD.urn");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 80: 
StringReader stringReader = new StringReader(",dE.#^2");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 44, 44);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 81: 
StringReader stringReader = new StringReader("rFtu8n");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 82: 
StringReader stringReader = new StringReader("W>H{;3");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 83: 
StringReader stringReader = new StringReader("r!-YU~;3!");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 84: 
StringReader stringReader = new StringReader("+^ER@");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 85: 
StringReader stringReader = new StringReader("Sw1/`>CZUHh??O|XsU");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 86: 
StringReader stringReader = new StringReader("native");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 70, 97);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 87: 
StringReader stringReader = new StringReader("*W5'aF(Qywf+pQ|l6D");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 126, 126);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
char[] charArray = new char[9];
javaParserTokenManager.getNextToken();
charArray[2] = 'W';
charArray[3] = 'j';
charArray[4] = 'A';
charArray[5] = 'a';
charArray[6] = ' ';
charArray[7] = '|';
charArray[8] = 'b';
javaCharStream.nextCharBuf = charArray;
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 88: 
StringReader stringReader = new StringReader("t5mY$VnSaOp!kNEp");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 89: 
StringReader stringReader = new StringReader("extends");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 90: 
StringReader stringReader = new StringReader("=|");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 91: 
StringReader stringReader = new StringReader("&&");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 3330, 3014);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 92: 
StringReader stringReader = new StringReader("--");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 93: 
StringReader stringReader = new StringReader("==");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 94: 
StringReader stringReader = new StringReader("<=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 95: 
StringReader stringReader = new StringReader(">=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 96: 
StringReader stringReader = new StringReader("&=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 97: 
StringReader stringReader = new StringReader("*=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 0);
javaParserTokenManager.getNextToken();
Test 98: 
StringReader stringReader = new StringReader("\"%=\"");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 34, 0);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 99: 
StringReader stringReader = new StringReader("|=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 100: 
StringReader stringReader = new StringReader(">>>=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 101: 
StringReader stringReader = new StringReader("if");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 102: 
StringReader stringReader = new StringReader("\"elIe");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 34, 2586);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 103: 
StringReader stringReader = new StringReader("inYVt");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 104: 
StringReader stringReader = new StringReader("char");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 115, (-3416));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 105: 
StringReader stringReader = new StringReader("public");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 82, 2144);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 106: 
StringReader stringReader = new StringReader("private");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 33, (byte)0, (byte)118);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 107: 
StringReader stringReader = new StringReader("com.soops.CEN4010.JMCA.JParser.TokenMgrError");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 108: 
StringReader stringReader = new StringReader("short");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 109: 
StringReader stringReader = new StringReader("import");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 110: 
StringReader stringReader = new StringReader("\"for\"");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 111: 
StringReader stringReader = new StringReader("\"else\"");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 34, 2586);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 112: 
StringReader stringReader = new StringReader("\"enum\"");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 113: 
StringReader stringReader = new StringReader("false");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-1926), (-1926));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 114: 
StringReader stringReader = new StringReader("instanceof");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 115: 
StringReader stringReader = new StringReader("case");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 116: 
StringReader stringReader = new StringReader("null");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 117: 
StringReader stringReader = new StringReader("goto");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 126, 31);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 118: 
StringReader stringReader = new StringReader("boolean");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 119: 
StringReader stringReader = new StringReader("assert");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 120: 
StringReader stringReader = new StringReader("continue");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 121: 
StringReader stringReader = new StringReader("\"[-~QC.!aXwV,pHi");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-459), (-459));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line -459, column -442.  Encountered: <EOF> after : \"\\\"[-~QC.!aXw\\u007fV,pHi\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 122: 
StringReader stringReader = new StringReader("9.WcPYdU4_W");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 123: 
byte[] byteArray = new byte[8];
byteArray[0] = (byte)114;
byteArray[1] = (byte)118;
byteArray[2] = (byte)99;
byteArray[3] = (byte)89;
byteArray[4] = (byte)115;
byteArray[5] = (byte)71;
byteArray[6] = (byte)50;
byteArray[7] = (byte) (-84);
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 124: 
StringReader stringReader = new StringReader("Ofs;9L CW.7");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 125: 
byte[] byteArray = new byte[5];
byteArray[0] = (byte) (-103);
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
SequenceInputStream sequenceInputStream = new SequenceInputStream(byteArrayInputStream, byteArrayInputStream);
JavaCharStream javaCharStream = new JavaCharStream(sequenceInputStream, (-141), 74, 1);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line -141, column 74.  Encountered: \"\\ufffd\" (65533), after : \"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 126: 
StringReader stringReader = new StringReader("aG+7o5w(<<&0");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 3);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 1, column 13.  Encountered: <EOF> after : \"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 127: 
StringReader stringReader = new StringReader("X*o_Dl7mBw");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 1);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 1, column 11.  Encountered: <EOF> after : \"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 128: 
StringReader stringReader = new StringReader("shv/2Z*Atp:n93l");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 2);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 1, column 16.  Encountered: <EOF> after : \"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 129: 
StringReader stringReader = new StringReader("return");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = null;
try {
  javaParserTokenManager = new JavaParserTokenManager(javaCharStream, (-726));
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Error: Ignoring invalid lexical state : -726. State unchanged.
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 130: 
StringReader stringReader = new StringReader("\"for\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2586, 34);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.curLexState = 67;
javaParserTokenManager.getNextToken();
Test 131: 
StringReader stringReader = new StringReader("retrs");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
Token.GTToken token_GTToken = new Token.GTToken();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.SkipLexicalActions(token_GTToken);
Test 132: 
StringReader stringReader = new StringReader("long");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 133: 
StringReader stringReader = new StringReader("/4(YDCoJ2^t");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 134: 
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager((JavaCharStream) null);
javaParserTokenManager.SwitchTo(0);
Test 135: 
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager((JavaCharStream) null);
// Undeclared exception!
try { 
  javaParserTokenManager.SwitchTo(Integer.MAX_VALUE);
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Error: Ignoring invalid lexical state : 2147483647. State unchanged.
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 136: 
StringReader stringReader = new StringReader("<DECIMAL_LITERAL>");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
// Undeclared exception!
try { 
  javaParserTokenManager.SwitchTo((-1));
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Error: Ignoring invalid lexical state : -1. State unchanged.
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 137: 
StringReader stringReader = new StringReader("K");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.jjFillToken();
Test 138: 
StringReader stringReader = new StringReader("|");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 139: 
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager((JavaCharStream) null);
javaParserTokenManager.MoreLexicalActions();
Test 140: 
StringReader stringReader = new StringReader("K");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
Token nextToken = javaParserTokenManager.getNextToken();
javaParserTokenManager.TokenLexicalActions(nextToken);
Test 141: 
StringReader stringReader = new StringReader("return");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 122, 2586);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)122).getNextToken();

Test 142: 
StringReader stringReader = new StringReader("return 5 * (10 + 3);");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).ReInit(javaCharStream);

Test 143: 
StringReader stringReader = new StringReader("main");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 144: 
StringReader stringReader = new StringReader("Hello World!");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 0);
((JavaParserTokenManager) javaCharStream).setDebugStream((PrintStream) null);

Test 145: 
StringReader stringReader = new StringReader("\"This is a sample input for testing\"");
((StringReader)"\"This is a sample input for testing\"").read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 146: 
StringReader stringReader = new StringReader("return");
int _int = 1858;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1858, 7);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)1858).getNextToken();
String string = "return x;";
StringReader stringReader = new StringReader(string);
int _int = 1858;
int _int = 7;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();

Test 147: 
StringReader stringReader = new StringReader("This is a sample input string for testing");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 0);
((JavaParserTokenManager) javaCharStream).ReInit(javaCharStream, 0);

Test 148: 
StringReader stringReader = new StringReader("An input string containing a mixture of uppercase and lowercase letters, numbers, and special characters.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);

Test 149: 
StringReader stringReader = new StringReader(".>Fu?)j&=l");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 150: 
StringReader stringReader = new StringReader("do");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-2647), (-1205));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 151: 
StringReader stringReader = new StringReader("int");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 152: 
StringReader stringReader = new StringReader("!j!rl~+");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 153: 
StringReader stringReader = new StringReader("\"[\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "\"[\"";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 154: 
StringReader stringReader = new StringReader("The quick brown fox jumps over the lazy dog");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 155: 
StringReader stringReader = new StringReader("$on-");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 156: 
StringReader stringReader = new StringReader("This is a test string with some interesting characters like $%^&*()_+-=[]{}|;':\"<>,./");
int _int = 1024;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1024, 512, 8);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)1024).getNextToken();
((JavaParserTokenManager) _int).getNextToken();

Test 157: 
StringReader stringReader = new StringReader(":a'B<G6O1h$//");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 158: 
StringReader stringReader = new StringReader("Hello, World!");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 159: 
StringReader stringReader = new StringReader("+27-lW;qxd:@D$fPwZ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 160: 
StringReader stringReader = new StringReader("hello world");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 161: 
StringReader stringReader = new StringReader("1234567890");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 0);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 162: 
StringReader stringReader = new StringReader("3FQ'Um^aU)o\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 163: 
StringReader stringReader = new StringReader("k?4td6H_\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 164: 
StringReader stringReader = new StringReader("5cQM_");
int _int = 918;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 918, 3736, 29);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)918).getNextToken();
((JavaParserTokenManager) _int).getNextToken();

Test 165: 
StringReader stringReader = new StringReader(",6F'&");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 166: 
StringReader stringReader = new StringReader("8g%CxdQd<T?");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 167: 
String string = "7-]9q03~~";
StringReader stringReader = new StringReader("7-]9q03~~");
((StringReader)"7-]9q03~~").read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "7-]9q03~~";
StringReader stringReader = new StringReader(string);
((StringReader) string).read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 168: 
StringReader stringReader = new StringReader("-@ov\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 169: 
StringReader stringReader = new StringReader("\"The quick brown fox jumps over the lazy dog\"");
((StringReader)"\"The quick brown fox jumps over the lazy dog\"").read();
int _int = 2570;
int _int = 34;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();

Test 170: 
StringReader stringReader = new StringReader("02B#fwy-C^");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 171: 
StringReader stringReader = new StringReader("myVariable");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);

Test 172: 
StringReader stringReader = new StringReader("E5|WvEY1<KP+9");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 173: 
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager((JavaCharStream) 0, 0);

Test 174: 
StringReader stringReader = new StringReader("abcdefg");
((StringReader)"abcdefg").read();
int _int = 97;
int _int = 88;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();

Test 175: 
StringReader stringReader = new StringReader("LINE_NUMBER=1");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 176: 
StringReader stringReader = new StringReader("Hello, World!");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 177: 
StringReader stringReader = new StringReader("U=['Hello', 'World']");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 178: 
StringReader stringReader = new StringReader("+NK-lW;qxd:@D$fPwZ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
int _int = null;
((JavaCharStream) stringReader).backup((int) (Integer) null);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
int _int = 10;
((JavaCharStream) stringReader).backup(_int);
((JavaParserTokenManager) _int).getNextToken();
((JavaParserTokenManager) _int).getNextToken();

Test 179: 
StringReader stringReader = new StringReader("This is a test string.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 180: 
StringReader stringReader = new StringReader("myJavaIdentifier");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 181: 
StringReader stringReader = new StringReader("<RL.2=BhBg=\"B");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 182: 
char[] charArray = new char[4];
StringReader stringReader = new StringReader("This is a sample input string for the Java parser.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
char[] charArray = new char[4];
((Reader) charArray).read(charArray);
((JavaParserTokenManager) stringReader).getNextToken();

Test 183: 
StringReader stringReader = new StringReader("Vxb]m");

Test 184: 
StringReader stringReader = new StringReader("public class MyClass { public static void main(String[] args) { System.out.println(\"Hello, world!\"); } }");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 185: 
StringReader stringReader = new StringReader("C+Z8pp(MFZh>");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 186: 
String string = "&+z^_> ";
StringReader stringReader = new StringReader("&+z^_> ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
char[] charArray = new char[2];
int read = ((Reader)"&+z^_> ").read(charArray);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) read).getNextToken();
((JavaParserTokenManager) read).getNextToken();
((JavaParserTokenManager) read).getNextToken();
String string = "Hello, World!";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
char[] charArray = new char[2];
((Reader) string).read(charArray);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) read).getNextToken();
((JavaParserTokenManager) read).getNextToken();
((JavaParserTokenManager) read).getNextToken();

Test 187: 
StringReader stringReader = new StringReader("column");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 188: 
StringReader stringReader = new StringReader("-f4puq;@p2J[n5hZl");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "{f4puq;@p2J[n5hZl";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 189: 
StringReader stringReader = new StringReader("hello");
((StringReader)"hello").read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 190: 
StringReader stringReader = new StringReader("lis1Sabc123$%^&*()_+-=[]{}|;':\"<>,./?`~");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 191: 
StringReader stringReader = new StringReader("This is a sample input string.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 192: 
StringReader stringReader = new StringReader("long");
char[] charArray = new char[2];
((Reader)"long").read(charArray);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 193: 
StringReader stringReader = new StringReader("o&;Umg+FRB^P");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 194: 
StringReader stringReader = new StringReader("JavaParserTokenManagerTestData");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 195: 
StringReader stringReader = new StringReader("This is a test string for testing the JavaParserTokenManager");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 196: 
StringReader stringReader = new StringReader("extends");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
char BeginToken = ((JavaCharStream) stringReader).BeginToken();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) BeginToken).getNextToken();

Test 197: 
StringReader stringReader = new StringReader("The quick brown fox jumps over the lazy dog.");
((StringReader)"The quick brown fox jumps over the lazy dog.").read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 198: 
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager((JavaCharStream) 0, 0);

Test 199: 
JavaCharStream javaCharStream = new JavaCharStream((InputStream) 74, 1, 74, 1);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);

Test 200: 
StringReader stringReader = new StringReader("?>&+z^_> V");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaCharStream) stringReader).ReadByte();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 201: 
StringReader stringReader = new StringReader("this is a longer string");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 202: 
StringReader stringReader = new StringReader("This is a sample input string");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 55, 55);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)55).getNextToken();

Test 203: 
StringReader stringReader = new StringReader("Uv]i,-?8x= Hello World!");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 204: 
StringReader stringReader = new StringReader("re.urn");
((StringReader)"re.urn").read();
int _int = 29;
int _int = 13;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();

Test 205: 
StringReader stringReader = new StringReader("A sentence with multiple words");
((StringReader)"A sentence with multiple words").read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 206: 
StringReader stringReader = new StringReader("7&6xiM9");
int _int = 926;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 926, 64, 866);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)926).getNextToken();
((JavaParserTokenManager) _int).getNextToken();

Test 207: 
StringReader stringReader = new StringReader("aG+7o5w(<<&0");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "aG+7o5w(<<&0";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 208: 
StringReader stringReader = new StringReader("The quick brown fox jumps over the lazy dog.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 209: 
StringReader stringReader = new StringReader("-=++");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "-=+-";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "-=+1";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 210: 
StringReader stringReader = new StringReader("v/2Z*Atp:n93l");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 211: 
StringReader stringReader = new StringReader("public class Test { public static void main(String[] args) { System.out.println(\"Hello, world!\"); } }");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 212: 
StringReader stringReader = new StringReader("abcdefghijklmnopqrstuvwxyz");
((StringReader)"abcdefghijklmnopqrstuvwxyz").read();
int _int = 44;
int _int = 44;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();

Test 213: 
StringReader stringReader = new StringReader("A long and winding road");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 214: 
StringReader stringReader = new StringReader("I love to eat pizza!");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 215: 
StringReader stringReader = new StringReader("+^ER@");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 216: 
StringReader stringReader = new StringReader("This is a sample string for testing the Java parser.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 217: 
StringReader stringReader = new StringReader("native");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 70, 97);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)70).getNextToken();

Test 218: 
StringReader stringReader = new StringReader("*W5'aF(Qywf+pQ|l6D");
int _int = 126;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 126, 126);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
char[] charArray = new char[9];
((JavaParserTokenManager)126).getNextToken();
((JavaParserTokenManager) _int).getNextToken();
((JavaParserTokenManager) _int).getNextToken();
((JavaParserTokenManager) _int).getNextToken();
((JavaParserTokenManager) _int).getNextToken();
((JavaParserTokenManager) _int).getNextToken();
((JavaParserTokenManager) _int).getNextToken();
((JavaParserTokenManager) _int).getNextToken();

Test 219: 
StringReader stringReader = new StringReader("t5mY$VnSaOp!kNEp");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 220: 
StringReader stringReader = new StringReader("extends");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 221: 
StringReader stringReader = new StringReader("Hello, World! 1234567890 abcdefghijklmnopqrstuvwxyz");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 222: 
StringReader stringReader = new StringReader("&&");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 3330, 3014);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)3330).getNextToken();

Test 223: 
StringReader stringReader = new StringReader("/*--*/");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 224: 
StringReader stringReader = new StringReader("Hello, World!");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 225: 
StringReader stringReader = new StringReader("Hello World");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 226: 
StringReader stringReader = new StringReader(">=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 227: 
StringReader stringReader = new StringReader("&=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "&=";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 228: 
StringReader stringReader = new StringReader("*=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 0);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 229: 
String string = "\"%=\"";
StringReader stringReader = new StringReader("\"%=\"");
((StringReader)"\"%=\"").read();
int _int = 34;
int _int = 0;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();
String string = "\"%=+\"";
StringReader stringReader = new StringReader(string);
((StringReader) string).read();
int _int = 34;
int _int = 0;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();

Test 230: 
StringReader stringReader = new StringReader("|=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "|= (2 + 3) * 4";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 231: 
StringReader stringReader = new StringReader("public class MyClass { public static void main(String[] args) { System.out.println(\"Hello World\"); } }");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 232: 
StringReader stringReader = new StringReader("\"elIe");
((StringReader)"\"elIe").read();
int _int = 34;
int _int = 2586;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();

Test 233: 
StringReader stringReader = new StringReader("inYVt");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 234: 
StringReader stringReader = new StringReader("characters");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 115, (-3416));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)115).getNextToken();

Test 235: 
StringReader stringReader = new StringReader("public static void main(String[] args) {");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 82, 2144);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)82).getNextToken();

Test 236: 
StringReader stringReader = new StringReader("private static final int PRIVATE_CONSTANT = 123;");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 33, 0, 118);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)33).getNextToken();

Test 237: 
StringReader stringReader = new StringReader("com.soops.CEN4010.JMCA.JParser.TokenMgrError");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 238: 
StringReader stringReader = new StringReader("The quick brown fox jumps over the lazy dog.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 239: 
StringReader stringReader = new StringReader("import com.example.TestClass;");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "import com.example.TestClass;";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 240: 
StringReader stringReader = new StringReader("\"for\"");
((StringReader)"\"for\"").read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 241: 
StringReader stringReader = new StringReader("\"if else while for each try catch finally return void bool byte short int long float double char boolean string void\"");
((StringReader)"\"if else while for each try catch finally return void bool byte short int long float double char boolean string void\"").read();
int _int = 34;
int _int = 2586;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();

Test 242: 
StringReader stringReader = new StringReader("true");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-1926), (-1926));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 243: 
StringReader stringReader = new StringReader("instanceof");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 244: 
StringReader stringReader = new StringReader("case");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 245: 
StringReader stringReader = new StringReader("\"Hello World!\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 246: 
JavaCharStream javaCharStream = new JavaCharStream((Reader) 126, 31, 31);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 247: 
StringReader stringReader = new StringReader("boolean");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 248: 
StringReader stringReader = new StringReader("assert");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 249: 
StringReader stringReader = new StringReader("continue");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 250: 
StringReader stringReader = new StringReader("\"The quick brown fox jumps over the lazy dog.\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-459), (-459));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 251: 
StringReader stringReader = new StringReader("9.WcPYdU4_W");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 252: 
byte[] byteArray = new byte[8];
byteArray[0] = (byte) 's';
byteArray[1] = (byte) 'e';
byteArray[2] = (byte) 'l';
byteArray[3] = (byte) 'H';
byteArray[4] = (byte) 'e';
byteArray[5] = (byte) 'l';
byteArray[6] = (byte) 'o';
byteArray[7] = (byte) '\n';
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)'l').getNextToken();

Test 253: 
StringReader stringReader = new StringReader("A sample sentence with multiple words and numbers 1234567890.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 254: 
JavaCharStream javaCharStream = new JavaCharStream((InputStream) 74, 1, 74, 1);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);

Test 255: 
StringReader stringReader = new StringReader("abcdefg");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 5);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 256: 
StringReader stringReader = new StringReader("X*o_Dl7mBw");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 1);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 257: 
StringReader stringReader = new StringReader("This is a sample input string with multiple words and numbers.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 2);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 258: 
StringReader stringReader = new StringReader("return 10;");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, (-726));

Test 259: 
JavaCharStream javaCharStream = new JavaCharStream((Reader) 2586, 34, 34);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 260: 
StringReader stringReader = new StringReader("retrieve");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.SkipLexicalActions((Token) null);

Test 261: 
StringReader stringReader = new StringReader("hello world");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 262: 
StringReader stringReader = new StringReader("Hello, World!");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 263: 
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager((JavaCharStream) null);

Test 264: 
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager((JavaCharStream) null);
javaParserTokenManager.SwitchTo(314159265);

Test 265: 
StringReader stringReader = new StringReader("1234567890");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).SwitchTo((int) (Integer) null);

Test 266: 
StringReader stringReader = new StringReader("The quick brown fox jumps over the lazy dog.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).jjFillToken();

Test 267: 
StringReader stringReader = new StringReader("Hello, World!");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 268: 
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager((JavaCharStream) null);

Test 269: 
StringReader stringReader = new StringReader("K");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
Token nextToken = ((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).TokenLexicalActions(nextToken);


* Minimizing test suite
* test suite isTestSuite: 140
Test 0: 
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager((JavaCharStream) null);
// Undeclared exception!
try { 
  javaParserTokenManager.SwitchTo(314159265);
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Error: Ignoring invalid lexical state : 314159265. State unchanged.
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 1: 
StringReader stringReader = new StringReader("GVxb]m");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 0);
javaParserTokenManager.ReInit(javaCharStream, 0);
Test 2: 
StringReader stringReader = new StringReader(" column ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 3: 
StringReader stringReader = new StringReader("1JBvL)tKE;fZ`>x");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 0);
javaParserTokenManager.getNextToken();
Test 4: 
StringReader stringReader = new StringReader("X*o_Dl7mBw");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 1);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 1, column 11.  Encountered: <EOF> after : \"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 5: 
StringReader stringReader = new StringReader("GVxb]m");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 0);
javaParserTokenManager.setDebugStream((PrintStream) null);
Test 6: 
StringReader stringReader = new StringReader("&&");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 3330, 3014);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 7: 
StringReader stringReader = new StringReader("assert");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 8: 
StringReader stringReader = new StringReader(" v?6KVy$I");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 9: 
StringReader stringReader = new StringReader("int");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 10: 
StringReader stringReader = new StringReader("returs");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 122, 2586);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 11: 
StringReader stringReader = new StringReader("/4(YDCoJ2^t");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 12: 
StringReader stringReader = new StringReader(".>Fu?)j&=l");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 13: 
StringReader stringReader = new StringReader("+^ER@");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 14: 
StringReader stringReader = new StringReader("r3U80|wqd_3kK\"d}");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 15: 
StringReader stringReader = new StringReader("do");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-2647), (-1205));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 16: 
StringReader stringReader = new StringReader("\"<<\"");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-1439), (-3520));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 17: 
StringReader stringReader = new StringReader("\"enui;m\"");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 18: 
StringReader stringReader = new StringReader("!j!rl~+");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 19: 
StringReader stringReader = new StringReader("\"[-~QC.!aXwV,pHi");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-459), (-459));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line -459, column -442.  Encountered: <EOF> after : \"\\\"[-~QC.!aXw\\u007fV,pHi\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 20: 
StringReader stringReader = new StringReader("#Q9a1l'm");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 1, column 1.  Encountered: \"#\" (35), after : \"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 21: 
StringReader stringReader = new StringReader("$on-");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 22: 
StringReader stringReader = new StringReader("\"%=\"");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 34, 0);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 23: 
StringReader stringReader = new StringReader(",6F'&");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 1, column 6.  Encountered: <EOF> after : \"\\'&\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 24: 
StringReader stringReader = new StringReader("($J#qzy+|R~KVI3I");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 25: 
StringReader stringReader = new StringReader("O2mS*)!");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 26: 
StringReader stringReader = new StringReader("--");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 27: 
StringReader stringReader = new StringReader("02B#fwy-C^");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 28: 
StringReader stringReader = new StringReader("shv/2Z*Atp:n93l");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 29: 
StringReader stringReader = new StringReader("3FQ'Um^aU)o\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 1, column 6.  Encountered: \"m\" (109), after : \"\\'U\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 30: 
StringReader stringReader = new StringReader("k?4td6H_\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 31: 
StringReader stringReader = new StringReader("5cQM_");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 918, 3736, 29);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 32: 
StringReader stringReader = new StringReader("7&6xiM9");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 926, 64, 866);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 33: 
StringReader stringReader = new StringReader("8g%CxdQd<T?");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 34: 
StringReader stringReader = new StringReader("9.WcPYdU4_W");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 35: 
StringReader stringReader = new StringReader(":a'B<G6O1h$//");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 1, column 5.  Encountered: \"<\" (60), after : \"\\'B\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 36: 
StringReader stringReader = new StringReader("Ofs;9L CW.7");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 37: 
StringReader stringReader = new StringReader("=*MtaB;@G1G}!DQ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 55, 55);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 38: 
StringReader stringReader = new StringReader(">(g>>=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 39: 
StringReader stringReader = new StringReader("-@ov\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 40: 
StringReader stringReader = new StringReader("\"A\"");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2570, 34);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 41: 
StringReader stringReader = new StringReader("CeG$dhfP&L(Zbc/p");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 42: 
StringReader stringReader = new StringReader("DF SF");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 43: 
StringReader stringReader = new StringReader("E5|WvEY1<KP+9");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 44: 
StringReader stringReader = new StringReader("FM$C'SR");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 0);
javaParserTokenManager.getNextToken();
Test 45: 
StringReader stringReader = new StringReader("aG+7o5w(<<&0");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 97, 88);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 46: 
StringReader stringReader = new StringReader("HU=J.c_U/ifl2<");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 47: 
StringReader stringReader = new StringReader("rK/I`5FU");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 48: 
StringReader stringReader = new StringReader("U=[Lbw -JS%I|!");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 49: 
StringReader stringReader = new StringReader("K");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.jjFillToken();
Test 50: 
StringReader stringReader = new StringReader("O2mS*M)!");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 51: 
StringReader stringReader = new StringReader("+NK-lW;qxd:@D$fPwZ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 52: 
StringReader stringReader = new StringReader("Pjsh0uC?.7");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 53: 
StringReader stringReader = new StringReader("<RL.2=BhBg=\"B");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 54: 
StringReader stringReader = new StringReader("Sw1/`>CZUHh??O|XsU");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 55: 
StringReader stringReader = new StringReader("Y}=pTn2,%SL.D&h");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
char[] charArray = new char[4];
stringReader.read(charArray);
javaParserTokenManager.getNextToken();
Test 56: 
StringReader stringReader = new StringReader("Vxb]m");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 0);
javaParserTokenManager.getNextToken();
Test 57: 
StringReader stringReader = new StringReader("W>H{;3");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 58: 
StringReader stringReader = new StringReader("X*o_Dl7mBw");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 59: 
StringReader stringReader = new StringReader("Y}=pTn2,%SL.D&h");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 60: 
StringReader stringReader = new StringReader("C+Z8pp(MFZh>");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 61: 
StringReader stringReader = new StringReader("Uv]i,-?8x=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 62: 
StringReader stringReader = new StringReader("sh^/2Z*Atp:n93l");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 63: 
StringReader stringReader = new StringReader("&+z^_> ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
char[] charArray = new char[2];
stringReader.read(charArray);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 64: 
StringReader stringReader = new StringReader("`?");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 1, column 1.  Encountered: \"`\" (96), after : \"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 65: 
StringReader stringReader = new StringReader("boolean");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 66: 
StringReader stringReader = new StringReader("false");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-1926), (-1926));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 67: 
StringReader stringReader = new StringReader("goto");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 126, 31);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 68: 
StringReader stringReader = new StringReader("shv/2Z*Atp:n93l");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 69: 
StringReader stringReader = new StringReader("lis1S");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 70: 
StringReader stringReader = new StringReader("t5mY$VnSaOp!:NEp");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.jjround = (-1);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 71: 
StringReader stringReader = new StringReader("native");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 70, 97);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 72: 
StringReader stringReader = new StringReader("o&;Umg+FRB^P");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 73: 
StringReader stringReader = new StringReader("private");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 33, (byte)0, (byte)118);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 74: 
StringReader stringReader = new StringReader("qjU_KN4J:bX]=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 75: 
StringReader stringReader = new StringReader("re.urn");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 76: 
StringReader stringReader = new StringReader("extends");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.BeginToken();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 77: 
StringReader stringReader = new StringReader("7s/yJs#<9HU#wG7i");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 78: 
StringReader stringReader = new StringReader("S{%cru|+X");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 79: 
StringReader stringReader = new StringReader("~");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 0);
javaParserTokenManager.getNextToken();
Test 80: 
byte[] byteArray = new byte[5];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
SequenceInputStream sequenceInputStream = new SequenceInputStream(byteArrayInputStream, byteArrayInputStream);
JavaCharStream javaCharStream = new JavaCharStream(sequenceInputStream, (-141), 74, 1);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line -141, column 74.  Encountered: \"\" (0), after : \"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 81: 
StringReader stringReader = new StringReader("?>&+z^_> V");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaCharStream.ReadByte();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 82: 
StringReader stringReader = new StringReader("re.urn");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 29, 13);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 83: 
StringReader stringReader = new StringReader("re0F&turs");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 84: 
StringReader stringReader = new StringReader("aG+7o5w(<<&0");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 85: 
StringReader stringReader = new StringReader("t5mY$VnSaOp!:NEp");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 86: 
StringReader stringReader = new StringReader("v/2Z*Atp:n93l");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 87: 
StringReader stringReader = new StringReader("eD.urn");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 88: 
StringReader stringReader = new StringReader(",dE.#^2");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 44, 44);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 89: 
StringReader stringReader = new StringReader("rFtu8n");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 90: 
StringReader stringReader = new StringReader("r!-YU~;3!");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 91: 
StringReader stringReader = new StringReader("7-]9q03~~");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 92: 
StringReader stringReader = new StringReader("*W5'aF(Qywf+pQ|l6D");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 126, 126);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
char[] charArray = new char[9];
javaParserTokenManager.getNextToken();
charArray[2] = 'W';
charArray[3] = 'j';
charArray[4] = 'A';
charArray[5] = 'a';
charArray[6] = ' ';
charArray[7] = '|';
charArray[8] = 'b';
javaCharStream.nextCharBuf = charArray;
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 93: 
StringReader stringReader = new StringReader("QqDFM*dmE}UL");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 94: 
StringReader stringReader = new StringReader("if");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 95: 
StringReader stringReader = new StringReader("long");
char[] charArray = new char[2];
stringReader.read(charArray);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 96: 
StringReader stringReader = new StringReader("t5mY$VnSaOp!kNEp");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 97: 
StringReader stringReader = new StringReader("\"elIe");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 34, 2586);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 98: 
StringReader stringReader = new StringReader("import");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 99: 
StringReader stringReader = new StringReader("re0F&turs");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2758, 108, 29);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 100: 
StringReader stringReader = new StringReader("extends");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 101: 
StringReader stringReader = new StringReader("=|");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 102: 
StringReader stringReader = new StringReader("==");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 103: 
StringReader stringReader = new StringReader("<=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 104: 
StringReader stringReader = new StringReader(">=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 105: 
StringReader stringReader = new StringReader("-=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 106: 
StringReader stringReader = new StringReader("*=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 0);
javaParserTokenManager.getNextToken();
Test 107: 
StringReader stringReader = new StringReader("&=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 108: 
StringReader stringReader = new StringReader("|=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 109: 
StringReader stringReader = new StringReader(">>>=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 110: 
StringReader stringReader = new StringReader("-f4puq;@p2J[n5hZl");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 111: 
StringReader stringReader = new StringReader("inYVt");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 112: 
StringReader stringReader = new StringReader("char");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 115, (-3416));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 113: 
StringReader stringReader = new StringReader("public");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 82, 2144);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 114: 
StringReader stringReader = new StringReader("com.soops.CEN4010.JMCA.JParser.TokenMgrError");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 115: 
StringReader stringReader = new StringReader("long");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 116: 
StringReader stringReader = new StringReader("\"for\"");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 117: 
StringReader stringReader = new StringReader("\"enum\"");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 118: 
StringReader stringReader = new StringReader("instanceof");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 119: 
StringReader stringReader = new StringReader("case");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 120: 
StringReader stringReader = new StringReader("\"else\"");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 34, 2586);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 121: 
StringReader stringReader = new StringReader("null");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 122: 
StringReader stringReader = new StringReader("short");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 123: 
StringReader stringReader = new StringReader("return");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1858, 7);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 124: 
StringReader stringReader = new StringReader("continue");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 125: 
StringReader stringReader = new StringReader("\"[\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 126: 
StringReader stringReader = new StringReader("?0&+z^_>QV2");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 127: 
byte[] byteArray = new byte[5];
byteArray[0] = (byte) (-103);
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
SequenceInputStream sequenceInputStream = new SequenceInputStream(byteArrayInputStream, byteArrayInputStream);
JavaCharStream javaCharStream = new JavaCharStream(sequenceInputStream, (-141), 74, 1);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line -141, column 74.  Encountered: \"\\ufffd\" (65533), after : \"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 128: 
byte[] byteArray = new byte[8];
byteArray[0] = (byte)114;
byteArray[1] = (byte)118;
byteArray[2] = (byte)99;
byteArray[3] = (byte)89;
byteArray[4] = (byte)115;
byteArray[5] = (byte)71;
byteArray[6] = (byte)50;
byteArray[7] = (byte) (-84);
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 129: 
StringReader stringReader = new StringReader("aG+7o5w(<<&0");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 3);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 1, column 13.  Encountered: <EOF> after : \"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 130: 
StringReader stringReader = new StringReader("shv/2Z*Atp:n93l");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 2);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 1, column 16.  Encountered: <EOF> after : \"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 131: 
StringReader stringReader = new StringReader("return 10;");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = null;
try {
  javaParserTokenManager = new JavaParserTokenManager(javaCharStream, (-726));
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Error: Ignoring invalid lexical state : -726. State unchanged.
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 132: 
StringReader stringReader = new StringReader("\"for\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2586, 34);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.curLexState = 67;
javaParserTokenManager.getNextToken();
Test 133: 
StringReader stringReader = new StringReader("retrieve");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.SkipLexicalActions((Token) null);
Test 134: 
StringReader stringReader = new StringReader("return");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.ReInit(javaCharStream);
Test 135: 
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager((JavaCharStream) null);
javaParserTokenManager.SwitchTo(0);
Test 136: 
StringReader stringReader = new StringReader("<DECIMAL_LITERAL>");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
// Undeclared exception!
try { 
  javaParserTokenManager.SwitchTo((-1));
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Error: Ignoring invalid lexical state : -1. State unchanged.
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 137: 
StringReader stringReader = new StringReader("|");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 138: 
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager((JavaCharStream) null);
javaParserTokenManager.MoreLexicalActions();
Test 139: 
StringReader stringReader = new StringReader("K");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
Token nextToken = javaParserTokenManager.getNextToken();
javaParserTokenManager.TokenLexicalActions(nextToken);

* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 64%
* Total number of goals: 1707
* Number of covered goals: 1090
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 58%
* Total number of goals: 981
* Number of covered goals: 570
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 50%
* Total number of goals: 4
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 11
* Number of covered goals: 11
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 64%
* Total number of goals: 1707
* Number of covered goals: 1089
* Generated 140 tests with total length 681
* Resulting test suite's coverage: 67% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 21%
* Compiling and checking tests
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager((JavaCharStream) null);
// Undeclared exception!
try { 
  javaParserTokenManager.SwitchTo(314159265);
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Error: Ignoring invalid lexical state : 314159265. State unchanged.
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}


** It was a parseable test case! 
refined test name is: testInvalidLexicalStateSwitching
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager((JavaCharStream) null);
javaParserTokenManager.SwitchTo(0);

** It was a parseable test case! 
refined test name is: testSwitchToStateZero
* Compiling Tests
refined test name is: testSwitchToStateZero
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager((JavaCharStream) null);
javaParserTokenManager.MoreLexicalActions();

** It was a parseable test case! 
refined test name is: testEndOfInput
* Compiling Tests
refined test name is: testMoreLexicalActionsSetsEndOfInputFlag
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 19:05:22.194 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar6569019532593285145.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 19:05:22.210 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6569019532593285145.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 19:05:22.411 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar6569019532593285145.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 19:05:22.413 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6569019532593285145.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 19:05:22.451 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar6569019532593285145.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 19:05:22.453 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6569019532593285145.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 1 called: 0 to improve: false
** Write a test suite: 2 called: 1 to improve: false
[MASTER] 19:05:22.505 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar6569019532593285145.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 19:05:22.506 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6569019532593285145.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
[MASTER] 19:05:22.551 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar6569019532593285145.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 19:05:22.552 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6569019532593285145.jar
[MASTER] 19:05:26.256 [logback-1] WARN  TimeController - Already entered in phase: INLINING. This will mess up the timing calculations.
* test suite isTestSuite: 141
Test 0: 
StringReader stringReader = new StringReader("returs");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 122, 2586);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 1: 
StringReader stringReader = new StringReader("return");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.ReInit(javaCharStream);
Test 2: 
StringReader stringReader = new StringReader("shv/2Z*Atp:n93l");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 3: 
StringReader stringReader = new StringReader("GVxb]m");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 0);
javaParserTokenManager.setDebugStream((PrintStream) null);
Test 4: 
StringReader stringReader = new StringReader("\"enui;m\"");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 5: 
StringReader stringReader = new StringReader("return");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1858, 7);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 6: 
StringReader stringReader = new StringReader("GVxb]m");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 0);
javaParserTokenManager.ReInit(javaCharStream, 0);
Test 7: 
StringReader stringReader = new StringReader("r3U80|wqd_3kK\"d}");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 8: 
StringReader stringReader = new StringReader(".>Fu?)j&=l");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 9: 
StringReader stringReader = new StringReader("\"<<\"");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-1439), (-3520));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 10: 
StringReader stringReader = new StringReader("do");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-2647), (-1205));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 11: 
StringReader stringReader = new StringReader("int");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 12: 
StringReader stringReader = new StringReader("!j!rl~+");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 13: 
StringReader stringReader = new StringReader("\"[\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 14: 
StringReader stringReader = new StringReader("#Q9a1l'm");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 1, column 1.  Encountered: \"#\" (35), after : \"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 15: 
StringReader stringReader = new StringReader("$on-");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 16: 
StringReader stringReader = new StringReader("S{%cru|+X");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 17: 
StringReader stringReader = new StringReader("re0F&turs");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2758, 108, 29);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 18: 
StringReader stringReader = new StringReader(":a'B<G6O1h$//");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 1, column 5.  Encountered: \"<\" (60), after : \"\\'B\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 19: 
StringReader stringReader = new StringReader("($J#qzy+|R~KVI3I");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 20: 
StringReader stringReader = new StringReader("O2mS*)!");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 21: 
StringReader stringReader = new StringReader("+NK-lW;qxd:@D$fPwZ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 22: 
StringReader stringReader = new StringReader("Y}=pTn2,%SL.D&h");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 23: 
StringReader stringReader = new StringReader("?0&+z^_>QV2");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 24: 
StringReader stringReader = new StringReader("1JBvL)tKE;fZ`>x");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 0);
javaParserTokenManager.getNextToken();
Test 25: 
StringReader stringReader = new StringReader("3FQ'Um^aU)o\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 1, column 6.  Encountered: \"m\" (109), after : \"\\'U\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 26: 
StringReader stringReader = new StringReader("k?4td6H_\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 27: 
StringReader stringReader = new StringReader("5cQM_");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 918, 3736, 29);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 28: 
StringReader stringReader = new StringReader(",6F'&");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 1, column 6.  Encountered: <EOF> after : \"\\'&\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 29: 
StringReader stringReader = new StringReader("8g%CxdQd<T?");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 30: 
StringReader stringReader = new StringReader("7-]9q03~~");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 31: 
StringReader stringReader = new StringReader("-@ov\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 32: 
StringReader stringReader = new StringReader("\"A\"");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2570, 34);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 33: 
StringReader stringReader = new StringReader("02B#fwy-C^");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 34: 
StringReader stringReader = new StringReader("CeG$dhfP&L(Zbc/p");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 35: 
StringReader stringReader = new StringReader("DF SF");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 36: 
StringReader stringReader = new StringReader("E5|WvEY1<KP+9");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 37: 
StringReader stringReader = new StringReader("FM$C'SR");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 0);
javaParserTokenManager.getNextToken();
Test 38: 
StringReader stringReader = new StringReader("aG+7o5w(<<&0");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 97, 88);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 39: 
StringReader stringReader = new StringReader("HU=J.c_U/ifl2<");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 40: 
StringReader stringReader = new StringReader("rK/I`5FU");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 41: 
StringReader stringReader = new StringReader("U=[Lbw -JS%I|!");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 42: 
StringReader stringReader = new StringReader("+NK-lW;qxd:@D$fPwZ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.backup((-2018));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 43: 
StringReader stringReader = new StringReader("O2mS*M)!");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 44: 
StringReader stringReader = new StringReader("Pjsh0uC?.7");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 45: 
StringReader stringReader = new StringReader("QqDFM*dmE}UL");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 46: 
StringReader stringReader = new StringReader("<RL.2=BhBg=\"B");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 47: 
StringReader stringReader = new StringReader("Y}=pTn2,%SL.D&h");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
char[] charArray = new char[4];
stringReader.read(charArray);
javaParserTokenManager.getNextToken();
Test 48: 
StringReader stringReader = new StringReader("Vxb]m");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 0);
javaParserTokenManager.getNextToken();
Test 49: 
StringReader stringReader = new StringReader("X*o_Dl7mBw");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 50: 
StringReader stringReader = new StringReader("C+Z8pp(MFZh>");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 51: 
StringReader stringReader = new StringReader("sh^/2Z*Atp:n93l");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 52: 
StringReader stringReader = new StringReader("&+z^_> ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
char[] charArray = new char[2];
stringReader.read(charArray);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 53: 
StringReader stringReader = new StringReader("`?");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 1, column 1.  Encountered: \"`\" (96), after : \"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 54: 
StringReader stringReader = new StringReader(" column ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 55: 
StringReader stringReader = new StringReader("-f4puq;@p2J[n5hZl");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 56: 
StringReader stringReader = new StringReader("shv/2Z*Atp:n93l");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 57: 
StringReader stringReader = new StringReader("lis1S");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 58: 
StringReader stringReader = new StringReader("t5mY$VnSaOp!:NEp");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.jjround = (-1);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 59: 
StringReader stringReader = new StringReader("long");
char[] charArray = new char[2];
stringReader.read(charArray);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 60: 
StringReader stringReader = new StringReader("o&;Umg+FRB^P");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 61: 
StringReader stringReader = new StringReader("qjU_KN4J:bX]=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 62: 
StringReader stringReader = new StringReader("re.urn");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 63: 
StringReader stringReader = new StringReader(" v?6KVy$I");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 64: 
StringReader stringReader = new StringReader("extends");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.BeginToken();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 65: 
StringReader stringReader = new StringReader("7s/yJs#<9HU#wG7i");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 66: 
StringReader stringReader = new StringReader("~");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 0);
javaParserTokenManager.getNextToken();
Test 67: 
byte[] byteArray = new byte[5];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
SequenceInputStream sequenceInputStream = new SequenceInputStream(byteArrayInputStream, byteArrayInputStream);
JavaCharStream javaCharStream = new JavaCharStream(sequenceInputStream, (-141), 74, 1);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line -141, column 74.  Encountered: \"\" (0), after : \"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 68: 
StringReader stringReader = new StringReader("?>&+z^_> V");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaCharStream.ReadByte();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 69: 
StringReader stringReader = new StringReader(">(g>>=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 70: 
StringReader stringReader = new StringReader("=*MtaB;@G1G}!DQ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 55, 55);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 71: 
StringReader stringReader = new StringReader("Uv]i,-?8x=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 72: 
StringReader stringReader = new StringReader("re.urn");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 29, 13);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 73: 
StringReader stringReader = new StringReader("re0F&turs");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 74: 
StringReader stringReader = new StringReader("7&6xiM9");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 926, 64, 866);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 75: 
StringReader stringReader = new StringReader("aG+7o5w(<<&0");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 76: 
StringReader stringReader = new StringReader("t5mY$VnSaOp!:NEp");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 77: 
StringReader stringReader = new StringReader("-=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 78: 
StringReader stringReader = new StringReader("v/2Z*Atp:n93l");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 79: 
StringReader stringReader = new StringReader("eD.urn");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 80: 
StringReader stringReader = new StringReader(",dE.#^2");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 44, 44);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 81: 
StringReader stringReader = new StringReader("rFtu8n");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 82: 
StringReader stringReader = new StringReader("W>H{;3");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 83: 
StringReader stringReader = new StringReader("r!-YU~;3!");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 84: 
StringReader stringReader = new StringReader("+^ER@");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 85: 
StringReader stringReader = new StringReader("Sw1/`>CZUHh??O|XsU");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 86: 
StringReader stringReader = new StringReader("native");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 70, 97);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 87: 
StringReader stringReader = new StringReader("*W5'aF(Qywf+pQ|l6D");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 126, 126);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
char[] charArray = new char[9];
javaParserTokenManager.getNextToken();
charArray[2] = 'W';
charArray[3] = 'j';
charArray[4] = 'A';
charArray[5] = 'a';
charArray[6] = ' ';
charArray[7] = '|';
charArray[8] = 'b';
javaCharStream.nextCharBuf = charArray;
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 88: 
StringReader stringReader = new StringReader("t5mY$VnSaOp!kNEp");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 89: 
StringReader stringReader = new StringReader("extends");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 90: 
StringReader stringReader = new StringReader("=|");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 91: 
StringReader stringReader = new StringReader("&&");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 3330, 3014);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 92: 
StringReader stringReader = new StringReader("--");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 93: 
StringReader stringReader = new StringReader("==");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 94: 
StringReader stringReader = new StringReader("<=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 95: 
StringReader stringReader = new StringReader(">=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 96: 
StringReader stringReader = new StringReader("&=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 97: 
StringReader stringReader = new StringReader("*=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 0);
javaParserTokenManager.getNextToken();
Test 98: 
StringReader stringReader = new StringReader("\"%=\"");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 34, 0);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 99: 
StringReader stringReader = new StringReader("|=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 100: 
StringReader stringReader = new StringReader(">>>=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 101: 
StringReader stringReader = new StringReader("if");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 102: 
StringReader stringReader = new StringReader("\"elIe");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 34, 2586);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 103: 
StringReader stringReader = new StringReader("inYVt");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 104: 
StringReader stringReader = new StringReader("char");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 115, (-3416));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 105: 
StringReader stringReader = new StringReader("public");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 82, 2144);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 106: 
StringReader stringReader = new StringReader("private");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 33, (byte)0, (byte)118);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 107: 
StringReader stringReader = new StringReader("com.soops.CEN4010.JMCA.JParser.TokenMgrError");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 108: 
StringReader stringReader = new StringReader("short");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 109: 
StringReader stringReader = new StringReader("import");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 110: 
StringReader stringReader = new StringReader("\"for\"");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 111: 
StringReader stringReader = new StringReader("\"else\"");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 34, 2586);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 112: 
StringReader stringReader = new StringReader("\"enum\"");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 113: 
StringReader stringReader = new StringReader("false");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-1926), (-1926));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 114: 
StringReader stringReader = new StringReader("instanceof");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 115: 
StringReader stringReader = new StringReader("case");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 116: 
StringReader stringReader = new StringReader("null");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 117: 
StringReader stringReader = new StringReader("goto");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 126, 31);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 118: 
StringReader stringReader = new StringReader("boolean");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 119: 
StringReader stringReader = new StringReader("assert");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 120: 
StringReader stringReader = new StringReader("continue");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 121: 
StringReader stringReader = new StringReader("\"[-~QC.!aXwV,pHi");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-459), (-459));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line -459, column -442.  Encountered: <EOF> after : \"\\\"[-~QC.!aXw\\u007fV,pHi\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 122: 
StringReader stringReader = new StringReader("9.WcPYdU4_W");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 123: 
byte[] byteArray = new byte[8];
byteArray[0] = (byte)114;
byteArray[1] = (byte)118;
byteArray[2] = (byte)99;
byteArray[3] = (byte)89;
byteArray[4] = (byte)115;
byteArray[5] = (byte)71;
byteArray[6] = (byte)50;
byteArray[7] = (byte) (-84);
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 124: 
StringReader stringReader = new StringReader("Ofs;9L CW.7");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 125: 
byte[] byteArray = new byte[5];
byteArray[0] = (byte) (-103);
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
SequenceInputStream sequenceInputStream = new SequenceInputStream(byteArrayInputStream, byteArrayInputStream);
JavaCharStream javaCharStream = new JavaCharStream(sequenceInputStream, (-141), 74, 1);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line -141, column 74.  Encountered: \"\\ufffd\" (65533), after : \"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 126: 
StringReader stringReader = new StringReader("aG+7o5w(<<&0");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 3);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 1, column 13.  Encountered: <EOF> after : \"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 127: 
StringReader stringReader = new StringReader("X*o_Dl7mBw");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 1);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 1, column 11.  Encountered: <EOF> after : \"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 128: 
StringReader stringReader = new StringReader("shv/2Z*Atp:n93l");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 2);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 1, column 16.  Encountered: <EOF> after : \"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 129: 
StringReader stringReader = new StringReader("return");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = null;
try {
  javaParserTokenManager = new JavaParserTokenManager(javaCharStream, (-726));
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Error: Ignoring invalid lexical state : -726. State unchanged.
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 130: 
StringReader stringReader = new StringReader("\"for\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2586, 34);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.curLexState = 67;
javaParserTokenManager.getNextToken();
Test 131: 
StringReader stringReader = new StringReader("retrs");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
Token.GTToken token_GTToken = new Token.GTToken();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.SkipLexicalActions(token_GTToken);
Test 132: 
StringReader stringReader = new StringReader("long");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 133: 
StringReader stringReader = new StringReader("/4(YDCoJ2^t");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 134: 
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager((JavaCharStream) null);
javaParserTokenManager.SwitchTo(0);
Test 135: 
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager((JavaCharStream) null);
// Undeclared exception!
try { 
  javaParserTokenManager.SwitchTo(Integer.MAX_VALUE);
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Error: Ignoring invalid lexical state : 2147483647. State unchanged.
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 136: 
StringReader stringReader = new StringReader("<DECIMAL_LITERAL>");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
// Undeclared exception!
try { 
  javaParserTokenManager.SwitchTo((-1));
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Error: Ignoring invalid lexical state : -1. State unchanged.
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 137: 
StringReader stringReader = new StringReader("K");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.jjFillToken();
Test 138: 
StringReader stringReader = new StringReader("|");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 139: 
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager((JavaCharStream) null);
javaParserTokenManager.MoreLexicalActions();
Test 140: 
StringReader stringReader = new StringReader("K");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
Token nextToken = javaParserTokenManager.getNextToken();
javaParserTokenManager.TokenLexicalActions(nextToken);

* Minimizing test suite
[MASTER] 19:06:18.901 [logback-1] WARN  TimeController - Already entered in phase: MINIMIZATION. This will mess up the timing calculations.
* test suite isTestSuite: 140
Test 0: 
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager((JavaCharStream) null);
// Undeclared exception!
try { 
  javaParserTokenManager.SwitchTo(Integer.MAX_VALUE);
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Error: Ignoring invalid lexical state : 2147483647. State unchanged.
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 1: 
StringReader stringReader = new StringReader("GVxb]m");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 0);
javaParserTokenManager.ReInit(javaCharStream, 0);
Test 2: 
StringReader stringReader = new StringReader(" column ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 3: 
StringReader stringReader = new StringReader("1JBvL)tKE;fZ`>x");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 0);
javaParserTokenManager.getNextToken();
Test 4: 
StringReader stringReader = new StringReader("X*o_Dl7mBw");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 1);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 1, column 11.  Encountered: <EOF> after : \"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 5: 
StringReader stringReader = new StringReader("GVxb]m");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 0);
javaParserTokenManager.setDebugStream((PrintStream) null);
Test 6: 
StringReader stringReader = new StringReader("&&");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 3330, 3014);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 7: 
StringReader stringReader = new StringReader("assert");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 8: 
StringReader stringReader = new StringReader(" v?6KVy$I");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 9: 
StringReader stringReader = new StringReader("int");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 10: 
StringReader stringReader = new StringReader("returs");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 122, 2586);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 11: 
StringReader stringReader = new StringReader("/4(YDCoJ2^t");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 12: 
StringReader stringReader = new StringReader(".>Fu?)j&=l");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 13: 
StringReader stringReader = new StringReader("+^ER@");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 14: 
StringReader stringReader = new StringReader("r3U80|wqd_3kK\"d}");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 15: 
StringReader stringReader = new StringReader("do");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-2647), (-1205));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 16: 
StringReader stringReader = new StringReader("\"<<\"");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-1439), (-3520));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 17: 
StringReader stringReader = new StringReader("\"enui;m\"");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 18: 
StringReader stringReader = new StringReader("!j!rl~+");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 19: 
StringReader stringReader = new StringReader("\"[-~QC.!aXwV,pHi");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-459), (-459));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line -459, column -442.  Encountered: <EOF> after : \"\\\"[-~QC.!aXw\\u007fV,pHi\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 20: 
StringReader stringReader = new StringReader("#Q9a1l'm");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 1, column 1.  Encountered: \"#\" (35), after : \"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 21: 
StringReader stringReader = new StringReader("$on-");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 22: 
StringReader stringReader = new StringReader("\"%=\"");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 34, 0);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 23: 
StringReader stringReader = new StringReader(",6F'&");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 1, column 6.  Encountered: <EOF> after : \"\\'&\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 24: 
StringReader stringReader = new StringReader("($J#qzy+|R~KVI3I");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 25: 
StringReader stringReader = new StringReader("O2mS*)!");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 26: 
StringReader stringReader = new StringReader("--");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 27: 
StringReader stringReader = new StringReader("02B#fwy-C^");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 28: 
StringReader stringReader = new StringReader("shv/2Z*Atp:n93l");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 29: 
StringReader stringReader = new StringReader("3FQ'Um^aU)o\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 1, column 6.  Encountered: \"m\" (109), after : \"\\'U\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 30: 
StringReader stringReader = new StringReader("k?4td6H_\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 31: 
StringReader stringReader = new StringReader("5cQM_");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 918, 3736, 29);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 32: 
StringReader stringReader = new StringReader("7&6xiM9");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 926, 64, 866);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 33: 
StringReader stringReader = new StringReader("8g%CxdQd<T?");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 34: 
StringReader stringReader = new StringReader("9.WcPYdU4_W");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 35: 
StringReader stringReader = new StringReader(":a'B<G6O1h$//");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 1, column 5.  Encountered: \"<\" (60), after : \"\\'B\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 36: 
StringReader stringReader = new StringReader("Ofs;9L CW.7");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 37: 
StringReader stringReader = new StringReader("=*MtaB;@G1G}!DQ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 55, 55);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 38: 
StringReader stringReader = new StringReader(">(g>>=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 39: 
StringReader stringReader = new StringReader("-@ov\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 40: 
StringReader stringReader = new StringReader("\"A\"");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2570, 34);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 41: 
StringReader stringReader = new StringReader("CeG$dhfP&L(Zbc/p");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 42: 
StringReader stringReader = new StringReader("DF SF");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 43: 
StringReader stringReader = new StringReader("E5|WvEY1<KP+9");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 44: 
StringReader stringReader = new StringReader("FM$C'SR");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 0);
javaParserTokenManager.getNextToken();
Test 45: 
StringReader stringReader = new StringReader("aG+7o5w(<<&0");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 97, 88);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 46: 
StringReader stringReader = new StringReader("HU=J.c_U/ifl2<");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 47: 
StringReader stringReader = new StringReader("rK/I`5FU");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 48: 
StringReader stringReader = new StringReader("U=[Lbw -JS%I|!");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 49: 
StringReader stringReader = new StringReader("K");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.jjFillToken();
Test 50: 
StringReader stringReader = new StringReader("O2mS*M)!");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 51: 
StringReader stringReader = new StringReader("+NK-lW;qxd:@D$fPwZ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 52: 
StringReader stringReader = new StringReader("Pjsh0uC?.7");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 53: 
StringReader stringReader = new StringReader("<RL.2=BhBg=\"B");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 54: 
StringReader stringReader = new StringReader("Sw1/`>CZUHh??O|XsU");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 55: 
StringReader stringReader = new StringReader("Y}=pTn2,%SL.D&h");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
char[] charArray = new char[4];
stringReader.read(charArray);
javaParserTokenManager.getNextToken();
Test 56: 
StringReader stringReader = new StringReader("Vxb]m");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 0);
javaParserTokenManager.getNextToken();
Test 57: 
StringReader stringReader = new StringReader("W>H{;3");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 58: 
StringReader stringReader = new StringReader("X*o_Dl7mBw");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 59: 
StringReader stringReader = new StringReader("Y}=pTn2,%SL.D&h");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 60: 
StringReader stringReader = new StringReader("C+Z8pp(MFZh>");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 61: 
StringReader stringReader = new StringReader("Uv]i,-?8x=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 62: 
StringReader stringReader = new StringReader("sh^/2Z*Atp:n93l");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 63: 
StringReader stringReader = new StringReader("&+z^_> ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
char[] charArray = new char[2];
stringReader.read(charArray);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 64: 
StringReader stringReader = new StringReader("`?");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 1, column 1.  Encountered: \"`\" (96), after : \"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 65: 
StringReader stringReader = new StringReader("boolean");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 66: 
StringReader stringReader = new StringReader("false");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-1926), (-1926));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 67: 
StringReader stringReader = new StringReader("goto");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 126, 31);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 68: 
StringReader stringReader = new StringReader("shv/2Z*Atp:n93l");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 69: 
StringReader stringReader = new StringReader("lis1S");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 70: 
StringReader stringReader = new StringReader("t5mY$VnSaOp!:NEp");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.jjround = (-1);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 71: 
StringReader stringReader = new StringReader("native");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 70, 97);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 72: 
StringReader stringReader = new StringReader("o&;Umg+FRB^P");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 73: 
StringReader stringReader = new StringReader("private");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 33, (byte)0, (byte)118);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 74: 
StringReader stringReader = new StringReader("qjU_KN4J:bX]=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 75: 
StringReader stringReader = new StringReader("re.urn");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 76: 
StringReader stringReader = new StringReader("extends");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.BeginToken();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 77: 
StringReader stringReader = new StringReader("7s/yJs#<9HU#wG7i");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 78: 
StringReader stringReader = new StringReader("S{%cru|+X");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 79: 
StringReader stringReader = new StringReader("~");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 0);
javaParserTokenManager.getNextToken();
Test 80: 
byte[] byteArray = new byte[5];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
SequenceInputStream sequenceInputStream = new SequenceInputStream(byteArrayInputStream, byteArrayInputStream);
JavaCharStream javaCharStream = new JavaCharStream(sequenceInputStream, (-141), 74, 1);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line -141, column 74.  Encountered: \"\" (0), after : \"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 81: 
StringReader stringReader = new StringReader("?>&+z^_> V");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaCharStream.ReadByte();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 82: 
StringReader stringReader = new StringReader("re.urn");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 29, 13);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 83: 
StringReader stringReader = new StringReader("re0F&turs");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 84: 
StringReader stringReader = new StringReader("aG+7o5w(<<&0");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 85: 
StringReader stringReader = new StringReader("t5mY$VnSaOp!:NEp");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 86: 
StringReader stringReader = new StringReader("v/2Z*Atp:n93l");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 87: 
StringReader stringReader = new StringReader("eD.urn");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 88: 
StringReader stringReader = new StringReader(",dE.#^2");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 44, 44);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 89: 
StringReader stringReader = new StringReader("rFtu8n");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 90: 
StringReader stringReader = new StringReader("r!-YU~;3!");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 91: 
StringReader stringReader = new StringReader("7-]9q03~~");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 92: 
StringReader stringReader = new StringReader("*W5'aF(Qywf+pQ|l6D");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 126, 126);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
char[] charArray = new char[9];
javaParserTokenManager.getNextToken();
charArray[2] = 'W';
charArray[3] = 'j';
charArray[4] = 'A';
charArray[5] = 'a';
charArray[6] = ' ';
charArray[7] = '|';
charArray[8] = 'b';
javaCharStream.nextCharBuf = charArray;
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 93: 
StringReader stringReader = new StringReader("QqDFM*dmE}UL");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 94: 
StringReader stringReader = new StringReader("if");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 95: 
StringReader stringReader = new StringReader("long");
char[] charArray = new char[2];
stringReader.read(charArray);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 96: 
StringReader stringReader = new StringReader("t5mY$VnSaOp!kNEp");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 97: 
StringReader stringReader = new StringReader("\"elIe");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 34, 2586);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 98: 
StringReader stringReader = new StringReader("import");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 99: 
StringReader stringReader = new StringReader("re0F&turs");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2758, 108, 29);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 100: 
StringReader stringReader = new StringReader("extends");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 101: 
StringReader stringReader = new StringReader("=|");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 102: 
StringReader stringReader = new StringReader("==");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 103: 
StringReader stringReader = new StringReader("<=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 104: 
StringReader stringReader = new StringReader(">=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 105: 
StringReader stringReader = new StringReader("-=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 106: 
StringReader stringReader = new StringReader("*=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 0);
javaParserTokenManager.getNextToken();
Test 107: 
StringReader stringReader = new StringReader("&=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 108: 
StringReader stringReader = new StringReader("|=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 109: 
StringReader stringReader = new StringReader(">>>=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 110: 
StringReader stringReader = new StringReader("-f4puq;@p2J[n5hZl");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 111: 
StringReader stringReader = new StringReader("inYVt");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 112: 
StringReader stringReader = new StringReader("char");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 115, (-3416));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 113: 
StringReader stringReader = new StringReader("public");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 82, 2144);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 114: 
StringReader stringReader = new StringReader("com.soops.CEN4010.JMCA.JParser.TokenMgrError");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 115: 
StringReader stringReader = new StringReader("long");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 116: 
StringReader stringReader = new StringReader("\"for\"");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 117: 
StringReader stringReader = new StringReader("\"enum\"");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 118: 
StringReader stringReader = new StringReader("instanceof");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 119: 
StringReader stringReader = new StringReader("case");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 120: 
StringReader stringReader = new StringReader("\"else\"");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 34, 2586);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 121: 
StringReader stringReader = new StringReader("null");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 122: 
StringReader stringReader = new StringReader("short");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 123: 
StringReader stringReader = new StringReader("return");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1858, 7);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 124: 
StringReader stringReader = new StringReader("continue");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 125: 
StringReader stringReader = new StringReader("\"[\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 126: 
StringReader stringReader = new StringReader("?0&+z^_>QV2");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 127: 
byte[] byteArray = new byte[5];
byteArray[0] = (byte) (-103);
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
SequenceInputStream sequenceInputStream = new SequenceInputStream(byteArrayInputStream, byteArrayInputStream);
JavaCharStream javaCharStream = new JavaCharStream(sequenceInputStream, (-141), 74, 1);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line -141, column 74.  Encountered: \"\\ufffd\" (65533), after : \"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 128: 
byte[] byteArray = new byte[8];
byteArray[0] = (byte)114;
byteArray[1] = (byte)118;
byteArray[2] = (byte)99;
byteArray[3] = (byte)89;
byteArray[4] = (byte)115;
byteArray[5] = (byte)71;
byteArray[6] = (byte)50;
byteArray[7] = (byte) (-84);
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 129: 
StringReader stringReader = new StringReader("aG+7o5w(<<&0");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 3);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 1, column 13.  Encountered: <EOF> after : \"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 130: 
StringReader stringReader = new StringReader("shv/2Z*Atp:n93l");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 2);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 1, column 16.  Encountered: <EOF> after : \"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 131: 
StringReader stringReader = new StringReader("return");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = null;
try {
  javaParserTokenManager = new JavaParserTokenManager(javaCharStream, (-726));
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Error: Ignoring invalid lexical state : -726. State unchanged.
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 132: 
StringReader stringReader = new StringReader("\"for\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2586, 34);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.curLexState = 67;
javaParserTokenManager.getNextToken();
Test 133: 
StringReader stringReader = new StringReader("retrs");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
Token.GTToken token_GTToken = new Token.GTToken();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.SkipLexicalActions(token_GTToken);
Test 134: 
StringReader stringReader = new StringReader("return");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.ReInit(javaCharStream);
Test 135: 
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager((JavaCharStream) null);
javaParserTokenManager.SwitchTo(0);
Test 136: 
StringReader stringReader = new StringReader("<DECIMAL_LITERAL>");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
// Undeclared exception!
try { 
  javaParserTokenManager.SwitchTo((-1));
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Error: Ignoring invalid lexical state : -1. State unchanged.
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 137: 
StringReader stringReader = new StringReader("|");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 138: 
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager((JavaCharStream) null);
javaParserTokenManager.MoreLexicalActions();
Test 139: 
StringReader stringReader = new StringReader("K");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
Token nextToken = javaParserTokenManager.getNextToken();
javaParserTokenManager.TokenLexicalActions(nextToken);

* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 64%
* Total number of goals: 1707
* Number of covered goals: 1090
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 58%
* Total number of goals: 981
* Number of covered goals: 570
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 50%
* Total number of goals: 4
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 11
* Number of covered goals: 11
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 64%
* Total number of goals: 1707
* Number of covered goals: 1089
* Generated 140 tests with total length 682
* Resulting test suite's coverage: 67% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 19:06:23.583 [logback-1] WARN  TimeController - Already entered in phase: COVERAGE_ANALYSIS. This will mess up the timing calculations.
* Resulting test suite's mutation score: 22%
* Compiling and checking tests
[MASTER] 19:07:29.569 [logback-1] WARN  TimeController - Already entered in phase: ASSERTION_GENERATION. This will mess up the timing calculations.
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 19:07:36.404 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar6569019532593285145.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 19:07:36.405 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6569019532593285145.jar
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 19:07:36.451 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar6569019532593285145.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 19:07:36.452 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6569019532593285145.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 19:07:36.495 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar6569019532593285145.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 19:07:36.496 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6569019532593285145.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
[MASTER] 19:07:36.576 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar6569019532593285145.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 19:07:36.577 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6569019532593285145.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
[MASTER] 19:07:36.648 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar6569019532593285145.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 19:07:36.649 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6569019532593285145.jar
* Writing tests to file
[MASTER] 19:07:36.652 [logback-1] WARN  TimeController - Already entered in phase: JUNIT_CHECK. This will mess up the timing calculations.
* Writing JUnit test case 'JavaParserTokenManager_ESTest' to evosuite-tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
* Writing JUnit test case 'JavaParserTokenManager_Original_ESTest' to evosuite-tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
* Done!

* Computation finished
