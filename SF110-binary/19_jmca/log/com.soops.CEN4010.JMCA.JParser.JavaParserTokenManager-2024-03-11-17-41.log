* EvoSuite 1.0.0-SNAPSHOT
* Going to generate test cases for class: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
* Starting Client-0
* Properties loaded from /home/roham/Results-Utestgen/dataset/SF110-new-res/19_jmca/evosuite-files/evosuite.properties
* Connecting to master process on port 21620
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 17:41:52.798 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 17:41:52.802 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 17:41:52.803 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 17:41:52.810 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
* Test criteria:
  - Branch Coverage
  - Line Coverage
  - Method-Output Coverage
  - Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 4410
* Using seed 1710178909692
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%]* Initial Number of Goals in DynaMOSA = 713 / 4410
[Progress:>                             0%] [Cov:==========>                        29%][Progress:>                             2%] [Cov:=============>                     38%][Progress:>                             2%] [Cov:==============>                    41%][Progress:>                             3%] [Cov:==============>                    42%][Progress:=>                            4%] [Cov:===============>                   43%][Progress:=>                            5%] [Cov:===============>                   43%][Progress:=>                            6%] [Cov:===============>                   44%][Progress:===>                          12%] [Cov:===============>                   44%][Progress:===>                          13%] [Cov:==================>                52%][Progress:====>                         14%] [Cov:==================>                53%][Progress:====>                         14%] [Cov:==================>                53%][Progress:=======>                      25%] [Cov:==================>                53%][Progress:=======>                      25%] [Cov:==================>                53%][Progress:=======>                      26%] [Cov:==================>                53%][Progress:========>                     28%] [Cov:==================>                54%][Progress:========>                     28%] [Cov:==================>                54%][Progress:========>                     29%] [Cov:===================>               55%][Progress:========>                     29%] [Cov:===================>               55%][Progress:==========>                   35%] [Cov:===================>               56%][Progress:==========>                   36%] [Cov:===================>               56%][Progress:==========>                   36%] [Cov:===================>               56%][Progress:===========>                  37%] [Cov:===================>               56%][Progress:===========>                  38%] [Cov:===================>               56%][Progress:===========>                  39%] [Cov:===================>               56%][Progress:===========>                  39%] [Cov:===================>               56%][Progress:============>                 40%] [Cov:===================>               56%][Progress:============>                 41%] [Cov:===================>               57%][Progress:============>                 41%] [Cov:===================>               57%][Progress:============>                 42%] [Cov:===================>               57%][Progress:============>                 43%] [Cov:====================>              58%][Progress:=============>                44%] [Cov:====================>              58%][Progress:=============>                44%] [Cov:====================>              58%][Progress:=============>                45%] [Cov:====================>              58%][Progress:=============>                46%] [Cov:====================>              58%][Progress:=============>                46%] [Cov:====================>              59%][Progress:==============>               47%] [Cov:====================>              59%][Progress:==============>               47%] [Cov:====================>              59%][Progress:==============>               48%] [Cov:====================>              59%][Progress:==============>               49%] [Cov:====================>              59%][Progress:==============>               49%] [Cov:====================>              59%][Progress:===============>              50%] [Cov:====================>              59%][Progress:===============>              50%] [Cov:====================>              59%][Progress:===============>              51%] [Cov:====================>              59%][Progress:===============>              51%] [Cov:====================>              59%][Progress:===============>              52%] [Cov:====================>              59%][Progress:===============>              53%] [Cov:====================>              59%][Progress:===============>              53%] [Cov:====================>              59%][Progress:================>             54%] [Cov:=====================>             60%][Progress:================>             54%] [Cov:=====================>             60%][Progress:================>             55%] [Cov:=====================>             60%][Progress:================>             55%] [Cov:=====================>             60%][Progress:================>             56%] [Cov:=====================>             60%][Progress:================>             56%] [Cov:=====================>             60%][Progress:=================>            57%] [Cov:=====================>             60%][Progress:=================>            57%] [Cov:=====================>             60%][Progress:=================>            58%] [Cov:=====================>             60%][Progress:=================>            58%] [Cov:=====================>             60%][Progress:=================>            59%] [Cov:=====================>             60%][Progress:=================>            59%] [Cov:=====================>             60%][Progress:==================>           60%] [Cov:=====================>             60%][Progress:==================>           60%] [Cov:=====================>             60%][Progress:==================>           61%] [Cov:=====================>             61%][Progress:==================>           62%] [Cov:=====================>             61%][Progress:==================>           63%] [Cov:=====================>             61%][Progress:===================>          64%] [Cov:=====================>             61%][Progress:===================>          64%] [Cov:=====================>             62%][Progress:===================>          65%] [Cov:=====================>             62%][Progress:===================>          65%] [Cov:=====================>             62%][Progress:=====================>        71%] [Cov:=====================>             62%][Progress:=====================>        71%] [Cov:=====================>             62%][Progress:=====================>        72%] [Cov:=====================>             62%][Progress:=====================>        72%] [Cov:=====================>             62%][Progress:=====================>        73%] [Cov:=====================>             62%][Progress:======================>       74%] [Cov:=====================>             62%][Progress:======================>       74%] [Cov:======================>            63%][Progress:======================>       75%] [Cov:======================>            63%][Progress:======================>       75%] [Cov:======================>            64%][Progress:======================>       76%] [Cov:======================>            64%][Progress:======================>       76%] [Cov:======================>            64%][Progress:=======================>      77%] [Cov:======================>            64%][Progress:========================>     82%] [Cov:======================>            64%][Progress:========================>     82%] [Cov:======================>            64%][Progress:========================>     83%] [Cov:======================>            65%][Progress:=========================>    84%] [Cov:======================>            65%][Progress:=========================>    85%] [Cov:======================>            65%][Progress:=========================>    85%] [Cov:======================>            65%][Progress:=========================>    85%] [Cov:======================>            65%][Progress:=========================>    86%] [Cov:======================>            65%][Progress:=========================>    86%] [Cov:======================>            65%][Progress:==========================>   87%] [Cov:======================>            65%][Progress:==========================>   87%] [Cov:======================>            65%][Progress:==========================>   88%] [Cov:======================>            65%][Progress:==========================>   88%] [Cov:======================>            65%][Progress:============================> 94%] [Cov:======================>            65%][Progress:============================> 95%] [Cov:======================>            65%][Progress:============================> 95%] [Cov:======================>            65%][Progress:============================> 96%] [Cov:======================>            65%][Progress:============================> 96%] [Cov:======================>            65%][Progress:=============================>97%] [Cov:======================>            65%][Progress:=============================>97%] [Cov:======================>            65%][Progress:=============================>98%] [Cov:======================>            65%][Progress:=============================>99%] [Cov:======================>            65%][Progress:=============================>99%] [Cov:======================>            65%][Progress:==============================100%] [Cov:======================>            65%][Progress:==============================100%] [Cov:======================>            65%][Progress:==============================100%] [Cov:======================>            65%]
* Search finished after 102s and 105 generations, 72339 statements, best individual has fitness: 1739.0
* Generated before the refinement 124 tests with total length 621
statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("NcAxw&GXks@")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, (-572), (-572))
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("NcAxw&GXks@");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-572), (-572));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("This is a sample input string.");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, 0, 0);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("This is a sample input string."), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, 0, 0), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "This is a sample input string.";
StringReader stringReader = new StringReader(string);
int _int = 0;
int _int = 0;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();
((JavaParserTokenManager) _int).getNextToken();
((JavaParserTokenManager) _int).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("^|)")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 2048, 126)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: ReInit(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: javaParserTokenManager.ReInit(arg0)
test data is: StringReader stringReader = new StringReader("^|)");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2048, 126);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.ReInit(javaCharStream);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("Hello World!");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2048, 126);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.ReInit(javaCharStream);
    }
}
statement is: StringReader stringReader = new StringReader("Hello World!"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2048, 126), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.ReInit(javaCharStream), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.ReInit(javaCharStream) target is: javaParserTokenManager method is: ReInit(JavaCharStream)
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
Matched Method is: ReInit(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V
TestCase is: String string = "Hello World!";
StringReader stringReader = new StringReader(string);
int _int = 2048;
int _int = 126;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).ReInit(javaCharStream);

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("jO!b-9;k+9p~1i'9(H ")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 95, (-1426))
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("jO!b-9;k+9p~1i'9(H ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 95, (-1426));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("jO!b-9;k+9p~1i'9(H ");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, "javaCode", -1426);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();// returns "javaKeyword" token

        javaParserTokenManager.getNextToken();// returns "semicolon" token

        javaParserTokenManager.getNextToken();// returns "identifier" token

        javaParserTokenManager.getNextToken();// returns "plus" token

        javaParserTokenManager.getNextToken();// returns "integerLiteral" token }}

    }
}
statement is: StringReader stringReader = new StringReader("jO!b-9;k+9p~1i'9(H "), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, "javaCode", -1426), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken()// returns "javaKeyword" token
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken()// returns "javaKeyword" token
 target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken()// returns "semicolon" token
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken()// returns "semicolon" token
 target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken()// returns "identifier" token
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken()// returns "identifier" token
 target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken()// returns "plus" token
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken()// returns "plus" token
 target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken()// returns "integerLiteral" token }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken()// returns "integerLiteral" token }}
 target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "jO!b-9;k+9p~1i'9(H ";
StringReader stringReader = new StringReader(string);
String string = "javaCode";
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (int) string, (-1426));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) string).getNextToken();
((JavaParserTokenManager) string).getNextToken();
((JavaParserTokenManager) string).getNextToken();
((JavaParserTokenManager) string).getNextToken();
((JavaParserTokenManager) string).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("NvAxw&GXks@")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0, 1)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("NvAxw&GXks@");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 1);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("This is a test string with various characters.");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 1);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("This is a test string with various characters."), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 1), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;I)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "This is a test string with various characters.";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
int _int = 1;
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, _int);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("NcAxw&GXks@")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, (-572), (-572))
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: org.evosuite.runtime.mock.java.io.MockPrintStream(Ljava/io/OutputStream;Z)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.io.MockPrintStream
statement code is: MockPrintStream mockPrintStream = new MockPrintStream(javaParserTokenManager.debugStream, false)
statement is: setDebugStream(Ljava/io/PrintStream;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: javaParserTokenManager.setDebugStream(arg0)
test data is: StringReader stringReader = new StringReader("NcAxw&GXks@");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-572), (-572));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
MockPrintStream mockPrintStream = new MockPrintStream(javaParserTokenManager.debugStream, false);
javaParserTokenManager.setDebugStream(mockPrintStream);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("The quick brown fox jumps over the lazy dog.");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, -572, -572);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        MockPrintStream mockPrintStream = new MockPrintStream(javaParserTokenManager.debugStream, false);
        javaParserTokenManager.setDebugStream(mockPrintStream);
    }
}
statement is: StringReader stringReader = new StringReader("The quick brown fox jumps over the lazy dog."), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, -572, -572), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: MockPrintStream mockPrintStream = new MockPrintStream(javaParserTokenManager.debugStream, false), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.setDebugStream(mockPrintStream), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.setDebugStream(mockPrintStream) target is: javaParserTokenManager method is: setDebugStream(MockPrintStream)
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: setDebugStream(Ljava/io/PrintStream;)V
TestCase is: String string = "The quick brown fox jumps over the lazy dog.";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-572), (-572));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
boolean _boolean = false;
MockPrintStream mockPrintStream = new MockPrintStream((OutputStream) _boolean, false);
((JavaParserTokenManager) javaCharStream).setDebugStream(mockPrintStream);

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("$^{#-yOp5%_d")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, (-201), (-201))
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("$^{#-yOp5%_d");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-201), (-201));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("This is a sample input string for testing the JavaParserTokenManager.");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, 100, 100);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("This is a sample input string for testing the JavaParserTokenManager."), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, 100, 100), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "This is a sample input string for testing the JavaParserTokenManager.";
StringReader stringReader = new StringReader(string);
int _int = 100;
int _int = 100;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();
((JavaParserTokenManager) _int).getNextToken();
((JavaParserTokenManager) _int).getNextToken();
((JavaParserTokenManager) _int).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("\"boolean\"")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: ReadByte()C type is: class org.evosuite.testcase.statements.MethodStatement return type char
statement code is: char ReadByte = javaCharStream.ReadByte()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("\"boolean\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaCharStream.ReadByte();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("\"boolean_type\"");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaCharStream.ReadByte();
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("\"boolean_type\""), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.ReadByte(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.ReadByte() target is: javaCharStream method is: ReadByte()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 2
Matched Method is: ReadByte()C
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "\"boolean_type\"";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaCharStream) stringReader).ReadByte();
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("natiZe")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("natiZe");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("natiZe");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("natiZe"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "natiZe";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("final")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;III)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 0, 8, 0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("final");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 0, 8, 0);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("final private static String test = \"hello world\";");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, 0, 8, 0);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("final private static String test = \"hello world\";"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, 0, 8, 0), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 6
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "final private static String test = \"hello world\";";
StringReader stringReader = new StringReader(string);
int _int = 0;
int _int = 8;
int _int = 0;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int, _int);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("|.tR/*>@VW/<^")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 35, 35)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("|.tR/*>@VW/<^");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 35, 35);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("|.tR/*>@VW/<^");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, 35, 35);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("|.tR/*>@VW/<^"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, 35, 35), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "|.tR/*>@VW/<^";
StringReader stringReader = new StringReader(string);
int _int = 35;
int _int = 35;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();
((JavaParserTokenManager) _int).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("k=wdQg'dUra1Yb\"qN")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 62, 62)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("k=wdQg'dUra1Yb\"qN");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 62, 62);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("This is a sample string for testing purposes");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, 62, 62);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("This is a sample string for testing purposes"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, 62, 62), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "This is a sample string for testing purposes";
StringReader stringReader = new StringReader(string);
int _int = 62;
int _int = 62;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();
((JavaParserTokenManager) _int).getNextToken();
((JavaParserTokenManager) _int).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("\"break\"")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 34, 787)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("\"break\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 34, 787);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("\"breakfast\"");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, 34, 787);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("\"breakfast\""), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, 34, 787), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "\"breakfast\"";
StringReader stringReader = new StringReader(string);
int _int = 34;
int _int = 787;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("%")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("%");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("public class HelloWorld {\n" + ((("    public static void main(String[] args) {\n" + "        System.out.println(\"Hello World\");\n") + "    }\n") + "}"));
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("public class HelloWorld {\n" + ((("    public static void main(String[] args) {\n" + "        System.out.println(\"Hello World\");\n") + "    }\n") + "}")), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 2
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: StringReader stringReader = new StringReader("%");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("^'e&9U}{wH.'b@_")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 43, (-549))
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("^'e&9U}{wH.'b@_");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 43, (-549));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream javaCharStream = new JavaCharStream(stringReader, 43, -549);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        // The test data is being used to exercise the JavaParserTokenManager's ability to handle different types of input.
        javaParserTokenManager.getNextToken();
        String token1 = ((String) (javaParserTokenManager.getLVal().toString()));
        int line1 = javaParserTokenManager.getLine();
        int column1 = javaParserTokenManager.getColumn();
        System.out.println((((("Token 1: " + token1) + ", Line: ") + line1) + ", Column: ") + column1);
        javaParserTokenManager.getNextToken();
        String token2 = ((String) (javaParserTokenManager.getLVal().toString()));
        int line2 = javaParserTokenManager.getLine();
        int column2 = javaParserTokenManager.getColumn();
        System.out.println((((("Token 2: " + token2) + ", Line: ") + line2) + ", Column: ") + column2);
    }
}
statement is: CharStream javaCharStream = new JavaCharStream(stringReader, 43, -549), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: // The test data is being used to exercise the JavaParserTokenManager's ability to handle different types of input.
javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // The test data is being used to exercise the JavaParserTokenManager's ability to handle different types of input.
javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 2
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 2
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: String token1 = ((String) (javaParserTokenManager.getLVal().toString())), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: ((String) (javaParserTokenManager.getLVal().toString())) target is: javaParserTokenManager.getLVal() method is: toString()
statement is: int line1 = javaParserTokenManager.getLine(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getLine() target is: javaParserTokenManager method is: getLine()
statement is: int column1 = javaParserTokenManager.getColumn(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getColumn() target is: javaParserTokenManager method is: getColumn()
statement is: System.out.println((((("Token 1: " + token1) + ", Line: ") + line1) + ", Column: ") + column1), class spoon.support.reflect.code.CtInvocationImpl
invocation is: System.out.println((((("Token 1: " + token1) + ", Line: ") + line1) + ", Column: ") + column1) target is: System.out method is: println(java.lang.String)
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 2
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 2
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: String token2 = ((String) (javaParserTokenManager.getLVal().toString())), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: ((String) (javaParserTokenManager.getLVal().toString())) target is: javaParserTokenManager.getLVal() method is: toString()
statement is: int line2 = javaParserTokenManager.getLine(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getLine() target is: javaParserTokenManager method is: getLine()
statement is: int column2 = javaParserTokenManager.getColumn(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getColumn() target is: javaParserTokenManager method is: getColumn()
statement is: System.out.println((((("Token 2: " + token2) + ", Line: ") + line2) + ", Column: ") + column2), class spoon.support.reflect.code.CtInvocationImpl
invocation is: System.out.println((((("Token 2: " + token2) + ", Line: ") + line2) + ", Column: ") + column2) target is: System.out method is: println(java.lang.String)
TestCase is: int _int = 43;
JavaCharStream javaCharStream = new JavaCharStream((Reader) _int, 43, (-549));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("(6;:4<k/[cY3Y%=")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 13, (-1288))
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("(6;:4<k/[cY3Y%=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 13, (-1288));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("(6;:4<k/[cY3Y%=)");// Changed the primitive value to a more descriptive example, e.g., "test_string"

        JavaCharStream javaCharStream = new JavaCharStream(stringReader, 13, -1288);// Changed the integer value to a more descriptive example, e.g., 42

        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("(6;:4<k/[cY3Y%=)")// Changed the primitive value to a more descriptive example, e.g., "test_string"
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, 13, -1288)// Changed the integer value to a more descriptive example, e.g., 42
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "(6;:4<k/[cY3Y%=)";
StringReader stringReader = new StringReader(string);
int _int = 13;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, (-1288));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("^|)")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 2048, 126)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("^|)");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2048, 126);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("^|)");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2048, 126);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("^|)"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2048, 126), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "^|)";
StringReader stringReader = new StringReader(string);
int _int = 2048;
int _int = 126;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();
((JavaParserTokenManager) _int).getNextToken();
((JavaParserTokenManager) _int).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("umv8l],QIu*+v:")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 80, 46)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("umv8l],QIu*+v:");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 80, 46);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("hello world! This is a sample text.");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, 80, 46);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("hello world! This is a sample text."), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, 80, 46), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "hello world! This is a sample text.";
StringReader stringReader = new StringReader(string);
int _int = 80;
int _int = 46;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();
((JavaParserTokenManager) _int).getNextToken();
((JavaParserTokenManager) _int).getNextToken();
((JavaParserTokenManager) _int).getNextToken();
((JavaParserTokenManager) _int).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("K+3rieRSSY<h/Zu")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("K+3rieRSSY<h/Zu");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("The quick brown fox jumps over the lazy dog.");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("The quick brown fox jumps over the lazy dog."), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "The quick brown fox jumps over the lazy dog.";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("d0kum>h+(Rz.tl/")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 1224, 1224)
statement is: readChar()C type is: class org.evosuite.testcase.statements.MethodStatement return type char
statement code is: char readChar = javaCharStream.readChar()
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("d0kum>h+(Rz.tl/");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1224, 1224);
javaCharStream.readChar();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("package com.example;\n\n" + (((((((((((("    public static void main(String[] args) {\n" + "        System.out.println(\"Hello, World!\");\n") + "    }\n") + "}\n") + "\t\n") + "// This is a comment\n") + "String message = \"Hello, World!\";\n") + "\n") + "public class AnotherClass {\n") + "    public void doSomething() {\n") + "        System.out.println(message);\n") + "    }\n") + "}\n"));
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1224, 1224);
        javaCharStream.readChar();
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("package com.example;\n\n" + (((((((((((("    public static void main(String[] args) {\n" + "        System.out.println(\"Hello, World!\");\n") + "    }\n") + "}\n") + "\t\n") + "// This is a comment\n") + "String message = \"Hello, World!\";\n") + "\n") + "public class AnotherClass {\n") + "    public void doSomething() {\n") + "        System.out.println(message);\n") + "    }\n") + "}\n")), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1224, 1224), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.readChar(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.readChar() target is: javaCharStream method is: readChar()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 3
Matched Method is: readChar()C
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 3, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: StringReader stringReader = new StringReader("d0kum>h+(Rz.tl/");
int _int = 1224;
int _int = 1224;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int);
((JavaCharStream) _int).readChar();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("1/Q!9u5a8y)'vNk")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("1/Q!9u5a8y)'vNk");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("1234567890");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("1234567890"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "1234567890";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("X2.jDp2{4C#B#MROjm")
statement is: read()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int read = stringReader.read()
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 2242, 163)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("X2.jDp2{4C#B#MROjm");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2242, 163);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        stringReader.read();
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1024, 512);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: stringReader.read(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: stringReader.read() target is: stringReader method is: read()
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1024, 512), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 3, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: int _int = 1024;
int _int = 512;
JavaCharStream javaCharStream = new JavaCharStream((Reader) _int, _int, 163);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("47a")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;III)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 98, 98, 98)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("47a");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 98, 98, 98);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("47a");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, 98, 98, 98);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("47a"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, 98, 98, 98), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 6
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "47a";
StringReader stringReader = new StringReader(string);
int _int = 98;
int _int = 98;
int _int = 98;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int, _int);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("WE:6 l")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, (byte)53, 26)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("WE:6 l");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (byte)53, 26);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("WE:6 l");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, ((byte) (53)), 26);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("WE:6 l"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, ((byte) (53)), 26), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "WE:6 l";
StringReader stringReader = new StringReader(string);
int _int = 53;
int _int = 26;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();
((JavaParserTokenManager) _int).getNextToken();
((JavaParserTokenManager) _int).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("7b%*2- |\"Ae")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, (byte) (-12), 13)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("7b%*2- |\"Ae");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (byte) (-12), 13);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("7b%*2- |\"Ae");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, ((byte) (-12)), 13);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("7b%*2- |\"Ae"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, ((byte) (-12)), 13), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "7b%*2- |\"Ae";
StringReader stringReader = new StringReader(string);
int _int = 13;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, 13);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();
((JavaParserTokenManager) _int).getNextToken();
((JavaParserTokenManager) _int).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("#8zd&UG=M")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 34, (-71))
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: read()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int read = stringReader.read()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("#8zd&UG=M");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 34, (-71));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
stringReader.read();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("abcdefg");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, 34, -71);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        stringReader.read();
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("abcdefg"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, 34, -71), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: stringReader.read(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: stringReader.read() target is: stringReader method is: read()
source statement: java.io.StringReader(Ljava/lang/String;)V callee: VariableReference: Statement 0, type java.io.StringReaderindex is: 1
Matched Method is: read()I
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "abcdefg";
StringReader stringReader = new StringReader(string);
int _int = 34;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, (-71));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((StringReader) string).read();
((JavaParserTokenManager) _int).getNextToken();
((JavaParserTokenManager) _int).getNextToken();
((JavaParserTokenManager) _int).getNextToken();
((JavaParserTokenManager) _int).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("#8-;d&UG=M")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 34, (-71))
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: read()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int read = stringReader.read()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("#8-;d&UG=M");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 34, (-71));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
stringReader.read();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("1234567890");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, 34, -71);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        stringReader.read();
        javaParserTokenManager.getNextToken();// Reads the first character of the string "1"

        javaParserTokenManager.getNextToken();// Reads the second character of the string "2"

        javaParserTokenManager.getNextToken();// Reads the third character of the string "3"

        javaParserTokenManager.getNextToken();// Reads the fourth character of the string "4"

        javaParserTokenManager.getNextToken();// Reads the fifth character of the string "5" }}

    }
}
statement is: StringReader stringReader = new StringReader("1234567890"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, 34, -71), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: stringReader.read(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: stringReader.read() target is: stringReader method is: read()
source statement: java.io.StringReader(Ljava/lang/String;)V callee: VariableReference: Statement 0, type java.io.StringReaderindex is: 1
Matched Method is: read()I
statement is: javaParserTokenManager.getNextToken()// Reads the first character of the string "1"
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken()// Reads the first character of the string "1"
 target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken()// Reads the second character of the string "2"
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken()// Reads the second character of the string "2"
 target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken()// Reads the third character of the string "3"
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken()// Reads the third character of the string "3"
 target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken()// Reads the fourth character of the string "4"
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken()// Reads the fourth character of the string "4"
 target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken()// Reads the fifth character of the string "5" }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken()// Reads the fifth character of the string "5" }}
 target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "1234567890";
StringReader stringReader = new StringReader(string);
int _int = 34;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, (-71));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((StringReader) string).read();
((JavaParserTokenManager) _int).getNextToken();
((JavaParserTokenManager) _int).getNextToken();
((JavaParserTokenManager) _int).getNextToken();
((JavaParserTokenManager) _int).getNextToken();
((JavaParserTokenManager) _int).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("d0kum>h+(Rz.tl/")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 1224, 108)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: BeginToken()C type is: class org.evosuite.testcase.statements.MethodStatement return type char
statement code is: char BeginToken = javaCharStream.BeginToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token$GTToken
statement code is: Token.GTToken nextToken = (Token.GTToken)javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("d0kum>h+(Rz.tl/");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1224, 108);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaCharStream.BeginToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("The quick brown fox jumps over the lazy dog.");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1224, 108);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        javaCharStream.BeginToken();
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("The quick brown fox jumps over the lazy dog."), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1224, 108), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaCharStream.BeginToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.BeginToken() target is: javaCharStream method is: BeginToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 4
Matched Method is: BeginToken()C
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "The quick brown fox jumps over the lazy dog.";
StringReader stringReader = new StringReader(string);
int _int = 1224;
int _int = 108;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();
((JavaCharStream) stringReader).BeginToken();
((JavaParserTokenManager) _int).getNextToken();
((JavaParserTokenManager) _int).getNextToken();
((JavaParserTokenManager) _int).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("khlu`,.?(dX<iWFzA0!")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 4976, 4976)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: BeginToken()C type is: class org.evosuite.testcase.statements.MethodStatement return type char
statement code is: char BeginToken = javaCharStream.BeginToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("khlu`,.?(dX<iWFzA0!");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 4976, 4976);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaCharStream.BeginToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("Hello, World!");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1234567890, 1234567890);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        javaCharStream.BeginToken();
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("Hello, World!"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1234567890, 1234567890), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaCharStream.BeginToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.BeginToken() target is: javaCharStream method is: BeginToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 4
Matched Method is: BeginToken()C
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "Hello, World!";
StringReader stringReader = new StringReader(string);
int _int = 1234567890;
int _int = 1234567890;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();
((JavaCharStream) stringReader).BeginToken();
((JavaParserTokenManager) _int).getNextToken();
((JavaParserTokenManager) _int).getNextToken();
((JavaParserTokenManager) _int).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("]A@&o<InReRX?5UO`iO")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("]A@&o<InReRX?5UO`iO");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("]A@&o<InReRX?5UO`iO");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        // Improved test data: using more descriptive and representative values for the primitive types and Strings
        int numberOfTokens = 3;
        String expectedTokenType1 = "IDENTIFIER";
        String expectedTokenValue1 = "InReRX?5UO`iO";
        String expectedTokenType2 = "LESS_THAN";
        String expectedTokenValue2 = "<";
        String expectedTokenType3 = "GREATER_THAN";
        String expectedTokenValue3 = ">";
        javaParserTokenManager.getNextToken();
        assertEquals(numberOfTokens, javaParserTokenManager.count());
        assertEquals(expectedTokenType1, javaParserTokenManager.getCurrentToken().getType());
        assertEquals(expectedTokenValue1, javaParserTokenManager.getCurrentToken().getValue());
        javaParserTokenManager.getNextToken();
        assertEquals(numberOfTokens, javaParserTokenManager.count());
        assertEquals(expectedTokenType2, javaParserTokenManager.getCurrentToken().getType());
        assertEquals(expectedTokenValue2, javaParserTokenManager.getCurrentToken().getValue());
        javaParserTokenManager.getNextToken();
        assertEquals(numberOfTokens, javaParserTokenManager.count());
        assertEquals(expectedTokenType3, javaParserTokenManager.getCurrentToken().getType());
        assertEquals(expectedTokenValue3, javaParserTokenManager.getCurrentToken().getValue());
    }
}
statement is: StringReader stringReader = new StringReader("]A@&o<InReRX?5UO`iO"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: // Improved test data: using more descriptive and representative values for the primitive types and Strings
int numberOfTokens = 3, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String expectedTokenType1 = "IDENTIFIER", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String expectedTokenValue1 = "InReRX?5UO`iO", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String expectedTokenType2 = "LESS_THAN", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String expectedTokenValue2 = "<", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String expectedTokenType3 = "GREATER_THAN", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String expectedTokenValue3 = ">", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: assertEquals(numberOfTokens, javaParserTokenManager.count()), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(numberOfTokens, javaParserTokenManager.count()) target is:  method is: assertEquals(int,<unknown>)
statement is: assertEquals(expectedTokenType1, javaParserTokenManager.getCurrentToken().getType()), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(expectedTokenType1, javaParserTokenManager.getCurrentToken().getType()) target is:  method is: assertEquals(java.lang.String,<unknown>)
statement is: assertEquals(expectedTokenValue1, javaParserTokenManager.getCurrentToken().getValue()), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(expectedTokenValue1, javaParserTokenManager.getCurrentToken().getValue()) target is:  method is: assertEquals(java.lang.String,<unknown>)
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: assertEquals(numberOfTokens, javaParserTokenManager.count()), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(numberOfTokens, javaParserTokenManager.count()) target is:  method is: assertEquals(int,<unknown>)
statement is: assertEquals(expectedTokenType2, javaParserTokenManager.getCurrentToken().getType()), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(expectedTokenType2, javaParserTokenManager.getCurrentToken().getType()) target is:  method is: assertEquals(java.lang.String,<unknown>)
statement is: assertEquals(expectedTokenValue2, javaParserTokenManager.getCurrentToken().getValue()), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(expectedTokenValue2, javaParserTokenManager.getCurrentToken().getValue()) target is:  method is: assertEquals(java.lang.String,<unknown>)
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: assertEquals(numberOfTokens, javaParserTokenManager.count()), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(numberOfTokens, javaParserTokenManager.count()) target is:  method is: assertEquals(int,<unknown>)
statement is: assertEquals(expectedTokenType3, javaParserTokenManager.getCurrentToken().getType()), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(expectedTokenType3, javaParserTokenManager.getCurrentToken().getType()) target is:  method is: assertEquals(java.lang.String,<unknown>)
statement is: assertEquals(expectedTokenValue3, javaParserTokenManager.getCurrentToken().getValue()), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(expectedTokenValue3, javaParserTokenManager.getCurrentToken().getValue()) target is:  method is: assertEquals(java.lang.String,<unknown>)
* this is vulnerable: int _int = 3
* this is vulnerable: String string = "IDENTIFIER"
* this is vulnerable: String string = "InReRX?5UO`iO"
* this is vulnerable: String string = "LESS_THAN"
* this is vulnerable: String string = "<"
* this is vulnerable: String string = "GREATER_THAN"
* this is vulnerable: String string = ">"
TestCase is: String string = "]A@&o<InReRX?5UO`iO";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
int _int = 3;
String string = "IDENTIFIER";
String string = "InReRX?5UO`iO";
String string = "LESS_THAN";
String string = "<";
String string = "GREATER_THAN";
String string = ">";
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("BZp6<Y+")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, (-1093), 0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("BZp6<Y+");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-1093), 0);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("BZp6<Y+");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, -1093, 0);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();// returns a token with value "B"

        javaParserTokenManager.getNextToken();// returns a token with value "Zp6<Y+" }}

    }
}
statement is: StringReader stringReader = new StringReader("BZp6<Y+"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, -1093, 0), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken()// returns a token with value "B"
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken()// returns a token with value "B"
 target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken()// returns a token with value "Zp6<Y+" }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken()// returns a token with value "Zp6<Y+" }}
 target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "BZp6<Y+";
StringReader stringReader = new StringReader(string);
int _int = 0;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, 0);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();
((JavaParserTokenManager) _int).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("C1d6fEAGt/SgT<8S.\"6")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, (-159), 73)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("C1d6fEAGt/SgT<8S.\"6");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-159), 73);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("C1d6fEAGt/SgT<8S.\"6");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, -159, 73);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("C1d6fEAGt/SgT<8S.\"6"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, -159, 73), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "C1d6fEAGt/SgT<8S.\"6";
StringReader stringReader = new StringReader(string);
int _int = 73;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, 73);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();
((JavaParserTokenManager) _int).getNextToken();
((JavaParserTokenManager) _int).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("<DIGIT>")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, (-2279), 50)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("<DIGIT>");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-2279), 50);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("<DIGIT>");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, -2279, 50);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("<DIGIT>"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, -2279, 50), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "<DIGIT>";
StringReader stringReader = new StringReader(string);
int _int = 50;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, 50);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();
((JavaParserTokenManager) _int).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("Et")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;III)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 1261, 1261, 1261)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("Et");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1261, 1261, 1261);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("A long string of characters");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1261, 1261, 1261);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("A long string of characters"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1261, 1261, 1261), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 6
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "A long string of characters";
StringReader stringReader = new StringReader(string);
int _int = 1261;
int _int = 1261;
int _int = 1261;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int, _int);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader(">HjU:8JG+L>'")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, (-1201), 28)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token$GTToken
statement code is: Token.GTToken nextToken = (Token.GTToken)javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader(">HjU:8JG+L>'");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-1201), 28);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader(">HjU:8JG+L>'");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, -1201, 28);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader(">HjU:8JG+L>'"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, -1201, 28), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = ">HjU:8JG+L>'";
StringReader stringReader = new StringReader(string);
int _int = 28;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, 28);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();
((JavaParserTokenManager) _int).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("PhL/JEk=$G-CZ<$/")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 103, 32)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("PhL/JEk=$G-CZ<$/");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 103, 32);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("This is a test string with various characters and symbols");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, 103, 32);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("This is a test string with various characters and symbols"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, 103, 32), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "This is a test string with various characters and symbols";
StringReader stringReader = new StringReader(string);
int _int = 103;
int _int = 32;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();
((JavaParserTokenManager) _int).getNextToken();
((JavaParserTokenManager) _int).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("LsNAZFC=>")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 22, (-1))
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("LsNAZFC=>");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 22, (-1));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("LsNAZFC=>");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, 22, -1);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("LsNAZFC=>"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, 22, -1), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "LsNAZFC=>";
StringReader stringReader = new StringReader(string);
int _int = 22;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, (-1));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();
((JavaParserTokenManager) _int).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("Mm8jhEnx3A7`aB%l")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("Mm8jhEnx3A7`aB%l");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("This is a test input for the JavaParserTokenManager.");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("This is a test input for the JavaParserTokenManager."), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "This is a test input for the JavaParserTokenManager.";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("Q/RC")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, (-3593), (-2508))
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("Q/RC");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-3593), (-2508));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("Q/RC");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1234567890, -987654321);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("Q/RC"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1234567890, -987654321), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "Q/RC";
StringReader stringReader = new StringReader(string);
int _int = 1234567890;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, (-2508));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();
((JavaParserTokenManager) _int).getNextToken();
((JavaParserTokenManager) _int).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("TVvjng6`q/4")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 43, (-751))
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("TVvjng6`q/4");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 43, (-751));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("TVvjng6`q/4");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, 43, -751);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("TVvjng6`q/4"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, 43, -751), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "TVvjng6`q/4";
StringReader stringReader = new StringReader(string);
int _int = 43;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, (-751));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();
((JavaParserTokenManager) _int).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("V|,jh7no3A7`aB%lp")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("V|,jh7no3A7`aB%lp");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
    }
}
statement is: CharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("X2.jDp2{4C#B#MROjm")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 22, 98)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("X2.jDp2{4C#B#MROjm");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 22, 98);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("This is a test string with some complex data types such as integers, doubles, and strings.");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, 100, 25);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("This is a test string with some complex data types such as integers, doubles, and strings."), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, 100, 25), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "This is a test string with some complex data types such as integers, doubles, and strings.";
StringReader stringReader = new StringReader(string);
int _int = 100;
int _int = 25;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("AYOoZS-V#`O7i?3Hk")
statement is: read()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int read = stringReader.read()
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 1935, 65)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("AYOoZS-V#`O7i?3Hk");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1935, 65);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("AYOoZS-V#`O7i?3Hk");
        stringReader.read();
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1935, 65);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("AYOoZS-V#`O7i?3Hk"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: stringReader.read(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: stringReader.read() target is: stringReader method is: read()
source statement: java.io.StringReader(Ljava/lang/String;)V callee: VariableReference: Statement 0, type java.io.StringReaderindex is: 1
Matched Method is: read()I
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1935, 65), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 3, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 6
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "AYOoZS-V#`O7i?3Hk";
StringReader stringReader = new StringReader(string);
((StringReader) string).read();
int _int = 1935;
int _int = 65;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("Z]")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("Z]");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("Z]");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("Z]"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "Z]";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("m|[YGdJ~'?<YIVNb$v")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("m|[YGdJ~'?<YIVNb$v");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("m|[YGdJ~'?<YIVNb$v");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();// This token is a "m" character.

        javaParserTokenManager.getNextToken();// This token is an opening square bracket.

        javaParserTokenManager.getNextToken();// This token is a "YGdJ~'?<YIVNb$v" string. }}

    }
}
statement is: StringReader stringReader = new StringReader("m|[YGdJ~'?<YIVNb$v"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken()// This token is a "m" character.
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken()// This token is a "m" character.
 target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken()// This token is an opening square bracket.
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken()// This token is an opening square bracket.
 target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken()// This token is a "YGdJ~'?<YIVNb$v" string. }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken()// This token is a "YGdJ~'?<YIVNb$v" string. }}
 target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "m|[YGdJ~'?<YIVNb$v";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("8f}_mL;mcP I~)~1y!")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 108, 108)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("8f}_mL;mcP I~)~1y!");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 108, 108);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream javaCharStream = new JavaCharStream(stringReader, 108, 108);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
    }
}
statement is: CharStream javaCharStream = new JavaCharStream(stringReader, 108, 108), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: int _int = 108;
int _int = 108;
JavaCharStream javaCharStream = new JavaCharStream((Reader) _int, _int, 108);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("Invalid escape character at line ")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 22, 58)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("Invalid escape character at line ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 22, 58);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("Invalid escape character at line 10");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, 22, 58);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("Invalid escape character at line 10"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, 22, 58), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "Invalid escape character at line 10";
StringReader stringReader = new StringReader(string);
int _int = 22;
int _int = 58;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();
((JavaParserTokenManager) _int).getNextToken();
((JavaParserTokenManager) _int).getNextToken();
((JavaParserTokenManager) _int).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("Cg%:'y>,{hRMT")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;III)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 67, (-1041), 67)
statement is: BeginToken()C type is: class org.evosuite.testcase.statements.MethodStatement return type char
statement code is: char BeginToken = javaCharStream.BeginToken()
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("Cg%:'y>,{hRMT");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 67, (-1041), 67);
javaCharStream.BeginToken();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream javaCharStream = new JavaCharStream(stringReader, 67, -1041, 67);
        javaCharStream.BeginToken();
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
    }
}
statement is: CharStream javaCharStream = new JavaCharStream(stringReader, 67, -1041, 67), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.BeginToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.BeginToken() target is: javaCharStream method is: BeginToken()
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase is: int _int = 67;
int _int = 67;
JavaCharStream javaCharStream = new JavaCharStream((Reader) _int, _int, (-1041), 67);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("]iTjg7{{8uu4s7|$]?|")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("]iTjg7{{8uu4s7|$]?|");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("This is a sample input for testing the JavaParserTokenManager class.");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("This is a sample input for testing the JavaParserTokenManager class."), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "This is a sample input for testing the JavaParserTokenManager class.";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("khlu`,.?(dX<iWFzA0!")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 4976, 4976)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: read()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int read = stringReader.read()
statement is: read()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int read = stringReader.read()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("khlu`,.?(dX<iWFzA0!");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 4976, 4976);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
stringReader.read();
stringReader.read();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("This is a sample input string for testing JavaParser.");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, 4976, 4976);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        stringReader.read();
        stringReader.read();
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("This is a sample input string for testing JavaParser."), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, 4976, 4976), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: stringReader.read(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: stringReader.read() target is: stringReader method is: read()
source statement: java.io.StringReader(Ljava/lang/String;)V callee: VariableReference: Statement 0, type java.io.StringReaderindex is: 1
source statement: java.io.StringReader(Ljava/lang/String;)V callee: VariableReference: Statement 0, type java.io.StringReaderindex is: 1
Matched Method is: read()I
statement is: stringReader.read(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: stringReader.read() target is: stringReader method is: read()
source statement: java.io.StringReader(Ljava/lang/String;)V callee: VariableReference: Statement 0, type java.io.StringReaderindex is: 1
source statement: java.io.StringReader(Ljava/lang/String;)V callee: VariableReference: Statement 0, type java.io.StringReaderindex is: 1
Matched Method is: read()I
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "This is a sample input string for testing JavaParser.";
StringReader stringReader = new StringReader(string);
int _int = 4976;
int _int = 4976;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((StringReader) string).read();
((StringReader) string).read();
((JavaParserTokenManager) _int).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("const")
statement is: read()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int read = stringReader.read()
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 1935, 1935)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("const");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1935, 1935);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("const");
        stringReader.read();
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1935, 1935);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("const"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: stringReader.read(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: stringReader.read() target is: stringReader method is: read()
source statement: java.io.StringReader(Ljava/lang/String;)V callee: VariableReference: Statement 0, type java.io.StringReaderindex is: 1
Matched Method is: read()I
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1935, 1935), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 3, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 6
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "const";
StringReader stringReader = new StringReader(string);
((StringReader) string).read();
int _int = 1935;
int _int = 1935;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("x|3pE!.}j(p2tc")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 1369, (-2279))
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("x|3pE!.}j(p2tc");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1369, (-2279));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream javaCharStream = new JavaCharStream(stringReader, 1369, -2279);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        String expectedIdentifier = "x";
        int expectedIntLiteral = 3;
        double expectedDoubleLiteral = 4.5;
        char expectedSingleQuotedString = 'a';
        char expectedDoubleQuotedString = "Hello World!";
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
    }
}
statement is: CharStream javaCharStream = new JavaCharStream(stringReader, 1369, -2279), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: String expectedIdentifier = "x", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: int expectedIntLiteral = 3, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: double expectedDoubleLiteral = 4.5, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: char expectedSingleQuotedString = 'a', class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: char expectedDoubleQuotedString = "Hello World!", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 2
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 2
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 2
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 2
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 2
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 2
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 2
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 2
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 2
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 2
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 2
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 2
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 2
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 2
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 2
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 2
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
* this is vulnerable: String string = "x"
* this is vulnerable: int _int = 3
* this is vulnerable: double _double = 4.5
* this is vulnerable: char _char = 'a'
* this is vulnerable: String string = "Hello World!"
TestCase is: int _int = 1369;
JavaCharStream javaCharStream = new JavaCharStream((Reader) _int, 1369, (-2279));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
String string = "x";
int _int = 3;
double _double = 4.5;
char _char = 'a';
String string = "Hello World!";
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("qA7[2{M^X ")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 98, 47)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("qA7[2{M^X ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 98, 47);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream javaCharStream = new JavaCharStream(stringReader, 98, 47);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        // Test data has been improved by changing the primitive values and Strings to more descriptive examples
        int integerValue = 123;
        double doubleValue = 3.14;
        String stringValue = "hello";
        char charValue = 'a';
        javaParserTokenManager.getNextToken();
    }
}
statement is: CharStream javaCharStream = new JavaCharStream(stringReader, 98, 47), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: // Test data has been improved by changing the primitive values and Strings to more descriptive examples
int integerValue = 123, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: double doubleValue = 3.14, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String stringValue = "hello", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: char charValue = 'a', class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
* this is vulnerable: int _int = 123
* this is vulnerable: double _double = 3.14
* this is vulnerable: String string = "hello"
* this is vulnerable: char _char = 'a'
TestCase is: int _int = 98;
int _int = 47;
JavaCharStream javaCharStream = new JavaCharStream((Reader) _int, _int, 47);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
int _int = 123;
double _double = 3.14;
String string = "hello";
char _char = 'a';
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("s|PuFf)%{[~Dq%")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("s|PuFf)%{[~Dq%");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: CharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("|.tR/*>@VW/<^")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: org.evosuite.testcase.statements.ArrayStatement@5d5b74cd type is: class org.evosuite.testcase.statements.ArrayStatement return type class [C
statement code is: char[] charArray = new char[2]
statement is: read([C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int read = stringReader.read(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("|.tR/*>@VW/<^");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
char[] charArray = new char[2];
stringReader.read(charArray);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("|.tR/*>@VW/<^");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        char[] charArray = new char[2];
        stringReader.read(charArray);
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("|.tR/*>@VW/<^"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: char[] charArray = new char[2], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [2] Ct is: char[] charArray = new char[2] isAssignment: false Array: new char[2] Elements: []
lengths: [2] [2]
Their type are: class [C char[]
statement is: stringReader.read(charArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: stringReader.read(charArray) target is: stringReader method is: read(char[])
source statement: java.io.StringReader(Ljava/lang/String;)V callee: VariableReference: Statement 0, type java.io.StringReaderindex is: 1
Matched Method is: read([C)I
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "|.tR/*>@VW/<^";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
char[] charArray = new char[2];
((Reader) string).read(charArray);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("NvAxw&GXks@")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: ReadByte()C type is: class org.evosuite.testcase.statements.MethodStatement return type char
statement code is: char ReadByte = javaCharStream.ReadByte()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("NvAxw&GXks@");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaCharStream.ReadByte();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("This is a sample input string that will be parsed by the Java compiler.");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaCharStream.ReadByte();
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("This is a sample input string that will be parsed by the Java compiler."), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.ReadByte(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.ReadByte() target is: javaCharStream method is: ReadByte()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 2
Matched Method is: ReadByte()C
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "This is a sample input string that will be parsed by the Java compiler.";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaCharStream) stringReader).ReadByte();
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("y}=a6#X")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("y}=a6#X");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: CharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("nv8~Iq:ardWDe*98*")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 124, (-116))
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("nv8~Iq:ardWDe*98*");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 124, (-116));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("nv8~Iq:ardWDe*98*");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, 124, -116);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("nv8~Iq:ardWDe*98*"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, 124, -116), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "nv8~Iq:ardWDe*98*";
StringReader stringReader = new StringReader(string);
int _int = 124;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, (-116));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();
((JavaParserTokenManager) _int).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("t2CG.")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;III)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, (-1245), 1261, 332)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("t2CG.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-1245), 1261, 332);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("t2CG.");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, -1000, 1000, 332);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("t2CG."), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, -1000, 1000, 332), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "t2CG.";
StringReader stringReader = new StringReader(string);
int _int = 1000;
int _int = 332;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int, 332);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("cNhAUB<4")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 22, (byte)20)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("cNhAUB<4");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 22, (byte)20);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("cNhAUB<4");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, 22, ((byte) (20)));
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
        // The StringReader object is used to read characters from a string and pass them to the JavaCharStream constructor. In this example, the string "cNhAUB<4" is read from the stringReader object and passed to the JavaCharStream constructor.
        // The JavaCharStream class takes in a Reader object and a byte value representing the number of characters per line as its constructor arguments. The JavaCharStream object then processes the input stream and provides an iterator that returns tokens to the JavaParserTokenManager.
        // The JavaParserTokenManager class is responsible for managing the token stream returned by the JavaCharStream object. It uses a lookahead buffer to determine the next token in the stream, which is then passed to the parser.
        // The getNextToken() method of the JavaParserTokenManager is called twice in this example to retrieve two tokens from the input stream. }}
    }
}
statement is: StringReader stringReader = new StringReader("cNhAUB<4"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, 22, ((byte) (20))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: // The StringReader object is used to read characters from a string and pass them to the JavaCharStream constructor. In this example, the string "cNhAUB<4" is read from the stringReader object and passed to the JavaCharStream constructor., class spoon.support.reflect.code.CtCommentImpl
statement is: // The JavaCharStream class takes in a Reader object and a byte value representing the number of characters per line as its constructor arguments. The JavaCharStream object then processes the input stream and provides an iterator that returns tokens to the JavaParserTokenManager., class spoon.support.reflect.code.CtCommentImpl
statement is: // The JavaParserTokenManager class is responsible for managing the token stream returned by the JavaCharStream object. It uses a lookahead buffer to determine the next token in the stream, which is then passed to the parser., class spoon.support.reflect.code.CtCommentImpl
statement is: // The getNextToken() method of the JavaParserTokenManager is called twice in this example to retrieve two tokens from the input stream. }}, class spoon.support.reflect.code.CtCommentImpl
TestCase is: String string = "cNhAUB<4";
StringReader stringReader = new StringReader(string);
int _int = 22;
int _int = 20;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();
((JavaParserTokenManager) _int).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("^69=(OMNkL#|A$8")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 930, 0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("^69=(OMNkL#|A$8");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 930, 0);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("^69=(OMNkL#|A$8");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, 930, 0);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("^69=(OMNkL#|A$8"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, 930, 0), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "^69=(OMNkL#|A$8";
StringReader stringReader = new StringReader(string);
int _int = 930;
int _int = 0;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("uv8l]QIu+v:")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: ReadByte()C type is: class org.evosuite.testcase.statements.MethodStatement return type char
statement code is: char ReadByte = javaCharStream.ReadByte()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("uv8l]QIu+v:");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaCharStream.ReadByte();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("A valid input string.");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaCharStream.ReadByte();
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("A valid input string."), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.ReadByte(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.ReadByte() target is: javaCharStream method is: ReadByte()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 2
Matched Method is: ReadByte()C
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "A valid input string.";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaCharStream) stringReader).ReadByte();
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("Cg%:'y>,{hRMT")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;III)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 21, 105, 121)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("Cg%:'y>,{hRMT");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 21, 105, 121);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("This is a sample input for the Java parser.");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, 21, 105, 121);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("This is a sample input for the Java parser."), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, 21, 105, 121), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 6
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 6
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 6
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 6
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "This is a sample input for the Java parser.";
StringReader stringReader = new StringReader(string);
int _int = 21;
int _int = 105;
int _int = 121;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int, _int);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();
((JavaParserTokenManager) _int).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("^<_@LaKHa-R/7P`wc")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, (-549), 84)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("^<_@LaKHa-R/7P`wc");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-549), 84);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("^<_@LaKHa-R/7P`wc");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, -549, 84);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("^<_@LaKHa-R/7P`wc"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, -549, 84), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "^<_@LaKHa-R/7P`wc";
StringReader stringReader = new StringReader(string);
int _int = 84;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, 84);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();
((JavaParserTokenManager) _int).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("!=")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("!=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("!==");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("!=="), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "!==";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("<CHARACTER_LITERAL>")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;III)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 52, 3782, 1832)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("<CHARACTER_LITERAL>");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 52, 3782, 1832);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("This is a test string");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, 52, 3782, 1832);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("This is a test string"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, 52, 3782, 1832), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 6
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "This is a test string";
StringReader stringReader = new StringReader(string);
int _int = 52;
int _int = 3782;
int _int = 1832;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int, _int);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("</u>F,H`/;:RMPp")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token$GTToken
statement code is: Token.GTToken nextToken = (Token.GTToken)javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("</u>F,H`/;:RMPp");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("public class TestClass { public static void main(String[] args) { System.out.println(\"Hello, world!\"); } }");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("public class TestClass { public static void main(String[] args) { System.out.println(\"Hello, world!\"); } }"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "public class TestClass { public static void main(String[] args) { System.out.println(\"Hello, world!\"); } }";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("<INTEGER_LITERAL>")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 37, 37)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("<INTEGER_LITERAL>");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 37, 37);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("12345");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, 37, 37);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("12345"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, 37, 37), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "12345";
StringReader stringReader = new StringReader(string);
int _int = 37;
int _int = 37;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("G!LN9-")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 66, 66)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("G!LN9-");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 66, 66);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("G!LN9-");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, 66, 66);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("G!LN9-"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, 66, 66), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "G!LN9-";
StringReader stringReader = new StringReader(string);
int _int = 66;
int _int = 66;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();
((JavaParserTokenManager) _int).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("e+MG}?lu6=Ix&tq,m")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 56, 56)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("e+MG}?lu6=Ix&tq,m");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 56, 56);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream javaCharStream = new JavaCharStream(stringReader, 56, 56);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
    }
}
statement is: CharStream javaCharStream = new JavaCharStream(stringReader, 56, 56), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: int _int = 56;
int _int = 56;
JavaCharStream javaCharStream = new JavaCharStream((Reader) _int, _int, 56);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("8f}_mL;mcP I~)~1y!")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 46, 24)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: org.evosuite.testcase.statements.ArrayStatement@72f06a0d type is: class org.evosuite.testcase.statements.ArrayStatement return type class [C
statement code is: char[] charArray = new char[8]
statement is: read([C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int read = stringReader.read(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("8f}_mL;mcP I~)~1y!");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 46, 24);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
char[] charArray = new char[8];
stringReader.read(charArray);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("This is a test string");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, 46, 24);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        char[] charArray = new char[8];
        stringReader.read(charArray);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("This is a test string"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, 46, 24), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: char[] charArray = new char[8], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [8] Ct is: char[] charArray = new char[8] isAssignment: false Array: new char[8] Elements: []
lengths: [8] [8]
Their type are: class [C char[]
statement is: stringReader.read(charArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: stringReader.read(charArray) target is: stringReader method is: read(char[])
source statement: java.io.StringReader(Ljava/lang/String;)V callee: VariableReference: Statement 0, type java.io.StringReaderindex is: 1
Matched Method is: read([C)I
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "This is a test string";
StringReader stringReader = new StringReader(string);
int _int = 46;
int _int = 24;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
char[] charArray = new char[8];
((Reader) string).read(charArray);
((JavaParserTokenManager) _int).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("nQ8~Iq:ardWkDe$98*")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 0, 98)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("nQ8~Iq:ardWkDe$98*");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 0, 98);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("The quick brown fox jumps over the lazy dog.");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, 0, 98);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("The quick brown fox jumps over the lazy dog."), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, 0, 98), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "The quick brown fox jumps over the lazy dog.";
StringReader stringReader = new StringReader(string);
int _int = 0;
int _int = 98;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("AYOoZS-V#`O7i?3Hk")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("AYOoZS-V#`O7i?3Hk");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("Hello, World!");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("Hello, World!"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "Hello, World!";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("cpWK8&WuoS")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 20, 103)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("cpWK8&WuoS");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 20, 103);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("cpWK8&WuoS");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, 20, 103);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("cpWK8&WuoS"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, 20, 103), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "cpWK8&WuoS";
StringReader stringReader = new StringReader(string);
int _int = 20;
int _int = 103;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();
((JavaParserTokenManager) _int).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("ebLM}i")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 66, 66)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("ebLM}i");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 66, 66);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("This is a sample string with spaces and special chars $%^&*()!#");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, 66, 66);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("This is a sample string with spaces and special chars $%^&*()!#"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, 66, 66), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "This is a sample string with spaces and special chars $%^&*()!#";
StringReader stringReader = new StringReader(string);
int _int = 66;
int _int = 66;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("fp]\"")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: read()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int read = stringReader.read()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("fp]\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
stringReader.read();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("Hello, World!");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        stringReader.read();
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("Hello, World!"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: stringReader.read(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: stringReader.read() target is: stringReader method is: read()
source statement: java.io.StringReader(Ljava/lang/String;)V callee: VariableReference: Statement 0, type java.io.StringReaderindex is: 1
Matched Method is: read()I
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "Hello, World!";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((StringReader) string).read();
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader(".`d`f{MP,`@K")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;III)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 98, 98, 98)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader(".`d`f{MP,`@K");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 98, 98, 98);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("Hello, World!");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, 98, 98, 98);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("Hello, World!"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, 98, 98, 98), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 6
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "Hello, World!";
StringReader stringReader = new StringReader(string);
int _int = 98;
int _int = 98;
int _int = 98;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int, _int);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("default")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 2834, 2834)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("default");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2834, 2834);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("The quick brown fox jumps over the lazy dog.");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2834, 2834);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("The quick brown fox jumps over the lazy dog."), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2834, 2834), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "The quick brown fox jumps over the lazy dog.";
StringReader stringReader = new StringReader(string);
int _int = 2834;
int _int = 2834;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("default")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, (byte)33, (-201))
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: read()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int read = stringReader.read()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("default");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (byte)33, (-201));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
stringReader.read();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("Hello, World!");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, ((byte) (33)), -201);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        stringReader.read();
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("Hello, World!"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, ((byte) (33)), -201), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: stringReader.read(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: stringReader.read() target is: stringReader method is: read()
source statement: java.io.StringReader(Ljava/lang/String;)V callee: VariableReference: Statement 0, type java.io.StringReaderindex is: 1
Matched Method is: read()I
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "Hello, World!";
StringReader stringReader = new StringReader(string);
int _int = 33;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, (-201));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((StringReader) string).read();
((JavaParserTokenManager) _int).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("ONd>j")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token$GTToken
statement code is: Token.GTToken nextToken = (Token.GTToken)javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("ONd>j");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("This is a sample input string");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("This is a sample input string"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "This is a sample input string";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("class")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("class");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: CharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("implements")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;III)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, (byte) (-35), 1070, 1605)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("implements");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (byte) (-35), 1070, 1605);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("implements");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, ((byte) (-35)), 1070, 1605);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("implements"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, ((byte) (-35)), 1070, 1605), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "implements";
StringReader stringReader = new StringReader(string);
int _int = 1070;
int _int = 1605;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int, 1605);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("final")
statement is: read()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int read = stringReader.read()
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;III)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 0, 0, 0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("final");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 0, 0, 0);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("final int x = 5;");
        stringReader.read();
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, 0, 0, 0);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("final int x = 5;"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: stringReader.read(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: stringReader.read() target is: stringReader method is: read()
source statement: java.io.StringReader(Ljava/lang/String;)V callee: VariableReference: Statement 0, type java.io.StringReaderindex is: 1
Matched Method is: read()I
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, 0, 0, 0), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 3, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 7
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "final int x = 5;";
StringReader stringReader = new StringReader(string);
((StringReader) string).read();
int _int = 0;
int _int = 0;
int _int = 0;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int, _int);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("\"break\"")
statement is: read()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int read = stringReader.read()
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 34, 787)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("\"break\"");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 34, 787);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("\"break\".toLowerCase()");
        stringReader.read();
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, 34, 787);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("\"break\".toLowerCase()"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: stringReader.read(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: stringReader.read() target is: stringReader method is: read()
source statement: java.io.StringReader(Ljava/lang/String;)V callee: VariableReference: Statement 0, type java.io.StringReaderindex is: 1
Matched Method is: read()I
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, 34, 787), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 3, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 6
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "\"break\".toLowerCase()";
StringReader stringReader = new StringReader(string);
((StringReader) string).read();
int _int = 34;
int _int = 787;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("nx!{23uF6gXlT6\"M8'")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 13, (-121))
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("nx!{23uF6gXlT6\"M8'");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 13, (-121));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("Hello World!");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, 13, -121);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("Hello World!"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, 13, -121), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "Hello World!";
StringReader stringReader = new StringReader(string);
int _int = 13;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, (-121));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("byte")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("byte");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("An integer number 10");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("An integer number 10"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "An integer number 10";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("dzflt")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 2834, 2834)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("dzflt");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2834, 2834);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("This is a sample input string for testing the Java parser.");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2834, 2834);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("This is a sample input string for testing the Java parser."), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2834, 2834), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "This is a sample input string for testing the Java parser.";
StringReader stringReader = new StringReader(string);
int _int = 2834;
int _int = 2834;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("==")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("==");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: CharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader(">=")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;III)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 26, 0, 0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader(">=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 26, 0, 0);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader(">=");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, 26, 0, 0);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        int currentTokenType = javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader(">="), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, 26, 0, 0), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: int currentTokenType = javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 6
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = ">=";
StringReader stringReader = new StringReader(string);
int _int = 26;
int _int = 0;
int _int = 0;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int, _int);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader(">>=")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 36, 98)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader(">>=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 36, 98);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader(">>=");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, 36, 98);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader(">>="), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, 36, 98), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = ">>=";
StringReader stringReader = new StringReader(string);
int _int = 36;
int _int = 98;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("double")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, (byte)94, (-1919))
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("double");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (byte)94, (-1919));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("double");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, ((byte) (94)), -1919);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        // Test data for getNextToken() method
        assertEquals("double", javaParserTokenManager.getNextToken().image);
    }
}
statement is: StringReader stringReader = new StringReader("double"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, ((byte) (94)), -1919), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: // Test data for getNextToken() method
assertEquals("double", javaParserTokenManager.getNextToken().image), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Test data for getNextToken() method
assertEquals("double", javaParserTokenManager.getNextToken().image) target is:  method is: assertEquals(java.lang.String,<unknown>)
TestCase is: String string = "double";
StringReader stringReader = new StringReader(string);
int _int = 94;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, (-1919));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("chAUB<4")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("chAUB<4");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("chAUB<4");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("chAUB<4"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "chAUB<4";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("void")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;III)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 1094, 1094, 1094)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("void");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1094, 1094, 1094);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream javaCharStream = new JavaCharStream(stringReader, 1094, 1094, 1094);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: CharStream javaCharStream = new JavaCharStream(stringReader, 1094, 1094, 1094), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: int _int = 1094;
int _int = 1094;
int _int = 1094;
JavaCharStream javaCharStream = new JavaCharStream((Reader) _int, _int, _int, 1094);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("throw")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 81, (-963))
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("throw");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 81, (-963));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("throw new RuntimeException()");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, 50, 100);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("throw new RuntimeException()"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, 50, 100), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "throw new RuntimeException()";
StringReader stringReader = new StringReader(string);
int _int = 50;
int _int = 100;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("assert")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("assert");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("assert (x > 0)");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("assert (x > 0)"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "assert (x > 0)";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("asw5ser")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("asw5ser");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("asw5ser");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("asw5ser"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "asw5ser";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("\"try\"")
statement is: read()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int read = stringReader.read()
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 73, 34)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("\"try\"");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 73, 34);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("\"trying to parse a Java program\"");
        stringReader.read();
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, 73, 34);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("\"trying to parse a Java program\""), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: stringReader.read(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: stringReader.read() target is: stringReader method is: read()
source statement: java.io.StringReader(Ljava/lang/String;)V callee: VariableReference: Statement 0, type java.io.StringReaderindex is: 1
Matched Method is: read()I
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, 73, 34), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 3, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 6
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "\"trying to parse a Java program\"";
StringReader stringReader = new StringReader(string);
((StringReader) string).read();
int _int = 73;
int _int = 34;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("protected")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("protected");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader1 = new StringReader("private");
        JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1);
        JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream1);
        javaParserTokenManager1.getNextToken();
        StringReader stringReader2 = new StringReader("public");
        JavaCharStream javaCharStream2 = new JavaCharStream(stringReader2);
        JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream2);
        javaParserTokenManager2.getNextToken();
        StringReader stringReader3 = new StringReader("static");
        JavaCharStream javaCharStream3 = new JavaCharStream(stringReader3);
        JavaParserTokenManager javaParserTokenManager3 = new JavaParserTokenManager(javaCharStream3);
        javaParserTokenManager3.getNextToken();
    }
}
statement is: StringReader stringReader1 = new StringReader("private"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream1), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager1.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager1.getNextToken() target is: javaParserTokenManager1 method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: StringReader stringReader2 = new StringReader("public"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream2 = new JavaCharStream(stringReader2), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream2), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager2.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager2.getNextToken() target is: javaParserTokenManager2 method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 8
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: StringReader stringReader3 = new StringReader("static"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream3 = new JavaCharStream(stringReader3), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager3 = new JavaParserTokenManager(javaCharStream3), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager3.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager3.getNextToken() target is: javaParserTokenManager3 method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 13
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "private";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "public";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "static";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("true")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 98, 98)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("true");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 98, 98);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("false");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, 98, 98);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        StringReader stringReader2 = new StringReader("\"Hello, World!\"");
        JavaCharStream javaCharStream2 = new JavaCharStream(stringReader2, 98, 98);
        JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream2);
        javaParserTokenManager2.getNextToken();
        StringReader stringReader3 = new StringReader("10");
        JavaCharStream javaCharStream3 = new JavaCharStream(stringReader3, 98, 98);
        JavaParserTokenManager javaParserTokenManager3 = new JavaParserTokenManager(javaCharStream3);
        javaParserTokenManager3.getNextToken();
        StringReader stringReader4 = new StringReader("10.5");
        JavaCharStream javaCharStream4 = new JavaCharStream(stringReader4, 98, 98);
        JavaParserTokenManager javaParserTokenManager4 = new JavaParserTokenManager(javaCharStream4);
        javaParserTokenManager4.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("false"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, 98, 98), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: StringReader stringReader2 = new StringReader("\"Hello, World!\""), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream2 = new JavaCharStream(stringReader2, 98, 98), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream2), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager2.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager2.getNextToken() target is: javaParserTokenManager2 method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 12
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: StringReader stringReader3 = new StringReader("10"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream3 = new JavaCharStream(stringReader3, 98, 98), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager3 = new JavaParserTokenManager(javaCharStream3), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager3.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager3.getNextToken() target is: javaParserTokenManager3 method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 19
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: StringReader stringReader4 = new StringReader("10.5"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream4 = new JavaCharStream(stringReader4, 98, 98), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager4 = new JavaParserTokenManager(javaCharStream4), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager4.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager4.getNextToken() target is: javaParserTokenManager4 method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 26
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "false";
StringReader stringReader = new StringReader(string);
int _int = 98;
int _int = 98;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();
String string = "\"Hello, World!\"";
StringReader stringReader = new StringReader(string);
int _int = 98;
int _int = 98;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();
String string = "10";
StringReader stringReader = new StringReader(string);
int _int = 98;
int _int = 98;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();
String string = "10.5";
StringReader stringReader = new StringReader(string);
int _int = 98;
int _int = 98;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("null")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 39, 22)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("null");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 39, 22);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("\"Hello World\"");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, 39, 22);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("\"Hello World\""), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, 39, 22), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "\"Hello World\"";
StringReader stringReader = new StringReader(string);
int _int = 39;
int _int = 22;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("const")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 48, 48)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("const");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 48, 48);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream javaCharStream = new JavaCharStream(stringReader, 48, 48);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: CharStream javaCharStream = new JavaCharStream(stringReader, 48, 48), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: int _int = 48;
int _int = 48;
JavaCharStream javaCharStream = new JavaCharStream((Reader) _int, _int, 48);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("super")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 19, (-191))
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("super");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 19, (-191));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("super");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, 19, -191);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        // Improved test data: using more descriptive and representative values for the input parameters.
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(new StringReader("This is a sample string"));
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("super"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, 19, -191), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: // Improved test data: using more descriptive and representative values for the input parameters.
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(new StringReader("This is a sample string")), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 7
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "super";
StringReader stringReader = new StringReader(string);
int _int = 19;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, (-191));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
String string = "This is a sample string";
StringReader stringReader = new StringReader(string);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager((JavaCharStream) stringReader);
((JavaParserTokenManager) _int).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("sXjxoO")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 27, 27)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: org.evosuite.testcase.statements.AssignmentStatement@71f63db3 type is: class org.evosuite.testcase.statements.AssignmentStatement return type int
statement code is: javaParserTokenManager.jjround = (-1)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("sXjxoO");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 27, 27);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.jjround = (-1);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("This is a string with multiple words and numbers 1234567890");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, 27, 27);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.jjround = -1;
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("This is a string with multiple words and numbers 1234567890"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, 27, 27), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.jjround = -1, class spoon.support.reflect.code.CtAssignmentImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "This is a string with multiple words and numbers 1234567890";
StringReader stringReader = new StringReader(string);
int _int = 27;
int _int = 27;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("&/ J|<`A9")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 108, (byte)0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("&/ J|<`A9");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 108, (byte)0);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("Hello, World!");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, 108, ((byte) (0)));
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("Hello, World!"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, 108, ((byte) (0))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "Hello, World!";
StringReader stringReader = new StringReader(string);
int _int = 108;
int _int = 0;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();
((JavaParserTokenManager) _int).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("'/olumn ")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("'/olumn ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data
        StringReader stringReader = new StringReader("'/olumn ");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: // Improved test data
StringReader stringReader = new StringReader("'/olumn "), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "'/olumn ";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("\"/*\"")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("\"/*\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("\"/* Hello World! */\"");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("\"/* Hello World! */\""), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "\"/* Hello World! */\"";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: org.evosuite.testcase.statements.ArrayStatement@4f06e67 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[6]
statement is: org.evosuite.testcase.statements.AssignmentStatement@7f6ce8b3 type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[1] = (byte) (-35)
statement is: org.evosuite.testcase.statements.AssignmentStatement@60de6c1d type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[0] = (byte)53
statement is: java.io.ByteArrayInputStream([B)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.ByteArrayInputStream
statement code is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;III)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, (byte) (-97), (byte) (-35), (byte)0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: byte[] byteArray = new byte[6];
byteArray[1] = (byte) (-35);
byteArray[0] = (byte)53;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, (byte) (-97), (byte) (-35), (byte)0);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // byteArray is an array of bytes that represents a string containing the characters 'a', 'b', and 'c'.
        byte[] byteArray = new byte[]{ ((byte) (0x61)), ((byte) (0x62)), ((byte) (0x63)) };
        // The ByteArrayInputStream constructor takes an array of bytes as input.
        ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
        // The JavaCharStream constructor takes a ByteArrayInputStream object and the start and end positions of the character stream as inputs.
        JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, ((byte) (0x61)), ((byte) (0x63)), ((byte) (0x20)));
        // The JavaParserTokenManager constructor takes a JavaCharStream object as input and returns a token manager that can generate tokens from the character stream.
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        // The getNextToken() method of the token manager returns the next token in the character stream.
        javaParserTokenManager.getNextToken();
    }
}
statement is: // byteArray is an array of bytes that represents a string containing the characters 'a', 'b', and 'c'.
byte[] byteArray = new byte[]{ ((byte) (0x61)), ((byte) (0x62)), ((byte) (0x63)) }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: byte[] byteArray = new byte[6] isAssignment: false Array: new byte[]{ ((byte) (0x61)), ((byte) (0x62)), ((byte) (0x63)) } Elements: [((byte) (0x61)), ((byte) (0x62)), ((byte) (0x63))]
lengths: [6] []
statement is: // The ByteArrayInputStream constructor takes an array of bytes as input.
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: java.io.ByteArrayInputStream([B)V
statement is: // The JavaCharStream constructor takes a ByteArrayInputStream object and the start and end positions of the character stream as inputs.
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, ((byte) (0x61)), ((byte) (0x63)), ((byte) (0x20))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: // The JavaParserTokenManager constructor takes a JavaCharStream object as input and returns a token manager that can generate tokens from the character stream.
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: // The getNextToken() method of the token manager returns the next token in the character stream.
javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // The getNextToken() method of the token manager returns the next token in the character stream.
javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 5, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase Could not be added: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: int _int = 97;
int _int = 99;
int _int = 32;
JavaCharStream javaCharStream = new JavaCharStream((InputStream) _int, _int, _int, (int) (byte)0);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("\"\n\"")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("\"\n\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("\"\n\"");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        // Improved test data:
        StringReader stringReader = new StringReader("\"Hello, World!\"");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("\"\n\""), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: // Improved test data:
StringReader stringReader = new StringReader("\"Hello, World!\""), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 8
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "\"\n\"";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "\"Hello, World!\"";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("uv8l]QIu+v:")
statement is: read()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int read = stringReader.read()
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: ReadByte()C type is: class org.evosuite.testcase.statements.MethodStatement return type char
statement code is: char ReadByte = javaCharStream.ReadByte()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("uv8l]QIu+v:");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaCharStream.ReadByte();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("A long time ago, in a galaxy far, far away...");
        stringReader.read();
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaCharStream.ReadByte();
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("A long time ago, in a galaxy far, far away..."), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: stringReader.read(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: stringReader.read() target is: stringReader method is: read()
source statement: java.io.StringReader(Ljava/lang/String;)V callee: VariableReference: Statement 0, type java.io.StringReaderindex is: 1
Matched Method is: read()I
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.ReadByte(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.ReadByte() target is: javaCharStream method is: ReadByte()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 3
Matched Method is: ReadByte()C
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 3, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "A long time ago, in a galaxy far, far away...";
StringReader stringReader = new StringReader(string);
int read = ((StringReader) string).read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaCharStream) read).ReadByte();
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: org.evosuite.testcase.statements.ArrayStatement@4a54737d type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[4]
statement is: org.evosuite.testcase.statements.AssignmentStatement@6fa5ea15 type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[0] = (byte) (-97)
statement is: java.io.ByteArrayInputStream([B)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.ByteArrayInputStream
statement code is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;III)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, (byte) (-97), 31, (byte) (-97))
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: byte[] byteArray = new byte[4];
byteArray[0] = (byte) (-97);
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, (byte) (-97), 31, (byte) (-97));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        byte[] byteArray = new byte[]{ 0x2a, 0x2b, 0x2c, 0x2d };
        ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
        JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, ((byte) (42)), 31, ((byte) (45)));
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: byte[] byteArray = new byte[]{ 0x2a, 0x2b, 0x2c, 0x2d }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: byte[] byteArray = new byte[4] isAssignment: false Array: new byte[]{ 0x2a, 0x2b, 0x2c, 0x2d } Elements: [0x2a, 0x2b, 0x2c, 0x2d]
lengths: [4] []
statement is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: java.io.ByteArrayInputStream([B)V
statement is: JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, ((byte) (42)), 31, ((byte) (45))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 4, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: int _int = 42;
int _int = 31;
int _int = 45;
JavaCharStream javaCharStream = new JavaCharStream((InputStream) _int, _int, _int, (int) (byte) (-97));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

statement is: org.evosuite.testcase.statements.ArrayStatement@b933aab2 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[9]
statement is: org.evosuite.testcase.statements.AssignmentStatement@d10dbc9c type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[0] = (byte)106
statement is: org.evosuite.testcase.statements.AssignmentStatement@7c383b85 type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[1] = (byte)49
statement is: org.evosuite.testcase.statements.AssignmentStatement@8a34ffde type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[2] = (byte) (-38)
statement is: java.io.ByteArrayInputStream([B)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.ByteArrayInputStream
statement code is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;III)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 596, (-2421), (byte)26)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: byte[] byteArray = new byte[9];
byteArray[0] = (byte)106;
byteArray[1] = (byte)49;
byteArray[2] = (byte) (-38);
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, 596, (-2421), (byte)26);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        byte[] byteArray = new byte[]{ 0x6a, 0x31, ((byte) (0xff)) };// Improved test data

        ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
        JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, 596, -2421, ((byte) (26)));
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: byte[] byteArray = new byte[]{ 0x6a, 0x31, ((byte) (0xff)) }// Improved test data
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: byte[] byteArray = new byte[9] isAssignment: false Array: new byte[]{ 0x6a, 0x31, ((byte) (0xff)) } Elements: [0x6a, 0x31, ((byte) (0xff))]
lengths: [9] []
statement is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: java.io.ByteArrayInputStream([B)V
statement is: JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, 596, -2421, ((byte) (26))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 6, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase Could not be added: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: int _int = 596;
int _int = 26;
JavaCharStream javaCharStream = new JavaCharStream((InputStream) _int, _int, (-2421), (int) (byte)26);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);

statement is: org.evosuite.testcase.statements.ArrayStatement@d64b825e type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[9]
statement is: org.evosuite.testcase.statements.AssignmentStatement@f5dd8deb type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[0] = (byte)106
statement is: org.evosuite.testcase.statements.AssignmentStatement@8801a97 type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[1] = (byte)49
statement is: org.evosuite.testcase.statements.AssignmentStatement@92df86e8 type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[2] = (byte) (-38)
statement is: org.evosuite.testcase.statements.AssignmentStatement@b37243ee type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[3] = (byte) (-105)
statement is: java.io.ByteArrayInputStream([B)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.ByteArrayInputStream
statement code is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;III)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 596, (-2421), (byte)26)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: byte[] byteArray = new byte[9];
byteArray[0] = (byte)106;
byteArray[1] = (byte)49;
byteArray[2] = (byte) (-38);
byteArray[3] = (byte) (-105);
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, 596, (-2421), (byte)26);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        byte[] byteArray = new byte[9];
        byteArray[0] = ((byte) (65));// A

        byteArray[1] = ((byte) (48));// 0

        byteArray[2] = ((byte) (-72));// h

        byteArray[3] = ((byte) (-105));// i

        ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
        JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, 596, -2421, ((byte) (7)));
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: byte[] byteArray = new byte[9], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [9] Ct is: byte[] byteArray = new byte[9] isAssignment: false Array: new byte[9] Elements: []
lengths: [9] [9]
Their type are: class [B byte[]
statement is: byteArray[0] = ((byte) (65))// A
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : byteArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl byte Assignment:((byte) (65)) Ct is: byteArray[0] = ((byte) (65))// A

target : byteArray class spoon.support.reflect.code.CtLiteralImpl
statement is: byteArray[1] = ((byte) (48))// 0
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : byteArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl byte Assignment:((byte) (48)) Ct is: byteArray[1] = ((byte) (48))// 0

target : byteArray class spoon.support.reflect.code.CtLiteralImpl
statement is: byteArray[2] = ((byte) (-72))// h
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : byteArray[2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl byte Assignment:((byte) (-72)) Ct is: byteArray[2] = ((byte) (-72))// h

target : byteArray class spoon.support.reflect.code.CtLiteralImpl
statement is: byteArray[3] = ((byte) (-105))// i
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : byteArray[3] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl byte Assignment:((byte) (-105)) Ct is: byteArray[3] = ((byte) (-105))// i

target : byteArray class spoon.support.reflect.code.CtLiteralImpl
statement is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, 596, -2421, ((byte) (7))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 7, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 11
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: byte[] byteArray = new byte[9];
int _int = 65;
byteArray[0] = (byte) _int;
int _int = 48;
byteArray[1] = (byte) _int;
byteArray[2] = (byte) (-38);
byteArray[3] = (byte) (-105);
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
int _int = 596;
int _int = 7;
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, _int, _int, (byte)26);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) byteArrayInputStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("^|)")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;III)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 0, 8, 52)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: SwitchTo(I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: javaParserTokenManager.SwitchTo(2)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("^|)");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 0, 8, 52);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.SwitchTo(2);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("^|)");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, 0, 8, 52);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.SwitchTo(2);
        javaParserTokenManager.getNextToken();
        // Improved test data
        StringReader stringReader1 = new StringReader("^|)");
        JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1, 0, 8, 52);
        JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream1);
        javaParserTokenManager1.SwitchTo(2);
        javaParserTokenManager1.getNextToken();
        // Improved test data
        StringReader stringReader2 = new StringReader("^|)");
        JavaCharStream javaCharStream2 = new JavaCharStream(stringReader2, 0, 8, 52);
        JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream2);
        javaParserTokenManager2.SwitchTo(2);
        javaParserTokenManager2.getNextToken();
        // Improved test data
        StringReader stringReader3 = new StringReader("^|)");
        JavaCharStream javaCharStream3 = new JavaCharStream(stringReader3, 0, 8, 52);
        JavaParserTokenManager javaParserTokenManager3 = new JavaParserTokenManager(javaCharStream3);
        javaParserTokenManager3.SwitchTo(2);
        javaParserTokenManager3.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("^|)"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, 0, 8, 52), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.SwitchTo(2), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.SwitchTo(2) target is: javaParserTokenManager method is: SwitchTo(int)
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 6
Matched Method is: SwitchTo(I)V
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 6
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: // Improved test data
StringReader stringReader1 = new StringReader("^|)"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1, 0, 8, 52), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream1), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager1.SwitchTo(2), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager1.SwitchTo(2) target is: javaParserTokenManager1 method is: SwitchTo(int)
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 16
Matched Method is: SwitchTo(I)V
statement is: javaParserTokenManager1.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager1.getNextToken() target is: javaParserTokenManager1 method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 16
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: // Improved test data
StringReader stringReader2 = new StringReader("^|)"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream2 = new JavaCharStream(stringReader2, 0, 8, 52), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream2), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager2.SwitchTo(2), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager2.SwitchTo(2) target is: javaParserTokenManager2 method is: SwitchTo(int)
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 26
Matched Method is: SwitchTo(I)V
statement is: javaParserTokenManager2.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager2.getNextToken() target is: javaParserTokenManager2 method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 26
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: // Improved test data
StringReader stringReader3 = new StringReader("^|)"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream3 = new JavaCharStream(stringReader3, 0, 8, 52), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager3 = new JavaParserTokenManager(javaCharStream3), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager3.SwitchTo(2), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager3.SwitchTo(2) target is: javaParserTokenManager3 method is: SwitchTo(int)
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 36
Matched Method is: SwitchTo(I)V
statement is: javaParserTokenManager3.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager3.getNextToken() target is: javaParserTokenManager3 method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 36
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "^|)";
StringReader stringReader = new StringReader(string);
int _int = 0;
int _int = 8;
int _int = 52;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int, _int);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
int _int = 2;
((JavaParserTokenManager) _int).SwitchTo(_int);
((JavaParserTokenManager) _int).getNextToken();
String string = "^|)";
StringReader stringReader = new StringReader(string);
int _int = 0;
int _int = 8;
int _int = 52;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int, _int);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
int _int = 2;
((JavaParserTokenManager) _int).SwitchTo(_int);
((JavaParserTokenManager) _int).getNextToken();
String string = "^|)";
StringReader stringReader = new StringReader(string);
int _int = 0;
int _int = 8;
int _int = 52;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int, _int);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
int _int = 2;
((JavaParserTokenManager) _int).SwitchTo(_int);
((JavaParserTokenManager) _int).getNextToken();
String string = "^|)";
StringReader stringReader = new StringReader(string);
int _int = 0;
int _int = 8;
int _int = 52;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int, _int);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
int _int = 2;
((JavaParserTokenManager) _int).SwitchTo(_int);
((JavaParserTokenManager) _int).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("umv8l],QIu*+v:")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 80, 46)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: org.evosuite.testcase.statements.AssignmentStatement@7ebe14dc type is: class org.evosuite.testcase.statements.AssignmentStatement return type int
statement code is: javaParserTokenManager.curLexState = 80
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("umv8l],QIu*+v:");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 80, 46);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.curLexState = 80;
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("umv8l],QIu*+v:");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, 80, 46);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.curLexState = 80;
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("umv8l],QIu*+v:"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, 80, 46), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.curLexState = 80, class spoon.support.reflect.code.CtAssignmentImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "umv8l],QIu*+v:";
StringReader stringReader = new StringReader(string);
int _int = 80;
int _int = 46;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();

statement is: org.evosuite.testcase.statements.ArrayStatement@7947ecf type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[1]
statement is: java.io.ByteArrayInputStream([B)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.ByteArrayInputStream
statement code is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;III)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 257, 94, 257)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: byte[] byteArray = new byte[1];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, 257, 94, 257);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        byte[] byteArray = new byte[]{ 0, 127 };
        ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
        JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, 257, 94, 257);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: byte[] byteArray = new byte[]{ 0, 127 }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: byte[] byteArray = new byte[1] isAssignment: false Array: new byte[]{ 0, 127 } Elements: [0, 127]
lengths: [1] []
statement is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: java.io.ByteArrayInputStream([B)V
statement is: JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, 257, 94, 257), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 3, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: int _int = 257;
int _int = 94;
int _int = 257;
JavaCharStream javaCharStream = new JavaCharStream((InputStream) _int, _int, _int, 257);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("Ji'Wm")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 98, 51)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("Ji'Wm");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 98, 51);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("This is a sample string to be parsed.");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, 98, 51);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("This is a sample string to be parsed."), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, 98, 51), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "This is a sample string to be parsed.";
StringReader stringReader = new StringReader(string);
int _int = 98;
int _int = 51;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();
((JavaParserTokenManager) _int).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("^|)")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.Token$GTToken()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.Token$GTToken
statement code is: Token.GTToken token_GTToken = new Token.GTToken()
statement is: SkipLexicalActions(Lcom/soops/CEN4010/JMCA/JParser/Token;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: javaParserTokenManager.SkipLexicalActions(arg0)
test data is: StringReader stringReader = new StringReader("^|)");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
Token.GTToken token_GTToken = new Token.GTToken();
javaParserTokenManager.SkipLexicalActions(token_GTToken);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("^|)");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        Token.GTToken token_GTToken = new Token.GTToken();
        token_GTToken.setKind(TT_GT);
        token_GTToken.setText("^");
        javaParserTokenManager.SkipLexicalActions(token_GTToken);
    }
}
statement is: StringReader stringReader = new StringReader("^|)"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Token.GTToken token_GTToken = new Token.GTToken(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: token_GTToken.setKind(TT_GT), class spoon.support.reflect.code.CtInvocationImpl
invocation is: token_GTToken.setKind(TT_GT) target is: token_GTToken method is: setKind()
statement is: token_GTToken.setText("^"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: token_GTToken.setText("^") target is: token_GTToken method is: setText(java.lang.String)
statement is: javaParserTokenManager.SkipLexicalActions(token_GTToken), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.SkipLexicalActions(token_GTToken) target is: javaParserTokenManager method is: SkipLexicalActions(Token.GTToken)
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: SkipLexicalActions(Lcom/soops/CEN4010/JMCA/JParser/Token;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
TestCase is: String string = "^|)";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
Token.GTToken token_GTToken = null;
((JavaParserTokenManager) javaCharStream).SkipLexicalActions(token_GTToken);

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("O3f1 [kkxhgE%L)5X$")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, (-201), (-201))
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("O3f1 [kkxhgE%L)5X$");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-201), (-201));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("O3f1 [kkxhgE%L)5X$");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, -201, -201);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("O3f1 [kkxhgE%L)5X$"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, -201, -201), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "O3f1 [kkxhgE%L)5X$";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-201), (-201));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.PipedInputStream()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.PipedInputStream
statement code is: PipedInputStream pipedInputStream = new PipedInputStream()
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: SwitchTo(I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: javaParserTokenManager.SwitchTo(119)
test data is: PipedInputStream pipedInputStream = new PipedInputStream();
JavaCharStream javaCharStream = new JavaCharStream(pipedInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.SwitchTo(119);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        PipedInputStream pipedInputStream = new PipedInputStream("This is a test input stream for JavaParser.");
        JavaCharStream javaCharStream = new JavaCharStream(pipedInputStream);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.SwitchTo(119);
    }
}
statement is: PipedInputStream pipedInputStream = new PipedInputStream("This is a test input stream for JavaParser."), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(pipedInputStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;)V
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V
statement is: javaParserTokenManager.SwitchTo(119), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.SwitchTo(119) target is: javaParserTokenManager method is: SwitchTo(int)
statement is: java.io.PipedInputStream()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.PipedInputStream
statement code is: PipedInputStream pipedInputStream = new PipedInputStream()
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 13, 13)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: SwitchTo(I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: javaParserTokenManager.SwitchTo((-1))
test data is: PipedInputStream pipedInputStream = new PipedInputStream();
JavaCharStream javaCharStream = new JavaCharStream(pipedInputStream, 13, 13);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.SwitchTo((-1));

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        PipedInputStream pipedInputStream = new PipedInputStream();
        pipedInputStream.connect(new PipedOutputStream());
        JavaCharStream javaCharStream = new JavaCharStream(pipedInputStream, 13, 13);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.SwitchTo(-1);
        javaParserTokenManager.setFileName("TestFile.java");
    }
}
statement is: PipedInputStream pipedInputStream = new PipedInputStream(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: pipedInputStream.connect(new PipedOutputStream()), class spoon.support.reflect.code.CtInvocationImpl
invocation is: pipedInputStream.connect(new PipedOutputStream()) target is: pipedInputStream method is: connect(PipedOutputStream)
statement is: JavaCharStream javaCharStream = new JavaCharStream(pipedInputStream, 13, 13), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.SwitchTo(-1), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.SwitchTo(-1) target is: javaParserTokenManager method is: SwitchTo(int)
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
Matched Method is: SwitchTo(I)V
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: javaParserTokenManager.setFileName("TestFile.java"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.setFileName("TestFile.java") target is: javaParserTokenManager method is: setFileName(java.lang.String)
TestCase is: PipedInputStream pipedInputStream = new PipedInputStream();
int _int = 13;
int _int = 13;
JavaCharStream javaCharStream = new JavaCharStream(pipedInputStream, _int, _int);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
int _int = null;
((JavaParserTokenManager) _int).SwitchTo(_int);

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("FxX1WR/)'V:")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: jjFillToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token jjFillToken = javaParserTokenManager.jjFillToken()
test data is: StringReader stringReader = new StringReader("FxX1WR/)'V:");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.jjFillToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("Hello World!");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.jjFillToken();
    }
}
statement is: StringReader stringReader = new StringReader("Hello World!"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.jjFillToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.jjFillToken() target is: javaParserTokenManager method is: jjFillToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: jjFillToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "Hello World!";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).jjFillToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("8f}_mL;mcP I~)~1y!")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 48, 3)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: ReInit(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: javaParserTokenManager.ReInit(arg0, 3)
test data is: StringReader stringReader = new StringReader("8f}_mL;mcP I~)~1y!");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 48, 3);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.ReInit(javaCharStream, 3);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("public class Example {\n\tpublic static void main(String[] args) {\n\t\tSystem.out.println(\"Hello, World!\");\n\t}\n}");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, 48, 3);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.ReInit(javaCharStream, 3);
    }
}
statement is: StringReader stringReader = new StringReader("public class Example {\n\tpublic static void main(String[] args) {\n\t\tSystem.out.println(\"Hello, World!\");\n\t}\n}"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, 48, 3), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.ReInit(javaCharStream, 3), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.ReInit(javaCharStream, 3) target is: javaParserTokenManager method is: ReInit(JavaCharStream,int)
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
Matched Method is: ReInit(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;I)V
TestCase is: String string = "public class Example {\n\tpublic static void main(String[] args) {\n\t\tSystem.out.println(\"Hello, World!\");\n\t}\n}";
StringReader stringReader = new StringReader(string);
int _int = 48;
int _int = 3;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
int _int = 3;
((JavaParserTokenManager) _int).ReInit(javaCharStream, _int);

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("jO!b-9;k+9p~1i'9(H ")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("jO!b-9;k+9p~1i'9(H ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("jO!b-9;k+9p~1i'9(H ");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        int nextToken = javaParserTokenManager.getNextToken();
        assertEquals("jO!b-9;k+9p~1i'9(H ", javaParserTokenManager.getImage());
    }
}
statement is: StringReader stringReader = new StringReader("jO!b-9;k+9p~1i'9(H "), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: int nextToken = javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: assertEquals("jO!b-9;k+9p~1i'9(H ", javaParserTokenManager.getImage()), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals("jO!b-9;k+9p~1i'9(H ", javaParserTokenManager.getImage()) target is:  method is: assertEquals(java.lang.String,<unknown>)
TestCase is: String string = "jO!b-9;k+9p~1i'9(H ";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager((JavaCharStream) null)
statement is: MoreLexicalActions()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: javaParserTokenManager.MoreLexicalActions()
test data is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager((JavaCharStream) null);
javaParserTokenManager.MoreLexicalActions();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data
        int integer = 5;// Changed from 0 to 5 to make the test more descriptive and representative of a real-world scenario

        double doubleValue = 3.14;// Changed from 0 to 3.14 to make the test more descriptive and representative of a real-world scenario

        String stringValue = "hello world";// Changed from "" to "hello world" to make the test more descriptive and representative of a real-world scenario

        char character = 'a';// Changed from '\0' to 'a' to make the test more descriptive and representative of a real-world scenario }}

    }
}
statement is: // Improved test data
int integer = 5// Changed from 0 to 5 to make the test more descriptive and representative of a real-world scenario
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: double doubleValue = 3.14// Changed from 0 to 3.14 to make the test more descriptive and representative of a real-world scenario
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String stringValue = "hello world"// Changed from "" to "hello world" to make the test more descriptive and representative of a real-world scenario
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: char character = 'a'// Changed from '\0' to 'a' to make the test more descriptive and representative of a real-world scenario }}
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
* this is vulnerable: int _int = 5
* this is vulnerable: double _double = 3.14
* this is vulnerable: String string = "hello world"
* this is vulnerable: char _char = 'a'
TestCase is: int _int = 5;
double _double = 3.14;
String string = "hello world";
char _char = 'a';

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("V|,jhno3A7`aB%lp")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: TokenLexicalActions(Lcom/soops/CEN4010/JMCA/JParser/Token;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: javaParserTokenManager.TokenLexicalActions(arg0)
test data is: StringReader stringReader = new StringReader("V|,jhno3A7`aB%lp");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
Token nextToken = javaParserTokenManager.getNextToken();
javaParserTokenManager.TokenLexicalActions(nextToken);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("V|,jhno3A7`aB%lp");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        Token nextToken = javaParserTokenManager.getNextToken();
        javaParserTokenManager.TokenLexicalActions(nextToken);
    }
}
statement is: StringReader stringReader = new StringReader("V|,jhno3A7`aB%lp"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Token nextToken = javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.TokenLexicalActions(nextToken), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.TokenLexicalActions(nextToken) target is: javaParserTokenManager method is: TokenLexicalActions(Token)
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: TokenLexicalActions(Lcom/soops/CEN4010/JMCA/JParser/Token;)V
TestCase is: String string = "V|,jhno3A7`aB%lp";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
Token nextToken = ((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).TokenLexicalActions(nextToken);

* test suite isTestSuite: 242
Test 0: 
StringReader stringReader = new StringReader("NcAxw&GXks@");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-572), (-572));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 1: 
StringReader stringReader = new StringReader("^|)");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2048, 126);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.ReInit(javaCharStream);
Test 2: 
StringReader stringReader = new StringReader("jO!b-9;k+9p~1i'9(H ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 95, (-1426));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 3: 
StringReader stringReader = new StringReader("NvAxw&GXks@");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 1);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 1, column 12.  Encountered: <EOF> after : \"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 4: 
StringReader stringReader = new StringReader("NcAxw&GXks@");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-572), (-572));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
MockPrintStream mockPrintStream = new MockPrintStream(javaParserTokenManager.debugStream, false);
javaParserTokenManager.setDebugStream(mockPrintStream);
Test 5: 
StringReader stringReader = new StringReader("$^{#-yOp5%_d");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-201), (-201));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line -201, column -198.  Encountered: \"#\" (35), after : \"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 6: 
StringReader stringReader = new StringReader("\"boolean\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaCharStream.ReadByte();
javaParserTokenManager.getNextToken();
Test 7: 
StringReader stringReader = new StringReader("natiZe");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 8: 
StringReader stringReader = new StringReader("final");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 0, 8, 0);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 9: 
StringReader stringReader = new StringReader("|.tR/*>@VW/<^");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 35, 35);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 10: 
StringReader stringReader = new StringReader("k=wdQg'dUra1Yb\"qN");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 62, 62);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 11: 
StringReader stringReader = new StringReader("\"break\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 34, 787);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 12: 
StringReader stringReader = new StringReader("%");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 13: 
StringReader stringReader = new StringReader("^'e&9U}{wH.'b@_");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 43, (-549));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 43, column -546.  Encountered: \"&\" (38), after : \"\\'e\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 14: 
StringReader stringReader = new StringReader("(6;:4<k/[cY3Y%=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 13, (-1288));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 15: 
StringReader stringReader = new StringReader("^|)");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2048, 126);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 16: 
StringReader stringReader = new StringReader("umv8l],QIu*+v:");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 80, 46);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 17: 
StringReader stringReader = new StringReader("K+3rieRSSY<h/Zu");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 18: 
StringReader stringReader = new StringReader("d0kum>h+(Rz.tl/");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1224, 1224);
javaCharStream.readChar();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 19: 
StringReader stringReader = new StringReader("1/Q!9u5a8y)'vNk");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 20: 
StringReader stringReader = new StringReader("X2.jDp2{4C#B#MROjm");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2242, 163);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 21: 
StringReader stringReader = new StringReader("47a");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 98, 98, 98);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 22: 
StringReader stringReader = new StringReader("WE:6 l");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (byte)53, 26);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 23: 
StringReader stringReader = new StringReader("7b%*2- |\"Ae");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (byte) (-12), 13);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 24: 
StringReader stringReader = new StringReader("#8zd&UG=M");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 34, (-71));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
stringReader.read();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 25: 
StringReader stringReader = new StringReader("#8-;d&UG=M");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 34, (-71));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
stringReader.read();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 26: 
StringReader stringReader = new StringReader("d0kum>h+(Rz.tl/");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1224, 108);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaCharStream.BeginToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 27: 
StringReader stringReader = new StringReader("khlu`,.?(dX<iWFzA0!");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 4976, 4976);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaCharStream.BeginToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 28: 
StringReader stringReader = new StringReader("]A@&o<InReRX?5UO`iO");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 29: 
StringReader stringReader = new StringReader("BZp6<Y+");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-1093), 0);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 30: 
StringReader stringReader = new StringReader("C1d6fEAGt/SgT<8S.\"6");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-159), 73);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 31: 
StringReader stringReader = new StringReader("<DIGIT>");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-2279), 50);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 32: 
StringReader stringReader = new StringReader("Et");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1261, 1261, 1261);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 33: 
StringReader stringReader = new StringReader(">HjU:8JG+L>'");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-1201), 28);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 34: 
StringReader stringReader = new StringReader("PhL/JEk=$G-CZ<$/");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 103, 32);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 35: 
StringReader stringReader = new StringReader("LsNAZFC=>");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 22, (-1));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 36: 
StringReader stringReader = new StringReader("Mm8jhEnx3A7`aB%l");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 37: 
StringReader stringReader = new StringReader("Q/RC");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-3593), (-2508));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 38: 
StringReader stringReader = new StringReader("TVvjng6`q/4");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 43, (-751));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 43, column -744.  Encountered: \"`\" (96), after : \"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 39: 
StringReader stringReader = new StringReader("V|,jh7no3A7`aB%lp");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 40: 
StringReader stringReader = new StringReader("X2.jDp2{4C#B#MROjm");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 22, 98);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 41: 
StringReader stringReader = new StringReader("AYOoZS-V#`O7i?3Hk");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1935, 65);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 42: 
StringReader stringReader = new StringReader("Z]");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 43: 
StringReader stringReader = new StringReader("m|[YGdJ~'?<YIVNb$v");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 44: 
StringReader stringReader = new StringReader("8f}_mL;mcP I~)~1y!");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 108, 108);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 45: 
StringReader stringReader = new StringReader("Invalid escape character at line ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 22, 58);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 46: 
StringReader stringReader = new StringReader("Cg%:'y>,{hRMT");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 67, (-1041), 67);
javaCharStream.BeginToken();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 47: 
StringReader stringReader = new StringReader("]iTjg7{{8uu4s7|$]?|");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 48: 
StringReader stringReader = new StringReader("khlu`,.?(dX<iWFzA0!");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 4976, 4976);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
stringReader.read();
stringReader.read();
javaParserTokenManager.getNextToken();
Test 49: 
StringReader stringReader = new StringReader("const");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1935, 1935);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 50: 
StringReader stringReader = new StringReader("x|3pE!.}j(p2tc");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1369, (-2279));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 51: 
StringReader stringReader = new StringReader("qA7[2{M^X ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 98, 47);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 52: 
StringReader stringReader = new StringReader("s|PuFf)%{[~Dq%");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 53: 
StringReader stringReader = new StringReader("|.tR/*>@VW/<^");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
char[] charArray = new char[2];
stringReader.read(charArray);
javaParserTokenManager.getNextToken();
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 1, column 12.  Encountered: <EOF> after : \"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 54: 
StringReader stringReader = new StringReader("NvAxw&GXks@");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaCharStream.ReadByte();
javaParserTokenManager.getNextToken();
Test 55: 
StringReader stringReader = new StringReader("y}=a6#X");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 56: 
StringReader stringReader = new StringReader("nv8~Iq:ardWDe*98*");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 124, (-116));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 57: 
StringReader stringReader = new StringReader("t2CG.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-1245), 1261, 332);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 58: 
StringReader stringReader = new StringReader("cNhAUB<4");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 22, (byte)20);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 59: 
StringReader stringReader = new StringReader("^69=(OMNkL#|A$8");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 930, 0);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 60: 
StringReader stringReader = new StringReader("uv8l]QIu+v:");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaCharStream.ReadByte();
javaParserTokenManager.getNextToken();
Test 61: 
StringReader stringReader = new StringReader("Cg%:'y>,{hRMT");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 21, 105, 121);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 62: 
StringReader stringReader = new StringReader("^<_@LaKHa-R/7P`wc");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-549), 84);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 63: 
StringReader stringReader = new StringReader("!=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 64: 
StringReader stringReader = new StringReader("<CHARACTER_LITERAL>");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 52, 3782, 1832);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 65: 
StringReader stringReader = new StringReader("</u>F,H`/;:RMPp");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 66: 
StringReader stringReader = new StringReader("<INTEGER_LITERAL>");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 37, 37);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 67: 
StringReader stringReader = new StringReader("G!LN9-");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 66, 66);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 68: 
StringReader stringReader = new StringReader("e+MG}?lu6=Ix&tq,m");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 56, 56);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 69: 
StringReader stringReader = new StringReader("8f}_mL;mcP I~)~1y!");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 46, 24);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
char[] charArray = new char[8];
stringReader.read(charArray);
javaParserTokenManager.getNextToken();
Test 70: 
StringReader stringReader = new StringReader("nQ8~Iq:ardWkDe$98*");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 0, 98);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 71: 
StringReader stringReader = new StringReader("AYOoZS-V#`O7i?3Hk");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 72: 
StringReader stringReader = new StringReader("cpWK8&WuoS");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 20, 103);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 73: 
StringReader stringReader = new StringReader("ebLM}i");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 66, 66);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 74: 
StringReader stringReader = new StringReader("fp]\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
stringReader.read();
javaParserTokenManager.getNextToken();
Test 75: 
StringReader stringReader = new StringReader(".`d`f{MP,`@K");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 98, 98, 98);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 76: 
StringReader stringReader = new StringReader("default");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2834, 2834);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 77: 
StringReader stringReader = new StringReader("default");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (byte)33, (-201));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
stringReader.read();
javaParserTokenManager.getNextToken();
Test 78: 
StringReader stringReader = new StringReader("ONd>j");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 79: 
StringReader stringReader = new StringReader("class");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 80: 
StringReader stringReader = new StringReader("implements");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (byte) (-35), 1070, 1605);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 81: 
StringReader stringReader = new StringReader("final");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 0, 0, 0);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 82: 
StringReader stringReader = new StringReader("\"break\"");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 34, 787);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 83: 
StringReader stringReader = new StringReader("nx!{23uF6gXlT6\"M8'");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 13, (-121));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 84: 
StringReader stringReader = new StringReader("byte");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 85: 
StringReader stringReader = new StringReader("dzflt");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2834, 2834);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 86: 
StringReader stringReader = new StringReader("==");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 87: 
StringReader stringReader = new StringReader(">=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 26, 0, 0);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 88: 
StringReader stringReader = new StringReader(">>=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 36, 98);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 89: 
StringReader stringReader = new StringReader("double");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (byte)94, (-1919));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 90: 
StringReader stringReader = new StringReader("chAUB<4");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 91: 
StringReader stringReader = new StringReader("void");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1094, 1094, 1094);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 92: 
StringReader stringReader = new StringReader("throw");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 81, (-963));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 93: 
StringReader stringReader = new StringReader("assert");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 94: 
StringReader stringReader = new StringReader("asw5ser");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 95: 
StringReader stringReader = new StringReader("\"try\"");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 73, 34);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 96: 
StringReader stringReader = new StringReader("protected");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 97: 
StringReader stringReader = new StringReader("true");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 98, 98);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 98: 
StringReader stringReader = new StringReader("null");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 39, 22);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 99: 
StringReader stringReader = new StringReader("const");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 48, 48);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 100: 
StringReader stringReader = new StringReader("super");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 19, (-191));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 101: 
StringReader stringReader = new StringReader("sXjxoO");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 27, 27);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.jjround = (-1);
javaParserTokenManager.getNextToken();
Test 102: 
StringReader stringReader = new StringReader("&/ J|<`A9");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 108, (byte)0);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 103: 
StringReader stringReader = new StringReader("'/olumn ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 1, column 3.  Encountered: \"o\" (111), after : \"\\'/\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 104: 
StringReader stringReader = new StringReader("\"/*\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 105: 
byte[] byteArray = new byte[6];
byteArray[1] = (byte) (-35);
byteArray[0] = (byte)53;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, (byte) (-97), (byte) (-35), (byte)0);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 106: 
StringReader stringReader = new StringReader("\"\n\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 1, column 2.  Encountered: \"\\n\" (10), after : \"\\\"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 107: 
StringReader stringReader = new StringReader("uv8l]QIu+v:");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaCharStream.ReadByte();
javaParserTokenManager.getNextToken();
Test 108: 
byte[] byteArray = new byte[4];
byteArray[0] = (byte) (-97);
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, (byte) (-97), 31, (byte) (-97));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line -97, column 31.  Encountered: \"\\ufffd\" (65533), after : \"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 109: 
byte[] byteArray = new byte[9];
byteArray[0] = (byte)106;
byteArray[1] = (byte)49;
byteArray[2] = (byte) (-38);
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, 596, (-2421), (byte)26);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 110: 
byte[] byteArray = new byte[9];
byteArray[0] = (byte)106;
byteArray[1] = (byte)49;
byteArray[2] = (byte) (-38);
byteArray[3] = (byte) (-105);
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, 596, (-2421), (byte)26);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 111: 
StringReader stringReader = new StringReader("^|)");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 0, 8, 52);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.SwitchTo(2);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 0, column 11.  Encountered: <EOF> after : \"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 112: 
StringReader stringReader = new StringReader("umv8l],QIu*+v:");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 80, 46);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.curLexState = 80;
javaParserTokenManager.getNextToken();
Test 113: 
byte[] byteArray = new byte[1];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, 257, 94, 257);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 257, column 95.  Encountered: <EOF> after : \"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 114: 
StringReader stringReader = new StringReader("Ji'Wm");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 98, 51);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 98, column 56.  Encountered: <EOF> after : \"\\'Wm\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 115: 
StringReader stringReader = new StringReader("^|)");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
Token.GTToken token_GTToken = new Token.GTToken();
javaParserTokenManager.SkipLexicalActions(token_GTToken);
Test 116: 
StringReader stringReader = new StringReader("O3f1 [kkxhgE%L)5X$");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-201), (-201));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 117: 
PipedInputStream pipedInputStream = new PipedInputStream();
JavaCharStream javaCharStream = new JavaCharStream(pipedInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
// Undeclared exception!
try { 
  javaParserTokenManager.SwitchTo(119);
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Error: Ignoring invalid lexical state : 119. State unchanged.
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 118: 
PipedInputStream pipedInputStream = new PipedInputStream();
JavaCharStream javaCharStream = new JavaCharStream(pipedInputStream, 13, 13);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
// Undeclared exception!
try { 
  javaParserTokenManager.SwitchTo((-1));
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Error: Ignoring invalid lexical state : -1. State unchanged.
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 119: 
StringReader stringReader = new StringReader("FxX1WR/)'V:");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.jjFillToken();
Test 120: 
StringReader stringReader = new StringReader("8f}_mL;mcP I~)~1y!");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 48, 3);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.ReInit(javaCharStream, 3);
Test 121: 
StringReader stringReader = new StringReader("jO!b-9;k+9p~1i'9(H ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 122: 
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager((JavaCharStream) null);
javaParserTokenManager.MoreLexicalActions();
Test 123: 
StringReader stringReader = new StringReader("V|,jhno3A7`aB%lp");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
Token nextToken = javaParserTokenManager.getNextToken();
javaParserTokenManager.TokenLexicalActions(nextToken);
Test 124: 
StringReader stringReader = new StringReader("This is a sample input string.");
int _int = 0;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 0, 0);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)0).getNextToken();
((JavaParserTokenManager) _int).getNextToken();
((JavaParserTokenManager) _int).getNextToken();

Test 125: 
StringReader stringReader = new StringReader("Hello World!");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2048, 126);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)2048).ReInit(javaCharStream);

Test 126: 
StringReader stringReader = new StringReader("jO!b-9;k+9p~1i'9(H ");
String string = "javaCode";
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (int) "javaCode", (-1426));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) string).getNextToken();
((JavaParserTokenManager) string).getNextToken();
((JavaParserTokenManager) string).getNextToken();
((JavaParserTokenManager) string).getNextToken();
((JavaParserTokenManager) string).getNextToken();

Test 127: 
StringReader stringReader = new StringReader("This is a test string with various characters.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 1);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 128: 
StringReader stringReader = new StringReader("The quick brown fox jumps over the lazy dog.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-572), (-572));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
MockPrintStream mockPrintStream = new MockPrintStream((OutputStream) false, false);
((JavaParserTokenManager) javaCharStream).setDebugStream(mockPrintStream);

Test 129: 
StringReader stringReader = new StringReader("This is a sample input string for testing the JavaParserTokenManager.");
int _int = 100;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 100, 100);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)100).getNextToken();
((JavaParserTokenManager) _int).getNextToken();
((JavaParserTokenManager) _int).getNextToken();
((JavaParserTokenManager) _int).getNextToken();

Test 130: 
StringReader stringReader = new StringReader("\"boolean_type\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaCharStream) stringReader).ReadByte();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 131: 
StringReader stringReader = new StringReader("natiZe");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 132: 
StringReader stringReader = new StringReader("final private static String test = \"hello world\";");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 0, 8, 0);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)0).getNextToken();

Test 133: 
StringReader stringReader = new StringReader("|.tR/*>@VW/<^");
int _int = 35;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 35, 35);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)35).getNextToken();
((JavaParserTokenManager) _int).getNextToken();

Test 134: 
StringReader stringReader = new StringReader("This is a sample string for testing purposes");
int _int = 62;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 62, 62);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)62).getNextToken();
((JavaParserTokenManager) _int).getNextToken();
((JavaParserTokenManager) _int).getNextToken();

Test 135: 
StringReader stringReader = new StringReader("\"breakfast\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 34, 787);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)34).getNextToken();

Test 136: 
StringReader stringReader = new StringReader("%");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

Test 137: 
JavaCharStream javaCharStream = new JavaCharStream((Reader) 43, 43, (-549));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

Test 138: 
StringReader stringReader = new StringReader("(6;:4<k/[cY3Y%=)");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 13, (-1288));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)13).getNextToken();

Test 139: 
StringReader stringReader = new StringReader("^|)");
int _int = 2048;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2048, 126);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)2048).getNextToken();
((JavaParserTokenManager) _int).getNextToken();
((JavaParserTokenManager) _int).getNextToken();

Test 140: 
StringReader stringReader = new StringReader("hello world! This is a sample text.");
int _int = 80;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 80, 46);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)80).getNextToken();
((JavaParserTokenManager) _int).getNextToken();
((JavaParserTokenManager) _int).getNextToken();
((JavaParserTokenManager) _int).getNextToken();
((JavaParserTokenManager) _int).getNextToken();

Test 141: 
StringReader stringReader = new StringReader("The quick brown fox jumps over the lazy dog.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 142: 
StringReader stringReader = new StringReader("d0kum>h+(Rz.tl/");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1224, 1224);
((JavaCharStream)1224).readChar();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 143: 
StringReader stringReader = new StringReader("1234567890");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 144: 
JavaCharStream javaCharStream = new JavaCharStream((Reader) 1024, 512, 163);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

Test 145: 
StringReader stringReader = new StringReader("47a");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 98, 98, 98);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)98).getNextToken();

Test 146: 
StringReader stringReader = new StringReader("WE:6 l");
int _int = 53;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 53, 26);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)53).getNextToken();
((JavaParserTokenManager) _int).getNextToken();
((JavaParserTokenManager) _int).getNextToken();

Test 147: 
StringReader stringReader = new StringReader("7b%*2- |\"Ae");
int _int = 13;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 13, 13);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)13).getNextToken();
((JavaParserTokenManager) _int).getNextToken();
((JavaParserTokenManager) _int).getNextToken();

Test 148: 
StringReader stringReader = new StringReader("abcdefg");
int _int = 34;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 34, (-71));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((StringReader)"abcdefg").read();
((JavaParserTokenManager) _int).getNextToken();
((JavaParserTokenManager) _int).getNextToken();
((JavaParserTokenManager) _int).getNextToken();
((JavaParserTokenManager) _int).getNextToken();

Test 149: 
StringReader stringReader = new StringReader("1234567890");
int _int = 34;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 34, (-71));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((StringReader)"1234567890").read();
((JavaParserTokenManager) _int).getNextToken();
((JavaParserTokenManager) _int).getNextToken();
((JavaParserTokenManager) _int).getNextToken();
((JavaParserTokenManager) _int).getNextToken();
((JavaParserTokenManager) _int).getNextToken();

Test 150: 
StringReader stringReader = new StringReader("The quick brown fox jumps over the lazy dog.");
int _int = 1224;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1224, 108);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)1224).getNextToken();
((JavaCharStream) stringReader).BeginToken();
((JavaParserTokenManager) _int).getNextToken();
((JavaParserTokenManager) _int).getNextToken();
((JavaParserTokenManager) _int).getNextToken();

Test 151: 
StringReader stringReader = new StringReader("Hello, World!");
int _int = 1234567890;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1234567890, 1234567890);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)1234567890).getNextToken();
((JavaCharStream) stringReader).BeginToken();
((JavaParserTokenManager) _int).getNextToken();
((JavaParserTokenManager) _int).getNextToken();
((JavaParserTokenManager) _int).getNextToken();

Test 152: 
StringReader stringReader = new StringReader("]A@&o<InReRX?5UO`iO");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 153: 
StringReader stringReader = new StringReader("BZp6<Y+");
int _int = 0;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 0, 0);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)0).getNextToken();
((JavaParserTokenManager) _int).getNextToken();

Test 154: 
StringReader stringReader = new StringReader("C1d6fEAGt/SgT<8S.\"6");
int _int = 73;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 73, 73);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)73).getNextToken();
((JavaParserTokenManager) _int).getNextToken();
((JavaParserTokenManager) _int).getNextToken();

Test 155: 
StringReader stringReader = new StringReader("<DIGIT>");
int _int = 50;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 50, 50);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)50).getNextToken();
((JavaParserTokenManager) _int).getNextToken();

Test 156: 
StringReader stringReader = new StringReader("A long string of characters");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1261, 1261, 1261);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)1261).getNextToken();

Test 157: 
StringReader stringReader = new StringReader(">HjU:8JG+L>'");
int _int = 28;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 28, 28);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)28).getNextToken();
((JavaParserTokenManager) _int).getNextToken();

Test 158: 
StringReader stringReader = new StringReader("This is a test string with various characters and symbols");
int _int = 103;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 103, 32);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)103).getNextToken();
((JavaParserTokenManager) _int).getNextToken();
((JavaParserTokenManager) _int).getNextToken();

Test 159: 
StringReader stringReader = new StringReader("LsNAZFC=>");
int _int = 22;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 22, (-1));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)22).getNextToken();
((JavaParserTokenManager) _int).getNextToken();

Test 160: 
StringReader stringReader = new StringReader("This is a test input for the JavaParserTokenManager.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 161: 
StringReader stringReader = new StringReader("Q/RC");
int _int = 1234567890;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1234567890, (-2508));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)1234567890).getNextToken();
((JavaParserTokenManager) _int).getNextToken();
((JavaParserTokenManager) _int).getNextToken();

Test 162: 
StringReader stringReader = new StringReader("TVvjng6`q/4");
int _int = 43;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 43, (-751));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)43).getNextToken();
((JavaParserTokenManager) _int).getNextToken();

Test 163: 
StringReader stringReader = new StringReader("This is a test string with some complex data types such as integers, doubles, and strings.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 100, 25);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)100).getNextToken();

Test 164: 
StringReader stringReader = new StringReader("AYOoZS-V#`O7i?3Hk");
((StringReader)"AYOoZS-V#`O7i?3Hk").read();
int _int = 1935;
int _int = 65;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();

Test 165: 
StringReader stringReader = new StringReader("Z]");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 166: 
StringReader stringReader = new StringReader("m|[YGdJ~'?<YIVNb$v");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 167: 
JavaCharStream javaCharStream = new JavaCharStream((Reader) 108, 108, 108);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 168: 
StringReader stringReader = new StringReader("Invalid escape character at line 10");
int _int = 22;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 22, 58);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)22).getNextToken();
((JavaParserTokenManager) _int).getNextToken();
((JavaParserTokenManager) _int).getNextToken();
((JavaParserTokenManager) _int).getNextToken();

Test 169: 
JavaCharStream javaCharStream = new JavaCharStream((Reader) 67, 67, (-1041), 67);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);

Test 170: 
StringReader stringReader = new StringReader("This is a sample input for testing the JavaParserTokenManager class.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 171: 
String string = "This is a sample input string for testing JavaParser.";
StringReader stringReader = new StringReader("This is a sample input string for testing JavaParser.");
int _int = 4976;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 4976, 4976);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((StringReader)"This is a sample input string for testing JavaParser.").read();
((StringReader) string).read();
((JavaParserTokenManager) _int).getNextToken();

Test 172: 
StringReader stringReader = new StringReader("const");
((StringReader)"const").read();
int _int = 1935;
int _int = 1935;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();

Test 173: 
JavaCharStream javaCharStream = new JavaCharStream((Reader) 1369, 1369, (-2279));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

Test 174: 
JavaCharStream javaCharStream = new JavaCharStream((Reader) 98, 47, 47);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 175: 
StringReader stringReader = new StringReader("|.tR/*>@VW/<^");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
char[] charArray = new char[2];
((Reader)"|.tR/*>@VW/<^").read(charArray);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 176: 
StringReader stringReader = new StringReader("This is a sample input string that will be parsed by the Java compiler.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaCharStream) stringReader).ReadByte();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 177: 
StringReader stringReader = new StringReader("nv8~Iq:ardWDe*98*");
int _int = 124;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 124, (-116));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)124).getNextToken();
((JavaParserTokenManager) _int).getNextToken();

Test 178: 
StringReader stringReader = new StringReader("t2CG.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1000, 332, 332);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)1000).getNextToken();

Test 179: 
StringReader stringReader = new StringReader("cNhAUB<4");
int _int = 22;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 22, 20);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)22).getNextToken();
((JavaParserTokenManager) _int).getNextToken();

Test 180: 
StringReader stringReader = new StringReader("^69=(OMNkL#|A$8");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 930, 0);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)930).getNextToken();

Test 181: 
StringReader stringReader = new StringReader("A valid input string.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaCharStream) stringReader).ReadByte();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 182: 
StringReader stringReader = new StringReader("This is a sample input for the Java parser.");
int _int = 21;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 21, 105, 121);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)21).getNextToken();
((JavaParserTokenManager) _int).getNextToken();

Test 183: 
StringReader stringReader = new StringReader("^<_@LaKHa-R/7P`wc");
int _int = 84;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 84, 84);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)84).getNextToken();
((JavaParserTokenManager) _int).getNextToken();

Test 184: 
StringReader stringReader = new StringReader("!==");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 185: 
StringReader stringReader = new StringReader("This is a test string");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 52, 3782, 1832);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)52).getNextToken();

Test 186: 
StringReader stringReader = new StringReader("public class TestClass { public static void main(String[] args) { System.out.println(\"Hello, world!\"); } }");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 187: 
StringReader stringReader = new StringReader("12345");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 37, 37);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)37).getNextToken();

Test 188: 
StringReader stringReader = new StringReader("G!LN9-");
int _int = 66;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 66, 66);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)66).getNextToken();
((JavaParserTokenManager) _int).getNextToken();

Test 189: 
JavaCharStream javaCharStream = new JavaCharStream((Reader) 56, 56, 56);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 190: 
StringReader stringReader = new StringReader("This is a test string");
int _int = 46;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 46, 24);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
char[] charArray = new char[8];
((Reader)"This is a test string").read(charArray);
((JavaParserTokenManager) _int).getNextToken();

Test 191: 
StringReader stringReader = new StringReader("The quick brown fox jumps over the lazy dog.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 0, 98);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)0).getNextToken();

Test 192: 
StringReader stringReader = new StringReader("Hello, World!");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 193: 
StringReader stringReader = new StringReader("cpWK8&WuoS");
int _int = 20;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 20, 103);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)20).getNextToken();
((JavaParserTokenManager) _int).getNextToken();

Test 194: 
StringReader stringReader = new StringReader("This is a sample string with spaces and special chars $%^&*()!#");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 66, 66);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)66).getNextToken();

Test 195: 
StringReader stringReader = new StringReader("Hello, World!");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((StringReader)"Hello, World!").read();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 196: 
StringReader stringReader = new StringReader("Hello, World!");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 98, 98, 98);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)98).getNextToken();

Test 197: 
StringReader stringReader = new StringReader("The quick brown fox jumps over the lazy dog.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2834, 2834);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)2834).getNextToken();

Test 198: 
StringReader stringReader = new StringReader("Hello, World!");
int _int = 33;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 33, (-201));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((StringReader)"Hello, World!").read();
((JavaParserTokenManager) _int).getNextToken();

Test 199: 
StringReader stringReader = new StringReader("This is a sample input string");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 200: 
StringReader stringReader = new StringReader("implements");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1070, 1605, 1605);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)1070).getNextToken();

Test 201: 
StringReader stringReader = new StringReader("final int x = 5;");
((StringReader)"final int x = 5;").read();
int _int = 0;
int _int = 0;
int _int = 0;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int, _int);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();

Test 202: 
StringReader stringReader = new StringReader("\"break\".toLowerCase()");
((StringReader)"\"break\".toLowerCase()").read();
int _int = 34;
int _int = 787;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();

Test 203: 
StringReader stringReader = new StringReader("Hello World!");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 13, (-121));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)13).getNextToken();

Test 204: 
StringReader stringReader = new StringReader("An integer number 10");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 205: 
StringReader stringReader = new StringReader("This is a sample input string for testing the Java parser.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2834, 2834);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)2834).getNextToken();

Test 206: 
StringReader stringReader = new StringReader(">=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 26, 0, 0);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)26).getNextToken();

Test 207: 
StringReader stringReader = new StringReader(">>=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 36, 98);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)36).getNextToken();

Test 208: 
StringReader stringReader = new StringReader("double");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 94, (-1919));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);

Test 209: 
StringReader stringReader = new StringReader("chAUB<4");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 210: 
int _int = 1094;
JavaCharStream javaCharStream = new JavaCharStream((Reader) 1094, 1094, 1094, 1094);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();

Test 211: 
StringReader stringReader = new StringReader("throw new RuntimeException()");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 50, 100);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)50).getNextToken();

Test 212: 
StringReader stringReader = new StringReader("assert (x > 0)");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 213: 
StringReader stringReader = new StringReader("asw5ser");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 214: 
StringReader stringReader = new StringReader("\"trying to parse a Java program\"");
((StringReader)"\"trying to parse a Java program\"").read();
int _int = 73;
int _int = 34;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();

Test 215: 
StringReader stringReader = new StringReader("private");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "public";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "static";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 216: 
StringReader stringReader = new StringReader("false");
int _int = 98;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 98, 98);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)98).getNextToken();
String string = "\"Hello, World!\"";
StringReader stringReader = new StringReader(string);
int _int = 98;
int _int = 98;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();
String string = "10";
StringReader stringReader = new StringReader(string);
int _int = 98;
int _int = 98;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();
String string = "10.5";
StringReader stringReader = new StringReader(string);
int _int = 98;
int _int = 98;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();

Test 217: 
StringReader stringReader = new StringReader("\"Hello World\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 39, 22);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)39).getNextToken();

Test 218: 
JavaCharStream javaCharStream = new JavaCharStream((Reader) 48, 48, 48);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 219: 
StringReader stringReader = new StringReader("super");
int _int = 19;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 19, (-191));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
StringReader stringReader = new StringReader("This is a sample string");
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager((JavaCharStream) stringReader);
((JavaParserTokenManager) _int).getNextToken();

Test 220: 
StringReader stringReader = new StringReader("This is a string with multiple words and numbers 1234567890");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 27, 27);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)27).getNextToken();

Test 221: 
StringReader stringReader = new StringReader("Hello, World!");
int _int = 108;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 108, 0);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)108).getNextToken();
((JavaParserTokenManager) _int).getNextToken();

Test 222: 
StringReader stringReader = new StringReader("'/olumn ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 223: 
StringReader stringReader = new StringReader("\"/* Hello World! */\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 224: 
JavaCharStream javaCharStream = new JavaCharStream((InputStream) 97, 99, 32, (int) (byte)0);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);

Test 225: 
StringReader stringReader = new StringReader("\"\n\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "\"Hello, World!\"";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 226: 
StringReader stringReader = new StringReader("A long time ago, in a galaxy far, far away...");
int read = ((StringReader)"A long time ago, in a galaxy far, far away...").read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaCharStream) read).ReadByte();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 227: 
JavaCharStream javaCharStream = new JavaCharStream((InputStream) 42, 31, 45, (int) (byte) (-97));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

Test 228: 
JavaCharStream javaCharStream = new JavaCharStream((InputStream) 596, 26, (-2421), (int) (byte)26);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);

Test 229: 
byte[] byteArray = new byte[9];
byteArray[0] = (byte) 65;
byteArray[1] = (byte) 48;
byteArray[2] = (byte) (-38);
byteArray[3] = (byte) (-105);
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, 596, 7, (byte)26);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) byteArrayInputStream).getNextToken();

Test 230: 
StringReader stringReader = new StringReader("^|)");
int _int = 0;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 0, 8, 52);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)0).SwitchTo(2);
((JavaParserTokenManager) _int).getNextToken();
String string = "^|)";
StringReader stringReader = new StringReader(string);
int _int = 0;
int _int = 8;
int _int = 52;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int, _int);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
int _int = 2;
((JavaParserTokenManager) _int).SwitchTo(_int);
((JavaParserTokenManager) _int).getNextToken();
String string = "^|)";
StringReader stringReader = new StringReader(string);
int _int = 0;
int _int = 8;
int _int = 52;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int, _int);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
int _int = 2;
((JavaParserTokenManager) _int).SwitchTo(_int);
((JavaParserTokenManager) _int).getNextToken();
String string = "^|)";
StringReader stringReader = new StringReader(string);
int _int = 0;
int _int = 8;
int _int = 52;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int, _int);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
int _int = 2;
((JavaParserTokenManager) _int).SwitchTo(_int);
((JavaParserTokenManager) _int).getNextToken();

Test 231: 
StringReader stringReader = new StringReader("umv8l],QIu*+v:");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 80, 46);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)80).getNextToken();

Test 232: 
JavaCharStream javaCharStream = new JavaCharStream((InputStream) 257, 94, 257, 257);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 233: 
StringReader stringReader = new StringReader("This is a sample string to be parsed.");
int _int = 98;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 98, 51);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)98).getNextToken();
((JavaParserTokenManager) _int).getNextToken();

Test 234: 
StringReader stringReader = new StringReader("^|)");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).SkipLexicalActions((Token) null);

Test 235: 
StringReader stringReader = new StringReader("O3f1 [kkxhgE%L)5X$");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-201), (-201));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 236: 
PipedInputStream pipedInputStream = new PipedInputStream();
JavaCharStream javaCharStream = new JavaCharStream(pipedInputStream, 13, 13);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)13).SwitchTo((int) (Integer) null);

Test 237: 
StringReader stringReader = new StringReader("Hello World!");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).jjFillToken();

Test 238: 
StringReader stringReader = new StringReader("public class Example {\n\tpublic static void main(String[] args) {\n\t\tSystem.out.println(\"Hello, World!\");\n\t}\n}");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 48, 3);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)48).ReInit(javaCharStream, 3);

Test 239: 
StringReader stringReader = new StringReader("jO!b-9;k+9p~1i'9(H ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 240: 

Test 241: 
StringReader stringReader = new StringReader("V|,jhno3A7`aB%lp");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
Token nextToken = ((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).TokenLexicalActions(nextToken);


* Generated after the refinement and before minimization 242 tests with total length 1300
* test suite isTestSuite: 242
Test 0: 
StringReader stringReader = new StringReader("NcAxw&GXks@");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-572), (-572));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 1: 
StringReader stringReader = new StringReader("^|)");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2048, 126);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.ReInit(javaCharStream);
Test 2: 
StringReader stringReader = new StringReader("jO!b-9;k+9p~1i'9(H ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 95, (-1426));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 3: 
StringReader stringReader = new StringReader("NvAxw&GXks@");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 1);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 1, column 12.  Encountered: <EOF> after : \"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 4: 
StringReader stringReader = new StringReader("NcAxw&GXks@");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-572), (-572));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
MockPrintStream mockPrintStream = new MockPrintStream(javaParserTokenManager.debugStream, false);
javaParserTokenManager.setDebugStream(mockPrintStream);
Test 5: 
StringReader stringReader = new StringReader("$^{#-yOp5%_d");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-201), (-201));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line -201, column -198.  Encountered: \"#\" (35), after : \"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 6: 
StringReader stringReader = new StringReader("\"boolean\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaCharStream.ReadByte();
javaParserTokenManager.getNextToken();
Test 7: 
StringReader stringReader = new StringReader("natiZe");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 8: 
StringReader stringReader = new StringReader("final");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 0, 8, 0);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 9: 
StringReader stringReader = new StringReader("|.tR/*>@VW/<^");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 35, 35);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 10: 
StringReader stringReader = new StringReader("k=wdQg'dUra1Yb\"qN");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 62, 62);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 11: 
StringReader stringReader = new StringReader("\"break\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 34, 787);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 12: 
StringReader stringReader = new StringReader("%");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 13: 
StringReader stringReader = new StringReader("^'e&9U}{wH.'b@_");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 43, (-549));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 43, column -546.  Encountered: \"&\" (38), after : \"\\'e\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 14: 
StringReader stringReader = new StringReader("(6;:4<k/[cY3Y%=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 13, (-1288));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 15: 
StringReader stringReader = new StringReader("^|)");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2048, 126);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 16: 
StringReader stringReader = new StringReader("umv8l],QIu*+v:");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 80, 46);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 17: 
StringReader stringReader = new StringReader("K+3rieRSSY<h/Zu");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 18: 
StringReader stringReader = new StringReader("d0kum>h+(Rz.tl/");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1224, 1224);
javaCharStream.readChar();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 19: 
StringReader stringReader = new StringReader("1/Q!9u5a8y)'vNk");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 20: 
StringReader stringReader = new StringReader("X2.jDp2{4C#B#MROjm");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2242, 163);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 21: 
StringReader stringReader = new StringReader("47a");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 98, 98, 98);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 22: 
StringReader stringReader = new StringReader("WE:6 l");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (byte)53, 26);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 23: 
StringReader stringReader = new StringReader("7b%*2- |\"Ae");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (byte) (-12), 13);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 24: 
StringReader stringReader = new StringReader("#8zd&UG=M");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 34, (-71));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
stringReader.read();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 25: 
StringReader stringReader = new StringReader("#8-;d&UG=M");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 34, (-71));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
stringReader.read();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 26: 
StringReader stringReader = new StringReader("d0kum>h+(Rz.tl/");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1224, 108);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaCharStream.BeginToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 27: 
StringReader stringReader = new StringReader("khlu`,.?(dX<iWFzA0!");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 4976, 4976);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaCharStream.BeginToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 28: 
StringReader stringReader = new StringReader("]A@&o<InReRX?5UO`iO");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 29: 
StringReader stringReader = new StringReader("BZp6<Y+");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-1093), 0);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 30: 
StringReader stringReader = new StringReader("C1d6fEAGt/SgT<8S.\"6");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-159), 73);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 31: 
StringReader stringReader = new StringReader("<DIGIT>");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-2279), 50);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 32: 
StringReader stringReader = new StringReader("Et");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1261, 1261, 1261);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 33: 
StringReader stringReader = new StringReader(">HjU:8JG+L>'");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-1201), 28);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 34: 
StringReader stringReader = new StringReader("PhL/JEk=$G-CZ<$/");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 103, 32);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 35: 
StringReader stringReader = new StringReader("LsNAZFC=>");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 22, (-1));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 36: 
StringReader stringReader = new StringReader("Mm8jhEnx3A7`aB%l");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 37: 
StringReader stringReader = new StringReader("Q/RC");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-3593), (-2508));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 38: 
StringReader stringReader = new StringReader("TVvjng6`q/4");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 43, (-751));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 43, column -744.  Encountered: \"`\" (96), after : \"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 39: 
StringReader stringReader = new StringReader("V|,jh7no3A7`aB%lp");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 40: 
StringReader stringReader = new StringReader("X2.jDp2{4C#B#MROjm");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 22, 98);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 41: 
StringReader stringReader = new StringReader("AYOoZS-V#`O7i?3Hk");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1935, 65);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 42: 
StringReader stringReader = new StringReader("Z]");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 43: 
StringReader stringReader = new StringReader("m|[YGdJ~'?<YIVNb$v");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 44: 
StringReader stringReader = new StringReader("8f}_mL;mcP I~)~1y!");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 108, 108);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 45: 
StringReader stringReader = new StringReader("Invalid escape character at line ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 22, 58);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 46: 
StringReader stringReader = new StringReader("Cg%:'y>,{hRMT");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 67, (-1041), 67);
javaCharStream.BeginToken();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 47: 
StringReader stringReader = new StringReader("]iTjg7{{8uu4s7|$]?|");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 48: 
StringReader stringReader = new StringReader("khlu`,.?(dX<iWFzA0!");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 4976, 4976);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
stringReader.read();
stringReader.read();
javaParserTokenManager.getNextToken();
Test 49: 
StringReader stringReader = new StringReader("const");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1935, 1935);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 50: 
StringReader stringReader = new StringReader("x|3pE!.}j(p2tc");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1369, (-2279));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 51: 
StringReader stringReader = new StringReader("qA7[2{M^X ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 98, 47);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 52: 
StringReader stringReader = new StringReader("s|PuFf)%{[~Dq%");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 53: 
StringReader stringReader = new StringReader("|.tR/*>@VW/<^");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
char[] charArray = new char[2];
stringReader.read(charArray);
javaParserTokenManager.getNextToken();
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 1, column 12.  Encountered: <EOF> after : \"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 54: 
StringReader stringReader = new StringReader("NvAxw&GXks@");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaCharStream.ReadByte();
javaParserTokenManager.getNextToken();
Test 55: 
StringReader stringReader = new StringReader("y}=a6#X");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 56: 
StringReader stringReader = new StringReader("nv8~Iq:ardWDe*98*");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 124, (-116));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 57: 
StringReader stringReader = new StringReader("t2CG.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-1245), 1261, 332);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 58: 
StringReader stringReader = new StringReader("cNhAUB<4");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 22, (byte)20);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 59: 
StringReader stringReader = new StringReader("^69=(OMNkL#|A$8");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 930, 0);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 60: 
StringReader stringReader = new StringReader("uv8l]QIu+v:");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaCharStream.ReadByte();
javaParserTokenManager.getNextToken();
Test 61: 
StringReader stringReader = new StringReader("Cg%:'y>,{hRMT");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 21, 105, 121);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 62: 
StringReader stringReader = new StringReader("^<_@LaKHa-R/7P`wc");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-549), 84);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 63: 
StringReader stringReader = new StringReader("!=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 64: 
StringReader stringReader = new StringReader("<CHARACTER_LITERAL>");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 52, 3782, 1832);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 65: 
StringReader stringReader = new StringReader("</u>F,H`/;:RMPp");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 66: 
StringReader stringReader = new StringReader("<INTEGER_LITERAL>");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 37, 37);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 67: 
StringReader stringReader = new StringReader("G!LN9-");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 66, 66);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 68: 
StringReader stringReader = new StringReader("e+MG}?lu6=Ix&tq,m");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 56, 56);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 69: 
StringReader stringReader = new StringReader("8f}_mL;mcP I~)~1y!");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 46, 24);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
char[] charArray = new char[8];
stringReader.read(charArray);
javaParserTokenManager.getNextToken();
Test 70: 
StringReader stringReader = new StringReader("nQ8~Iq:ardWkDe$98*");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 0, 98);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 71: 
StringReader stringReader = new StringReader("AYOoZS-V#`O7i?3Hk");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 72: 
StringReader stringReader = new StringReader("cpWK8&WuoS");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 20, 103);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 73: 
StringReader stringReader = new StringReader("ebLM}i");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 66, 66);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 74: 
StringReader stringReader = new StringReader("fp]\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
stringReader.read();
javaParserTokenManager.getNextToken();
Test 75: 
StringReader stringReader = new StringReader(".`d`f{MP,`@K");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 98, 98, 98);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 76: 
StringReader stringReader = new StringReader("default");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2834, 2834);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 77: 
StringReader stringReader = new StringReader("default");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (byte)33, (-201));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
stringReader.read();
javaParserTokenManager.getNextToken();
Test 78: 
StringReader stringReader = new StringReader("ONd>j");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 79: 
StringReader stringReader = new StringReader("class");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 80: 
StringReader stringReader = new StringReader("implements");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (byte) (-35), 1070, 1605);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 81: 
StringReader stringReader = new StringReader("final");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 0, 0, 0);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 82: 
StringReader stringReader = new StringReader("\"break\"");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 34, 787);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 83: 
StringReader stringReader = new StringReader("nx!{23uF6gXlT6\"M8'");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 13, (-121));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 84: 
StringReader stringReader = new StringReader("byte");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 85: 
StringReader stringReader = new StringReader("dzflt");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2834, 2834);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 86: 
StringReader stringReader = new StringReader("==");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 87: 
StringReader stringReader = new StringReader(">=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 26, 0, 0);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 88: 
StringReader stringReader = new StringReader(">>=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 36, 98);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 89: 
StringReader stringReader = new StringReader("double");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (byte)94, (-1919));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 90: 
StringReader stringReader = new StringReader("chAUB<4");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 91: 
StringReader stringReader = new StringReader("void");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1094, 1094, 1094);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 92: 
StringReader stringReader = new StringReader("throw");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 81, (-963));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 93: 
StringReader stringReader = new StringReader("assert");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 94: 
StringReader stringReader = new StringReader("asw5ser");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 95: 
StringReader stringReader = new StringReader("\"try\"");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 73, 34);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 96: 
StringReader stringReader = new StringReader("protected");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 97: 
StringReader stringReader = new StringReader("true");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 98, 98);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 98: 
StringReader stringReader = new StringReader("null");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 39, 22);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 99: 
StringReader stringReader = new StringReader("const");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 48, 48);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 100: 
StringReader stringReader = new StringReader("super");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 19, (-191));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 101: 
StringReader stringReader = new StringReader("sXjxoO");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 27, 27);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.jjround = (-1);
javaParserTokenManager.getNextToken();
Test 102: 
StringReader stringReader = new StringReader("&/ J|<`A9");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 108, (byte)0);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 103: 
StringReader stringReader = new StringReader("'/olumn ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 1, column 3.  Encountered: \"o\" (111), after : \"\\'/\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 104: 
StringReader stringReader = new StringReader("\"/*\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 105: 
byte[] byteArray = new byte[6];
byteArray[1] = (byte) (-35);
byteArray[0] = (byte)53;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, (byte) (-97), (byte) (-35), (byte)0);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 106: 
StringReader stringReader = new StringReader("\"\n\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 1, column 2.  Encountered: \"\\n\" (10), after : \"\\\"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 107: 
StringReader stringReader = new StringReader("uv8l]QIu+v:");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaCharStream.ReadByte();
javaParserTokenManager.getNextToken();
Test 108: 
byte[] byteArray = new byte[4];
byteArray[0] = (byte) (-97);
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, (byte) (-97), 31, (byte) (-97));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line -97, column 31.  Encountered: \"\\ufffd\" (65533), after : \"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 109: 
byte[] byteArray = new byte[9];
byteArray[0] = (byte)106;
byteArray[1] = (byte)49;
byteArray[2] = (byte) (-38);
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, 596, (-2421), (byte)26);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 110: 
byte[] byteArray = new byte[9];
byteArray[0] = (byte)106;
byteArray[1] = (byte)49;
byteArray[2] = (byte) (-38);
byteArray[3] = (byte) (-105);
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, 596, (-2421), (byte)26);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 111: 
StringReader stringReader = new StringReader("^|)");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 0, 8, 52);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.SwitchTo(2);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 0, column 11.  Encountered: <EOF> after : \"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 112: 
StringReader stringReader = new StringReader("umv8l],QIu*+v:");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 80, 46);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.curLexState = 80;
javaParserTokenManager.getNextToken();
Test 113: 
byte[] byteArray = new byte[1];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, 257, 94, 257);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 257, column 95.  Encountered: <EOF> after : \"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 114: 
StringReader stringReader = new StringReader("Ji'Wm");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 98, 51);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 98, column 56.  Encountered: <EOF> after : \"\\'Wm\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 115: 
StringReader stringReader = new StringReader("^|)");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
Token.GTToken token_GTToken = new Token.GTToken();
javaParserTokenManager.SkipLexicalActions(token_GTToken);
Test 116: 
StringReader stringReader = new StringReader("O3f1 [kkxhgE%L)5X$");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-201), (-201));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 117: 
PipedInputStream pipedInputStream = new PipedInputStream();
JavaCharStream javaCharStream = new JavaCharStream(pipedInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
// Undeclared exception!
try { 
  javaParserTokenManager.SwitchTo(119);
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Error: Ignoring invalid lexical state : 119. State unchanged.
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 118: 
PipedInputStream pipedInputStream = new PipedInputStream();
JavaCharStream javaCharStream = new JavaCharStream(pipedInputStream, 13, 13);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
// Undeclared exception!
try { 
  javaParserTokenManager.SwitchTo((-1));
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Error: Ignoring invalid lexical state : -1. State unchanged.
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 119: 
StringReader stringReader = new StringReader("FxX1WR/)'V:");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.jjFillToken();
Test 120: 
StringReader stringReader = new StringReader("8f}_mL;mcP I~)~1y!");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 48, 3);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.ReInit(javaCharStream, 3);
Test 121: 
StringReader stringReader = new StringReader("jO!b-9;k+9p~1i'9(H ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 122: 
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager((JavaCharStream) null);
javaParserTokenManager.MoreLexicalActions();
Test 123: 
StringReader stringReader = new StringReader("V|,jhno3A7`aB%lp");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
Token nextToken = javaParserTokenManager.getNextToken();
javaParserTokenManager.TokenLexicalActions(nextToken);
Test 124: 
StringReader stringReader = new StringReader("This is a sample input string.");
int _int = 0;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 0, 0);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)0).getNextToken();
((JavaParserTokenManager) _int).getNextToken();
((JavaParserTokenManager) _int).getNextToken();

Test 125: 
StringReader stringReader = new StringReader("Hello World!");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2048, 126);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)2048).ReInit(javaCharStream);

Test 126: 
StringReader stringReader = new StringReader("jO!b-9;k+9p~1i'9(H ");
String string = "javaCode";
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (int) "javaCode", (-1426));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) string).getNextToken();
((JavaParserTokenManager) string).getNextToken();
((JavaParserTokenManager) string).getNextToken();
((JavaParserTokenManager) string).getNextToken();
((JavaParserTokenManager) string).getNextToken();

Test 127: 
StringReader stringReader = new StringReader("This is a test string with various characters.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 1);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 128: 
StringReader stringReader = new StringReader("The quick brown fox jumps over the lazy dog.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-572), (-572));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
MockPrintStream mockPrintStream = new MockPrintStream((OutputStream) false, false);
((JavaParserTokenManager) javaCharStream).setDebugStream(mockPrintStream);

Test 129: 
StringReader stringReader = new StringReader("This is a sample input string for testing the JavaParserTokenManager.");
int _int = 100;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 100, 100);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)100).getNextToken();
((JavaParserTokenManager) _int).getNextToken();
((JavaParserTokenManager) _int).getNextToken();
((JavaParserTokenManager) _int).getNextToken();

Test 130: 
StringReader stringReader = new StringReader("\"boolean_type\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaCharStream) stringReader).ReadByte();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 131: 
StringReader stringReader = new StringReader("natiZe");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 132: 
StringReader stringReader = new StringReader("final private static String test = \"hello world\";");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 0, 8, 0);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)0).getNextToken();

Test 133: 
StringReader stringReader = new StringReader("|.tR/*>@VW/<^");
int _int = 35;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 35, 35);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)35).getNextToken();
((JavaParserTokenManager) _int).getNextToken();

Test 134: 
StringReader stringReader = new StringReader("This is a sample string for testing purposes");
int _int = 62;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 62, 62);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)62).getNextToken();
((JavaParserTokenManager) _int).getNextToken();
((JavaParserTokenManager) _int).getNextToken();

Test 135: 
StringReader stringReader = new StringReader("\"breakfast\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 34, 787);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)34).getNextToken();

Test 136: 
StringReader stringReader = new StringReader("%");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

Test 137: 
JavaCharStream javaCharStream = new JavaCharStream((Reader) 43, 43, (-549));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

Test 138: 
StringReader stringReader = new StringReader("(6;:4<k/[cY3Y%=)");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 13, (-1288));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)13).getNextToken();

Test 139: 
StringReader stringReader = new StringReader("^|)");
int _int = 2048;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2048, 126);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)2048).getNextToken();
((JavaParserTokenManager) _int).getNextToken();
((JavaParserTokenManager) _int).getNextToken();

Test 140: 
StringReader stringReader = new StringReader("hello world! This is a sample text.");
int _int = 80;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 80, 46);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)80).getNextToken();
((JavaParserTokenManager) _int).getNextToken();
((JavaParserTokenManager) _int).getNextToken();
((JavaParserTokenManager) _int).getNextToken();
((JavaParserTokenManager) _int).getNextToken();

Test 141: 
StringReader stringReader = new StringReader("The quick brown fox jumps over the lazy dog.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 142: 
StringReader stringReader = new StringReader("d0kum>h+(Rz.tl/");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1224, 1224);
((JavaCharStream)1224).readChar();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 143: 
StringReader stringReader = new StringReader("1234567890");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 144: 
JavaCharStream javaCharStream = new JavaCharStream((Reader) 1024, 512, 163);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

Test 145: 
StringReader stringReader = new StringReader("47a");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 98, 98, 98);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)98).getNextToken();

Test 146: 
StringReader stringReader = new StringReader("WE:6 l");
int _int = 53;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 53, 26);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)53).getNextToken();
((JavaParserTokenManager) _int).getNextToken();
((JavaParserTokenManager) _int).getNextToken();

Test 147: 
StringReader stringReader = new StringReader("7b%*2- |\"Ae");
int _int = 13;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 13, 13);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)13).getNextToken();
((JavaParserTokenManager) _int).getNextToken();
((JavaParserTokenManager) _int).getNextToken();

Test 148: 
StringReader stringReader = new StringReader("abcdefg");
int _int = 34;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 34, (-71));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((StringReader)"abcdefg").read();
((JavaParserTokenManager) _int).getNextToken();
((JavaParserTokenManager) _int).getNextToken();
((JavaParserTokenManager) _int).getNextToken();
((JavaParserTokenManager) _int).getNextToken();

Test 149: 
StringReader stringReader = new StringReader("1234567890");
int _int = 34;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 34, (-71));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((StringReader)"1234567890").read();
((JavaParserTokenManager) _int).getNextToken();
((JavaParserTokenManager) _int).getNextToken();
((JavaParserTokenManager) _int).getNextToken();
((JavaParserTokenManager) _int).getNextToken();
((JavaParserTokenManager) _int).getNextToken();

Test 150: 
StringReader stringReader = new StringReader("The quick brown fox jumps over the lazy dog.");
int _int = 1224;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1224, 108);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)1224).getNextToken();
((JavaCharStream) stringReader).BeginToken();
((JavaParserTokenManager) _int).getNextToken();
((JavaParserTokenManager) _int).getNextToken();
((JavaParserTokenManager) _int).getNextToken();

Test 151: 
StringReader stringReader = new StringReader("Hello, World!");
int _int = 1234567890;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1234567890, 1234567890);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)1234567890).getNextToken();
((JavaCharStream) stringReader).BeginToken();
((JavaParserTokenManager) _int).getNextToken();
((JavaParserTokenManager) _int).getNextToken();
((JavaParserTokenManager) _int).getNextToken();

Test 152: 
StringReader stringReader = new StringReader("]A@&o<InReRX?5UO`iO");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 153: 
StringReader stringReader = new StringReader("BZp6<Y+");
int _int = 0;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 0, 0);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)0).getNextToken();
((JavaParserTokenManager) _int).getNextToken();

Test 154: 
StringReader stringReader = new StringReader("C1d6fEAGt/SgT<8S.\"6");
int _int = 73;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 73, 73);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)73).getNextToken();
((JavaParserTokenManager) _int).getNextToken();
((JavaParserTokenManager) _int).getNextToken();

Test 155: 
StringReader stringReader = new StringReader("<DIGIT>");
int _int = 50;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 50, 50);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)50).getNextToken();
((JavaParserTokenManager) _int).getNextToken();

Test 156: 
StringReader stringReader = new StringReader("A long string of characters");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1261, 1261, 1261);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)1261).getNextToken();

Test 157: 
StringReader stringReader = new StringReader(">HjU:8JG+L>'");
int _int = 28;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 28, 28);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)28).getNextToken();
((JavaParserTokenManager) _int).getNextToken();

Test 158: 
StringReader stringReader = new StringReader("This is a test string with various characters and symbols");
int _int = 103;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 103, 32);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)103).getNextToken();
((JavaParserTokenManager) _int).getNextToken();
((JavaParserTokenManager) _int).getNextToken();

Test 159: 
StringReader stringReader = new StringReader("LsNAZFC=>");
int _int = 22;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 22, (-1));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)22).getNextToken();
((JavaParserTokenManager) _int).getNextToken();

Test 160: 
StringReader stringReader = new StringReader("This is a test input for the JavaParserTokenManager.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 161: 
StringReader stringReader = new StringReader("Q/RC");
int _int = 1234567890;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1234567890, (-2508));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)1234567890).getNextToken();
((JavaParserTokenManager) _int).getNextToken();
((JavaParserTokenManager) _int).getNextToken();

Test 162: 
StringReader stringReader = new StringReader("TVvjng6`q/4");
int _int = 43;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 43, (-751));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)43).getNextToken();
((JavaParserTokenManager) _int).getNextToken();

Test 163: 
StringReader stringReader = new StringReader("This is a test string with some complex data types such as integers, doubles, and strings.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 100, 25);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)100).getNextToken();

Test 164: 
StringReader stringReader = new StringReader("AYOoZS-V#`O7i?3Hk");
((StringReader)"AYOoZS-V#`O7i?3Hk").read();
int _int = 1935;
int _int = 65;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();

Test 165: 
StringReader stringReader = new StringReader("Z]");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 166: 
StringReader stringReader = new StringReader("m|[YGdJ~'?<YIVNb$v");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 167: 
JavaCharStream javaCharStream = new JavaCharStream((Reader) 108, 108, 108);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 168: 
StringReader stringReader = new StringReader("Invalid escape character at line 10");
int _int = 22;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 22, 58);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)22).getNextToken();
((JavaParserTokenManager) _int).getNextToken();
((JavaParserTokenManager) _int).getNextToken();
((JavaParserTokenManager) _int).getNextToken();

Test 169: 
JavaCharStream javaCharStream = new JavaCharStream((Reader) 67, 67, (-1041), 67);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);

Test 170: 
StringReader stringReader = new StringReader("This is a sample input for testing the JavaParserTokenManager class.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 171: 
String string = "This is a sample input string for testing JavaParser.";
StringReader stringReader = new StringReader("This is a sample input string for testing JavaParser.");
int _int = 4976;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 4976, 4976);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((StringReader)"This is a sample input string for testing JavaParser.").read();
((StringReader) string).read();
((JavaParserTokenManager) _int).getNextToken();

Test 172: 
StringReader stringReader = new StringReader("const");
((StringReader)"const").read();
int _int = 1935;
int _int = 1935;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();

Test 173: 
JavaCharStream javaCharStream = new JavaCharStream((Reader) 1369, 1369, (-2279));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

Test 174: 
JavaCharStream javaCharStream = new JavaCharStream((Reader) 98, 47, 47);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 175: 
StringReader stringReader = new StringReader("|.tR/*>@VW/<^");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
char[] charArray = new char[2];
((Reader)"|.tR/*>@VW/<^").read(charArray);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 176: 
StringReader stringReader = new StringReader("This is a sample input string that will be parsed by the Java compiler.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaCharStream) stringReader).ReadByte();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 177: 
StringReader stringReader = new StringReader("nv8~Iq:ardWDe*98*");
int _int = 124;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 124, (-116));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)124).getNextToken();
((JavaParserTokenManager) _int).getNextToken();

Test 178: 
StringReader stringReader = new StringReader("t2CG.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1000, 332, 332);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)1000).getNextToken();

Test 179: 
StringReader stringReader = new StringReader("cNhAUB<4");
int _int = 22;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 22, 20);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)22).getNextToken();
((JavaParserTokenManager) _int).getNextToken();

Test 180: 
StringReader stringReader = new StringReader("^69=(OMNkL#|A$8");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 930, 0);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)930).getNextToken();

Test 181: 
StringReader stringReader = new StringReader("A valid input string.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaCharStream) stringReader).ReadByte();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 182: 
StringReader stringReader = new StringReader("This is a sample input for the Java parser.");
int _int = 21;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 21, 105, 121);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)21).getNextToken();
((JavaParserTokenManager) _int).getNextToken();

Test 183: 
StringReader stringReader = new StringReader("^<_@LaKHa-R/7P`wc");
int _int = 84;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 84, 84);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)84).getNextToken();
((JavaParserTokenManager) _int).getNextToken();

Test 184: 
StringReader stringReader = new StringReader("!==");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 185: 
StringReader stringReader = new StringReader("This is a test string");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 52, 3782, 1832);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)52).getNextToken();

Test 186: 
StringReader stringReader = new StringReader("public class TestClass { public static void main(String[] args) { System.out.println(\"Hello, world!\"); } }");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 187: 
StringReader stringReader = new StringReader("12345");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 37, 37);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)37).getNextToken();

Test 188: 
StringReader stringReader = new StringReader("G!LN9-");
int _int = 66;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 66, 66);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)66).getNextToken();
((JavaParserTokenManager) _int).getNextToken();

Test 189: 
JavaCharStream javaCharStream = new JavaCharStream((Reader) 56, 56, 56);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 190: 
StringReader stringReader = new StringReader("This is a test string");
int _int = 46;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 46, 24);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
char[] charArray = new char[8];
((Reader)"This is a test string").read(charArray);
((JavaParserTokenManager) _int).getNextToken();

Test 191: 
StringReader stringReader = new StringReader("The quick brown fox jumps over the lazy dog.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 0, 98);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)0).getNextToken();

Test 192: 
StringReader stringReader = new StringReader("Hello, World!");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 193: 
StringReader stringReader = new StringReader("cpWK8&WuoS");
int _int = 20;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 20, 103);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)20).getNextToken();
((JavaParserTokenManager) _int).getNextToken();

Test 194: 
StringReader stringReader = new StringReader("This is a sample string with spaces and special chars $%^&*()!#");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 66, 66);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)66).getNextToken();

Test 195: 
StringReader stringReader = new StringReader("Hello, World!");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((StringReader)"Hello, World!").read();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 196: 
StringReader stringReader = new StringReader("Hello, World!");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 98, 98, 98);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)98).getNextToken();

Test 197: 
StringReader stringReader = new StringReader("The quick brown fox jumps over the lazy dog.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2834, 2834);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)2834).getNextToken();

Test 198: 
StringReader stringReader = new StringReader("Hello, World!");
int _int = 33;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 33, (-201));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((StringReader)"Hello, World!").read();
((JavaParserTokenManager) _int).getNextToken();

Test 199: 
StringReader stringReader = new StringReader("This is a sample input string");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 200: 
StringReader stringReader = new StringReader("implements");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1070, 1605, 1605);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)1070).getNextToken();

Test 201: 
StringReader stringReader = new StringReader("final int x = 5;");
((StringReader)"final int x = 5;").read();
int _int = 0;
int _int = 0;
int _int = 0;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int, _int);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();

Test 202: 
StringReader stringReader = new StringReader("\"break\".toLowerCase()");
((StringReader)"\"break\".toLowerCase()").read();
int _int = 34;
int _int = 787;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();

Test 203: 
StringReader stringReader = new StringReader("Hello World!");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 13, (-121));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)13).getNextToken();

Test 204: 
StringReader stringReader = new StringReader("An integer number 10");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 205: 
StringReader stringReader = new StringReader("This is a sample input string for testing the Java parser.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2834, 2834);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)2834).getNextToken();

Test 206: 
StringReader stringReader = new StringReader(">=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 26, 0, 0);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)26).getNextToken();

Test 207: 
StringReader stringReader = new StringReader(">>=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 36, 98);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)36).getNextToken();

Test 208: 
StringReader stringReader = new StringReader("double");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 94, (-1919));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);

Test 209: 
StringReader stringReader = new StringReader("chAUB<4");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 210: 
int _int = 1094;
JavaCharStream javaCharStream = new JavaCharStream((Reader) 1094, 1094, 1094, 1094);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();

Test 211: 
StringReader stringReader = new StringReader("throw new RuntimeException()");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 50, 100);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)50).getNextToken();

Test 212: 
StringReader stringReader = new StringReader("assert (x > 0)");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 213: 
StringReader stringReader = new StringReader("asw5ser");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 214: 
StringReader stringReader = new StringReader("\"trying to parse a Java program\"");
((StringReader)"\"trying to parse a Java program\"").read();
int _int = 73;
int _int = 34;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();

Test 215: 
StringReader stringReader = new StringReader("private");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "public";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "static";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 216: 
StringReader stringReader = new StringReader("false");
int _int = 98;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 98, 98);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)98).getNextToken();
String string = "\"Hello, World!\"";
StringReader stringReader = new StringReader(string);
int _int = 98;
int _int = 98;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();
String string = "10";
StringReader stringReader = new StringReader(string);
int _int = 98;
int _int = 98;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();
String string = "10.5";
StringReader stringReader = new StringReader(string);
int _int = 98;
int _int = 98;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();

Test 217: 
StringReader stringReader = new StringReader("\"Hello World\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 39, 22);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)39).getNextToken();

Test 218: 
JavaCharStream javaCharStream = new JavaCharStream((Reader) 48, 48, 48);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 219: 
StringReader stringReader = new StringReader("super");
int _int = 19;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 19, (-191));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
StringReader stringReader = new StringReader("This is a sample string");
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager((JavaCharStream) stringReader);
((JavaParserTokenManager) _int).getNextToken();

Test 220: 
StringReader stringReader = new StringReader("This is a string with multiple words and numbers 1234567890");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 27, 27);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)27).getNextToken();

Test 221: 
StringReader stringReader = new StringReader("Hello, World!");
int _int = 108;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 108, 0);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)108).getNextToken();
((JavaParserTokenManager) _int).getNextToken();

Test 222: 
StringReader stringReader = new StringReader("'/olumn ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 223: 
StringReader stringReader = new StringReader("\"/* Hello World! */\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 224: 
JavaCharStream javaCharStream = new JavaCharStream((InputStream) 97, 99, 32, (int) (byte)0);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);

Test 225: 
StringReader stringReader = new StringReader("\"\n\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "\"Hello, World!\"";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 226: 
StringReader stringReader = new StringReader("A long time ago, in a galaxy far, far away...");
int read = ((StringReader)"A long time ago, in a galaxy far, far away...").read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaCharStream) read).ReadByte();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 227: 
JavaCharStream javaCharStream = new JavaCharStream((InputStream) 42, 31, 45, (int) (byte) (-97));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

Test 228: 
JavaCharStream javaCharStream = new JavaCharStream((InputStream) 596, 26, (-2421), (int) (byte)26);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);

Test 229: 
byte[] byteArray = new byte[9];
byteArray[0] = (byte) 65;
byteArray[1] = (byte) 48;
byteArray[2] = (byte) (-38);
byteArray[3] = (byte) (-105);
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, 596, 7, (byte)26);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) byteArrayInputStream).getNextToken();

Test 230: 
StringReader stringReader = new StringReader("^|)");
int _int = 0;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 0, 8, 52);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)0).SwitchTo(2);
((JavaParserTokenManager) _int).getNextToken();
String string = "^|)";
StringReader stringReader = new StringReader(string);
int _int = 0;
int _int = 8;
int _int = 52;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int, _int);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
int _int = 2;
((JavaParserTokenManager) _int).SwitchTo(_int);
((JavaParserTokenManager) _int).getNextToken();
String string = "^|)";
StringReader stringReader = new StringReader(string);
int _int = 0;
int _int = 8;
int _int = 52;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int, _int);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
int _int = 2;
((JavaParserTokenManager) _int).SwitchTo(_int);
((JavaParserTokenManager) _int).getNextToken();
String string = "^|)";
StringReader stringReader = new StringReader(string);
int _int = 0;
int _int = 8;
int _int = 52;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int, _int);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
int _int = 2;
((JavaParserTokenManager) _int).SwitchTo(_int);
((JavaParserTokenManager) _int).getNextToken();

Test 231: 
StringReader stringReader = new StringReader("umv8l],QIu*+v:");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 80, 46);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)80).getNextToken();

Test 232: 
JavaCharStream javaCharStream = new JavaCharStream((InputStream) 257, 94, 257, 257);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 233: 
StringReader stringReader = new StringReader("This is a sample string to be parsed.");
int _int = 98;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 98, 51);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)98).getNextToken();
((JavaParserTokenManager) _int).getNextToken();

Test 234: 
StringReader stringReader = new StringReader("^|)");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).SkipLexicalActions((Token) null);

Test 235: 
StringReader stringReader = new StringReader("O3f1 [kkxhgE%L)5X$");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-201), (-201));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 236: 
PipedInputStream pipedInputStream = new PipedInputStream();
JavaCharStream javaCharStream = new JavaCharStream(pipedInputStream, 13, 13);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)13).SwitchTo((int) (Integer) null);

Test 237: 
StringReader stringReader = new StringReader("Hello World!");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).jjFillToken();

Test 238: 
StringReader stringReader = new StringReader("public class Example {\n\tpublic static void main(String[] args) {\n\t\tSystem.out.println(\"Hello, World!\");\n\t}\n}");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 48, 3);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)48).ReInit(javaCharStream, 3);

Test 239: 
StringReader stringReader = new StringReader("jO!b-9;k+9p~1i'9(H ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 240: 

Test 241: 
StringReader stringReader = new StringReader("V|,jhno3A7`aB%lp");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
Token nextToken = ((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).TokenLexicalActions(nextToken);


* Minimizing test suite
* test suite isTestSuite: 120
Test 0: 
StringReader stringReader = new StringReader("8f}_mL;mcP I~)~1y!");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 48, 3);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.ReInit(javaCharStream, 3);
Test 1: 
StringReader stringReader = new StringReader(".`d`f{MP,`@K");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 98, 98, 98);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 2: 
StringReader stringReader = new StringReader("1/Q!9u5a8y)'vNk");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 3: 
StringReader stringReader = new StringReader("NvAxw&GXks@");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 1);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 1, column 12.  Encountered: <EOF> after : \"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 4: 
StringReader stringReader = new StringReader("NcAxw&GXks@");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-572), (-572));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
MockPrintStream mockPrintStream = new MockPrintStream(javaParserTokenManager.debugStream, false);
javaParserTokenManager.setDebugStream(mockPrintStream);
Test 5: 
StringReader stringReader = new StringReader("(6;:4<k/[cY3Y%=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 13, (-1288));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 6: 
StringReader stringReader = new StringReader("assert");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 7: 
StringReader stringReader = new StringReader("asw5ser");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 8: 
StringReader stringReader = new StringReader("natiZe");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 9: 
StringReader stringReader = new StringReader("final");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 0, 8, 0);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 10: 
StringReader stringReader = new StringReader("&/ J|<`A9");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 108, (byte)0);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 11: 
StringReader stringReader = new StringReader("dzflt");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2834, 2834);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 12: 
StringReader stringReader = new StringReader("k=wdQg'dUra1Yb\"qN");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 62, 62);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 13: 
StringReader stringReader = new StringReader("!=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 14: 
StringReader stringReader = new StringReader("\"/*\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 15: 
StringReader stringReader = new StringReader("$^{#-yOp5%_d");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-201), (-201));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line -201, column -198.  Encountered: \"#\" (35), after : \"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 16: 
StringReader stringReader = new StringReader("%");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 17: 
StringReader stringReader = new StringReader("'/olumn ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 1, column 3.  Encountered: \"o\" (111), after : \"\\'/\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 18: 
StringReader stringReader = new StringReader("^|)");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2048, 126);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 19: 
StringReader stringReader = new StringReader("umv8l],QIu*+v:");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 80, 46);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 20: 
StringReader stringReader = new StringReader("e+MG}?lu6=Ix&tq,m");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 56, 56);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 21: 
StringReader stringReader = new StringReader("AYOoZS-V#`O7i?3Hk");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 22: 
StringReader stringReader = new StringReader("d0kum>h+(Rz.tl/");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1224, 1224);
javaCharStream.readChar();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 23: 
StringReader stringReader = new StringReader("X2.jDp2{4C#B#MROjm");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2242, 163);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 24: 
StringReader stringReader = new StringReader("K+3rieRSSY<h/Zu");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 25: 
StringReader stringReader = new StringReader("47a");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 98, 98, 98);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 26: 
StringReader stringReader = new StringReader("WE:6 l");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (byte)53, 26);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 27: 
StringReader stringReader = new StringReader("7b%*2- |\"Ae");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (byte) (-12), 13);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 28: 
StringReader stringReader = new StringReader("8f}_mL;mcP I~)~1y!");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 108, 108);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 29: 
StringReader stringReader = new StringReader("jO!b-9;k+9p~1i'9(H ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 95, (-1426));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 30: 
StringReader stringReader = new StringReader("#8-;d&UG=M");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 34, (-71));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
stringReader.read();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 31: 
StringReader stringReader = new StringReader("<CHARACTER_LITERAL>");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 52, 3782, 1832);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 32: 
StringReader stringReader = new StringReader(">=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 26, 0, 0);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 33: 
StringReader stringReader = new StringReader("khlu`,.?(dX<iWFzA0!");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 4976, 4976);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaCharStream.BeginToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 34: 
StringReader stringReader = new StringReader("]A@&o<InReRX?5UO`iO");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 35: 
StringReader stringReader = new StringReader("BZp6<Y+");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-1093), 0);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 36: 
StringReader stringReader = new StringReader("Cg%:'y>,{hRMT");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 21, 105, 121);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 37: 
StringReader stringReader = new StringReader("<DIGIT>");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-2279), 50);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 38: 
StringReader stringReader = new StringReader("Et");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1261, 1261, 1261);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 39: 
StringReader stringReader = new StringReader("FxX1WR/)'V:");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.jjFillToken();
Test 40: 
StringReader stringReader = new StringReader("G!LN9-");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 66, 66);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 41: 
StringReader stringReader = new StringReader(">HjU:8JG+L>'");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-1201), 28);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 42: 
StringReader stringReader = new StringReader("Invalid escape character at line ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 22, 58);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 43: 
StringReader stringReader = new StringReader("Ji'Wm");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 98, 51);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 98, column 56.  Encountered: <EOF> after : \"\\'Wm\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 44: 
StringReader stringReader = new StringReader("LsNAZFC=>");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 22, (-1));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 45: 
StringReader stringReader = new StringReader("Mm8jhEnx3A7`aB%l");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 46: 
StringReader stringReader = new StringReader("NcAxw&GXks@");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-572), (-572));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 47: 
StringReader stringReader = new StringReader("O3f1 [kkxhgE%L)5X$");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-201), (-201));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 48: 
StringReader stringReader = new StringReader("PhL/JEk=$G-CZ<$/");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 103, 32);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 49: 
StringReader stringReader = new StringReader("Q/RC");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-3593), (-2508));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 50: 
StringReader stringReader = new StringReader("C1d6fEAGt/SgT<8S.\"6");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-159), 73);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 51: 
StringReader stringReader = new StringReader("TVvjng6`q/4");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 43, (-751));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 43, column -744.  Encountered: \"`\" (96), after : \"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 52: 
StringReader stringReader = new StringReader("#8zd&UG=M");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 34, (-71));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
stringReader.read();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 53: 
StringReader stringReader = new StringReader("V|,jh7no3A7`aB%lp");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 54: 
StringReader stringReader = new StringReader("X2.jDp2{4C#B#MROjm");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 22, 98);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 55: 
StringReader stringReader = new StringReader("AYOoZS-V#`O7i?3Hk");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1935, 65);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 56: 
StringReader stringReader = new StringReader("Z]");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 57: 
StringReader stringReader = new StringReader("chAUB<4");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 58: 
StringReader stringReader = new StringReader("Cg%:'y>,{hRMT");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 67, (-1041), 67);
javaCharStream.BeginToken();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 59: 
StringReader stringReader = new StringReader("d0kum>h+(Rz.tl/");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1224, 108);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaCharStream.BeginToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 60: 
StringReader stringReader = new StringReader("implements");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (byte) (-35), 1070, 1605);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 61: 
StringReader stringReader = new StringReader("khlu`,.?(dX<iWFzA0!");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 4976, 4976);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
stringReader.read();
stringReader.read();
javaParserTokenManager.getNextToken();
Test 62: 
StringReader stringReader = new StringReader("const");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1935, 1935);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 63: 
StringReader stringReader = new StringReader("protected");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 64: 
StringReader stringReader = new StringReader("qA7[2{M^X ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 98, 47);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 65: 
StringReader stringReader = new StringReader("super");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 19, (-191));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 66: 
StringReader stringReader = new StringReader("t2CG.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-1245), 1261, 332);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 67: 
StringReader stringReader = new StringReader("void");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1094, 1094, 1094);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 68: 
StringReader stringReader = new StringReader("x|3pE!.}j(p2tc");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1369, (-2279));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 69: 
StringReader stringReader = new StringReader("y}=a6#X");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 70: 
StringReader stringReader = new StringReader("nv8~Iq:ardWDe*98*");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 124, (-116));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 71: 
byte[] byteArray = new byte[1];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, 257, 94, 257);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 257, column 95.  Encountered: <EOF> after : \"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 72: 
StringReader stringReader = new StringReader("^'e&9U}{wH.'b@_");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 43, (-549));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 43, column -546.  Encountered: \"&\" (38), after : \"\\'e\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 73: 
StringReader stringReader = new StringReader("|.tR/*>@VW/<^");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 35, 35);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 74: 
StringReader stringReader = new StringReader("cNhAUB<4");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 22, (byte)20);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 75: 
StringReader stringReader = new StringReader("^69=(OMNkL#|A$8");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 930, 0);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 76: 
StringReader stringReader = new StringReader("uv8l]QIu+v:");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaCharStream.ReadByte();
javaParserTokenManager.getNextToken();
Test 77: 
StringReader stringReader = new StringReader("^<_@LaKHa-R/7P`wc");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-549), 84);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 78: 
StringReader stringReader = new StringReader(">>=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 36, 98);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 79: 
StringReader stringReader = new StringReader("NvAxw&GXks@");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaCharStream.ReadByte();
javaParserTokenManager.getNextToken();
Test 80: 
StringReader stringReader = new StringReader("</u>F,H`/;:RMPp");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 81: 
StringReader stringReader = new StringReader("<INTEGER_LITERAL>");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 37, 37);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 82: 
StringReader stringReader = new StringReader("8f}_mL;mcP I~)~1y!");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 46, 24);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
char[] charArray = new char[8];
stringReader.read(charArray);
javaParserTokenManager.getNextToken();
Test 83: 
StringReader stringReader = new StringReader("nQ8~Iq:ardWkDe$98*");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 0, 98);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 84: 
StringReader stringReader = new StringReader("]iTjg7{{8uu4s7|$]?|");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 85: 
StringReader stringReader = new StringReader("cpWK8&WuoS");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 20, 103);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 86: 
StringReader stringReader = new StringReader("m|[YGdJ~'?<YIVNb$v");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 87: 
StringReader stringReader = new StringReader("fp]\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
stringReader.read();
javaParserTokenManager.getNextToken();
Test 88: 
StringReader stringReader = new StringReader("default");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2834, 2834);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 89: 
StringReader stringReader = new StringReader("default");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (byte)33, (-201));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
stringReader.read();
javaParserTokenManager.getNextToken();
Test 90: 
StringReader stringReader = new StringReader("ONd>j");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 91: 
StringReader stringReader = new StringReader("class");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 92: 
StringReader stringReader = new StringReader("final");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 0, 0, 0);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 93: 
StringReader stringReader = new StringReader("nx!{23uF6gXlT6\"M8'");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 13, (-121));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 94: 
StringReader stringReader = new StringReader("byte");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 95: 
StringReader stringReader = new StringReader("|.tR/*>@VW/<^");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
char[] charArray = new char[2];
stringReader.read(charArray);
javaParserTokenManager.getNextToken();
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 1, column 12.  Encountered: <EOF> after : \"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 96: 
StringReader stringReader = new StringReader("==");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 97: 
StringReader stringReader = new StringReader("double");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (byte)94, (-1919));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 98: 
StringReader stringReader = new StringReader("\"break\"");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 34, 787);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 99: 
StringReader stringReader = new StringReader("null");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 39, 22);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 100: 
StringReader stringReader = new StringReader("throw");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 81, (-963));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 101: 
StringReader stringReader = new StringReader("\"try\"");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 73, 34);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 102: 
StringReader stringReader = new StringReader("true");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 98, 98);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 103: 
StringReader stringReader = new StringReader("const");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 48, 48);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 104: 
StringReader stringReader = new StringReader("\"boolean\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaCharStream.ReadByte();
javaParserTokenManager.getNextToken();
Test 105: 
StringReader stringReader = new StringReader("sXjxoO");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 27, 27);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.jjround = (-1);
javaParserTokenManager.getNextToken();
Test 106: 
byte[] byteArray = new byte[4];
byteArray[0] = (byte) (-97);
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, (byte) (-97), 31, (byte) (-97));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line -97, column 31.  Encountered: \"\\ufffd\" (65533), after : \"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 107: 
StringReader stringReader = new StringReader("\"break\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 34, 787);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 108: 
StringReader stringReader = new StringReader("uv8l]QIu+v:");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaCharStream.ReadByte();
javaParserTokenManager.getNextToken();
Test 109: 
byte[] byteArray = new byte[6];
byteArray[1] = (byte) (-35);
byteArray[0] = (byte)53;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, (byte) (-97), (byte) (-35), (byte)0);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 110: 
byte[] byteArray = new byte[9];
byteArray[0] = (byte)106;
byteArray[1] = (byte)49;
byteArray[2] = (byte) (-38);
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, 596, (-2421), (byte)26);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 111: 
byte[] byteArray = new byte[9];
byteArray[0] = (byte)106;
byteArray[1] = (byte)49;
byteArray[2] = (byte) (-38);
byteArray[3] = (byte) (-105);
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, 596, (-2421), (byte)26);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 112: 
StringReader stringReader = new StringReader("^|)");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 0, 8, 52);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.SwitchTo(2);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 0, column 11.  Encountered: <EOF> after : \"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 113: 
PipedInputStream pipedInputStream = new PipedInputStream();
JavaCharStream javaCharStream = new JavaCharStream(pipedInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
// Undeclared exception!
try { 
  javaParserTokenManager.SwitchTo(119);
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Error: Ignoring invalid lexical state : 119. State unchanged.
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 114: 
PipedInputStream pipedInputStream = new PipedInputStream();
JavaCharStream javaCharStream = new JavaCharStream(pipedInputStream, 13, 13);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
// Undeclared exception!
try { 
  javaParserTokenManager.SwitchTo((-1));
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Error: Ignoring invalid lexical state : -1. State unchanged.
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 115: 
StringReader stringReader = new StringReader("umv8l],QIu*+v:");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 80, 46);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.curLexState = 80;
javaParserTokenManager.getNextToken();
Test 116: 
StringReader stringReader = new StringReader("^|)");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
Token.GTToken token_GTToken = new Token.GTToken();
javaParserTokenManager.SkipLexicalActions(token_GTToken);
Test 117: 
StringReader stringReader = new StringReader("^|)");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2048, 126);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.ReInit(javaCharStream);
Test 118: 
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager((JavaCharStream) null);
javaParserTokenManager.MoreLexicalActions();
Test 119: 
StringReader stringReader = new StringReader("V|,jhno3A7`aB%lp");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
Token nextToken = javaParserTokenManager.getNextToken();
javaParserTokenManager.TokenLexicalActions(nextToken);

* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 62%
* Total number of goals: 1707
* Number of covered goals: 1054
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 55%
* Total number of goals: 981
* Number of covered goals: 535
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 50%
* Total number of goals: 4
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 11
* Number of covered goals: 11
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 62%
* Total number of goals: 1707
* Number of covered goals: 1054
* Generated 120 tests with total length 601
* Resulting test suite's coverage: 66% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 18%
* Compiling and checking tests
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager((JavaCharStream) null);
javaParserTokenManager.MoreLexicalActions();

** It was a parseable test case! 
refined test name is: testMoreLexicalActionsAdvancesToWSToken
* Compiling Tests
refined test name is: testMoreLexicalActionsSetsLexicalStateToWS
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:18:15.923 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar5851354793907637961.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:18:15.940 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5851354793907637961.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:18:15.996 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar5851354793907637961.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:18:15.997 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5851354793907637961.jar
[MASTER] 18:18:19.104 [logback-1] WARN  TimeController - Already entered in phase: INLINING. This will mess up the timing calculations.
* test suite isTestSuite: 124
Test 0: 
StringReader stringReader = new StringReader("NcAxw&GXks@");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-572), (-572));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 1: 
StringReader stringReader = new StringReader("^|)");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2048, 126);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.ReInit(javaCharStream);
Test 2: 
StringReader stringReader = new StringReader("jO!b-9;k+9p~1i'9(H ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 95, (-1426));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 3: 
StringReader stringReader = new StringReader("NvAxw&GXks@");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 1);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 1, column 12.  Encountered: <EOF> after : \"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 4: 
StringReader stringReader = new StringReader("NcAxw&GXks@");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-572), (-572));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
MockPrintStream mockPrintStream = new MockPrintStream(javaParserTokenManager.debugStream, false);
javaParserTokenManager.setDebugStream(mockPrintStream);
Test 5: 
StringReader stringReader = new StringReader("$^{#-yOp5%_d");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-201), (-201));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line -201, column -198.  Encountered: \"#\" (35), after : \"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 6: 
StringReader stringReader = new StringReader("\"boolean\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaCharStream.ReadByte();
javaParserTokenManager.getNextToken();
Test 7: 
StringReader stringReader = new StringReader("natiZe");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 8: 
StringReader stringReader = new StringReader("final");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 0, 8, 0);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 9: 
StringReader stringReader = new StringReader("|.tR/*>@VW/<^");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 35, 35);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 10: 
StringReader stringReader = new StringReader("k=wdQg'dUra1Yb\"qN");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 62, 62);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 11: 
StringReader stringReader = new StringReader("\"break\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 34, 787);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 12: 
StringReader stringReader = new StringReader("%");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 13: 
StringReader stringReader = new StringReader("^'e&9U}{wH.'b@_");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 43, (-549));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 43, column -546.  Encountered: \"&\" (38), after : \"\\'e\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 14: 
StringReader stringReader = new StringReader("(6;:4<k/[cY3Y%=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 13, (-1288));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 15: 
StringReader stringReader = new StringReader("^|)");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2048, 126);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 16: 
StringReader stringReader = new StringReader("umv8l],QIu*+v:");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 80, 46);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 17: 
StringReader stringReader = new StringReader("K+3rieRSSY<h/Zu");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 18: 
StringReader stringReader = new StringReader("d0kum>h+(Rz.tl/");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1224, 1224);
javaCharStream.readChar();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 19: 
StringReader stringReader = new StringReader("1/Q!9u5a8y)'vNk");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 20: 
StringReader stringReader = new StringReader("X2.jDp2{4C#B#MROjm");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2242, 163);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 21: 
StringReader stringReader = new StringReader("47a");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 98, 98, 98);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 22: 
StringReader stringReader = new StringReader("WE:6 l");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (byte)53, 26);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 23: 
StringReader stringReader = new StringReader("7b%*2- |\"Ae");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (byte) (-12), 13);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 24: 
StringReader stringReader = new StringReader("#8zd&UG=M");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 34, (-71));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
stringReader.read();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 25: 
StringReader stringReader = new StringReader("#8-;d&UG=M");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 34, (-71));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
stringReader.read();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 26: 
StringReader stringReader = new StringReader("d0kum>h+(Rz.tl/");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1224, 108);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaCharStream.BeginToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 27: 
StringReader stringReader = new StringReader("khlu`,.?(dX<iWFzA0!");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 4976, 4976);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaCharStream.BeginToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 28: 
StringReader stringReader = new StringReader("]A@&o<InReRX?5UO`iO");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 29: 
StringReader stringReader = new StringReader("BZp6<Y+");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-1093), 0);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 30: 
StringReader stringReader = new StringReader("C1d6fEAGt/SgT<8S.\"6");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-159), 73);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 31: 
StringReader stringReader = new StringReader("<DIGIT>");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-2279), 50);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 32: 
StringReader stringReader = new StringReader("Et");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1261, 1261, 1261);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 33: 
StringReader stringReader = new StringReader(">HjU:8JG+L>'");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-1201), 28);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 34: 
StringReader stringReader = new StringReader("PhL/JEk=$G-CZ<$/");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 103, 32);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 35: 
StringReader stringReader = new StringReader("LsNAZFC=>");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 22, (-1));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 36: 
StringReader stringReader = new StringReader("Mm8jhEnx3A7`aB%l");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 37: 
StringReader stringReader = new StringReader("Q/RC");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-3593), (-2508));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 38: 
StringReader stringReader = new StringReader("TVvjng6`q/4");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 43, (-751));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 43, column -744.  Encountered: \"`\" (96), after : \"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 39: 
StringReader stringReader = new StringReader("V|,jh7no3A7`aB%lp");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 40: 
StringReader stringReader = new StringReader("X2.jDp2{4C#B#MROjm");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 22, 98);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 41: 
StringReader stringReader = new StringReader("AYOoZS-V#`O7i?3Hk");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1935, 65);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 42: 
StringReader stringReader = new StringReader("Z]");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 43: 
StringReader stringReader = new StringReader("m|[YGdJ~'?<YIVNb$v");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 44: 
StringReader stringReader = new StringReader("8f}_mL;mcP I~)~1y!");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 108, 108);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 45: 
StringReader stringReader = new StringReader("Invalid escape character at line ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 22, 58);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 46: 
StringReader stringReader = new StringReader("Cg%:'y>,{hRMT");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 67, (-1041), 67);
javaCharStream.BeginToken();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 47: 
StringReader stringReader = new StringReader("]iTjg7{{8uu4s7|$]?|");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 48: 
StringReader stringReader = new StringReader("khlu`,.?(dX<iWFzA0!");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 4976, 4976);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
stringReader.read();
stringReader.read();
javaParserTokenManager.getNextToken();
Test 49: 
StringReader stringReader = new StringReader("const");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1935, 1935);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 50: 
StringReader stringReader = new StringReader("x|3pE!.}j(p2tc");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1369, (-2279));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 51: 
StringReader stringReader = new StringReader("qA7[2{M^X ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 98, 47);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 52: 
StringReader stringReader = new StringReader("s|PuFf)%{[~Dq%");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 53: 
StringReader stringReader = new StringReader("|.tR/*>@VW/<^");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
char[] charArray = new char[2];
stringReader.read(charArray);
javaParserTokenManager.getNextToken();
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 1, column 12.  Encountered: <EOF> after : \"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 54: 
StringReader stringReader = new StringReader("NvAxw&GXks@");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaCharStream.ReadByte();
javaParserTokenManager.getNextToken();
Test 55: 
StringReader stringReader = new StringReader("y}=a6#X");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 56: 
StringReader stringReader = new StringReader("nv8~Iq:ardWDe*98*");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 124, (-116));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 57: 
StringReader stringReader = new StringReader("t2CG.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-1245), 1261, 332);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 58: 
StringReader stringReader = new StringReader("cNhAUB<4");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 22, (byte)20);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 59: 
StringReader stringReader = new StringReader("^69=(OMNkL#|A$8");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 930, 0);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 60: 
StringReader stringReader = new StringReader("uv8l]QIu+v:");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaCharStream.ReadByte();
javaParserTokenManager.getNextToken();
Test 61: 
StringReader stringReader = new StringReader("Cg%:'y>,{hRMT");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 21, 105, 121);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 62: 
StringReader stringReader = new StringReader("^<_@LaKHa-R/7P`wc");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-549), 84);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 63: 
StringReader stringReader = new StringReader("!=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 64: 
StringReader stringReader = new StringReader("<CHARACTER_LITERAL>");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 52, 3782, 1832);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 65: 
StringReader stringReader = new StringReader("</u>F,H`/;:RMPp");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 66: 
StringReader stringReader = new StringReader("<INTEGER_LITERAL>");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 37, 37);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 67: 
StringReader stringReader = new StringReader("G!LN9-");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 66, 66);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 68: 
StringReader stringReader = new StringReader("e+MG}?lu6=Ix&tq,m");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 56, 56);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 69: 
StringReader stringReader = new StringReader("8f}_mL;mcP I~)~1y!");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 46, 24);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
char[] charArray = new char[8];
stringReader.read(charArray);
javaParserTokenManager.getNextToken();
Test 70: 
StringReader stringReader = new StringReader("nQ8~Iq:ardWkDe$98*");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 0, 98);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 71: 
StringReader stringReader = new StringReader("AYOoZS-V#`O7i?3Hk");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 72: 
StringReader stringReader = new StringReader("cpWK8&WuoS");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 20, 103);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 73: 
StringReader stringReader = new StringReader("ebLM}i");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 66, 66);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 74: 
StringReader stringReader = new StringReader("fp]\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
stringReader.read();
javaParserTokenManager.getNextToken();
Test 75: 
StringReader stringReader = new StringReader(".`d`f{MP,`@K");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 98, 98, 98);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 76: 
StringReader stringReader = new StringReader("default");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2834, 2834);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 77: 
StringReader stringReader = new StringReader("default");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (byte)33, (-201));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
stringReader.read();
javaParserTokenManager.getNextToken();
Test 78: 
StringReader stringReader = new StringReader("ONd>j");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 79: 
StringReader stringReader = new StringReader("class");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 80: 
StringReader stringReader = new StringReader("implements");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (byte) (-35), 1070, 1605);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 81: 
StringReader stringReader = new StringReader("final");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 0, 0, 0);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 82: 
StringReader stringReader = new StringReader("\"break\"");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 34, 787);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 83: 
StringReader stringReader = new StringReader("nx!{23uF6gXlT6\"M8'");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 13, (-121));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 84: 
StringReader stringReader = new StringReader("byte");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 85: 
StringReader stringReader = new StringReader("dzflt");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2834, 2834);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 86: 
StringReader stringReader = new StringReader("==");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 87: 
StringReader stringReader = new StringReader(">=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 26, 0, 0);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 88: 
StringReader stringReader = new StringReader(">>=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 36, 98);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 89: 
StringReader stringReader = new StringReader("double");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (byte)94, (-1919));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 90: 
StringReader stringReader = new StringReader("chAUB<4");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 91: 
StringReader stringReader = new StringReader("void");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1094, 1094, 1094);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 92: 
StringReader stringReader = new StringReader("throw");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 81, (-963));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 93: 
StringReader stringReader = new StringReader("assert");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 94: 
StringReader stringReader = new StringReader("asw5ser");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 95: 
StringReader stringReader = new StringReader("\"try\"");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 73, 34);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 96: 
StringReader stringReader = new StringReader("protected");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 97: 
StringReader stringReader = new StringReader("true");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 98, 98);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 98: 
StringReader stringReader = new StringReader("null");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 39, 22);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 99: 
StringReader stringReader = new StringReader("const");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 48, 48);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 100: 
StringReader stringReader = new StringReader("super");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 19, (-191));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 101: 
StringReader stringReader = new StringReader("sXjxoO");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 27, 27);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.jjround = (-1);
javaParserTokenManager.getNextToken();
Test 102: 
StringReader stringReader = new StringReader("&/ J|<`A9");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 108, (byte)0);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 103: 
StringReader stringReader = new StringReader("'/olumn ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 1, column 3.  Encountered: \"o\" (111), after : \"\\'/\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 104: 
StringReader stringReader = new StringReader("\"/*\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 105: 
byte[] byteArray = new byte[6];
byteArray[1] = (byte) (-35);
byteArray[0] = (byte)53;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, (byte) (-97), (byte) (-35), (byte)0);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 106: 
StringReader stringReader = new StringReader("\"\n\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 1, column 2.  Encountered: \"\\n\" (10), after : \"\\\"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 107: 
StringReader stringReader = new StringReader("uv8l]QIu+v:");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaCharStream.ReadByte();
javaParserTokenManager.getNextToken();
Test 108: 
byte[] byteArray = new byte[4];
byteArray[0] = (byte) (-97);
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, (byte) (-97), 31, (byte) (-97));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line -97, column 31.  Encountered: \"\\ufffd\" (65533), after : \"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 109: 
byte[] byteArray = new byte[9];
byteArray[0] = (byte)106;
byteArray[1] = (byte)49;
byteArray[2] = (byte) (-38);
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, 596, (-2421), (byte)26);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 110: 
byte[] byteArray = new byte[9];
byteArray[0] = (byte)106;
byteArray[1] = (byte)49;
byteArray[2] = (byte) (-38);
byteArray[3] = (byte) (-105);
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, 596, (-2421), (byte)26);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 111: 
StringReader stringReader = new StringReader("^|)");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 0, 8, 52);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.SwitchTo(2);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 0, column 11.  Encountered: <EOF> after : \"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 112: 
StringReader stringReader = new StringReader("umv8l],QIu*+v:");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 80, 46);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.curLexState = 80;
javaParserTokenManager.getNextToken();
Test 113: 
byte[] byteArray = new byte[1];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, 257, 94, 257);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 257, column 95.  Encountered: <EOF> after : \"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 114: 
StringReader stringReader = new StringReader("Ji'Wm");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 98, 51);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 98, column 56.  Encountered: <EOF> after : \"\\'Wm\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 115: 
StringReader stringReader = new StringReader("^|)");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
Token.GTToken token_GTToken = new Token.GTToken();
javaParserTokenManager.SkipLexicalActions(token_GTToken);
Test 116: 
StringReader stringReader = new StringReader("O3f1 [kkxhgE%L)5X$");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-201), (-201));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 117: 
PipedInputStream pipedInputStream = new PipedInputStream();
JavaCharStream javaCharStream = new JavaCharStream(pipedInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
// Undeclared exception!
try { 
  javaParserTokenManager.SwitchTo(119);
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Error: Ignoring invalid lexical state : 119. State unchanged.
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 118: 
PipedInputStream pipedInputStream = new PipedInputStream();
JavaCharStream javaCharStream = new JavaCharStream(pipedInputStream, 13, 13);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
// Undeclared exception!
try { 
  javaParserTokenManager.SwitchTo((-1));
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Error: Ignoring invalid lexical state : -1. State unchanged.
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 119: 
StringReader stringReader = new StringReader("FxX1WR/)'V:");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.jjFillToken();
Test 120: 
StringReader stringReader = new StringReader("8f}_mL;mcP I~)~1y!");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 48, 3);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.ReInit(javaCharStream, 3);
Test 121: 
StringReader stringReader = new StringReader("jO!b-9;k+9p~1i'9(H ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 122: 
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager((JavaCharStream) null);
javaParserTokenManager.MoreLexicalActions();
Test 123: 
StringReader stringReader = new StringReader("V|,jhno3A7`aB%lp");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
Token nextToken = javaParserTokenManager.getNextToken();
javaParserTokenManager.TokenLexicalActions(nextToken);

* Minimizing test suite
[MASTER] 18:19:09.731 [logback-1] WARN  TimeController - Already entered in phase: MINIMIZATION. This will mess up the timing calculations.
* test suite isTestSuite: 120
Test 0: 
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager((JavaCharStream) null);
javaParserTokenManager.MoreLexicalActions();
Test 1: 
StringReader stringReader = new StringReader("8f}_mL;mcP I~)~1y!");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 48, 3);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.ReInit(javaCharStream, 3);
Test 2: 
StringReader stringReader = new StringReader(".`d`f{MP,`@K");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 98, 98, 98);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 3: 
StringReader stringReader = new StringReader("1/Q!9u5a8y)'vNk");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 4: 
StringReader stringReader = new StringReader("NvAxw&GXks@");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 1);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 1, column 12.  Encountered: <EOF> after : \"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 5: 
StringReader stringReader = new StringReader("NcAxw&GXks@");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-572), (-572));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
MockPrintStream mockPrintStream = new MockPrintStream(javaParserTokenManager.debugStream, false);
javaParserTokenManager.setDebugStream(mockPrintStream);
Test 6: 
StringReader stringReader = new StringReader("(6;:4<k/[cY3Y%=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 13, (-1288));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 7: 
StringReader stringReader = new StringReader("assert");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 8: 
StringReader stringReader = new StringReader("asw5ser");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 9: 
StringReader stringReader = new StringReader("natiZe");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 10: 
StringReader stringReader = new StringReader("final");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 0, 8, 0);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 11: 
StringReader stringReader = new StringReader("&/ J|<`A9");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 108, (byte)0);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 12: 
StringReader stringReader = new StringReader("dzflt");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2834, 2834);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 13: 
StringReader stringReader = new StringReader("k=wdQg'dUra1Yb\"qN");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 62, 62);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 14: 
StringReader stringReader = new StringReader("!=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 15: 
StringReader stringReader = new StringReader("\"/*\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 16: 
StringReader stringReader = new StringReader("$^{#-yOp5%_d");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-201), (-201));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line -201, column -198.  Encountered: \"#\" (35), after : \"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 17: 
StringReader stringReader = new StringReader("%");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 18: 
StringReader stringReader = new StringReader("'/olumn ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 1, column 3.  Encountered: \"o\" (111), after : \"\\'/\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 19: 
StringReader stringReader = new StringReader("^|)");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2048, 126);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 20: 
StringReader stringReader = new StringReader("umv8l],QIu*+v:");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 80, 46);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 21: 
StringReader stringReader = new StringReader("e+MG}?lu6=Ix&tq,m");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 56, 56);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 22: 
StringReader stringReader = new StringReader("AYOoZS-V#`O7i?3Hk");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 23: 
StringReader stringReader = new StringReader("d0kum>h+(Rz.tl/");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1224, 1224);
javaCharStream.readChar();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 24: 
StringReader stringReader = new StringReader("X2.jDp2{4C#B#MROjm");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2242, 163);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 25: 
StringReader stringReader = new StringReader("K+3rieRSSY<h/Zu");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 26: 
StringReader stringReader = new StringReader("47a");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 98, 98, 98);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 27: 
StringReader stringReader = new StringReader("WE:6 l");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (byte)53, 26);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 28: 
StringReader stringReader = new StringReader("7b%*2- |\"Ae");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (byte) (-12), 13);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 29: 
StringReader stringReader = new StringReader("8f}_mL;mcP I~)~1y!");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 108, 108);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 30: 
StringReader stringReader = new StringReader("jO!b-9;k+9p~1i'9(H ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 95, (-1426));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 31: 
StringReader stringReader = new StringReader("#8-;d&UG=M");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 34, (-71));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
stringReader.read();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 32: 
StringReader stringReader = new StringReader("<CHARACTER_LITERAL>");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 52, 3782, 1832);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 33: 
StringReader stringReader = new StringReader(">=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 26, 0, 0);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 34: 
StringReader stringReader = new StringReader("khlu`,.?(dX<iWFzA0!");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 4976, 4976);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaCharStream.BeginToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 35: 
StringReader stringReader = new StringReader("]A@&o<InReRX?5UO`iO");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 36: 
StringReader stringReader = new StringReader("BZp6<Y+");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-1093), 0);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 37: 
StringReader stringReader = new StringReader("Cg%:'y>,{hRMT");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 21, 105, 121);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 38: 
StringReader stringReader = new StringReader("<DIGIT>");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-2279), 50);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 39: 
StringReader stringReader = new StringReader("Et");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1261, 1261, 1261);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 40: 
StringReader stringReader = new StringReader("FxX1WR/)'V:");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.jjFillToken();
Test 41: 
StringReader stringReader = new StringReader("G!LN9-");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 66, 66);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 42: 
StringReader stringReader = new StringReader(">HjU:8JG+L>'");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-1201), 28);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 43: 
StringReader stringReader = new StringReader("Invalid escape character at line ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 22, 58);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 44: 
StringReader stringReader = new StringReader("Ji'Wm");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 98, 51);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 98, column 56.  Encountered: <EOF> after : \"\\'Wm\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 45: 
StringReader stringReader = new StringReader("LsNAZFC=>");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 22, (-1));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 46: 
StringReader stringReader = new StringReader("Mm8jhEnx3A7`aB%l");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 47: 
StringReader stringReader = new StringReader("NcAxw&GXks@");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-572), (-572));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 48: 
StringReader stringReader = new StringReader("O3f1 [kkxhgE%L)5X$");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-201), (-201));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 49: 
StringReader stringReader = new StringReader("PhL/JEk=$G-CZ<$/");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 103, 32);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 50: 
StringReader stringReader = new StringReader("Q/RC");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-3593), (-2508));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 51: 
StringReader stringReader = new StringReader("C1d6fEAGt/SgT<8S.\"6");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-159), 73);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 52: 
StringReader stringReader = new StringReader("TVvjng6`q/4");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 43, (-751));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 43, column -744.  Encountered: \"`\" (96), after : \"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 53: 
StringReader stringReader = new StringReader("#8zd&UG=M");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 34, (-71));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
stringReader.read();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 54: 
StringReader stringReader = new StringReader("V|,jh7no3A7`aB%lp");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 55: 
StringReader stringReader = new StringReader("X2.jDp2{4C#B#MROjm");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 22, 98);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 56: 
StringReader stringReader = new StringReader("AYOoZS-V#`O7i?3Hk");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1935, 65);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 57: 
StringReader stringReader = new StringReader("Z]");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 58: 
StringReader stringReader = new StringReader("chAUB<4");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 59: 
StringReader stringReader = new StringReader("Cg%:'y>,{hRMT");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 67, (-1041), 67);
javaCharStream.BeginToken();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 60: 
StringReader stringReader = new StringReader("d0kum>h+(Rz.tl/");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1224, 108);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaCharStream.BeginToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 61: 
StringReader stringReader = new StringReader("implements");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (byte) (-35), 1070, 1605);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 62: 
StringReader stringReader = new StringReader("khlu`,.?(dX<iWFzA0!");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 4976, 4976);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
stringReader.read();
stringReader.read();
javaParserTokenManager.getNextToken();
Test 63: 
StringReader stringReader = new StringReader("const");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1935, 1935);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 64: 
StringReader stringReader = new StringReader("protected");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 65: 
StringReader stringReader = new StringReader("qA7[2{M^X ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 98, 47);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 66: 
StringReader stringReader = new StringReader("super");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 19, (-191));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 67: 
StringReader stringReader = new StringReader("t2CG.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-1245), 1261, 332);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 68: 
StringReader stringReader = new StringReader("void");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1094, 1094, 1094);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 69: 
StringReader stringReader = new StringReader("x|3pE!.}j(p2tc");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1369, (-2279));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 70: 
StringReader stringReader = new StringReader("y}=a6#X");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 71: 
StringReader stringReader = new StringReader("nv8~Iq:ardWDe*98*");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 124, (-116));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 72: 
byte[] byteArray = new byte[1];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, 257, 94, 257);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 257, column 95.  Encountered: <EOF> after : \"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 73: 
StringReader stringReader = new StringReader("^'e&9U}{wH.'b@_");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 43, (-549));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 43, column -546.  Encountered: \"&\" (38), after : \"\\'e\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 74: 
StringReader stringReader = new StringReader("|.tR/*>@VW/<^");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 35, 35);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 75: 
StringReader stringReader = new StringReader("cNhAUB<4");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 22, (byte)20);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 76: 
StringReader stringReader = new StringReader("^69=(OMNkL#|A$8");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 930, 0);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 77: 
StringReader stringReader = new StringReader("uv8l]QIu+v:");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaCharStream.ReadByte();
javaParserTokenManager.getNextToken();
Test 78: 
StringReader stringReader = new StringReader("^<_@LaKHa-R/7P`wc");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-549), 84);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 79: 
StringReader stringReader = new StringReader(">>=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 36, 98);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 80: 
StringReader stringReader = new StringReader("NvAxw&GXks@");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaCharStream.ReadByte();
javaParserTokenManager.getNextToken();
Test 81: 
StringReader stringReader = new StringReader("</u>F,H`/;:RMPp");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 82: 
StringReader stringReader = new StringReader("<INTEGER_LITERAL>");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 37, 37);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 83: 
StringReader stringReader = new StringReader("8f}_mL;mcP I~)~1y!");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 46, 24);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
char[] charArray = new char[8];
stringReader.read(charArray);
javaParserTokenManager.getNextToken();
Test 84: 
StringReader stringReader = new StringReader("nQ8~Iq:ardWkDe$98*");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 0, 98);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 85: 
StringReader stringReader = new StringReader("]iTjg7{{8uu4s7|$]?|");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 86: 
StringReader stringReader = new StringReader("cpWK8&WuoS");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 20, 103);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 87: 
StringReader stringReader = new StringReader("m|[YGdJ~'?<YIVNb$v");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 88: 
StringReader stringReader = new StringReader("fp]\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
stringReader.read();
javaParserTokenManager.getNextToken();
Test 89: 
StringReader stringReader = new StringReader("default");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2834, 2834);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 90: 
StringReader stringReader = new StringReader("default");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (byte)33, (-201));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
stringReader.read();
javaParserTokenManager.getNextToken();
Test 91: 
StringReader stringReader = new StringReader("ONd>j");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 92: 
StringReader stringReader = new StringReader("class");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 93: 
StringReader stringReader = new StringReader("final");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 0, 0, 0);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 94: 
StringReader stringReader = new StringReader("nx!{23uF6gXlT6\"M8'");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 13, (-121));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 95: 
StringReader stringReader = new StringReader("byte");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 96: 
StringReader stringReader = new StringReader("|.tR/*>@VW/<^");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
char[] charArray = new char[2];
stringReader.read(charArray);
javaParserTokenManager.getNextToken();
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 1, column 12.  Encountered: <EOF> after : \"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 97: 
StringReader stringReader = new StringReader("==");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 98: 
StringReader stringReader = new StringReader("double");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (byte)94, (-1919));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 99: 
StringReader stringReader = new StringReader("\"break\"");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 34, 787);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 100: 
StringReader stringReader = new StringReader("null");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 39, 22);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 101: 
StringReader stringReader = new StringReader("throw");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 81, (-963));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 102: 
StringReader stringReader = new StringReader("\"try\"");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 73, 34);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 103: 
StringReader stringReader = new StringReader("true");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 98, 98);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 104: 
StringReader stringReader = new StringReader("const");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 48, 48);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 105: 
StringReader stringReader = new StringReader("\"boolean\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaCharStream.ReadByte();
javaParserTokenManager.getNextToken();
Test 106: 
StringReader stringReader = new StringReader("sXjxoO");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 27, 27);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.jjround = (-1);
javaParserTokenManager.getNextToken();
Test 107: 
byte[] byteArray = new byte[4];
byteArray[0] = (byte) (-97);
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, (byte) (-97), 31, (byte) (-97));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line -97, column 31.  Encountered: \"\\ufffd\" (65533), after : \"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 108: 
StringReader stringReader = new StringReader("\"break\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 34, 787);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 109: 
StringReader stringReader = new StringReader("uv8l]QIu+v:");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaCharStream.ReadByte();
javaParserTokenManager.getNextToken();
Test 110: 
byte[] byteArray = new byte[6];
byteArray[1] = (byte) (-35);
byteArray[0] = (byte)53;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, (byte) (-97), (byte) (-35), (byte)0);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 111: 
byte[] byteArray = new byte[9];
byteArray[0] = (byte)106;
byteArray[1] = (byte)49;
byteArray[2] = (byte) (-38);
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, 596, (-2421), (byte)26);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 112: 
byte[] byteArray = new byte[9];
byteArray[0] = (byte)106;
byteArray[1] = (byte)49;
byteArray[2] = (byte) (-38);
byteArray[3] = (byte) (-105);
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, 596, (-2421), (byte)26);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 113: 
StringReader stringReader = new StringReader("^|)");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 0, 8, 52);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.SwitchTo(2);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 0, column 11.  Encountered: <EOF> after : \"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 114: 
PipedInputStream pipedInputStream = new PipedInputStream();
JavaCharStream javaCharStream = new JavaCharStream(pipedInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
// Undeclared exception!
try { 
  javaParserTokenManager.SwitchTo(119);
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Error: Ignoring invalid lexical state : 119. State unchanged.
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 115: 
PipedInputStream pipedInputStream = new PipedInputStream();
JavaCharStream javaCharStream = new JavaCharStream(pipedInputStream, 13, 13);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
// Undeclared exception!
try { 
  javaParserTokenManager.SwitchTo((-1));
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Error: Ignoring invalid lexical state : -1. State unchanged.
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 116: 
StringReader stringReader = new StringReader("umv8l],QIu*+v:");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 80, 46);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.curLexState = 80;
javaParserTokenManager.getNextToken();
Test 117: 
StringReader stringReader = new StringReader("^|)");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
Token.GTToken token_GTToken = new Token.GTToken();
javaParserTokenManager.SkipLexicalActions(token_GTToken);
Test 118: 
StringReader stringReader = new StringReader("^|)");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2048, 126);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.ReInit(javaCharStream);
Test 119: 
StringReader stringReader = new StringReader("V|,jhno3A7`aB%lp");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
Token nextToken = javaParserTokenManager.getNextToken();
javaParserTokenManager.TokenLexicalActions(nextToken);

* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 62%
* Total number of goals: 1707
* Number of covered goals: 1054
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 55%
* Total number of goals: 981
* Number of covered goals: 535
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 50%
* Total number of goals: 4
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 11
* Number of covered goals: 11
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 62%
* Total number of goals: 1707
* Number of covered goals: 1054
* Generated 120 tests with total length 601
[MASTER] 18:19:12.570 [logback-1] WARN  TimeController - Already entered in phase: COVERAGE_ANALYSIS. This will mess up the timing calculations.
* Resulting test suite's coverage: 66% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 21%
* Compiling and checking tests
Going to execute: removeTestsThatDoNotCompile
[MASTER] 18:20:08.898 [logback-1] WARN  TimeController - Already entered in phase: ASSERTION_GENERATION. This will mess up the timing calculations.
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:20:15.244 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar5851354793907637961.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:20:15.245 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5851354793907637961.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:20:15.297 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar5851354793907637961.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:20:15.298 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5851354793907637961.jar
* Writing tests to file
[MASTER] 18:20:15.302 [logback-1] WARN  TimeController - Already entered in phase: JUNIT_CHECK. This will mess up the timing calculations.
* Writing JUnit test case 'JavaParserTokenManager_ESTest' to evosuite-tests
** Write a test suite: 0 called: 0 to improve: false
* Writing JUnit test case 'JavaParserTokenManager_Original_ESTest' to evosuite-tests
** Write a test suite: 0 called: 0 to improve: false
* Done!

* Computation finished
