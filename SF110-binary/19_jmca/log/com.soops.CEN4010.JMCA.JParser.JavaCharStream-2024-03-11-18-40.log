* EvoSuite 1.0.0-SNAPSHOT
* Going to generate test cases for class: com.soops.CEN4010.JMCA.JParser.JavaCharStream
* Starting Client-0
* Properties loaded from /home/roham/Results-Utestgen/dataset/SF110-new-res/19_jmca/evosuite-files/evosuite.properties
* Connecting to master process on port 15862
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class com.soops.CEN4010.JMCA.JParser.JavaCharStream
* Test criteria:
  - Branch Coverage
  - Line Coverage
  - Method-Output Coverage
  - Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 738
* Using seed 1710182423479
[Progress:>                             0%] [Cov:>                                  0%]* Starting evolution
* Initial Number of Goals in DynaMOSA = 297 / 738
[Progress:>                             0%] [Cov:================>                  47%][Progress:>                             0%] [Cov:===================>               56%][Progress:>                             1%] [Cov:====================>              59%][Progress:>                             1%] [Cov:======================>            63%][Progress:>                             1%] [Cov:======================>            65%][Progress:>                             1%] [Cov:=======================>           66%][Progress:>                             1%] [Cov:=======================>           67%][Progress:>                             1%] [Cov:========================>          70%][Progress:=>                            4%] [Cov:========================>          71%][Progress:=>                            4%] [Cov:=========================>         73%][Progress:=>                            4%] [Cov:==========================>        75%][Progress:=>                            4%] [Cov:==========================>        76%][Progress:=>                            4%] [Cov:==========================>        77%][Progress:=>                            4%] [Cov:==========================>        77%][Progress:=>                            4%] [Cov:===========================>       78%][Progress:==>                           7%] [Cov:===========================>       78%][Progress:==>                           7%] [Cov:===========================>       79%][Progress:==>                           9%] [Cov:===========================>       79%][Progress:==>                           9%] [Cov:===========================>       79%][Progress:===>                          10%] [Cov:===========================>       79%][Progress:===>                          10%] [Cov:============================>      80%][Progress:===>                          10%] [Cov:============================>      81%][Progress:===>                          12%] [Cov:=============================>     83%][Progress:===>                          12%] [Cov:=============================>     83%][Progress:===>                          12%] [Cov:=============================>     83%][Progress:===>                          12%] [Cov:=============================>     84%][Progress:===>                          13%] [Cov:=============================>     85%][Progress:====>                         15%] [Cov:==============================>    86%][Progress:====>                         15%] [Cov:==============================>    86%][Progress:====>                         15%] [Cov:==============================>    86%][Progress:====>                         15%] [Cov:==============================>    86%][Progress:====>                         15%] [Cov:==============================>    86%][Progress:=====>                        18%] [Cov:==============================>    86%][Progress:======>                       20%] [Cov:==============================>    86%][Progress:======>                       21%] [Cov:==============================>    86%][Progress:======>                       21%] [Cov:==============================>    86%][Progress:======>                       23%] [Cov:==============================>    86%][Progress:======>                       23%] [Cov:==============================>    86%][Progress:=======>                      26%] [Cov:==============================>    86%][Progress:=======>                      26%] [Cov:==============================>    86%][Progress:=======>                      26%] [Cov:==============================>    86%][Progress:========>                     28%] [Cov:==============================>    87%][Progress:========>                     28%] [Cov:==============================>    87%][Progress:=========>                    31%] [Cov:==============================>    88%][Progress:=========>                    31%] [Cov:==============================>    88%][Progress:==========>                   36%] [Cov:==============================>    88%][Progress:==========>                   36%] [Cov:==============================>    88%][Progress:==========>                   36%] [Cov:==============================>    88%][Progress:==========>                   36%] [Cov:==============================>    88%][Progress:==========>                   36%] [Cov:==============================>    88%][Progress:===========>                  39%] [Cov:===============================>   89%][Progress:===========>                  39%] [Cov:===============================>   89%][Progress:===========>                  39%] [Cov:===============================>   89%][Progress:===========>                  39%] [Cov:===============================>   89%][Progress:===========>                  39%] [Cov:===============================>   89%][Progress:===========>                  39%] [Cov:===============================>   89%][Progress:===========>                  39%] [Cov:===============================>   89%][Progress:===========>                  39%] [Cov:===============================>   89%][Progress:============>                 42%] [Cov:===============================>   89%][Progress:============>                 42%] [Cov:===============================>   89%][Progress:============>                 42%] [Cov:===============================>   89%][Progress:============>                 42%] [Cov:===============================>   89%][Progress:============>                 42%] [Cov:===============================>   89%][Progress:============>                 42%] [Cov:===============================>   89%][Progress:============>                 42%] [Cov:===============================>   89%][Progress:=============>                45%] [Cov:===============================>   89%][Progress:=============>                45%] [Cov:===============================>   89%][Progress:=============>                45%] [Cov:===============================>   89%][Progress:=============>                45%] [Cov:===============================>   90%][Progress:=============>                45%] [Cov:===============================>   90%][Progress:=============>                45%] [Cov:===============================>   90%][Progress:=============>                45%] [Cov:===============================>   90%][Progress:===============>              50%] [Cov:===============================>   90%][Progress:===============>              50%] [Cov:===============================>   90%][Progress:===============>              50%] [Cov:===============================>   90%][Progress:===============>              50%] [Cov:===============================>   90%][Progress:===============>              50%] [Cov:===============================>   90%][Progress:===============>              53%] [Cov:===============================>   90%][Progress:===============>              53%] [Cov:===============================>   90%][Progress:===============>              53%] [Cov:===============================>   90%][Progress:===============>              53%] [Cov:===============================>   90%][Progress:===============>              53%] [Cov:===============================>   90%][Progress:================>             56%] [Cov:===============================>   90%][Progress:=================>            58%] [Cov:===============================>   90%][Progress:=================>            58%] [Cov:===============================>   90%][Progress:=================>            58%] [Cov:===============================>   90%][Progress:=================>            58%] [Cov:===============================>   90%][Progress:=================>            58%] [Cov:===============================>   90%][Progress:=================>            58%] [Cov:===============================>   90%][Progress:==================>           61%] [Cov:===============================>   90%][Progress:==================>           61%] [Cov:===============================>   90%][Progress:==================>           61%] [Cov:===============================>   90%][Progress:==================>           61%] [Cov:===============================>   90%][Progress:==================>           61%] [Cov:===============================>   90%][Progress:==================>           61%] [Cov:===============================>   90%][Progress:==================>           61%] [Cov:===============================>   90%][Progress:==================>           61%] [Cov:===============================>   91%][Progress:==================>           61%] [Cov:===============================>   91%][Progress:==================>           61%] [Cov:===============================>   91%][Progress:==================>           61%] [Cov:===============================>   91%][Progress:==================>           61%] [Cov:===============================>   91%][Progress:==================>           61%] [Cov:===============================>   91%][Progress:==================>           62%] [Cov:===============================>   91%][Progress:==================>           62%] [Cov:===============================>   91%][Progress:==================>           62%] [Cov:===============================>   91%][Progress:==================>           62%] [Cov:================================>  92%][Progress:==================>           62%] [Cov:================================>  93%][Progress:==================>           62%] [Cov:================================>  93%][Progress:==================>           62%] [Cov:================================>  93%][Progress:===================>          64%] [Cov:================================>  93%][Progress:===================>          64%] [Cov:================================>  93%][Progress:===================>          64%] [Cov:================================>  93%][Progress:====================>         67%] [Cov:================================>  93%][Progress:=====================>        70%] [Cov:================================>  93%][Progress:=====================>        70%] [Cov:================================>  93%][Progress:=====================>        70%] [Cov:================================>  93%][Progress:=====================>        70%] [Cov:================================>  93%][Progress:=====================>        70%] [Cov:================================>  93%][Progress:=====================>        70%] [Cov:================================>  93%][Progress:=====================>        70%] [Cov:================================>  93%][Progress:=====================>        72%] [Cov:================================>  93%][Progress:=====================>        73%] [Cov:================================>  93%][Progress:=====================>        73%] [Cov:================================>  93%][Progress:=====================>        73%] [Cov:================================>  93%][Progress:======================>       75%] [Cov:================================>  93%][Progress:======================>       75%] [Cov:================================>  93%][Progress:======================>       75%] [Cov:================================>  93%][Progress:======================>       75%] [Cov:================================>  93%][Progress:======================>       75%] [Cov:================================>  93%][Progress:======================>       75%] [Cov:================================>  93%][Progress:======================>       76%] [Cov:================================>  93%][Progress:======================>       76%] [Cov:================================>  93%][Progress:======================>       76%] [Cov:================================>  93%][Progress:======================>       76%] [Cov:================================>  93%][Progress:=======================>      78%] [Cov:================================>  93%][Progress:=======================>      78%] [Cov:================================>  93%][Progress:=======================>      78%] [Cov:================================>  93%][Progress:=======================>      78%] [Cov:================================>  93%][Progress:=======================>      78%] [Cov:================================>  93%][Progress:=======================>      78%] [Cov:================================>  93%][Progress:========================>     81%] [Cov:================================>  93%][Progress:========================>     81%] [Cov:================================>  93%][Progress:========================>     81%] [Cov:================================>  93%][Progress:========================>     81%] [Cov:================================>  93%][Progress:========================>     81%] [Cov:================================>  93%][Progress:========================>     81%] [Cov:================================>  93%][Progress:========================>     81%] [Cov:================================>  93%][Progress:========================>     81%] [Cov:================================>  93%][Progress:========================>     81%] [Cov:================================>  93%][Progress:========================>     81%] [Cov:================================>  94%][Progress:========================>     81%] [Cov:================================>  94%][Progress:=========================>    84%] [Cov:================================>  94%][Progress:=========================>    84%] [Cov:================================>  94%][Progress:=========================>    84%] [Cov:=================================> 95%][Progress:==========================>   87%] [Cov:=================================> 95%][Progress:==========================>   89%] [Cov:=================================> 95%][Progress:==========================>   89%] [Cov:=================================> 95%][Progress:==========================>   89%] [Cov:=================================> 95%][Progress:==========================>   89%] [Cov:=================================> 95%][Progress:==========================>   89%] [Cov:=================================> 95%][Progress:===========================>  92%] [Cov:=================================> 95%][Progress:===========================>  92%] [Cov:=================================> 95%][Progress:============================> 94%] [Cov:=================================> 95%][Progress:============================> 95%] [Cov:=================================> 95%][Progress:============================> 95%] [Cov:=================================> 95%][Progress:============================> 95%] [Cov:=================================> 95%][Progress:============================> 95%] [Cov:=================================> 95%][Progress:============================> 95%] [Cov:=================================> 95%][Progress:============================> 95%] [Cov:=================================> 95%][Progress:============================> 95%] [Cov:=================================> 95%][Progress:=============================>97%] [Cov:=================================> 95%][Progress:=============================>97%] [Cov:=================================> 95%][Progress:==============================100%] [Cov:=================================> 95%][Progress:==============================100%] [Cov:=================================> 95%]
* Search finished after 201s and 173 generations, 86385 statements, best individual has fitness: 40.0
* Generated before the refinement 112 tests with total length 302
statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("m1>8@-")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: java.io.FileDescriptor()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.FileDescriptor
statement code is: FileDescriptor fileDescriptor = new FileDescriptor()
statement is: org.evosuite.runtime.mock.java.io.MockFileInputStream(Ljava/io/FileDescriptor;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.io.MockFileInputStream
statement code is: MockFileInputStream mockFileInputStream = new MockFileInputStream(arg0)
statement is: ReInit(Ljava/io/InputStream;II)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: javaCharStream.ReInit((InputStream) arg0, (-1), 1085)
test data is: StringReader stringReader = new StringReader("m1>8@-");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
FileDescriptor fileDescriptor = new FileDescriptor();
MockFileInputStream mockFileInputStream = new MockFileInputStream(fileDescriptor);
javaCharStream.ReInit((InputStream) mockFileInputStream, (-1), 1085);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("m1>8@-");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        FileDescriptor fileDescriptor = new FileDescriptor();
        MockFileInputStream mockFileInputStream = new MockFileInputStream(fileDescriptor);
        javaCharStream.ReInit(((InputStream) (mockFileInputStream)), -1, 1085);
    }
}
statement is: StringReader stringReader = new StringReader("m1>8@-"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: FileDescriptor fileDescriptor = new FileDescriptor(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: MockFileInputStream mockFileInputStream = new MockFileInputStream(fileDescriptor), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.ReInit(((InputStream) (mockFileInputStream)), -1, 1085), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.ReInit(((InputStream) (mockFileInputStream)), -1, 1085) target is: javaCharStream method is: ReInit(InputStream,int,int)
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 2
Matched Method is: ReInit(Ljava/io/InputStream;II)V
i 2 Parameters size() 2 Num of Method Parameters: 3
TestCase is: String string = "m1>8@-";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
FileDescriptor fileDescriptor = new FileDescriptor();
MockFileInputStream mockFileInputStream = new MockFileInputStream(fileDescriptor);
int _int = 1085;
int _int = null;
((JavaCharStream) stringReader).ReInit((InputStream) mockFileInputStream, _int, _int);

statement is: java.io.PipedInputStream()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.PipedInputStream
statement code is: PipedInputStream pipedInputStream = new PipedInputStream()
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("=dW[)|0G4`H{do$")
statement is: ReInit(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: javaCharStream.ReInit((Reader) arg0)
test data is: PipedInputStream pipedInputStream = new PipedInputStream();
JavaCharStream javaCharStream = new JavaCharStream(pipedInputStream);
StringReader stringReader = new StringReader("=dW[)|0G4`H{do$");
javaCharStream.ReInit((Reader) stringReader);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        PipedInputStream pipedInputStream = new PipedInputStream();
        JavaCharStream javaCharStream = new JavaCharStream(pipedInputStream);
        StringReader stringReader = new StringReader("=dW[)|0G4`H{do$");
        javaCharStream.ReInit(((Reader) (stringReader)));
        // Improved test data
        PipedInputStream pipedInputStream = new PipedInputStream();
        JavaCharStream javaCharStream = new JavaCharStream(pipedInputStream);
        StringReader stringReader = new StringReader("=dW[)|0G4`H{do$");
        javaCharStream.ReInit(((Reader) (stringReader)));
        // The above test data is more descriptive and representative of the situation being tested.
        It includes;
        more realistic;
        string that;
        a valid;
        code snippet;
        code and;
        includes a;
        and StringReader;
        simulate the;
        stream used;
        the application;
        test = $missing$;
    }
}
statement is: PipedInputStream pipedInputStream = new PipedInputStream(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(pipedInputStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: StringReader stringReader = new StringReader("=dW[)|0G4`H{do$"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.ReInit(((Reader) (stringReader))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.ReInit(((Reader) (stringReader))) target is: javaCharStream method is: ReInit(Reader)
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 1
Matched Method is: ReInit(Ljava/io/Reader;)V
statement is: // Improved test data
PipedInputStream pipedInputStream = new PipedInputStream(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(pipedInputStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: StringReader stringReader = new StringReader("=dW[)|0G4`H{do$"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.ReInit(((Reader) (stringReader))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.ReInit(((Reader) (stringReader))) target is: javaCharStream method is: ReInit(Reader)
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 6
Matched Method is: ReInit(Ljava/io/Reader;)V
statement is: // The above test data is more descriptive and representative of the situation being tested.
It includes, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: more realistic, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: string that, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: a valid, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: code snippet, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: code and, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: includes a, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: and StringReader, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: simulate the, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: stream used, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: the application, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: test = $missing$, class spoon.support.reflect.code.CtAssignmentImpl
TestCase is: PipedInputStream pipedInputStream = new PipedInputStream();
JavaCharStream javaCharStream = new JavaCharStream(pipedInputStream);
String string = "=dW[)|0G4`H{do$";
StringReader stringReader = new StringReader(string);
javaCharStream.ReInit((Reader) stringReader);
PipedInputStream pipedInputStream = new PipedInputStream();
JavaCharStream javaCharStream = new JavaCharStream(pipedInputStream);
String string = "=dW[)|0G4`H{do$";
StringReader stringReader = new StringReader(string);
javaCharStream.ReInit((Reader) stringReader);

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("Dlf[Y3 K>D-r.")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 2, 2)
statement is: getBeginColumn()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int beginColumn = javaCharStream.getBeginColumn()
test data is: StringReader stringReader = new StringReader("Dlf[Y3 K>D-r.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2, 2);
javaCharStream.getBeginColumn();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("This is a sample input string.");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2, 2);
        javaCharStream.getBeginColumn();
    }
}
statement is: StringReader stringReader = new StringReader("This is a sample input string."), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2, 2), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.getBeginColumn(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.getBeginColumn() target is: javaCharStream method is: getBeginColumn()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 4
Matched Method is: getBeginColumn()I
TestCase is: String string = "This is a sample input string.";
StringReader stringReader = new StringReader(string);
int _int = 2;
int _int = 2;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int);
((JavaCharStream) stringReader).getBeginColumn();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: java.io.FileDescriptor()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.FileDescriptor
statement code is: FileDescriptor fileDescriptor = new FileDescriptor()
statement is: org.evosuite.runtime.mock.java.io.MockFileInputStream(Ljava/io/FileDescriptor;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.io.MockFileInputStream
statement code is: MockFileInputStream mockFileInputStream = new MockFileInputStream(arg0)
statement is: ReInit(Ljava/io/InputStream;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: javaCharStream.ReInit((InputStream) arg0)
test data is: StringReader stringReader = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
FileDescriptor fileDescriptor = new FileDescriptor();
MockFileInputStream mockFileInputStream = new MockFileInputStream(fileDescriptor);
javaCharStream.ReInit((InputStream) mockFileInputStream);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        FileDescriptor fileDescriptor = new FileDescriptor();
        MockFileInputStream mockFileInputStream = new MockFileInputStream(fileDescriptor, "test.txt");
        javaCharStream.ReInit(((InputStream) (mockFileInputStream)));
    }
}
statement is: StringReader stringReader = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: FileDescriptor fileDescriptor = new FileDescriptor(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: MockFileInputStream mockFileInputStream = new MockFileInputStream(fileDescriptor, "test.txt"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.ReInit(((InputStream) (mockFileInputStream))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.ReInit(((InputStream) (mockFileInputStream))) target is: javaCharStream method is: ReInit(InputStream)
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 2
Matched Method is: ReInit(Ljava/io/InputStream;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
TestCase is: String string = "com.soops.CEN4010.JMCA.JParser.JavaCharStream";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
FileDescriptor fileDescriptor = new FileDescriptor();
MockFileInputStream mockFileInputStream = null;
((JavaCharStream) stringReader).ReInit((InputStream) mockFileInputStream);

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("m1>8@-")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: ReInit(Ljava/io/Reader;II)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: javaCharStream.ReInit((Reader) arg0, (-1), (-1))
test data is: StringReader stringReader = new StringReader("m1>8@-");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.ReInit((Reader) stringReader, (-1), (-1));

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("The quick brown fox jumps over the lazy dog");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        javaCharStream.ReInit(((Reader) (stringReader)), 0, 100);
    }
}
statement is: StringReader stringReader = new StringReader("The quick brown fox jumps over the lazy dog"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.ReInit(((Reader) (stringReader)), 0, 100), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.ReInit(((Reader) (stringReader)), 0, 100) target is: javaCharStream method is: ReInit(Reader,int,int)
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 2
Matched Method is: ReInit(Ljava/io/Reader;II)V
TestCase is: String string = "The quick brown fox jumps over the lazy dog";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
int _int = 0;
int _int = 100;
((JavaCharStream) stringReader).ReInit((Reader) stringReader, _int, _int);

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("dEG,")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: getBeginLine()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int beginLine = javaCharStream.getBeginLine()
test data is: StringReader stringReader = new StringReader("dEG,");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.getBeginLine();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("This is a sample\nstring for testing.\nIt contains multiple lines.");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        javaCharStream.getBeginLine();
    }
}
statement is: StringReader stringReader = new StringReader("This is a sample\nstring for testing.\nIt contains multiple lines."), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.getBeginLine(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.getBeginLine() target is: javaCharStream method is: getBeginLine()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 2
Matched Method is: getBeginLine()I
TestCase is: String string = "This is a sample\nstring for testing.\nIt contains multiple lines.";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
((JavaCharStream) stringReader).getBeginLine();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: Done()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: javaCharStream.Done()
statement is: ReInit(Ljava/io/Reader;III)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: javaCharStream.ReInit((Reader) arg0, (-1), (-1), (-1))
test data is: StringReader stringReader = new StringReader("");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.Done();
javaCharStream.ReInit((Reader) stringReader, (-1), (-1), (-1));

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("Hello World");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        javaCharStream.Done();
        javaCharStream.ReInit(((Reader) (stringReader)), -1, -1, -1);
    }
}
statement is: StringReader stringReader = new StringReader("Hello World"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.Done(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.Done() target is: javaCharStream method is: Done()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 2
Matched Method is: Done()V
statement is: javaCharStream.ReInit(((Reader) (stringReader)), -1, -1, -1), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.ReInit(((Reader) (stringReader)), -1, -1, -1) target is: javaCharStream method is: ReInit(Reader,int,int,int)
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 2
Matched Method is: ReInit(Ljava/io/Reader;III)V
i 1 Parameters size() 1 Num of Method Parameters: 4
i 2 Parameters size() 1 Num of Method Parameters: 4
i 3 Parameters size() 1 Num of Method Parameters: 4
TestCase is: String string = "Hello World";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
((JavaCharStream) stringReader).Done();
int _int = null;
int _int = null;
int _int = null;
((JavaCharStream) stringReader).ReInit((Reader) stringReader, _int, _int, _int);

statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('0')
test data is: JavaCharStream.hexval('0');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream.hexval('0');// single digit

        JavaCharStream.hexval('A');// uppercase letter

        JavaCharStream.hexval('a');// lowercase letter

        JavaCharStream.hexval('9');// digit

        JavaCharStream.hexval('.');// punctuation mark

        JavaCharStream.hexval('&');// special characte }}

    }
}
statement is: CharStream.hexval('0')// single digit
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: CharStream.hexval('0')// single digit
 target is: CharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('A')// uppercase letter
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('A')// uppercase letter
 target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('a')// lowercase letter
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('a')// lowercase letter
 target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('9')// digit
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('9')// digit
 target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('.')// punctuation mark
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('.')// punctuation mark
 target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('&')// special characte }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('&')// special characte }}
 target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
TestCase is: char _char = '0';
JavaCharStream.hexval(_char);
char _char = 'A';
JavaCharStream.hexval(_char);
char _char = 'a';
JavaCharStream.hexval(_char);
char _char = '9';
JavaCharStream.hexval(_char);
char _char = '.';
JavaCharStream.hexval(_char);
char _char = '&';
JavaCharStream.hexval(_char);

statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('\u0000')
test data is: JavaCharStream.hexval('\u0000');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Arrange
        JavaCharStream stream = new JavaCharStream("Hello, World!");
        // Act
        int result = stream.hexval('\u0000');
        // Assert
        assertEquals(0x0, result);
    }
}
statement is: // Arrange
JavaCharStream stream = new JavaCharStream("Hello, World!"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: // Act
int result = stream.hexval('\u0000'), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: stream.hexval('\u0000') target is: stream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: // Assert
assertEquals(0x0, result), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Assert
assertEquals(0x0, result) target is:  method is: assertEquals(int,int)
TestCase is: char _char = '\u0000';
JavaCharStream.hexval(_char);

statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('1')
test data is: JavaCharStream.hexval('1');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
    }
}
statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('2')
test data is: JavaCharStream.hexval('2');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream.hexval('A');
        JavaCharStream.hexval('0');
        JavaCharStream.hexval('1');
        JavaCharStream.hexval('C');
        JavaCharStream.hexval('D');
        JavaCharStream.hexval('E');
        JavaCharStream.hexval('F');
        JavaCharStream.hexval(null);
        JavaCharStream.hexval("");
    }
}
statement is: CharStream.hexval('A'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: CharStream.hexval('A') target is: CharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('0'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('0') target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('1'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('1') target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('C'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('C') target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('D'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('D') target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('E'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('E') target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('F'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('F') target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval(null), class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval(null) target is: JavaCharStream method is: hexval(<unknown>)
Matched Method is: hexval(C)I
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: JavaCharStream.hexval(""), class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval("") target is: JavaCharStream method is: hexval(java.lang.String)
Matched Method is: hexval(C)I
TestCase is: char _char = 'A';
JavaCharStream.hexval(_char);
char _char = '0';
JavaCharStream.hexval(_char);
char _char = '1';
JavaCharStream.hexval(_char);
char _char = 'C';
JavaCharStream.hexval(_char);
char _char = 'D';
JavaCharStream.hexval(_char);
char _char = 'E';
JavaCharStream.hexval(_char);
char _char = 'F';
JavaCharStream.hexval(_char);
char _char = null;
JavaCharStream.hexval(_char);
String string = "";
JavaCharStream.hexval((char) string);

statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('3')
test data is: JavaCharStream.hexval('3');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream.hexval('a');
        JavaCharStream.hexval('b');
    }
}
statement is: CharStream.hexval('a'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: CharStream.hexval('a') target is: CharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('b'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('b') target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
TestCase is: char _char = 'a';
JavaCharStream.hexval(_char);
char _char = 'b';
JavaCharStream.hexval(_char);

statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('4')
test data is: JavaCharStream.hexval('4');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
    }
}
statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('5')
test data is: JavaCharStream.hexval('5');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
    }
}
statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('6')
test data is: JavaCharStream.hexval('6');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
    }
}
statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('7')
test data is: JavaCharStream.hexval('7');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data for JavaCharStream
        // Hexadecimal value 255
        // Hexadecimal value 15
        // Hexadecimal value 11259375 }}
    }
}
statement is: // Improved test data for JavaCharStream, class spoon.support.reflect.code.CtCommentImpl
statement is: // Hexadecimal value 255, class spoon.support.reflect.code.CtCommentImpl
statement is: // Hexadecimal value 15, class spoon.support.reflect.code.CtCommentImpl
statement is: // Hexadecimal value 11259375 }}, class spoon.support.reflect.code.CtCommentImpl
statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('8')
test data is: JavaCharStream.hexval('8');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream.hexval('a');// returns 10

        JavaCharStream.hexval('f');// returns 15

        JavaCharStream.hexval('A');// returns 10

        JavaCharStream.hexval('F');// returns 1 }}

    }
}
statement is: CharStream.hexval('a')// returns 10
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: CharStream.hexval('a')// returns 10
 target is: CharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('f')// returns 15
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('f')// returns 15
 target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('A')// returns 10
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('A')// returns 10
 target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('F')// returns 1 }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('F')// returns 1 }}
 target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
TestCase is: char _char = 'a';
JavaCharStream.hexval(_char);
char _char = 'f';
JavaCharStream.hexval(_char);
char _char = 'A';
JavaCharStream.hexval(_char);
char _char = 'F';
JavaCharStream.hexval(_char);

statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('9')
test data is: JavaCharStream.hexval('9');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream.hexval('A');// hexadecimal value of 'A' is 10

        JavaCharStream.hexval('B');// hexadecimal value of 'B' is 11

        JavaCharStream.hexval('C');// hexadecimal value of 'C' is 1 }}

    }
}
statement is: CharStream.hexval('A')// hexadecimal value of 'A' is 10
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: CharStream.hexval('A')// hexadecimal value of 'A' is 10
 target is: CharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('B')// hexadecimal value of 'B' is 11
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('B')// hexadecimal value of 'B' is 11
 target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('C')// hexadecimal value of 'C' is 1 }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('C')// hexadecimal value of 'C' is 1 }}
 target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
TestCase is: char _char = 'A';
JavaCharStream.hexval(_char);
char _char = 'B';
JavaCharStream.hexval(_char);
char _char = 'C';
JavaCharStream.hexval(_char);

statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval(':')
test data is: JavaCharStream.hexval(':');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream.hexval('☺');// returns 9786

        JavaCharStream.hexval('♥');// returns 982 }}

    }
}
statement is: CharStream.hexval('☺')// returns 9786
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: CharStream.hexval('☺')// returns 9786
 target is: CharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('♥')// returns 982 }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('♥')// returns 982 }}
 target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
TestCase is: char _char = '\u263A';
JavaCharStream.hexval(_char);
char _char = '\u2665';
JavaCharStream.hexval(_char);

statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval(';')
test data is: JavaCharStream.hexval(';');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data
        JavaCharStream.hexval('\n');// Newline character }}

    }
}
statement is: // Improved test data
JavaCharStream.hexval('\n')// Newline character }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Improved test data
JavaCharStream.hexval('\n')// Newline character }}
 target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
TestCase is: char _char = '\n';
JavaCharStream.hexval(_char);

statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('<')
test data is: JavaCharStream.hexval('<');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream.hexval('F');
    }
}
statement is: CharStream.hexval('F'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: CharStream.hexval('F') target is: CharStream method is: hexval(char)
Matched Method is: hexval(C)I
TestCase is: char _char = 'F';
JavaCharStream.hexval(_char);

statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('=')
test data is: JavaCharStream.hexval('=');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream.hexval('=');
    }
}
statement is: CharStream.hexval('='), class spoon.support.reflect.code.CtInvocationImpl
invocation is: CharStream.hexval('=') target is: CharStream method is: hexval(char)
Matched Method is: hexval(C)I
TestCase is: char _char = '=';
JavaCharStream.hexval(_char);

statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('>')
test data is: JavaCharStream.hexval('>');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream.hexval('>');
    }
}
statement is: CharStream.hexval('>'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: CharStream.hexval('>') target is: CharStream method is: hexval(char)
Matched Method is: hexval(C)I
TestCase is: char _char = '>';
JavaCharStream.hexval(_char);

statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('?')
test data is: JavaCharStream.hexval('?');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream.hexval('ū');// Improved test data to make the code more descriptive and representative of the situation being tested }}

    }
}
statement is: CharStream.hexval('ū')// Improved test data to make the code more descriptive and representative of the situation being tested }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: CharStream.hexval('ū')// Improved test data to make the code more descriptive and representative of the situation being tested }}
 target is: CharStream method is: hexval(char)
Matched Method is: hexval(C)I
TestCase is: char _char = '\u016B';
JavaCharStream.hexval(_char);

statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('@')
test data is: JavaCharStream.hexval('@');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream.hexval('A');
        JavaCharStream.hexval('A');
        JavaCharStream.hexval("a");
        JavaCharStream.hexval("a");
    }
}
statement is: CharStream.hexval('A'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: CharStream.hexval('A') target is: CharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('A'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('A') target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval("a"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval("a") target is: JavaCharStream method is: hexval(java.lang.String)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval("a"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval("a") target is: JavaCharStream method is: hexval(java.lang.String)
Matched Method is: hexval(C)I
TestCase is: char _char = 'A';
JavaCharStream.hexval(_char);
char _char = 'A';
JavaCharStream.hexval(_char);
String string = "a";
JavaCharStream.hexval((char) string);
String string = "a";
JavaCharStream.hexval((char) string);

statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('A')
test data is: JavaCharStream.hexval('A');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream.hexval('Z');
    }
}
statement is: CharStream.hexval('Z'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: CharStream.hexval('Z') target is: CharStream method is: hexval(char)
Matched Method is: hexval(C)I
TestCase is: char _char = 'Z';
JavaCharStream.hexval(_char);

statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('B')
test data is: JavaCharStream.hexval('B');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream.hexval('0');// 0

        JavaCharStream.hexval('1');// 1

        JavaCharStream.hexval('2');// 2

        JavaCharStream.hexval('3');// 3

        JavaCharStream.hexval('4');// 4

        JavaCharStream.hexval('5');// 5

        JavaCharStream.hexval('6');// 6

        JavaCharStream.hexval('7');// 7

        JavaCharStream.hexval('8');// 8

        JavaCharStream.hexval('9');// 9

        JavaCharStream.hexval('A');// A

        JavaCharStream.hexval('B');// B

        JavaCharStream.hexval('C');// C

        JavaCharStream.hexval('D');// D

        JavaCharStream.hexval('E');// }}

    }
}
statement is: CharStream.hexval('0')// 0
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: CharStream.hexval('0')// 0
 target is: CharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('1')// 1
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('1')// 1
 target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('2')// 2
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('2')// 2
 target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('3')// 3
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('3')// 3
 target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('4')// 4
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('4')// 4
 target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('5')// 5
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('5')// 5
 target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('6')// 6
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('6')// 6
 target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('7')// 7
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('7')// 7
 target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('8')// 8
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('8')// 8
 target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('9')// 9
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('9')// 9
 target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('A')// A
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('A')// A
 target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('B')// B
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('B')// B
 target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('C')// C
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('C')// C
 target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('D')// D
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('D')// D
 target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('E')// }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('E')// }}
 target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
TestCase is: char _char = '0';
JavaCharStream.hexval(_char);
char _char = '1';
JavaCharStream.hexval(_char);
char _char = '2';
JavaCharStream.hexval(_char);
char _char = '3';
JavaCharStream.hexval(_char);
char _char = '4';
JavaCharStream.hexval(_char);
char _char = '5';
JavaCharStream.hexval(_char);
char _char = '6';
JavaCharStream.hexval(_char);
char _char = '7';
JavaCharStream.hexval(_char);
char _char = '8';
JavaCharStream.hexval(_char);
char _char = '9';
JavaCharStream.hexval(_char);
char _char = 'A';
JavaCharStream.hexval(_char);
char _char = 'B';
JavaCharStream.hexval(_char);
char _char = 'C';
JavaCharStream.hexval(_char);
char _char = 'D';
JavaCharStream.hexval(_char);
char _char = 'E';
JavaCharStream.hexval(_char);

statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('C')
test data is: JavaCharStream.hexval('C');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream.hexval('A');// return 10

        JavaCharStream.hexval('B');// return 11

        JavaCharStream.hexval('C');// return 12

        JavaCharStream.hexval('D');// return 13

        JavaCharStream.hexval('E');// return 14

        JavaCharStream.hexval('F');// return 1 }}

    }
}
statement is: CharStream.hexval('A')// return 10
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: CharStream.hexval('A')// return 10
 target is: CharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('B')// return 11
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('B')// return 11
 target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('C')// return 12
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('C')// return 12
 target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('D')// return 13
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('D')// return 13
 target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('E')// return 14
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('E')// return 14
 target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('F')// return 1 }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('F')// return 1 }}
 target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
TestCase is: char _char = 'A';
JavaCharStream.hexval(_char);
char _char = 'B';
JavaCharStream.hexval(_char);
char _char = 'C';
JavaCharStream.hexval(_char);
char _char = 'D';
JavaCharStream.hexval(_char);
char _char = 'E';
JavaCharStream.hexval(_char);
char _char = 'F';
JavaCharStream.hexval(_char);

statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('D')
test data is: JavaCharStream.hexval('D');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream.hexval('A');// returns 0x41 (decimal value: 65)

        JavaCharStream.hexval('a');// returns 0x61 (decimal value: 97)

        JavaCharStream.hexval('Z');// returns 0x5a (decimal value: 90)

        JavaCharStream.hexval('z');// returns 0x7a (decimal value: 122)

        JavaCharStream.hexval('0');// returns 0x30 (decimal value: 48)

        JavaCharStream.hexval('9');// returns 0x39 (decimal value: 57)

        JavaCharStream.hexval('.');// returns 0x2e (decimal value: 46 }}

    }
}
statement is: CharStream.hexval('A')// returns 0x41 (decimal value: 65)
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: CharStream.hexval('A')// returns 0x41 (decimal value: 65)
 target is: CharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('a')// returns 0x61 (decimal value: 97)
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('a')// returns 0x61 (decimal value: 97)
 target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('Z')// returns 0x5a (decimal value: 90)
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('Z')// returns 0x5a (decimal value: 90)
 target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('z')// returns 0x7a (decimal value: 122)
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('z')// returns 0x7a (decimal value: 122)
 target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('0')// returns 0x30 (decimal value: 48)
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('0')// returns 0x30 (decimal value: 48)
 target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('9')// returns 0x39 (decimal value: 57)
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('9')// returns 0x39 (decimal value: 57)
 target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('.')// returns 0x2e (decimal value: 46 }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('.')// returns 0x2e (decimal value: 46 }}
 target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
TestCase is: char _char = 'A';
JavaCharStream.hexval(_char);
char _char = 'a';
JavaCharStream.hexval(_char);
char _char = 'Z';
JavaCharStream.hexval(_char);
char _char = 'z';
JavaCharStream.hexval(_char);
char _char = '0';
JavaCharStream.hexval(_char);
char _char = '9';
JavaCharStream.hexval(_char);
char _char = '.';
JavaCharStream.hexval(_char);

statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('E')
test data is: JavaCharStream.hexval('E');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream.hexval(' ');// space character

        JavaCharStream.hexval('\u0001');// control character 0x0001

        JavaCharStream.hexval('☺');// smiling face characte }}

    }
}
statement is: CharStream.hexval(' ')// space character
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: CharStream.hexval(' ')// space character
 target is: CharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('\u0001')// control character 0x0001
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('\u0001')// control character 0x0001
 target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('☺')// smiling face characte }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('☺')// smiling face characte }}
 target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
TestCase is: char _char = ' ';
JavaCharStream.hexval(_char);
char _char = '\u0001';
JavaCharStream.hexval(_char);
char _char = '\u263A';
JavaCharStream.hexval(_char);

statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('F')
test data is: JavaCharStream.hexval('F');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream.hexval(0x0);
        JavaCharStream.hexval(0x1);
        JavaCharStream.hexval(0xa);
    }
}
statement is: CharStream.hexval(0x0), class spoon.support.reflect.code.CtInvocationImpl
invocation is: CharStream.hexval(0x0) target is: CharStream method is: hexval(int)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval(0x1), class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval(0x1) target is: JavaCharStream method is: hexval(int)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval(0xa), class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval(0xa) target is: JavaCharStream method is: hexval(int)
Matched Method is: hexval(C)I
TestCase is: int _int = 0;
JavaCharStream.hexval((char) _int);
int _int = 1;
JavaCharStream.hexval((char) _int);
int _int = 10;
JavaCharStream.hexval((char) _int);

statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('G')
test data is: JavaCharStream.hexval('G');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream.hexval('A');
        JavaCharStream.hexval('a');
    }
}
statement is: CharStream.hexval('A'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: CharStream.hexval('A') target is: CharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('a'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('a') target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
TestCase is: char _char = 'A';
JavaCharStream.hexval(_char);
char _char = 'a';
JavaCharStream.hexval(_char);

statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('H')
test data is: JavaCharStream.hexval('H');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream.hexval('F');
    }
}
statement is: CharStream.hexval('F'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: CharStream.hexval('F') target is: CharStream method is: hexval(char)
Matched Method is: hexval(C)I
TestCase is: char _char = 'F';
JavaCharStream.hexval(_char);

statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('I')
test data is: JavaCharStream.hexval('I');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream.hexval('A');
        JavaCharStream.hexval(0x61);
        JavaCharStream.hexval("a");
    }
}
statement is: CharStream.hexval('A'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: CharStream.hexval('A') target is: CharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval(0x61), class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval(0x61) target is: JavaCharStream method is: hexval(int)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval("a"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval("a") target is: JavaCharStream method is: hexval(java.lang.String)
Matched Method is: hexval(C)I
TestCase is: char _char = 'A';
JavaCharStream.hexval(_char);
int _int = 97;
JavaCharStream.hexval((char) _int);
String string = "a";
JavaCharStream.hexval((char) string);

statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('J')
test data is: JavaCharStream.hexval('J');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream.hexval('☺');// White smiling fac }}

    }
}
statement is: CharStream.hexval('☺')// White smiling fac }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: CharStream.hexval('☺')// White smiling fac }}
 target is: CharStream method is: hexval(char)
Matched Method is: hexval(C)I
TestCase is: char _char = '\u263A';
JavaCharStream.hexval(_char);

statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('K')
test data is: JavaCharStream.hexval('K');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        return c - '0';
    }

    {
        return (c - 'A') + 10;
    }

    {
        return (c - 'a') + 10;
    }

    {
        throw new IllegalArgumentException("Invalid hexadecimal character: " + c);
    }
}
statement is: return c - '0', class spoon.support.reflect.code.CtReturnImpl
statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('L')
test data is: JavaCharStream.hexval('L');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream.hexval('A');
    }
}
statement is: CharStream.hexval('A'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: CharStream.hexval('A') target is: CharStream method is: hexval(char)
Matched Method is: hexval(C)I
TestCase is: char _char = 'A';
JavaCharStream.hexval(_char);

statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('M')
test data is: JavaCharStream.hexval('M');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data for JavaCharStream.hexval()
        int[] hexVals = new int[]{ 0x0, 0x1, 0x2, 0x3, 0x4, 0x5, 0x6, 0x7, 0x8, 0x9, 0xa, 0xb, 0xc, 0xd, 0xe, 0xf };
        String[] hexChars = new String[]{ "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "A", "B", "C", "D", "E", "F" };
    }
}
statement is: // Improved test data for JavaCharStream.hexval()
int[] hexVals = new int[]{ 0x0, 0x1, 0x2, 0x3, 0x4, 0x5, 0x6, 0x7, 0x8, 0x9, 0xa, 0xb, 0xc, 0xd, 0xe, 0xf }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
statement is: String[] hexChars = new String[]{ "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "A", "B", "C", "D", "E", "F" }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('N')
test data is: JavaCharStream.hexval('N');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream.hexval('A');
    }
}
statement is: CharStream.hexval('A'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: CharStream.hexval('A') target is: CharStream method is: hexval(char)
Matched Method is: hexval(C)I
TestCase is: char _char = 'A';
JavaCharStream.hexval(_char);

statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('O')
test data is: JavaCharStream.hexval('O');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream.hexval('f');
    }
}
statement is: CharStream.hexval('f'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: CharStream.hexval('f') target is: CharStream method is: hexval(char)
Matched Method is: hexval(C)I
TestCase is: char _char = 'f';
JavaCharStream.hexval(_char);

statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('P')
test data is: JavaCharStream.hexval('P');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data for JavaCharStream.hexval() method
        JavaCharStream.hexval('A');// Testing with a lowercase alphabet character

        JavaCharStream.hexval('F');// Testing with an uppercase alphabet character

        JavaCharStream.hexval('0');// Testing with a numeral character

        JavaCharStream.hexval('9');// Testing with an alphanumeric character

        JavaCharStream.hexval('$');// Testing with a special character }}

    }
}
statement is: // Improved test data for JavaCharStream.hexval() method
JavaCharStream.hexval('A')// Testing with a lowercase alphabet character
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Improved test data for JavaCharStream.hexval() method
JavaCharStream.hexval('A')// Testing with a lowercase alphabet character
 target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('F')// Testing with an uppercase alphabet character
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('F')// Testing with an uppercase alphabet character
 target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('0')// Testing with a numeral character
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('0')// Testing with a numeral character
 target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('9')// Testing with an alphanumeric character
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('9')// Testing with an alphanumeric character
 target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('$')// Testing with a special character }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('$')// Testing with a special character }}
 target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
TestCase is: char _char = 'A';
JavaCharStream.hexval(_char);
char _char = 'F';
JavaCharStream.hexval(_char);
char _char = '0';
JavaCharStream.hexval(_char);
char _char = '9';
JavaCharStream.hexval(_char);
char _char = '$';
JavaCharStream.hexval(_char);

statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('Q')
test data is: JavaCharStream.hexval('Q');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream.hexval('A');// 0x41

        JavaCharStream.hexval('a');// 0x61

        JavaCharStream.hexval('$');// 0x24

        JavaCharStream.hexval('@');// 0x4 }}

    }
}
statement is: CharStream.hexval('A')// 0x41
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: CharStream.hexval('A')// 0x41
 target is: CharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('a')// 0x61
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('a')// 0x61
 target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('$')// 0x24
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('$')// 0x24
 target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('@')// 0x4 }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('@')// 0x4 }}
 target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
TestCase is: char _char = 'A';
JavaCharStream.hexval(_char);
char _char = 'a';
JavaCharStream.hexval(_char);
char _char = '$';
JavaCharStream.hexval(_char);
char _char = '@';
JavaCharStream.hexval(_char);

statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('R')
test data is: JavaCharStream.hexval('R');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data for JavaCharStream.hexval() method
        char[] hexChars = new char[]{ '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F', 'R' };
    }
}
statement is: // Improved test data for JavaCharStream.hexval() method
char[] hexChars = new char[]{ '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F', 'R' }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('S')
test data is: JavaCharStream.hexval('S');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream.hexval('0');// Returns 0

        JavaCharStream.hexval('A');// Returns 10

        JavaCharStream.hexval('z');// Returns 26

        JavaCharStream.hexval('Z');// Returns 35

        JavaCharStream.hexval('9');// Returns }}

    }
}
statement is: CharStream.hexval('0')// Returns 0
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: CharStream.hexval('0')// Returns 0
 target is: CharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('A')// Returns 10
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('A')// Returns 10
 target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('z')// Returns 26
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('z')// Returns 26
 target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('Z')// Returns 35
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('Z')// Returns 35
 target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('9')// Returns }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('9')// Returns }}
 target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
TestCase is: char _char = '0';
JavaCharStream.hexval(_char);
char _char = 'A';
JavaCharStream.hexval(_char);
char _char = 'z';
JavaCharStream.hexval(_char);
char _char = 'Z';
JavaCharStream.hexval(_char);
char _char = '9';
JavaCharStream.hexval(_char);

statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('T')
test data is: JavaCharStream.hexval('T');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream.hexval('A');
    }
}
statement is: CharStream.hexval('A'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: CharStream.hexval('A') target is: CharStream method is: hexval(char)
Matched Method is: hexval(C)I
TestCase is: char _char = 'A';
JavaCharStream.hexval(_char);

statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('U')
test data is: JavaCharStream.hexval('U');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream.hexval('a');
        JavaCharStream.hexval('A');
        JavaCharStream.hexval('0');
        JavaCharStream.hexval('9');
        JavaCharStream.hexval('z');
        JavaCharStream.hexval('Z');
        JavaCharStream.hexval('!');
        JavaCharStream.hexval('#');
    }
}
statement is: CharStream.hexval('a'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: CharStream.hexval('a') target is: CharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('A'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('A') target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('0'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('0') target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('9'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('9') target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('z'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('z') target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('Z'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('Z') target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('!'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('!') target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('#'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('#') target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
TestCase is: char _char = 'a';
JavaCharStream.hexval(_char);
char _char = 'A';
JavaCharStream.hexval(_char);
char _char = '0';
JavaCharStream.hexval(_char);
char _char = '9';
JavaCharStream.hexval(_char);
char _char = 'z';
JavaCharStream.hexval(_char);
char _char = 'Z';
JavaCharStream.hexval(_char);
char _char = '!';
JavaCharStream.hexval(_char);
char _char = '#';
JavaCharStream.hexval(_char);

statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('V')
test data is: JavaCharStream.hexval('V');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data
        assertEquals(11, JavaCharStream.hexval('A'));
        assertEquals(10, JavaCharStream.hexval('a'));
        assertEquals(13, JavaCharStream.hexval('D'));
        assertEquals(9, JavaCharStream.hexval('9'));
    }
}
statement is: // Improved test data
assertEquals(11, JavaCharStream.hexval('A')), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Improved test data
assertEquals(11, JavaCharStream.hexval('A')) target is:  method is: assertEquals(int,<unknown>)
statement is: assertEquals(10, JavaCharStream.hexval('a')), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(10, JavaCharStream.hexval('a')) target is:  method is: assertEquals(int,<unknown>)
statement is: assertEquals(13, JavaCharStream.hexval('D')), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(13, JavaCharStream.hexval('D')) target is:  method is: assertEquals(int,<unknown>)
statement is: assertEquals(9, JavaCharStream.hexval('9')), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(9, JavaCharStream.hexval('9')) target is:  method is: assertEquals(int,<unknown>)
statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('W')
test data is: JavaCharStream.hexval('W');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream.hexval('B');
    }
}
statement is: CharStream.hexval('B'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: CharStream.hexval('B') target is: CharStream method is: hexval(char)
Matched Method is: hexval(C)I
TestCase is: char _char = 'B';
JavaCharStream.hexval(_char);

statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('X')
test data is: JavaCharStream.hexval('X');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        @Change
        the value;
    }
}
statement is: @Change
the value, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('Y')
test data is: JavaCharStream.hexval('Y');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream.hexval('F');
    }
}
statement is: CharStream.hexval('F'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: CharStream.hexval('F') target is: CharStream method is: hexval(char)
Matched Method is: hexval(C)I
TestCase is: char _char = 'F';
JavaCharStream.hexval(_char);

statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('Z')
test data is: JavaCharStream.hexval('Z');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream.hexval('A');
    }
}
statement is: CharStream.hexval('A'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: CharStream.hexval('A') target is: CharStream method is: hexval(char)
Matched Method is: hexval(C)I
TestCase is: char _char = 'A';
JavaCharStream.hexval(_char);

statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('[')
test data is: JavaCharStream.hexval('[');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream.hexval('A');// Uppercase letter

        JavaCharStream.hexval('b');// Lowercase letter

        JavaCharStream.hexval('1');// Number 1

        JavaCharStream.hexval('x');// Letter x

        JavaCharStream.hexval('\n');// Newline characte }}

    }
}
statement is: CharStream.hexval('A')// Uppercase letter
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: CharStream.hexval('A')// Uppercase letter
 target is: CharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('b')// Lowercase letter
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('b')// Lowercase letter
 target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('1')// Number 1
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('1')// Number 1
 target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('x')// Letter x
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('x')// Letter x
 target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('\n')// Newline characte }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('\n')// Newline characte }}
 target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
TestCase is: char _char = 'A';
JavaCharStream.hexval(_char);
char _char = 'b';
JavaCharStream.hexval(_char);
char _char = '1';
JavaCharStream.hexval(_char);
char _char = 'x';
JavaCharStream.hexval(_char);
char _char = '\n';
JavaCharStream.hexval(_char);

statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('\\')
test data is: JavaCharStream.hexval('\\');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data:
        // Unicode character U+005C }}
    }
}
statement is: // Improved test data:, class spoon.support.reflect.code.CtCommentImpl
statement is: // Unicode character U+005C }}, class spoon.support.reflect.code.CtCommentImpl
statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval(']')
test data is: JavaCharStream.hexval(']');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream.hexval('°');
    }
}
statement is: CharStream.hexval('°'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: CharStream.hexval('°') target is: CharStream method is: hexval(char)
Matched Method is: hexval(C)I
TestCase is: char _char = '\u00B0';
JavaCharStream.hexval(_char);

statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('^')
test data is: JavaCharStream.hexval('^');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
    }
}
statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('_')
test data is: JavaCharStream.hexval('_');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream.hexval('a');
        JavaCharStream.hexval('A');
        JavaCharStream.hexval('0');
        JavaCharStream.hexval('9');
        JavaCharStream.hexval('_');
        JavaCharStream.hexval(' ');
        JavaCharStream.hexval('\t');
    }
}
statement is: CharStream.hexval('a'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: CharStream.hexval('a') target is: CharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('A'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('A') target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('0'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('0') target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('9'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('9') target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('_'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('_') target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval(' '), class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval(' ') target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('\t'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('\t') target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
TestCase is: char _char = 'a';
JavaCharStream.hexval(_char);
char _char = 'A';
JavaCharStream.hexval(_char);
char _char = '0';
JavaCharStream.hexval(_char);
char _char = '9';
JavaCharStream.hexval(_char);
char _char = '_';
JavaCharStream.hexval(_char);
char _char = ' ';
JavaCharStream.hexval(_char);
char _char = '\t';
JavaCharStream.hexval(_char);

statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('`')
test data is: JavaCharStream.hexval('`');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data for the JavaCharStream.hexval() method
        assertEquals(0x20, JavaCharStream.hexval(' '));// space character

        assertEquals(0x41, JavaCharStream.hexval('A'));// capital letter A

        assertEquals(0x61, JavaCharStream.hexval('a'));// lowercase letter a

        assertEquals(0x30, JavaCharStream.hexval('0'));// digit 0

        assertEquals(0x39, JavaCharStream.hexval('9'));// digit 9 }}

    }
}
statement is: // Improved test data for the JavaCharStream.hexval() method
assertEquals(0x20, JavaCharStream.hexval(' '))// space character
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Improved test data for the JavaCharStream.hexval() method
assertEquals(0x20, JavaCharStream.hexval(' '))// space character
 target is:  method is: assertEquals(int,<unknown>)
statement is: assertEquals(0x41, JavaCharStream.hexval('A'))// capital letter A
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(0x41, JavaCharStream.hexval('A'))// capital letter A
 target is:  method is: assertEquals(int,<unknown>)
statement is: assertEquals(0x61, JavaCharStream.hexval('a'))// lowercase letter a
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(0x61, JavaCharStream.hexval('a'))// lowercase letter a
 target is:  method is: assertEquals(int,<unknown>)
statement is: assertEquals(0x30, JavaCharStream.hexval('0'))// digit 0
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(0x30, JavaCharStream.hexval('0'))// digit 0
 target is:  method is: assertEquals(int,<unknown>)
statement is: assertEquals(0x39, JavaCharStream.hexval('9'))// digit 9 }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(0x39, JavaCharStream.hexval('9'))// digit 9 }}
 target is:  method is: assertEquals(int,<unknown>)
statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('a')
test data is: JavaCharStream.hexval('a');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream.hexval('F');
    }
}
statement is: CharStream.hexval('F'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: CharStream.hexval('F') target is: CharStream method is: hexval(char)
Matched Method is: hexval(C)I
TestCase is: char _char = 'F';
JavaCharStream.hexval(_char);

statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('b')
test data is: JavaCharStream.hexval('b');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream.hexval(0xff);
    }
}
statement is: CharStream.hexval(0xff), class spoon.support.reflect.code.CtInvocationImpl
invocation is: CharStream.hexval(0xff) target is: CharStream method is: hexval(int)
Matched Method is: hexval(C)I
TestCase is: int _int = 255;
JavaCharStream.hexval((char) _int);

statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('c')
test data is: JavaCharStream.hexval('c');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream.hexval('C');
    }
}
statement is: CharStream.hexval('C'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: CharStream.hexval('C') target is: CharStream method is: hexval(char)
Matched Method is: hexval(C)I
TestCase is: char _char = 'C';
JavaCharStream.hexval(_char);

statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('d')
test data is: JavaCharStream.hexval('d');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream.hexval('a');
    }
}
statement is: CharStream.hexval('a'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: CharStream.hexval('a') target is: CharStream method is: hexval(char)
Matched Method is: hexval(C)I
TestCase is: char _char = 'a';
JavaCharStream.hexval(_char);

statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('e')
test data is: JavaCharStream.hexval('e');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream.hexval('a');// returns 10

        JavaCharStream.hexval('f');// returns 15

        JavaCharStream.hexval('A');// returns 10

        JavaCharStream.hexval('F');// returns 1 }}

    }
}
statement is: CharStream.hexval('a')// returns 10
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: CharStream.hexval('a')// returns 10
 target is: CharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('f')// returns 15
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('f')// returns 15
 target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('A')// returns 10
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('A')// returns 10
 target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('F')// returns 1 }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('F')// returns 1 }}
 target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
TestCase is: char _char = 'a';
JavaCharStream.hexval(_char);
char _char = 'f';
JavaCharStream.hexval(_char);
char _char = 'A';
JavaCharStream.hexval(_char);
char _char = 'F';
JavaCharStream.hexval(_char);

statement is: hexval(C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hexval = JavaCharStream.hexval('f')
test data is: JavaCharStream.hexval('f');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream.hexval('a');// returns 10

        JavaCharStream.hexval('F');// returns 15

        JavaCharStream.hexval('A');// returns 10

        JavaCharStream.hexval('z');// returns 2 }}

    }
}
statement is: CharStream.hexval('a')// returns 10
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: CharStream.hexval('a')// returns 10
 target is: CharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('F')// returns 15
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('F')// returns 15
 target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('A')// returns 10
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('A')// returns 10
 target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
statement is: JavaCharStream.hexval('z')// returns 2 }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: JavaCharStream.hexval('z')// returns 2 }}
 target is: JavaCharStream method is: hexval(char)
Matched Method is: hexval(C)I
TestCase is: char _char = 'a';
JavaCharStream.hexval(_char);
char _char = 'F';
JavaCharStream.hexval(_char);
char _char = 'A';
JavaCharStream.hexval(_char);
char _char = 'z';
JavaCharStream.hexval(_char);

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("dEG,")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: BeginToken()C type is: class org.evosuite.testcase.statements.MethodStatement return type char
statement code is: char BeginToken = javaCharStream.BeginToken()
statement is: getBeginLine()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int beginLine = javaCharStream.getBeginLine()
test data is: StringReader stringReader = new StringReader("dEG,");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.BeginToken();
javaCharStream.getBeginLine();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("deg,");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        javaCharStream.BeginToken();
        javaCharStream.getBeginLine();
    }
}
statement is: StringReader stringReader = new StringReader("deg,"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.BeginToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.BeginToken() target is: javaCharStream method is: BeginToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 2
Matched Method is: BeginToken()C
statement is: javaCharStream.getBeginLine(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.getBeginLine() target is: javaCharStream method is: getBeginLine()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 2
Matched Method is: getBeginLine()I
TestCase is: String string = "deg,";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
((JavaCharStream) stringReader).BeginToken();
((JavaCharStream) stringReader).getBeginLine();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader(".")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;III)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 2915, 2915, 2915)
statement is: BeginToken()C type is: class org.evosuite.testcase.statements.MethodStatement return type char
statement code is: char BeginToken = javaCharStream.BeginToken()
statement is: FillBuff()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: javaCharStream.FillBuff()
test data is: StringReader stringReader = new StringReader(".");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2915, 2915, 2915);
javaCharStream.BeginToken();
javaCharStream.FillBuff();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("The quick brown fox jumps over the lazy dog.");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, 10, 20, 5);
        javaCharStream.BeginToken();
        javaCharStream.FillBuff();
    }
}
statement is: StringReader stringReader = new StringReader("The quick brown fox jumps over the lazy dog."), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, 10, 20, 5), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.BeginToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.BeginToken() target is: javaCharStream method is: BeginToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;III)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 5
Matched Method is: BeginToken()C
statement is: javaCharStream.FillBuff(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.FillBuff() target is: javaCharStream method is: FillBuff()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;III)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 5
Matched Method is: FillBuff()V
TestCase is: String string = "The quick brown fox jumps over the lazy dog.";
StringReader stringReader = new StringReader(string);
int _int = 10;
int _int = 20;
int _int = 5;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int, _int);
((JavaCharStream) stringReader).BeginToken();
((JavaCharStream) stringReader).FillBuff();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader(",.")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, (-2372), (-2372))
statement is: backup(I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: javaCharStream.backup(71)
statement is: BeginToken()C type is: class org.evosuite.testcase.statements.MethodStatement return type char
statement code is: char BeginToken = javaCharStream.BeginToken()
statement is: AdjustBuffSize()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: javaCharStream.AdjustBuffSize()
test data is: StringReader stringReader = new StringReader(",.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-2372), (-2372));
javaCharStream.backup(71);
javaCharStream.BeginToken();
javaCharStream.AdjustBuffSize();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("public class MyClass {\n\tpublic static void main(String[] args) {\n\t\tsystem.out.println(\"Hello, world!\");\n\t}\n}");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, 0, 49);
        javaCharStream.backup(7);
        javaCharStream.BeginToken();
        javaCharStream.AdjustBuffSize();
    }
}
statement is: StringReader stringReader = new StringReader("public class MyClass {\n\tpublic static void main(String[] args) {\n\t\tsystem.out.println(\"Hello, world!\");\n\t}\n}"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, 0, 49), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.backup(7), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.backup(7) target is: javaCharStream method is: backup(int)
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 4
Matched Method is: backup(I)V
statement is: javaCharStream.BeginToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.BeginToken() target is: javaCharStream method is: BeginToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 4
Matched Method is: BeginToken()C
statement is: javaCharStream.AdjustBuffSize(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.AdjustBuffSize() target is: javaCharStream method is: AdjustBuffSize()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 4
Matched Method is: AdjustBuffSize()V
TestCase is: String string = "public class MyClass {\n\tpublic static void main(String[] args) {\n\t\tsystem.out.println(\"Hello, world!\");\n\t}\n}";
StringReader stringReader = new StringReader(string);
int _int = 0;
int _int = 49;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int);
int _int = 7;
((JavaCharStream) stringReader).backup(_int);
((JavaCharStream) stringReader).BeginToken();
((JavaCharStream) stringReader).AdjustBuffSize();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;III)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, (-875), 1, 1)
statement is: readChar()C type is: class org.evosuite.testcase.statements.MethodStatement return type char
statement code is: char readChar = javaCharStream.readChar()
statement is: backup(I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: javaCharStream.backup(1)
statement is: BeginToken()C type is: class org.evosuite.testcase.statements.MethodStatement return type char
statement code is: char BeginToken = javaCharStream.BeginToken()
test data is: StringReader stringReader = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-875), 1, 1);
javaCharStream.readChar();
javaCharStream.backup(1);
javaCharStream.BeginToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, 0, 1, 1);
        javaCharStream.readChar();
        javaCharStream.backup(1);
        javaCharStream.BeginToken();
    }
}
statement is: StringReader stringReader = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, 0, 1, 1), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.readChar(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.readChar() target is: javaCharStream method is: readChar()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;III)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 5
Matched Method is: readChar()C
statement is: javaCharStream.backup(1), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.backup(1) target is: javaCharStream method is: backup(int)
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;III)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 5
Matched Method is: backup(I)V
statement is: javaCharStream.BeginToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.BeginToken() target is: javaCharStream method is: BeginToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;III)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 5
Matched Method is: BeginToken()C
TestCase is: String string = "com.soops.CEN4010.JMCA.JParser.JavaCharStream";
StringReader stringReader = new StringReader(string);
int _int = 0;
int _int = 1;
int _int = 1;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int, _int);
((JavaCharStream) stringReader).readChar();
int _int = 1;
((JavaCharStream) stringReader).backup(_int);
((JavaCharStream) stringReader).BeginToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("m1>8@-")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: org.evosuite.testcase.statements.AssignmentStatement@9028a005 type is: class org.evosuite.testcase.statements.AssignmentStatement return type int
statement code is: javaCharStream.bufsize = (-1)
statement is: AdjustBuffSize()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: javaCharStream.AdjustBuffSize()
test data is: StringReader stringReader = new StringReader("m1>8@-");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.bufsize = (-1);
javaCharStream.AdjustBuffSize();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("m1>8@-");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        javaCharStream.bufsize = -1;
        javaCharStream.AdjustBuffSize();
    }
}
statement is: StringReader stringReader = new StringReader("m1>8@-"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.bufsize = -1, class spoon.support.reflect.code.CtAssignmentImpl
statement is: javaCharStream.AdjustBuffSize(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.AdjustBuffSize() target is: javaCharStream method is: AdjustBuffSize()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 2
Matched Method is: AdjustBuffSize()V
TestCase is: String string = "m1>8@-";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
((JavaCharStream) stringReader).AdjustBuffSize();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("m1>8@-")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: backup(I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: javaCharStream.backup(30)
statement is: org.evosuite.testcase.statements.AssignmentStatement@d32d50f5 type is: class org.evosuite.testcase.statements.AssignmentStatement return type int
statement code is: javaCharStream.available = 30
statement is: BeginToken()C type is: class org.evosuite.testcase.statements.MethodStatement return type char
statement code is: char BeginToken = javaCharStream.BeginToken()
statement is: AdjustBuffSize()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: javaCharStream.AdjustBuffSize()
test data is: StringReader stringReader = new StringReader("m1>8@-");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.backup(30);
javaCharStream.available = 30;
javaCharStream.BeginToken();
javaCharStream.AdjustBuffSize();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("m1>8@-");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        javaCharStream.backup(30);
        javaCharStream.available = 30;
        javaCharStream.BeginToken();
        javaCharStream.AdjustBuffSize();
    }
}
statement is: StringReader stringReader = new StringReader("m1>8@-"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.backup(30), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.backup(30) target is: javaCharStream method is: backup(int)
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 2
Matched Method is: backup(I)V
statement is: javaCharStream.available = 30, class spoon.support.reflect.code.CtAssignmentImpl
statement is: javaCharStream.BeginToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.BeginToken() target is: javaCharStream method is: BeginToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 2
Matched Method is: BeginToken()C
statement is: javaCharStream.AdjustBuffSize(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.AdjustBuffSize() target is: javaCharStream method is: AdjustBuffSize()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 2
Matched Method is: AdjustBuffSize()V
TestCase is: String string = "m1>8@-";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
int _int = 30;
((JavaCharStream) stringReader).backup(_int);
((JavaCharStream) stringReader).BeginToken();
((JavaCharStream) stringReader).AdjustBuffSize();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("m1>8@-")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: org.evosuite.testcase.statements.AssignmentStatement@2157631c type is: class org.evosuite.testcase.statements.AssignmentStatement return type int
statement code is: javaCharStream.available = (-2)
statement is: AdjustBuffSize()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: javaCharStream.AdjustBuffSize()
test data is: StringReader stringReader = new StringReader("m1>8@-");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.available = (-2);
javaCharStream.AdjustBuffSize();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("m1>8@-");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        javaCharStream.available = 2147483647;
        javaCharStream.AdjustBuffSize();
    }
}
statement is: StringReader stringReader = new StringReader("m1>8@-"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.available = 2147483647, class spoon.support.reflect.code.CtAssignmentImpl
statement is: javaCharStream.AdjustBuffSize(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.AdjustBuffSize() target is: javaCharStream method is: AdjustBuffSize()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 2
Matched Method is: AdjustBuffSize()V
TestCase is: String string = "m1>8@-";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
((JavaCharStream) stringReader).AdjustBuffSize();

statement is: org.evosuite.testcase.statements.ArrayStatement@7d0607b3 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[8]
statement is: java.io.ByteArrayInputStream([B)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.ByteArrayInputStream
statement code is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: org.evosuite.testcase.statements.AssignmentStatement@821fa01c type is: class org.evosuite.testcase.statements.AssignmentStatement return type boolean
statement code is: javaCharStream.prevCharIsCR = true
statement is: readChar()C type is: class org.evosuite.testcase.statements.MethodStatement return type char
statement code is: char readChar = javaCharStream.readChar()
test data is: byte[] byteArray = new byte[8];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
javaCharStream.prevCharIsCR = true;
javaCharStream.readChar();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        byte[] byteArray = new byte[]{ 0x12, 0x34, 0x56, 0x78 };// Replaced primitive values with more illustrative examples

        ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
        JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
        javaCharStream.prevCharIsCR = true;
        javaCharStream.readChar();
    }
}
statement is: byte[] byteArray = new byte[]{ 0x12, 0x34, 0x56, 0x78 }// Replaced primitive values with more illustrative examples
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: byte[] byteArray = new byte[8] isAssignment: false Array: new byte[]{ 0x12, 0x34, 0x56, 0x78 } Elements: [0x12, 0x34, 0x56, 0x78]
lengths: [8] []
statement is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: java.io.ByteArrayInputStream([B)V
statement is: JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;)V
statement is: javaCharStream.prevCharIsCR = true, class spoon.support.reflect.code.CtAssignmentImpl
statement is: javaCharStream.readChar(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.readChar() target is: javaCharStream method is: readChar()
statement is: org.evosuite.testcase.statements.ArrayStatement@a37b7b7 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[8]
statement is: org.evosuite.testcase.statements.AssignmentStatement@45226e2 type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[0] = (byte)10
statement is: java.io.ByteArrayInputStream([B)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.ByteArrayInputStream
statement code is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: org.evosuite.testcase.statements.AssignmentStatement@201ba9e5 type is: class org.evosuite.testcase.statements.AssignmentStatement return type boolean
statement code is: javaCharStream.prevCharIsCR = true
statement is: readChar()C type is: class org.evosuite.testcase.statements.MethodStatement return type char
statement code is: char readChar = javaCharStream.readChar()
test data is: byte[] byteArray = new byte[8];
byteArray[0] = (byte)10;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
javaCharStream.prevCharIsCR = true;
javaCharStream.readChar();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
    }

    public static void main(String[] args) {
        byte[] byteArray = new byte[8];
        byteArray[0] = ((byte) (10));// Improve this value to a more descriptive example, such as "0x2A" or "123456789".

        ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
        JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
        javaCharStream.prevCharIsCR = true;// Improve this value to a more descriptive example, such as "true" or "false".

        javaCharStream.readChar();
    }
}
statement is: byte[] byteArray = new byte[8], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [8] Ct is: byte[] byteArray = new byte[8] isAssignment: false Array: new byte[8] Elements: []
lengths: [8] [8]
Their type are: class [B byte[]
statement is: byteArray[0] = ((byte) (10))// Improve this value to a more descriptive example, such as "0x2A" or "123456789".
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : byteArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl byte Assignment:((byte) (10)) Ct is: byteArray[0] = ((byte) (10))// Improve this value to a more descriptive example, such as "0x2A" or "123456789".

target : byteArray class spoon.support.reflect.code.CtLiteralImpl
statement is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.prevCharIsCR = true// Improve this value to a more descriptive example, such as "true" or "false".
, class spoon.support.reflect.code.CtAssignmentImpl
statement is: javaCharStream.readChar(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.readChar() target is: javaCharStream method is: readChar()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;)V callee: VariableReference: Statement 3, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 4
Matched Method is: readChar()C
TestCase is: byte[] byteArray = new byte[8];
int _int = 10;
byteArray[0] = (byte) _int;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
((JavaCharStream) byteArrayInputStream).readChar();

statement is: org.evosuite.testcase.statements.ArrayStatement@26fc62af type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[2]
statement is: org.evosuite.testcase.statements.AssignmentStatement@829886c7 type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[0] = (byte)9
statement is: java.io.ByteArrayInputStream([B)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.ByteArrayInputStream
statement code is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: BeginToken()C type is: class org.evosuite.testcase.statements.MethodStatement return type char
statement code is: char BeginToken = javaCharStream.BeginToken()
test data is: byte[] byteArray = new byte[2];
byteArray[0] = (byte)9;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
javaCharStream.BeginToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        byte[] byteArray = new byte[2];
        byteArray[0] = ((byte) (10));// Instead of using a hardcoded value, we use a more descriptive example that better represents the situation being tested.

        ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
        JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
        javaCharStream.BeginToken();
    }
}
statement is: byte[] byteArray = new byte[2], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [2] Ct is: byte[] byteArray = new byte[2] isAssignment: false Array: new byte[2] Elements: []
lengths: [2] [2]
Their type are: class [B byte[]
statement is: byteArray[0] = ((byte) (10))// Instead of using a hardcoded value, we use a more descriptive example that better represents the situation being tested.
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : byteArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl byte Assignment:((byte) (10)) Ct is: byteArray[0] = ((byte) (10))// Instead of using a hardcoded value, we use a more descriptive example that better represents the situation being tested.

target : byteArray class spoon.support.reflect.code.CtLiteralImpl
statement is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.BeginToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.BeginToken() target is: javaCharStream method is: BeginToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;)V callee: VariableReference: Statement 3, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 4
Matched Method is: BeginToken()C
TestCase is: byte[] byteArray = new byte[2];
int _int = 10;
byteArray[0] = (byte) _int;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
((JavaCharStream) byteArrayInputStream).BeginToken();

statement is: org.evosuite.testcase.statements.ArrayStatement@aa9ccae3 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[2]
statement is: org.evosuite.testcase.statements.AssignmentStatement@ce4afeca type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[0] = (byte)11
statement is: java.io.ByteArrayInputStream([B)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.ByteArrayInputStream
statement code is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: readChar()C type is: class org.evosuite.testcase.statements.MethodStatement return type char
statement code is: char readChar = javaCharStream.readChar()
test data is: byte[] byteArray = new byte[2];
byteArray[0] = (byte)11;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
javaCharStream.readChar();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        byte[] byteArray = new byte[2];
        byteArray[0] = ((byte) (97));// a

        ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
        JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
        char c = javaCharStream.readChar();
        assertEquals('a', c);
    }
}
statement is: byte[] byteArray = new byte[2], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [2] Ct is: byte[] byteArray = new byte[2] isAssignment: false Array: new byte[2] Elements: []
lengths: [2] [2]
Their type are: class [B byte[]
statement is: byteArray[0] = ((byte) (97))// a
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : byteArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl byte Assignment:((byte) (97)) Ct is: byteArray[0] = ((byte) (97))// a

target : byteArray class spoon.support.reflect.code.CtLiteralImpl
statement is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: char c = javaCharStream.readChar(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.readChar() target is: javaCharStream method is: readChar()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;)V callee: VariableReference: Statement 3, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 4
Matched Method is: readChar()C
statement is: assertEquals('a', c), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals('a', c) target is:  method is: assertEquals(char,char)
TestCase is: byte[] byteArray = new byte[2];
int _int = 97;
byteArray[0] = (byte) _int;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
((JavaCharStream) byteArrayInputStream).readChar();

statement is: org.evosuite.testcase.statements.ArrayStatement@b091e9a1 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[9]
statement is: org.evosuite.testcase.statements.AssignmentStatement@fb799589 type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[0] = (byte)12
statement is: java.io.ByteArrayInputStream([B)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.ByteArrayInputStream
statement code is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: readChar()C type is: class org.evosuite.testcase.statements.MethodStatement return type char
statement code is: char readChar = javaCharStream.readChar()
test data is: byte[] byteArray = new byte[9];
byteArray[0] = (byte)12;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
javaCharStream.readChar();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        byte[] byteArray = new byte[9];
        // Improved test data: Using more descriptive values to represent the situation being tested
        byteArray[0] = ((byte) (25));// 25 is a prime number, which is an unlikely value for a character in a string. This will help the reader understand the purpose of the test case better.

        ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
        JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
        javaCharStream.readChar();// The readChar() method reads a character from the input stream and returns it as an int value. In this case, the return value would be 25, which is a prime number. This will help the reader understand the purpose of the test case better. }}

    }
}
statement is: byte[] byteArray = new byte[9], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [9] Ct is: byte[] byteArray = new byte[9] isAssignment: false Array: new byte[9] Elements: []
lengths: [9] [9]
Their type are: class [B byte[]
statement is: // Improved test data: Using more descriptive values to represent the situation being tested
byteArray[0] = ((byte) (25))// 25 is a prime number, which is an unlikely value for a character in a string. This will help the reader understand the purpose of the test case better.
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : byteArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl byte Assignment:((byte) (25)) Ct is: // Improved test data: Using more descriptive values to represent the situation being tested
byteArray[0] = ((byte) (25))// 25 is a prime number, which is an unlikely value for a character in a string. This will help the reader understand the purpose of the test case better.

target : byteArray class spoon.support.reflect.code.CtLiteralImpl
statement is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.readChar()// The readChar() method reads a character from the input stream and returns it as an int value. In this case, the return value would be 25, which is a prime number. This will help the reader understand the purpose of the test case better. }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.readChar()// The readChar() method reads a character from the input stream and returns it as an int value. In this case, the return value would be 25, which is a prime number. This will help the reader understand the purpose of the test case better. }}
 target is: javaCharStream method is: readChar()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;)V callee: VariableReference: Statement 3, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 4
Matched Method is: readChar()C
TestCase is: byte[] byteArray = new byte[9];
int _int = 25;
byteArray[0] = (byte) _int;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
((JavaCharStream) byteArrayInputStream).readChar();

statement is: org.evosuite.testcase.statements.ArrayStatement@9679cc52 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[6]
statement is: org.evosuite.testcase.statements.AssignmentStatement@bef227b1 type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[2] = (byte)13
statement is: java.io.ByteArrayInputStream([B)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.ByteArrayInputStream
statement code is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(arg0)
statement is: read()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int read = byteArrayInputStream.read()
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: read()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int read = byteArrayInputStream.read()
statement is: BeginToken()C type is: class org.evosuite.testcase.statements.MethodStatement return type char
statement code is: char BeginToken = javaCharStream.BeginToken()
test data is: byte[] byteArray = new byte[6];
byteArray[2] = (byte)13;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
byteArrayInputStream.read();
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
byteArrayInputStream.read();
javaCharStream.BeginToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        byte[] byteArray = new byte[]{ 1, 2, 3, 4, 5, 6 };
        ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
        JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
    }
}
statement is: byte[] byteArray = new byte[]{ 1, 2, 3, 4, 5, 6 }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: byte[] byteArray = new byte[6] isAssignment: false Array: new byte[]{ 1, 2, 3, 4, 5, 6 } Elements: [1, 2, 3, 4, 5, 6]
lengths: [6] []
statement is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: java.io.ByteArrayInputStream([B)V
statement is: JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;)V
statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("m1>8@-")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: org.evosuite.testcase.statements.AssignmentStatement@720c0da type is: class org.evosuite.testcase.statements.AssignmentStatement return type int
statement code is: javaCharStream.inBuf = 12
statement is: readChar()C type is: class org.evosuite.testcase.statements.MethodStatement return type char
statement code is: char readChar = javaCharStream.readChar()
statement is: getEndColumn()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int endColumn = javaCharStream.getEndColumn()
test data is: StringReader stringReader = new StringReader("m1>8@-");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.inBuf = 12;
javaCharStream.readChar();
javaCharStream.getEndColumn();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("m1>8@-");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        javaCharStream.inBuf = 12;
        javaCharStream.readChar();
        javaCharStream.getEndColumn();
    }
}
statement is: StringReader stringReader = new StringReader("m1>8@-"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.inBuf = 12, class spoon.support.reflect.code.CtAssignmentImpl
statement is: javaCharStream.readChar(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.readChar() target is: javaCharStream method is: readChar()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 2
Matched Method is: readChar()C
statement is: javaCharStream.getEndColumn(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.getEndColumn() target is: javaCharStream method is: getEndColumn()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 2
Matched Method is: getEndColumn()I
TestCase is: String string = "m1>8@-";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
((JavaCharStream) stringReader).readChar();
((JavaCharStream) stringReader).getEndColumn();

statement is: org.evosuite.testcase.statements.ArrayStatement@baa8a651 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[2]
statement is: org.evosuite.testcase.statements.AssignmentStatement@43e5994c type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[0] = (byte)92
statement is: org.evosuite.testcase.statements.AssignmentStatement@8135d87 type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[1] = (byte)92
statement is: java.io.ByteArrayInputStream([B)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.ByteArrayInputStream
statement code is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: BeginToken()C type is: class org.evosuite.testcase.statements.MethodStatement return type char
statement code is: char BeginToken = javaCharStream.BeginToken()
statement is: readChar()C type is: class org.evosuite.testcase.statements.MethodStatement return type char
statement code is: char readChar = javaCharStream.readChar()
test data is: byte[] byteArray = new byte[2];
byteArray[0] = (byte)92;
byteArray[1] = (byte)92;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
javaCharStream.BeginToken();
javaCharStream.readChar();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        byte[] byteArray = new byte[]{ ((byte) (0x54)), ((byte) (0x68)) };
        ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
        JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
        javaCharStream.BeginToken();
        javaCharStream.readChar();
    }
}
statement is: byte[] byteArray = new byte[]{ ((byte) (0x54)), ((byte) (0x68)) }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: byte[] byteArray = new byte[2] isAssignment: false Array: new byte[]{ ((byte) (0x54)), ((byte) (0x68)) } Elements: [((byte) (0x54)), ((byte) (0x68))]
lengths: [2] []
statement is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: java.io.ByteArrayInputStream([B)V
statement is: JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;)V
statement is: javaCharStream.BeginToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.BeginToken() target is: javaCharStream method is: BeginToken()
statement is: javaCharStream.readChar(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.readChar() target is: javaCharStream method is: readChar()
statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("'jk K7=5>Q")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 0, 0)
statement is: ReInit(Ljava/io/Reader;III)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: javaCharStream.ReInit((Reader) arg0, 1, 569, 0)
statement is: readChar()C type is: class org.evosuite.testcase.statements.MethodStatement return type char
statement code is: char readChar = javaCharStream.readChar()
statement is: getColumn()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int column = javaCharStream.getColumn()
test data is: StringReader stringReader = new StringReader("'jk K7=5>Q");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 0, 0);
javaCharStream.ReInit((Reader) stringReader, 1, 569, 0);
javaCharStream.readChar();
javaCharStream.getColumn();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("'jk K7=5>Q");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, 0, 0);
        javaCharStream.ReInit(((Reader) (stringReader)), 1, 569, 0);
        javaCharStream.readChar();
        javaCharStream.getColumn();
    }
}
statement is: StringReader stringReader = new StringReader("'jk K7=5>Q"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, 0, 0), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.ReInit(((Reader) (stringReader)), 1, 569, 0), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.ReInit(((Reader) (stringReader)), 1, 569, 0) target is: javaCharStream method is: ReInit(Reader,int,int,int)
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 4
Matched Method is: ReInit(Ljava/io/Reader;III)V
statement is: javaCharStream.readChar(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.readChar() target is: javaCharStream method is: readChar()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 4
Matched Method is: readChar()C
statement is: javaCharStream.getColumn(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.getColumn() target is: javaCharStream method is: getColumn()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 4
Matched Method is: getColumn()I
TestCase is: String string = "'jk K7=5>Q";
StringReader stringReader = new StringReader(string);
int _int = 0;
int _int = 0;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int);
int _int = 1;
int _int = 569;
int _int = 0;
((JavaCharStream) stringReader).ReInit((Reader) stringReader, _int, _int, _int);
((JavaCharStream) stringReader).readChar();
((JavaCharStream) stringReader).getColumn();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("yuZSov")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: backup(I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: javaCharStream.backup(0)
statement is: GetImage()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String GetImage = javaCharStream.GetImage()
test data is: StringReader stringReader = new StringReader("yuZSov");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.backup(0);
javaCharStream.GetImage();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("yuZSov");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        javaCharStream.backup(0);
        String image = javaCharStream.GetImage();
    }
}
statement is: StringReader stringReader = new StringReader("yuZSov"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.backup(0), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.backup(0) target is: javaCharStream method is: backup(int)
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 2
Matched Method is: backup(I)V
statement is: String image = javaCharStream.GetImage(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.GetImage() target is: javaCharStream method is: GetImage()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 2
Matched Method is: GetImage()Ljava/lang/String;
TestCase is: String string = "yuZSov";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
int _int = 0;
((JavaCharStream) stringReader).backup(_int);
((JavaCharStream) stringReader).GetImage();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("8")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 11, 70)
statement is: GetSuffix(I)[C type is: class org.evosuite.testcase.statements.MethodStatement return type class [C
statement code is: char[] GetSuffix = javaCharStream.GetSuffix(11)
test data is: StringReader stringReader = new StringReader("8");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 11, 70);
javaCharStream.GetSuffix(11);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("123456789");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, 11, 70);
        javaCharStream.GetSuffix(11);
    }
}
statement is: StringReader stringReader = new StringReader("123456789"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, 11, 70), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.GetSuffix(11), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.GetSuffix(11) target is: javaCharStream method is: GetSuffix(int)
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 4
Matched Method is: GetSuffix(I)[C
TestCase is: String string = "123456789";
StringReader stringReader = new StringReader(string);
int _int = 11;
int _int = 70;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int);
int _int = 11;
((JavaCharStream) stringReader).GetSuffix(_int);

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: GetSuffix(I)[C type is: class org.evosuite.testcase.statements.MethodStatement return type class [C
statement code is: char[] GetSuffix = javaCharStream.GetSuffix(0)
test data is: StringReader stringReader = new StringReader("");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.GetSuffix(0);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("Testing 123!@#$%^&*()_+-=[]{}|;\':\"<>,./?`~");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        javaCharStream.GetSuffix(0);
    }
}
statement is: StringReader stringReader = new StringReader("Testing 123!@#$%^&*()_+-=[]{}|;\':\"<>,./?`~"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.GetSuffix(0), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.GetSuffix(0) target is: javaCharStream method is: GetSuffix(int)
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 2
Matched Method is: GetSuffix(I)[C
TestCase is: String string = "Testing 123!@#$%^&*()_+-=[]{}|;':\"<>,./?`~";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
int _int = 0;
((JavaCharStream) stringReader).GetSuffix(_int);

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("8")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 11, 70)
statement is: readChar()C type is: class org.evosuite.testcase.statements.MethodStatement return type char
statement code is: char readChar = javaCharStream.readChar()
statement is: adjustBeginLineColumn(II)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: javaCharStream.adjustBeginLineColumn(11, 98)
test data is: StringReader stringReader = new StringReader("8");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 11, 70);
javaCharStream.readChar();
javaCharStream.adjustBeginLineColumn(11, 98);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("The quick brown fox jumps over the lazy dog");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, 11, 70);
        javaCharStream.readChar();
        javaCharStream.adjustBeginLineColumn(11, 98);
    }
}
statement is: StringReader stringReader = new StringReader("The quick brown fox jumps over the lazy dog"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, 11, 70), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.readChar(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.readChar() target is: javaCharStream method is: readChar()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 4
Matched Method is: readChar()C
statement is: javaCharStream.adjustBeginLineColumn(11, 98), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.adjustBeginLineColumn(11, 98) target is: javaCharStream method is: adjustBeginLineColumn(int,int)
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 4
Matched Method is: adjustBeginLineColumn(II)V
TestCase is: String string = "The quick brown fox jumps over the lazy dog";
StringReader stringReader = new StringReader(string);
int _int = 11;
int _int = 70;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int);
((JavaCharStream) stringReader).readChar();
int _int = 11;
int _int = 98;
((JavaCharStream) stringReader).adjustBeginLineColumn(_int, _int);

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;III)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, (-2496), (-2496), 0)
statement is: adjustBeginLineColumn(II)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: javaCharStream.adjustBeginLineColumn((-2496), (-2496))
test data is: StringReader stringReader = new StringReader("");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-2496), (-2496), 0);
javaCharStream.adjustBeginLineColumn((-2496), (-2496));

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("This is a test string.");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, 0, 0, 0);
        javaCharStream.adjustBeginLineColumn(0, 0);
    }
}
statement is: StringReader stringReader = new StringReader("This is a test string."), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, 0, 0, 0), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.adjustBeginLineColumn(0, 0), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.adjustBeginLineColumn(0, 0) target is: javaCharStream method is: adjustBeginLineColumn(int,int)
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;III)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 5
Matched Method is: adjustBeginLineColumn(II)V
TestCase is: String string = "This is a test string.";
StringReader stringReader = new StringReader(string);
int _int = 0;
int _int = 0;
int _int = 0;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int, _int);
int _int = 0;
int _int = 0;
((JavaCharStream) stringReader).adjustBeginLineColumn(_int, _int);

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("m1>8@-")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: adjustBeginLineColumn(II)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: javaCharStream.adjustBeginLineColumn((-1241), (-1241))
statement is: adjustBeginLineColumn(II)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: javaCharStream.adjustBeginLineColumn((-1241), (-1241))
test data is: StringReader stringReader = new StringReader("m1>8@-");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.adjustBeginLineColumn((-1241), (-1241));
javaCharStream.adjustBeginLineColumn((-1241), (-1241));

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader input = new StringReader("m1>8@-");
        JavaCharStream javaCharStream = new JavaCharStream(input);
        javaCharStream.adjustBeginLineColumn(-1241, -1241);
        javaCharStream.adjustBeginLineColumn(-1241, -1241);
    }
}
statement is: StringReader input = new StringReader("m1>8@-"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(input), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.adjustBeginLineColumn(-1241, -1241), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.adjustBeginLineColumn(-1241, -1241) target is: javaCharStream method is: adjustBeginLineColumn(int,int)
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 2
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 2
Matched Method is: adjustBeginLineColumn(II)V
i 0 Parameters size() 0 Num of Method Parameters: 2
i 1 Parameters size() 0 Num of Method Parameters: 2
statement is: javaCharStream.adjustBeginLineColumn(-1241, -1241), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.adjustBeginLineColumn(-1241, -1241) target is: javaCharStream method is: adjustBeginLineColumn(int,int)
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 2
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 2
Matched Method is: adjustBeginLineColumn(II)V
i 0 Parameters size() 0 Num of Method Parameters: 2
i 1 Parameters size() 0 Num of Method Parameters: 2
TestCase is: String string = "m1>8@-";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
int _int = null;
int _int = null;
((JavaCharStream) stringReader).adjustBeginLineColumn(_int, _int);
int _int = null;
int _int = null;
((JavaCharStream) stringReader).adjustBeginLineColumn(_int, _int);

statement is: java.io.PipedInputStream()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.PipedInputStream
statement code is: PipedInputStream pipedInputStream = new PipedInputStream()
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: ReInit(Ljava/io/InputStream;III)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: javaCharStream.ReInit((InputStream) arg0, (-1318), (-1318), 1)
test data is: PipedInputStream pipedInputStream = new PipedInputStream();
JavaCharStream javaCharStream = new JavaCharStream(pipedInputStream);
javaCharStream.ReInit((InputStream) pipedInputStream, (-1318), (-1318), 1);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        PipedInputStream pipedInputStream = new PipedInputStream();
        JavaCharStream javaCharStream = new JavaCharStream(pipedInputStream);
        javaCharStream.ReInit(((InputStream) (pipedInputStream)), "Hello, World!", "UTF-8", 1);
        assertEquals(1, javaCharStream.getBeginLine());
        assertEquals(1, javaCharStream.getBeginColumn());
        assertEquals(-1, javaCharStream.getEndLine());
    }
}
statement is: PipedInputStream pipedInputStream = new PipedInputStream(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(pipedInputStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.ReInit(((InputStream) (pipedInputStream)), "Hello, World!", "UTF-8", 1), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.ReInit(((InputStream) (pipedInputStream)), "Hello, World!", "UTF-8", 1) target is: javaCharStream method is: ReInit(InputStream,java.lang.String,java.lang.String,int)
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 1
Matched Method is: ReInit(Ljava/io/InputStream;III)V
statement is: assertEquals(1, javaCharStream.getBeginLine()), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(1, javaCharStream.getBeginLine()) target is:  method is: assertEquals(int,<unknown>)
statement is: assertEquals(1, javaCharStream.getBeginColumn()), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(1, javaCharStream.getBeginColumn()) target is:  method is: assertEquals(int,<unknown>)
statement is: assertEquals(-1, javaCharStream.getEndLine()), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(-1, javaCharStream.getEndLine()) target is:  method is: assertEquals(int,<unknown>)
TestCase is: PipedInputStream pipedInputStream = new PipedInputStream();
JavaCharStream javaCharStream = new JavaCharStream(pipedInputStream);
String string = "Hello, World!";
String string = "UTF-8";
int _int = 1;
javaCharStream.ReInit((InputStream) pipedInputStream, (int) string, (int) string, _int);

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("m1>8@-")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: org.evosuite.testcase.statements.AssignmentStatement@93594195 type is: class org.evosuite.testcase.statements.AssignmentStatement return type boolean
statement code is: javaCharStream.prevCharIsLF = true
statement is: BeginToken()C type is: class org.evosuite.testcase.statements.MethodStatement return type char
statement code is: char BeginToken = javaCharStream.BeginToken()
test data is: StringReader stringReader = new StringReader("m1>8@-");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.prevCharIsLF = true;
javaCharStream.BeginToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("This is a sample input string for testing purposes");
        StandardTokenizer standardTokenizer = new StandardTokenizer(stringReader);
        standardTokenizer.prevCharIsLF = true;
        standardTokenizer.BeginToken();
    }
}
statement is: StringReader stringReader = new StringReader("This is a sample input string for testing purposes"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: StandardTokenizer standardTokenizer = new StandardTokenizer(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: standardTokenizer.prevCharIsLF = true, class spoon.support.reflect.code.CtAssignmentImpl
statement is: standardTokenizer.BeginToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: standardTokenizer.BeginToken() target is: standardTokenizer method is: BeginToken()
TestCase is: String string = "This is a sample input string for testing purposes";
StringReader stringReader = new StringReader(string);

statement is: org.evosuite.testcase.statements.ArrayStatement@14a4a60e type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[3]
statement is: org.evosuite.testcase.statements.AssignmentStatement@cc612c91 type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[0] = (byte)92
statement is: org.evosuite.testcase.statements.AssignmentStatement@96cfa056 type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[1] = (byte)92
statement is: java.io.ByteArrayInputStream([B)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.ByteArrayInputStream
statement code is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: readChar()C type is: class org.evosuite.testcase.statements.MethodStatement return type char
statement code is: char readChar = javaCharStream.readChar()
test data is: byte[] byteArray = new byte[3];
byteArray[0] = (byte)92;
byteArray[1] = (byte)92;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
javaCharStream.readChar();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        byte[] byteArray = new byte[]{ 127, -128, 0, 42 };
        ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
        JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
        javaCharStream.readChar();
    }
}
statement is: byte[] byteArray = new byte[]{ 127, -128, 0, 42 }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: byte[] byteArray = new byte[3] isAssignment: false Array: new byte[]{ 127, -128, 0, 42 } Elements: [127, -128, 0, 42]
lengths: [3] []
statement is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: java.io.ByteArrayInputStream([B)V
statement is: JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;)V
statement is: javaCharStream.readChar(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.readChar() target is: javaCharStream method is: readChar()
statement is: org.evosuite.testcase.statements.ArrayStatement@cbcb7346 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[3]
statement is: org.evosuite.testcase.statements.AssignmentStatement@6d41faea type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[0] = (byte)92
statement is: org.evosuite.testcase.statements.AssignmentStatement@a1cb19c2 type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[1] = (byte)92
statement is: org.evosuite.testcase.statements.AssignmentStatement@91921bc6 type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[2] = (byte)92
statement is: java.io.ByteArrayInputStream([B)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.ByteArrayInputStream
statement code is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: readChar()C type is: class org.evosuite.testcase.statements.MethodStatement return type char
statement code is: char readChar = javaCharStream.readChar()
test data is: byte[] byteArray = new byte[3];
byteArray[0] = (byte)92;
byteArray[1] = (byte)92;
byteArray[2] = (byte)92;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
javaCharStream.readChar();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data for the code snippet
        byte[] byteArray = new byte[]{ ((byte) (92)), ((byte) (92)), ((byte) (92)) };
        ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
        JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
        javaCharStream.readChar();
    }
}
statement is: // Improved test data for the code snippet
byte[] byteArray = new byte[]{ ((byte) (92)), ((byte) (92)), ((byte) (92)) }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: byte[] byteArray = new byte[3] isAssignment: false Array: new byte[]{ ((byte) (92)), ((byte) (92)), ((byte) (92)) } Elements: [((byte) (92)), ((byte) (92)), ((byte) (92))]
lengths: [3] []
statement is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: java.io.ByteArrayInputStream([B)V
statement is: JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;)V
statement is: javaCharStream.readChar(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.readChar() target is: javaCharStream method is: readChar()
statement is: org.evosuite.testcase.statements.ArrayStatement@a1ce45b2 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[2]
statement is: org.evosuite.testcase.statements.AssignmentStatement@c759c8cd type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[1] = (byte)92
statement is: java.io.ByteArrayInputStream([B)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.ByteArrayInputStream
statement code is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: BeginToken()C type is: class org.evosuite.testcase.statements.MethodStatement return type char
statement code is: char BeginToken = javaCharStream.BeginToken()
statement is: readChar()C type is: class org.evosuite.testcase.statements.MethodStatement return type char
statement code is: char readChar = javaCharStream.readChar()
test data is: byte[] byteArray = new byte[2];
byteArray[1] = (byte)92;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
javaCharStream.BeginToken();
javaCharStream.readChar();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        byte[] byteArray = new byte[2];
        // Using a random value for the first element of the byte array to simulate a real-world scenario where the input is not predictable.
        byteArray[0] = ((byte) (Math.random())) * 128;
        byteArray[1] = ((byte) (92));// Using a specific value for the second element of the byte array to simulate a specific scenario where the input has a known value.

        ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
        JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
        javaCharStream.BeginToken();
        javaCharStream.readChar();
    }
}
statement is: byte[] byteArray = new byte[2], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [2] Ct is: byte[] byteArray = new byte[2] isAssignment: false Array: new byte[2] Elements: []
lengths: [2] [2]
Their type are: class [B byte[]
statement is: // Using a random value for the first element of the byte array to simulate a real-world scenario where the input is not predictable.
byteArray[0] = ((byte) (Math.random())) * 128, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : byteArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl byte Assignment:((byte) (Math.random())) * 128 Ct is: // Using a random value for the first element of the byte array to simulate a real-world scenario where the input is not predictable.
byteArray[0] = ((byte) (Math.random())) * 128
target : byteArray class spoon.support.reflect.code.CtLiteralImpl
statement is: byteArray[1] = ((byte) (92))// Using a specific value for the second element of the byte array to simulate a specific scenario where the input has a known value.
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : byteArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl byte Assignment:((byte) (92)) Ct is: byteArray[1] = ((byte) (92))// Using a specific value for the second element of the byte array to simulate a specific scenario where the input has a known value.

target : byteArray class spoon.support.reflect.code.CtLiteralImpl
statement is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.BeginToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.BeginToken() target is: javaCharStream method is: BeginToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;)V callee: VariableReference: Statement 3, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 5
Matched Method is: BeginToken()C
statement is: javaCharStream.readChar(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.readChar() target is: javaCharStream method is: readChar()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;)V callee: VariableReference: Statement 3, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 5
Matched Method is: readChar()C
TestCase is: byte[] byteArray = new byte[2];
byteArray[1] = (byte)92;
int _int = 92;
byteArray[1] = (byte) _int;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
((JavaCharStream) byteArray[1]).BeginToken();
((JavaCharStream) byteArray[1]).readChar();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("m1628-")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: backup(I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: javaCharStream.backup((-1529))
test data is: StringReader stringReader = new StringReader("m1628-");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.backup((-1529));

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("This is a sample input string for testing the JavaCharStream class.");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        javaCharStream.backup(-100);
    }
}
statement is: StringReader stringReader = new StringReader("This is a sample input string for testing the JavaCharStream class."), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.backup(-100), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.backup(-100) target is: javaCharStream method is: backup(int)
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 2
Matched Method is: backup(I)V
i 0 Parameters size() 0 Num of Method Parameters: 1
TestCase is: String string = "This is a sample input string for testing the JavaCharStream class.";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
int _int = null;
((JavaCharStream) stringReader).backup(_int);

statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;III)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream((Reader) null, 1141, 95, 33)
statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("0qW3-Pdm|)s)o")
statement is: ReInit(Ljava/io/Reader;III)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: javaCharStream.ReInit((Reader) arg0, 18, 1141, 33)
statement is: ReadByte()C type is: class org.evosuite.testcase.statements.MethodStatement return type char
statement code is: char ReadByte = javaCharStream.ReadByte()
test data is: JavaCharStream javaCharStream = new JavaCharStream((Reader) null, 1141, 95, 33);
StringReader stringReader = new StringReader("0qW3-Pdm|)s)o");
javaCharStream.ReInit((Reader) stringReader, 18, 1141, 33);
javaCharStream.ReadByte();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream javaCharStream = new JavaCharStream(((Reader) (null)), 1141, 95, 33);
        StringReader stringReader = new StringReader("0qW3-Pdm|)s)o");
        javaCharStream.ReInit(((Reader) (stringReader)), 18, 1141, 33);
        javaCharStream.ReadByte();
    }
}
statement is: CharStream javaCharStream = new JavaCharStream(((Reader) (null)), 1141, 95, 33), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: StringReader stringReader = new StringReader("0qW3-Pdm|)s)o"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.ReInit(((Reader) (stringReader)), 18, 1141, 33), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.ReInit(((Reader) (stringReader)), 18, 1141, 33) target is: javaCharStream method is: ReInit(Reader,int,int,int)
statement is: javaCharStream.ReadByte(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.ReadByte() target is: javaCharStream method is: ReadByte()
TestCase is: int _int = 1141;
int _int = 95;
int _int = 33;
JavaCharStream javaCharStream = new JavaCharStream((Reader) _int, _int, _int, 33);
String string = "0qW3-Pdm|)s)o";
StringReader stringReader = new StringReader(string);

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("X8j;75(hQI|}")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: BeginToken()C type is: class org.evosuite.testcase.statements.MethodStatement return type char
statement code is: char BeginToken = javaCharStream.BeginToken()
statement is: BeginToken()C type is: class org.evosuite.testcase.statements.MethodStatement return type char
statement code is: char BeginToken = javaCharStream.BeginToken()
test data is: StringReader stringReader = new StringReader("X8j;75(hQI|}");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.BeginToken();
javaCharStream.BeginToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("This is a test string with special characters like !@#$%^&*()_+-=[]{}|;\':\"<>,./?`~");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        javaCharStream.BeginToken();
        javaCharStream.BeginToken();
    }
}
statement is: StringReader stringReader = new StringReader("This is a test string with special characters like !@#$%^&*()_+-=[]{}|;\':\"<>,./?`~"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.BeginToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.BeginToken() target is: javaCharStream method is: BeginToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 2
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 2
Matched Method is: BeginToken()C
statement is: javaCharStream.BeginToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.BeginToken() target is: javaCharStream method is: BeginToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 2
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 2
Matched Method is: BeginToken()C
TestCase is: String string = "This is a test string with special characters like !@#$%^&*()_+-=[]{}|;':\"<>,./?`~";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
((JavaCharStream) stringReader).BeginToken();
((JavaCharStream) stringReader).BeginToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("f&$<>dGcs")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;III)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, (-2209), (-2209), 0)
statement is: GetImage()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String GetImage = javaCharStream.GetImage()
test data is: StringReader stringReader = new StringReader("f&$<>dGcs");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-2209), (-2209), 0);
javaCharStream.GetImage();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("Hello World!");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, -2209, -2209, 0);
        javaCharStream.GetImage();
    }
}
statement is: StringReader stringReader = new StringReader("Hello World!"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, -2209, -2209, 0), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.GetImage(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.GetImage() target is: javaCharStream method is: GetImage()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;III)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 3
Matched Method is: GetImage()Ljava/lang/String;
TestCase is: String string = "Hello World!";
StringReader stringReader = new StringReader(string);
int _int = 0;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, (-2209), 0);
((JavaCharStream) stringReader).GetImage();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;III)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, (-875), 1, 1)
statement is: ReadByte()C type is: class org.evosuite.testcase.statements.MethodStatement return type char
statement code is: char ReadByte = javaCharStream.ReadByte()
test data is: StringReader stringReader = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-875), 1, 1);
javaCharStream.ReadByte();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, -875, 1, 1);
        javaCharStream.ReadByte();
    }
}
statement is: StringReader stringReader = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, -875, 1, 1), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.ReadByte(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.ReadByte() target is: javaCharStream method is: ReadByte()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;III)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 4
Matched Method is: ReadByte()C
TestCase is: String string = "com.soops.CEN4010.JMCA.JParser.JavaCharStream";
StringReader stringReader = new StringReader(string);
int _int = 1;
int _int = 1;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int, 1);
((JavaCharStream) stringReader).ReadByte();

statement is: org.evosuite.testcase.statements.ArrayStatement@312f7018 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[12]
statement is: java.io.ByteArrayInputStream([B)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.ByteArrayInputStream
statement code is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, (-36), (byte)125)
statement is: ReadByte()C type is: class org.evosuite.testcase.statements.MethodStatement return type char
statement code is: char ReadByte = javaCharStream.ReadByte()
test data is: byte[] byteArray = new byte[12];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, (-36), (byte)125);
javaCharStream.ReadByte();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        byte[] byteArray = new byte[]{ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 };
        ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
        JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, -36, ((byte) (125)));
        javaCharStream.ReadByte();
    }
}
statement is: byte[] byteArray = new byte[]{ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: byte[] byteArray = new byte[12] isAssignment: false Array: new byte[]{ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 } Elements: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]
lengths: [12] []
statement is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: java.io.ByteArrayInputStream([B)V
statement is: JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, -36, ((byte) (125))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.ReadByte(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.ReadByte() target is: javaCharStream method is: ReadByte()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;II)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 1
Matched Method is: ReadByte()C
TestCase Could not be added: ReadByte()C
TestCase is: int _int = 125;
JavaCharStream javaCharStream = new JavaCharStream((InputStream) _int, (-36), (int) (byte)125);

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("z{KsBM_&>%")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, (-3280), (-3280))
statement is: org.evosuite.testcase.statements.ArrayStatement@183f12a7 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [I
statement code is: int[] intArray = new int[5]
statement is: org.evosuite.testcase.statements.AssignmentStatement@e28603b9 type is: class org.evosuite.testcase.statements.AssignmentStatement return type int
statement code is: intArray[0] = (-1)
statement is: org.evosuite.testcase.statements.AssignmentStatement@5d282381 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [I
statement code is: javaCharStream.bufcolumn = intArray
statement is: getBeginColumn()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int beginColumn = javaCharStream.getBeginColumn()
test data is: StringReader stringReader = new StringReader("z{KsBM_&>%");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-3280), (-3280));
int[] intArray = new int[5];
intArray[0] = (-1);
javaCharStream.bufcolumn = intArray;
javaCharStream.getBeginColumn();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream javaCharStream = new JavaCharStream(stringReader, -3280, -3280);
        int[] intArray = new int[5];
        intArray[0] = 10;// Changed from (-1) to a more descriptive value.

        javaCharStream.bufcolumn = intArray;
        javaCharStream.getBeginColumn();
    }
}
statement is: CharStream javaCharStream = new JavaCharStream(stringReader, -3280, -3280), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V
statement is: int[] intArray = new int[5], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [5] Ct is: int[] intArray = new int[5] isAssignment: false Array: new int[5] Elements: []
lengths: [5] [5]
Their type are: class [I int[]
statement is: intArray[0] = 10// Changed from (-1) to a more descriptive value.
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : intArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl int Assignment:10 Ct is: intArray[0] = 10// Changed from (-1) to a more descriptive value.

target : intArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@adf63221
statement is: javaCharStream.bufcolumn = intArray, class spoon.support.reflect.code.CtAssignmentImpl
statement is: javaCharStream.getBeginColumn(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.getBeginColumn() target is: javaCharStream method is: getBeginColumn()
* this is vulnerable: int _int = 10
TestCase is: int[] intArray = new int[5];
int _int = 10;

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("Dlf[Y3 K>D-r.")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 2, 2)
statement is: readChar()C type is: class org.evosuite.testcase.statements.MethodStatement return type char
statement code is: char readChar = javaCharStream.readChar()
statement is: getBeginColumn()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int beginColumn = javaCharStream.getBeginColumn()
test data is: StringReader stringReader = new StringReader("Dlf[Y3 K>D-r.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2, 2);
javaCharStream.readChar();
javaCharStream.getBeginColumn();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("Dlf[Y3 K>D-r.");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2, 2);
        javaCharStream.readChar();
        javaCharStream.getBeginColumn();
        // Improved test data:
        StringReader stringReader = new StringReader("This is a test string with multiple words.");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2, 2);
        javaCharStream.readChar();
        javaCharStream.getBeginColumn();
    }
}
statement is: StringReader stringReader = new StringReader("Dlf[Y3 K>D-r."), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2, 2), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.readChar(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.readChar() target is: javaCharStream method is: readChar()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 4
Matched Method is: readChar()C
statement is: javaCharStream.getBeginColumn(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.getBeginColumn() target is: javaCharStream method is: getBeginColumn()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 4
Matched Method is: getBeginColumn()I
statement is: // Improved test data:
StringReader stringReader = new StringReader("This is a test string with multiple words."), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2, 2), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.readChar(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.readChar() target is: javaCharStream method is: readChar()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 11
Matched Method is: readChar()C
statement is: javaCharStream.getBeginColumn(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.getBeginColumn() target is: javaCharStream method is: getBeginColumn()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 11
Matched Method is: getBeginColumn()I
TestCase is: String string = "Dlf[Y3 K>D-r.";
StringReader stringReader = new StringReader(string);
int _int = 2;
int _int = 2;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int);
((JavaCharStream) stringReader).readChar();
((JavaCharStream) stringReader).getBeginColumn();
String string = "This is a test string with multiple words.";
StringReader stringReader = new StringReader(string);
int _int = 2;
int _int = 2;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int);
((JavaCharStream) stringReader).readChar();
((JavaCharStream) stringReader).getBeginColumn();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("^")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, (-1166), 63)
statement is: BeginToken()C type is: class org.evosuite.testcase.statements.MethodStatement return type char
statement code is: char BeginToken = javaCharStream.BeginToken()
statement is: getBeginLine()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int beginLine = javaCharStream.getBeginLine()
test data is: StringReader stringReader = new StringReader("^");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-1166), 63);
javaCharStream.BeginToken();
javaCharStream.getBeginLine();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("^");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, -1166, 63);
        javaCharStream.BeginToken();
        javaCharStream.getBeginLine();
    }
}
statement is: StringReader stringReader = new StringReader("^"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, -1166, 63), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.BeginToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.BeginToken() target is: javaCharStream method is: BeginToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 3
Matched Method is: BeginToken()C
statement is: javaCharStream.getBeginLine(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.getBeginLine() target is: javaCharStream method is: getBeginLine()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 3
Matched Method is: getBeginLine()I
TestCase is: String string = "^";
StringReader stringReader = new StringReader(string);
int _int = 63;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, 63);
((JavaCharStream) stringReader).BeginToken();
((JavaCharStream) stringReader).getBeginLine();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("y(>")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 1595, 1595)
statement is: BeginToken()C type is: class org.evosuite.testcase.statements.MethodStatement return type char
statement code is: char BeginToken = javaCharStream.BeginToken()
statement is: adjustBeginLineColumn(II)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: javaCharStream.adjustBeginLineColumn(1595, (-966))
statement is: getColumn()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int column = javaCharStream.getColumn()
test data is: StringReader stringReader = new StringReader("y(>");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1595, 1595);
javaCharStream.BeginToken();
javaCharStream.adjustBeginLineColumn(1595, (-966));
javaCharStream.getColumn();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("This is a sample input text");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1024, 1024);
        javaCharStream.BeginToken();
        javaCharStream.adjustBeginLineColumn(1024, -966);
        javaCharStream.getColumn();
    }
}
statement is: StringReader stringReader = new StringReader("This is a sample input text"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1024, 1024), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.BeginToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.BeginToken() target is: javaCharStream method is: BeginToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 4
Matched Method is: BeginToken()C
statement is: javaCharStream.adjustBeginLineColumn(1024, -966), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.adjustBeginLineColumn(1024, -966) target is: javaCharStream method is: adjustBeginLineColumn(int,int)
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 4
Matched Method is: adjustBeginLineColumn(II)V
i 1 Parameters size() 1 Num of Method Parameters: 2
statement is: javaCharStream.getColumn(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.getColumn() target is: javaCharStream method is: getColumn()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 4
Matched Method is: getColumn()I
TestCase is: String string = "This is a sample input text";
StringReader stringReader = new StringReader(string);
int _int = 1024;
int _int = 1024;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int);
((JavaCharStream) stringReader).BeginToken();
int _int = 1024;
int _int = null;
((JavaCharStream) stringReader).adjustBeginLineColumn(_int, _int);
((JavaCharStream) stringReader).getColumn();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("m1>8@-")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: org.evosuite.testcase.statements.AssignmentStatement@56f2b5d9 type is: class org.evosuite.testcase.statements.AssignmentStatement return type int
statement code is: javaCharStream.inBuf = 12
statement is: BeginToken()C type is: class org.evosuite.testcase.statements.MethodStatement return type char
statement code is: char BeginToken = javaCharStream.BeginToken()
statement is: getColumn()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int column = javaCharStream.getColumn()
test data is: StringReader stringReader = new StringReader("m1>8@-");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.inBuf = 12;
javaCharStream.BeginToken();
javaCharStream.getColumn();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("m1>8@-");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        javaCharStream.inBuf = 42;// Changed the value of inBuf to a more illustrative example, such as a prime number.

        javaCharStream.BeginToken();
        javaCharStream.getColumn();
    }
}
statement is: StringReader stringReader = new StringReader("m1>8@-"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.inBuf = 42// Changed the value of inBuf to a more illustrative example, such as a prime number.
, class spoon.support.reflect.code.CtAssignmentImpl
statement is: javaCharStream.BeginToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.BeginToken() target is: javaCharStream method is: BeginToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 2
Matched Method is: BeginToken()C
statement is: javaCharStream.getColumn(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.getColumn() target is: javaCharStream method is: getColumn()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 2
Matched Method is: getColumn()I
TestCase is: String string = "m1>8@-";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
((JavaCharStream) stringReader).BeginToken();
((JavaCharStream) stringReader).getColumn();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("m1>8@-")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;III)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, (-1), (-1), 1)
statement is: BeginToken()C type is: class org.evosuite.testcase.statements.MethodStatement return type char
statement code is: char BeginToken = javaCharStream.BeginToken()
statement is: getEndColumn()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int endColumn = javaCharStream.getEndColumn()
test data is: StringReader stringReader = new StringReader("m1>8@-");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-1), (-1), 1);
javaCharStream.BeginToken();
javaCharStream.getEndColumn();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader2 = new StringReader("m1>8@-");
        JavaCharStream javaCharStream2 = new JavaCharStream(stringReader2, 5, 3, 1);
        javaCharStream2.BeginToken();
        javaCharStream2.getEndColumn();
        // Improved test data 2
        StringReader stringReader3 = new StringReader("m1>8@-");
        JavaCharStream javaCharStream3 = new JavaCharStream(stringReader3, 7, 4, 1);
        javaCharStream3.BeginToken();
        javaCharStream3.getEndColumn();
    }
}
statement is: StringReader stringReader2 = new StringReader("m1>8@-"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream2 = new JavaCharStream(stringReader2, 5, 3, 1), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream2.BeginToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream2.BeginToken() target is: javaCharStream2 method is: BeginToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;III)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 5
Matched Method is: BeginToken()C
statement is: javaCharStream2.getEndColumn(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream2.getEndColumn() target is: javaCharStream2 method is: getEndColumn()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;III)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 5
Matched Method is: getEndColumn()I
statement is: // Improved test data 2
StringReader stringReader3 = new StringReader("m1>8@-"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream3 = new JavaCharStream(stringReader3, 7, 4, 1), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream3.BeginToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream3.BeginToken() target is: javaCharStream3 method is: BeginToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;III)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 13
Matched Method is: BeginToken()C
statement is: javaCharStream3.getEndColumn(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream3.getEndColumn() target is: javaCharStream3 method is: getEndColumn()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;III)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 13
Matched Method is: getEndColumn()I
TestCase is: String string = "m1>8@-";
StringReader stringReader = new StringReader(string);
int _int = 5;
int _int = 3;
int _int = 1;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int, _int);
((JavaCharStream) stringReader).BeginToken();
((JavaCharStream) stringReader).getEndColumn();
String string = "m1>8@-";
StringReader stringReader = new StringReader(string);
int _int = 7;
int _int = 4;
int _int = 1;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int, _int);
((JavaCharStream) stringReader).BeginToken();
((JavaCharStream) stringReader).getEndColumn();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("X8j;75(hQI|}")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: BeginToken()C type is: class org.evosuite.testcase.statements.MethodStatement return type char
statement code is: char BeginToken = javaCharStream.BeginToken()
statement is: getEndColumn()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int endColumn = javaCharStream.getEndColumn()
test data is: StringReader stringReader = new StringReader("X8j;75(hQI|}");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.BeginToken();
javaCharStream.getEndColumn();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream javaCharStream = new JavaCharStream(stringReader);
        javaCharStream.BeginToken();
        int endColumn = javaCharStream.getEndColumn();
        // Improved test data:
        int[] columnArray = new int[]{ 1, 2, 3, 4, 5 };
        String[] tokenArray = new String[]{ "X8j", "75", "(hQI|}" };
        for (int i = 0; i < columnArray.length; i++) {
            javaCharStream.setEndColumn(columnArray[i]);
            String token = javaCharStream.getToken();
            assertEquals(token, tokenArray[i]);
        }
    }
}
statement is: CharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V
statement is: javaCharStream.BeginToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.BeginToken() target is: javaCharStream method is: BeginToken()
statement is: int endColumn = javaCharStream.getEndColumn(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.getEndColumn() target is: javaCharStream method is: getEndColumn()
statement is: // Improved test data:
int[] columnArray = new int[]{ 1, 2, 3, 4, 5 }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
statement is: String[] tokenArray = new String[]{ "X8j", "75", "(hQI|}" }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
statement is: for (int i = 0; i < columnArray.length; i++) {
    javaCharStream.setEndColumn(columnArray[i]);
    String token = javaCharStream.getToken();
    assertEquals(token, tokenArray[i]);
}, class spoon.support.reflect.code.CtForImpl
statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("X8j;75(hQI|}")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: BeginToken()C type is: class org.evosuite.testcase.statements.MethodStatement return type char
statement code is: char BeginToken = javaCharStream.BeginToken()
statement is: adjustBeginLineColumn(II)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: javaCharStream.adjustBeginLineColumn((-1241), (-1241))
statement is: getEndLine()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int endLine = javaCharStream.getEndLine()
test data is: StringReader stringReader = new StringReader("X8j;75(hQI|}");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.BeginToken();
javaCharStream.adjustBeginLineColumn((-1241), (-1241));
javaCharStream.getEndLine();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream javaCharStream = new JavaCharStream(stringReader);
        javaCharStream.BeginToken();
        javaCharStream.adjustBeginLineColumn(-1241, -1241);
        javaCharStream.getEndLine();
    }
}
statement is: CharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V
statement is: javaCharStream.BeginToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.BeginToken() target is: javaCharStream method is: BeginToken()
statement is: javaCharStream.adjustBeginLineColumn(-1241, -1241), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.adjustBeginLineColumn(-1241, -1241) target is: javaCharStream method is: adjustBeginLineColumn(int,int)
statement is: javaCharStream.getEndLine(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.getEndLine() target is: javaCharStream method is: getEndLine()
statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("m1>8@-")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: readChar()C type is: class org.evosuite.testcase.statements.MethodStatement return type char
statement code is: char readChar = javaCharStream.readChar()
statement is: getEndLine()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int endLine = javaCharStream.getEndLine()
test data is: StringReader stringReader = new StringReader("m1>8@-");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.readChar();
javaCharStream.getEndLine();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("m1>8@-");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        javaCharStream.readChar();
        javaCharStream.getEndLine();
    }
}
statement is: StringReader stringReader = new StringReader("m1>8@-"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.readChar(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.readChar() target is: javaCharStream method is: readChar()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 2
Matched Method is: readChar()C
statement is: javaCharStream.getEndLine(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.getEndLine() target is: javaCharStream method is: getEndLine()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 2
Matched Method is: getEndLine()I
TestCase is: String string = "m1>8@-";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
((JavaCharStream) stringReader).readChar();
((JavaCharStream) stringReader).getEndLine();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader(".")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;III)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 2915, 2915, 2915)
statement is: org.evosuite.testcase.statements.AssignmentStatement@f43c8a89 type is: class org.evosuite.testcase.statements.AssignmentStatement return type int
statement code is: javaCharStream.inBuf = 2915
statement is: BeginToken()C type is: class org.evosuite.testcase.statements.MethodStatement return type char
statement code is: char BeginToken = javaCharStream.BeginToken()
statement is: getEndLine()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int endLine = javaCharStream.getEndLine()
test data is: StringReader stringReader = new StringReader(".");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2915, 2915, 2915);
javaCharStream.inBuf = 2915;
javaCharStream.BeginToken();
javaCharStream.getEndLine();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("This is a test string");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2915, 2915, "testFile.txt");
        javaCharStream.inBuf = 2915;
        javaCharStream.BeginToken();
        javaCharStream.getEndLine();
    }
}
statement is: StringReader stringReader = new StringReader("This is a test string"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2915, 2915, "testFile.txt"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.inBuf = 2915, class spoon.support.reflect.code.CtAssignmentImpl
statement is: javaCharStream.BeginToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.BeginToken() target is: javaCharStream method is: BeginToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;III)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 5
Matched Method is: BeginToken()C
statement is: javaCharStream.getEndLine(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.getEndLine() target is: javaCharStream method is: getEndLine()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;III)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 5
Matched Method is: getEndLine()I
TestCase is: String string = "This is a test string";
StringReader stringReader = new StringReader(string);
int _int = 2915;
int _int = 2915;
String string = "testFile.txt";
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int, (int) string);
((JavaCharStream) stringReader).BeginToken();
((JavaCharStream) stringReader).getEndLine();

statement is: org.evosuite.testcase.statements.ArrayStatement@79b42ad8 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[12]
statement is: java.io.ByteArrayInputStream([B)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.ByteArrayInputStream
statement code is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, (-36), (byte)125)
statement is: BeginToken()C type is: class org.evosuite.testcase.statements.MethodStatement return type char
statement code is: char BeginToken = javaCharStream.BeginToken()
statement is: getLine()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int line = javaCharStream.getLine()
test data is: byte[] byteArray = new byte[12];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, (-36), (byte)125);
javaCharStream.BeginToken();
javaCharStream.getLine();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        byte[] byteArray = new byte[]{ 127, -36, 125 };
        ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
        JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, -36, ((byte) (125)));
        javaCharStream.BeginToken();
        javaCharStream.getLine();
    }
}
statement is: byte[] byteArray = new byte[]{ 127, -36, 125 }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: byte[] byteArray = new byte[12] isAssignment: false Array: new byte[]{ 127, -36, 125 } Elements: [127, -36, 125]
lengths: [12] []
statement is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: java.io.ByteArrayInputStream([B)V
statement is: JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, -36, ((byte) (125))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.BeginToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.BeginToken() target is: javaCharStream method is: BeginToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;II)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 1
Matched Method is: BeginToken()C
TestCase Could not be added: BeginToken()C
statement is: javaCharStream.getLine(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.getLine() target is: javaCharStream method is: getLine()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;II)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 1
Matched Method is: getLine()I
TestCase Could not be added: getLine()I
TestCase is: int _int = 125;
JavaCharStream javaCharStream = new JavaCharStream((InputStream) _int, (-36), (int) (byte)125);

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("aDLH~BRS.j9f6(")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 12, 1)
statement is: BeginToken()C type is: class org.evosuite.testcase.statements.MethodStatement return type char
statement code is: char BeginToken = javaCharStream.BeginToken()
statement is: getLine()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int line = javaCharStream.getLine()
test data is: StringReader stringReader = new StringReader("aDLH~BRS.j9f6(");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 12, 1);
javaCharStream.BeginToken();
javaCharStream.getLine();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("aDLH~BRS.j9f6(1234567890");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, 12, 1);
        javaCharStream.BeginToken();
        javaCharStream.getLine();
    }
}
statement is: StringReader stringReader = new StringReader("aDLH~BRS.j9f6(1234567890"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, 12, 1), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.BeginToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.BeginToken() target is: javaCharStream method is: BeginToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 4
Matched Method is: BeginToken()C
statement is: javaCharStream.getLine(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.getLine() target is: javaCharStream method is: getLine()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 4
Matched Method is: getLine()I
TestCase is: String string = "aDLH~BRS.j9f6(1234567890";
StringReader stringReader = new StringReader(string);
int _int = 12;
int _int = 1;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int);
((JavaCharStream) stringReader).BeginToken();
((JavaCharStream) stringReader).getLine();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader(".")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;III)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 2915, 2915, 2915)
statement is: org.evosuite.testcase.statements.AssignmentStatement@85a8c8e type is: class org.evosuite.testcase.statements.AssignmentStatement return type int
statement code is: javaCharStream.inBuf = 2915
statement is: BeginToken()C type is: class org.evosuite.testcase.statements.MethodStatement return type char
statement code is: char BeginToken = javaCharStream.BeginToken()
statement is: getLine()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int line = javaCharStream.getLine()
test data is: StringReader stringReader = new StringReader(".");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2915, 2915, 2915);
javaCharStream.inBuf = 2915;
javaCharStream.BeginToken();
javaCharStream.getLine();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("This is a sample input string.");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2915, 2915, 2915);
        javaCharStream.inBuf = 2915;
        javaCharStream.BeginToken();
        javaCharStream.getLine();
    }
}
statement is: StringReader stringReader = new StringReader("This is a sample input string."), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2915, 2915, 2915), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.inBuf = 2915, class spoon.support.reflect.code.CtAssignmentImpl
statement is: javaCharStream.BeginToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.BeginToken() target is: javaCharStream method is: BeginToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;III)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 5
Matched Method is: BeginToken()C
statement is: javaCharStream.getLine(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.getLine() target is: javaCharStream method is: getLine()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;III)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 5
Matched Method is: getLine()I
TestCase is: String string = "This is a sample input string.";
StringReader stringReader = new StringReader(string);
int _int = 2915;
int _int = 2915;
int _int = 2915;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int, _int);
((JavaCharStream) stringReader).BeginToken();
((JavaCharStream) stringReader).getLine();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, (-5557), (-5557))
statement is: org.evosuite.testcase.statements.AssignmentStatement@29e0011c type is: class org.evosuite.testcase.statements.AssignmentStatement return type int
statement code is: javaCharStream.bufpos = 1
statement is: ExpandBuff(Z)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: javaCharStream.ExpandBuff(true)
test data is: StringReader stringReader = new StringReader("");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-5557), (-5557));
javaCharStream.bufpos = 1;
javaCharStream.ExpandBuff(true);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("This is a sample input for testing purposes.");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, -5557, -5557);
        javaCharStream.bufpos = 1;
        javaCharStream.ExpandBuff(true);
    }
}
statement is: StringReader stringReader = new StringReader("This is a sample input for testing purposes."), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, -5557, -5557), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.bufpos = 1, class spoon.support.reflect.code.CtAssignmentImpl
statement is: javaCharStream.ExpandBuff(true), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.ExpandBuff(true) target is: javaCharStream method is: ExpandBuff(boolean)
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 2
Matched Method is: ExpandBuff(Z)V
TestCase is: String string = "This is a sample input for testing purposes.";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-5557), (-5557));
boolean _boolean = true;
((JavaCharStream) stringReader).ExpandBuff(_boolean);

statement is: java.io.PipedInputStream()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.PipedInputStream
statement code is: PipedInputStream pipedInputStream = new PipedInputStream()
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;III)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 1355, 11, 1355)
test data is: PipedInputStream pipedInputStream = new PipedInputStream();
JavaCharStream javaCharStream = new JavaCharStream(pipedInputStream, 1355, 11, 1355);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        PipedInputStream pipedInputStream = new PipedInputStream();
        JavaCharStream javaCharStream = new JavaCharStream(pipedInputStream, 1355, 11, 1355);
        // Improved test data
        PipedInputStream pipedInputStream = new PipedInputStream("This is a sample input stream");
        JavaCharStream javaCharStream = new JavaCharStream(pipedInputStream, 1355, 11, 1355);
    }
}
statement is: PipedInputStream pipedInputStream = new PipedInputStream(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(pipedInputStream, 1355, 11, 1355), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: // Improved test data
PipedInputStream pipedInputStream = new PipedInputStream("This is a sample input stream"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(pipedInputStream, 1355, 11, 1355), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase is: PipedInputStream pipedInputStream = new PipedInputStream();
int _int = 1355;
int _int = 11;
int _int = 1355;
JavaCharStream javaCharStream = new JavaCharStream(pipedInputStream, _int, _int, _int);
int _int = 1355;
int _int = 11;
int _int = 1355;
JavaCharStream javaCharStream = new JavaCharStream(pipedInputStream, _int, _int, _int);

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("2^")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;III)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 40, 72, 40)
statement is: UpdateLineColumn(C)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: javaCharStream.UpdateLineColumn('2')
test data is: StringReader stringReader = new StringReader("2^");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 40, 72, 40);
javaCharStream.UpdateLineColumn('2');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("2^");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, 40, 72, 40);
        javaCharStream.UpdateLineColumn('2');
        // Improved test data
        int numberOfLines = 3;// the number of lines in the input string

        String[] lineContents = new String[]{ "2^", "abc", "def" };// the contents of each line in the input string

        char[][] characters = new char[][]{ new char[]{ '2', '^' }, new char[]{ 'a', 'b', 'c' }, new char[]{ 'd', 'e', 'f' } };// the characters in each line of the input string

        // Assertions to verify the correctness of the test data
        assertEquals(numberOfLines, javaCharStream.getNumberOfLines());
        for (int i = 0; i < numberOfLines; i++) {
            assertEquals(lineContents[i], javaCharStream.readLine(i));
        }
        for (int i = 0; i < numberOfLines; i++) {
            for (char c : characters[i]) {
                assertTrue(javaCharStream.readCharacter(c, i));
            }
        }
    }
}
statement is: StringReader stringReader = new StringReader("2^"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, 40, 72, 40), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.UpdateLineColumn('2'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.UpdateLineColumn('2') target is: javaCharStream method is: UpdateLineColumn(char)
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;III)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 5
Matched Method is: UpdateLineColumn(C)V
statement is: // Improved test data
int numberOfLines = 3// the number of lines in the input string
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String[] lineContents = new String[]{ "2^", "abc", "def" }// the contents of each line in the input string
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
statement is: char[][] characters = new char[][]{ new char[]{ '2', '^' }, new char[]{ 'a', 'b', 'c' }, new char[]{ 'd', 'e', 'f' } }// the characters in each line of the input string
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
statement is: // Assertions to verify the correctness of the test data
assertEquals(numberOfLines, javaCharStream.getNumberOfLines()), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Assertions to verify the correctness of the test data
assertEquals(numberOfLines, javaCharStream.getNumberOfLines()) target is:  method is: assertEquals(int,<unknown>)
statement is: for (int i = 0; i < numberOfLines; i++) {
    assertEquals(lineContents[i], javaCharStream.readLine(i));
}, class spoon.support.reflect.code.CtForImpl
statement is: for (int i = 0; i < numberOfLines; i++) {
    for (char c : characters[i]) {
        assertTrue(javaCharStream.readCharacter(c, i));
    }
}, class spoon.support.reflect.code.CtForImpl
* this is vulnerable: int _int = 3
TestCase is: String string = "2^";
StringReader stringReader = new StringReader(string);
int _int = 40;
int _int = 72;
int _int = 40;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int, _int);
char _char = '2';
((JavaCharStream) stringReader).UpdateLineColumn(_char);
int _int = 3;

* test suite isTestSuite: 204
Test 0: 
StringReader stringReader = new StringReader("m1>8@-");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
FileDescriptor fileDescriptor = new FileDescriptor();
MockFileInputStream mockFileInputStream = new MockFileInputStream(fileDescriptor);
javaCharStream.ReInit((InputStream) mockFileInputStream, (-1), 1085);
Test 1: 
PipedInputStream pipedInputStream = new PipedInputStream();
JavaCharStream javaCharStream = new JavaCharStream(pipedInputStream);
StringReader stringReader = new StringReader("=dW[)|0G4`H{do$");
javaCharStream.ReInit((Reader) stringReader);
Test 2: 
StringReader stringReader = new StringReader("Dlf[Y3 K>D-r.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2, 2);
javaCharStream.getBeginColumn();
Test 3: 
StringReader stringReader = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
FileDescriptor fileDescriptor = new FileDescriptor();
MockFileInputStream mockFileInputStream = new MockFileInputStream(fileDescriptor);
javaCharStream.ReInit((InputStream) mockFileInputStream);
Test 4: 
StringReader stringReader = new StringReader("m1>8@-");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.ReInit((Reader) stringReader, (-1), (-1));
Test 5: 
StringReader stringReader = new StringReader("dEG,");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.getBeginLine();
Test 6: 
StringReader stringReader = new StringReader("");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.Done();
// Undeclared exception!
try { 
  javaCharStream.ReInit((Reader) stringReader, (-1), (-1), (-1));
  fail("Expecting exception: NegativeArraySizeException");

} catch(NegativeArraySizeException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 7: 
JavaCharStream.hexval('0');
Test 8: 
try { 
  JavaCharStream.hexval('\u0000');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 9: 
JavaCharStream.hexval('1');
Test 10: 
JavaCharStream.hexval('2');
Test 11: 
JavaCharStream.hexval('3');
Test 12: 
JavaCharStream.hexval('4');
Test 13: 
JavaCharStream.hexval('5');
Test 14: 
JavaCharStream.hexval('6');
Test 15: 
JavaCharStream.hexval('7');
Test 16: 
JavaCharStream.hexval('8');
Test 17: 
JavaCharStream.hexval('9');
Test 18: 
try { 
  JavaCharStream.hexval(':');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 19: 
try { 
  JavaCharStream.hexval(';');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 20: 
try { 
  JavaCharStream.hexval('<');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 21: 
try { 
  JavaCharStream.hexval('=');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 22: 
try { 
  JavaCharStream.hexval('>');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 23: 
try { 
  JavaCharStream.hexval('?');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 24: 
try { 
  JavaCharStream.hexval('@');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 25: 
JavaCharStream.hexval('A');
Test 26: 
JavaCharStream.hexval('B');
Test 27: 
JavaCharStream.hexval('C');
Test 28: 
JavaCharStream.hexval('D');
Test 29: 
JavaCharStream.hexval('E');
Test 30: 
JavaCharStream.hexval('F');
Test 31: 
try { 
  JavaCharStream.hexval('G');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 32: 
try { 
  JavaCharStream.hexval('H');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 33: 
try { 
  JavaCharStream.hexval('I');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 34: 
try { 
  JavaCharStream.hexval('J');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 35: 
try { 
  JavaCharStream.hexval('K');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 36: 
try { 
  JavaCharStream.hexval('L');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 37: 
try { 
  JavaCharStream.hexval('M');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 38: 
try { 
  JavaCharStream.hexval('N');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 39: 
try { 
  JavaCharStream.hexval('O');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 40: 
try { 
  JavaCharStream.hexval('P');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 41: 
try { 
  JavaCharStream.hexval('Q');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 42: 
try { 
  JavaCharStream.hexval('R');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 43: 
try { 
  JavaCharStream.hexval('S');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 44: 
try { 
  JavaCharStream.hexval('T');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 45: 
try { 
  JavaCharStream.hexval('U');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 46: 
try { 
  JavaCharStream.hexval('V');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 47: 
try { 
  JavaCharStream.hexval('W');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 48: 
try { 
  JavaCharStream.hexval('X');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 49: 
try { 
  JavaCharStream.hexval('Y');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 50: 
try { 
  JavaCharStream.hexval('Z');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 51: 
try { 
  JavaCharStream.hexval('[');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 52: 
try { 
  JavaCharStream.hexval('\\');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 53: 
try { 
  JavaCharStream.hexval(']');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 54: 
try { 
  JavaCharStream.hexval('^');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 55: 
try { 
  JavaCharStream.hexval('_');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 56: 
try { 
  JavaCharStream.hexval('`');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 57: 
JavaCharStream.hexval('a');
Test 58: 
JavaCharStream.hexval('b');
Test 59: 
JavaCharStream.hexval('c');
Test 60: 
JavaCharStream.hexval('d');
Test 61: 
JavaCharStream.hexval('e');
Test 62: 
JavaCharStream.hexval('f');
Test 63: 
StringReader stringReader = new StringReader("dEG,");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.BeginToken();
javaCharStream.getBeginLine();
Test 64: 
StringReader stringReader = new StringReader(".");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2915, 2915, 2915);
javaCharStream.BeginToken();
try { 
  javaCharStream.FillBuff();
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 65: 
StringReader stringReader = new StringReader(",.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-2372), (-2372));
javaCharStream.backup(71);
javaCharStream.BeginToken();
javaCharStream.AdjustBuffSize();
Test 66: 
StringReader stringReader = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-875), 1, 1);
javaCharStream.readChar();
javaCharStream.backup(1);
javaCharStream.BeginToken();
Test 67: 
StringReader stringReader = new StringReader("m1>8@-");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.bufsize = (-1);
javaCharStream.AdjustBuffSize();
Test 68: 
StringReader stringReader = new StringReader("m1>8@-");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.backup(30);
javaCharStream.available = 30;
javaCharStream.BeginToken();
javaCharStream.AdjustBuffSize();
Test 69: 
StringReader stringReader = new StringReader("m1>8@-");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.available = (-2);
// Undeclared exception!
try { 
  javaCharStream.AdjustBuffSize();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 70: 
byte[] byteArray = new byte[8];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
javaCharStream.prevCharIsCR = true;
javaCharStream.readChar();
Test 71: 
byte[] byteArray = new byte[8];
byteArray[0] = (byte)10;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
javaCharStream.prevCharIsCR = true;
javaCharStream.readChar();
Test 72: 
byte[] byteArray = new byte[2];
byteArray[0] = (byte)9;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
javaCharStream.BeginToken();
Test 73: 
byte[] byteArray = new byte[2];
byteArray[0] = (byte)11;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
javaCharStream.readChar();
Test 74: 
byte[] byteArray = new byte[9];
byteArray[0] = (byte)12;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
javaCharStream.readChar();
Test 75: 
byte[] byteArray = new byte[6];
byteArray[2] = (byte)13;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
byteArrayInputStream.read();
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
byteArrayInputStream.read();
javaCharStream.BeginToken();
Test 76: 
StringReader stringReader = new StringReader("m1>8@-");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.inBuf = 12;
javaCharStream.readChar();
javaCharStream.getEndColumn();
Test 77: 
byte[] byteArray = new byte[2];
byteArray[0] = (byte)92;
byteArray[1] = (byte)92;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
javaCharStream.BeginToken();
javaCharStream.readChar();
Test 78: 
StringReader stringReader = new StringReader("'jk K7=5>Q");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 0, 0);
javaCharStream.ReInit((Reader) stringReader, 1, 569, 0);
javaCharStream.readChar();
javaCharStream.getColumn();
Test 79: 
StringReader stringReader = new StringReader("yuZSov");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.backup(0);
javaCharStream.GetImage();
Test 80: 
StringReader stringReader = new StringReader("8");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 11, 70);
javaCharStream.GetSuffix(11);
Test 81: 
StringReader stringReader = new StringReader("");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.GetSuffix(0);
Test 82: 
StringReader stringReader = new StringReader("8");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 11, 70);
javaCharStream.readChar();
javaCharStream.adjustBeginLineColumn(11, 98);
Test 83: 
StringReader stringReader = new StringReader("");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-2496), (-2496), 0);
// Undeclared exception!
try { 
  javaCharStream.adjustBeginLineColumn((-2496), (-2496));
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 84: 
StringReader stringReader = new StringReader("m1>8@-");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.adjustBeginLineColumn((-1241), (-1241));
javaCharStream.adjustBeginLineColumn((-1241), (-1241));
Test 85: 
PipedInputStream pipedInputStream = new PipedInputStream();
JavaCharStream javaCharStream = new JavaCharStream(pipedInputStream);
javaCharStream.ReInit((InputStream) pipedInputStream, (-1318), (-1318), 1);
Test 86: 
StringReader stringReader = new StringReader("m1>8@-");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.prevCharIsLF = true;
javaCharStream.BeginToken();
Test 87: 
byte[] byteArray = new byte[3];
byteArray[0] = (byte)92;
byteArray[1] = (byte)92;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
javaCharStream.readChar();
Test 88: 
byte[] byteArray = new byte[3];
byteArray[0] = (byte)92;
byteArray[1] = (byte)92;
byteArray[2] = (byte)92;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
javaCharStream.readChar();
Test 89: 
byte[] byteArray = new byte[2];
byteArray[1] = (byte)92;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
javaCharStream.BeginToken();
javaCharStream.readChar();
Test 90: 
StringReader stringReader = new StringReader("m1628-");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.backup((-1529));
Test 91: 
JavaCharStream javaCharStream = new JavaCharStream((Reader) null, 1141, 95, 33);
StringReader stringReader = new StringReader("0qW3-Pdm|)s)o");
javaCharStream.ReInit((Reader) stringReader, 18, 1141, 33);
javaCharStream.ReadByte();
Test 92: 
StringReader stringReader = new StringReader("X8j;75(hQI|}");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.BeginToken();
javaCharStream.BeginToken();
Test 93: 
StringReader stringReader = new StringReader("f&$<>dGcs");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-2209), (-2209), 0);
javaCharStream.GetImage();
Test 94: 
StringReader stringReader = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-875), 1, 1);
javaCharStream.ReadByte();
Test 95: 
byte[] byteArray = new byte[12];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, (-36), (byte)125);
javaCharStream.ReadByte();
Test 96: 
StringReader stringReader = new StringReader("z{KsBM_&>%");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-3280), (-3280));
int[] intArray = new int[5];
intArray[0] = (-1);
javaCharStream.bufcolumn = intArray;
javaCharStream.getBeginColumn();
Test 97: 
StringReader stringReader = new StringReader("Dlf[Y3 K>D-r.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2, 2);
javaCharStream.readChar();
javaCharStream.getBeginColumn();
Test 98: 
StringReader stringReader = new StringReader("^");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-1166), 63);
javaCharStream.BeginToken();
javaCharStream.getBeginLine();
Test 99: 
StringReader stringReader = new StringReader("y(>");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1595, 1595);
javaCharStream.BeginToken();
javaCharStream.adjustBeginLineColumn(1595, (-966));
javaCharStream.getColumn();
Test 100: 
StringReader stringReader = new StringReader("m1>8@-");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.inBuf = 12;
javaCharStream.BeginToken();
javaCharStream.getColumn();
Test 101: 
StringReader stringReader = new StringReader("m1>8@-");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-1), (-1), 1);
javaCharStream.BeginToken();
javaCharStream.getEndColumn();
Test 102: 
StringReader stringReader = new StringReader("X8j;75(hQI|}");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.BeginToken();
javaCharStream.getEndColumn();
Test 103: 
StringReader stringReader = new StringReader("X8j;75(hQI|}");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.BeginToken();
javaCharStream.adjustBeginLineColumn((-1241), (-1241));
javaCharStream.getEndLine();
Test 104: 
StringReader stringReader = new StringReader("m1>8@-");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.readChar();
javaCharStream.getEndLine();
Test 105: 
StringReader stringReader = new StringReader(".");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2915, 2915, 2915);
javaCharStream.inBuf = 2915;
javaCharStream.BeginToken();
javaCharStream.getEndLine();
Test 106: 
byte[] byteArray = new byte[12];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, (-36), (byte)125);
javaCharStream.BeginToken();
javaCharStream.getLine();
Test 107: 
StringReader stringReader = new StringReader("aDLH~BRS.j9f6(");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 12, 1);
javaCharStream.BeginToken();
javaCharStream.getLine();
Test 108: 
StringReader stringReader = new StringReader(".");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2915, 2915, 2915);
javaCharStream.inBuf = 2915;
javaCharStream.BeginToken();
javaCharStream.getLine();
Test 109: 
StringReader stringReader = new StringReader("");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-5557), (-5557));
javaCharStream.bufpos = 1;
javaCharStream.ExpandBuff(true);
Test 110: 
PipedInputStream pipedInputStream = new PipedInputStream();
JavaCharStream javaCharStream = new JavaCharStream(pipedInputStream, 1355, 11, 1355);
Test 111: 
StringReader stringReader = new StringReader("2^");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 40, 72, 40);
// Undeclared exception!
try { 
  javaCharStream.UpdateLineColumn('2');
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 112: 
StringReader stringReader = new StringReader("m1>8@-");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
FileDescriptor fileDescriptor = new FileDescriptor();
MockFileInputStream mockFileInputStream = new MockFileInputStream(fileDescriptor);
((JavaCharStream) stringReader).ReInit((InputStream) mockFileInputStream, 1085, (int) (Integer) null);

Test 113: 
PipedInputStream pipedInputStream = new PipedInputStream();
JavaCharStream javaCharStream = new JavaCharStream(pipedInputStream);
StringReader stringReader = new StringReader("=dW[)|0G4`H{do$");
javaCharStream.ReInit((Reader) stringReader);
PipedInputStream pipedInputStream = new PipedInputStream();
JavaCharStream javaCharStream = new JavaCharStream(pipedInputStream);
StringReader stringReader = new StringReader("=dW[)|0G4`H{do$");
javaCharStream.ReInit((Reader) stringReader);

Test 114: 
StringReader stringReader = new StringReader("This is a sample input string.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2, 2);
((JavaCharStream) stringReader).getBeginColumn();

Test 115: 
StringReader stringReader = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
FileDescriptor fileDescriptor = new FileDescriptor();
((JavaCharStream) stringReader).ReInit((InputStream) null);

Test 116: 
StringReader stringReader = new StringReader("The quick brown fox jumps over the lazy dog");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
((JavaCharStream) stringReader).ReInit((Reader) stringReader, 0, 100);

Test 117: 
StringReader stringReader = new StringReader("This is a sample\nstring for testing.\nIt contains multiple lines.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
((JavaCharStream) stringReader).getBeginLine();

Test 118: 
StringReader stringReader = new StringReader("Hello World");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
((JavaCharStream) stringReader).Done();
int _int = null;
int _int = null;
int _int = null;
((JavaCharStream) stringReader).ReInit((Reader) stringReader, _int, _int, _int);

Test 119: 
JavaCharStream.hexval('0');
JavaCharStream.hexval('A');
JavaCharStream.hexval('a');
JavaCharStream.hexval('9');
JavaCharStream.hexval('.');
char _char = '&';
JavaCharStream.hexval(_char);

Test 120: 
JavaCharStream.hexval('\u0000');

Test 121: 
JavaCharStream.hexval('A');
JavaCharStream.hexval('0');
JavaCharStream.hexval('1');
JavaCharStream.hexval('C');
JavaCharStream.hexval('D');
JavaCharStream.hexval('E');
JavaCharStream.hexval('F');
JavaCharStream.hexval((char) (Character) null);
String string = "";
JavaCharStream.hexval((char) string);

Test 122: 
JavaCharStream.hexval('a');
JavaCharStream.hexval('b');

Test 123: 
JavaCharStream.hexval('a');
JavaCharStream.hexval('f');
JavaCharStream.hexval('A');
JavaCharStream.hexval('F');

Test 124: 
JavaCharStream.hexval('A');
JavaCharStream.hexval('B');
JavaCharStream.hexval('C');

Test 125: 
JavaCharStream.hexval('\u263A');
char _char = '\u2665';
JavaCharStream.hexval(_char);

Test 126: 
JavaCharStream.hexval('\n');

Test 127: 
JavaCharStream.hexval('F');

Test 128: 
JavaCharStream.hexval('=');

Test 129: 
JavaCharStream.hexval('>');

Test 130: 
JavaCharStream.hexval('\u016B');

Test 131: 
JavaCharStream.hexval('A');
JavaCharStream.hexval('A');
JavaCharStream.hexval((char) "a");
String string = "a";
JavaCharStream.hexval((char) string);

Test 132: 
JavaCharStream.hexval('Z');

Test 133: 
JavaCharStream.hexval('0');
JavaCharStream.hexval('1');
JavaCharStream.hexval('2');
JavaCharStream.hexval('3');
JavaCharStream.hexval('4');
JavaCharStream.hexval('5');
JavaCharStream.hexval('6');
JavaCharStream.hexval('7');
JavaCharStream.hexval('8');
JavaCharStream.hexval('9');
JavaCharStream.hexval('A');
JavaCharStream.hexval('B');
JavaCharStream.hexval('C');
JavaCharStream.hexval('D');
JavaCharStream.hexval('E');

Test 134: 
JavaCharStream.hexval('A');
JavaCharStream.hexval('B');
JavaCharStream.hexval('C');
JavaCharStream.hexval('D');
JavaCharStream.hexval('E');
JavaCharStream.hexval('F');

Test 135: 
JavaCharStream.hexval('A');
JavaCharStream.hexval('a');
JavaCharStream.hexval('Z');
char _char = 'z';
JavaCharStream.hexval(_char);
char _char = '0';
JavaCharStream.hexval(_char);
char _char = '9';
JavaCharStream.hexval(_char);
char _char = '.';
JavaCharStream.hexval(_char);

Test 136: 
JavaCharStream.hexval(' ');
char _char = '\u0001';
JavaCharStream.hexval(_char);
char _char = '\u263A';
JavaCharStream.hexval(_char);

Test 137: 
JavaCharStream.hexval((char) 0);
int _int = 1;
JavaCharStream.hexval((char) _int);
int _int = 10;
JavaCharStream.hexval((char) _int);

Test 138: 
JavaCharStream.hexval('A');
JavaCharStream.hexval('a');

Test 139: 
JavaCharStream.hexval('F');

Test 140: 
JavaCharStream.hexval('A');
JavaCharStream.hexval((char) 97);
String string = "a";
JavaCharStream.hexval((char) string);

Test 141: 
JavaCharStream.hexval('\u263A');

Test 142: 
JavaCharStream.hexval('A');

Test 143: 
JavaCharStream.hexval('A');

Test 144: 
JavaCharStream.hexval('f');

Test 145: 
JavaCharStream.hexval('A');
JavaCharStream.hexval('F');
JavaCharStream.hexval('0');
JavaCharStream.hexval('9');
JavaCharStream.hexval('$');

Test 146: 
JavaCharStream.hexval('A');
JavaCharStream.hexval('a');
JavaCharStream.hexval('$');
char _char = '@';
JavaCharStream.hexval(_char);

Test 147: 
JavaCharStream.hexval('0');
JavaCharStream.hexval('A');
JavaCharStream.hexval('z');
char _char = 'Z';
JavaCharStream.hexval(_char);
char _char = '9';
JavaCharStream.hexval(_char);

Test 148: 
JavaCharStream.hexval('A');

Test 149: 
JavaCharStream.hexval('a');
JavaCharStream.hexval('A');
JavaCharStream.hexval('0');
JavaCharStream.hexval('9');
JavaCharStream.hexval('z');
char _char = 'Z';
JavaCharStream.hexval(_char);
char _char = '!';
JavaCharStream.hexval(_char);
char _char = '#';
JavaCharStream.hexval(_char);

Test 150: 
JavaCharStream.hexval('B');

Test 151: 
JavaCharStream.hexval('F');

Test 152: 
JavaCharStream.hexval('A');

Test 153: 
JavaCharStream.hexval('A');
JavaCharStream.hexval('b');
JavaCharStream.hexval('1');
JavaCharStream.hexval('x');
char _char = '\n';
JavaCharStream.hexval(_char);

Test 154: 
JavaCharStream.hexval('\u00B0');

Test 155: 
JavaCharStream.hexval('a');
JavaCharStream.hexval('A');
JavaCharStream.hexval('0');
JavaCharStream.hexval('9');
JavaCharStream.hexval('_');
char _char = ' ';
JavaCharStream.hexval(_char);
char _char = '\t';
JavaCharStream.hexval(_char);

Test 156: 
JavaCharStream.hexval('F');

Test 157: 
JavaCharStream.hexval((char) 255);

Test 158: 
JavaCharStream.hexval('C');

Test 159: 
JavaCharStream.hexval('a');

Test 160: 
JavaCharStream.hexval('a');
JavaCharStream.hexval('f');
JavaCharStream.hexval('A');
JavaCharStream.hexval('F');

Test 161: 
JavaCharStream.hexval('a');
JavaCharStream.hexval('F');
JavaCharStream.hexval('A');
JavaCharStream.hexval('z');

Test 162: 
StringReader stringReader = new StringReader("deg,");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
((JavaCharStream) stringReader).BeginToken();
((JavaCharStream) stringReader).getBeginLine();

Test 163: 
StringReader stringReader = new StringReader("The quick brown fox jumps over the lazy dog.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 10, 20, 5);
((JavaCharStream) stringReader).BeginToken();
((JavaCharStream) stringReader).FillBuff();

Test 164: 
StringReader stringReader = new StringReader("public class MyClass {\n\tpublic static void main(String[] args) {\n\t\tsystem.out.println(\"Hello, world!\");\n\t}\n}");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 0, 49);
((JavaCharStream) stringReader).backup(7);
((JavaCharStream) stringReader).BeginToken();
((JavaCharStream) stringReader).AdjustBuffSize();

Test 165: 
StringReader stringReader = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 0, 1, 1);
((JavaCharStream) stringReader).readChar();
int _int = 1;
((JavaCharStream) stringReader).backup(_int);
((JavaCharStream) stringReader).BeginToken();

Test 166: 
StringReader stringReader = new StringReader("m1>8@-");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
((JavaCharStream) stringReader).AdjustBuffSize();

Test 167: 
StringReader stringReader = new StringReader("m1>8@-");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
((JavaCharStream) stringReader).backup(30);
((JavaCharStream) stringReader).BeginToken();
((JavaCharStream) stringReader).AdjustBuffSize();

Test 168: 
StringReader stringReader = new StringReader("m1>8@-");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
((JavaCharStream) stringReader).AdjustBuffSize();

Test 169: 
byte[] byteArray = new byte[8];
byteArray[0] = (byte) 10;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
((JavaCharStream) byteArrayInputStream).readChar();

Test 170: 
byte[] byteArray = new byte[2];
byteArray[0] = (byte) 10;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
((JavaCharStream) byteArrayInputStream).BeginToken();

Test 171: 
byte[] byteArray = new byte[2];
byteArray[0] = (byte) 97;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
((JavaCharStream) byteArrayInputStream).readChar();

Test 172: 
byte[] byteArray = new byte[9];
byteArray[0] = (byte) 25;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
((JavaCharStream) byteArrayInputStream).readChar();

Test 173: 
StringReader stringReader = new StringReader("m1>8@-");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
((JavaCharStream) stringReader).readChar();
((JavaCharStream) stringReader).getEndColumn();

Test 174: 
StringReader stringReader = new StringReader("'jk K7=5>Q");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 0, 0);
((JavaCharStream) stringReader).ReInit((Reader) stringReader, 1, 569, 0);
((JavaCharStream) stringReader).readChar();
((JavaCharStream) stringReader).getColumn();

Test 175: 
StringReader stringReader = new StringReader("yuZSov");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
((JavaCharStream) stringReader).backup(0);
((JavaCharStream) stringReader).GetImage();

Test 176: 
StringReader stringReader = new StringReader("123456789");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 11, 70);
((JavaCharStream) stringReader).GetSuffix(11);

Test 177: 
StringReader stringReader = new StringReader("Testing 123!@#$%^&*()_+-=[]{}|;':\"<>,./?`~");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
((JavaCharStream) stringReader).GetSuffix(0);

Test 178: 
StringReader stringReader = new StringReader("The quick brown fox jumps over the lazy dog");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 11, 70);
((JavaCharStream) stringReader).readChar();
int _int = 11;
int _int = 98;
((JavaCharStream) stringReader).adjustBeginLineColumn(_int, _int);

Test 179: 
StringReader stringReader = new StringReader("This is a test string.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 0, 0, 0);
((JavaCharStream) stringReader).adjustBeginLineColumn(0, 0);

Test 180: 
StringReader stringReader = new StringReader("m1>8@-");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
((JavaCharStream) stringReader).adjustBeginLineColumn((int) (Integer) null, (int) (Integer) null);
int _int = null;
int _int = null;
((JavaCharStream) stringReader).adjustBeginLineColumn(_int, _int);

Test 181: 
PipedInputStream pipedInputStream = new PipedInputStream();
JavaCharStream javaCharStream = new JavaCharStream(pipedInputStream);
javaCharStream.ReInit((InputStream) pipedInputStream, (int) "Hello, World!", (int) "UTF-8", 1);

Test 182: 
StringReader stringReader = new StringReader("This is a sample input string for testing purposes");

Test 183: 
byte[] byteArray = new byte[2];
byteArray[1] = (byte)92;
byteArray[1] = (byte) 92;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
((JavaCharStream)(byte)92).BeginToken();
((JavaCharStream) byteArray[1]).readChar();

Test 184: 
StringReader stringReader = new StringReader("This is a sample input string for testing the JavaCharStream class.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
((JavaCharStream) stringReader).backup((int) (Integer) null);

Test 185: 
JavaCharStream javaCharStream = new JavaCharStream((Reader) 1141, 95, 33, 33);
String string = "0qW3-Pdm|)s)o";
StringReader stringReader = new StringReader(string);

Test 186: 
StringReader stringReader = new StringReader("This is a test string with special characters like !@#$%^&*()_+-=[]{}|;':\"<>,./?`~");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
((JavaCharStream) stringReader).BeginToken();
((JavaCharStream) stringReader).BeginToken();

Test 187: 
StringReader stringReader = new StringReader("Hello World!");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 0, (-2209), 0);
((JavaCharStream) stringReader).GetImage();

Test 188: 
StringReader stringReader = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1, 1, 1);
((JavaCharStream) stringReader).ReadByte();

Test 189: 
JavaCharStream javaCharStream = new JavaCharStream((InputStream) 125, (-36), (int) (byte)125);

Test 190: 
int[] intArray = new int[5];

Test 191: 
StringReader stringReader = new StringReader("Dlf[Y3 K>D-r.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2, 2);
((JavaCharStream) stringReader).readChar();
((JavaCharStream) stringReader).getBeginColumn();
String string = "This is a test string with multiple words.";
StringReader stringReader = new StringReader(string);
int _int = 2;
int _int = 2;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int);
((JavaCharStream) stringReader).readChar();
((JavaCharStream) stringReader).getBeginColumn();

Test 192: 
StringReader stringReader = new StringReader("^");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 63, 63);
((JavaCharStream) stringReader).BeginToken();
((JavaCharStream) stringReader).getBeginLine();

Test 193: 
StringReader stringReader = new StringReader("This is a sample input text");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1024, 1024);
((JavaCharStream) stringReader).BeginToken();
int _int = 1024;
int _int = null;
((JavaCharStream) stringReader).adjustBeginLineColumn(_int, _int);
((JavaCharStream) stringReader).getColumn();

Test 194: 
StringReader stringReader = new StringReader("m1>8@-");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
((JavaCharStream) stringReader).BeginToken();
((JavaCharStream) stringReader).getColumn();

Test 195: 
StringReader stringReader = new StringReader("m1>8@-");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 5, 3, 1);
((JavaCharStream) stringReader).BeginToken();
((JavaCharStream) stringReader).getEndColumn();
String string = "m1>8@-";
StringReader stringReader = new StringReader(string);
int _int = 7;
int _int = 4;
int _int = 1;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int, _int);
((JavaCharStream) stringReader).BeginToken();
((JavaCharStream) stringReader).getEndColumn();

Test 196: 
StringReader stringReader = new StringReader("m1>8@-");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
((JavaCharStream) stringReader).readChar();
((JavaCharStream) stringReader).getEndLine();

Test 197: 
StringReader stringReader = new StringReader("This is a test string");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2915, 2915, (int) "testFile.txt");
((JavaCharStream) stringReader).BeginToken();
((JavaCharStream) stringReader).getEndLine();

Test 198: 
JavaCharStream javaCharStream = new JavaCharStream((InputStream) 125, (-36), (int) (byte)125);

Test 199: 
StringReader stringReader = new StringReader("aDLH~BRS.j9f6(1234567890");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 12, 1);
((JavaCharStream) stringReader).BeginToken();
((JavaCharStream) stringReader).getLine();

Test 200: 
StringReader stringReader = new StringReader("This is a sample input string.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2915, 2915, 2915);
((JavaCharStream) stringReader).BeginToken();
((JavaCharStream) stringReader).getLine();

Test 201: 
StringReader stringReader = new StringReader("This is a sample input for testing purposes.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-5557), (-5557));
((JavaCharStream) stringReader).ExpandBuff(true);

Test 202: 
PipedInputStream pipedInputStream = new PipedInputStream();
JavaCharStream javaCharStream = new JavaCharStream(pipedInputStream, 1355, 11, 1355);
JavaCharStream javaCharStream = new JavaCharStream(pipedInputStream, 1355, 11, 1355);

Test 203: 
StringReader stringReader = new StringReader("2^");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 40, 72, 40);
((JavaCharStream) stringReader).UpdateLineColumn('2');


* Generated after the refinement and before minimization 204 tests with total length 666
* test suite isTestSuite: 204
Test 0: 
StringReader stringReader = new StringReader("m1>8@-");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
FileDescriptor fileDescriptor = new FileDescriptor();
MockFileInputStream mockFileInputStream = new MockFileInputStream(fileDescriptor);
javaCharStream.ReInit((InputStream) mockFileInputStream, (-1), 1085);
Test 1: 
PipedInputStream pipedInputStream = new PipedInputStream();
JavaCharStream javaCharStream = new JavaCharStream(pipedInputStream);
StringReader stringReader = new StringReader("=dW[)|0G4`H{do$");
javaCharStream.ReInit((Reader) stringReader);
Test 2: 
StringReader stringReader = new StringReader("Dlf[Y3 K>D-r.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2, 2);
javaCharStream.getBeginColumn();
Test 3: 
StringReader stringReader = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
FileDescriptor fileDescriptor = new FileDescriptor();
MockFileInputStream mockFileInputStream = new MockFileInputStream(fileDescriptor);
javaCharStream.ReInit((InputStream) mockFileInputStream);
Test 4: 
StringReader stringReader = new StringReader("m1>8@-");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.ReInit((Reader) stringReader, (-1), (-1));
Test 5: 
StringReader stringReader = new StringReader("dEG,");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.getBeginLine();
Test 6: 
StringReader stringReader = new StringReader("");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.Done();
// Undeclared exception!
try { 
  javaCharStream.ReInit((Reader) stringReader, (-1), (-1), (-1));
  fail("Expecting exception: NegativeArraySizeException");

} catch(NegativeArraySizeException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 7: 
JavaCharStream.hexval('0');
Test 8: 
try { 
  JavaCharStream.hexval('\u0000');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 9: 
JavaCharStream.hexval('1');
Test 10: 
JavaCharStream.hexval('2');
Test 11: 
JavaCharStream.hexval('3');
Test 12: 
JavaCharStream.hexval('4');
Test 13: 
JavaCharStream.hexval('5');
Test 14: 
JavaCharStream.hexval('6');
Test 15: 
JavaCharStream.hexval('7');
Test 16: 
JavaCharStream.hexval('8');
Test 17: 
JavaCharStream.hexval('9');
Test 18: 
try { 
  JavaCharStream.hexval(':');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 19: 
try { 
  JavaCharStream.hexval(';');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 20: 
try { 
  JavaCharStream.hexval('<');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 21: 
try { 
  JavaCharStream.hexval('=');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 22: 
try { 
  JavaCharStream.hexval('>');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 23: 
try { 
  JavaCharStream.hexval('?');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 24: 
try { 
  JavaCharStream.hexval('@');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 25: 
JavaCharStream.hexval('A');
Test 26: 
JavaCharStream.hexval('B');
Test 27: 
JavaCharStream.hexval('C');
Test 28: 
JavaCharStream.hexval('D');
Test 29: 
JavaCharStream.hexval('E');
Test 30: 
JavaCharStream.hexval('F');
Test 31: 
try { 
  JavaCharStream.hexval('G');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 32: 
try { 
  JavaCharStream.hexval('H');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 33: 
try { 
  JavaCharStream.hexval('I');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 34: 
try { 
  JavaCharStream.hexval('J');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 35: 
try { 
  JavaCharStream.hexval('K');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 36: 
try { 
  JavaCharStream.hexval('L');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 37: 
try { 
  JavaCharStream.hexval('M');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 38: 
try { 
  JavaCharStream.hexval('N');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 39: 
try { 
  JavaCharStream.hexval('O');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 40: 
try { 
  JavaCharStream.hexval('P');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 41: 
try { 
  JavaCharStream.hexval('Q');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 42: 
try { 
  JavaCharStream.hexval('R');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 43: 
try { 
  JavaCharStream.hexval('S');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 44: 
try { 
  JavaCharStream.hexval('T');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 45: 
try { 
  JavaCharStream.hexval('U');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 46: 
try { 
  JavaCharStream.hexval('V');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 47: 
try { 
  JavaCharStream.hexval('W');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 48: 
try { 
  JavaCharStream.hexval('X');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 49: 
try { 
  JavaCharStream.hexval('Y');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 50: 
try { 
  JavaCharStream.hexval('Z');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 51: 
try { 
  JavaCharStream.hexval('[');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 52: 
try { 
  JavaCharStream.hexval('\\');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 53: 
try { 
  JavaCharStream.hexval(']');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 54: 
try { 
  JavaCharStream.hexval('^');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 55: 
try { 
  JavaCharStream.hexval('_');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 56: 
try { 
  JavaCharStream.hexval('`');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 57: 
JavaCharStream.hexval('a');
Test 58: 
JavaCharStream.hexval('b');
Test 59: 
JavaCharStream.hexval('c');
Test 60: 
JavaCharStream.hexval('d');
Test 61: 
JavaCharStream.hexval('e');
Test 62: 
JavaCharStream.hexval('f');
Test 63: 
StringReader stringReader = new StringReader("dEG,");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.BeginToken();
javaCharStream.getBeginLine();
Test 64: 
StringReader stringReader = new StringReader(".");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2915, 2915, 2915);
javaCharStream.BeginToken();
try { 
  javaCharStream.FillBuff();
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 65: 
StringReader stringReader = new StringReader(",.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-2372), (-2372));
javaCharStream.backup(71);
javaCharStream.BeginToken();
javaCharStream.AdjustBuffSize();
Test 66: 
StringReader stringReader = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-875), 1, 1);
javaCharStream.readChar();
javaCharStream.backup(1);
javaCharStream.BeginToken();
Test 67: 
StringReader stringReader = new StringReader("m1>8@-");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.bufsize = (-1);
javaCharStream.AdjustBuffSize();
Test 68: 
StringReader stringReader = new StringReader("m1>8@-");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.backup(30);
javaCharStream.available = 30;
javaCharStream.BeginToken();
javaCharStream.AdjustBuffSize();
Test 69: 
StringReader stringReader = new StringReader("m1>8@-");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.available = (-2);
// Undeclared exception!
try { 
  javaCharStream.AdjustBuffSize();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 70: 
byte[] byteArray = new byte[8];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
javaCharStream.prevCharIsCR = true;
javaCharStream.readChar();
Test 71: 
byte[] byteArray = new byte[8];
byteArray[0] = (byte)10;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
javaCharStream.prevCharIsCR = true;
javaCharStream.readChar();
Test 72: 
byte[] byteArray = new byte[2];
byteArray[0] = (byte)9;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
javaCharStream.BeginToken();
Test 73: 
byte[] byteArray = new byte[2];
byteArray[0] = (byte)11;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
javaCharStream.readChar();
Test 74: 
byte[] byteArray = new byte[9];
byteArray[0] = (byte)12;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
javaCharStream.readChar();
Test 75: 
byte[] byteArray = new byte[6];
byteArray[2] = (byte)13;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
byteArrayInputStream.read();
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
byteArrayInputStream.read();
javaCharStream.BeginToken();
Test 76: 
StringReader stringReader = new StringReader("m1>8@-");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.inBuf = 12;
javaCharStream.readChar();
javaCharStream.getEndColumn();
Test 77: 
byte[] byteArray = new byte[2];
byteArray[0] = (byte)92;
byteArray[1] = (byte)92;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
javaCharStream.BeginToken();
javaCharStream.readChar();
Test 78: 
StringReader stringReader = new StringReader("'jk K7=5>Q");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 0, 0);
javaCharStream.ReInit((Reader) stringReader, 1, 569, 0);
javaCharStream.readChar();
javaCharStream.getColumn();
Test 79: 
StringReader stringReader = new StringReader("yuZSov");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.backup(0);
javaCharStream.GetImage();
Test 80: 
StringReader stringReader = new StringReader("8");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 11, 70);
javaCharStream.GetSuffix(11);
Test 81: 
StringReader stringReader = new StringReader("");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.GetSuffix(0);
Test 82: 
StringReader stringReader = new StringReader("8");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 11, 70);
javaCharStream.readChar();
javaCharStream.adjustBeginLineColumn(11, 98);
Test 83: 
StringReader stringReader = new StringReader("");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-2496), (-2496), 0);
// Undeclared exception!
try { 
  javaCharStream.adjustBeginLineColumn((-2496), (-2496));
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 84: 
StringReader stringReader = new StringReader("m1>8@-");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.adjustBeginLineColumn((-1241), (-1241));
javaCharStream.adjustBeginLineColumn((-1241), (-1241));
Test 85: 
PipedInputStream pipedInputStream = new PipedInputStream();
JavaCharStream javaCharStream = new JavaCharStream(pipedInputStream);
javaCharStream.ReInit((InputStream) pipedInputStream, (-1318), (-1318), 1);
Test 86: 
StringReader stringReader = new StringReader("m1>8@-");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.prevCharIsLF = true;
javaCharStream.BeginToken();
Test 87: 
byte[] byteArray = new byte[3];
byteArray[0] = (byte)92;
byteArray[1] = (byte)92;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
javaCharStream.readChar();
Test 88: 
byte[] byteArray = new byte[3];
byteArray[0] = (byte)92;
byteArray[1] = (byte)92;
byteArray[2] = (byte)92;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
javaCharStream.readChar();
Test 89: 
byte[] byteArray = new byte[2];
byteArray[1] = (byte)92;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
javaCharStream.BeginToken();
javaCharStream.readChar();
Test 90: 
StringReader stringReader = new StringReader("m1628-");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.backup((-1529));
Test 91: 
JavaCharStream javaCharStream = new JavaCharStream((Reader) null, 1141, 95, 33);
StringReader stringReader = new StringReader("0qW3-Pdm|)s)o");
javaCharStream.ReInit((Reader) stringReader, 18, 1141, 33);
javaCharStream.ReadByte();
Test 92: 
StringReader stringReader = new StringReader("X8j;75(hQI|}");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.BeginToken();
javaCharStream.BeginToken();
Test 93: 
StringReader stringReader = new StringReader("f&$<>dGcs");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-2209), (-2209), 0);
javaCharStream.GetImage();
Test 94: 
StringReader stringReader = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-875), 1, 1);
javaCharStream.ReadByte();
Test 95: 
byte[] byteArray = new byte[12];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, (-36), (byte)125);
javaCharStream.ReadByte();
Test 96: 
StringReader stringReader = new StringReader("z{KsBM_&>%");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-3280), (-3280));
int[] intArray = new int[5];
intArray[0] = (-1);
javaCharStream.bufcolumn = intArray;
javaCharStream.getBeginColumn();
Test 97: 
StringReader stringReader = new StringReader("Dlf[Y3 K>D-r.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2, 2);
javaCharStream.readChar();
javaCharStream.getBeginColumn();
Test 98: 
StringReader stringReader = new StringReader("^");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-1166), 63);
javaCharStream.BeginToken();
javaCharStream.getBeginLine();
Test 99: 
StringReader stringReader = new StringReader("y(>");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1595, 1595);
javaCharStream.BeginToken();
javaCharStream.adjustBeginLineColumn(1595, (-966));
javaCharStream.getColumn();
Test 100: 
StringReader stringReader = new StringReader("m1>8@-");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.inBuf = 12;
javaCharStream.BeginToken();
javaCharStream.getColumn();
Test 101: 
StringReader stringReader = new StringReader("m1>8@-");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-1), (-1), 1);
javaCharStream.BeginToken();
javaCharStream.getEndColumn();
Test 102: 
StringReader stringReader = new StringReader("X8j;75(hQI|}");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.BeginToken();
javaCharStream.getEndColumn();
Test 103: 
StringReader stringReader = new StringReader("X8j;75(hQI|}");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.BeginToken();
javaCharStream.adjustBeginLineColumn((-1241), (-1241));
javaCharStream.getEndLine();
Test 104: 
StringReader stringReader = new StringReader("m1>8@-");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.readChar();
javaCharStream.getEndLine();
Test 105: 
StringReader stringReader = new StringReader(".");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2915, 2915, 2915);
javaCharStream.inBuf = 2915;
javaCharStream.BeginToken();
javaCharStream.getEndLine();
Test 106: 
byte[] byteArray = new byte[12];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, (-36), (byte)125);
javaCharStream.BeginToken();
javaCharStream.getLine();
Test 107: 
StringReader stringReader = new StringReader("aDLH~BRS.j9f6(");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 12, 1);
javaCharStream.BeginToken();
javaCharStream.getLine();
Test 108: 
StringReader stringReader = new StringReader(".");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2915, 2915, 2915);
javaCharStream.inBuf = 2915;
javaCharStream.BeginToken();
javaCharStream.getLine();
Test 109: 
StringReader stringReader = new StringReader("");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-5557), (-5557));
javaCharStream.bufpos = 1;
javaCharStream.ExpandBuff(true);
Test 110: 
PipedInputStream pipedInputStream = new PipedInputStream();
JavaCharStream javaCharStream = new JavaCharStream(pipedInputStream, 1355, 11, 1355);
Test 111: 
StringReader stringReader = new StringReader("2^");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 40, 72, 40);
// Undeclared exception!
try { 
  javaCharStream.UpdateLineColumn('2');
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 112: 
StringReader stringReader = new StringReader("m1>8@-");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
FileDescriptor fileDescriptor = new FileDescriptor();
MockFileInputStream mockFileInputStream = new MockFileInputStream(fileDescriptor);
((JavaCharStream) stringReader).ReInit((InputStream) mockFileInputStream, 1085, (int) (Integer) null);

Test 113: 
PipedInputStream pipedInputStream = new PipedInputStream();
JavaCharStream javaCharStream = new JavaCharStream(pipedInputStream);
StringReader stringReader = new StringReader("=dW[)|0G4`H{do$");
javaCharStream.ReInit((Reader) stringReader);
PipedInputStream pipedInputStream = new PipedInputStream();
JavaCharStream javaCharStream = new JavaCharStream(pipedInputStream);
StringReader stringReader = new StringReader("=dW[)|0G4`H{do$");
javaCharStream.ReInit((Reader) stringReader);

Test 114: 
StringReader stringReader = new StringReader("This is a sample input string.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2, 2);
((JavaCharStream) stringReader).getBeginColumn();

Test 115: 
StringReader stringReader = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
FileDescriptor fileDescriptor = new FileDescriptor();
((JavaCharStream) stringReader).ReInit((InputStream) null);

Test 116: 
StringReader stringReader = new StringReader("The quick brown fox jumps over the lazy dog");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
((JavaCharStream) stringReader).ReInit((Reader) stringReader, 0, 100);

Test 117: 
StringReader stringReader = new StringReader("This is a sample\nstring for testing.\nIt contains multiple lines.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
((JavaCharStream) stringReader).getBeginLine();

Test 118: 
StringReader stringReader = new StringReader("Hello World");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
((JavaCharStream) stringReader).Done();
int _int = null;
int _int = null;
int _int = null;
((JavaCharStream) stringReader).ReInit((Reader) stringReader, _int, _int, _int);

Test 119: 
JavaCharStream.hexval('0');
JavaCharStream.hexval('A');
JavaCharStream.hexval('a');
JavaCharStream.hexval('9');
JavaCharStream.hexval('.');
char _char = '&';
JavaCharStream.hexval(_char);

Test 120: 
JavaCharStream.hexval('\u0000');

Test 121: 
JavaCharStream.hexval('A');
JavaCharStream.hexval('0');
JavaCharStream.hexval('1');
JavaCharStream.hexval('C');
JavaCharStream.hexval('D');
JavaCharStream.hexval('E');
JavaCharStream.hexval('F');
JavaCharStream.hexval((char) (Character) null);
String string = "";
JavaCharStream.hexval((char) string);

Test 122: 
JavaCharStream.hexval('a');
JavaCharStream.hexval('b');

Test 123: 
JavaCharStream.hexval('a');
JavaCharStream.hexval('f');
JavaCharStream.hexval('A');
JavaCharStream.hexval('F');

Test 124: 
JavaCharStream.hexval('A');
JavaCharStream.hexval('B');
JavaCharStream.hexval('C');

Test 125: 
JavaCharStream.hexval('\u263A');
char _char = '\u2665';
JavaCharStream.hexval(_char);

Test 126: 
JavaCharStream.hexval('\n');

Test 127: 
JavaCharStream.hexval('F');

Test 128: 
JavaCharStream.hexval('=');

Test 129: 
JavaCharStream.hexval('>');

Test 130: 
JavaCharStream.hexval('\u016B');

Test 131: 
JavaCharStream.hexval('A');
JavaCharStream.hexval('A');
JavaCharStream.hexval((char) "a");
String string = "a";
JavaCharStream.hexval((char) string);

Test 132: 
JavaCharStream.hexval('Z');

Test 133: 
JavaCharStream.hexval('0');
JavaCharStream.hexval('1');
JavaCharStream.hexval('2');
JavaCharStream.hexval('3');
JavaCharStream.hexval('4');
JavaCharStream.hexval('5');
JavaCharStream.hexval('6');
JavaCharStream.hexval('7');
JavaCharStream.hexval('8');
JavaCharStream.hexval('9');
JavaCharStream.hexval('A');
JavaCharStream.hexval('B');
JavaCharStream.hexval('C');
JavaCharStream.hexval('D');
JavaCharStream.hexval('E');

Test 134: 
JavaCharStream.hexval('A');
JavaCharStream.hexval('B');
JavaCharStream.hexval('C');
JavaCharStream.hexval('D');
JavaCharStream.hexval('E');
JavaCharStream.hexval('F');

Test 135: 
JavaCharStream.hexval('A');
JavaCharStream.hexval('a');
JavaCharStream.hexval('Z');
char _char = 'z';
JavaCharStream.hexval(_char);
char _char = '0';
JavaCharStream.hexval(_char);
char _char = '9';
JavaCharStream.hexval(_char);
char _char = '.';
JavaCharStream.hexval(_char);

Test 136: 
JavaCharStream.hexval(' ');
char _char = '\u0001';
JavaCharStream.hexval(_char);
char _char = '\u263A';
JavaCharStream.hexval(_char);

Test 137: 
JavaCharStream.hexval((char) 0);
int _int = 1;
JavaCharStream.hexval((char) _int);
int _int = 10;
JavaCharStream.hexval((char) _int);

Test 138: 
JavaCharStream.hexval('A');
JavaCharStream.hexval('a');

Test 139: 
JavaCharStream.hexval('F');

Test 140: 
JavaCharStream.hexval('A');
JavaCharStream.hexval((char) 97);
String string = "a";
JavaCharStream.hexval((char) string);

Test 141: 
JavaCharStream.hexval('\u263A');

Test 142: 
JavaCharStream.hexval('A');

Test 143: 
JavaCharStream.hexval('A');

Test 144: 
JavaCharStream.hexval('f');

Test 145: 
JavaCharStream.hexval('A');
JavaCharStream.hexval('F');
JavaCharStream.hexval('0');
JavaCharStream.hexval('9');
JavaCharStream.hexval('$');

Test 146: 
JavaCharStream.hexval('A');
JavaCharStream.hexval('a');
JavaCharStream.hexval('$');
char _char = '@';
JavaCharStream.hexval(_char);

Test 147: 
JavaCharStream.hexval('0');
JavaCharStream.hexval('A');
JavaCharStream.hexval('z');
char _char = 'Z';
JavaCharStream.hexval(_char);
char _char = '9';
JavaCharStream.hexval(_char);

Test 148: 
JavaCharStream.hexval('A');

Test 149: 
JavaCharStream.hexval('a');
JavaCharStream.hexval('A');
JavaCharStream.hexval('0');
JavaCharStream.hexval('9');
JavaCharStream.hexval('z');
char _char = 'Z';
JavaCharStream.hexval(_char);
char _char = '!';
JavaCharStream.hexval(_char);
char _char = '#';
JavaCharStream.hexval(_char);

Test 150: 
JavaCharStream.hexval('B');

Test 151: 
JavaCharStream.hexval('F');

Test 152: 
JavaCharStream.hexval('A');

Test 153: 
JavaCharStream.hexval('A');
JavaCharStream.hexval('b');
JavaCharStream.hexval('1');
JavaCharStream.hexval('x');
char _char = '\n';
JavaCharStream.hexval(_char);

Test 154: 
JavaCharStream.hexval('\u00B0');

Test 155: 
JavaCharStream.hexval('a');
JavaCharStream.hexval('A');
JavaCharStream.hexval('0');
JavaCharStream.hexval('9');
JavaCharStream.hexval('_');
char _char = ' ';
JavaCharStream.hexval(_char);
char _char = '\t';
JavaCharStream.hexval(_char);

Test 156: 
JavaCharStream.hexval('F');

Test 157: 
JavaCharStream.hexval((char) 255);

Test 158: 
JavaCharStream.hexval('C');

Test 159: 
JavaCharStream.hexval('a');

Test 160: 
JavaCharStream.hexval('a');
JavaCharStream.hexval('f');
JavaCharStream.hexval('A');
JavaCharStream.hexval('F');

Test 161: 
JavaCharStream.hexval('a');
JavaCharStream.hexval('F');
JavaCharStream.hexval('A');
JavaCharStream.hexval('z');

Test 162: 
StringReader stringReader = new StringReader("deg,");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
((JavaCharStream) stringReader).BeginToken();
((JavaCharStream) stringReader).getBeginLine();

Test 163: 
StringReader stringReader = new StringReader("The quick brown fox jumps over the lazy dog.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 10, 20, 5);
((JavaCharStream) stringReader).BeginToken();
((JavaCharStream) stringReader).FillBuff();

Test 164: 
StringReader stringReader = new StringReader("public class MyClass {\n\tpublic static void main(String[] args) {\n\t\tsystem.out.println(\"Hello, world!\");\n\t}\n}");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 0, 49);
((JavaCharStream) stringReader).backup(7);
((JavaCharStream) stringReader).BeginToken();
((JavaCharStream) stringReader).AdjustBuffSize();

Test 165: 
StringReader stringReader = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 0, 1, 1);
((JavaCharStream) stringReader).readChar();
int _int = 1;
((JavaCharStream) stringReader).backup(_int);
((JavaCharStream) stringReader).BeginToken();

Test 166: 
StringReader stringReader = new StringReader("m1>8@-");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
((JavaCharStream) stringReader).AdjustBuffSize();

Test 167: 
StringReader stringReader = new StringReader("m1>8@-");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
((JavaCharStream) stringReader).backup(30);
((JavaCharStream) stringReader).BeginToken();
((JavaCharStream) stringReader).AdjustBuffSize();

Test 168: 
StringReader stringReader = new StringReader("m1>8@-");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
((JavaCharStream) stringReader).AdjustBuffSize();

Test 169: 
byte[] byteArray = new byte[8];
byteArray[0] = (byte) 10;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
((JavaCharStream) byteArrayInputStream).readChar();

Test 170: 
byte[] byteArray = new byte[2];
byteArray[0] = (byte) 10;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
((JavaCharStream) byteArrayInputStream).BeginToken();

Test 171: 
byte[] byteArray = new byte[2];
byteArray[0] = (byte) 97;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
((JavaCharStream) byteArrayInputStream).readChar();

Test 172: 
byte[] byteArray = new byte[9];
byteArray[0] = (byte) 25;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
((JavaCharStream) byteArrayInputStream).readChar();

Test 173: 
StringReader stringReader = new StringReader("m1>8@-");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
((JavaCharStream) stringReader).readChar();
((JavaCharStream) stringReader).getEndColumn();

Test 174: 
StringReader stringReader = new StringReader("'jk K7=5>Q");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 0, 0);
((JavaCharStream) stringReader).ReInit((Reader) stringReader, 1, 569, 0);
((JavaCharStream) stringReader).readChar();
((JavaCharStream) stringReader).getColumn();

Test 175: 
StringReader stringReader = new StringReader("yuZSov");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
((JavaCharStream) stringReader).backup(0);
((JavaCharStream) stringReader).GetImage();

Test 176: 
StringReader stringReader = new StringReader("123456789");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 11, 70);
((JavaCharStream) stringReader).GetSuffix(11);

Test 177: 
StringReader stringReader = new StringReader("Testing 123!@#$%^&*()_+-=[]{}|;':\"<>,./?`~");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
((JavaCharStream) stringReader).GetSuffix(0);

Test 178: 
StringReader stringReader = new StringReader("The quick brown fox jumps over the lazy dog");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 11, 70);
((JavaCharStream) stringReader).readChar();
int _int = 11;
int _int = 98;
((JavaCharStream) stringReader).adjustBeginLineColumn(_int, _int);

Test 179: 
StringReader stringReader = new StringReader("This is a test string.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 0, 0, 0);
((JavaCharStream) stringReader).adjustBeginLineColumn(0, 0);

Test 180: 
StringReader stringReader = new StringReader("m1>8@-");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
((JavaCharStream) stringReader).adjustBeginLineColumn((int) (Integer) null, (int) (Integer) null);
int _int = null;
int _int = null;
((JavaCharStream) stringReader).adjustBeginLineColumn(_int, _int);

Test 181: 
PipedInputStream pipedInputStream = new PipedInputStream();
JavaCharStream javaCharStream = new JavaCharStream(pipedInputStream);
javaCharStream.ReInit((InputStream) pipedInputStream, (int) "Hello, World!", (int) "UTF-8", 1);

Test 182: 
StringReader stringReader = new StringReader("This is a sample input string for testing purposes");

Test 183: 
byte[] byteArray = new byte[2];
byteArray[1] = (byte)92;
byteArray[1] = (byte) 92;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
((JavaCharStream)(byte)92).BeginToken();
((JavaCharStream) byteArray[1]).readChar();

Test 184: 
StringReader stringReader = new StringReader("This is a sample input string for testing the JavaCharStream class.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
((JavaCharStream) stringReader).backup((int) (Integer) null);

Test 185: 
JavaCharStream javaCharStream = new JavaCharStream((Reader) 1141, 95, 33, 33);
String string = "0qW3-Pdm|)s)o";
StringReader stringReader = new StringReader(string);

Test 186: 
StringReader stringReader = new StringReader("This is a test string with special characters like !@#$%^&*()_+-=[]{}|;':\"<>,./?`~");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
((JavaCharStream) stringReader).BeginToken();
((JavaCharStream) stringReader).BeginToken();

Test 187: 
StringReader stringReader = new StringReader("Hello World!");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 0, (-2209), 0);
((JavaCharStream) stringReader).GetImage();

Test 188: 
StringReader stringReader = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1, 1, 1);
((JavaCharStream) stringReader).ReadByte();

Test 189: 
JavaCharStream javaCharStream = new JavaCharStream((InputStream) 125, (-36), (int) (byte)125);

Test 190: 
int[] intArray = new int[5];

Test 191: 
StringReader stringReader = new StringReader("Dlf[Y3 K>D-r.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2, 2);
((JavaCharStream) stringReader).readChar();
((JavaCharStream) stringReader).getBeginColumn();
String string = "This is a test string with multiple words.";
StringReader stringReader = new StringReader(string);
int _int = 2;
int _int = 2;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int);
((JavaCharStream) stringReader).readChar();
((JavaCharStream) stringReader).getBeginColumn();

Test 192: 
StringReader stringReader = new StringReader("^");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 63, 63);
((JavaCharStream) stringReader).BeginToken();
((JavaCharStream) stringReader).getBeginLine();

Test 193: 
StringReader stringReader = new StringReader("This is a sample input text");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1024, 1024);
((JavaCharStream) stringReader).BeginToken();
int _int = 1024;
int _int = null;
((JavaCharStream) stringReader).adjustBeginLineColumn(_int, _int);
((JavaCharStream) stringReader).getColumn();

Test 194: 
StringReader stringReader = new StringReader("m1>8@-");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
((JavaCharStream) stringReader).BeginToken();
((JavaCharStream) stringReader).getColumn();

Test 195: 
StringReader stringReader = new StringReader("m1>8@-");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 5, 3, 1);
((JavaCharStream) stringReader).BeginToken();
((JavaCharStream) stringReader).getEndColumn();
String string = "m1>8@-";
StringReader stringReader = new StringReader(string);
int _int = 7;
int _int = 4;
int _int = 1;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int, _int);
((JavaCharStream) stringReader).BeginToken();
((JavaCharStream) stringReader).getEndColumn();

Test 196: 
StringReader stringReader = new StringReader("m1>8@-");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
((JavaCharStream) stringReader).readChar();
((JavaCharStream) stringReader).getEndLine();

Test 197: 
StringReader stringReader = new StringReader("This is a test string");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2915, 2915, (int) "testFile.txt");
((JavaCharStream) stringReader).BeginToken();
((JavaCharStream) stringReader).getEndLine();

Test 198: 
JavaCharStream javaCharStream = new JavaCharStream((InputStream) 125, (-36), (int) (byte)125);

Test 199: 
StringReader stringReader = new StringReader("aDLH~BRS.j9f6(1234567890");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 12, 1);
((JavaCharStream) stringReader).BeginToken();
((JavaCharStream) stringReader).getLine();

Test 200: 
StringReader stringReader = new StringReader("This is a sample input string.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2915, 2915, 2915);
((JavaCharStream) stringReader).BeginToken();
((JavaCharStream) stringReader).getLine();

Test 201: 
StringReader stringReader = new StringReader("This is a sample input for testing purposes.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-5557), (-5557));
((JavaCharStream) stringReader).ExpandBuff(true);

Test 202: 
PipedInputStream pipedInputStream = new PipedInputStream();
JavaCharStream javaCharStream = new JavaCharStream(pipedInputStream, 1355, 11, 1355);
JavaCharStream javaCharStream = new JavaCharStream(pipedInputStream, 1355, 11, 1355);

Test 203: 
StringReader stringReader = new StringReader("2^");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 40, 72, 40);
((JavaCharStream) stringReader).UpdateLineColumn('2');


* Minimizing test suite
* test suite isTestSuite: 112
Test 0: 
PipedInputStream pipedInputStream = new PipedInputStream();
JavaCharStream javaCharStream = new JavaCharStream(pipedInputStream);
StringReader stringReader = new StringReader("=dW[)|0G4`H{do$");
javaCharStream.ReInit((Reader) stringReader);
Test 1: 
StringReader stringReader = new StringReader("m1>8@-");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
FileDescriptor fileDescriptor = new FileDescriptor();
MockFileInputStream mockFileInputStream = new MockFileInputStream(fileDescriptor);
javaCharStream.ReInit((InputStream) mockFileInputStream, (-1), 1085);
Test 2: 
StringReader stringReader = new StringReader("Dlf[Y3 K>D-r.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2, 2);
javaCharStream.getBeginColumn();
Test 3: 
StringReader stringReader = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
FileDescriptor fileDescriptor = new FileDescriptor();
MockFileInputStream mockFileInputStream = new MockFileInputStream(fileDescriptor);
javaCharStream.ReInit((InputStream) mockFileInputStream);
Test 4: 
StringReader stringReader = new StringReader("m1>8@-");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.ReInit((Reader) stringReader, (-1), (-1));
Test 5: 
StringReader stringReader = new StringReader("dEG,");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.getBeginLine();
Test 6: 
StringReader stringReader = new StringReader("");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.Done();
// Undeclared exception!
try { 
  javaCharStream.ReInit((Reader) stringReader, (-1), (-1), (-1));
  fail("Expecting exception: NegativeArraySizeException");

} catch(NegativeArraySizeException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 7: 
byte[] byteArray = new byte[12];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, (-36), (byte)125);
javaCharStream.ReadByte();
Test 8: 
JavaCharStream.hexval('0');
Test 9: 
JavaCharStream.hexval('A');
Test 10: 
JavaCharStream.hexval('1');
Test 11: 
JavaCharStream.hexval('2');
Test 12: 
JavaCharStream.hexval('3');
Test 13: 
JavaCharStream.hexval('4');
Test 14: 
JavaCharStream.hexval('5');
Test 15: 
JavaCharStream.hexval('6');
Test 16: 
JavaCharStream.hexval('7');
Test 17: 
JavaCharStream.hexval('8');
Test 18: 
JavaCharStream.hexval('9');
Test 19: 
try { 
  JavaCharStream.hexval(':');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 20: 
try { 
  JavaCharStream.hexval(';');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 21: 
try { 
  JavaCharStream.hexval('<');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 22: 
try { 
  JavaCharStream.hexval('=');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 23: 
try { 
  JavaCharStream.hexval('>');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 24: 
try { 
  JavaCharStream.hexval('?');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 25: 
try { 
  JavaCharStream.hexval('@');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 26: 
JavaCharStream.hexval('B');
Test 27: 
JavaCharStream.hexval('C');
Test 28: 
JavaCharStream.hexval('D');
Test 29: 
JavaCharStream.hexval('E');
Test 30: 
JavaCharStream.hexval('F');
Test 31: 
try { 
  JavaCharStream.hexval('G');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 32: 
try { 
  JavaCharStream.hexval('H');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 33: 
try { 
  JavaCharStream.hexval('I');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 34: 
try { 
  JavaCharStream.hexval('J');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 35: 
try { 
  JavaCharStream.hexval('K');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 36: 
try { 
  JavaCharStream.hexval('L');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 37: 
try { 
  JavaCharStream.hexval('M');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 38: 
try { 
  JavaCharStream.hexval('N');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 39: 
try { 
  JavaCharStream.hexval('O');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 40: 
try { 
  JavaCharStream.hexval('P');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 41: 
try { 
  JavaCharStream.hexval('Q');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 42: 
try { 
  JavaCharStream.hexval('R');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 43: 
try { 
  JavaCharStream.hexval('S');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 44: 
try { 
  JavaCharStream.hexval('T');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 45: 
try { 
  JavaCharStream.hexval('U');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 46: 
try { 
  JavaCharStream.hexval('V');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 47: 
try { 
  JavaCharStream.hexval('W');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 48: 
try { 
  JavaCharStream.hexval('X');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 49: 
try { 
  JavaCharStream.hexval('Y');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 50: 
try { 
  JavaCharStream.hexval('Z');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 51: 
try { 
  JavaCharStream.hexval('[');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 52: 
try { 
  JavaCharStream.hexval('\\');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 53: 
try { 
  JavaCharStream.hexval(']');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 54: 
try { 
  JavaCharStream.hexval('^');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 55: 
try { 
  JavaCharStream.hexval('_');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 56: 
try { 
  JavaCharStream.hexval('`');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 57: 
JavaCharStream.hexval('a');
Test 58: 
JavaCharStream.hexval('b');
Test 59: 
JavaCharStream.hexval('c');
Test 60: 
JavaCharStream.hexval('d');
Test 61: 
JavaCharStream.hexval('e');
Test 62: 
JavaCharStream.hexval('f');
Test 63: 
try { 
  JavaCharStream.hexval('.');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 64: 
StringReader stringReader = new StringReader("'jk K7=5>Q");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 0, 0);
javaCharStream.ReInit((Reader) stringReader, 1, 569, 0);
javaCharStream.readChar();
javaCharStream.getColumn();
Test 65: 
StringReader stringReader = new StringReader(".");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2915, 2915, 2915);
javaCharStream.BeginToken();
try { 
  javaCharStream.FillBuff();
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 66: 
byte[] byteArray = new byte[2];
byteArray[1] = (byte)92;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
javaCharStream.BeginToken();
javaCharStream.readChar();
Test 67: 
StringReader stringReader = new StringReader(",.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-2372), (-2372));
javaCharStream.backup(71);
javaCharStream.BeginToken();
javaCharStream.AdjustBuffSize();
Test 68: 
StringReader stringReader = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-875), 1, 1);
javaCharStream.readChar();
javaCharStream.backup(1);
javaCharStream.BeginToken();
Test 69: 
StringReader stringReader = new StringReader("m1>8@-");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.available = (-2);
// Undeclared exception!
try { 
  javaCharStream.AdjustBuffSize();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 70: 
StringReader stringReader = new StringReader("m1>8@-");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.bufsize = (-1);
javaCharStream.AdjustBuffSize();
Test 71: 
StringReader stringReader = new StringReader("m1>8@-");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.backup(30);
javaCharStream.available = 30;
javaCharStream.BeginToken();
javaCharStream.AdjustBuffSize();
Test 72: 
StringReader stringReader = new StringReader("m1>8@-");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.prevCharIsLF = true;
javaCharStream.BeginToken();
Test 73: 
byte[] byteArray = new byte[8];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
javaCharStream.prevCharIsCR = true;
javaCharStream.readChar();
Test 74: 
byte[] byteArray = new byte[8];
byteArray[0] = (byte)10;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
javaCharStream.prevCharIsCR = true;
javaCharStream.readChar();
Test 75: 
byte[] byteArray = new byte[2];
byteArray[0] = (byte)9;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
javaCharStream.BeginToken();
Test 76: 
byte[] byteArray = new byte[2];
byteArray[0] = (byte)11;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
javaCharStream.readChar();
Test 77: 
byte[] byteArray = new byte[9];
byteArray[0] = (byte)12;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
javaCharStream.readChar();
Test 78: 
byte[] byteArray = new byte[6];
byteArray[2] = (byte)13;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
byteArrayInputStream.read();
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
byteArrayInputStream.read();
javaCharStream.BeginToken();
Test 79: 
StringReader stringReader = new StringReader("m1>8@-");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.inBuf = 12;
javaCharStream.readChar();
javaCharStream.getEndColumn();
Test 80: 
byte[] byteArray = new byte[2];
byteArray[0] = (byte)92;
byteArray[1] = (byte)92;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
javaCharStream.BeginToken();
javaCharStream.readChar();
Test 81: 
StringReader stringReader = new StringReader("f&$<>dGcs");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-2209), (-2209), 0);
javaCharStream.GetImage();
Test 82: 
StringReader stringReader = new StringReader("yuZSov");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.backup(0);
javaCharStream.GetImage();
Test 83: 
StringReader stringReader = new StringReader("8");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 11, 70);
javaCharStream.GetSuffix(11);
Test 84: 
StringReader stringReader = new StringReader("");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.GetSuffix(0);
Test 85: 
StringReader stringReader = new StringReader("");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-2496), (-2496), 0);
// Undeclared exception!
try { 
  javaCharStream.adjustBeginLineColumn((-2496), (-2496));
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 86: 
StringReader stringReader = new StringReader("8");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 11, 70);
javaCharStream.readChar();
javaCharStream.adjustBeginLineColumn(11, 98);
Test 87: 
StringReader stringReader = new StringReader("m1>8@-");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.adjustBeginLineColumn((-1241), (-1241));
javaCharStream.adjustBeginLineColumn((-1241), (-1241));
Test 88: 
PipedInputStream pipedInputStream = new PipedInputStream();
JavaCharStream javaCharStream = new JavaCharStream(pipedInputStream);
javaCharStream.ReInit((InputStream) pipedInputStream, (-1318), (-1318), 1);
Test 89: 
byte[] byteArray = new byte[3];
byteArray[0] = (byte)92;
byteArray[1] = (byte)92;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
javaCharStream.readChar();
Test 90: 
byte[] byteArray = new byte[3];
byteArray[0] = (byte)92;
byteArray[1] = (byte)92;
byteArray[2] = (byte)92;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
javaCharStream.readChar();
Test 91: 
StringReader stringReader = new StringReader("m1628-");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.backup((-1529));
Test 92: 
JavaCharStream javaCharStream = new JavaCharStream((Reader) null, 1141, 95, 33);
StringReader stringReader = new StringReader("0qW3-Pdm|)s)o");
javaCharStream.ReInit((Reader) stringReader, 18, 1141, 33);
javaCharStream.ReadByte();
Test 93: 
StringReader stringReader = new StringReader("X8j;75(hQI|}");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.BeginToken();
javaCharStream.BeginToken();
Test 94: 
StringReader stringReader = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-875), 1, 1);
javaCharStream.ReadByte();
Test 95: 
StringReader stringReader = new StringReader("z{KsBM_&>%");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-3280), (-3280));
int[] intArray = new int[5];
intArray[0] = (-1);
javaCharStream.bufcolumn = intArray;
javaCharStream.getBeginColumn();
Test 96: 
StringReader stringReader = new StringReader("Dlf[Y3 K>D-r.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2, 2);
javaCharStream.readChar();
javaCharStream.getBeginColumn();
Test 97: 
StringReader stringReader = new StringReader("^");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-1166), 63);
javaCharStream.BeginToken();
javaCharStream.getBeginLine();
Test 98: 
StringReader stringReader = new StringReader("dEG,");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.BeginToken();
javaCharStream.getBeginLine();
Test 99: 
StringReader stringReader = new StringReader("y(>");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1595, 1595);
javaCharStream.BeginToken();
javaCharStream.adjustBeginLineColumn(1595, (-966));
javaCharStream.getColumn();
Test 100: 
StringReader stringReader = new StringReader("m1>8@-");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.inBuf = 12;
javaCharStream.BeginToken();
javaCharStream.getColumn();
Test 101: 
StringReader stringReader = new StringReader("m1>8@-");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-1), (-1), 1);
javaCharStream.BeginToken();
javaCharStream.getEndColumn();
Test 102: 
StringReader stringReader = new StringReader("X8j;75(hQI|}");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.BeginToken();
javaCharStream.getEndColumn();
Test 103: 
StringReader stringReader = new StringReader("X8j;75(hQI|}");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.BeginToken();
javaCharStream.adjustBeginLineColumn((-1241), (-1241));
javaCharStream.getEndLine();
Test 104: 
StringReader stringReader = new StringReader("m1>8@-");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.readChar();
javaCharStream.getEndLine();
Test 105: 
StringReader stringReader = new StringReader(".");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2915, 2915, 2915);
javaCharStream.inBuf = 2915;
javaCharStream.BeginToken();
javaCharStream.getEndLine();
Test 106: 
byte[] byteArray = new byte[12];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, (-36), (byte)125);
javaCharStream.BeginToken();
javaCharStream.getLine();
Test 107: 
StringReader stringReader = new StringReader("aDLH~BRS.j9f6(");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 12, 1);
javaCharStream.BeginToken();
javaCharStream.getLine();
Test 108: 
StringReader stringReader = new StringReader(".");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2915, 2915, 2915);
javaCharStream.inBuf = 2915;
javaCharStream.BeginToken();
javaCharStream.getLine();
Test 109: 
StringReader stringReader = new StringReader("");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-5557), (-5557));
javaCharStream.bufpos = 1;
javaCharStream.ExpandBuff(true);
Test 110: 
PipedInputStream pipedInputStream = new PipedInputStream();
JavaCharStream javaCharStream = new JavaCharStream(pipedInputStream, 1355, 11, 1355);
Test 111: 
StringReader stringReader = new StringReader("2^");
// Undeclared exception!
try { 
  ((JavaCharStream) stringReader).UpdateLineColumn('2');
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
}


* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 95%
* Total number of goals: 216
* Number of covered goals: 205
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 93%
* Total number of goals: 239
* Number of covered goals: 222
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 92%
* Total number of goals: 36
* Number of covered goals: 33
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 31
* Number of covered goals: 31
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 95%
* Total number of goals: 216
* Number of covered goals: 205
* Generated 112 tests with total length 301
* Resulting test suite's coverage: 95% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 32%
* Compiling and checking tests
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: StringReader arg0 = new StringReader("Dlf[Y3 K>D-r.");
JavaCharStream javaCharStream = new JavaCharStream(arg0, 2, 2);
javaCharStream.getBeginColumn();
assertEquals((-1), javaCharStream.bufpos);


** It was a parseable test case! 
refined test name is: testGetBeginColumnDefaultBufferSizeReturnsMinusOne
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: StringReader arg0 = new StringReader("m1>8@-");
JavaCharStream javaCharStream = new JavaCharStream(arg0);
javaCharStream.ReInit((Reader) arg0, (-1), (-1));
assertEquals((-1), javaCharStream.bufpos);


** It was a parseable test case! 
refined test name is: testReInitWithNegativeValues
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: StringReader arg0 = new StringReader("dEG,");
JavaCharStream javaCharStream = new JavaCharStream(arg0);
javaCharStream.getBeginLine();
assertEquals((-1), javaCharStream.bufpos);


** It was a parseable test case! 
refined test name is: testBufferPosition
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: StringReader arg0 = new StringReader("");
JavaCharStream javaCharStream = new JavaCharStream(arg0);
javaCharStream.Done();
// Undeclared exception!
try { 
  javaCharStream.ReInit((Reader) arg0, (-1), (-1), (-1));
  fail("Expecting exception: NegativeArraySizeException");

} catch(NegativeArraySizeException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}


** It was a parseable test case! 
refined test name is: testConstructorThrowsNegativeArraySizeException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: int hexval = JavaCharStream.hexval('0');
assertEquals(0, hexval);


** It was a parseable test case! 
refined test name is: testHexvalZero
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: int hexval = JavaCharStream.hexval('A');
assertEquals(10, hexval);


** It was a parseable test case! 
refined test name is: testHexValOfLetterA
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: int hexval = JavaCharStream.hexval('1');
assertEquals(1, hexval);


** It was a parseable test case! 
refined test name is: testHexval
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: int hexval = JavaCharStream.hexval('2');
assertEquals(2, hexval);


** It was a parseable test case! 
refined test name is: testHexValOfDigitTwo
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: int hexval = JavaCharStream.hexval('3');
assertEquals(3, hexval);


** It was a parseable test case! 
refined test name is: testHexValOfDigit3
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: int hexval = JavaCharStream.hexval('4');
assertEquals(4, hexval);


** It was a parseable test case! 
refined test name is: testHexvalconvertsCharacterToIntegerValue
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: int hexval = JavaCharStream.hexval('5');
assertEquals(5, hexval);


** It was a parseable test case! 
refined test name is: testHexValOfCharacterFive
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: int hexval = JavaCharStream.hexval('6');
assertEquals(6, hexval);


** It was a parseable test case! 
refined test name is: testHexValForChar6
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: int hexval = JavaCharStream.hexval('7');
assertEquals(7, hexval);


** It was a parseable test case! 
refined test name is: testHexValReturnsCorrectValue
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: int hexval = JavaCharStream.hexval('8');
assertEquals(8, hexval);


** It was a parseable test case! 
refined test name is: testHexValOfCharacterEight
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: int hexval = JavaCharStream.hexval('9');
assertEquals(9, hexval);


** It was a parseable test case! 
refined test name is: testHexValMethod
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: try { 
  JavaCharStream.hexval(':');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}


** It was a parseable test case! 
refined test name is: testHexvalThrowsIOExceptionWithInvalidCharacter
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: try { 
  JavaCharStream.hexval(';');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}


** It was a parseable test case! 
refined test name is: testIOExceptionIsThrownWhenInvalidCharacterPassed
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: try { 
  JavaCharStream.hexval('<');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}


** It was a parseable test case! 
refined test name is: testHexvalInvalidInputThrowsException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: try { 
  JavaCharStream.hexval('=');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}


** It was a parseable test case! 
refined test name is: testInvalidHexCharacterHandling
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: try { 
  JavaCharStream.hexval('>');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}


** It was a parseable test case! 
refined test name is: testIOException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: try { 
  JavaCharStream.hexval('?');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}


** It was a parseable test case! 
refined test name is: testHexvalWithQuestionMarkThrowsIOException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: try { 
  JavaCharStream.hexval('@');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}


** It was a parseable test case! 
refined test name is: testHexvalWithInvalidCharacterThrowsIOException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: int hexval = JavaCharStream.hexval('B');
assertEquals(11, hexval);


** It was a parseable test case! 
refined test name is: testHexValOfBIsCorrect
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: int hexval = JavaCharStream.hexval('C');
assertEquals(12, hexval);


** It was a parseable test case! 
refined test name is: testHexvalOfCharacterCReturns12
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: int hexval = JavaCharStream.hexval('D');
assertEquals(13, hexval);


** It was a parseable test case! 
refined test name is: testHexvalOfCharacterDShouldReturn13
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: int hexval = JavaCharStream.hexval('E');
assertEquals(14, hexval);


** It was a parseable test case! 
refined test name is: testHexValOfE
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: int hexval = JavaCharStream.hexval('F');
assertEquals(15, hexval);


** It was a parseable test case! 
refined test name is: testHexValOfF
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: try { 
  JavaCharStream.hexval('G');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}


** It was a parseable test case! 
refined test name is: testInvalidCharacterInInputStreamThrowsIOException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: try { 
  JavaCharStream.hexval('H');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}


** It was a parseable test case! 
refined test name is: testInvalidCharacterToHexadecimal
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: try { 
  JavaCharStream.hexval('I');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}


** It was a parseable test case! 
refined test name is: testHexvalThrowsExceptionOnNullMessage
* Compiling Tests
refined test name is: testHexvalThrowsIOExceptionWhenMessageIsNull
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: try { 
  JavaCharStream.hexval('J');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}


** It was a parseable test case! 
refined test name is: testHexvalInvalidCharacter
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: try { 
  JavaCharStream.hexval('K');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}


** It was a parseable test case! 
refined test name is: testHexvalInvalidInputThrowsIOException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: try { 
  JavaCharStream.hexval('L');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}


** It was a parseable test case! 
refined test name is: testInvalidHexCharacterThrowsIOException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: try { 
  JavaCharStream.hexval('M');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}


** It was a parseable test case! 
refined test name is: testInvalidCharacterHexval
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: try { 
  JavaCharStream.hexval('N');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}


** It was a parseable test case! 
refined test name is: testConstructWithNullOrEmptyString
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: try { 
  JavaCharStream.hexval('O');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}


** It was a parseable test case! 
refined test name is: testHexvalInvalidCharacterThrowsIOException
* Compiling Tests
refined test name is: testHexvalInvalidCharacterThrowsIOException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: try { 
  JavaCharStream.hexval('P');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}


** It was a parseable test case! 
refined test name is: testHexvalThrowsExceptionForNonHexChars
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: try { 
  JavaCharStream.hexval('Q');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}


** It was a parseable test case! 
refined test name is: testInvalidInputThrowsException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: try { 
  JavaCharStream.hexval('R');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}


** It was a parseable test case! 
refined test name is: testIOExceptionIsThrownWhenInputIsInvalidHexValue
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: try { 
  JavaCharStream.hexval('S');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}


** It was a parseable test case! 
refined test name is: testHexValInvalidCharacter
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: try { 
  JavaCharStream.hexval('T');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}


** It was a parseable test case! 
refined test name is: testHexvalThrowsIOExceptionForInvalidString
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: try { 
  JavaCharStream.hexval('U');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}


** It was a parseable test case! 
refined test name is: testInvalidInputForJavaCharStreamConstructor
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: try { 
  JavaCharStream.hexval('V');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}


** It was a parseable test case! 
refined test name is: testInvalidCharacterthrowsIOException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: try { 
  JavaCharStream.hexval('W');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}


** It was a parseable test case! 
refined test name is: testHexValueThrowsIOExceptionWhenInvalid
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: try { 
  JavaCharStream.hexval('X');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}


** It was a parseable test case! 
refined test name is: testConstructorInvalidHexValue
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: try { 
  JavaCharStream.hexval('Y');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}


** It was a parseable test case! 
refined test name is: testHexvalThrowsExceptionForInvalidCharacter
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: try { 
  JavaCharStream.hexval('Z');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}


** It was a parseable test case! 
refined test name is: testHexvalThrowsIOException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: try { 
  JavaCharStream.hexval('[');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}


** It was a parseable test case! 
refined test name is: testHexvalThrowsIOExceptionForInvalidInput
* Compiling Tests
refined test name is: testHexvalThrowsExceptionOnMalformedInput
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: try { 
  JavaCharStream.hexval('\\');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}


** It was a parseable test case! 
refined test name is: testHexvalInvalidCharacterThrowsException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: try { 
  JavaCharStream.hexval(']');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}


** It was a parseable test case! 
refined test name is: testInvalidCharacterThrowsIOException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: try { 
  JavaCharStream.hexval('^');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}


** It was a parseable test case! 
refined test name is: testForExceptionWhenParsingInvalidCharacter
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: try { 
  JavaCharStream.hexval('_');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}


** It was a parseable test case! 
refined test name is: testInvalidHexCharThrowsIOException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: try { 
  JavaCharStream.hexval('`');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}


** It was a parseable test case! 
refined test name is: testHexvalThrowsIOExceptionForInvalidCharacter
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: int hexval = JavaCharStream.hexval('a');
assertEquals(10, hexval);


** It was a parseable test case! 
refined test name is: testHexval
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: int hexval = JavaCharStream.hexval('b');
assertEquals(11, hexval);


** It was a parseable test case! 
refined test name is: testHexvalOfCharacterBShouldReturnEleven
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: int hexval = JavaCharStream.hexval('c');
assertEquals(12, hexval);


** It was a parseable test case! 
refined test name is: testHexvalForSingleChar
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: int hexval = JavaCharStream.hexval('d');
assertEquals(13, hexval);


** It was a parseable test case! 
refined test name is: testHexValueOfLowercaseD
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: int hexval = JavaCharStream.hexval('e');
assertEquals(14, hexval);


** It was a parseable test case! 
refined test name is: testHexValValidCharacterReturns14
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: int hexval = JavaCharStream.hexval('f');
assertEquals(15, hexval);


** It was a parseable test case! 
refined test name is: testHexVal
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: try { 
  JavaCharStream.hexval('.');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}


** It was a parseable test case! 
refined test name is: testHexvalInvalidCharacterThrowsIOException
* Compiling Tests
refined test name is: testhexvalthrowsIOExceptionforNonHexDigit
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: StringReader arg0 = new StringReader("'jk K7=5>Q");
JavaCharStream javaCharStream = new JavaCharStream(arg0, 0, 0);
javaCharStream.ReInit((Reader) arg0, 1, 569, 0);
javaCharStream.readChar();
int column = javaCharStream.getColumn();
assertEquals(569, javaCharStream.getBeginColumn());
assertEquals(569, column);


** It was a parseable test case! 
refined test name is: testJavaCharStreamReInit
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: StringReader arg0 = new StringReader(".");
JavaCharStream javaCharStream = new JavaCharStream(arg0, 2915, 2915, 2915);
javaCharStream.BeginToken();
try { 
  javaCharStream.FillBuff();
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}


** It was a parseable test case! 
refined test name is: testFillBuffIOExceptionThrown
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: StringReader arg0 = new StringReader(",.");
JavaCharStream javaCharStream = new JavaCharStream(arg0, (-2372), (-2372));
javaCharStream.backup(71);
javaCharStream.BeginToken();
javaCharStream.AdjustBuffSize();
assertEquals(0, javaCharStream.bufpos);


** It was a parseable test case! 
refined test name is: testBackupMethod
* Compiling Tests
refined test name is: testBackupMethodWithStringReaderAndBufferSize
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: StringReader arg0 = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
JavaCharStream javaCharStream = new JavaCharStream(arg0, (-875), 1, 1);
javaCharStream.readChar();
javaCharStream.backup(1);
char BeginToken = javaCharStream.BeginToken();
assertEquals((-875), javaCharStream.getBeginLine());
assertEquals('c', BeginToken);


** It was a parseable test case! 
refined test name is: testConstructorInitialization
* Compiling Tests
refined test name is: testJavaCharStreamInitialization
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: StringReader arg0 = new StringReader("m1>8@-");
JavaCharStream javaCharStream = new JavaCharStream(arg0);
javaCharStream.available = (-2);
// Undeclared exception!
try { 
  javaCharStream.AdjustBuffSize();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}


** It was a parseable test case! 
refined test name is: testAdjustBuffSizeNegativeAvailableThrowsError
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: StringReader arg0 = new StringReader("m1>8@-");
JavaCharStream javaCharStream = new JavaCharStream(arg0);
javaCharStream.bufsize = (-1);
javaCharStream.AdjustBuffSize();
assertEquals((-1), javaCharStream.bufpos);


** It was a parseable test case! 
refined test name is: testBufferSizeIsSetToNegativeOne
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: StringReader arg0 = new StringReader("m1>8@-");
JavaCharStream javaCharStream = new JavaCharStream(arg0);
javaCharStream.backup(30);
javaCharStream.available = 30;
javaCharStream.BeginToken();
javaCharStream.AdjustBuffSize();
assertEquals(4066, javaCharStream.bufpos);


** It was a parseable test case! 
refined test name is: testBackupMethod
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: StringReader arg0 = new StringReader("m1>8@-");
JavaCharStream javaCharStream = new JavaCharStream(arg0);
javaCharStream.prevCharIsLF = true;
char BeginToken = javaCharStream.BeginToken();
assertEquals(0, javaCharStream.bufpos);
assertEquals('m', BeginToken);


** It was a parseable test case! 
refined test name is: testBeginTokenreturnsExpectedCharacter
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: StringReader arg0 = new StringReader("m1>8@-");
JavaCharStream javaCharStream = new JavaCharStream(arg0);
javaCharStream.inBuf = 12;
javaCharStream.readChar();
int endColumn = javaCharStream.getEndColumn();
assertEquals(0, javaCharStream.bufpos);
assertEquals(0, endColumn);


** It was a parseable test case! 
refined test name is: testReadCharFromString
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: StringReader arg0 = new StringReader("f&$<>dGcs");
JavaCharStream javaCharStream = new JavaCharStream(arg0, (-2209), (-2209), 0);
String GetImage = javaCharStream.GetImage();
assertEquals("", GetImage);


** It was a parseable test case! 
refined test name is: testGetImageWithSpecialCharsReturnsEmptyString
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: StringReader arg0 = new StringReader("yuZSov");
JavaCharStream javaCharStream = new JavaCharStream(arg0);
javaCharStream.backup(0);
javaCharStream.GetImage();
assertEquals(4095, javaCharStream.bufpos);


** It was a parseable test case! 
refined test name is: testBackup
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: StringReader arg0 = new StringReader("8");
JavaCharStream javaCharStream = new JavaCharStream(arg0, 11, 70);
char[] GetSuffix = javaCharStream.GetSuffix(11);
assertEquals(11, GetSuffix.length);


** It was a parseable test case! 
refined test name is: testJavaCharStreamGetSuffixWithOffset
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: StringReader arg0 = new StringReader("");
JavaCharStream javaCharStream = new JavaCharStream(arg0);
char[] GetSuffix = javaCharStream.GetSuffix(0);
assertEquals(0, GetSuffix.length);


** It was a parseable test case! 
refined test name is: testGetSuffixEmptyString
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: StringReader arg0 = new StringReader("");
JavaCharStream javaCharStream = new JavaCharStream(arg0, (-2496), (-2496), 0);
// Undeclared exception!
try { 
  javaCharStream.adjustBeginLineColumn((-2496), (-2496));
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // 0
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}


** It was a parseable test case! 
refined test name is: testAdjustBeginLineColumnOutOfBounds
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: StringReader arg0 = new StringReader("8");
JavaCharStream javaCharStream = new JavaCharStream(arg0, 11, 70);
javaCharStream.readChar();
javaCharStream.adjustBeginLineColumn(11, 98);
assertEquals(0, javaCharStream.bufpos);


** It was a parseable test case! 
refined test name is: testBufferPositionIsZeroAfterReadingFirstCharacter
* Compiling Tests
refined test name is: testBufferPositionIsZeroAfterReadingFirstCharacter
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: StringReader arg0 = new StringReader("m1>8@-");
JavaCharStream javaCharStream = new JavaCharStream(arg0);
javaCharStream.adjustBeginLineColumn((-1241), (-1241));
javaCharStream.adjustBeginLineColumn((-1241), (-1241));
assertEquals((-1241), javaCharStream.getBeginColumn());


** It was a parseable test case! 
refined test name is: testAdjustBeginLineAndColumn
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: PipedInputStream arg0 = new PipedInputStream();
JavaCharStream javaCharStream = new JavaCharStream(arg0);
javaCharStream.ReInit((InputStream) arg0, (-1318), (-1318), 1);
assertFalse(JavaCharStream.staticFlag);


** It was a parseable test case! 
refined test name is: testConstructorSetsStaticFlagToFalse
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: StringReader arg0 = new StringReader("m1628-");
JavaCharStream javaCharStream = new JavaCharStream(arg0);
javaCharStream.backup((-1529));
assertEquals(1528, javaCharStream.bufpos);


** It was a parseable test case! 
refined test name is: testBackupWithNegativeArgument
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: JavaCharStream javaCharStream = new JavaCharStream((Reader) null, 1141, 95, 33);
StringReader arg0 = new StringReader("0qW3-Pdm|)s)o");
javaCharStream.ReInit((Reader) arg0, 18, 1141, 33);
char ReadByte = javaCharStream.ReadByte();
assertEquals('0', ReadByte);


** It was a parseable test case! 
refined test name is: testInitializationWithStringReader
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: StringReader arg0 = new StringReader("X8j;75(hQI|}");
JavaCharStream javaCharStream = new JavaCharStream(arg0);
javaCharStream.BeginToken();
char BeginToken = javaCharStream.BeginToken();
assertEquals(0, javaCharStream.bufpos);
assertEquals('8', BeginToken);


** It was a parseable test case! 
refined test name is: testBeginTokenReturnsFirstToken
* Compiling Tests
refined test name is: testInitializeAndGetFirstToken
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: StringReader arg0 = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
JavaCharStream javaCharStream = new JavaCharStream(arg0, (-875), 1, 1);
char ReadByte = javaCharStream.ReadByte();
assertEquals('c', ReadByte);


** It was a parseable test case! 
refined test name is: testReadByteFromInputString
* Compiling Tests
refined test name is: testReadByteFromInputStringReader
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: StringReader arg0 = new StringReader("z{KsBM_&>%");
JavaCharStream javaCharStream = new JavaCharStream(arg0, (-3280), (-3280));
int[] intArray = new int[5];
intArray[0] = (-1);
javaCharStream.bufcolumn = intArray;
int beginColumn = javaCharStream.getBeginColumn();
assertEquals((-1), beginColumn);


** It was a parseable test case! 
refined test name is: testNegativeBufferSize
* Compiling Tests
refined test name is: testNegativeBufferSizeJavaCharStream
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: StringReader arg0 = new StringReader("Dlf[Y3 K>D-r.");
JavaCharStream javaCharStream = new JavaCharStream(arg0, 2, 2);
javaCharStream.readChar();
int beginColumn = javaCharStream.getBeginColumn();
assertEquals(0, javaCharStream.bufpos);
assertEquals(2, beginColumn);


** It was a parseable test case! 
refined test name is: testJavaCharStreamInitializationWithStringReader
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: StringReader arg0 = new StringReader("^");
JavaCharStream javaCharStream = new JavaCharStream(arg0, (-1166), 63);
javaCharStream.BeginToken();
int beginLine = javaCharStream.getBeginLine();
assertEquals(0, javaCharStream.bufpos);
assertEquals((-1166), beginLine);


** It was a parseable test case! 
refined test name is: testConstructorWithValidBufferPosAndBeginLine
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: StringReader arg0 = new StringReader("dEG,");
JavaCharStream javaCharStream = new JavaCharStream(arg0);
javaCharStream.BeginToken();
int beginLine = javaCharStream.getBeginLine();
assertEquals(0, javaCharStream.bufpos);
assertEquals(1, beginLine);


** It was a parseable test case! 
refined test name is: testBeginTokenInitializesBufferAndLineNumber
* Compiling Tests
refined test name is: testBeginTokenshouldSetBufposAndBeginLine
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: StringReader arg0 = new StringReader("y(>");
JavaCharStream javaCharStream = new JavaCharStream(arg0, 1595, 1595);
javaCharStream.BeginToken();
javaCharStream.adjustBeginLineColumn(1595, (-966));
int column = javaCharStream.getColumn();
assertEquals(0, javaCharStream.bufpos);
assertEquals((-966), column);


** It was a parseable test case! 
refined test name is: testConstructorWithInitialSize
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: StringReader arg0 = new StringReader("m1>8@-");
JavaCharStream javaCharStream = new JavaCharStream(arg0);
javaCharStream.inBuf = 12;
javaCharStream.BeginToken();
javaCharStream.getColumn();
assertEquals(0, javaCharStream.bufpos);


** It was a parseable test case! 
refined test name is: testBeginTokenSetsColumnToZero
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: StringReader arg0 = new StringReader("m1>8@-");
JavaCharStream javaCharStream = new JavaCharStream(arg0, (-1), (-1), 1);
javaCharStream.BeginToken();
int endColumn = javaCharStream.getEndColumn();
assertEquals(0, javaCharStream.bufpos);
assertEquals((-1), endColumn);


** It was a parseable test case! 
refined test name is: testBeginTokenStringReader
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: StringReader arg0 = new StringReader("X8j;75(hQI|}");
JavaCharStream javaCharStream = new JavaCharStream(arg0);
javaCharStream.BeginToken();
int endColumn = javaCharStream.getEndColumn();
assertEquals(0, javaCharStream.bufpos);
assertEquals(1, endColumn);


** It was a parseable test case! 
refined test name is: testBeginToken
* Compiling Tests
refined test name is: testJavaCharStreamInitialization
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: StringReader arg0 = new StringReader("X8j;75(hQI|}");
JavaCharStream javaCharStream = new JavaCharStream(arg0);
javaCharStream.BeginToken();
javaCharStream.adjustBeginLineColumn((-1241), (-1241));
int endLine = javaCharStream.getEndLine();
assertEquals((-1241), javaCharStream.getLine());
assertEquals((-1241), endLine);


** It was a parseable test case! 
refined test name is: testAdjustBeginLineColumnNegativeValues
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: StringReader arg0 = new StringReader("m1>8@-");
JavaCharStream javaCharStream = new JavaCharStream(arg0);
javaCharStream.readChar();
int endLine = javaCharStream.getEndLine();
assertEquals(1, javaCharStream.getBeginColumn());
assertEquals(1, endLine);


** It was a parseable test case! 
refined test name is: testReadCharEndOfFile
* Compiling Tests
refined test name is: testReadCharReturnsEOFAtEndOfInput
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: StringReader arg0 = new StringReader(".");
JavaCharStream javaCharStream = new JavaCharStream(arg0, 2915, 2915, 2915);
javaCharStream.inBuf = 2915;
javaCharStream.BeginToken();
javaCharStream.getEndLine();
assertEquals(0, javaCharStream.bufpos);


** It was a parseable test case! 
refined test name is: testGetEndLineForTokenWithNoLinesSpanned
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: StringReader arg0 = new StringReader("aDLH~BRS.j9f6(");
JavaCharStream javaCharStream = new JavaCharStream(arg0, 12, 1);
javaCharStream.BeginToken();
int line = javaCharStream.getLine();
assertEquals(12, javaCharStream.getBeginLine());
assertEquals(12, line);


** It was a parseable test case! 
refined test name is: testGetBeginLine
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: StringReader arg0 = new StringReader(".");
JavaCharStream javaCharStream = new JavaCharStream(arg0, 2915, 2915, 2915);
javaCharStream.inBuf = 2915;
javaCharStream.BeginToken();
int line = javaCharStream.getLine();
assertEquals(0, line);


** It was a parseable test case! 
refined test name is: testGetCorrectLineNumber
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: StringReader arg0 = new StringReader("");
JavaCharStream javaCharStream = new JavaCharStream(arg0, (-5557), (-5557));
javaCharStream.bufpos = 1;
javaCharStream.ExpandBuff(true);
assertEquals(4097, javaCharStream.bufpos);


** It was a parseable test case! 
refined test name is: testExpandBuffWithEmptyInput
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: PipedInputStream arg0 = new PipedInputStream();
JavaCharStream javaCharStream = new JavaCharStream(arg0, 1355, 11, 1355);
assertEquals(0, javaCharStream.getBeginColumn());


** It was a parseable test case! 
refined test name is: testBeginColumnValueIsZero
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 20:09:05.965 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:09:05.986 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 20:09:06.026 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:09:06.027 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 20:09:06.065 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:09:06.066 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 20:09:06.095 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:09:06.096 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 20:09:06.122 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:09:06.122 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
[MASTER] 20:09:06.157 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:09:06.157 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 20:09:06.184 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:09:06.184 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
[MASTER] 20:09:06.225 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:09:06.225 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 20:09:06.264 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:09:06.264 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 20:09:06.293 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:09:06.293 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 20:09:06.327 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:09:06.328 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 20:09:06.364 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:09:06.365 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 20:09:06.392 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:09:06.392 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 20:09:06.418 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:09:06.419 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 20:09:06.447 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:09:06.448 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 20:09:06.480 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:09:06.480 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 20:09:06.522 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:09:06.523 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 20:09:06.570 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:09:06.571 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 20:09:06.611 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:09:06.612 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 20:09:06.643 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:09:06.645 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 20:09:06.674 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:09:06.674 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 20:09:06.708 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:09:06.709 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 20:09:06.739 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:09:06.739 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 20:09:06.767 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:09:06.768 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 20:09:06.800 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:09:06.801 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
[MASTER] 20:09:06.835 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:09:06.836 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 20:09:06.865 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:09:06.866 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 20:09:06.897 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:09:06.898 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 20:09:06.933 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:09:06.934 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:09:06.978 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:09:06.978 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 20:09:07.016 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:09:07.017 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
Going to execute: handleTestsThatAreUnstable
[MASTER] 20:09:07.054 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
* Compiling Tests
[MASTER] 20:09:07.055 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
[MASTER] 20:09:07.090 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:09:07.091 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 20:09:07.129 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:09:07.130 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 20:09:07.164 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:09:07.165 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:09:07.203 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:09:07.204 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 20:09:07.248 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:09:07.248 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 20:09:07.281 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:09:07.281 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 20:09:07.313 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:09:07.314 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 20:09:07.348 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:09:07.351 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 20:09:07.386 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:09:07.387 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 20:09:07.422 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:09:07.423 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 20:09:07.456 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:09:07.457 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 20:09:07.501 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:09:07.502 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 20:09:07.545 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:09:07.545 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 20:09:07.588 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:09:07.588 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 20:09:07.636 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:09:07.637 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:09:07.687 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:09:07.688 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 20:09:07.737 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:09:07.737 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 20:09:07.830 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:09:07.841 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 20:09:07.892 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:09:07.893 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 20:09:07.937 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:09:07.938 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 20:09:07.978 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:09:07.978 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 20:09:08.015 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:09:08.016 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 20:09:08.068 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:09:08.069 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 20:09:08.106 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:09:08.107 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 20:09:08.141 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:09:08.142 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 20:09:08.178 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:09:08.178 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 20:09:08.216 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:09:08.217 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 20:09:08.254 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:09:08.254 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
[MASTER] 20:09:08.290 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:09:08.291 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 20:09:08.333 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:09:08.334 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:09:08.384 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:09:08.385 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:09:08.436 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:09:08.437 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 20:09:08.481 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:09:08.482 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 20:09:08.532 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:09:08.533 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 20:09:08.583 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:09:08.584 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 20:09:08.644 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:09:08.645 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 20:09:08.695 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:09:08.696 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 20:09:08.749 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:09:08.750 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 20:09:08.807 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:09:08.809 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 20:09:08.852 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:09:08.853 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 20:09:08.891 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:09:08.892 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 20:09:08.961 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:09:08.962 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:09:09.016 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:09:09.017 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 20:09:09.969 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:09:09.976 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 20:09:10.014 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:09:10.015 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 20:09:10.052 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:09:10.054 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 20:09:10.122 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:09:10.123 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:09:10.172 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:09:10.173 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:09:10.222 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:09:10.222 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:09:10.275 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:09:10.276 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 20:09:10.342 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:09:10.343 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 20:09:10.412 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:09:10.413 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:09:10.485 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:09:10.486 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 20:09:10.547 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:09:10.551 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 20:09:10.600 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:09:10.601 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 20:09:10.653 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:09:10.653 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:09:10.714 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:09:10.714 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 20:09:10.766 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:09:10.766 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:09:10.829 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:09:10.829 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 20:09:10.893 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:09:10.894 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 20:09:11.198 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:09:11.198 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 20:09:11.228 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:09:11.229 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 20:09:11.258 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:09:11.259 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 20:09:11.288 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:09:11.290 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 29 called: 0 to improve: false
** Write a test suite: 35 called: 1 to improve: false
** Write a test suite: 47 called: 2 to improve: false
** Write a test suite: 59 called: 3 to improve: false
** Write a test suite: 62 called: 4 to improve: false
** Write a test suite: 63 called: 5 to improve: false
** Write a test suite: 74 called: 6 to improve: false
** Write a test suite: 79 called: 7 to improve: false
** Write a test suite: 80 called: 8 to improve: false
** Write a test suite: 81 called: 9 to improve: false
** Write a test suite: 84 called: 10 to improve: false
** Write a test suite: 88 called: 11 to improve: false
** Write a test suite: 90 called: 12 to improve: false
[MASTER] 20:09:12.517 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:09:12.518 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 5 called: 0 to improve: false
** Write a test suite: 7 called: 1 to improve: false
** Write a test suite: 11 called: 2 to improve: false
** Write a test suite: 14 called: 3 to improve: false
** Write a test suite: 15 called: 4 to improve: false
** Write a test suite: 16 called: 5 to improve: false
** Write a test suite: 21 called: 6 to improve: false
** Write a test suite: 32 called: 7 to improve: false
** Write a test suite: 33 called: 8 to improve: false
** Write a test suite: 36 called: 9 to improve: false
** Write a test suite: 48 called: 10 to improve: false
** Write a test suite: 60 called: 11 to improve: false
** Write a test suite: 66 called: 12 to improve: false
[MASTER] 20:09:13.640 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:09:13.641 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
[MASTER] 20:09:13.974 [logback-1] WARN  TimeController - Already entered in phase: INLINING. This will mess up the timing calculations.
* test suite isTestSuite: 112
Test 0: 
StringReader stringReader = new StringReader("m1>8@-");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
FileDescriptor fileDescriptor = new FileDescriptor();
MockFileInputStream mockFileInputStream = new MockFileInputStream(fileDescriptor);
javaCharStream.ReInit((InputStream) mockFileInputStream, (-1), 1085);
Test 1: 
PipedInputStream pipedInputStream = new PipedInputStream();
JavaCharStream javaCharStream = new JavaCharStream(pipedInputStream);
StringReader stringReader = new StringReader("=dW[)|0G4`H{do$");
javaCharStream.ReInit((Reader) stringReader);
Test 2: 
StringReader stringReader = new StringReader("Dlf[Y3 K>D-r.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2, 2);
javaCharStream.getBeginColumn();
Test 3: 
StringReader stringReader = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
FileDescriptor fileDescriptor = new FileDescriptor();
MockFileInputStream mockFileInputStream = new MockFileInputStream(fileDescriptor);
javaCharStream.ReInit((InputStream) mockFileInputStream);
Test 4: 
StringReader stringReader = new StringReader("m1>8@-");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.ReInit((Reader) stringReader, (-1), (-1));
Test 5: 
StringReader stringReader = new StringReader("dEG,");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.getBeginLine();
Test 6: 
StringReader stringReader = new StringReader("");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.Done();
// Undeclared exception!
try { 
  javaCharStream.ReInit((Reader) stringReader, (-1), (-1), (-1));
  fail("Expecting exception: NegativeArraySizeException");

} catch(NegativeArraySizeException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 7: 
JavaCharStream.hexval('0');
Test 8: 
try { 
  JavaCharStream.hexval('\u0000');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 9: 
JavaCharStream.hexval('1');
Test 10: 
JavaCharStream.hexval('2');
Test 11: 
JavaCharStream.hexval('3');
Test 12: 
JavaCharStream.hexval('4');
Test 13: 
JavaCharStream.hexval('5');
Test 14: 
JavaCharStream.hexval('6');
Test 15: 
JavaCharStream.hexval('7');
Test 16: 
JavaCharStream.hexval('8');
Test 17: 
JavaCharStream.hexval('9');
Test 18: 
try { 
  JavaCharStream.hexval(':');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 19: 
try { 
  JavaCharStream.hexval(';');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 20: 
try { 
  JavaCharStream.hexval('<');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 21: 
try { 
  JavaCharStream.hexval('=');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 22: 
try { 
  JavaCharStream.hexval('>');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 23: 
try { 
  JavaCharStream.hexval('?');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 24: 
try { 
  JavaCharStream.hexval('@');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 25: 
JavaCharStream.hexval('A');
Test 26: 
JavaCharStream.hexval('B');
Test 27: 
JavaCharStream.hexval('C');
Test 28: 
JavaCharStream.hexval('D');
Test 29: 
JavaCharStream.hexval('E');
Test 30: 
JavaCharStream.hexval('F');
Test 31: 
try { 
  JavaCharStream.hexval('G');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 32: 
try { 
  JavaCharStream.hexval('H');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 33: 
try { 
  JavaCharStream.hexval('I');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 34: 
try { 
  JavaCharStream.hexval('J');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 35: 
try { 
  JavaCharStream.hexval('K');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 36: 
try { 
  JavaCharStream.hexval('L');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 37: 
try { 
  JavaCharStream.hexval('M');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 38: 
try { 
  JavaCharStream.hexval('N');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 39: 
try { 
  JavaCharStream.hexval('O');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 40: 
try { 
  JavaCharStream.hexval('P');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 41: 
try { 
  JavaCharStream.hexval('Q');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 42: 
try { 
  JavaCharStream.hexval('R');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 43: 
try { 
  JavaCharStream.hexval('S');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 44: 
try { 
  JavaCharStream.hexval('T');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 45: 
try { 
  JavaCharStream.hexval('U');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 46: 
try { 
  JavaCharStream.hexval('V');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 47: 
try { 
  JavaCharStream.hexval('W');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 48: 
try { 
  JavaCharStream.hexval('X');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 49: 
try { 
  JavaCharStream.hexval('Y');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 50: 
try { 
  JavaCharStream.hexval('Z');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 51: 
try { 
  JavaCharStream.hexval('[');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 52: 
try { 
  JavaCharStream.hexval('\\');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 53: 
try { 
  JavaCharStream.hexval(']');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 54: 
try { 
  JavaCharStream.hexval('^');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 55: 
try { 
  JavaCharStream.hexval('_');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 56: 
try { 
  JavaCharStream.hexval('`');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 57: 
JavaCharStream.hexval('a');
Test 58: 
JavaCharStream.hexval('b');
Test 59: 
JavaCharStream.hexval('c');
Test 60: 
JavaCharStream.hexval('d');
Test 61: 
JavaCharStream.hexval('e');
Test 62: 
JavaCharStream.hexval('f');
Test 63: 
StringReader stringReader = new StringReader("dEG,");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.BeginToken();
javaCharStream.getBeginLine();
Test 64: 
StringReader stringReader = new StringReader(".");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2915, 2915, 2915);
javaCharStream.BeginToken();
try { 
  javaCharStream.FillBuff();
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 65: 
StringReader stringReader = new StringReader(",.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-2372), (-2372));
javaCharStream.backup(71);
javaCharStream.BeginToken();
javaCharStream.AdjustBuffSize();
Test 66: 
StringReader stringReader = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-875), 1, 1);
javaCharStream.readChar();
javaCharStream.backup(1);
javaCharStream.BeginToken();
Test 67: 
StringReader stringReader = new StringReader("m1>8@-");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.bufsize = (-1);
javaCharStream.AdjustBuffSize();
Test 68: 
StringReader stringReader = new StringReader("m1>8@-");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.backup(30);
javaCharStream.available = 30;
javaCharStream.BeginToken();
javaCharStream.AdjustBuffSize();
Test 69: 
StringReader stringReader = new StringReader("m1>8@-");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.available = (-2);
// Undeclared exception!
try { 
  javaCharStream.AdjustBuffSize();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 70: 
byte[] byteArray = new byte[8];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
javaCharStream.prevCharIsCR = true;
javaCharStream.readChar();
Test 71: 
byte[] byteArray = new byte[8];
byteArray[0] = (byte)10;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
javaCharStream.prevCharIsCR = true;
javaCharStream.readChar();
Test 72: 
byte[] byteArray = new byte[2];
byteArray[0] = (byte)9;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
javaCharStream.BeginToken();
Test 73: 
byte[] byteArray = new byte[2];
byteArray[0] = (byte)11;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
javaCharStream.readChar();
Test 74: 
byte[] byteArray = new byte[9];
byteArray[0] = (byte)12;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
javaCharStream.readChar();
Test 75: 
byte[] byteArray = new byte[6];
byteArray[2] = (byte)13;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
byteArrayInputStream.read();
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
byteArrayInputStream.read();
javaCharStream.BeginToken();
Test 76: 
StringReader stringReader = new StringReader("m1>8@-");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.inBuf = 12;
javaCharStream.readChar();
javaCharStream.getEndColumn();
Test 77: 
byte[] byteArray = new byte[2];
byteArray[0] = (byte)92;
byteArray[1] = (byte)92;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
javaCharStream.BeginToken();
javaCharStream.readChar();
Test 78: 
StringReader stringReader = new StringReader("'jk K7=5>Q");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 0, 0);
javaCharStream.ReInit((Reader) stringReader, 1, 569, 0);
javaCharStream.readChar();
javaCharStream.getColumn();
Test 79: 
StringReader stringReader = new StringReader("yuZSov");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.backup(0);
javaCharStream.GetImage();
Test 80: 
StringReader stringReader = new StringReader("8");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 11, 70);
javaCharStream.GetSuffix(11);
Test 81: 
StringReader stringReader = new StringReader("");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.GetSuffix(0);
Test 82: 
StringReader stringReader = new StringReader("8");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 11, 70);
javaCharStream.readChar();
javaCharStream.adjustBeginLineColumn(11, 98);
Test 83: 
StringReader stringReader = new StringReader("");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-2496), (-2496), 0);
// Undeclared exception!
try { 
  javaCharStream.adjustBeginLineColumn((-2496), (-2496));
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 84: 
StringReader stringReader = new StringReader("m1>8@-");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.adjustBeginLineColumn((-1241), (-1241));
javaCharStream.adjustBeginLineColumn((-1241), (-1241));
Test 85: 
PipedInputStream pipedInputStream = new PipedInputStream();
JavaCharStream javaCharStream = new JavaCharStream(pipedInputStream);
javaCharStream.ReInit((InputStream) pipedInputStream, (-1318), (-1318), 1);
Test 86: 
StringReader stringReader = new StringReader("m1>8@-");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.prevCharIsLF = true;
javaCharStream.BeginToken();
Test 87: 
byte[] byteArray = new byte[3];
byteArray[0] = (byte)92;
byteArray[1] = (byte)92;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
javaCharStream.readChar();
Test 88: 
byte[] byteArray = new byte[3];
byteArray[0] = (byte)92;
byteArray[1] = (byte)92;
byteArray[2] = (byte)92;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
javaCharStream.readChar();
Test 89: 
byte[] byteArray = new byte[2];
byteArray[1] = (byte)92;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
javaCharStream.BeginToken();
javaCharStream.readChar();
Test 90: 
StringReader stringReader = new StringReader("m1628-");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.backup((-1529));
Test 91: 
JavaCharStream javaCharStream = new JavaCharStream((Reader) null, 1141, 95, 33);
StringReader stringReader = new StringReader("0qW3-Pdm|)s)o");
javaCharStream.ReInit((Reader) stringReader, 18, 1141, 33);
javaCharStream.ReadByte();
Test 92: 
StringReader stringReader = new StringReader("X8j;75(hQI|}");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.BeginToken();
javaCharStream.BeginToken();
Test 93: 
StringReader stringReader = new StringReader("f&$<>dGcs");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-2209), (-2209), 0);
javaCharStream.GetImage();
Test 94: 
StringReader stringReader = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-875), 1, 1);
javaCharStream.ReadByte();
Test 95: 
byte[] byteArray = new byte[12];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, (-36), (byte)125);
javaCharStream.ReadByte();
Test 96: 
StringReader stringReader = new StringReader("z{KsBM_&>%");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-3280), (-3280));
int[] intArray = new int[5];
intArray[0] = (-1);
javaCharStream.bufcolumn = intArray;
javaCharStream.getBeginColumn();
Test 97: 
StringReader stringReader = new StringReader("Dlf[Y3 K>D-r.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2, 2);
javaCharStream.readChar();
javaCharStream.getBeginColumn();
Test 98: 
StringReader stringReader = new StringReader("^");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-1166), 63);
javaCharStream.BeginToken();
javaCharStream.getBeginLine();
Test 99: 
StringReader stringReader = new StringReader("y(>");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1595, 1595);
javaCharStream.BeginToken();
javaCharStream.adjustBeginLineColumn(1595, (-966));
javaCharStream.getColumn();
Test 100: 
StringReader stringReader = new StringReader("m1>8@-");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.inBuf = 12;
javaCharStream.BeginToken();
javaCharStream.getColumn();
Test 101: 
StringReader stringReader = new StringReader("m1>8@-");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-1), (-1), 1);
javaCharStream.BeginToken();
javaCharStream.getEndColumn();
Test 102: 
StringReader stringReader = new StringReader("X8j;75(hQI|}");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.BeginToken();
javaCharStream.getEndColumn();
Test 103: 
StringReader stringReader = new StringReader("X8j;75(hQI|}");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.BeginToken();
javaCharStream.adjustBeginLineColumn((-1241), (-1241));
javaCharStream.getEndLine();
Test 104: 
StringReader stringReader = new StringReader("m1>8@-");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.readChar();
javaCharStream.getEndLine();
Test 105: 
StringReader stringReader = new StringReader(".");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2915, 2915, 2915);
javaCharStream.inBuf = 2915;
javaCharStream.BeginToken();
javaCharStream.getEndLine();
Test 106: 
byte[] byteArray = new byte[12];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, (-36), (byte)125);
javaCharStream.BeginToken();
javaCharStream.getLine();
Test 107: 
StringReader stringReader = new StringReader("aDLH~BRS.j9f6(");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 12, 1);
javaCharStream.BeginToken();
javaCharStream.getLine();
Test 108: 
StringReader stringReader = new StringReader(".");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2915, 2915, 2915);
javaCharStream.inBuf = 2915;
javaCharStream.BeginToken();
javaCharStream.getLine();
Test 109: 
StringReader stringReader = new StringReader("");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-5557), (-5557));
javaCharStream.bufpos = 1;
javaCharStream.ExpandBuff(true);
Test 110: 
PipedInputStream pipedInputStream = new PipedInputStream();
JavaCharStream javaCharStream = new JavaCharStream(pipedInputStream, 1355, 11, 1355);
Test 111: 
StringReader stringReader = new StringReader("2^");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 40, 72, 40);
// Undeclared exception!
try { 
  javaCharStream.UpdateLineColumn('2');
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}


* Minimizing test suite
* test suite isTestSuite: 112
Test 0: 
PipedInputStream pipedInputStream = new PipedInputStream();
JavaCharStream javaCharStream = new JavaCharStream(pipedInputStream, 1355, 11, 1355);
Test 1: 
StringReader stringReader = new StringReader("m1>8@-");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
FileDescriptor fileDescriptor = new FileDescriptor();
MockFileInputStream mockFileInputStream = new MockFileInputStream(fileDescriptor);
javaCharStream.ReInit((InputStream) mockFileInputStream, (-1), 1085);
Test 2: 
PipedInputStream pipedInputStream = new PipedInputStream();
JavaCharStream javaCharStream = new JavaCharStream(pipedInputStream);
StringReader stringReader = new StringReader("=dW[)|0G4`H{do$");
javaCharStream.ReInit((Reader) stringReader);
Test 3: 
StringReader stringReader = new StringReader("Dlf[Y3 K>D-r.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2, 2);
javaCharStream.getBeginColumn();
Test 4: 
StringReader stringReader = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
FileDescriptor fileDescriptor = new FileDescriptor();
MockFileInputStream mockFileInputStream = new MockFileInputStream(fileDescriptor);
javaCharStream.ReInit((InputStream) mockFileInputStream);
Test 5: 
StringReader stringReader = new StringReader("m1>8@-");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.ReInit((Reader) stringReader, (-1), (-1));
Test 6: 
StringReader stringReader = new StringReader("dEG,");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.getBeginLine();
Test 7: 
StringReader stringReader = new StringReader("");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.Done();
// Undeclared exception!
try { 
  javaCharStream.ReInit((Reader) stringReader, (-1), (-1), (-1));
  fail("Expecting exception: NegativeArraySizeException");

} catch(NegativeArraySizeException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 8: 
byte[] byteArray = new byte[12];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, (-36), (byte)125);
javaCharStream.ReadByte();
Test 9: 
JavaCharStream.hexval('0');
Test 10: 
JavaCharStream.hexval('1');
Test 11: 
JavaCharStream.hexval('2');
Test 12: 
JavaCharStream.hexval('3');
Test 13: 
JavaCharStream.hexval('4');
Test 14: 
JavaCharStream.hexval('5');
Test 15: 
JavaCharStream.hexval('6');
Test 16: 
JavaCharStream.hexval('7');
Test 17: 
JavaCharStream.hexval('8');
Test 18: 
JavaCharStream.hexval('9');
Test 19: 
try { 
  JavaCharStream.hexval(':');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 20: 
try { 
  JavaCharStream.hexval(';');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 21: 
try { 
  JavaCharStream.hexval('<');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 22: 
try { 
  JavaCharStream.hexval('=');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 23: 
try { 
  JavaCharStream.hexval('>');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 24: 
try { 
  JavaCharStream.hexval('?');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 25: 
try { 
  JavaCharStream.hexval('@');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 26: 
JavaCharStream.hexval('A');
Test 27: 
JavaCharStream.hexval('B');
Test 28: 
JavaCharStream.hexval('C');
Test 29: 
JavaCharStream.hexval('D');
Test 30: 
JavaCharStream.hexval('E');
Test 31: 
JavaCharStream.hexval('F');
Test 32: 
try { 
  JavaCharStream.hexval('G');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 33: 
try { 
  JavaCharStream.hexval('H');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 34: 
try { 
  JavaCharStream.hexval('I');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 35: 
try { 
  JavaCharStream.hexval('J');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 36: 
try { 
  JavaCharStream.hexval('K');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 37: 
try { 
  JavaCharStream.hexval('L');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 38: 
try { 
  JavaCharStream.hexval('M');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 39: 
try { 
  JavaCharStream.hexval('N');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 40: 
try { 
  JavaCharStream.hexval('O');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 41: 
try { 
  JavaCharStream.hexval('P');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 42: 
try { 
  JavaCharStream.hexval('Q');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 43: 
try { 
  JavaCharStream.hexval('R');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 44: 
try { 
  JavaCharStream.hexval('S');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 45: 
try { 
  JavaCharStream.hexval('T');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 46: 
try { 
  JavaCharStream.hexval('U');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 47: 
try { 
  JavaCharStream.hexval('V');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 48: 
try { 
  JavaCharStream.hexval('W');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 49: 
try { 
  JavaCharStream.hexval('X');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 50: 
try { 
  JavaCharStream.hexval('Y');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 51: 
try { 
  JavaCharStream.hexval('Z');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 52: 
try { 
  JavaCharStream.hexval('[');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 53: 
try { 
  JavaCharStream.hexval('\\');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 54: 
try { 
  JavaCharStream.hexval(']');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 55: 
try { 
  JavaCharStream.hexval('^');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 56: 
try { 
  JavaCharStream.hexval('_');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 57: 
try { 
  JavaCharStream.hexval('`');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 58: 
JavaCharStream.hexval('a');
Test 59: 
JavaCharStream.hexval('b');
Test 60: 
JavaCharStream.hexval('c');
Test 61: 
JavaCharStream.hexval('d');
Test 62: 
JavaCharStream.hexval('e');
Test 63: 
JavaCharStream.hexval('f');
Test 64: 
try { 
  JavaCharStream.hexval('\u0000');
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 65: 
StringReader stringReader = new StringReader("'jk K7=5>Q");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 0, 0);
javaCharStream.ReInit((Reader) stringReader, 1, 569, 0);
javaCharStream.readChar();
javaCharStream.getColumn();
Test 66: 
StringReader stringReader = new StringReader(".");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2915, 2915, 2915);
javaCharStream.BeginToken();
try { 
  javaCharStream.FillBuff();
  fail("Expecting exception: IOException");

} catch(IOException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 67: 
byte[] byteArray = new byte[2];
byteArray[1] = (byte)92;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
javaCharStream.BeginToken();
javaCharStream.readChar();
Test 68: 
StringReader stringReader = new StringReader(",.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-2372), (-2372));
javaCharStream.backup(71);
javaCharStream.BeginToken();
javaCharStream.AdjustBuffSize();
Test 69: 
StringReader stringReader = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-875), 1, 1);
javaCharStream.readChar();
javaCharStream.backup(1);
javaCharStream.BeginToken();
Test 70: 
StringReader stringReader = new StringReader("m1>8@-");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.available = (-2);
// Undeclared exception!
try { 
  javaCharStream.AdjustBuffSize();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
}

Test 71: 
StringReader stringReader = new StringReader("m1>8@-");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.bufsize = (-1);
javaCharStream.AdjustBuffSize();
Test 72: 
StringReader stringReader = new StringReader("m1>8@-");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.backup(30);
javaCharStream.available = 30;
javaCharStream.BeginToken();
javaCharStream.AdjustBuffSize();
Test 73: 
StringReader stringReader = new StringReader("m1>8@-");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.prevCharIsLF = true;
javaCharStream.BeginToken();
Test 74: 
byte[] byteArray = new byte[8];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
javaCharStream.prevCharIsCR = true;
javaCharStream.readChar();
Test 75: 
byte[] byteArray = new byte[8];
byteArray[0] = (byte)10;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
javaCharStream.prevCharIsCR = true;
javaCharStream.readChar();
Test 76: 
byte[] byteArray = new byte[2];
byteArray[0] = (byte)9;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
javaCharStream.BeginToken();
Test 77: 
byte[] byteArray = new byte[2];
byteArray[0] = (byte)11;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
javaCharStream.readChar();
Test 78: 
byte[] byteArray = new byte[9];
byteArray[0] = (byte)12;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
javaCharStream.readChar();
Test 79: 
byte[] byteArray = new byte[6];
byteArray[2] = (byte)13;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
byteArrayInputStream.read();
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
byteArrayInputStream.read();
javaCharStream.BeginToken();
Test 80: 
StringReader stringReader = new StringReader("m1>8@-");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.inBuf = 12;
javaCharStream.readChar();
javaCharStream.getEndColumn();
Test 81: 
byte[] byteArray = new byte[2];
byteArray[0] = (byte)92;
byteArray[1] = (byte)92;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
javaCharStream.BeginToken();
javaCharStream.readChar();
Test 82: 
StringReader stringReader = new StringReader("f&$<>dGcs");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-2209), (-2209), 0);
javaCharStream.GetImage();
Test 83: 
StringReader stringReader = new StringReader("yuZSov");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.backup(0);
javaCharStream.GetImage();
Test 84: 
StringReader stringReader = new StringReader("8");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 11, 70);
javaCharStream.GetSuffix(11);
Test 85: 
StringReader stringReader = new StringReader("");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.GetSuffix(0);
Test 86: 
StringReader stringReader = new StringReader("");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-2496), (-2496), 0);
// Undeclared exception!
try { 
  javaCharStream.adjustBeginLineColumn((-2496), (-2496));
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 87: 
StringReader stringReader = new StringReader("8");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 11, 70);
javaCharStream.readChar();
javaCharStream.adjustBeginLineColumn(11, 98);
Test 88: 
StringReader stringReader = new StringReader("m1>8@-");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.adjustBeginLineColumn((-1241), (-1241));
javaCharStream.adjustBeginLineColumn((-1241), (-1241));
Test 89: 
PipedInputStream pipedInputStream = new PipedInputStream();
JavaCharStream javaCharStream = new JavaCharStream(pipedInputStream);
javaCharStream.ReInit((InputStream) pipedInputStream, (-1318), (-1318), 1);
Test 90: 
byte[] byteArray = new byte[3];
byteArray[0] = (byte)92;
byteArray[1] = (byte)92;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
javaCharStream.readChar();
Test 91: 
byte[] byteArray = new byte[3];
byteArray[0] = (byte)92;
byteArray[1] = (byte)92;
byteArray[2] = (byte)92;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
javaCharStream.readChar();
Test 92: 
StringReader stringReader = new StringReader("m1628-");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.backup((-1529));
Test 93: 
JavaCharStream javaCharStream = new JavaCharStream((Reader) null, 1141, 95, 33);
StringReader stringReader = new StringReader("0qW3-Pdm|)s)o");
javaCharStream.ReInit((Reader) stringReader, 18, 1141, 33);
javaCharStream.ReadByte();
Test 94: 
StringReader stringReader = new StringReader("X8j;75(hQI|}");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.BeginToken();
javaCharStream.BeginToken();
Test 95: 
StringReader stringReader = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-875), 1, 1);
javaCharStream.ReadByte();
Test 96: 
StringReader stringReader = new StringReader("z{KsBM_&>%");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-3280), (-3280));
int[] intArray = new int[5];
intArray[0] = (-1);
javaCharStream.bufcolumn = intArray;
javaCharStream.getBeginColumn();
Test 97: 
StringReader stringReader = new StringReader("Dlf[Y3 K>D-r.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2, 2);
javaCharStream.readChar();
javaCharStream.getBeginColumn();
Test 98: 
StringReader stringReader = new StringReader("^");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-1166), 63);
javaCharStream.BeginToken();
javaCharStream.getBeginLine();
Test 99: 
StringReader stringReader = new StringReader("dEG,");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.BeginToken();
javaCharStream.getBeginLine();
Test 100: 
StringReader stringReader = new StringReader("y(>");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1595, 1595);
javaCharStream.BeginToken();
javaCharStream.adjustBeginLineColumn(1595, (-966));
javaCharStream.getColumn();
Test 101: 
StringReader stringReader = new StringReader("m1>8@-");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.inBuf = 12;
javaCharStream.BeginToken();
javaCharStream.getColumn();
Test 102: 
StringReader stringReader = new StringReader("m1>8@-");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-1), (-1), 1);
javaCharStream.BeginToken();
javaCharStream.getEndColumn();
Test 103: 
StringReader stringReader = new StringReader("X8j;75(hQI|}");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.BeginToken();
javaCharStream.getEndColumn();
Test 104: 
StringReader stringReader = new StringReader("X8j;75(hQI|}");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.BeginToken();
javaCharStream.adjustBeginLineColumn((-1241), (-1241));
javaCharStream.getEndLine();
Test 105: 
StringReader stringReader = new StringReader("m1>8@-");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.readChar();
javaCharStream.getEndLine();
Test 106: 
StringReader stringReader = new StringReader(".");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2915, 2915, 2915);
javaCharStream.inBuf = 2915;
javaCharStream.BeginToken();
javaCharStream.getEndLine();
Test 107: 
byte[] byteArray = new byte[12];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, (-36), (byte)125);
javaCharStream.BeginToken();
javaCharStream.getLine();
Test 108: 
StringReader stringReader = new StringReader("aDLH~BRS.j9f6(");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 12, 1);
javaCharStream.BeginToken();
javaCharStream.getLine();
Test 109: 
StringReader stringReader = new StringReader(".");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2915, 2915, 2915);
javaCharStream.inBuf = 2915;
javaCharStream.BeginToken();
javaCharStream.getLine();
Test 110: 
StringReader stringReader = new StringReader("");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-5557), (-5557));
javaCharStream.bufpos = 1;
javaCharStream.ExpandBuff(true);
Test 111: 
StringReader stringReader = new StringReader("2^");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 40, 72, 40);
// Undeclared exception!
try { 
  javaCharStream.UpdateLineColumn('2');
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}


[MASTER] 20:09:19.968 [logback-1] WARN  TimeController - Already entered in phase: MINIMIZATION. This will mess up the timing calculations.
* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 95%
* Total number of goals: 216
* Number of covered goals: 205
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 93%
* Total number of goals: 239
* Number of covered goals: 222
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 92%
* Total number of goals: 36
* Number of covered goals: 33
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 31
* Number of covered goals: 31
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 95%
* Total number of goals: 216
* Number of covered goals: 205
* Generated 112 tests with total length 302
[MASTER] 20:09:20.197 [logback-1] WARN  TimeController - Already entered in phase: COVERAGE_ANALYSIS. This will mess up the timing calculations.
* Resulting test suite's coverage: 95% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 30%
[MASTER] 20:09:59.998 [logback-1] WARN  TimeController - Already entered in phase: ASSERTION_GENERATION. This will mess up the timing calculations.
* Compiling and checking tests
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:10:05.256 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:10:05.257 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:10:05.282 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 20:10:05.282 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
[MASTER] 20:10:05.310 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:10:05.311 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:10:05.338 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:10:05.338 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:10:05.366 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:10:05.367 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:10:05.396 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:10:05.397 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:10:05.427 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:10:05.427 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:10:05.465 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:10:05.466 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:10:05.503 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:10:05.504 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:10:05.542 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:10:05.543 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:10:05.581 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:10:05.582 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:10:05.621 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:10:05.621 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:10:05.663 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:10:05.664 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:10:05.707 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:10:05.708 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:10:05.751 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:10:05.752 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:10:05.785 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 20:10:05.785 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:10:05.824 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:10:05.826 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:10:05.861 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:10:05.861 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:10:05.894 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:10:05.894 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:10:05.929 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:10:05.930 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:10:05.966 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:10:05.967 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:10:06.001 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:10:06.002 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:10:06.044 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:10:06.045 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:10:06.090 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:10:06.091 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:10:06.137 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:10:06.138 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:10:06.185 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:10:06.186 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:10:06.229 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:10:06.230 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:10:06.275 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:10:06.276 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:10:06.321 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:10:06.322 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:10:06.361 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:10:06.362 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:10:06.397 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:10:06.398 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:10:06.435 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:10:06.435 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:10:06.471 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:10:06.472 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:10:06.507 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:10:06.508 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:10:06.547 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:10:06.548 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:10:06.587 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:10:06.587 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:10:06.634 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:10:06.634 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:10:06.683 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:10:06.684 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:10:06.739 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:10:06.739 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:10:06.792 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:10:06.793 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:10:06.843 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:10:06.844 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:10:06.897 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:10:06.898 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:10:06.935 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:10:06.936 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:10:06.978 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:10:06.978 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:10:07.024 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:10:07.024 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:10:07.064 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:10:07.065 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:10:07.103 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:10:07.103 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:10:07.143 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:10:07.144 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:10:07.197 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:10:07.198 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:10:07.248 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:10:07.248 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:10:07.300 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:10:07.301 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:10:07.352 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:10:07.352 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:10:07.403 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:10:07.404 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:10:07.455 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:10:07.456 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:10:07.502 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:10:07.502 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:10:07.542 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:10:07.543 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:10:07.585 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:10:07.586 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:10:07.630 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:10:07.630 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:10:07.673 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:10:07.674 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:10:07.734 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:10:07.735 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:10:07.792 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:10:07.793 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:10:07.849 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:10:07.850 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:10:07.906 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:10:07.907 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:10:07.961 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:10:07.961 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:10:08.027 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:10:08.027 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:10:08.080 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:10:08.081 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:10:08.129 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
[MASTER] 20:10:08.130 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:10:08.182 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:10:08.182 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:10:08.245 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:10:08.246 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:10:08.299 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:10:08.299 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:10:08.352 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:10:08.352 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:10:08.410 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:10:08.410 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:10:08.475 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:10:08.476 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:10:08.534 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:10:08.535 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 20:10:08.584 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:10:08.585 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:10:08.641 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:10:08.642 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:10:09.351 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:10:09.352 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:10:09.405 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:10:09.406 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:10:09.457 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:10:09.458 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:10:09.505 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:10:09.506 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:10:09.565 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:10:09.565 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:10:09.622 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:10:09.623 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:10:09.668 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:10:09.668 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:10:09.710 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:10:09.711 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:10:09.755 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:10:09.755 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:10:09.812 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:10:09.812 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:10:09.857 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:10:09.858 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
[MASTER] 20:10:09.902 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:10:09.902 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:10:09.958 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:10:09.959 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:10:10.013 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 20:10:10.014 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:10:10.072 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:10:10.073 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:10:10.301 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:10:10.302 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:10:10.333 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:10:10.334 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:10:10.365 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:10:10.372 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:10:10.394 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:10:10.395 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:10:10.422 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:10:10.423 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:10:10.446 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:10:10.447 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
** Write a test suite: 4 called: 4 to improve: false
** Write a test suite: 5 called: 5 to improve: false
** Write a test suite: 6 called: 6 to improve: false
** Write a test suite: 7 called: 7 to improve: false
** Write a test suite: 8 called: 8 to improve: false
** Write a test suite: 9 called: 9 to improve: false
** Write a test suite: 10 called: 10 to improve: false
** Write a test suite: 11 called: 11 to improve: false
** Write a test suite: 12 called: 12 to improve: false
** Write a test suite: 13 called: 13 to improve: false
** Write a test suite: 14 called: 14 to improve: false
** Write a test suite: 15 called: 15 to improve: false
** Write a test suite: 16 called: 16 to improve: false
** Write a test suite: 17 called: 17 to improve: false
** Write a test suite: 18 called: 18 to improve: false
** Write a test suite: 19 called: 19 to improve: false
** Write a test suite: 20 called: 20 to improve: false
** Write a test suite: 21 called: 21 to improve: false
** Write a test suite: 22 called: 22 to improve: false
** Write a test suite: 23 called: 23 to improve: false
** Write a test suite: 24 called: 24 to improve: false
** Write a test suite: 25 called: 25 to improve: false
** Write a test suite: 26 called: 26 to improve: false
** Write a test suite: 27 called: 27 to improve: false
** Write a test suite: 28 called: 28 to improve: false
** Write a test suite: 29 called: 29 to improve: false
** Write a test suite: 30 called: 30 to improve: false
** Write a test suite: 31 called: 31 to improve: false
** Write a test suite: 32 called: 32 to improve: false
** Write a test suite: 33 called: 33 to improve: false
** Write a test suite: 34 called: 34 to improve: false
** Write a test suite: 35 called: 35 to improve: false
** Write a test suite: 36 called: 36 to improve: false
** Write a test suite: 37 called: 37 to improve: false
** Write a test suite: 38 called: 38 to improve: false
** Write a test suite: 39 called: 39 to improve: false
** Write a test suite: 40 called: 40 to improve: false
** Write a test suite: 41 called: 41 to improve: false
** Write a test suite: 42 called: 42 to improve: false
** Write a test suite: 43 called: 43 to improve: false
** Write a test suite: 44 called: 44 to improve: false
** Write a test suite: 45 called: 45 to improve: false
** Write a test suite: 46 called: 46 to improve: false
** Write a test suite: 47 called: 47 to improve: false
** Write a test suite: 48 called: 48 to improve: false
** Write a test suite: 49 called: 49 to improve: false
** Write a test suite: 50 called: 50 to improve: false
** Write a test suite: 51 called: 51 to improve: false
** Write a test suite: 52 called: 52 to improve: false
** Write a test suite: 53 called: 53 to improve: false
** Write a test suite: 54 called: 54 to improve: false
** Write a test suite: 55 called: 55 to improve: false
** Write a test suite: 56 called: 56 to improve: false
** Write a test suite: 57 called: 57 to improve: false
** Write a test suite: 58 called: 58 to improve: false
** Write a test suite: 59 called: 59 to improve: false
** Write a test suite: 60 called: 60 to improve: false
** Write a test suite: 61 called: 61 to improve: false
** Write a test suite: 62 called: 62 to improve: false
** Write a test suite: 63 called: 63 to improve: false
** Write a test suite: 64 called: 64 to improve: false
** Write a test suite: 65 called: 65 to improve: false
** Write a test suite: 66 called: 66 to improve: false
** Write a test suite: 67 called: 67 to improve: false
** Write a test suite: 68 called: 68 to improve: false
** Write a test suite: 69 called: 69 to improve: false
** Write a test suite: 70 called: 70 to improve: false
** Write a test suite: 71 called: 71 to improve: false
** Write a test suite: 72 called: 72 to improve: false
** Write a test suite: 73 called: 73 to improve: false
** Write a test suite: 74 called: 74 to improve: false
** Write a test suite: 75 called: 75 to improve: false
** Write a test suite: 76 called: 76 to improve: false
** Write a test suite: 77 called: 77 to improve: false
** Write a test suite: 78 called: 78 to improve: false
** Write a test suite: 79 called: 79 to improve: false
** Write a test suite: 80 called: 80 to improve: false
** Write a test suite: 81 called: 81 to improve: false
** Write a test suite: 82 called: 82 to improve: false
** Write a test suite: 83 called: 83 to improve: false
** Write a test suite: 84 called: 84 to improve: false
** Write a test suite: 85 called: 85 to improve: false
** Write a test suite: 86 called: 86 to improve: false
** Write a test suite: 87 called: 87 to improve: false
** Write a test suite: 88 called: 88 to improve: false
** Write a test suite: 89 called: 89 to improve: false
** Write a test suite: 90 called: 90 to improve: false
** Write a test suite: 91 called: 91 to improve: false
** Write a test suite: 92 called: 92 to improve: false
** Write a test suite: 93 called: 93 to improve: false
** Write a test suite: 94 called: 94 to improve: false
** Write a test suite: 95 called: 95 to improve: false
** Write a test suite: 96 called: 96 to improve: false
[MASTER] 20:10:11.622 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:10:11.623 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
** Write a test suite: 4 called: 4 to improve: false
** Write a test suite: 5 called: 5 to improve: false
** Write a test suite: 6 called: 6 to improve: false
** Write a test suite: 7 called: 7 to improve: false
** Write a test suite: 8 called: 8 to improve: false
** Write a test suite: 9 called: 9 to improve: false
** Write a test suite: 10 called: 10 to improve: false
** Write a test suite: 11 called: 11 to improve: false
** Write a test suite: 12 called: 12 to improve: false
** Write a test suite: 13 called: 13 to improve: false
** Write a test suite: 14 called: 14 to improve: false
** Write a test suite: 15 called: 15 to improve: false
** Write a test suite: 16 called: 16 to improve: false
** Write a test suite: 17 called: 17 to improve: false
** Write a test suite: 18 called: 18 to improve: false
** Write a test suite: 19 called: 19 to improve: false
** Write a test suite: 20 called: 20 to improve: false
** Write a test suite: 21 called: 21 to improve: false
** Write a test suite: 22 called: 22 to improve: false
** Write a test suite: 23 called: 23 to improve: false
** Write a test suite: 24 called: 24 to improve: false
** Write a test suite: 25 called: 25 to improve: false
** Write a test suite: 26 called: 26 to improve: false
** Write a test suite: 27 called: 27 to improve: false
** Write a test suite: 28 called: 28 to improve: false
** Write a test suite: 29 called: 29 to improve: false
** Write a test suite: 30 called: 30 to improve: false
** Write a test suite: 31 called: 31 to improve: false
** Write a test suite: 32 called: 32 to improve: false
** Write a test suite: 33 called: 33 to improve: false
** Write a test suite: 34 called: 34 to improve: false
** Write a test suite: 35 called: 35 to improve: false
** Write a test suite: 36 called: 36 to improve: false
** Write a test suite: 37 called: 37 to improve: false
** Write a test suite: 38 called: 38 to improve: false
** Write a test suite: 39 called: 39 to improve: false
** Write a test suite: 40 called: 40 to improve: false
** Write a test suite: 41 called: 41 to improve: false
** Write a test suite: 42 called: 42 to improve: false
** Write a test suite: 43 called: 43 to improve: false
** Write a test suite: 44 called: 44 to improve: false
** Write a test suite: 45 called: 45 to improve: false
** Write a test suite: 46 called: 46 to improve: false
** Write a test suite: 47 called: 47 to improve: false
** Write a test suite: 48 called: 48 to improve: false
** Write a test suite: 49 called: 49 to improve: false
** Write a test suite: 50 called: 50 to improve: false
** Write a test suite: 51 called: 51 to improve: false
** Write a test suite: 52 called: 52 to improve: false
** Write a test suite: 53 called: 53 to improve: false
** Write a test suite: 54 called: 54 to improve: false
** Write a test suite: 55 called: 55 to improve: false
** Write a test suite: 56 called: 56 to improve: false
** Write a test suite: 57 called: 57 to improve: false
** Write a test suite: 58 called: 58 to improve: false
** Write a test suite: 59 called: 59 to improve: false
** Write a test suite: 60 called: 60 to improve: false
** Write a test suite: 61 called: 61 to improve: false
** Write a test suite: 62 called: 62 to improve: false
** Write a test suite: 63 called: 63 to improve: false
** Write a test suite: 64 called: 64 to improve: false
** Write a test suite: 65 called: 65 to improve: false
** Write a test suite: 66 called: 66 to improve: false
** Write a test suite: 67 called: 67 to improve: false
** Write a test suite: 68 called: 68 to improve: false
** Write a test suite: 69 called: 69 to improve: false
** Write a test suite: 70 called: 70 to improve: false
** Write a test suite: 71 called: 71 to improve: false
** Write a test suite: 72 called: 72 to improve: false
** Write a test suite: 73 called: 73 to improve: false
** Write a test suite: 74 called: 74 to improve: false
** Write a test suite: 75 called: 75 to improve: false
** Write a test suite: 76 called: 76 to improve: false
** Write a test suite: 77 called: 77 to improve: false
** Write a test suite: 78 called: 78 to improve: false
** Write a test suite: 79 called: 79 to improve: false
** Write a test suite: 80 called: 80 to improve: false
** Write a test suite: 81 called: 81 to improve: false
** Write a test suite: 82 called: 82 to improve: false
** Write a test suite: 83 called: 83 to improve: false
** Write a test suite: 84 called: 84 to improve: false
** Write a test suite: 85 called: 85 to improve: false
** Write a test suite: 86 called: 86 to improve: false
** Write a test suite: 87 called: 87 to improve: false
** Write a test suite: 88 called: 88 to improve: false
** Write a test suite: 89 called: 89 to improve: false
** Write a test suite: 90 called: 90 to improve: false
** Write a test suite: 91 called: 91 to improve: false
** Write a test suite: 92 called: 92 to improve: false
** Write a test suite: 93 called: 93 to improve: false
** Write a test suite: 94 called: 94 to improve: false
** Write a test suite: 95 called: 95 to improve: false
** Write a test suite: 96 called: 96 to improve: false
[MASTER] 20:10:13.149 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar3359732784411609857.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:10:13.149 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3359732784411609857.jar
* Writing tests to file
[MASTER] 20:10:13.152 [logback-1] WARN  TimeController - Already entered in phase: JUNIT_CHECK. This will mess up the timing calculations.
* Writing JUnit test case 'JavaCharStream_ESTest' to evosuite-tests
** Write a test suite: 5 called: 0 to improve: false
** Write a test suite: 7 called: 1 to improve: false
** Write a test suite: 11 called: 2 to improve: false
** Write a test suite: 14 called: 3 to improve: false
** Write a test suite: 15 called: 4 to improve: false
** Write a test suite: 16 called: 5 to improve: false
** Write a test suite: 21 called: 6 to improve: false
** Write a test suite: 32 called: 7 to improve: false
** Write a test suite: 33 called: 8 to improve: false
** Write a test suite: 36 called: 9 to improve: false
** Write a test suite: 48 called: 10 to improve: false
** Write a test suite: 60 called: 11 to improve: false
** Write a test suite: 66 called: 12 to improve: false
* Writing JUnit test case 'JavaCharStream_Original_ESTest' to evosuite-tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
** Write a test suite: 4 called: 4 to improve: false
** Write a test suite: 5 called: 5 to improve: false
** Write a test suite: 6 called: 6 to improve: false
** Write a test suite: 7 called: 7 to improve: false
** Write a test suite: 8 called: 8 to improve: false
** Write a test suite: 9 called: 9 to improve: false
** Write a test suite: 10 called: 10 to improve: false
** Write a test suite: 11 called: 11 to improve: false
** Write a test suite: 12 called: 12 to improve: false
** Write a test suite: 13 called: 13 to improve: false
** Write a test suite: 14 called: 14 to improve: false
** Write a test suite: 15 called: 15 to improve: false
** Write a test suite: 16 called: 16 to improve: false
** Write a test suite: 17 called: 17 to improve: false
** Write a test suite: 18 called: 18 to improve: false
** Write a test suite: 19 called: 19 to improve: false
** Write a test suite: 20 called: 20 to improve: false
** Write a test suite: 21 called: 21 to improve: false
** Write a test suite: 22 called: 22 to improve: false
** Write a test suite: 23 called: 23 to improve: false
** Write a test suite: 24 called: 24 to improve: false
** Write a test suite: 25 called: 25 to improve: false
** Write a test suite: 26 called: 26 to improve: false
** Write a test suite: 27 called: 27 to improve: false
** Write a test suite: 28 called: 28 to improve: false
** Write a test suite: 29 called: 29 to improve: false
** Write a test suite: 30 called: 30 to improve: false
** Write a test suite: 31 called: 31 to improve: false
** Write a test suite: 32 called: 32 to improve: false
** Write a test suite: 33 called: 33 to improve: false
** Write a test suite: 34 called: 34 to improve: false
** Write a test suite: 35 called: 35 to improve: false
** Write a test suite: 36 called: 36 to improve: false
** Write a test suite: 37 called: 37 to improve: false
** Write a test suite: 38 called: 38 to improve: false
** Write a test suite: 39 called: 39 to improve: false
** Write a test suite: 40 called: 40 to improve: false
** Write a test suite: 41 called: 41 to improve: false
** Write a test suite: 42 called: 42 to improve: false
** Write a test suite: 43 called: 43 to improve: false
** Write a test suite: 44 called: 44 to improve: false
** Write a test suite: 45 called: 45 to improve: false
** Write a test suite: 46 called: 46 to improve: false
** Write a test suite: 47 called: 47 to improve: false
** Write a test suite: 48 called: 48 to improve: false
** Write a test suite: 49 called: 49 to improve: false
** Write a test suite: 50 called: 50 to improve: false
** Write a test suite: 51 called: 51 to improve: false
** Write a test suite: 52 called: 52 to improve: false
** Write a test suite: 53 called: 53 to improve: false
** Write a test suite: 54 called: 54 to improve: false
** Write a test suite: 55 called: 55 to improve: false
** Write a test suite: 56 called: 56 to improve: false
** Write a test suite: 57 called: 57 to improve: false
** Write a test suite: 58 called: 58 to improve: false
** Write a test suite: 59 called: 59 to improve: false
** Write a test suite: 60 called: 60 to improve: false
** Write a test suite: 61 called: 61 to improve: false
** Write a test suite: 62 called: 62 to improve: false
** Write a test suite: 63 called: 63 to improve: false
** Write a test suite: 64 called: 64 to improve: false
** Write a test suite: 65 called: 65 to improve: false
** Write a test suite: 66 called: 66 to improve: false
** Write a test suite: 67 called: 67 to improve: false
** Write a test suite: 68 called: 68 to improve: false
** Write a test suite: 69 called: 69 to improve: false
** Write a test suite: 70 called: 70 to improve: false
** Write a test suite: 71 called: 71 to improve: false
** Write a test suite: 72 called: 72 to improve: false
** Write a test suite: 73 called: 73 to improve: false
** Write a test suite: 74 called: 74 to improve: false
** Write a test suite: 75 called: 75 to improve: false
** Write a test suite: 76 called: 76 to improve: false
** Write a test suite: 77 called: 77 to improve: false
** Write a test suite: 78 called: 78 to improve: false
** Write a test suite: 79 called: 79 to improve: false
** Write a test suite: 80 called: 80 to improve: false
** Write a test suite: 81 called: 81 to improve: false
** Write a test suite: 82 called: 82 to improve: false
** Write a test suite: 83 called: 83 to improve: false
** Write a test suite: 84 called: 84 to improve: false
** Write a test suite: 85 called: 85 to improve: false
** Write a test suite: 86 called: 86 to improve: false
** Write a test suite: 87 called: 87 to improve: false
** Write a test suite: 88 called: 88 to improve: false
** Write a test suite: 89 called: 89 to improve: false
** Write a test suite: 90 called: 90 to improve: false
** Write a test suite: 91 called: 91 to improve: false
** Write a test suite: 92 called: 92 to improve: false
** Write a test suite: 93 called: 93 to improve: false
** Write a test suite: 94 called: 94 to improve: false
** Write a test suite: 95 called: 95 to improve: false
** Write a test suite: 96 called: 96 to improve: false
* Done!

* Computation finished
