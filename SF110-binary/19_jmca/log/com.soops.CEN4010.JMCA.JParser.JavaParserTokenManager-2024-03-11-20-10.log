* EvoSuite 1.0.0-SNAPSHOT
* Going to generate test cases for class: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
* Starting Client-0
* Properties loaded from /home/roham/Results-Utestgen/dataset/SF110-new-res/19_jmca/evosuite-files/evosuite.properties
* Connecting to master process on port 2105
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 20:10:20.984 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 20:10:20.987 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 20:10:20.988 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 20:10:20.993 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
* Test criteria:
  - Branch Coverage
  - Line Coverage
  - Method-Output Coverage
  - Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 4410
* Using seed 1710187818056
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%]* Initial Number of Goals in DynaMOSA = 713 / 4410
[Progress:>                             0%] [Cov:=====>                             17%][Progress:>                             1%] [Cov:========>                          24%][Progress:>                             1%] [Cov:============>                      36%][Progress:>                             1%] [Cov:=============>                     39%][Progress:>                             2%] [Cov:==============>                    42%][Progress:=>                            4%] [Cov:==============>                    42%][Progress:=>                            5%] [Cov:===============>                   43%][Progress:=>                            5%] [Cov:================>                  46%][Progress:=>                            5%] [Cov:================>                  46%][Progress:=>                            6%] [Cov:================>                  48%][Progress:=>                            6%] [Cov:=================>                 50%][Progress:==>                           7%] [Cov:=================>                 50%][Progress:==>                           7%] [Cov:=================>                 50%][Progress:==>                           7%] [Cov:==================>                52%][Progress:==>                           8%] [Cov:==================>                52%][Progress:==>                           8%] [Cov:===================>               57%][Progress:==>                           8%] [Cov:===================>               57%][Progress:===>                          11%] [Cov:===================>               57%][Progress:===>                          12%] [Cov:===================>               57%][Progress:===>                          12%] [Cov:===================>               57%][Progress:===>                          12%] [Cov:====================>              58%][Progress:===>                          12%] [Cov:====================>              58%][Progress:===>                          13%] [Cov:====================>              59%][Progress:===>                          13%] [Cov:====================>              59%][Progress:===>                          13%] [Cov:====================>              59%][Progress:====>                         14%] [Cov:====================>              59%][Progress:====>                         14%] [Cov:====================>              59%][Progress:====>                         14%] [Cov:====================>              59%][Progress:====>                         15%] [Cov:====================>              59%][Progress:====>                         15%] [Cov:====================>              59%][Progress:====>                         15%] [Cov:====================>              59%][Progress:=====>                        18%] [Cov:=====================>             60%][Progress:=====>                        19%] [Cov:=====================>             60%][Progress:=====>                        19%] [Cov:=====================>             61%][Progress:=====>                        19%] [Cov:=====================>             61%][Progress:=====>                        19%] [Cov:=====================>             61%][Progress:======>                       20%] [Cov:=====================>             61%][Progress:======>                       20%] [Cov:=====================>             61%][Progress:======>                       21%] [Cov:=====================>             61%][Progress:======>                       21%] [Cov:=====================>             61%][Progress:======>                       21%] [Cov:=====================>             61%][Progress:======>                       22%] [Cov:=====================>             62%][Progress:======>                       22%] [Cov:=====================>             62%][Progress:======>                       22%] [Cov:=====================>             62%][Progress:======>                       22%] [Cov:=====================>             62%][Progress:======>                       23%] [Cov:=====================>             62%][Progress:======>                       23%] [Cov:=====================>             62%][Progress:======>                       23%] [Cov:=====================>             62%][Progress:======>                       23%] [Cov:=====================>             62%][Progress:=======>                      24%] [Cov:======================>            63%][Progress:=======>                      24%] [Cov:======================>            63%][Progress:=======>                      24%] [Cov:======================>            63%][Progress:========>                     27%] [Cov:======================>            63%][Progress:========>                     27%] [Cov:======================>            63%][Progress:========>                     28%] [Cov:======================>            63%][Progress:========>                     28%] [Cov:======================>            63%][Progress:========>                     28%] [Cov:======================>            64%][Progress:=========>                    31%] [Cov:======================>            64%][Progress:==========>                   34%] [Cov:======================>            64%][Progress:==========>                   34%] [Cov:======================>            64%][Progress:==========>                   35%] [Cov:======================>            64%][Progress:==========>                   35%] [Cov:======================>            64%][Progress:==========>                   35%] [Cov:======================>            64%][Progress:==========>                   35%] [Cov:======================>            64%][Progress:==========>                   36%] [Cov:======================>            65%][Progress:==========>                   36%] [Cov:======================>            65%][Progress:==========>                   36%] [Cov:======================>            65%][Progress:==========>                   36%] [Cov:======================>            65%][Progress:===========>                  37%] [Cov:======================>            65%][Progress:============>                 42%] [Cov:======================>            65%][Progress:=============>                45%] [Cov:======================>            65%][Progress:=============>                45%] [Cov:======================>            65%][Progress:=============>                45%] [Cov:======================>            65%][Progress:=============>                46%] [Cov:======================>            65%][Progress:=============>                46%] [Cov:======================>            65%][Progress:=============>                46%] [Cov:======================>            65%][Progress:=============>                46%] [Cov:======================>            65%][Progress:==============>               47%] [Cov:======================>            65%][Progress:==============>               47%] [Cov:======================>            65%][Progress:==============>               47%] [Cov:======================>            65%][Progress:==============>               47%] [Cov:======================>            65%][Progress:===============>              50%] [Cov:======================>            65%][Progress:===============>              50%] [Cov:======================>            65%][Progress:===============>              51%] [Cov:=======================>           66%][Progress:===============>              53%] [Cov:=======================>           66%][Progress:================>             54%] [Cov:=======================>           66%][Progress:================>             54%] [Cov:=======================>           66%][Progress:================>             54%] [Cov:=======================>           66%][Progress:================>             55%] [Cov:=======================>           66%][Progress:================>             55%] [Cov:=======================>           67%][Progress:=================>            58%] [Cov:=======================>           67%][Progress:=================>            58%] [Cov:=======================>           67%][Progress:=================>            59%] [Cov:=======================>           67%][Progress:=================>            59%] [Cov:=======================>           67%][Progress:=================>            59%] [Cov:=======================>           67%][Progress:==================>           60%] [Cov:=======================>           67%][Progress:==================>           60%] [Cov:=======================>           67%][Progress:==================>           60%] [Cov:=======================>           67%][Progress:==================>           60%] [Cov:=======================>           67%][Progress:==================>           60%] [Cov:=======================>           67%][Progress:==================>           61%] [Cov:=======================>           67%][Progress:==================>           61%] [Cov:=======================>           67%][Progress:==================>           61%] [Cov:=======================>           67%][Progress:==================>           62%] [Cov:=======================>           67%][Progress:==================>           62%] [Cov:=======================>           67%][Progress:==================>           62%] [Cov:=======================>           68%][Progress:==================>           62%] [Cov:=======================>           68%][Progress:==================>           63%] [Cov:=======================>           68%][Progress:==================>           63%] [Cov:=======================>           68%][Progress:==================>           63%] [Cov:=======================>           68%][Progress:==================>           63%] [Cov:=======================>           68%][Progress:===================>          64%] [Cov:=======================>           68%][Progress:===================>          64%] [Cov:=======================>           68%][Progress:===================>          65%] [Cov:=======================>           68%][Progress:===================>          65%] [Cov:=======================>           68%][Progress:===================>          65%] [Cov:=======================>           68%][Progress:===================>          66%] [Cov:=======================>           68%][Progress:===================>          66%] [Cov:=======================>           68%][Progress:===================>          66%] [Cov:=======================>           68%][Progress:====================>         67%] [Cov:=======================>           68%][Progress:====================>         67%] [Cov:=======================>           68%][Progress:====================>         67%] [Cov:=======================>           68%][Progress:====================>         67%] [Cov:=======================>           68%][Progress:====================>         67%] [Cov:=======================>           68%][Progress:====================>         68%] [Cov:=======================>           68%][Progress:====================>         68%] [Cov:=======================>           68%][Progress:====================>         68%] [Cov:=======================>           68%][Progress:====================>         68%] [Cov:=======================>           68%][Progress:====================>         69%] [Cov:=======================>           68%][Progress:====================>         69%] [Cov:=======================>           68%][Progress:====================>         69%] [Cov:=======================>           68%][Progress:====================>         69%] [Cov:=======================>           68%][Progress:=====================>        72%] [Cov:=======================>           68%][Progress:=====================>        72%] [Cov:=======================>           68%][Progress:=====================>        73%] [Cov:=======================>           68%][Progress:=====================>        73%] [Cov:=======================>           68%][Progress:=====================>        73%] [Cov:=======================>           68%][Progress:=====================>        73%] [Cov:=======================>           68%][Progress:======================>       74%] [Cov:=======================>           68%][Progress:======================>       74%] [Cov:=======================>           68%][Progress:======================>       74%] [Cov:=======================>           68%][Progress:=======================>      77%] [Cov:=======================>           68%][Progress:=======================>      77%] [Cov:=======================>           68%][Progress:=======================>      77%] [Cov:=======================>           68%][Progress:=======================>      77%] [Cov:=======================>           68%][Progress:=======================>      78%] [Cov:=======================>           68%][Progress:=======================>      78%] [Cov:=======================>           68%][Progress:=======================>      78%] [Cov:=======================>           68%][Progress:=======================>      78%] [Cov:========================>          69%][Progress:=======================>      79%] [Cov:========================>          69%][Progress:=======================>      79%] [Cov:========================>          69%][Progress:=======================>      79%] [Cov:========================>          69%][Progress:=======================>      79%] [Cov:========================>          69%][Progress:=======================>      79%] [Cov:========================>          69%][Progress:========================>     80%] [Cov:========================>          69%][Progress:========================>     80%] [Cov:========================>          69%][Progress:========================>     80%] [Cov:========================>          69%][Progress:========================>     80%] [Cov:========================>          69%][Progress:========================>     83%] [Cov:========================>          69%][Progress:========================>     83%] [Cov:========================>          69%][Progress:=========================>    84%] [Cov:========================>          69%][Progress:=========================>    84%] [Cov:========================>          69%][Progress:=========================>    84%] [Cov:========================>          69%][Progress:=========================>    84%] [Cov:========================>          69%][Progress:=========================>    85%] [Cov:========================>          69%][Progress:=========================>    85%] [Cov:========================>          69%][Progress:=========================>    85%] [Cov:========================>          69%][Progress:=========================>    85%] [Cov:========================>          69%][Progress:=========================>    86%] [Cov:========================>          69%][Progress:=========================>    86%] [Cov:========================>          69%][Progress:=========================>    86%] [Cov:========================>          69%][Progress:=========================>    86%] [Cov:========================>          69%][Progress:==========================>   87%] [Cov:========================>          69%][Progress:==========================>   87%] [Cov:========================>          69%][Progress:==========================>   87%] [Cov:========================>          69%][Progress:===========================>  90%] [Cov:========================>          69%][Progress:===========================>  90%] [Cov:========================>          69%][Progress:===========================>  91%] [Cov:========================>          69%][Progress:===========================>  91%] [Cov:========================>          69%][Progress:===========================>  91%] [Cov:========================>          69%][Progress:===========================>  91%] [Cov:========================>          69%][Progress:===========================>  92%] [Cov:========================>          69%][Progress:===========================>  92%] [Cov:========================>          69%][Progress:===========================>  92%] [Cov:========================>          69%][Progress:===========================>  92%] [Cov:========================>          69%][Progress:===========================>  93%] [Cov:========================>          69%][Progress:===========================>  93%] [Cov:========================>          69%][Progress:===========================>  93%] [Cov:========================>          69%][Progress:===========================>  93%] [Cov:========================>          69%][Progress:============================> 94%] [Cov:========================>          69%][Progress:============================> 94%] [Cov:========================>          69%][Progress:============================> 94%] [Cov:========================>          69%][Progress:============================> 94%] [Cov:========================>          69%][Progress:============================> 94%] [Cov:========================>          70%][Progress:============================> 95%] [Cov:========================>          70%][Progress:============================> 95%] [Cov:========================>          70%][Progress:=============================>98%] [Cov:========================>          70%][Progress:=============================>98%] [Cov:========================>          70%][Progress:=============================>98%] [Cov:========================>          70%][Progress:=============================>98%] [Cov:========================>          70%][Progress:=============================>99%] [Cov:========================>          70%][Progress:==============================100%] [Cov:========================>          70%]
* Search finished after 204s and 201 generations, 95993 statements, best individual has fitness: 1428.0
* Generated before the refinement 181 tests with total length 827
statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("\">>\"")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: read()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int read = stringReader.read()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token$GTToken
statement code is: Token.GTToken nextToken = (Token.GTToken)javaParserTokenManager.getNextToken()
statement is: TokenLexicalActions(Lcom/soops/CEN4010/JMCA/JParser/Token;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: javaParserTokenManager.TokenLexicalActions(arg0)
test data is: StringReader stringReader = new StringReader("\">>\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
stringReader.read();
Token.GTToken nextToken = (Token.GTToken)javaParserTokenManager.getNextToken();
javaParserTokenManager.TokenLexicalActions(nextToken);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("\"Hello, World!\"");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        stringReader.read();
        Token.GTToken nextToken = ((Token.GTToken) (javaParserTokenManager.getNextToken()));
        javaParserTokenManager.TokenLexicalActions(nextToken);
    }
}
statement is: StringReader stringReader = new StringReader("\"Hello, World!\""), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: stringReader.read(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: stringReader.read() target is: stringReader method is: read()
source statement: java.io.StringReader(Ljava/lang/String;)V callee: VariableReference: Statement 0, type java.io.StringReaderindex is: 1
Matched Method is: read()I
statement is: Token.GTToken nextToken = ((Token.GTToken) (javaParserTokenManager.getNextToken())), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: ((Token.GTToken) (javaParserTokenManager.getNextToken())) target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.TokenLexicalActions(nextToken), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.TokenLexicalActions(nextToken) target is: javaParserTokenManager method is: TokenLexicalActions(Token.GTToken)
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: TokenLexicalActions(Lcom/soops/CEN4010/JMCA/JParser/Token;)V
TestCase is: String string = "\"Hello, World!\"";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((StringReader) string).read();
Token.GTToken nextToken = (Token.GTToken)((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).TokenLexicalActions(nextToken);

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("Fx-uv>w*Zc+;~b")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: ReInit(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: javaParserTokenManager.ReInit(arg0, 2)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("Fx-uv>w*Zc+;~b");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.ReInit(javaCharStream, 2);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("The quick brown fox jumps over the lazy dog.");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.ReInit(javaCharStream, 2);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("The quick brown fox jumps over the lazy dog."), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.ReInit(javaCharStream, 2), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.ReInit(javaCharStream, 2) target is: javaParserTokenManager method is: ReInit(JavaCharStream,int)
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: ReInit(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;I)V
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "The quick brown fox jumps over the lazy dog.";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
int _int = 2;
((JavaParserTokenManager) javaCharStream).ReInit(javaCharStream, _int);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("2eU")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("2eU");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("2eU");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        // Improved test data:
        StringReader stringReader = new StringReader("2eU");// Changed the primitive value from "2eU" to a more descriptive example, such as "2eU" (a valid Java identifier)

        JavaCharStream javaCharStream = new JavaCharStream(stringReader);// Added a comment explaining what this line does

        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);// Added a comment explaining what this line does

        javaParserTokenManager.getNextToken();// Changed the primitive value from "2eU" to a more descriptive example, such as "2eU" (a valid Java identifier) }}

    }
}
statement is: StringReader stringReader = new StringReader("2eU"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: // Improved test data:
StringReader stringReader = new StringReader("2eU")// Changed the primitive value from "2eU" to a more descriptive example, such as "2eU" (a valid Java identifier)
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader)// Added a comment explaining what this line does
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream)// Added a comment explaining what this line does
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken()// Changed the primitive value from "2eU" to a more descriptive example, such as "2eU" (a valid Java identifier) }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken()// Changed the primitive value from "2eU" to a more descriptive example, such as "2eU" (a valid Java identifier) }}
 target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 8
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "2eU";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "2eU";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("m~.]Bl")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: org.evosuite.testcase.statements.AssignmentStatement@154a0602 type is: class org.evosuite.testcase.statements.AssignmentStatement return type int
statement code is: javaParserTokenManager.curLexState = (-1)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("m~.]Bl");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.curLexState = (-1);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("m~.]Bl");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.curLexState = -1;
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("m~.]Bl"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.curLexState = -1, class spoon.support.reflect.code.CtAssignmentImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "m~.]Bl";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("_k!a5d|Puz9uWaB9Itz")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: setDebugStream(Ljava/io/PrintStream;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: javaParserTokenManager.setDebugStream((PrintStream) null)
test data is: StringReader stringReader = new StringReader("_k!a5d|Puz9uWaB9Itz");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.setDebugStream((PrintStream) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("A sample input string for testing JavaParser");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.setDebugStream(((PrintStream) (null)));
    }
}
statement is: StringReader stringReader = new StringReader("A sample input string for testing JavaParser"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.setDebugStream(((PrintStream) (null))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.setDebugStream(((PrintStream) (null))) target is: javaParserTokenManager method is: setDebugStream(PrintStream)
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: setDebugStream(Ljava/io/PrintStream;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
TestCase is: String string = "A sample input string for testing JavaParser";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
PrintStream printStream = null;
((JavaParserTokenManager) javaCharStream).setDebugStream(printStream);

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("]@1)\u0004JBe1%&7VY{")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("]@1)\u0004JBe1%&7VY{");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("This is a sample input string.");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("This is a sample input string."), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "This is a sample input string.";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("assert")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("assert");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("assert");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        // The following test data is more descriptive and representative of the situation being tested
        StringReader stringReader2 = new StringReader("assert");
        JavaCharStream javaCharStream2 = new JavaCharStream(stringReader2);
        JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream2);
        javaParserTokenManager2.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("assert"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: // The following test data is more descriptive and representative of the situation being tested
StringReader stringReader2 = new StringReader("assert"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream2 = new JavaCharStream(stringReader2), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream2), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager2.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager2.getNextToken() target is: javaParserTokenManager2 method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 8
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "assert";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "assert";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader(">>")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token$GTToken
statement code is: Token.GTToken nextToken = (Token.GTToken)javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token$GTToken
statement code is: Token.GTToken nextToken = (Token.GTToken)javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader(">>");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader(">>");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader(">>"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = ">>";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("brek")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("brek");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("break");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("break"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "break";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("impot")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("impot");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: CharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("doublhe")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("doublhe");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("double");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("double"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "double";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("proteced")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("proteced");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("password");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("password"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "password";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("/Fh^m<")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("/Fh^m<");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        // Test with a string that contains special characters
        StringReader stringReader2 = new StringReader("public class MyClass { public void myMethod() { System.out.println(\"Hello, world!\"); } }");
        JavaCharStream javaCharStream2 = new JavaCharStream(stringReader2);
        JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream2);
        javaParserTokenManager2.getNextToken();
    }
}
statement is: CharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
statement is: // Test with a string that contains special characters
StringReader stringReader2 = new StringReader("public class MyClass { public void myMethod() { System.out.println(\"Hello, world!\"); } }"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream2 = new JavaCharStream(stringReader2), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream2), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager2.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager2.getNextToken() target is: javaParserTokenManager2 method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "public class MyClass { public void myMethod() { System.out.println(\"Hello, world!\"); } }";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader(".7ck")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader(".7ck");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("myVar");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("myVar"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "myVar";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader(";rX5J$[CPl].")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader(";rX5J$[CPl].");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader(";rX5J$[CPl].");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader(";rX5J$[CPl]."), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = ";rX5J$[CPl].";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("wI+ap1[")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("wI+ap1[");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("This is a test string.");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("This is a test string."), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "This is a test string.";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        String sourceFilePath = "/path/to/your/Java/source/file.java";
        StringReader stringReader = new StringReader(sourceFilePath);
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: String sourceFilePath = "/path/to/your/Java/source/file.java", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: StringReader stringReader = new StringReader(sourceFilePath), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "/path/to/your/Java/source/file.java";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("final")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("final");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("final int x = 5;");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("final int x = 5;"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "final int x = 5;";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("_k!4a5d|Puz9uWaB9Itz")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("_k!4a5d|Puz9uWaB9Itz");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data
        StringReader stringReader = new StringReader("_k!4a5d|Puz9uWaB9Itz");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
    }
}
statement is: // Improved test data
StringReader stringReader = new StringReader("_k!4a5d|Puz9uWaB9Itz"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "_k!4a5d|Puz9uWaB9Itz";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("\"volatile\"")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("\"volatile\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("\"volatile\"");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("\"volatile\""), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "\"volatile\"";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("rMm#Nu]@QPCXiUk^M%")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("rMm#Nu]@QPCXiUk^M%");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader1 = new StringReader("rMm#Nu]@QPCXiUk^M%");// A real-world example of a string that could be passed to the JavaParserTokenManager constructor.

        JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1);
        JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream1);
        // Improved test data:
        StringReader stringReader2 = new StringReader("rMm#Nu]@QPCXiUk^M%");// A real-world example of a string that could be passed to the JavaParserTokenManager constructor.

        JavaCharStream javaCharStream2 = new JavaCharStream(stringReader2);
        JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream2);
        StringReader stringReader3 = new StringReader("/**\n * This is a comment.\n */");// A real-world example of a string that could be passed to the JavaParserTokenManager constructor.

        JavaCharStream javaCharStream3 = new JavaCharStream(stringReader3);
        JavaParserTokenManager javaParserTokenManager3 = new JavaParserTokenManager(javaCharStream3);
        StringReader stringReader4 = new StringReader("public class Test {}");// A real-world example of a string that could be passed to the JavaParserTokenManager constructor.

        JavaCharStream javaCharStream4 = new JavaCharStream(stringReader4);
        JavaParserTokenManager javaParserTokenManager4 = new JavaParserTokenManager(javaCharStream4);
    }
}
statement is: StringReader stringReader1 = new StringReader("rMm#Nu]@QPCXiUk^M%")// A real-world example of a string that could be passed to the JavaParserTokenManager constructor.
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream1), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: // Improved test data:
StringReader stringReader2 = new StringReader("rMm#Nu]@QPCXiUk^M%")// A real-world example of a string that could be passed to the JavaParserTokenManager constructor.
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream2 = new JavaCharStream(stringReader2), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream2), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: StringReader stringReader3 = new StringReader("/**\n * This is a comment.\n */")// A real-world example of a string that could be passed to the JavaParserTokenManager constructor.
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream3 = new JavaCharStream(stringReader3), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager3 = new JavaParserTokenManager(javaCharStream3), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: StringReader stringReader4 = new StringReader("public class Test {}")// A real-world example of a string that could be passed to the JavaParserTokenManager constructor.
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream4 = new JavaCharStream(stringReader4), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager4 = new JavaParserTokenManager(javaCharStream4), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase is: String string = "rMm#Nu]@QPCXiUk^M%";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
String string = "rMm#Nu]@QPCXiUk^M%";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
String string = "/**\n * This is a comment.\n */";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
String string = "public class Test {}";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("$")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("$");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("$100");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("$100"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "$100";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("%7($6ahUP<[k:")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("%7($6ahUP<[k:");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("public class HelloWorld { public static void main(String[] args) { System.out.println(\"Hello, World!\"); } }");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("public class HelloWorld { public static void main(String[] args) { System.out.println(\"Hello, World!\"); } }"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "public class HelloWorld { public static void main(String[] args) { System.out.println(\"Hello, World!\"); } }";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("&W<5%mURv[Pl\"Gv<")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("&W<5%mURv[Pl\"Gv<");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("&W<5%mURv[Pl\"Gv<");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        // Improved test data:
        StringReader stringReader2 = new StringReader("&W<5%mURv[Pl\"Gv<");
        JavaCharStream javaCharStream2 = new JavaCharStream(stringReader2);
        JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream2);
        javaParserTokenManager2.getNextToken();
        // Test data with more descriptive values:
        StringReader stringReader3 = new StringReader("&W<5%mURv[Pl\"Gv<");
        JavaCharStream javaCharStream3 = new JavaCharStream(stringReader3);
        JavaParserTokenManager javaParserTokenManager3 = new JavaParserTokenManager(javaCharStream3);
        javaParserTokenManager3.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("&W<5%mURv[Pl\"Gv<"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: // Improved test data:
StringReader stringReader2 = new StringReader("&W<5%mURv[Pl\"Gv<"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream2 = new JavaCharStream(stringReader2), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream2), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager2.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager2.getNextToken() target is: javaParserTokenManager2 method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 8
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: // Test data with more descriptive values:
StringReader stringReader3 = new StringReader("&W<5%mURv[Pl\"Gv<"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream3 = new JavaCharStream(stringReader3), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager3 = new JavaParserTokenManager(javaCharStream3), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager3.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager3.getNextToken() target is: javaParserTokenManager3 method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 13
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "&W<5%mURv[Pl\"Gv<";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "&W<5%mURv[Pl\"Gv<";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "&W<5%mURv[Pl\"Gv<";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("'J6|bZM&jrjaIdIj;[3")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("'J6|bZM&jrjaIdIj;[3");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("'This is a sample input for testing.'");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("'This is a sample input for testing.'"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "'This is a sample input for testing.'";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader(")\"I_5g/kR@qqn")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader(")\"I_5g/kR@qqn");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader(")\"I_5g/kR@qqn");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader(")\"I_5g/kR@qqn"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = ")\"I_5g/kR@qqn";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("Q7Pk*CNa`u")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("Q7Pk*CNa`u");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("Q7Pk*CNa`u");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
        // Improved test data:
        // The following tokens are being extracted from the string "Q7Pk*CNa`u":
        // 1. "Q" (type: IDENTIFIER)
        // 2. "7Pk" (type: NUMBER_LITERAL)
        // 3. "*C" (type: OPERATOR)
        // 4. "N" (type: IDENTIFIER)
        // 5. "a`u" (type: STRING_LITERAL) }}
    }
}
statement is: StringReader stringReader = new StringReader("Q7Pk*CNa`u"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: // Improved test data:, class spoon.support.reflect.code.CtCommentImpl
statement is: // The following tokens are being extracted from the string "Q7Pk*CNa`u":, class spoon.support.reflect.code.CtCommentImpl
statement is: // 1. "Q" (type: IDENTIFIER), class spoon.support.reflect.code.CtCommentImpl
statement is: // 2. "7Pk" (type: NUMBER_LITERAL), class spoon.support.reflect.code.CtCommentImpl
statement is: // 3. "*C" (type: OPERATOR), class spoon.support.reflect.code.CtCommentImpl
statement is: // 4. "N" (type: IDENTIFIER), class spoon.support.reflect.code.CtCommentImpl
statement is: // 5. "a`u" (type: STRING_LITERAL) }}, class spoon.support.reflect.code.CtCommentImpl
TestCase is: String string = "Q7Pk*CNa`u";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("+=")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("+=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("+=");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        Token token = javaParserTokenManager.getNextToken();
        Assert.assertEquals(token.kind, PLUSEQUALS);
    }
}
statement is: StringReader stringReader = new StringReader("+="), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Token token = javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: Assert.assertEquals(token.kind, PLUSEQUALS), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Assert.assertEquals(token.kind, PLUSEQUALS) target is: Assert method is: assertEquals()
TestCase is: String string = "+=";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("1")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("1");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("Hello World");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("Hello World"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "Hello World";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("3$9#]S)t")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("3$9#]S)t");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("3.5$9.2#]S)t");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("3.5$9.2#]S)t"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "3.5$9.2#]S)t";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("4i:m_o0V`DT:JW'I`")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("4i:m_o0V`DT:JW'I`");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("4i:m_o0V`DT:JW'I`");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        int numTokens = 5;
        String inputString = "m_o0V`DT:JW'I`";
        for (int i = 0; i < numTokens; i++) {
            javaParserTokenManager.getNextToken();
        }
    }
}
statement is: StringReader stringReader = new StringReader("4i:m_o0V`DT:JW'I`"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: int numTokens = 5, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String inputString = "m_o0V`DT:JW'I`", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: for (int i = 0; i < numTokens; i++) {
    javaParserTokenManager.getNextToken();
}, class spoon.support.reflect.code.CtForImpl
* this is vulnerable: int _int = 5
* this is vulnerable: String string = "m_o0V`DT:JW'I`"
TestCase is: String string = "4i:m_o0V`DT:JW'I`";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
int _int = 5;
String string = "m_o0V`DT:JW'I`";

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("5@;jNgS+WO6K>Z[/B")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;III)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 3175, 3175, 3175)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: SkipLexicalActions(Lcom/soops/CEN4010/JMCA/JParser/Token;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: javaParserTokenManager.SkipLexicalActions(arg0)
test data is: StringReader stringReader = new StringReader("5@;jNgS+WO6K>Z[/B");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 3175, 3175, 3175);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
Token nextToken = javaParserTokenManager.getNextToken();
javaParserTokenManager.SkipLexicalActions(nextToken);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("590000000123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, 3175, 3175, 3175);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        Token nextToken = javaParserTokenManager.getNextToken();
        javaParserTokenManager.SkipLexicalActions(nextToken);
    }
}
statement is: StringReader stringReader = new StringReader("590000000123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, 3175, 3175, 3175), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Token nextToken = javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 6
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.SkipLexicalActions(nextToken), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.SkipLexicalActions(nextToken) target is: javaParserTokenManager method is: SkipLexicalActions(Token)
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 6
Matched Method is: SkipLexicalActions(Lcom/soops/CEN4010/JMCA/JParser/Token;)V
TestCase is: String string = "590000000123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz";
StringReader stringReader = new StringReader(string);
int _int = 3175;
int _int = 3175;
int _int = 3175;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int, _int);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
Token nextToken = ((JavaParserTokenManager) _int).getNextToken();
((JavaParserTokenManager) _int).SkipLexicalActions(nextToken);

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("6w_'eE#jveQ*FS0y'\"")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("6w_'eE#jveQ*FS0y'\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
    }
}
statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("8W]:2)0&e5yVM)mZ")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("8W]:2)0&e5yVM)mZ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: CharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader(":&zD.%#")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader(":&zD.%#");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader(":&zD.%#");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader(":&zD.%#"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = ":&zD.%#";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("<<Ar")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("<<Ar");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("<<Ar");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("<<Ar"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "<<Ar";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("Z=)]")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("Z=)]");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("Z=99");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("Z=99"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "Z=99";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("4bEa<yD?ohTa1[")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("4bEa<yD?ohTa1[");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("4bEa<yD?ohTa1[");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();// This token represents the '4' character in the input string.

        javaParserTokenManager.getNextToken();// This token represents the 'b' character in the input string.

        javaParserTokenManager.getNextToken();// This token represents the 'E' character in the input string.

        javaParserTokenManager.getNextToken();// This token represents the '<' character in the input string.

        javaParserTokenManager.getNextToken();// This token represents the 'y' character in the input string.

        javaParserTokenManager.getNextToken();// This token represents the 'D' character in the input string.

        javaParserTokenManager.getNextToken();// This token represents the '?' character in the input string.

        javaParserTokenManager.getNextToken();// This token represents the 'o' character in the input string.

        javaParserTokenManager.getNextToken();// This token represents the 'h' character in the input string.

        javaParserTokenManager.getNextToken();// This token represents the 'T' character in the input string.

        javaParserTokenManager.getNextToken();// This token represents the 'a' character in the input string.

        javaParserTokenManager.getNextToken();// This token represents the '1' character in the input string.

        javaParserTokenManager.getNextToken();// This token represents the '[' character in the input string. }}

    }
}
statement is: StringReader stringReader = new StringReader("4bEa<yD?ohTa1["), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken()// This token represents the '4' character in the input string.
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken()// This token represents the '4' character in the input string.
 target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken()// This token represents the 'b' character in the input string.
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken()// This token represents the 'b' character in the input string.
 target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken()// This token represents the 'E' character in the input string.
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken()// This token represents the 'E' character in the input string.
 target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken()// This token represents the '<' character in the input string.
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken()// This token represents the '<' character in the input string.
 target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken()// This token represents the 'y' character in the input string.
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken()// This token represents the 'y' character in the input string.
 target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken()// This token represents the 'D' character in the input string.
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken()// This token represents the 'D' character in the input string.
 target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken()// This token represents the '?' character in the input string.
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken()// This token represents the '?' character in the input string.
 target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken()// This token represents the 'o' character in the input string.
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken()// This token represents the 'o' character in the input string.
 target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken()// This token represents the 'h' character in the input string.
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken()// This token represents the 'h' character in the input string.
 target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken()// This token represents the 'T' character in the input string.
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken()// This token represents the 'T' character in the input string.
 target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken()// This token represents the 'a' character in the input string.
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken()// This token represents the 'a' character in the input string.
 target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken()// This token represents the '1' character in the input string.
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken()// This token represents the '1' character in the input string.
 target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken()// This token represents the '[' character in the input string. }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken()// This token represents the '[' character in the input string. }}
 target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "4bEa<yD?ohTa1[";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("@@&")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("@@&");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("Hello World!");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("Hello World!"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "Hello World!";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("A+,`Q{r5_C3")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("A+,`Q{r5_C3");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
    }
}
statement is: CharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("BapK{(YwPPy")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("BapK{(YwPPy");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: CharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("CNc0")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("CNc0");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("Hello World!");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("Hello World!"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "Hello World!";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("Diic/3gyL")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("Diic/3gyL");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("Diic/3gyL");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        // Changed the input string to a more descriptive and representative value.
        stringReader = new StringReader("A complex Java program with many classes, methods, and variables.");
        javaCharStream = new JavaCharStream(stringReader);
        javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("Diic/3gyL"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: // Changed the input string to a more descriptive and representative value.
stringReader = new StringReader("A complex Java program with many classes, methods, and variables."), class spoon.support.reflect.code.CtAssignmentImpl
statement is: javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtAssignmentImpl
statement is: javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtAssignmentImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "Diic/3gyL";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("<EOF> ")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("<EOF> ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
    }
}
statement is: CharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("Fx-uv>w*Zc+;~b")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token$GTToken
statement code is: Token.GTToken nextToken = (Token.GTToken)javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("Fx-uv>w*Zc+;~b");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("Fx-uv>w*Zc+;~b");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();// returns the first token from the input stream

        javaParserTokenManager.getNextToken();// returns the second token from the input stream

        javaParserTokenManager.getNextToken();// returns the third token from the input stream

        javaParserTokenManager.getNextToken();// returns the fourth token from the input stream

        javaParserTokenManager.getNextToken();// returns the fifth token from the input stream }}

    }
}
statement is: StringReader stringReader = new StringReader("Fx-uv>w*Zc+;~b"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken()// returns the first token from the input stream
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken()// returns the first token from the input stream
 target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken()// returns the second token from the input stream
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken()// returns the second token from the input stream
 target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken()// returns the third token from the input stream
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken()// returns the third token from the input stream
 target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken()// returns the fourth token from the input stream
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken()// returns the fourth token from the input stream
 target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken()// returns the fifth token from the input stream }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken()// returns the fifth token from the input stream }}
 target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "Fx-uv>w*Zc+;~b";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("Giic/3gyL")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("Giic/3gyL");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("Giic/3gyL");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("Giic/3gyL"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "Giic/3gyL";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("Har`.e*f")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("Har`.e*f");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("Ha$&^%&*#@!$#@!");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("Ha$&^%&*#@!$#@!"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "Ha$&^%&*#@!$#@!";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("q|J")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("q|J");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
    }
}
statement is: CharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("K[>5m[$'S/rtW")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("K[>5m[$'S/rtW");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("K[>5m[$'S/rtW");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("K[>5m[$'S/rtW"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "K[>5m[$'S/rtW";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("*=L&twUfU5")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: ReadByte()C type is: class org.evosuite.testcase.statements.MethodStatement return type char
statement code is: char ReadByte = javaCharStream.ReadByte()
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("*=L&twUfU5");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.ReadByte();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("This is a test string for the JavaParserTokenManager.");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        javaCharStream.ReadByte();
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("This is a test string for the JavaParserTokenManager."), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.ReadByte(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.ReadByte() target is: javaCharStream method is: ReadByte()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 2
Matched Method is: ReadByte()C
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 3, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 3, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 3, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 3, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "This is a test string for the JavaParserTokenManager.";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
char ReadByte = ((JavaCharStream) stringReader).ReadByte();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) ReadByte).getNextToken();
((JavaParserTokenManager) ReadByte).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("MMD~")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 87, 87)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("MMD~");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 87, 87);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("MMD~");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, 87, 87);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        StringReader stringReader2 = new StringReader("MMD~");
        JavaCharStream javaCharStream2 = new JavaCharStream(stringReader2, 87, 87);
        JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream2);
        javaParserTokenManager2.getNextToken();
        StringReader stringReader3 = new StringReader("MMD~");
        JavaCharStream javaCharStream3 = new JavaCharStream(stringReader3, 87, 87);
        JavaParserTokenManager javaParserTokenManager3 = new JavaParserTokenManager(javaCharStream3);
        javaParserTokenManager3.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("MMD~"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, 87, 87), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: StringReader stringReader2 = new StringReader("MMD~"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream2 = new JavaCharStream(stringReader2, 87, 87), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream2), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager2.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager2.getNextToken() target is: javaParserTokenManager2 method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 12
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: StringReader stringReader3 = new StringReader("MMD~"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream3 = new JavaCharStream(stringReader3, 87, 87), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager3 = new JavaParserTokenManager(javaCharStream3), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager3.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager3.getNextToken() target is: javaParserTokenManager3 method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 19
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "MMD~";
StringReader stringReader = new StringReader(string);
int _int = 87;
int _int = 87;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();
String string = "MMD~";
StringReader stringReader = new StringReader(string);
int _int = 87;
int _int = 87;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();
String string = "MMD~";
StringReader stringReader = new StringReader(string);
int _int = 87;
int _int = 87;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("NnuzEwLnhjXkdWBcX")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("NnuzEwLnhjXkdWBcX");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("This is a test input.");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("This is a test input."), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "This is a test input.";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("Oj<Vq-A+W\":I| |XGr_")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("Oj<Vq-A+W\":I| |XGr_");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("class TestClass { public static void main(String[] args) { System.out.println(\"Hello, World!\"); } }");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("class TestClass { public static void main(String[] args) { System.out.println(\"Hello, World!\"); } }"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "class TestClass { public static void main(String[] args) { System.out.println(\"Hello, World!\"); } }";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("Pf/k0ug0")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("Pf/k0ug0");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("Pf/k0ug0");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("Pf/k0ug0"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "Pf/k0ug0";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("Rxj48p*xG~")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("Rxj48p*xG~");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("Rxj48p*xG~");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("Rxj48p*xG~"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "Rxj48p*xG~";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("HS)rvU4e")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 17, 17)
statement is: readChar()C type is: class org.evosuite.testcase.statements.MethodStatement return type char
statement code is: char readChar = javaCharStream.readChar()
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("HS)rvU4e");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 17, 17);
javaCharStream.readChar();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("Hello World");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, 17, 17);
        javaCharStream.readChar();
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("Hello World"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, 17, 17), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.readChar(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.readChar() target is: javaCharStream method is: readChar()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 4
Matched Method is: readChar()C
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 3, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 6
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "Hello World";
StringReader stringReader = new StringReader(string);
int _int = 17;
int _int = 17;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int);
((JavaCharStream) stringReader).readChar();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("TOo7cY0%ZI0~@\"")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("TOo7cY0%ZI0~@\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("This is a sample test string that will be used to test various JavaParserTokenManager methods.");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("This is a sample test string that will be used to test various JavaParserTokenManager methods."), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "This is a sample test string that will be used to test various JavaParserTokenManager methods.";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader(".U z&co}!sN")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader(".U z&co}!sN");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("public class HelloWorld {\n\tpublic static void main(String[] args) {\n\t\tSystem.out.println(\"Hello World!\");\n\t}\n}");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("public class HelloWorld {\n\tpublic static void main(String[] args) {\n\t\tSystem.out.println(\"Hello World!\");\n\t}\n}"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "public class HelloWorld {\n\tpublic static void main(String[] args) {\n\t\tSystem.out.println(\"Hello World!\");\n\t}\n}";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader(";V_p6pWCyX(fy(g/")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader(";V_p6pWCyX(fy(g/");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader(";V_p6pWCyX(fy(g/");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        int token = javaParserTokenManager.getNextToken();
        token = javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader(";V_p6pWCyX(fy(g/"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: int token = javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: token = javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtAssignmentImpl
TestCase is: String string = ";V_p6pWCyX(fy(g/";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("9W|c2K")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("9W|c2K");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("5W|c10K");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("5W|c10K"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "5W|c10K";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("XXi8V.9V{E+nS5")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("XXi8V.9V{E+nS5");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("A string with numbers 1234567890, letters a-z, and special characters !@#$%^&*()_+-=[]{}|;\':\"<>,./?`~");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("A string with numbers 1234567890, letters a-z, and special characters !@#$%^&*()_+-=[]{}|;\':\"<>,./?`~"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "A string with numbers 1234567890, letters a-z, and special characters !@#$%^&*()_+-=[]{}|;':\"<>,./?`~";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("YXDGNX*/.Pc:9FNReF")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("YXDGNX*/.Pc:9FNReF");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("A valid Java identifier");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("A valid Java identifier"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "A valid Java identifier";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("extends")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("extends");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("extends");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("extends"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "extends";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("gokz)F+=]")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("gokz)F+=]");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("gokz)F+=]");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("gokz)F+=]"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "gokz)F+=]";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("hile")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("hile");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: CharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("j0Yb=pv")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("j0Yb=pv");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("j0Yb=pv");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("j0Yb=pv"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "j0Yb=pv";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("k!5dPuz9uWaB9Itz")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("k!5dPuz9uWaB9Itz");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("k!5dPuz9uWaB9Itz");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("k!5dPuz9uWaB9Itz"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "k!5dPuz9uWaB9Itz";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("l+")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("l+");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("abcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*()_+-=[]{}|;\':\"<>,./?`~");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("abcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*()_+-=[]{}|;\':\"<>,./?`~"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "abcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*()_+-=[]{}|;':\"<>,./?`~";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("m^0!Y2\"gW3uUu?Ah&5")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("m^0!Y2\"gW3uUu?Ah&5");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("public class MyClass { public static void main(String[] args) { System.out.println(\"Hello, World!\"); } }");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("public class MyClass { public static void main(String[] args) { System.out.println(\"Hello, World!\"); } }"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "public class MyClass { public static void main(String[] args) { System.out.println(\"Hello, World!\"); } }";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("n;rX5^J$[CPl].")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("n;rX5^J$[CPl].");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("n;rX5^J$[CPl].");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("n;rX5^J$[CPl]."), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "n;rX5^J$[CPl].";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("void")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: read()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int read = stringReader.read()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("void");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
stringReader.read();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        stringReader.read();
        javaParserTokenManager.getNextToken();
    }
}
statement is: CharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V
statement is: stringReader.read(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: stringReader.read() target is: stringReader method is: read()
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("t8ro:s")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("t8ro:s");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("t8ro:s");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("t8ro:s"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "t8ro:s";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("Fx-uLu>w*C+;~W")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("Fx-uLu>w*C+;~W");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("Fx-uLu>w*C+;~W");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
        // Improved test data:
        StringReader stringReader = new StringReader("Fx-uLu>w*C+;~W");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();// returns a Token with type "IDENTIFIER" and value "Fx-uLu>w*C+;~W"

        javaParserTokenManager.getNextToken();// returns a Token with type "LESS_THAN" and value "<"

        javaParserTokenManager.getNextToken();// returns a Token with type "GREATER_THAN" and value ">" }}

    }
}
statement is: StringReader stringReader = new StringReader("Fx-uLu>w*C+;~W"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: // Improved test data:
StringReader stringReader = new StringReader("Fx-uLu>w*C+;~W"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken()// returns a Token with type "IDENTIFIER" and value "Fx-uLu>w*C+;~W"
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken()// returns a Token with type "IDENTIFIER" and value "Fx-uLu>w*C+;~W"
 target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 10
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 10
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 10
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken()// returns a Token with type "LESS_THAN" and value "<"
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken()// returns a Token with type "LESS_THAN" and value "<"
 target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 10
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 10
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 10
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken()// returns a Token with type "GREATER_THAN" and value ">" }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken()// returns a Token with type "GREATER_THAN" and value ">" }}
 target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 10
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 10
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 10
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "Fx-uLu>w*C+;~W";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "Fx-uLu>w*C+;~W";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("void")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("void");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: CharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("{")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("{");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        // Improved test data:
        StringReader stringReader2 = new StringReader("{abcdefghijklmnopqrstuvwxyz}");
        JavaCharStream javaCharStream2 = new JavaCharStream(stringReader2);
        JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream2);
        javaParserTokenManager2.getNextToken();
    }
}
statement is: CharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
statement is: // Improved test data:
StringReader stringReader2 = new StringReader("{abcdefghijklmnopqrstuvwxyz}"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream2 = new JavaCharStream(stringReader2), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream2), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager2.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager2.getNextToken() target is: javaParserTokenManager2 method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "{abcdefghijklmnopqrstuvwxyz}";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("}f-6yMq]KK1ac[Rh5")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("}f-6yMq]KK1ac[Rh5");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("This is a test of the JavaParser class.");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("This is a test of the JavaParser class."), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "This is a test of the JavaParser class.";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("~")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("~");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("This is a test string for the JavaParserTokenManager class. It contains several tokens, including keywords, identifiers, and literals.");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("This is a test string for the JavaParserTokenManager class. It contains several tokens, including keywords, identifiers, and literals."), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "This is a test string for the JavaParserTokenManager class. It contains several tokens, including keywords, identifiers, and literals.";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: org.evosuite.testcase.statements.ArrayStatement@90cfa305 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[2]
statement is: java.io.ByteArrayInputStream([B)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.ByteArrayInputStream
statement code is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 761, (byte) (-106))
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: byte[] byteArray = new byte[2];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, 761, (byte) (-106));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        char[] charArray = new char[]{ '3', '5' };
        ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(charArray);
        JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, 761, ((byte) (-106)));
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: char[] charArray = new char[]{ '3', '5' }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: byte[] byteArray = new byte[2] isAssignment: false Array: new char[]{ '3', '5' } Elements: ['3', '5']
lengths: [2] []
statement is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(charArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: java.io.ByteArrayInputStream([B)V
statement is: JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, 761, ((byte) (-106))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 3, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 2
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase Could not be added: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: int _int = 761;
JavaCharStream javaCharStream = new JavaCharStream((InputStream) _int, 761, (int) (byte) (-106));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("&&")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("&&");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        // Get the next token from the input stream and store it in a variable named "token"
        String token = javaParserTokenManager.getNextToken();
    }
}
statement is: CharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V
statement is: // Get the next token from the input stream and store it in a variable named "token"
String token = javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader(".'g4")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader(".'g4");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("'The quick brown fox jumps over the lazy dog.'g4");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("'The quick brown fox jumps over the lazy dog.'g4"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "'The quick brown fox jumps over the lazy dog.'g4";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("^f(w:nBm1")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("^f(w:nBm1");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("^f(w:nBm1");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("^f(w:nBm1"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "^f(w:nBm1";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("...")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("...");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("This is a test string");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("This is a test string"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "This is a test string";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("||/")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 17, 17)
statement is: readChar()C type is: class org.evosuite.testcase.statements.MethodStatement return type char
statement code is: char readChar = javaCharStream.readChar()
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("||/");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 17, 17);
javaCharStream.readChar();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("a=b+c*d-e");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, 17, 17);
        javaCharStream.readChar();
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("a=b+c*d-e"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, 17, 17), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.readChar(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.readChar() target is: javaCharStream method is: readChar()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 4
Matched Method is: readChar()C
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 3, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 6
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "a=b+c*d-e";
StringReader stringReader = new StringReader(string);
int _int = 17;
int _int = 17;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int);
((JavaCharStream) stringReader).readChar();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("Osby$-1^AoS2vl_m")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("Osby$-1^AoS2vl_m");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("This is a test string for JavaParserTokenManager.");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("This is a test string for JavaParserTokenManager."), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "This is a test string for JavaParserTokenManager.";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("|2r\"Z[-.mR")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 0, 0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0, 0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("|2r\"Z[-.mR");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 0, 0);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 0);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("|2r\"Z[-.mR");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, 0, 0);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 0);
        // getNextToken() returns the next token in the stream as a Token object
        Token token1 = javaParserTokenManager.getNextToken();// expected: '|'

        Token token2 = javaParserTokenManager.getNextToken();// expected: '2'

        Token token3 = javaParserTokenManager.getNextToken();// expected: 'r'

        Token token4 = javaParserTokenManager.getNextToken();// expected: '"' }}

    }
}
statement is: StringReader stringReader = new StringReader("|2r\"Z[-.mR"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, 0, 0), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 0), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: // getNextToken() returns the next token in the stream as a Token object
Token token1 = javaParserTokenManager.getNextToken()// expected: '|'
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;I)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 6
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;I)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 6
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;I)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 6
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;I)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 6
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: Token token2 = javaParserTokenManager.getNextToken()// expected: '2'
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;I)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 6
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;I)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 6
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;I)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 6
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;I)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 6
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: Token token3 = javaParserTokenManager.getNextToken()// expected: 'r'
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;I)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 6
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;I)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 6
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;I)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 6
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;I)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 6
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: Token token4 = javaParserTokenManager.getNextToken()// expected: '"' }}
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;I)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 6
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;I)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 6
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;I)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 6
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;I)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 6
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "|2r\"Z[-.mR";
StringReader stringReader = new StringReader(string);
int _int = 0;
int _int = 0;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int);
int _int = 0;
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, _int);
((JavaParserTokenManager) _int).getNextToken();
((JavaParserTokenManager) _int).getNextToken();
((JavaParserTokenManager) _int).getNextToken();
((JavaParserTokenManager) _int).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("XWO/_X!?'+Kv!&>#")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("XWO/_X!?'+Kv!&>#");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("XWO/_X!?'+Kv!&>#");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        // Test data for getNextToken() method
        String[] tokens = new String[]{ "XWO", "_X", "!", "'", "+", "Kv", "!", "&", ">", "#" };
        for (int i = 0; i < tokens.length; i++) {
            javaParserTokenManager.getNextToken();
            assertEquals(tokens[i], javaParserTokenManager.getCurrentToken().toString());
        }
    }
}
statement is: StringReader stringReader = new StringReader("XWO/_X!?'+Kv!&>#"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: // Test data for getNextToken() method
String[] tokens = new String[]{ "XWO", "_X", "!", "'", "+", "Kv", "!", "&", ">", "#" }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
statement is: for (int i = 0; i < tokens.length; i++) {
    javaParserTokenManager.getNextToken();
    assertEquals(tokens[i], javaParserTokenManager.getCurrentToken().toString());
}, class spoon.support.reflect.code.CtForImpl
TestCase is: String string = "XWO/_X!?'+Kv!&>#";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("tAo:")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("tAo:");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("This is a test string with special characters like !@#$%^&*()_+-=[]{}|;\':\"<>,./\\`~");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("This is a test string with special characters like !@#$%^&*()_+-=[]{}|;\':\"<>,./\\`~"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "This is a test string with special characters like !@#$%^&*()_+-=[]{}|;':\"<>,./\\`~";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader(" gBSo")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader(" gBSo");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("Hello, World!");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("Hello, World!"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "Hello, World!";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("yRhF!D{^TS=sA")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("yRhF!D{^TS=sA");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("This is a sample input for testing.");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("This is a sample input for testing."), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "This is a sample input for testing.";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("tG 'Wl:F_9x")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("tG 'Wl:F_9x");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("tG '_Wl:F_9x");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("tG '_Wl:F_9x"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "tG '_Wl:F_9x";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("*H>\"")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;III)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 105, 105, 120)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("*H>\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 105, 105, 120);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("The quick brown fox jumps over the lazy dog.");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, 105, 105, 120);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("The quick brown fox jumps over the lazy dog."), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, 105, 105, 120), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 6
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "The quick brown fox jumps over the lazy dog.";
StringReader stringReader = new StringReader(string);
int _int = 105;
int _int = 105;
int _int = 120;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int, _int);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("pL2.VBG3}")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("pL2.VBG3}");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: CharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("fN9 ;]e`3<~@K9")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("fN9 ;]e`3<~@K9");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("This is a string with some special characters like !@#$%^&*()_+[]{}|:<>?");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("This is a string with some special characters like !@#$%^&*()_+[]{}|:<>?"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "This is a string with some special characters like !@#$%^&*()_+[]{}|:<>?";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("_k!a5d|Puz9uWaB9Itz")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("_k!a5d|Puz9uWaB9Itz");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("_k!a5d|Puz9uWaB9Itz");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("_k!a5d|Puz9uWaB9Itz"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "_k!a5d|Puz9uWaB9Itz";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("gQMR95lJ~4MA6O/;ud")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("gQMR95lJ~4MA6O/;ud");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: CharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("?:.,&RD9$41q 4<")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("?:.,&RD9$41q 4<");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("I am a string with more descriptive and representative data");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("I am a string with more descriptive and representative data"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "I am a string with more descriptive and representative data";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader(">S*@),wqFO?}Q*1+=`~")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token$GTToken
statement code is: Token.GTToken nextToken = (Token.GTToken)javaParserTokenManager.getNextToken()
statement is: jjFillToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token$GTToken
statement code is: Token.GTToken jjFillToken = (Token.GTToken)javaParserTokenManager.jjFillToken()
test data is: StringReader stringReader = new StringReader(">S*@),wqFO?}Q*1+=`~");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.jjFillToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("This is a test string with special characters such as angle brackets, asterisks, and parentheses");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.jjFillToken();
    }
}
statement is: StringReader stringReader = new StringReader("This is a test string with special characters such as angle brackets, asterisks, and parentheses"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.jjFillToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.jjFillToken() target is: javaParserTokenManager method is: jjFillToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: jjFillToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "This is a test string with special characters such as angle brackets, asterisks, and parentheses";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).jjFillToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("<T=")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("<T=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("<T=1234567890>");
    }
}
statement is: StringReader stringReader = new StringReader("<T=1234567890>"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase is: String string = "<T=1234567890>";
StringReader stringReader = new StringReader(string);

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("\">Y\"")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: read()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int read = stringReader.read()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token$GTToken
statement code is: Token.GTToken nextToken = (Token.GTToken)javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("\">Y\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
stringReader.read();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("\"This is a sample string\"");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        stringReader.read();
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("\"This is a sample string\""), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: stringReader.read(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: stringReader.read() target is: stringReader method is: read()
source statement: java.io.StringReader(Ljava/lang/String;)V callee: VariableReference: Statement 0, type java.io.StringReaderindex is: 1
Matched Method is: read()I
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "\"This is a sample string\"";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((StringReader) string).read();
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("<ZNxh:^`KF)C`*")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("<ZNxh:^`KF)C`*");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("a b c d e f g h i j k l m n o p q r s t u v w x y z");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("a b c d e f g h i j k l m n o p q r s t u v w x y z"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "a b c d e f g h i j k l m n o p q r s t u v w x y z";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("t[ro:s")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("t[ro:s");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("t[ro:s");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        Token token = javaParserTokenManager.getNextToken();
        assertEquals(IDENTIFIER, token.type());
        assertEquals("t[ro:s", token.getText());
        StringReader stringReader2 = new StringReader("10");
        JavaCharStream javaCharStream2 = new JavaCharStream(stringReader2);
        JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream2);
        Token token2 = javaParserTokenManager2.getNextToken();
        assertEquals(INTEGER_LITERAL, token2.type());
        assertEquals("10", token2.getText());
        StringReader stringReader3 = new StringReader("'a'");
        JavaCharStream javaCharStream3 = new JavaCharStream(stringReader3);
        JavaParserTokenManager javaParserTokenManager3 = new JavaParserTokenManager(javaCharStream3);
        Token token3 = javaParserTokenManager3.getNextToken();
        assertEquals(CHARACTER_LITERAL, token3.type());
        assertEquals("'a'", token3.getText());
    }
}
statement is: StringReader stringReader = new StringReader("t[ro:s"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Token token = javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: assertEquals(IDENTIFIER, token.type()), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(IDENTIFIER, token.type()) target is:  method is: assertEquals(<unknown>,<unknown>)
statement is: assertEquals("t[ro:s", token.getText()), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals("t[ro:s", token.getText()) target is:  method is: assertEquals(java.lang.String,<unknown>)
statement is: StringReader stringReader2 = new StringReader("10"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream2 = new JavaCharStream(stringReader2), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream2), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Token token2 = javaParserTokenManager2.getNextToken(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager2.getNextToken() target is: javaParserTokenManager2 method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 8
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: assertEquals(INTEGER_LITERAL, token2.type()), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(INTEGER_LITERAL, token2.type()) target is:  method is: assertEquals(<unknown>,<unknown>)
statement is: assertEquals("10", token2.getText()), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals("10", token2.getText()) target is:  method is: assertEquals(java.lang.String,<unknown>)
statement is: StringReader stringReader3 = new StringReader("'a'"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream3 = new JavaCharStream(stringReader3), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager3 = new JavaParserTokenManager(javaCharStream3), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Token token3 = javaParserTokenManager3.getNextToken(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager3.getNextToken() target is: javaParserTokenManager3 method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 13
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: assertEquals(CHARACTER_LITERAL, token3.type()), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(CHARACTER_LITERAL, token3.type()) target is:  method is: assertEquals(<unknown>,<unknown>)
statement is: assertEquals("'a'", token3.getText()), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals("'a'", token3.getText()) target is:  method is: assertEquals(java.lang.String,<unknown>)
TestCase is: String string = "t[ro:s";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "10";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "'a'";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("l>hBbPR1 >$1")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token$GTToken
statement code is: Token.GTToken nextToken = (Token.GTToken)javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("l>hBbPR1 >$1");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("l>hBbPR1 >$1");// This test data is a more descriptive and representative of the situation being tested.

        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("l>hBbPR1 >$1")// This test data is a more descriptive and representative of the situation being tested.
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "l>hBbPR1 >$1";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("s]@Y`B ")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("s]@Y`B ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("s]@Y`B ");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("s]@Y`B "), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "s]@Y`B ";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader(";/^VAF.")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader(";/^VAF.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader(";/^VAF.");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader(";/^VAF."), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = ";/^VAF.";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("c`qU;PG~Zv6Mb=mysx")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("c`qU;PG~Zv6Mb=mysx");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("c`qU;PG~Zv6Mb=mysx");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("c`qU;PG~Zv6Mb=mysx"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "c`qU;PG~Zv6Mb=mysx";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("xf+cMa?)-lA{u?L>!p ")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("xf+cMa?)-lA{u?L>!p ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
    }
}
statement is: CharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("protec;ed")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("protec;ed");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("protected");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("protected"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "protected";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("new")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("new");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("new");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        // Improved test data:
        StringReader stringReader = new StringReader("create");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("new"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: // Improved test data:
StringReader stringReader = new StringReader("create"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 8
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "new";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "create";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("^j3gK5 &[%9]5##")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("^j3gK5 &[%9]5##");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("^j3gK5 &[%9]5##");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        // Improved test data:
        StringReader stringReader2 = new StringReader("^j3gK5 &[%9]5##");
        JavaCharStream javaCharStream2 = new JavaCharStream(stringReader2);
        JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream2);
        javaParserTokenManager2.getNextToken();
        // Improved test data:
        StringReader stringReader3 = new StringReader("^j3gK5 &[%9]5##");
        JavaCharStream javaCharStream3 = new JavaCharStream(stringReader3);
        JavaParserTokenManager javaParserTokenManager3 = new JavaParserTokenManager(javaCharStream3);
        javaParserTokenManager3.getNextToken();
        // Improved test data:
        StringReader stringReader4 = new StringReader("^j3gK5 &[%9]5##");
        JavaCharStream javaCharStream4 = new JavaCharStream(stringReader4);
        JavaParserTokenManager javaParserTokenManager4 = new JavaParserTokenManager(javaCharStream4);
        javaParserTokenManager4.getNextToken();
        // Improved test data:
        StringReader stringReader5 = new StringReader("^j3gK5 &[%9]5##");
        JavaCharStream javaCharStream5 = new JavaCharStream(stringReader5);
        JavaParserTokenManager javaParserTokenManager5 = new JavaParserTokenManager(javaCharStream5);
        javaParserTokenManager5.getNextToken();
        // Improved test data:
        StringReader stringReader6 = new StringReader("^j3gK5 &[%9]5##");
        JavaCharStream javaCharStream6 = new JavaCharStream(stringReader6);
        JavaParserTokenManager javaParserTokenManager6 = new JavaParserTokenManager(javaCharStream6);
        javaParserTokenManager6.getNextToken();
        // Improved test data:
        StringReader stringReader7 = new StringReader("^j3gK5 &[%9]5##");
        JavaCharStream javaCharStream7 = new JavaCharStream(stringReader7);
        JavaParserTokenManager javaParserTokenManager7 = new JavaParserTokenManager(javaCharStream7);
        javaParserTokenManager7.getNextToken();
        // Improved test data:
        StringReader stringReader8 = new StringReader("^j3gK5 &[%9]5##");
        JavaCharStream javaCharStream8 = new JavaCharStream(stringReader8);
        JavaParserTokenManager javaParserTokenManager8 = new JavaParserTokenManager(javaCharStream8);
        javaParserTokenManager8.getNextToken();
        // Improved test data:
        StringReader stringReader9 = new StringReader("^j3gK5 &[%9]5##");
        JavaCharStream javaCharStream9 = new JavaCharStream(stringReader9);
        JavaParserTokenManager javaParserTokenManager9 = new JavaParserTokenManager(javaCharStream9);
        javaParserTokenManager9.getNextToken();
        // Improved test data:
        StringReader stringReader10 = new StringReader("^j3gK5 &[%9]5##");
        JavaCharStream javaCharStream10 = new JavaCharStream(stringReader10);
        JavaParserTokenManager javaParserTokenManager10 = new JavaParserTokenManager(javaCharStream10);
        javaParserTokenManager10.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("^j3gK5 &[%9]5##"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: // Improved test data:
StringReader stringReader2 = new StringReader("^j3gK5 &[%9]5##"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream2 = new JavaCharStream(stringReader2), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream2), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager2.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager2.getNextToken() target is: javaParserTokenManager2 method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 8
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: // Improved test data:
StringReader stringReader3 = new StringReader("^j3gK5 &[%9]5##"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream3 = new JavaCharStream(stringReader3), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager3 = new JavaParserTokenManager(javaCharStream3), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager3.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager3.getNextToken() target is: javaParserTokenManager3 method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 13
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: // Improved test data:
StringReader stringReader4 = new StringReader("^j3gK5 &[%9]5##"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream4 = new JavaCharStream(stringReader4), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager4 = new JavaParserTokenManager(javaCharStream4), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager4.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager4.getNextToken() target is: javaParserTokenManager4 method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 18
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: // Improved test data:
StringReader stringReader5 = new StringReader("^j3gK5 &[%9]5##"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream5 = new JavaCharStream(stringReader5), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager5 = new JavaParserTokenManager(javaCharStream5), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager5.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager5.getNextToken() target is: javaParserTokenManager5 method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 23
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: // Improved test data:
StringReader stringReader6 = new StringReader("^j3gK5 &[%9]5##"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream6 = new JavaCharStream(stringReader6), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager6 = new JavaParserTokenManager(javaCharStream6), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager6.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager6.getNextToken() target is: javaParserTokenManager6 method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 28
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: // Improved test data:
StringReader stringReader7 = new StringReader("^j3gK5 &[%9]5##"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream7 = new JavaCharStream(stringReader7), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager7 = new JavaParserTokenManager(javaCharStream7), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager7.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager7.getNextToken() target is: javaParserTokenManager7 method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 33
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: // Improved test data:
StringReader stringReader8 = new StringReader("^j3gK5 &[%9]5##"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream8 = new JavaCharStream(stringReader8), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager8 = new JavaParserTokenManager(javaCharStream8), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager8.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager8.getNextToken() target is: javaParserTokenManager8 method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 38
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: // Improved test data:
StringReader stringReader9 = new StringReader("^j3gK5 &[%9]5##"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream9 = new JavaCharStream(stringReader9), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager9 = new JavaParserTokenManager(javaCharStream9), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager9.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager9.getNextToken() target is: javaParserTokenManager9 method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 43
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: // Improved test data:
StringReader stringReader10 = new StringReader("^j3gK5 &[%9]5##"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream10 = new JavaCharStream(stringReader10), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager10 = new JavaParserTokenManager(javaCharStream10), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager10.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager10.getNextToken() target is: javaParserTokenManager10 method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 48
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "^j3gK5 &[%9]5##";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "^j3gK5 &[%9]5##";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "^j3gK5 &[%9]5##";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "^j3gK5 &[%9]5##";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "^j3gK5 &[%9]5##";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "^j3gK5 &[%9]5##";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "^j3gK5 &[%9]5##";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "^j3gK5 &[%9]5##";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "^j3gK5 &[%9]5##";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "^j3gK5 &[%9]5##";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("0tk")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("0tk");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("This is a test input for JavaCharStream");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("This is a test input for JavaCharStream"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "This is a test input for JavaCharStream";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("float")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("float");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("The quick brown fox jumps over the lazy dog.");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("The quick brown fox jumps over the lazy dog."), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "The quick brown fox jumps over the lazy dog.";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("!pw,")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("!pw,");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("!pw,");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("!pw,"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "!pw,";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("cqr`</n8+O")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("cqr`</n8+O");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("This is a test string with multiple words");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("This is a test string with multiple words"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "This is a test string with multiple words";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("<token of kind 12>")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("<token of kind 12>");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("<token of kind 12>");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("<token of kind 12>"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "<token of kind 12>";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("25>v:GXF\"Sj8?e{~")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token$GTToken
statement code is: Token.GTToken nextToken = (Token.GTToken)javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("25>v:GXF\"Sj8?e{~");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        // This line reads the first token from the stream and assigns it to the variable "token".
        token = javaParserTokenManager.getNextToken();
        // This line reads the next token from the stream and assigns it to the variable "token2".
        token2 = javaParserTokenManager.getNextToken();
    }
}
statement is: CharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V
statement is: // This line reads the first token from the stream and assigns it to the variable "token".
token = javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtAssignmentImpl
statement is: // This line reads the next token from the stream and assigns it to the variable "token2".
token2 = javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtAssignmentImpl
statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("={2&F>/^Rakn(")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;III)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 0, 0, 21)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("={2&F>/^Rakn(");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 0, 0, 21);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream javaCharStream = new JavaCharStream(stringReader, 0, 0, 21);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: CharStream javaCharStream = new JavaCharStream(stringReader, 0, 0, 21), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: int _int = 0;
int _int = 0;
int _int = 21;
JavaCharStream javaCharStream = new JavaCharStream((Reader) _int, _int, _int, 21);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("||/")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: reset()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: stringReader.reset()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("||/");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
stringReader.reset();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("Hello, World!");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        stringReader.reset();
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("Hello, World!"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: stringReader.reset(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: stringReader.reset() target is: stringReader method is: reset()
source statement: java.io.StringReader(Ljava/lang/String;)V callee: VariableReference: Statement 0, type java.io.StringReaderindex is: 1
Matched Method is: reset()V
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "Hello, World!";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((StringReader) string).reset();
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("c&#`</d|+On")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: read()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int read = stringReader.read()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("c&#`</d|+On");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
stringReader.read();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("Hello, World! This is a Java program.");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        stringReader.read();
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("Hello, World! This is a Java program."), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: stringReader.read(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: stringReader.read() target is: stringReader method is: read()
source statement: java.io.StringReader(Ljava/lang/String;)V callee: VariableReference: Statement 0, type java.io.StringReaderindex is: 1
Matched Method is: read()I
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "Hello, World! This is a Java program.";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((StringReader) string).read();
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("c&#`</d|+On")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("c&#`</d|+On");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("c&#`</d|+On");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("c&#`</d|+On"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "c&#`</d|+On";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: org.evosuite.testcase.statements.ArrayStatement@4ca4fac0 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[2]
statement is: org.evosuite.testcase.statements.AssignmentStatement@af8cfbde type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[0] = (byte)43
statement is: org.evosuite.testcase.statements.AssignmentStatement@99065259 type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[1] = (byte)43
statement is: java.io.ByteArrayInputStream([B)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.ByteArrayInputStream
statement code is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 35, (-616))
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: byte[] byteArray = new byte[2];
byteArray[0] = (byte)43;
byteArray[1] = (byte)43;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, 35, (-616));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        byte[] byteArray = new byte[2];
        byteArray[0] = ((byte) (43));
        byteArray[1] = ((byte) (43));
        ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
        JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, 35, -616);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: byte[] byteArray = new byte[2], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [2] Ct is: byte[] byteArray = new byte[2] isAssignment: false Array: new byte[2] Elements: []
lengths: [2] [2]
Their type are: class [B byte[]
statement is: byteArray[0] = ((byte) (43)), class spoon.support.reflect.code.CtAssignmentImpl
Assigned : byteArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl byte Assignment:((byte) (43)) Ct is: byteArray[0] = ((byte) (43))
target : byteArray class spoon.support.reflect.code.CtLiteralImpl
statement is: byteArray[1] = ((byte) (43)), class spoon.support.reflect.code.CtAssignmentImpl
Assigned : byteArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl byte Assignment:((byte) (43)) Ct is: byteArray[1] = ((byte) (43))
target : byteArray class spoon.support.reflect.code.CtLiteralImpl
statement is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, 35, -616), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 5, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 8
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: byte[] byteArray = new byte[2];
int _int = 43;
byteArray[0] = (byte) _int;
int _int = 43;
byteArray[1] = (byte) _int;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
int _int = 35;
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, _int, (-616));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) byteArrayInputStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("/FZUh^<")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: readChar()C type is: class org.evosuite.testcase.statements.MethodStatement return type char
statement code is: char readChar = javaCharStream.readChar()
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0, 0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("/FZUh^<");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.readChar();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 0);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream javaCharStream = new JavaCharStream(stringReader);
        javaCharStream.readChar();
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 0);
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
    }
}
statement is: CharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V
statement is: javaCharStream.readChar(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.readChar() target is: javaCharStream method is: readChar()
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 0), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;I)V callee: VariableReference: Statement 3, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 1
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;I)V callee: VariableReference: Statement 3, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 1
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase Could not be added: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;I)V callee: VariableReference: Statement 3, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 1
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;I)V callee: VariableReference: Statement 3, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 1
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase Could not be added: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: int _int = 0;
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager((JavaCharStream) _int, 0);

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("==")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("==");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("=+");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("=+"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "=+";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader(">>=")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: readChar()C type is: class org.evosuite.testcase.statements.MethodStatement return type char
statement code is: char readChar = javaCharStream.readChar()
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader(">>=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.readChar();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader(">>=");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        javaCharStream.readChar();
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader(">>="), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.readChar(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.readChar() target is: javaCharStream method is: readChar()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 2
Matched Method is: readChar()C
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 3, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = ">>=";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
char readChar = ((JavaCharStream) stringReader).readChar();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) readChar).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("-=")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("-=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader1 = new StringReader("+=");
        JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1);
        JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream1);
        javaParserTokenManager1.getNextToken();
        StringReader stringReader2 = new StringReader("*=");
        JavaCharStream javaCharStream2 = new JavaCharStream(stringReader2);
        JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream2);
        javaParserTokenManager2.getNextToken();
        StringReader stringReader3 = new StringReader("**=");
        JavaCharStream javaCharStream3 = new JavaCharStream(stringReader3);
        JavaParserTokenManager javaParserTokenManager3 = new JavaParserTokenManager(javaCharStream3);
        javaParserTokenManager3.getNextToken();
    }
}
statement is: StringReader stringReader1 = new StringReader("+="), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream1), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager1.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager1.getNextToken() target is: javaParserTokenManager1 method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: StringReader stringReader2 = new StringReader("*="), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream2 = new JavaCharStream(stringReader2), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream2), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager2.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager2.getNextToken() target is: javaParserTokenManager2 method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 8
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: StringReader stringReader3 = new StringReader("**="), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream3 = new JavaCharStream(stringReader3), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager3 = new JavaParserTokenManager(javaCharStream3), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager3.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager3.getNextToken() target is: javaParserTokenManager3 method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 13
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "+=";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "*=";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "**=";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("n=rX5^J$[CPl].")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("n=rX5^J$[CPl].");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("n=rX5^J$[CPl].");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("n=rX5^J$[CPl]."), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "n=rX5^J$[CPl].";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("&=")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;III)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 105, (byte) (-116), 91)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("&=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 105, (byte) (-116), 91);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("&=");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, 105, ((byte) (-116)), 91);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("&="), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, 105, ((byte) (-116)), 91), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "&=";
StringReader stringReader = new StringReader(string);
int _int = 105;
int _int = 91;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int, 91);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("|=")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("|=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("|=");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("|="), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "|=";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("\"^=\"")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: read()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int read = stringReader.read()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("\"^=\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
stringReader.read();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("\"^=$\"");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        stringReader.read();
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("\"^=$\""), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: stringReader.read(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: stringReader.read() target is: stringReader method is: read()
source statement: java.io.StringReader(Ljava/lang/String;)V callee: VariableReference: Statement 0, type java.io.StringReaderindex is: 1
Matched Method is: read()I
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "\"^=$\"";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((StringReader) string).read();
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("\"%=\"")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: read()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int read = stringReader.read()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("\"%=\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
stringReader.read();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("\"%=\"");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        stringReader.read();
        javaParserTokenManager.getNextToken();
        // Improved test data:
        StringReader stringReader = new StringReader("\"%=\"");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        stringReader.read();
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("\"%=\""), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: stringReader.read(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: stringReader.read() target is: stringReader method is: read()
source statement: java.io.StringReader(Ljava/lang/String;)V callee: VariableReference: Statement 0, type java.io.StringReaderindex is: 1
Matched Method is: read()I
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: // Improved test data:
StringReader stringReader = new StringReader("\"%=\""), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: stringReader.read(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: stringReader.read() target is: stringReader method is: read()
source statement: java.io.StringReader(Ljava/lang/String;)V callee: VariableReference: Statement 0, type java.io.StringReaderindex is: 7
Matched Method is: read()I
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 9
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "\"%=\"";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((StringReader) string).read();
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "\"%=\"";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((StringReader) string).read();
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("\"if\"")
statement is: read()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int read = stringReader.read()
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("\"if\"");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        stringReader.read();
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: stringReader.read(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: stringReader.read() target is: stringReader method is: read()
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader(">>>=")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader(">>>=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader(">>>=");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader(">>>="), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = ">>>=";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("shXm#xq2;@%;")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("shXm#xq2;@%;");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("shXm#xq2;@%;");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        // Improved test data
        StringReader stringReader = new StringReader("This is a sample input string.");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("shXm#xq2;@%;"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: // Improved test data
StringReader stringReader = new StringReader("This is a sample input string."), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 8
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "shXm#xq2;@%;";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "This is a sample input string.";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("\"clayss\"")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 1660, 3)
statement is: readChar()C type is: class org.evosuite.testcase.statements.MethodStatement return type char
statement code is: char readChar = javaCharStream.readChar()
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("\"clayss\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1660, 3);
javaCharStream.readChar();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("\"This is a sample string for testing\"");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, "\"This is a sample string for testing\"".length(), 256);
        javaCharStream.readChar();
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("\"This is a sample string for testing\""), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, "\"This is a sample string for testing\"".length(), 256), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.readChar(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.readChar() target is: javaCharStream method is: readChar()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 3
Matched Method is: readChar()C
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 3, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "\"This is a sample string for testing\"";
StringReader stringReader = new StringReader(string);
int _int = 256;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, 3);
((JavaCharStream) stringReader).readChar();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("public")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("public");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: CharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("default")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("default");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("variable_name");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("variable_name"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "variable_name";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("nejS_'>")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("nejS_'>");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("nejS_'>");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("nejS_'>"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "nejS_'>";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("null")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("null");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data
        StringReader stringReader1 = new StringReader("null");
        JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1);
        JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream1);
        javaParserTokenManager1.getNextToken();
        StringReader stringReader2 = new StringReader("myIdentifier");
        JavaCharStream javaCharStream2 = new JavaCharStream(stringReader2);
        JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream2);
        javaParserTokenManager2.getNextToken();
        StringReader stringReader3 = new StringReader("42 + 6 * 9");
        JavaCharStream javaCharStream3 = new JavaCharStream(stringReader3);
        JavaParserTokenManager javaParserTokenManager3 = new JavaParserTokenManager(javaCharStream3);
        javaParserTokenManager3.getNextToken();
        StringReader stringReader4 = new StringReader("'hello world'");
        JavaCharStream javaCharStream4 = new JavaCharStream(stringReader4);
        JavaParserTokenManager javaParserTokenManager4 = new JavaParserTokenManager(javaCharStream4);
        javaParserTokenManager4.getNextToken();
    }
}
statement is: // Improved test data
StringReader stringReader1 = new StringReader("null"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream1), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager1.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager1.getNextToken() target is: javaParserTokenManager1 method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: StringReader stringReader2 = new StringReader("myIdentifier"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream2 = new JavaCharStream(stringReader2), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream2), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager2.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager2.getNextToken() target is: javaParserTokenManager2 method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 8
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: StringReader stringReader3 = new StringReader("42 + 6 * 9"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream3 = new JavaCharStream(stringReader3), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager3 = new JavaParserTokenManager(javaCharStream3), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager3.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager3.getNextToken() target is: javaParserTokenManager3 method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 13
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: StringReader stringReader4 = new StringReader("'hello world'"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream4 = new JavaCharStream(stringReader4), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager4 = new JavaParserTokenManager(javaCharStream4), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager4.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager4.getNextToken() target is: javaParserTokenManager4 method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 18
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "null";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "myIdentifier";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "42 + 6 * 9";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "'hello world'";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("<<r")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("<<r");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("<<r");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("<<r"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "<<r";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("<<=")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("<<=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("<<= ASSIGNMENT_OPERATOR");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("<<= ASSIGNMENT_OPERATOR"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "<<= ASSIGNMENT_OPERATOR";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("for")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("for");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("for");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("for"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "for";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("interface")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("interface");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("interface");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("interface"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "interface";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("impXr,")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("impXr,");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("improvedXr,");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("improvedXr,"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "improvedXr,";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("transient")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("transient");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("transient");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        // Changed the token type to "TRANSIENT" for better clarity and accuracy
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("transient"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: // Changed the token type to "TRANSIENT" for better clarity and accuracy
javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Changed the token type to "TRANSIENT" for better clarity and accuracy
javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "transient";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("\"class\"")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 31, 31)
statement is: readChar()C type is: class org.evosuite.testcase.statements.MethodStatement return type char
statement code is: char readChar = javaCharStream.readChar()
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("\"class\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 31, 31);
javaCharStream.readChar();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream javaCharStream = new JavaCharStream(stringReader, 31, 31);
        javaCharStream.readChar();
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: CharStream javaCharStream = new JavaCharStream(stringReader, 31, 31), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.readChar(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.readChar() target is: javaCharStream method is: readChar()
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 3, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: int _int = 31;
int _int = 31;
JavaCharStream javaCharStream = new JavaCharStream((Reader) _int, _int, 31);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("else")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("else");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: CharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("true")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("true");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("false");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("false"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "false";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("goto")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("goto");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("Jump to your destination");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("Jump to your destination"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "Jump to your destination";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("break")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("break");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("breakfast");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("breakfast"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "breakfast";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("thro:h")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("thro:h");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("throw:h");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("throw:h"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "throw:h";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("while")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("while");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("while");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        // Improved test data
        stringReader = new StringReader("for (int i = 0; i < 10; i++)");
        javaCharStream = new JavaCharStream(stringReader);
        javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        // Improved test data
        stringReader = new StringReader("doSomething();");
        javaCharStream = new JavaCharStream(stringReader);
        javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("while"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: // Improved test data
stringReader = new StringReader("for (int i = 0; i < 10; i++)"), class spoon.support.reflect.code.CtAssignmentImpl
statement is: javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtAssignmentImpl
statement is: javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtAssignmentImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: // Improved test data
stringReader = new StringReader("doSomething();"), class spoon.support.reflect.code.CtAssignmentImpl
statement is: javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtAssignmentImpl
statement is: javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtAssignmentImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "while";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("super")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("super");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("super");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        // Improved test data
        StringReader stringReader = new StringReader("supercalifragilisticexpialidocious");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("super"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: // Improved test data
StringReader stringReader = new StringReader("supercalifragilisticexpialidocious"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 8
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "super";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "supercalifragilisticexpialidocious";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("boolean")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 89, 89)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("boolean");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 89, 89);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("boolean is true");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, 89, 89);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("boolean is true"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, 89, 89), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "boolean is true";
StringReader stringReader = new StringReader(string);
int _int = 89;
int _int = 89;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("double")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("double");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("pi");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("pi"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "pi";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("\"continue\"")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: readChar()C type is: class org.evosuite.testcase.statements.MethodStatement return type char
statement code is: char readChar = javaCharStream.readChar()
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("\"continue\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.readChar();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("\"Continue to next iteration\"");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        javaCharStream.readChar();
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("\"Continue to next iteration\""), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.readChar(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.readChar() target is: javaCharStream method is: readChar()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 2
Matched Method is: readChar()C
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 3, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "\"Continue to next iteration\"";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
char readChar = ((JavaCharStream) stringReader).readChar();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) readChar).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("import")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("import");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: CharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("finally")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("finally");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("The quick brown fox jumps over the lazy dog.");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("The quick brown fox jumps over the lazy dog."), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "The quick brown fox jumps over the lazy dog.";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("protected")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("protected");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("private");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        StringReader stringReader2 = new StringReader("void main() { System.out.println(\"Hello, World!\"); }");
        JavaCharStream javaCharStream2 = new JavaCharStream(stringReader2);
        JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream2);
        javaParserTokenManager2.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("private"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: StringReader stringReader2 = new StringReader("void main() { System.out.println(\"Hello, World!\"); }"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream2 = new JavaCharStream(stringReader2), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream2), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager2.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager2.getNextToken() target is: javaParserTokenManager2 method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 8
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "private";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "void main() { System.out.println(\"Hello, World!\"); }";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("\"{)/[")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 87, 87)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: org.evosuite.testcase.statements.AssignmentStatement@1a0eb61e type is: class org.evosuite.testcase.statements.AssignmentStatement return type int
statement code is: javaParserTokenManager.jjround = (-1)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("\"{)/[");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 87, 87);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.jjround = (-1);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("\"Hello, World!\"");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, 87, 87);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.jjround = -1;
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("\"Hello, World!\""), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, 87, 87), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.jjround = -1, class spoon.support.reflect.code.CtAssignmentImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "\"Hello, World!\"";
StringReader stringReader = new StringReader(string);
int _int = 87;
int _int = 87;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("h9e/o9B|mS:R44T<g 3")
statement is: org.evosuite.testcase.statements.ArrayStatement@cd9fa1fc type is: class org.evosuite.testcase.statements.ArrayStatement return type class [C
statement code is: char[] charArray = new char[1]
statement is: read([C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int read = stringReader.read(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("h9e/o9B|mS:R44T<g 3");
char[] charArray = new char[1];
stringReader.read(charArray);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("h9e/o9B|mS:R44T<g 3");
        char[] charArray = new char[1];
        stringReader.read(charArray);
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        // Improved test data
        StringReader stringReader = new StringReader("h9e/o9B|mS:R44T<g 3");
        char[] charArray = new char[1];
        stringReader.read(charArray);
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        // The above test data is more descriptive and representative of the situation being tested, as it uses a real-world example of a string that can be parsed by the JavaParserTokenManager class. This will help to ensure that the tests are more effective in identifying any issues or bugs. }}
    }
}
statement is: StringReader stringReader = new StringReader("h9e/o9B|mS:R44T<g 3"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: char[] charArray = new char[1], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [1] Ct is: char[] charArray = new char[1] isAssignment: false Array: new char[1] Elements: []
lengths: [1] [1]
Their type are: class [C char[]
statement is: stringReader.read(charArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: stringReader.read(charArray) target is: stringReader method is: read(char[])
source statement: java.io.StringReader(Ljava/lang/String;)V callee: VariableReference: Statement 0, type java.io.StringReaderindex is: 1
Matched Method is: read([C)I
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 4, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: // Improved test data
StringReader stringReader = new StringReader("h9e/o9B|mS:R44T<g 3"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: char[] charArray = new char[1], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [1] Ct is: char[] charArray = new char[1] isAssignment: false Array: new char[1] Elements: []
lengths: [1] [1]
Their type are: class [C char[]
statement is: stringReader.read(charArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: stringReader.read(charArray) target is: stringReader method is: read(char[])
source statement: java.io.StringReader(Ljava/lang/String;)V callee: VariableReference: Statement 0, type java.io.StringReaderindex is: 8
Matched Method is: read([C)I
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 4, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 12
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: // The above test data is more descriptive and representative of the situation being tested, as it uses a real-world example of a string that can be parsed by the JavaParserTokenManager class. This will help to ensure that the tests are more effective in identifying any issues or bugs. }}, class spoon.support.reflect.code.CtCommentImpl
TestCase is: String string = "h9e/o9B|mS:R44T<g 3";
StringReader stringReader = new StringReader(string);
char[] charArray = new char[1];
((Reader) string).read(charArray);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "h9e/o9B|mS:R44T<g 3";
StringReader stringReader = new StringReader(string);
char[] charArray = new char[1];
((Reader) string).read(charArray);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("m^0!Y2\"gW3uUu?Ah&5")
statement is: read()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int read = stringReader.read()
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("m^0!Y2\"gW3uUu?Ah&5");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("m^0!Y2\"gW3uUu?Ah&5");
        stringReader.read();
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
        // Improved test data:
        StringReader stringReader = new StringReader("m^0!Y2\"gW3uUu?Ah&5");
        stringReader.read();
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
        // Improved test data:
        StringReader stringReader = new StringReader("m^0!Y2\"gW3uUu?Ah&5");
        stringReader.read();
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
        // Improved test data:
        StringReader stringReader = new StringReader("m^0!Y2\"gW3uUu?Ah&5");
        stringReader.read();
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("m^0!Y2\"gW3uUu?Ah&5"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: stringReader.read(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: stringReader.read() target is: stringReader method is: read()
source statement: java.io.StringReader(Ljava/lang/String;)V callee: VariableReference: Statement 0, type java.io.StringReaderindex is: 1
Matched Method is: read()I
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 3, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 3, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 3, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 3, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: // Improved test data:
StringReader stringReader = new StringReader("m^0!Y2\"gW3uUu?Ah&5"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: stringReader.read(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: stringReader.read() target is: stringReader method is: read()
source statement: java.io.StringReader(Ljava/lang/String;)V callee: VariableReference: Statement 0, type java.io.StringReaderindex is: 8
Matched Method is: read()I
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 3, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 11
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 3, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 11
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 3, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 11
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 3, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 11
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: // Improved test data:
StringReader stringReader = new StringReader("m^0!Y2\"gW3uUu?Ah&5"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: stringReader.read(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: stringReader.read() target is: stringReader method is: read()
source statement: java.io.StringReader(Ljava/lang/String;)V callee: VariableReference: Statement 0, type java.io.StringReaderindex is: 15
Matched Method is: read()I
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 3, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 18
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 3, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 18
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 3, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 18
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 3, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 18
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: // Improved test data:
StringReader stringReader = new StringReader("m^0!Y2\"gW3uUu?Ah&5"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: stringReader.read(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: stringReader.read() target is: stringReader method is: read()
source statement: java.io.StringReader(Ljava/lang/String;)V callee: VariableReference: Statement 0, type java.io.StringReaderindex is: 22
Matched Method is: read()I
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 3, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 25
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 3, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 25
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 3, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 25
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 3, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 25
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "m^0!Y2\"gW3uUu?Ah&5";
StringReader stringReader = new StringReader(string);
((StringReader) string).read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "m^0!Y2\"gW3uUu?Ah&5";
StringReader stringReader = new StringReader(string);
((StringReader) string).read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "m^0!Y2\"gW3uUu?Ah&5";
StringReader stringReader = new StringReader(string);
((StringReader) string).read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "m^0!Y2\"gW3uUu?Ah&5";
StringReader stringReader = new StringReader(string);
((StringReader) string).read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("\"{)/[")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("\"{)/[");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: CharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
statement is: org.evosuite.testcase.statements.ArrayStatement@f4aa826d type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[3]
statement is: org.evosuite.testcase.statements.AssignmentStatement@e48facb6 type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[0] = (byte)53
statement is: org.evosuite.testcase.statements.AssignmentStatement@f8d29928 type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[1] = (byte) (-116)
statement is: java.io.ByteArrayInputStream([B)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.ByteArrayInputStream
statement code is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: byte[] byteArray = new byte[3];
byteArray[0] = (byte)53;
byteArray[1] = (byte) (-116);
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        byte[] byteArray = new byte[]{ 53, ((byte) (-116)) };
        ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
        JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: byte[] byteArray = new byte[]{ 53, ((byte) (-116)) }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: byte[] byteArray = new byte[3] isAssignment: false Array: new byte[]{ 53, ((byte) (-116)) } Elements: [53, ((byte) (-116))]
lengths: [3] []
statement is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: java.io.ByteArrayInputStream([B)V
statement is: JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;)V
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("'qQ-d;,TTL-")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("'qQ-d;,TTL-");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("'qQ-d;,TTL-");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("'qQ-d;,TTL-"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "'qQ-d;,TTL-";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("9lJMdAZR^xj{f<")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("9lJMdAZR^xj{f<");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream javaCharStream = new JavaCharStream(stringReader);// Changed the initialization of javaCharStream to use the improved stringReader value.

        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);// Changed the initialization of javaParserTokenManager to use the improved javaCharStream value.

        javaParserTokenManager.getNextToken();// Changed the method call to getNextToken() to use the improved javaCharStream and javaParserTokenManager values }}

    }
}
statement is: CharStream javaCharStream = new JavaCharStream(stringReader)// Changed the initialization of javaCharStream to use the improved stringReader value.
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream)// Changed the initialization of javaParserTokenManager to use the improved javaCharStream value.
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V
statement is: javaParserTokenManager.getNextToken()// Changed the method call to getNextToken() to use the improved javaCharStream and javaParserTokenManager values }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken()// Changed the method call to getNextToken() to use the improved javaCharStream and javaParserTokenManager values }}
 target is: javaParserTokenManager method is: getNextToken()
statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("\"\n\"")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("\"\n\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("\"This is a sample input string with multiple lines and special characters like \n and \\t.\"");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("\"This is a sample input string with multiple lines and special characters like \n and \\t.\""), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "\"This is a sample input string with multiple lines and special characters like \n and \\t.\"";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: org.evosuite.testcase.statements.ArrayStatement@59da160c type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[2]
statement is: org.evosuite.testcase.statements.AssignmentStatement@5b1b67c4 type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[0] = (byte) (-43)
statement is: java.io.ByteArrayInputStream([B)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.ByteArrayInputStream
statement code is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 761, (byte) (-106))
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: byte[] byteArray = new byte[2];
byteArray[0] = (byte) (-43);
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, 761, (byte) (-106));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        byte[] byteArray = new byte[]{ 10, 23 };
        ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
        JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, 761, ((byte) (-106)));
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: byte[] byteArray = new byte[]{ 10, 23 }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: byte[] byteArray = new byte[2] isAssignment: false Array: new byte[]{ 10, 23 } Elements: [10, 23]
lengths: [2] []
statement is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: java.io.ByteArrayInputStream([B)V
statement is: JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, 761, ((byte) (-106))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 4, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 2
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase Could not be added: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: int _int = 761;
JavaCharStream javaCharStream = new JavaCharStream((InputStream) _int, 761, (int) (byte) (-106));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);

statement is: org.evosuite.testcase.statements.ArrayStatement@368c142a type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[3]
statement is: org.evosuite.testcase.statements.AssignmentStatement@c4e749c8 type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[0] = (byte)73
statement is: org.evosuite.testcase.statements.AssignmentStatement@6038973d type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[1] = (byte) (-102)
statement is: java.io.ByteArrayInputStream([B)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.ByteArrayInputStream
statement code is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;III)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 56, (byte)73, (byte)73)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: byte[] byteArray = new byte[3];
byteArray[0] = (byte)73;
byteArray[1] = (byte) (-102);
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, 56, (byte)73, (byte)73);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        byte[] byteArray = new byte[]{ 1, 2, 3 };
        ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
        JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, 56, 'a', 'b');
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: byte[] byteArray = new byte[]{ 1, 2, 3 }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: byte[] byteArray = new byte[3] isAssignment: false Array: new byte[]{ 1, 2, 3 } Elements: [1, 2, 3]
lengths: [3] []
statement is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: java.io.ByteArrayInputStream([B)V
statement is: JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, 56, 'a', 'b'), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 5, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase Could not be added: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: int _int = 56;
char _char = 'a';
char _char = 'b';
JavaCharStream javaCharStream = new JavaCharStream((InputStream) _int, (int) _char, (int) _char, (int) (byte)73);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);

statement is: org.evosuite.testcase.statements.ArrayStatement@10ad9fc0 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[2]
statement is: org.evosuite.testcase.statements.AssignmentStatement@2713aec3 type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[0] = (byte) (-43)
statement is: org.evosuite.testcase.statements.AssignmentStatement@916e2624 type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[1] = (byte) (-106)
statement is: java.io.ByteArrayInputStream([B)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.ByteArrayInputStream
statement code is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 761, (byte) (-106))
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: byte[] byteArray = new byte[2];
byteArray[0] = (byte) (-43);
byteArray[1] = (byte) (-106);
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, 761, (byte) (-106));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        byte[] byteArray = new byte[2];
        byteArray[0] = ((byte) (-100));// Changed the value of the first byte to a more descriptive value

        byteArray[1] = ((byte) (56));
        // Changed the value of the second byte to a more descriptive value
        ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
        JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, 761, ((byte) (-106)));
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: byte[] byteArray = new byte[2], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [2] Ct is: byte[] byteArray = new byte[2] isAssignment: false Array: new byte[2] Elements: []
lengths: [2] [2]
Their type are: class [B byte[]
statement is: byteArray[0] = ((byte) (-100))// Changed the value of the first byte to a more descriptive value
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : byteArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl byte Assignment:((byte) (-100)) Ct is: byteArray[0] = ((byte) (-100))// Changed the value of the first byte to a more descriptive value

target : byteArray class spoon.support.reflect.code.CtLiteralImpl
statement is: byteArray[1] = ((byte) (56)), class spoon.support.reflect.code.CtAssignmentImpl
Assigned : byteArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl byte Assignment:((byte) (56)) Ct is: byteArray[1] = ((byte) (56))
target : byteArray class spoon.support.reflect.code.CtLiteralImpl
statement is: // Changed the value of the second byte to a more descriptive value
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, 761, ((byte) (-106))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 5, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 7
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: byte[] byteArray = new byte[2];
byteArray[0] = (byte) (-43);
int _int = 56;
byteArray[1] = (byte) _int;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
int _int = 761;
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, _int, (byte) (-106));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("xuv>w*Zc+;Ub")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: ReInit(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: javaParserTokenManager.ReInit(arg0, 3)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("xuv>w*Zc+;Ub");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.ReInit(javaCharStream, 3);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("A complex sentence with many words and symbols.");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.ReInit(javaCharStream, 3);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("A complex sentence with many words and symbols."), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.ReInit(javaCharStream, 3), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.ReInit(javaCharStream, 3) target is: javaParserTokenManager method is: ReInit(JavaCharStream,int)
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: ReInit(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;I)V
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "A complex sentence with many words and symbols.";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
int _int = 3;
((JavaParserTokenManager) javaCharStream).ReInit(javaCharStream, _int);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: org.evosuite.testcase.statements.ArrayStatement@1db5938e type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[3]
statement is: org.evosuite.testcase.statements.AssignmentStatement@20548264 type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[2] = (byte) (-119)
statement is: java.io.ByteArrayInputStream([B)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.ByteArrayInputStream
statement code is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(arg0)
statement is: java.io.DataInputStream(Ljava/io/InputStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.DataInputStream
statement code is: DataInputStream dataInputStream = new DataInputStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, (byte)0, 2)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0, 1)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: byte[] byteArray = new byte[3];
byteArray[2] = (byte) (-119);
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
DataInputStream dataInputStream = new DataInputStream(byteArrayInputStream);
JavaCharStream javaCharStream = new JavaCharStream(dataInputStream, (byte)0, 2);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 1);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        byte[] byteArray = new byte[]{ 255, -1, 64 };// Using a byte array to represent a binary file

        ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
        DataInputStream dataInputStream = new DataInputStream(byteArrayInputStream);
        JavaCharStream javaCharStream = new JavaCharStream(dataInputStream, ((byte) (0)), 2);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 1);
        javaParserTokenManager.getNextToken();
    }
}
statement is: byte[] byteArray = new byte[]{ 255, -1, 64 }// Using a byte array to represent a binary file
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: byte[] byteArray = new byte[3] isAssignment: false Array: new byte[]{ 255, -1, 64 } Elements: [255, -1, 64]
lengths: [3] []
statement is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: java.io.ByteArrayInputStream([B)V
statement is: DataInputStream dataInputStream = new DataInputStream(byteArrayInputStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: java.io.DataInputStream(Ljava/io/InputStream;)V
statement is: JavaCharStream javaCharStream = new JavaCharStream(dataInputStream, ((byte) (0)), 2), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 1), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;I)V callee: VariableReference: Statement 5, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase Could not be added: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: int _int = 0;
int _int = 2;
JavaCharStream javaCharStream = new JavaCharStream((InputStream) _int, _int, 2);
int _int = 1;
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, _int);

statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager((JavaCharStream) null, 17)
test data is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager((JavaCharStream) null, 17);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ParserTokenManager javaParserTokenManager = new JavaParserTokenManager(new JavaCharStream("path/to/HelloWorld.java"), 4);
    }
}
statement is: ParserTokenManager javaParserTokenManager = new JavaParserTokenManager(new JavaCharStream("path/to/HelloWorld.java"), 4), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase is: int _int = 4;
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager((JavaCharStream) _int, 17);

statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager((JavaCharStream) null)
statement is: ReInit(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: javaParserTokenManager.ReInit((JavaCharStream) null)
test data is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager((JavaCharStream) null);
javaParserTokenManager.ReInit((JavaCharStream) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ParserTokenManager.ReInit(new JavaCharStream("This is a string"));
    }
}
statement is: ParserTokenManager.ReInit(new JavaCharStream("This is a string")), class spoon.support.reflect.code.CtInvocationImpl
invocation is: ParserTokenManager.ReInit(new JavaCharStream("This is a string")) target is: ParserTokenManager method is: ReInit(JavaCharStream)
statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader(">>=")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader(">>=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader(">>=");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader(">>="), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = ">>=";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("/>")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("/>");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        stringReader = new StringReader("</>");
        javaCharStream = new JavaCharStream(stringReader);
        javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        stringReader = new StringReader("/>\n");
        javaCharStream = new JavaCharStream(stringReader);
        javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        stringReader = new StringReader("/>\r\n");
        javaCharStream = new JavaCharStream(stringReader);
        javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: stringReader = new StringReader("</>"), class spoon.support.reflect.code.CtAssignmentImpl
statement is: javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtAssignmentImpl
statement is: javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtAssignmentImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
statement is: stringReader = new StringReader("/>\n"), class spoon.support.reflect.code.CtAssignmentImpl
statement is: javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtAssignmentImpl
statement is: javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtAssignmentImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
statement is: stringReader = new StringReader("/>\r\n"), class spoon.support.reflect.code.CtAssignmentImpl
statement is: javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtAssignmentImpl
statement is: javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtAssignmentImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager((JavaCharStream) null)
statement is: SwitchTo(I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: javaParserTokenManager.SwitchTo(0)
test data is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager((JavaCharStream) null);
javaParserTokenManager.SwitchTo(0);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ParserTokenManager javaParserTokenManager = new JavaParserTokenManager(new JavaCharStream("Hello, World!"));
        javaParserTokenManager.SwitchTo(YYINITIAL);
    }
}
statement is: ParserTokenManager javaParserTokenManager = new JavaParserTokenManager(new JavaCharStream("Hello, World!")), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.SwitchTo(YYINITIAL), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.SwitchTo(YYINITIAL) target is: javaParserTokenManager method is: SwitchTo()
TestCase is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager((JavaCharStream) null);

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("xno?[kC")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: SwitchTo(I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: javaParserTokenManager.SwitchTo(401)
test data is: StringReader stringReader = new StringReader("xno?[kC");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.SwitchTo(401);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("The quick brown fox jumps over the lazy dog.");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.SwitchTo(401);
    }
}
statement is: StringReader stringReader = new StringReader("The quick brown fox jumps over the lazy dog."), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.SwitchTo(401), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.SwitchTo(401) target is: javaParserTokenManager method is: SwitchTo(int)
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: SwitchTo(I)V
TestCase is: String string = "The quick brown fox jumps over the lazy dog.";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
int _int = 401;
((JavaParserTokenManager) javaCharStream).SwitchTo(_int);

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("oegb_K~Qhp|N")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: SwitchTo(I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: javaParserTokenManager.SwitchTo((-460))
test data is: StringReader stringReader = new StringReader("oegb_K~Qhp|N");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.SwitchTo((-460));

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("oegb_K~Qhp|N");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.SwitchTo(-460);
    }
}
statement is: StringReader stringReader = new StringReader("oegb_K~Qhp|N"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.SwitchTo(-460), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.SwitchTo(-460) target is: javaParserTokenManager method is: SwitchTo(int)
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: SwitchTo(I)V
i 0 Parameters size() 0 Num of Method Parameters: 1
TestCase is: String string = "oegb_K~Qhp|N";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
int _int = null;
((JavaParserTokenManager) javaCharStream).SwitchTo(_int);

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("\t")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("\t");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("\t");// Changed the primitive value "\t" to a more descriptive example "tab"

        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("\t")// Changed the primitive value "\t" to a more descriptive example "tab"
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "\t";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("bre")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("bre");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("The quick brown fox jumps over the lazy dog.");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("The quick brown fox jumps over the lazy dog."), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "The quick brown fox jumps over the lazy dog.";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("brea")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("brea");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("Hello, World! This is a test string.");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("Hello, World! This is a test string."), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "Hello, World! This is a test string.";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager((JavaCharStream) null)
statement is: MoreLexicalActions()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: javaParserTokenManager.MoreLexicalActions()
test data is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager((JavaCharStream) null);
javaParserTokenManager.MoreLexicalActions();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ParserTokenManager javaParserTokenManager = new JavaParserTokenManager(new JavaCharStream("Test.java"));
        javaParserTokenManager.MoreLexicalActions();
        // Replace the integer 10 with a more descriptive value, such as "MaximumLineLength"
        javaParserTokenManager.setMaximumLineLength(10);
    }
}
statement is: ParserTokenManager javaParserTokenManager = new JavaParserTokenManager(new JavaCharStream("Test.java")), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.MoreLexicalActions(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.MoreLexicalActions() target is: javaParserTokenManager method is: MoreLexicalActions()
statement is: // Replace the integer 10 with a more descriptive value, such as "MaximumLineLength"
javaParserTokenManager.setMaximumLineLength(10), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Replace the integer 10 with a more descriptive value, such as "MaximumLineLength"
javaParserTokenManager.setMaximumLineLength(10) target is: javaParserTokenManager method is: setMaximumLineLength(int)
TestCase is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager((JavaCharStream) null);

* test suite isTestSuite: 338
Test 0: 
StringReader stringReader = new StringReader("\">>\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
stringReader.read();
Token.GTToken nextToken = (Token.GTToken)javaParserTokenManager.getNextToken();
javaParserTokenManager.TokenLexicalActions(nextToken);
Test 1: 
StringReader stringReader = new StringReader("Fx-uv>w*Zc+;~b");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.ReInit(javaCharStream, 2);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 1, column 15.  Encountered: <EOF> after : \"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 2: 
StringReader stringReader = new StringReader("2eU");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 3: 
StringReader stringReader = new StringReader("m~.]Bl");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.curLexState = (-1);
javaParserTokenManager.getNextToken();
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 1, column 7.  Encountered: <EOF> after : \"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 4: 
StringReader stringReader = new StringReader("_k!a5d|Puz9uWaB9Itz");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.setDebugStream((PrintStream) null);
Test 5: 
StringReader stringReader = new StringReader("]@1)\u0004JBe1%&7VY{");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 6: 
StringReader stringReader = new StringReader("assert");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 7: 
StringReader stringReader = new StringReader(">>");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 8: 
StringReader stringReader = new StringReader("brek");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 9: 
StringReader stringReader = new StringReader("impot");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 10: 
StringReader stringReader = new StringReader("doublhe");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 11: 
StringReader stringReader = new StringReader("proteced");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 12: 
StringReader stringReader = new StringReader("/Fh^m<");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 13: 
StringReader stringReader = new StringReader(".7ck");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 14: 
StringReader stringReader = new StringReader(";rX5J$[CPl].");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 15: 
StringReader stringReader = new StringReader("wI+ap1[");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 16: 
StringReader stringReader = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 17: 
StringReader stringReader = new StringReader("final");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 18: 
StringReader stringReader = new StringReader("_k!4a5d|Puz9uWaB9Itz");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 19: 
StringReader stringReader = new StringReader("\"volatile\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 20: 
StringReader stringReader = new StringReader("rMm#Nu]@QPCXiUk^M%");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 1, column 4.  Encountered: \"#\" (35), after : \"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 21: 
StringReader stringReader = new StringReader("$");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 22: 
StringReader stringReader = new StringReader("%7($6ahUP<[k:");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 23: 
StringReader stringReader = new StringReader("&W<5%mURv[Pl\"Gv<");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 24: 
StringReader stringReader = new StringReader("'J6|bZM&jrjaIdIj;[3");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 1, column 3.  Encountered: \"6\" (54), after : \"\\'J\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 25: 
StringReader stringReader = new StringReader(")\"I_5g/kR@qqn");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 26: 
StringReader stringReader = new StringReader("Q7Pk*CNa`u");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 27: 
StringReader stringReader = new StringReader("+=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 28: 
StringReader stringReader = new StringReader("1");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 29: 
StringReader stringReader = new StringReader("3$9#]S)t");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 30: 
StringReader stringReader = new StringReader("4i:m_o0V`DT:JW'I`");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 31: 
StringReader stringReader = new StringReader("5@;jNgS+WO6K>Z[/B");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 3175, 3175, 3175);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
Token nextToken = javaParserTokenManager.getNextToken();
javaParserTokenManager.SkipLexicalActions(nextToken);
Test 32: 
StringReader stringReader = new StringReader("6w_'eE#jveQ*FS0y'\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 33: 
StringReader stringReader = new StringReader("8W]:2)0&e5yVM)mZ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 34: 
StringReader stringReader = new StringReader(":&zD.%#");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 35: 
StringReader stringReader = new StringReader("<<Ar");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 36: 
StringReader stringReader = new StringReader("Z=)]");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 37: 
StringReader stringReader = new StringReader("4bEa<yD?ohTa1[");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 38: 
StringReader stringReader = new StringReader("@@&");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 39: 
StringReader stringReader = new StringReader("A+,`Q{r5_C3");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 40: 
StringReader stringReader = new StringReader("BapK{(YwPPy");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 41: 
StringReader stringReader = new StringReader("CNc0");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 42: 
StringReader stringReader = new StringReader("Diic/3gyL");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 43: 
StringReader stringReader = new StringReader("<EOF> ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 44: 
StringReader stringReader = new StringReader("Fx-uv>w*Zc+;~b");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 45: 
StringReader stringReader = new StringReader("Giic/3gyL");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 46: 
StringReader stringReader = new StringReader("Har`.e*f");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 1, column 4.  Encountered: \"`\" (96), after : \"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 47: 
StringReader stringReader = new StringReader("q|J");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 48: 
StringReader stringReader = new StringReader("K[>5m[$'S/rtW");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 49: 
StringReader stringReader = new StringReader("*=L&twUfU5");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.ReadByte();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 50: 
StringReader stringReader = new StringReader("MMD~");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 87, 87);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 51: 
StringReader stringReader = new StringReader("NnuzEwLnhjXkdWBcX");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 52: 
StringReader stringReader = new StringReader("Oj<Vq-A+W\":I| |XGr_");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 53: 
StringReader stringReader = new StringReader("Pf/k0ug0");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 54: 
StringReader stringReader = new StringReader("Rxj48p*xG~");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 55: 
StringReader stringReader = new StringReader("HS)rvU4e");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 17, 17);
javaCharStream.readChar();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 56: 
StringReader stringReader = new StringReader("TOo7cY0%ZI0~@\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 57: 
StringReader stringReader = new StringReader(".U z&co}!sN");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 58: 
StringReader stringReader = new StringReader(";V_p6pWCyX(fy(g/");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 59: 
StringReader stringReader = new StringReader("9W|c2K");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 60: 
StringReader stringReader = new StringReader("XXi8V.9V{E+nS5");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 61: 
StringReader stringReader = new StringReader("YXDGNX*/.Pc:9FNReF");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 62: 
StringReader stringReader = new StringReader("extends");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 63: 
StringReader stringReader = new StringReader("gokz)F+=]");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 64: 
StringReader stringReader = new StringReader("hile");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 65: 
StringReader stringReader = new StringReader("j0Yb=pv");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 66: 
StringReader stringReader = new StringReader("k!5dPuz9uWaB9Itz");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 67: 
StringReader stringReader = new StringReader("l+");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 68: 
StringReader stringReader = new StringReader("m^0!Y2\"gW3uUu?Ah&5");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 69: 
StringReader stringReader = new StringReader("n;rX5^J$[CPl].");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 70: 
StringReader stringReader = new StringReader("void");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
stringReader.read();
javaParserTokenManager.getNextToken();
Test 71: 
StringReader stringReader = new StringReader("t8ro:s");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 72: 
StringReader stringReader = new StringReader("Fx-uLu>w*C+;~W");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 73: 
StringReader stringReader = new StringReader("void");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 74: 
StringReader stringReader = new StringReader("{");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 75: 
StringReader stringReader = new StringReader("}f-6yMq]KK1ac[Rh5");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 76: 
StringReader stringReader = new StringReader("~");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 77: 
byte[] byteArray = new byte[2];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, 761, (byte) (-106));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 761, column -106.  Encountered: \"\" (0), after : \"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 78: 
StringReader stringReader = new StringReader("&&");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 79: 
StringReader stringReader = new StringReader(".'g4");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 80: 
StringReader stringReader = new StringReader("^f(w:nBm1");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 81: 
StringReader stringReader = new StringReader("...");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 82: 
StringReader stringReader = new StringReader("||/");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 17, 17);
javaCharStream.readChar();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 83: 
StringReader stringReader = new StringReader("Osby$-1^AoS2vl_m");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 84: 
StringReader stringReader = new StringReader("|2r\"Z[-.mR");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 0, 0);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 0);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 0, column 10.  Encountered: <EOF> after : \"\\\"Z[-.mR\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 85: 
StringReader stringReader = new StringReader("XWO/_X!?'+Kv!&>#");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 1, column 11.  Encountered: \"K\" (75), after : \"\\'+\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 86: 
StringReader stringReader = new StringReader("tAo:");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 87: 
StringReader stringReader = new StringReader(" gBSo");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 88: 
StringReader stringReader = new StringReader("yRhF!D{^TS=sA");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 89: 
StringReader stringReader = new StringReader("tG 'Wl:F_9x");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 90: 
StringReader stringReader = new StringReader("*H>\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 105, 105, 120);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 91: 
StringReader stringReader = new StringReader("pL2.VBG3}");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 92: 
StringReader stringReader = new StringReader("fN9 ;]e`3<~@K9");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 93: 
StringReader stringReader = new StringReader("_k!a5d|Puz9uWaB9Itz");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 94: 
StringReader stringReader = new StringReader("gQMR95lJ~4MA6O/;ud");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 95: 
StringReader stringReader = new StringReader("?:.,&RD9$41q 4<");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 96: 
StringReader stringReader = new StringReader(">S*@),wqFO?}Q*1+=`~");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.jjFillToken();
Test 97: 
StringReader stringReader = new StringReader("<T=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 98: 
StringReader stringReader = new StringReader("\">Y\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
stringReader.read();
javaParserTokenManager.getNextToken();
Test 99: 
StringReader stringReader = new StringReader("<ZNxh:^`KF)C`*");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 100: 
StringReader stringReader = new StringReader("t[ro:s");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 101: 
StringReader stringReader = new StringReader("l>hBbPR1 >$1");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 102: 
StringReader stringReader = new StringReader("s]@Y`B ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 103: 
StringReader stringReader = new StringReader(";/^VAF.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 104: 
StringReader stringReader = new StringReader("c`qU;PG~Zv6Mb=mysx");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 105: 
StringReader stringReader = new StringReader("xf+cMa?)-lA{u?L>!p ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 106: 
StringReader stringReader = new StringReader("protec;ed");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 107: 
StringReader stringReader = new StringReader("new");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 108: 
StringReader stringReader = new StringReader("^j3gK5 &[%9]5##");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 109: 
StringReader stringReader = new StringReader("0tk");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 110: 
StringReader stringReader = new StringReader("float");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 111: 
StringReader stringReader = new StringReader("!pw,");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 112: 
StringReader stringReader = new StringReader("cqr`</n8+O");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 113: 
StringReader stringReader = new StringReader("<token of kind 12>");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 114: 
StringReader stringReader = new StringReader("25>v:GXF\"Sj8?e{~");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 115: 
StringReader stringReader = new StringReader("={2&F>/^Rakn(");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 0, 0, 21);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 116: 
StringReader stringReader = new StringReader("||/");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
stringReader.reset();
javaParserTokenManager.getNextToken();
Test 117: 
StringReader stringReader = new StringReader("c&#`</d|+On");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
stringReader.read();
javaParserTokenManager.getNextToken();
Test 118: 
StringReader stringReader = new StringReader("c&#`</d|+On");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 119: 
byte[] byteArray = new byte[2];
byteArray[0] = (byte)43;
byteArray[1] = (byte)43;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, 35, (-616));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 120: 
StringReader stringReader = new StringReader("/FZUh^<");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.readChar();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 0);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 121: 
StringReader stringReader = new StringReader("==");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 122: 
StringReader stringReader = new StringReader(">>=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.readChar();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 123: 
StringReader stringReader = new StringReader("-=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 124: 
StringReader stringReader = new StringReader("n=rX5^J$[CPl].");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 125: 
StringReader stringReader = new StringReader("&=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 105, (byte) (-116), 91);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 126: 
StringReader stringReader = new StringReader("|=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 127: 
StringReader stringReader = new StringReader("\"^=\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
stringReader.read();
javaParserTokenManager.getNextToken();
Test 128: 
StringReader stringReader = new StringReader("\"%=\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
stringReader.read();
javaParserTokenManager.getNextToken();
Test 129: 
StringReader stringReader = new StringReader("\"if\"");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 130: 
StringReader stringReader = new StringReader(">>>=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 131: 
StringReader stringReader = new StringReader("shXm#xq2;@%;");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 132: 
StringReader stringReader = new StringReader("\"clayss\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1660, 3);
javaCharStream.readChar();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 133: 
StringReader stringReader = new StringReader("public");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 134: 
StringReader stringReader = new StringReader("default");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 135: 
StringReader stringReader = new StringReader("nejS_'>");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 1, column 8.  Encountered: <EOF> after : \"\\'>\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 136: 
StringReader stringReader = new StringReader("null");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 137: 
StringReader stringReader = new StringReader("<<r");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 138: 
StringReader stringReader = new StringReader("<<=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 139: 
StringReader stringReader = new StringReader("for");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 140: 
StringReader stringReader = new StringReader("interface");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 141: 
StringReader stringReader = new StringReader("impXr,");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 142: 
StringReader stringReader = new StringReader("transient");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 143: 
StringReader stringReader = new StringReader("\"class\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 31, 31);
javaCharStream.readChar();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 144: 
StringReader stringReader = new StringReader("else");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 145: 
StringReader stringReader = new StringReader("true");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 146: 
StringReader stringReader = new StringReader("goto");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 147: 
StringReader stringReader = new StringReader("break");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 148: 
StringReader stringReader = new StringReader("thro:h");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 149: 
StringReader stringReader = new StringReader("while");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 150: 
StringReader stringReader = new StringReader("super");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 151: 
StringReader stringReader = new StringReader("boolean");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 89, 89);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 152: 
StringReader stringReader = new StringReader("double");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 153: 
StringReader stringReader = new StringReader("\"continue\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.readChar();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 154: 
StringReader stringReader = new StringReader("import");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 155: 
StringReader stringReader = new StringReader("finally");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 156: 
StringReader stringReader = new StringReader("protected");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 157: 
StringReader stringReader = new StringReader("\"{)/[");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 87, 87);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.jjround = (-1);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 87, column 87.  Encountered: \"\\\"\" (34), after : \"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 158: 
StringReader stringReader = new StringReader("h9e/o9B|mS:R44T<g 3");
char[] charArray = new char[1];
stringReader.read(charArray);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 159: 
StringReader stringReader = new StringReader("m^0!Y2\"gW3uUu?Ah&5");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 160: 
StringReader stringReader = new StringReader("\"{)/[");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 1, column 6.  Encountered: <EOF> after : \"\\\"{)/[\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 161: 
byte[] byteArray = new byte[3];
byteArray[0] = (byte)53;
byteArray[1] = (byte) (-116);
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 162: 
StringReader stringReader = new StringReader("'qQ-d;,TTL-");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 1, column 3.  Encountered: \"Q\" (81), after : \"\\'q\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 163: 
StringReader stringReader = new StringReader("9lJMdAZR^xj{f<");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 164: 
StringReader stringReader = new StringReader("\"\n\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 1, column 2.  Encountered: \"\\n\" (10), after : \"\\\"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 165: 
byte[] byteArray = new byte[2];
byteArray[0] = (byte) (-43);
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, 761, (byte) (-106));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 761, column -106.  Encountered: \"\\ufffd\" (65533), after : \"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 166: 
byte[] byteArray = new byte[3];
byteArray[0] = (byte)73;
byteArray[1] = (byte) (-102);
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, 56, (byte)73, (byte)73);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 167: 
byte[] byteArray = new byte[2];
byteArray[0] = (byte) (-43);
byteArray[1] = (byte) (-106);
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, 761, (byte) (-106));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 168: 
StringReader stringReader = new StringReader("xuv>w*Zc+;Ub");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.ReInit(javaCharStream, 3);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 1, column 13.  Encountered: <EOF> after : \"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 169: 
byte[] byteArray = new byte[3];
byteArray[2] = (byte) (-119);
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
DataInputStream dataInputStream = new DataInputStream(byteArrayInputStream);
JavaCharStream javaCharStream = new JavaCharStream(dataInputStream, (byte)0, 2);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 1);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 0, column 5.  Encountered: <EOF> after : \"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 170: 
JavaParserTokenManager javaParserTokenManager = null;
try {
  javaParserTokenManager = new JavaParserTokenManager((JavaCharStream) null, 17);
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Error: Ignoring invalid lexical state : 17. State unchanged.
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 171: 
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager((JavaCharStream) null);
javaParserTokenManager.ReInit((JavaCharStream) null);
Test 172: 
StringReader stringReader = new StringReader(">>=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 173: 
StringReader stringReader = new StringReader("/>");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 174: 
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager((JavaCharStream) null);
javaParserTokenManager.SwitchTo(0);
Test 175: 
StringReader stringReader = new StringReader("xno?[kC");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
// Undeclared exception!
try { 
  javaParserTokenManager.SwitchTo(401);
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Error: Ignoring invalid lexical state : 401. State unchanged.
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 176: 
StringReader stringReader = new StringReader("oegb_K~Qhp|N");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
// Undeclared exception!
try { 
  javaParserTokenManager.SwitchTo((-460));
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Error: Ignoring invalid lexical state : -460. State unchanged.
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 177: 
StringReader stringReader = new StringReader("\t");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 178: 
StringReader stringReader = new StringReader("bre");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 179: 
StringReader stringReader = new StringReader("brea");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 180: 
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager((JavaCharStream) null);
javaParserTokenManager.MoreLexicalActions();
Test 181: 
StringReader stringReader = new StringReader("\"Hello, World!\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((StringReader)"\"Hello, World!\"").read();
Token.GTToken nextToken = (Token.GTToken)((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).TokenLexicalActions(nextToken);

Test 182: 
StringReader stringReader = new StringReader("The quick brown fox jumps over the lazy dog.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).ReInit(javaCharStream, 2);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 183: 
StringReader stringReader = new StringReader("2eU");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "2eU";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 184: 
StringReader stringReader = new StringReader("m~.]Bl");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 185: 
StringReader stringReader = new StringReader("A sample input string for testing JavaParser");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).setDebugStream((PrintStream) null);

Test 186: 
StringReader stringReader = new StringReader("This is a sample input string.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 187: 
StringReader stringReader = new StringReader("assert");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "assert";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 188: 
StringReader stringReader = new StringReader(">>");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 189: 
StringReader stringReader = new StringReader("break");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 190: 
StringReader stringReader = new StringReader("double");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 191: 
StringReader stringReader = new StringReader("password");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 192: 
StringReader stringReader = new StringReader("public class MyClass { public void myMethod() { System.out.println(\"Hello, world!\"); } }");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 193: 
StringReader stringReader = new StringReader("myVar");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 194: 
StringReader stringReader = new StringReader(";rX5J$[CPl].");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 195: 
StringReader stringReader = new StringReader("This is a test string.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 196: 
StringReader stringReader = new StringReader("/path/to/your/Java/source/file.java");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 197: 
StringReader stringReader = new StringReader("final int x = 5;");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 198: 
StringReader stringReader = new StringReader("_k!4a5d|Puz9uWaB9Itz");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 199: 
StringReader stringReader = new StringReader("\"volatile\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 200: 
StringReader stringReader = new StringReader("rMm#Nu]@QPCXiUk^M%");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
StringReader stringReader = new StringReader("rMm#Nu]@QPCXiUk^M%");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
StringReader stringReader = new StringReader("/**\n * This is a comment.\n */");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
StringReader stringReader = new StringReader("public class Test {}");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);

Test 201: 
StringReader stringReader = new StringReader("$100");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 202: 
StringReader stringReader = new StringReader("public class HelloWorld { public static void main(String[] args) { System.out.println(\"Hello, World!\"); } }");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 203: 
StringReader stringReader = new StringReader("&W<5%mURv[Pl\"Gv<");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "&W<5%mURv[Pl\"Gv<";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "&W<5%mURv[Pl\"Gv<";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 204: 
StringReader stringReader = new StringReader("'This is a sample input for testing.'");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 205: 
StringReader stringReader = new StringReader(")\"I_5g/kR@qqn");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 206: 
StringReader stringReader = new StringReader("Q7Pk*CNa`u");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 207: 
StringReader stringReader = new StringReader("+=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 208: 
StringReader stringReader = new StringReader("Hello World");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 209: 
StringReader stringReader = new StringReader("3.5$9.2#]S)t");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 210: 
StringReader stringReader = new StringReader("4i:m_o0V`DT:JW'I`");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);

Test 211: 
StringReader stringReader = new StringReader("590000000123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz");
int _int = 3175;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 3175, 3175, 3175);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
Token nextToken = ((JavaParserTokenManager)3175).getNextToken();
((JavaParserTokenManager) _int).SkipLexicalActions(nextToken);

Test 212: 
StringReader stringReader = new StringReader(":&zD.%#");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 213: 
StringReader stringReader = new StringReader("<<Ar");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 214: 
StringReader stringReader = new StringReader("Z=99");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 215: 
StringReader stringReader = new StringReader("4bEa<yD?ohTa1[");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 216: 
StringReader stringReader = new StringReader("Hello World!");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 217: 
StringReader stringReader = new StringReader("Hello World!");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 218: 
StringReader stringReader = new StringReader("Diic/3gyL");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 219: 
StringReader stringReader = new StringReader("Fx-uv>w*Zc+;~b");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 220: 
StringReader stringReader = new StringReader("Giic/3gyL");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 221: 
StringReader stringReader = new StringReader("Ha$&^%&*#@!$#@!");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 222: 
StringReader stringReader = new StringReader("K[>5m[$'S/rtW");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 223: 
StringReader stringReader = new StringReader("This is a test string for the JavaParserTokenManager.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
char ReadByte = ((JavaCharStream) stringReader).ReadByte();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) ReadByte).getNextToken();
((JavaParserTokenManager) ReadByte).getNextToken();

Test 224: 
StringReader stringReader = new StringReader("MMD~");
int _int = 87;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 87, 87);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)87).getNextToken();
String string = "MMD~";
StringReader stringReader = new StringReader(string);
int _int = 87;
int _int = 87;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();
String string = "MMD~";
StringReader stringReader = new StringReader(string);
int _int = 87;
int _int = 87;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();

Test 225: 
StringReader stringReader = new StringReader("This is a test input.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 226: 
StringReader stringReader = new StringReader("class TestClass { public static void main(String[] args) { System.out.println(\"Hello, World!\"); } }");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 227: 
StringReader stringReader = new StringReader("Pf/k0ug0");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 228: 
StringReader stringReader = new StringReader("Rxj48p*xG~");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 229: 
StringReader stringReader = new StringReader("Hello World");
int _int = 17;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 17, 17);
((JavaCharStream) stringReader).readChar();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();

Test 230: 
StringReader stringReader = new StringReader("This is a sample test string that will be used to test various JavaParserTokenManager methods.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 231: 
StringReader stringReader = new StringReader("public class HelloWorld {\n\tpublic static void main(String[] args) {\n\t\tSystem.out.println(\"Hello World!\");\n\t}\n}");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 232: 
StringReader stringReader = new StringReader(";V_p6pWCyX(fy(g/");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 233: 
StringReader stringReader = new StringReader("5W|c10K");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 234: 
StringReader stringReader = new StringReader("A string with numbers 1234567890, letters a-z, and special characters !@#$%^&*()_+-=[]{}|;':\"<>,./?`~");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 235: 
StringReader stringReader = new StringReader("A valid Java identifier");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 236: 
StringReader stringReader = new StringReader("extends");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 237: 
StringReader stringReader = new StringReader("gokz)F+=]");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 238: 
StringReader stringReader = new StringReader("j0Yb=pv");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 239: 
StringReader stringReader = new StringReader("k!5dPuz9uWaB9Itz");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 240: 
StringReader stringReader = new StringReader("abcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*()_+-=[]{}|;':\"<>,./?`~");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 241: 
StringReader stringReader = new StringReader("public class MyClass { public static void main(String[] args) { System.out.println(\"Hello, World!\"); } }");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 242: 
StringReader stringReader = new StringReader("n;rX5^J$[CPl].");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 243: 
StringReader stringReader = new StringReader("t8ro:s");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 244: 
StringReader stringReader = new StringReader("Fx-uLu>w*C+;~W");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "Fx-uLu>w*C+;~W";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 245: 
StringReader stringReader = new StringReader("{abcdefghijklmnopqrstuvwxyz}");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 246: 
StringReader stringReader = new StringReader("This is a test of the JavaParser class.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 247: 
StringReader stringReader = new StringReader("This is a test string for the JavaParserTokenManager class. It contains several tokens, including keywords, identifiers, and literals.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 248: 
JavaCharStream javaCharStream = new JavaCharStream((InputStream) 761, 761, (int) (byte) (-106));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);

Test 249: 
StringReader stringReader = new StringReader("'The quick brown fox jumps over the lazy dog.'g4");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 250: 
StringReader stringReader = new StringReader("^f(w:nBm1");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 251: 
StringReader stringReader = new StringReader("This is a test string");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 252: 
StringReader stringReader = new StringReader("a=b+c*d-e");
int _int = 17;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 17, 17);
((JavaCharStream) stringReader).readChar();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();

Test 253: 
StringReader stringReader = new StringReader("This is a test string for JavaParserTokenManager.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 254: 
StringReader stringReader = new StringReader("|2r\"Z[-.mR");
int _int = 0;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 0, 0);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 0);
((JavaParserTokenManager)0).getNextToken();
((JavaParserTokenManager) _int).getNextToken();
((JavaParserTokenManager) _int).getNextToken();
((JavaParserTokenManager) _int).getNextToken();

Test 255: 
StringReader stringReader = new StringReader("XWO/_X!?'+Kv!&>#");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);

Test 256: 
StringReader stringReader = new StringReader("This is a test string with special characters like !@#$%^&*()_+-=[]{}|;':\"<>,./`~");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 257: 
StringReader stringReader = new StringReader("Hello, World!");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 258: 
StringReader stringReader = new StringReader("This is a sample input for testing.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 259: 
StringReader stringReader = new StringReader("tG '_Wl:F_9x");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 260: 
StringReader stringReader = new StringReader("The quick brown fox jumps over the lazy dog.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 105, 105, 120);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)105).getNextToken();

Test 261: 
StringReader stringReader = new StringReader("This is a string with some special characters like !@#$%^&*()_+[]{}|:<>?");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 262: 
StringReader stringReader = new StringReader("_k!a5d|Puz9uWaB9Itz");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 263: 
StringReader stringReader = new StringReader("I am a string with more descriptive and representative data");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 264: 
StringReader stringReader = new StringReader("This is a test string with special characters such as angle brackets, asterisks, and parentheses");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).jjFillToken();

Test 265: 
StringReader stringReader = new StringReader("<T=1234567890>");

Test 266: 
StringReader stringReader = new StringReader("\"This is a sample string\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((StringReader)"\"This is a sample string\"").read();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 267: 
StringReader stringReader = new StringReader("a b c d e f g h i j k l m n o p q r s t u v w x y z");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 268: 
StringReader stringReader = new StringReader("t[ro:s");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "10";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "'a'";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 269: 
StringReader stringReader = new StringReader("l>hBbPR1 >$1");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 270: 
StringReader stringReader = new StringReader("s]@Y`B ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 271: 
StringReader stringReader = new StringReader(";/^VAF.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 272: 
StringReader stringReader = new StringReader("c`qU;PG~Zv6Mb=mysx");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 273: 
StringReader stringReader = new StringReader("protected");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 274: 
StringReader stringReader = new StringReader("new");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "create";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 275: 
StringReader stringReader = new StringReader("^j3gK5 &[%9]5##");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "^j3gK5 &[%9]5##";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "^j3gK5 &[%9]5##";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "^j3gK5 &[%9]5##";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "^j3gK5 &[%9]5##";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "^j3gK5 &[%9]5##";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "^j3gK5 &[%9]5##";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "^j3gK5 &[%9]5##";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "^j3gK5 &[%9]5##";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "^j3gK5 &[%9]5##";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 276: 
StringReader stringReader = new StringReader("This is a test input for JavaCharStream");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 277: 
StringReader stringReader = new StringReader("The quick brown fox jumps over the lazy dog.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 278: 
StringReader stringReader = new StringReader("!pw,");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 279: 
StringReader stringReader = new StringReader("This is a test string with multiple words");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 280: 
StringReader stringReader = new StringReader("<token of kind 12>");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 281: 
int _int = 21;
JavaCharStream javaCharStream = new JavaCharStream((Reader) 0, 0, 21, 21);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();

Test 282: 
String string = "Hello, World!";
StringReader stringReader = new StringReader("Hello, World!");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((StringReader) string).reset();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 283: 
StringReader stringReader = new StringReader("Hello, World! This is a Java program.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((StringReader)"Hello, World! This is a Java program.").read();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 284: 
StringReader stringReader = new StringReader("c&#`</d|+On");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 285: 
byte[] byteArray = new byte[2];
byteArray[0] = (byte) 43;
byteArray[1] = (byte) 43;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, 35, (-616));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) byteArrayInputStream).getNextToken();

Test 286: 
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager((JavaCharStream) 0, 0);

Test 287: 
StringReader stringReader = new StringReader("=+");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 288: 
StringReader stringReader = new StringReader(">>=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
char readChar = ((JavaCharStream) stringReader).readChar();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) readChar).getNextToken();

Test 289: 
StringReader stringReader = new StringReader("+=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "*=";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "**=";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 290: 
StringReader stringReader = new StringReader("n=rX5^J$[CPl].");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 291: 
StringReader stringReader = new StringReader("&=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 105, 91, 91);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)105).getNextToken();

Test 292: 
StringReader stringReader = new StringReader("|=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 293: 
StringReader stringReader = new StringReader("\"^=$\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((StringReader)"\"^=$\"").read();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 294: 
String string = "\"%=\"";
StringReader stringReader = new StringReader("\"%=\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((StringReader)"\"%=\"").read();
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "\"%=\"";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((StringReader) string).read();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 295: 
StringReader stringReader = new StringReader(">>>=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 296: 
StringReader stringReader = new StringReader("shXm#xq2;@%;");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "This is a sample input string.";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 297: 
StringReader stringReader = new StringReader("\"This is a sample string for testing\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 256, 3);
((JavaCharStream) stringReader).readChar();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 298: 
StringReader stringReader = new StringReader("variable_name");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 299: 
StringReader stringReader = new StringReader("nejS_'>");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 300: 
StringReader stringReader = new StringReader("null");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "myIdentifier";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "42 + 6 * 9";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "'hello world'";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 301: 
StringReader stringReader = new StringReader("<<r");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 302: 
StringReader stringReader = new StringReader("<<= ASSIGNMENT_OPERATOR");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 303: 
StringReader stringReader = new StringReader("for");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 304: 
StringReader stringReader = new StringReader("interface");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 305: 
StringReader stringReader = new StringReader("improvedXr,");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 306: 
StringReader stringReader = new StringReader("transient");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 307: 
JavaCharStream javaCharStream = new JavaCharStream((Reader) 31, 31, 31);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

Test 308: 
StringReader stringReader = new StringReader("false");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 309: 
StringReader stringReader = new StringReader("Jump to your destination");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 310: 
StringReader stringReader = new StringReader("breakfast");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 311: 
StringReader stringReader = new StringReader("throw:h");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 312: 
StringReader stringReader = new StringReader("while");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 313: 
StringReader stringReader = new StringReader("super");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "supercalifragilisticexpialidocious";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 314: 
StringReader stringReader = new StringReader("boolean is true");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 89, 89);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)89).getNextToken();

Test 315: 
StringReader stringReader = new StringReader("pi");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 316: 
StringReader stringReader = new StringReader("\"Continue to next iteration\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
char readChar = ((JavaCharStream) stringReader).readChar();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) readChar).getNextToken();

Test 317: 
StringReader stringReader = new StringReader("The quick brown fox jumps over the lazy dog.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 318: 
StringReader stringReader = new StringReader("private");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "void main() { System.out.println(\"Hello, World!\"); }";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 319: 
StringReader stringReader = new StringReader("\"Hello, World!\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 87, 87);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)87).getNextToken();

Test 320: 
String string = "h9e/o9B|mS:R44T<g 3";
StringReader stringReader = new StringReader("h9e/o9B|mS:R44T<g 3");
char[] charArray = new char[1];
((Reader)"h9e/o9B|mS:R44T<g 3").read(charArray);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "h9e/o9B|mS:R44T<g 3";
StringReader stringReader = new StringReader(string);
char[] charArray = new char[1];
((Reader) string).read(charArray);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 321: 
String string = "m^0!Y2\"gW3uUu?Ah&5";
StringReader stringReader = new StringReader("m^0!Y2\"gW3uUu?Ah&5");
((StringReader)"m^0!Y2\"gW3uUu?Ah&5").read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "m^0!Y2\"gW3uUu?Ah&5";
StringReader stringReader = new StringReader(string);
((StringReader) string).read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "m^0!Y2\"gW3uUu?Ah&5";
StringReader stringReader = new StringReader(string);
((StringReader) string).read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "m^0!Y2\"gW3uUu?Ah&5";
StringReader stringReader = new StringReader(string);
((StringReader) string).read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 322: 
StringReader stringReader = new StringReader("'qQ-d;,TTL-");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 323: 
StringReader stringReader = new StringReader("\"This is a sample input string with multiple lines and special characters like \n and \t.\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 324: 
JavaCharStream javaCharStream = new JavaCharStream((InputStream) 761, 761, (int) (byte) (-106));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);

Test 325: 
JavaCharStream javaCharStream = new JavaCharStream((InputStream) 56, (int) 'a', (int) 'b', (int) (byte)73);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);

Test 326: 
byte[] byteArray = new byte[2];
byteArray[0] = (byte) (-43);
byteArray[1] = (byte) 56;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, 761, (byte) (-106));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)761).getNextToken();

Test 327: 
StringReader stringReader = new StringReader("A complex sentence with many words and symbols.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).ReInit(javaCharStream, 3);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 328: 
JavaCharStream javaCharStream = new JavaCharStream((InputStream) 0, 2, 2);
int _int = 1;
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, _int);

Test 329: 
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager((JavaCharStream) 4, 17);

Test 330: 
StringReader stringReader = new StringReader(">>=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 331: 
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager((JavaCharStream) null);

Test 332: 
StringReader stringReader = new StringReader("The quick brown fox jumps over the lazy dog.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).SwitchTo(401);

Test 333: 
StringReader stringReader = new StringReader("oegb_K~Qhp|N");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).SwitchTo((int) (Integer) null);

Test 334: 
StringReader stringReader = new StringReader("\t");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 335: 
StringReader stringReader = new StringReader("The quick brown fox jumps over the lazy dog.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 336: 
StringReader stringReader = new StringReader("Hello, World! This is a test string.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 337: 
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager((JavaCharStream) null);


* Generated after the refinement and before minimization 338 tests with total length 1713
* test suite isTestSuite: 338
Test 0: 
StringReader stringReader = new StringReader("\">>\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
stringReader.read();
Token.GTToken nextToken = (Token.GTToken)javaParserTokenManager.getNextToken();
javaParserTokenManager.TokenLexicalActions(nextToken);
Test 1: 
StringReader stringReader = new StringReader("Fx-uv>w*Zc+;~b");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.ReInit(javaCharStream, 2);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 1, column 15.  Encountered: <EOF> after : \"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 2: 
StringReader stringReader = new StringReader("2eU");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 3: 
StringReader stringReader = new StringReader("m~.]Bl");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.curLexState = (-1);
javaParserTokenManager.getNextToken();
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 1, column 7.  Encountered: <EOF> after : \"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 4: 
StringReader stringReader = new StringReader("_k!a5d|Puz9uWaB9Itz");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.setDebugStream((PrintStream) null);
Test 5: 
StringReader stringReader = new StringReader("]@1)\u0004JBe1%&7VY{");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 6: 
StringReader stringReader = new StringReader("assert");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 7: 
StringReader stringReader = new StringReader(">>");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 8: 
StringReader stringReader = new StringReader("brek");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 9: 
StringReader stringReader = new StringReader("impot");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 10: 
StringReader stringReader = new StringReader("doublhe");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 11: 
StringReader stringReader = new StringReader("proteced");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 12: 
StringReader stringReader = new StringReader("/Fh^m<");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 13: 
StringReader stringReader = new StringReader(".7ck");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 14: 
StringReader stringReader = new StringReader(";rX5J$[CPl].");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 15: 
StringReader stringReader = new StringReader("wI+ap1[");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 16: 
StringReader stringReader = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 17: 
StringReader stringReader = new StringReader("final");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 18: 
StringReader stringReader = new StringReader("_k!4a5d|Puz9uWaB9Itz");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 19: 
StringReader stringReader = new StringReader("\"volatile\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 20: 
StringReader stringReader = new StringReader("rMm#Nu]@QPCXiUk^M%");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 1, column 4.  Encountered: \"#\" (35), after : \"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 21: 
StringReader stringReader = new StringReader("$");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 22: 
StringReader stringReader = new StringReader("%7($6ahUP<[k:");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 23: 
StringReader stringReader = new StringReader("&W<5%mURv[Pl\"Gv<");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 24: 
StringReader stringReader = new StringReader("'J6|bZM&jrjaIdIj;[3");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 1, column 3.  Encountered: \"6\" (54), after : \"\\'J\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 25: 
StringReader stringReader = new StringReader(")\"I_5g/kR@qqn");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 26: 
StringReader stringReader = new StringReader("Q7Pk*CNa`u");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 27: 
StringReader stringReader = new StringReader("+=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 28: 
StringReader stringReader = new StringReader("1");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 29: 
StringReader stringReader = new StringReader("3$9#]S)t");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 30: 
StringReader stringReader = new StringReader("4i:m_o0V`DT:JW'I`");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 31: 
StringReader stringReader = new StringReader("5@;jNgS+WO6K>Z[/B");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 3175, 3175, 3175);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
Token nextToken = javaParserTokenManager.getNextToken();
javaParserTokenManager.SkipLexicalActions(nextToken);
Test 32: 
StringReader stringReader = new StringReader("6w_'eE#jveQ*FS0y'\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 33: 
StringReader stringReader = new StringReader("8W]:2)0&e5yVM)mZ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 34: 
StringReader stringReader = new StringReader(":&zD.%#");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 35: 
StringReader stringReader = new StringReader("<<Ar");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 36: 
StringReader stringReader = new StringReader("Z=)]");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 37: 
StringReader stringReader = new StringReader("4bEa<yD?ohTa1[");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 38: 
StringReader stringReader = new StringReader("@@&");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 39: 
StringReader stringReader = new StringReader("A+,`Q{r5_C3");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 40: 
StringReader stringReader = new StringReader("BapK{(YwPPy");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 41: 
StringReader stringReader = new StringReader("CNc0");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 42: 
StringReader stringReader = new StringReader("Diic/3gyL");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 43: 
StringReader stringReader = new StringReader("<EOF> ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 44: 
StringReader stringReader = new StringReader("Fx-uv>w*Zc+;~b");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 45: 
StringReader stringReader = new StringReader("Giic/3gyL");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 46: 
StringReader stringReader = new StringReader("Har`.e*f");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 1, column 4.  Encountered: \"`\" (96), after : \"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 47: 
StringReader stringReader = new StringReader("q|J");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 48: 
StringReader stringReader = new StringReader("K[>5m[$'S/rtW");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 49: 
StringReader stringReader = new StringReader("*=L&twUfU5");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.ReadByte();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 50: 
StringReader stringReader = new StringReader("MMD~");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 87, 87);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 51: 
StringReader stringReader = new StringReader("NnuzEwLnhjXkdWBcX");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 52: 
StringReader stringReader = new StringReader("Oj<Vq-A+W\":I| |XGr_");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 53: 
StringReader stringReader = new StringReader("Pf/k0ug0");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 54: 
StringReader stringReader = new StringReader("Rxj48p*xG~");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 55: 
StringReader stringReader = new StringReader("HS)rvU4e");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 17, 17);
javaCharStream.readChar();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 56: 
StringReader stringReader = new StringReader("TOo7cY0%ZI0~@\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 57: 
StringReader stringReader = new StringReader(".U z&co}!sN");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 58: 
StringReader stringReader = new StringReader(";V_p6pWCyX(fy(g/");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 59: 
StringReader stringReader = new StringReader("9W|c2K");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 60: 
StringReader stringReader = new StringReader("XXi8V.9V{E+nS5");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 61: 
StringReader stringReader = new StringReader("YXDGNX*/.Pc:9FNReF");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 62: 
StringReader stringReader = new StringReader("extends");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 63: 
StringReader stringReader = new StringReader("gokz)F+=]");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 64: 
StringReader stringReader = new StringReader("hile");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 65: 
StringReader stringReader = new StringReader("j0Yb=pv");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 66: 
StringReader stringReader = new StringReader("k!5dPuz9uWaB9Itz");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 67: 
StringReader stringReader = new StringReader("l+");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 68: 
StringReader stringReader = new StringReader("m^0!Y2\"gW3uUu?Ah&5");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 69: 
StringReader stringReader = new StringReader("n;rX5^J$[CPl].");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 70: 
StringReader stringReader = new StringReader("void");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
stringReader.read();
javaParserTokenManager.getNextToken();
Test 71: 
StringReader stringReader = new StringReader("t8ro:s");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 72: 
StringReader stringReader = new StringReader("Fx-uLu>w*C+;~W");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 73: 
StringReader stringReader = new StringReader("void");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 74: 
StringReader stringReader = new StringReader("{");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 75: 
StringReader stringReader = new StringReader("}f-6yMq]KK1ac[Rh5");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 76: 
StringReader stringReader = new StringReader("~");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 77: 
byte[] byteArray = new byte[2];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, 761, (byte) (-106));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 761, column -106.  Encountered: \"\" (0), after : \"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 78: 
StringReader stringReader = new StringReader("&&");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 79: 
StringReader stringReader = new StringReader(".'g4");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 80: 
StringReader stringReader = new StringReader("^f(w:nBm1");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 81: 
StringReader stringReader = new StringReader("...");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 82: 
StringReader stringReader = new StringReader("||/");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 17, 17);
javaCharStream.readChar();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 83: 
StringReader stringReader = new StringReader("Osby$-1^AoS2vl_m");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 84: 
StringReader stringReader = new StringReader("|2r\"Z[-.mR");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 0, 0);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 0);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 0, column 10.  Encountered: <EOF> after : \"\\\"Z[-.mR\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 85: 
StringReader stringReader = new StringReader("XWO/_X!?'+Kv!&>#");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 1, column 11.  Encountered: \"K\" (75), after : \"\\'+\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 86: 
StringReader stringReader = new StringReader("tAo:");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 87: 
StringReader stringReader = new StringReader(" gBSo");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 88: 
StringReader stringReader = new StringReader("yRhF!D{^TS=sA");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 89: 
StringReader stringReader = new StringReader("tG 'Wl:F_9x");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 90: 
StringReader stringReader = new StringReader("*H>\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 105, 105, 120);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 91: 
StringReader stringReader = new StringReader("pL2.VBG3}");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 92: 
StringReader stringReader = new StringReader("fN9 ;]e`3<~@K9");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 93: 
StringReader stringReader = new StringReader("_k!a5d|Puz9uWaB9Itz");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 94: 
StringReader stringReader = new StringReader("gQMR95lJ~4MA6O/;ud");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 95: 
StringReader stringReader = new StringReader("?:.,&RD9$41q 4<");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 96: 
StringReader stringReader = new StringReader(">S*@),wqFO?}Q*1+=`~");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.jjFillToken();
Test 97: 
StringReader stringReader = new StringReader("<T=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 98: 
StringReader stringReader = new StringReader("\">Y\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
stringReader.read();
javaParserTokenManager.getNextToken();
Test 99: 
StringReader stringReader = new StringReader("<ZNxh:^`KF)C`*");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 100: 
StringReader stringReader = new StringReader("t[ro:s");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 101: 
StringReader stringReader = new StringReader("l>hBbPR1 >$1");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 102: 
StringReader stringReader = new StringReader("s]@Y`B ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 103: 
StringReader stringReader = new StringReader(";/^VAF.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 104: 
StringReader stringReader = new StringReader("c`qU;PG~Zv6Mb=mysx");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 105: 
StringReader stringReader = new StringReader("xf+cMa?)-lA{u?L>!p ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 106: 
StringReader stringReader = new StringReader("protec;ed");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 107: 
StringReader stringReader = new StringReader("new");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 108: 
StringReader stringReader = new StringReader("^j3gK5 &[%9]5##");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 109: 
StringReader stringReader = new StringReader("0tk");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 110: 
StringReader stringReader = new StringReader("float");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 111: 
StringReader stringReader = new StringReader("!pw,");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 112: 
StringReader stringReader = new StringReader("cqr`</n8+O");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 113: 
StringReader stringReader = new StringReader("<token of kind 12>");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 114: 
StringReader stringReader = new StringReader("25>v:GXF\"Sj8?e{~");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 115: 
StringReader stringReader = new StringReader("={2&F>/^Rakn(");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 0, 0, 21);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 116: 
StringReader stringReader = new StringReader("||/");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
stringReader.reset();
javaParserTokenManager.getNextToken();
Test 117: 
StringReader stringReader = new StringReader("c&#`</d|+On");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
stringReader.read();
javaParserTokenManager.getNextToken();
Test 118: 
StringReader stringReader = new StringReader("c&#`</d|+On");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 119: 
byte[] byteArray = new byte[2];
byteArray[0] = (byte)43;
byteArray[1] = (byte)43;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, 35, (-616));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 120: 
StringReader stringReader = new StringReader("/FZUh^<");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.readChar();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 0);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 121: 
StringReader stringReader = new StringReader("==");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 122: 
StringReader stringReader = new StringReader(">>=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.readChar();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 123: 
StringReader stringReader = new StringReader("-=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 124: 
StringReader stringReader = new StringReader("n=rX5^J$[CPl].");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 125: 
StringReader stringReader = new StringReader("&=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 105, (byte) (-116), 91);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 126: 
StringReader stringReader = new StringReader("|=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 127: 
StringReader stringReader = new StringReader("\"^=\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
stringReader.read();
javaParserTokenManager.getNextToken();
Test 128: 
StringReader stringReader = new StringReader("\"%=\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
stringReader.read();
javaParserTokenManager.getNextToken();
Test 129: 
StringReader stringReader = new StringReader("\"if\"");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 130: 
StringReader stringReader = new StringReader(">>>=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 131: 
StringReader stringReader = new StringReader("shXm#xq2;@%;");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 132: 
StringReader stringReader = new StringReader("\"clayss\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1660, 3);
javaCharStream.readChar();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 133: 
StringReader stringReader = new StringReader("public");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 134: 
StringReader stringReader = new StringReader("default");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 135: 
StringReader stringReader = new StringReader("nejS_'>");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 1, column 8.  Encountered: <EOF> after : \"\\'>\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 136: 
StringReader stringReader = new StringReader("null");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 137: 
StringReader stringReader = new StringReader("<<r");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 138: 
StringReader stringReader = new StringReader("<<=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 139: 
StringReader stringReader = new StringReader("for");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 140: 
StringReader stringReader = new StringReader("interface");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 141: 
StringReader stringReader = new StringReader("impXr,");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 142: 
StringReader stringReader = new StringReader("transient");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 143: 
StringReader stringReader = new StringReader("\"class\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 31, 31);
javaCharStream.readChar();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 144: 
StringReader stringReader = new StringReader("else");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 145: 
StringReader stringReader = new StringReader("true");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 146: 
StringReader stringReader = new StringReader("goto");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 147: 
StringReader stringReader = new StringReader("break");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 148: 
StringReader stringReader = new StringReader("thro:h");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 149: 
StringReader stringReader = new StringReader("while");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 150: 
StringReader stringReader = new StringReader("super");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 151: 
StringReader stringReader = new StringReader("boolean");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 89, 89);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 152: 
StringReader stringReader = new StringReader("double");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 153: 
StringReader stringReader = new StringReader("\"continue\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.readChar();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 154: 
StringReader stringReader = new StringReader("import");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 155: 
StringReader stringReader = new StringReader("finally");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 156: 
StringReader stringReader = new StringReader("protected");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 157: 
StringReader stringReader = new StringReader("\"{)/[");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 87, 87);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.jjround = (-1);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 87, column 87.  Encountered: \"\\\"\" (34), after : \"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 158: 
StringReader stringReader = new StringReader("h9e/o9B|mS:R44T<g 3");
char[] charArray = new char[1];
stringReader.read(charArray);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 159: 
StringReader stringReader = new StringReader("m^0!Y2\"gW3uUu?Ah&5");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 160: 
StringReader stringReader = new StringReader("\"{)/[");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 1, column 6.  Encountered: <EOF> after : \"\\\"{)/[\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 161: 
byte[] byteArray = new byte[3];
byteArray[0] = (byte)53;
byteArray[1] = (byte) (-116);
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 162: 
StringReader stringReader = new StringReader("'qQ-d;,TTL-");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 1, column 3.  Encountered: \"Q\" (81), after : \"\\'q\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 163: 
StringReader stringReader = new StringReader("9lJMdAZR^xj{f<");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 164: 
StringReader stringReader = new StringReader("\"\n\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 1, column 2.  Encountered: \"\\n\" (10), after : \"\\\"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 165: 
byte[] byteArray = new byte[2];
byteArray[0] = (byte) (-43);
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, 761, (byte) (-106));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 761, column -106.  Encountered: \"\\ufffd\" (65533), after : \"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 166: 
byte[] byteArray = new byte[3];
byteArray[0] = (byte)73;
byteArray[1] = (byte) (-102);
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, 56, (byte)73, (byte)73);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 167: 
byte[] byteArray = new byte[2];
byteArray[0] = (byte) (-43);
byteArray[1] = (byte) (-106);
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, 761, (byte) (-106));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 168: 
StringReader stringReader = new StringReader("xuv>w*Zc+;Ub");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.ReInit(javaCharStream, 3);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 1, column 13.  Encountered: <EOF> after : \"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 169: 
byte[] byteArray = new byte[3];
byteArray[2] = (byte) (-119);
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
DataInputStream dataInputStream = new DataInputStream(byteArrayInputStream);
JavaCharStream javaCharStream = new JavaCharStream(dataInputStream, (byte)0, 2);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 1);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 0, column 5.  Encountered: <EOF> after : \"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 170: 
JavaParserTokenManager javaParserTokenManager = null;
try {
  javaParserTokenManager = new JavaParserTokenManager((JavaCharStream) null, 17);
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Error: Ignoring invalid lexical state : 17. State unchanged.
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 171: 
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager((JavaCharStream) null);
javaParserTokenManager.ReInit((JavaCharStream) null);
Test 172: 
StringReader stringReader = new StringReader(">>=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 173: 
StringReader stringReader = new StringReader("/>");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 174: 
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager((JavaCharStream) null);
javaParserTokenManager.SwitchTo(0);
Test 175: 
StringReader stringReader = new StringReader("xno?[kC");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
// Undeclared exception!
try { 
  javaParserTokenManager.SwitchTo(401);
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Error: Ignoring invalid lexical state : 401. State unchanged.
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 176: 
StringReader stringReader = new StringReader("oegb_K~Qhp|N");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
// Undeclared exception!
try { 
  javaParserTokenManager.SwitchTo((-460));
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Error: Ignoring invalid lexical state : -460. State unchanged.
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 177: 
StringReader stringReader = new StringReader("\t");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 178: 
StringReader stringReader = new StringReader("bre");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 179: 
StringReader stringReader = new StringReader("brea");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 180: 
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager((JavaCharStream) null);
javaParserTokenManager.MoreLexicalActions();
Test 181: 
StringReader stringReader = new StringReader("\"Hello, World!\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((StringReader)"\"Hello, World!\"").read();
Token.GTToken nextToken = (Token.GTToken)((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).TokenLexicalActions(nextToken);

Test 182: 
StringReader stringReader = new StringReader("The quick brown fox jumps over the lazy dog.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).ReInit(javaCharStream, 2);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 183: 
StringReader stringReader = new StringReader("2eU");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "2eU";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 184: 
StringReader stringReader = new StringReader("m~.]Bl");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 185: 
StringReader stringReader = new StringReader("A sample input string for testing JavaParser");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).setDebugStream((PrintStream) null);

Test 186: 
StringReader stringReader = new StringReader("This is a sample input string.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 187: 
StringReader stringReader = new StringReader("assert");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "assert";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 188: 
StringReader stringReader = new StringReader(">>");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 189: 
StringReader stringReader = new StringReader("break");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 190: 
StringReader stringReader = new StringReader("double");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 191: 
StringReader stringReader = new StringReader("password");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 192: 
StringReader stringReader = new StringReader("public class MyClass { public void myMethod() { System.out.println(\"Hello, world!\"); } }");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 193: 
StringReader stringReader = new StringReader("myVar");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 194: 
StringReader stringReader = new StringReader(";rX5J$[CPl].");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 195: 
StringReader stringReader = new StringReader("This is a test string.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 196: 
StringReader stringReader = new StringReader("/path/to/your/Java/source/file.java");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 197: 
StringReader stringReader = new StringReader("final int x = 5;");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 198: 
StringReader stringReader = new StringReader("_k!4a5d|Puz9uWaB9Itz");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 199: 
StringReader stringReader = new StringReader("\"volatile\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 200: 
StringReader stringReader = new StringReader("rMm#Nu]@QPCXiUk^M%");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
StringReader stringReader = new StringReader("rMm#Nu]@QPCXiUk^M%");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
StringReader stringReader = new StringReader("/**\n * This is a comment.\n */");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
StringReader stringReader = new StringReader("public class Test {}");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);

Test 201: 
StringReader stringReader = new StringReader("$100");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 202: 
StringReader stringReader = new StringReader("public class HelloWorld { public static void main(String[] args) { System.out.println(\"Hello, World!\"); } }");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 203: 
StringReader stringReader = new StringReader("&W<5%mURv[Pl\"Gv<");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "&W<5%mURv[Pl\"Gv<";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "&W<5%mURv[Pl\"Gv<";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 204: 
StringReader stringReader = new StringReader("'This is a sample input for testing.'");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 205: 
StringReader stringReader = new StringReader(")\"I_5g/kR@qqn");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 206: 
StringReader stringReader = new StringReader("Q7Pk*CNa`u");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 207: 
StringReader stringReader = new StringReader("+=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 208: 
StringReader stringReader = new StringReader("Hello World");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 209: 
StringReader stringReader = new StringReader("3.5$9.2#]S)t");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 210: 
StringReader stringReader = new StringReader("4i:m_o0V`DT:JW'I`");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);

Test 211: 
StringReader stringReader = new StringReader("590000000123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz");
int _int = 3175;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 3175, 3175, 3175);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
Token nextToken = ((JavaParserTokenManager)3175).getNextToken();
((JavaParserTokenManager) _int).SkipLexicalActions(nextToken);

Test 212: 
StringReader stringReader = new StringReader(":&zD.%#");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 213: 
StringReader stringReader = new StringReader("<<Ar");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 214: 
StringReader stringReader = new StringReader("Z=99");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 215: 
StringReader stringReader = new StringReader("4bEa<yD?ohTa1[");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 216: 
StringReader stringReader = new StringReader("Hello World!");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 217: 
StringReader stringReader = new StringReader("Hello World!");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 218: 
StringReader stringReader = new StringReader("Diic/3gyL");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 219: 
StringReader stringReader = new StringReader("Fx-uv>w*Zc+;~b");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 220: 
StringReader stringReader = new StringReader("Giic/3gyL");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 221: 
StringReader stringReader = new StringReader("Ha$&^%&*#@!$#@!");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 222: 
StringReader stringReader = new StringReader("K[>5m[$'S/rtW");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 223: 
StringReader stringReader = new StringReader("This is a test string for the JavaParserTokenManager.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
char ReadByte = ((JavaCharStream) stringReader).ReadByte();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) ReadByte).getNextToken();
((JavaParserTokenManager) ReadByte).getNextToken();

Test 224: 
StringReader stringReader = new StringReader("MMD~");
int _int = 87;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 87, 87);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)87).getNextToken();
String string = "MMD~";
StringReader stringReader = new StringReader(string);
int _int = 87;
int _int = 87;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();
String string = "MMD~";
StringReader stringReader = new StringReader(string);
int _int = 87;
int _int = 87;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();

Test 225: 
StringReader stringReader = new StringReader("This is a test input.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 226: 
StringReader stringReader = new StringReader("class TestClass { public static void main(String[] args) { System.out.println(\"Hello, World!\"); } }");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 227: 
StringReader stringReader = new StringReader("Pf/k0ug0");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 228: 
StringReader stringReader = new StringReader("Rxj48p*xG~");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 229: 
StringReader stringReader = new StringReader("Hello World");
int _int = 17;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 17, 17);
((JavaCharStream) stringReader).readChar();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();

Test 230: 
StringReader stringReader = new StringReader("This is a sample test string that will be used to test various JavaParserTokenManager methods.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 231: 
StringReader stringReader = new StringReader("public class HelloWorld {\n\tpublic static void main(String[] args) {\n\t\tSystem.out.println(\"Hello World!\");\n\t}\n}");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 232: 
StringReader stringReader = new StringReader(";V_p6pWCyX(fy(g/");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 233: 
StringReader stringReader = new StringReader("5W|c10K");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 234: 
StringReader stringReader = new StringReader("A string with numbers 1234567890, letters a-z, and special characters !@#$%^&*()_+-=[]{}|;':\"<>,./?`~");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 235: 
StringReader stringReader = new StringReader("A valid Java identifier");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 236: 
StringReader stringReader = new StringReader("extends");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 237: 
StringReader stringReader = new StringReader("gokz)F+=]");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 238: 
StringReader stringReader = new StringReader("j0Yb=pv");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 239: 
StringReader stringReader = new StringReader("k!5dPuz9uWaB9Itz");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 240: 
StringReader stringReader = new StringReader("abcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*()_+-=[]{}|;':\"<>,./?`~");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 241: 
StringReader stringReader = new StringReader("public class MyClass { public static void main(String[] args) { System.out.println(\"Hello, World!\"); } }");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 242: 
StringReader stringReader = new StringReader("n;rX5^J$[CPl].");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 243: 
StringReader stringReader = new StringReader("t8ro:s");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 244: 
StringReader stringReader = new StringReader("Fx-uLu>w*C+;~W");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "Fx-uLu>w*C+;~W";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 245: 
StringReader stringReader = new StringReader("{abcdefghijklmnopqrstuvwxyz}");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 246: 
StringReader stringReader = new StringReader("This is a test of the JavaParser class.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 247: 
StringReader stringReader = new StringReader("This is a test string for the JavaParserTokenManager class. It contains several tokens, including keywords, identifiers, and literals.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 248: 
JavaCharStream javaCharStream = new JavaCharStream((InputStream) 761, 761, (int) (byte) (-106));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);

Test 249: 
StringReader stringReader = new StringReader("'The quick brown fox jumps over the lazy dog.'g4");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 250: 
StringReader stringReader = new StringReader("^f(w:nBm1");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 251: 
StringReader stringReader = new StringReader("This is a test string");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 252: 
StringReader stringReader = new StringReader("a=b+c*d-e");
int _int = 17;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 17, 17);
((JavaCharStream) stringReader).readChar();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();

Test 253: 
StringReader stringReader = new StringReader("This is a test string for JavaParserTokenManager.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 254: 
StringReader stringReader = new StringReader("|2r\"Z[-.mR");
int _int = 0;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 0, 0);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 0);
((JavaParserTokenManager)0).getNextToken();
((JavaParserTokenManager) _int).getNextToken();
((JavaParserTokenManager) _int).getNextToken();
((JavaParserTokenManager) _int).getNextToken();

Test 255: 
StringReader stringReader = new StringReader("XWO/_X!?'+Kv!&>#");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);

Test 256: 
StringReader stringReader = new StringReader("This is a test string with special characters like !@#$%^&*()_+-=[]{}|;':\"<>,./`~");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 257: 
StringReader stringReader = new StringReader("Hello, World!");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 258: 
StringReader stringReader = new StringReader("This is a sample input for testing.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 259: 
StringReader stringReader = new StringReader("tG '_Wl:F_9x");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 260: 
StringReader stringReader = new StringReader("The quick brown fox jumps over the lazy dog.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 105, 105, 120);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)105).getNextToken();

Test 261: 
StringReader stringReader = new StringReader("This is a string with some special characters like !@#$%^&*()_+[]{}|:<>?");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 262: 
StringReader stringReader = new StringReader("_k!a5d|Puz9uWaB9Itz");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 263: 
StringReader stringReader = new StringReader("I am a string with more descriptive and representative data");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 264: 
StringReader stringReader = new StringReader("This is a test string with special characters such as angle brackets, asterisks, and parentheses");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).jjFillToken();

Test 265: 
StringReader stringReader = new StringReader("<T=1234567890>");

Test 266: 
StringReader stringReader = new StringReader("\"This is a sample string\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((StringReader)"\"This is a sample string\"").read();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 267: 
StringReader stringReader = new StringReader("a b c d e f g h i j k l m n o p q r s t u v w x y z");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 268: 
StringReader stringReader = new StringReader("t[ro:s");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "10";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "'a'";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 269: 
StringReader stringReader = new StringReader("l>hBbPR1 >$1");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 270: 
StringReader stringReader = new StringReader("s]@Y`B ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 271: 
StringReader stringReader = new StringReader(";/^VAF.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 272: 
StringReader stringReader = new StringReader("c`qU;PG~Zv6Mb=mysx");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 273: 
StringReader stringReader = new StringReader("protected");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 274: 
StringReader stringReader = new StringReader("new");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "create";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 275: 
StringReader stringReader = new StringReader("^j3gK5 &[%9]5##");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "^j3gK5 &[%9]5##";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "^j3gK5 &[%9]5##";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "^j3gK5 &[%9]5##";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "^j3gK5 &[%9]5##";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "^j3gK5 &[%9]5##";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "^j3gK5 &[%9]5##";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "^j3gK5 &[%9]5##";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "^j3gK5 &[%9]5##";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "^j3gK5 &[%9]5##";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 276: 
StringReader stringReader = new StringReader("This is a test input for JavaCharStream");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 277: 
StringReader stringReader = new StringReader("The quick brown fox jumps over the lazy dog.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 278: 
StringReader stringReader = new StringReader("!pw,");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 279: 
StringReader stringReader = new StringReader("This is a test string with multiple words");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 280: 
StringReader stringReader = new StringReader("<token of kind 12>");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 281: 
int _int = 21;
JavaCharStream javaCharStream = new JavaCharStream((Reader) 0, 0, 21, 21);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();

Test 282: 
String string = "Hello, World!";
StringReader stringReader = new StringReader("Hello, World!");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((StringReader) string).reset();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 283: 
StringReader stringReader = new StringReader("Hello, World! This is a Java program.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((StringReader)"Hello, World! This is a Java program.").read();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 284: 
StringReader stringReader = new StringReader("c&#`</d|+On");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 285: 
byte[] byteArray = new byte[2];
byteArray[0] = (byte) 43;
byteArray[1] = (byte) 43;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, 35, (-616));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) byteArrayInputStream).getNextToken();

Test 286: 
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager((JavaCharStream) 0, 0);

Test 287: 
StringReader stringReader = new StringReader("=+");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 288: 
StringReader stringReader = new StringReader(">>=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
char readChar = ((JavaCharStream) stringReader).readChar();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) readChar).getNextToken();

Test 289: 
StringReader stringReader = new StringReader("+=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "*=";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "**=";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 290: 
StringReader stringReader = new StringReader("n=rX5^J$[CPl].");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 291: 
StringReader stringReader = new StringReader("&=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 105, 91, 91);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)105).getNextToken();

Test 292: 
StringReader stringReader = new StringReader("|=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 293: 
StringReader stringReader = new StringReader("\"^=$\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((StringReader)"\"^=$\"").read();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 294: 
String string = "\"%=\"";
StringReader stringReader = new StringReader("\"%=\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((StringReader)"\"%=\"").read();
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "\"%=\"";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((StringReader) string).read();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 295: 
StringReader stringReader = new StringReader(">>>=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 296: 
StringReader stringReader = new StringReader("shXm#xq2;@%;");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "This is a sample input string.";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 297: 
StringReader stringReader = new StringReader("\"This is a sample string for testing\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 256, 3);
((JavaCharStream) stringReader).readChar();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 298: 
StringReader stringReader = new StringReader("variable_name");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 299: 
StringReader stringReader = new StringReader("nejS_'>");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 300: 
StringReader stringReader = new StringReader("null");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "myIdentifier";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "42 + 6 * 9";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "'hello world'";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 301: 
StringReader stringReader = new StringReader("<<r");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 302: 
StringReader stringReader = new StringReader("<<= ASSIGNMENT_OPERATOR");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 303: 
StringReader stringReader = new StringReader("for");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 304: 
StringReader stringReader = new StringReader("interface");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 305: 
StringReader stringReader = new StringReader("improvedXr,");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 306: 
StringReader stringReader = new StringReader("transient");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 307: 
JavaCharStream javaCharStream = new JavaCharStream((Reader) 31, 31, 31);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

Test 308: 
StringReader stringReader = new StringReader("false");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 309: 
StringReader stringReader = new StringReader("Jump to your destination");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 310: 
StringReader stringReader = new StringReader("breakfast");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 311: 
StringReader stringReader = new StringReader("throw:h");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 312: 
StringReader stringReader = new StringReader("while");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 313: 
StringReader stringReader = new StringReader("super");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "supercalifragilisticexpialidocious";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 314: 
StringReader stringReader = new StringReader("boolean is true");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 89, 89);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)89).getNextToken();

Test 315: 
StringReader stringReader = new StringReader("pi");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 316: 
StringReader stringReader = new StringReader("\"Continue to next iteration\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
char readChar = ((JavaCharStream) stringReader).readChar();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) readChar).getNextToken();

Test 317: 
StringReader stringReader = new StringReader("The quick brown fox jumps over the lazy dog.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 318: 
StringReader stringReader = new StringReader("private");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "void main() { System.out.println(\"Hello, World!\"); }";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 319: 
StringReader stringReader = new StringReader("\"Hello, World!\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 87, 87);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)87).getNextToken();

Test 320: 
String string = "h9e/o9B|mS:R44T<g 3";
StringReader stringReader = new StringReader("h9e/o9B|mS:R44T<g 3");
char[] charArray = new char[1];
((Reader)"h9e/o9B|mS:R44T<g 3").read(charArray);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "h9e/o9B|mS:R44T<g 3";
StringReader stringReader = new StringReader(string);
char[] charArray = new char[1];
((Reader) string).read(charArray);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 321: 
String string = "m^0!Y2\"gW3uUu?Ah&5";
StringReader stringReader = new StringReader("m^0!Y2\"gW3uUu?Ah&5");
((StringReader)"m^0!Y2\"gW3uUu?Ah&5").read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "m^0!Y2\"gW3uUu?Ah&5";
StringReader stringReader = new StringReader(string);
((StringReader) string).read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "m^0!Y2\"gW3uUu?Ah&5";
StringReader stringReader = new StringReader(string);
((StringReader) string).read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "m^0!Y2\"gW3uUu?Ah&5";
StringReader stringReader = new StringReader(string);
((StringReader) string).read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 322: 
StringReader stringReader = new StringReader("'qQ-d;,TTL-");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 323: 
StringReader stringReader = new StringReader("\"This is a sample input string with multiple lines and special characters like \n and \t.\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 324: 
JavaCharStream javaCharStream = new JavaCharStream((InputStream) 761, 761, (int) (byte) (-106));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);

Test 325: 
JavaCharStream javaCharStream = new JavaCharStream((InputStream) 56, (int) 'a', (int) 'b', (int) (byte)73);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);

Test 326: 
byte[] byteArray = new byte[2];
byteArray[0] = (byte) (-43);
byteArray[1] = (byte) 56;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, 761, (byte) (-106));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)761).getNextToken();

Test 327: 
StringReader stringReader = new StringReader("A complex sentence with many words and symbols.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).ReInit(javaCharStream, 3);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 328: 
JavaCharStream javaCharStream = new JavaCharStream((InputStream) 0, 2, 2);
int _int = 1;
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, _int);

Test 329: 
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager((JavaCharStream) 4, 17);

Test 330: 
StringReader stringReader = new StringReader(">>=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 331: 
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager((JavaCharStream) null);

Test 332: 
StringReader stringReader = new StringReader("The quick brown fox jumps over the lazy dog.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).SwitchTo(401);

Test 333: 
StringReader stringReader = new StringReader("oegb_K~Qhp|N");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).SwitchTo((int) (Integer) null);

Test 334: 
StringReader stringReader = new StringReader("\t");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 335: 
StringReader stringReader = new StringReader("The quick brown fox jumps over the lazy dog.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 336: 
StringReader stringReader = new StringReader("Hello, World! This is a test string.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 337: 
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager((JavaCharStream) null);


* Minimizing test suite
* test suite isTestSuite: 178
Test 0: 
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager((JavaCharStream) null);
javaParserTokenManager.ReInit((JavaCharStream) null);
Test 1: 
StringReader stringReader = new StringReader(" gBSo");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 2: 
StringReader stringReader = new StringReader("1");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 3: 
StringReader stringReader = new StringReader("|2r\"Z[-.mR");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 0, 0);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 0);
javaParserTokenManager.getNextToken();
Test 4: 
StringReader stringReader = new StringReader("m~.]Bl");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.curLexState = (-1);
javaParserTokenManager.getNextToken();
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 1, column 7.  Encountered: <EOF> after : \"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 5: 
StringReader stringReader = new StringReader("_k!a5d|Puz9uWaB9Itz");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.setDebugStream((PrintStream) null);
Test 6: 
StringReader stringReader = new StringReader("&&");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 7: 
StringReader stringReader = new StringReader("assert");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 8: 
StringReader stringReader = new StringReader("Fx-uv>w*Zc+;~b");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.ReInit(javaCharStream, 2);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 1, column 15.  Encountered: <EOF> after : \"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 9: 
StringReader stringReader = new StringReader("<<Ar");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 10: 
StringReader stringReader = new StringReader("bre");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 11: 
StringReader stringReader = new StringReader("brea");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 12: 
StringReader stringReader = new StringReader("doublhe");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 13: 
StringReader stringReader = new StringReader("proteced");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 14: 
StringReader stringReader = new StringReader("/>");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 15: 
StringReader stringReader = new StringReader(".'g4");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 16: 
StringReader stringReader = new StringReader("!pw,");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 17: 
StringReader stringReader = new StringReader("wI+ap1[");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 18: 
StringReader stringReader = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 19: 
StringReader stringReader = new StringReader("final");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 20: 
StringReader stringReader = new StringReader("rMm#Nu]@QPCXiUk^M%");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 1, column 4.  Encountered: \"#\" (35), after : \"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 21: 
StringReader stringReader = new StringReader("$");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 22: 
StringReader stringReader = new StringReader("\"%=\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
stringReader.read();
javaParserTokenManager.getNextToken();
Test 23: 
StringReader stringReader = new StringReader("'J6|bZM&jrjaIdIj;[3");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 1, column 3.  Encountered: \"6\" (54), after : \"\\'J\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 24: 
StringReader stringReader = new StringReader("%7($6ahUP<[k:");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 25: 
StringReader stringReader = new StringReader(")\"I_5g/kR@qqn");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 26: 
StringReader stringReader = new StringReader("*H>\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 105, 105, 120);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 27: 
StringReader stringReader = new StringReader("+=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 28: 
StringReader stringReader = new StringReader("?:.,&RD9$41q 4<");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 29: 
StringReader stringReader = new StringReader("-=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 30: 
StringReader stringReader = new StringReader("0tk");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 31: 
StringReader stringReader = new StringReader("2eU");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 32: 
StringReader stringReader = new StringReader("3$9#]S)t");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 33: 
StringReader stringReader = new StringReader("4i:m_o0V`DT:JW'I`");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 34: 
StringReader stringReader = new StringReader("5@;jNgS+WO6K>Z[/B");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 3175, 3175, 3175);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
Token nextToken = javaParserTokenManager.getNextToken();
javaParserTokenManager.SkipLexicalActions(nextToken);
Test 35: 
StringReader stringReader = new StringReader("6w_'eE#jveQ*FS0y'\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 36: 
StringReader stringReader = new StringReader("8W]:2)0&e5yVM)mZ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 37: 
StringReader stringReader = new StringReader("9lJMdAZR^xj{f<");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 38: 
StringReader stringReader = new StringReader(";/^VAF.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 39: 
StringReader stringReader = new StringReader("==");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 40: 
StringReader stringReader = new StringReader(">>=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 41: 
StringReader stringReader = new StringReader("@@&");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 42: 
StringReader stringReader = new StringReader("A+,`Q{r5_C3");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 43: 
StringReader stringReader = new StringReader("BapK{(YwPPy");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 44: 
StringReader stringReader = new StringReader("CNc0");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 45: 
StringReader stringReader = new StringReader("Diic/3gyL");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 46: 
StringReader stringReader = new StringReader("<EOF> ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 47: 
StringReader stringReader = new StringReader("/FZUh^<");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.readChar();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 0);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 48: 
StringReader stringReader = new StringReader("Giic/3gyL");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 49: 
StringReader stringReader = new StringReader("Har`.e*f");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 1, column 4.  Encountered: \"`\" (96), after : \"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 50: 
StringReader stringReader = new StringReader("q|J");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 51: 
StringReader stringReader = new StringReader("K[>5m[$'S/rtW");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 52: 
StringReader stringReader = new StringReader("*=L&twUfU5");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.ReadByte();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 53: 
StringReader stringReader = new StringReader("MMD~");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 87, 87);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 54: 
StringReader stringReader = new StringReader("NnuzEwLnhjXkdWBcX");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 55: 
StringReader stringReader = new StringReader("Oj<Vq-A+W\":I| |XGr_");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 56: 
StringReader stringReader = new StringReader("Pf/k0ug0");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 57: 
StringReader stringReader = new StringReader("Q7Pk*CNa`u");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 58: 
StringReader stringReader = new StringReader("Rxj48p*xG~");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 59: 
StringReader stringReader = new StringReader("HS)rvU4e");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 17, 17);
javaCharStream.readChar();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 60: 
StringReader stringReader = new StringReader("TOo7cY0%ZI0~@\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 61: 
StringReader stringReader = new StringReader(".U z&co}!sN");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 62: 
StringReader stringReader = new StringReader(";V_p6pWCyX(fy(g/");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 63: 
StringReader stringReader = new StringReader("9W|c2K");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 64: 
StringReader stringReader = new StringReader("XXi8V.9V{E+nS5");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 65: 
StringReader stringReader = new StringReader("YXDGNX*/.Pc:9FNReF");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 66: 
StringReader stringReader = new StringReader("Z=)]");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 67: 
StringReader stringReader = new StringReader(";rX5J$[CPl].");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 68: 
StringReader stringReader = new StringReader("]@1)\u0004JBe1%&7VY{");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 69: 
StringReader stringReader = new StringReader("^j3gK5 &[%9]5##");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 70: 
StringReader stringReader = new StringReader("_k!4a5d|Puz9uWaB9Itz");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 71: 
StringReader stringReader = new StringReader("else");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 72: 
StringReader stringReader = new StringReader("hile");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 73: 
StringReader stringReader = new StringReader("impXr,");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 74: 
StringReader stringReader = new StringReader("j0Yb=pv");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 75: 
StringReader stringReader = new StringReader("k!5dPuz9uWaB9Itz");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 76: 
StringReader stringReader = new StringReader("l+");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 77: 
StringReader stringReader = new StringReader("m^0!Y2\"gW3uUu?Ah&5");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 78: 
StringReader stringReader = new StringReader("n;rX5^J$[CPl].");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 79: 
StringReader stringReader = new StringReader("void");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
stringReader.read();
javaParserTokenManager.getNextToken();
Test 80: 
StringReader stringReader = new StringReader("s]@Y`B ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 81: 
StringReader stringReader = new StringReader("t8ro:s");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 82: 
StringReader stringReader = new StringReader("void");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 83: 
StringReader stringReader = new StringReader("xf+cMa?)-lA{u?L>!p ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 84: 
StringReader stringReader = new StringReader("yRhF!D{^TS=sA");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 85: 
StringReader stringReader = new StringReader(":&zD.%#");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 86: 
StringReader stringReader = new StringReader("{");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 87: 
StringReader stringReader = new StringReader("}f-6yMq]KK1ac[Rh5");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 88: 
StringReader stringReader = new StringReader("~");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 89: 
byte[] byteArray = new byte[2];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, 761, (byte) (-106));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 761, column -106.  Encountered: \"\" (0), after : \"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 90: 
StringReader stringReader = new StringReader("^f(w:nBm1");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 91: 
StringReader stringReader = new StringReader("Fx-uv>w*Zc+;~b");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 92: 
StringReader stringReader = new StringReader("...");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 93: 
StringReader stringReader = new StringReader("||/");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 17, 17);
javaCharStream.readChar();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 94: 
StringReader stringReader = new StringReader("m^0!Y2\"gW3uUu?Ah&5");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 95: 
StringReader stringReader = new StringReader("Osby$-1^AoS2vl_m");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 96: 
StringReader stringReader = new StringReader("XWO/_X!?'+Kv!&>#");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 1, column 11.  Encountered: \"K\" (75), after : \"\\'+\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 97: 
StringReader stringReader = new StringReader("tAo:");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 98: 
StringReader stringReader = new StringReader("/Fh^m<");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 99: 
StringReader stringReader = new StringReader("tG 'Wl:F_9x");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 100: 
StringReader stringReader = new StringReader("pL2.VBG3}");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 101: 
StringReader stringReader = new StringReader("fN9 ;]e`3<~@K9");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 102: 
StringReader stringReader = new StringReader("_k!a5d|Puz9uWaB9Itz");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 103: 
StringReader stringReader = new StringReader("gQMR95lJ~4MA6O/;ud");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 104: 
StringReader stringReader = new StringReader(">S*@),wqFO?}Q*1+=`~");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.jjFillToken();
Test 105: 
StringReader stringReader = new StringReader("<T=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 106: 
StringReader stringReader = new StringReader("&W<5%mURv[Pl\"Gv<");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 107: 
StringReader stringReader = new StringReader("\">Y\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
stringReader.read();
javaParserTokenManager.getNextToken();
Test 108: 
StringReader stringReader = new StringReader("<ZNxh:^`KF)C`*");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 109: 
StringReader stringReader = new StringReader("t[ro:s");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 110: 
StringReader stringReader = new StringReader("c`qU;PG~Zv6Mb=mysx");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 111: 
StringReader stringReader = new StringReader("protec;ed");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 112: 
StringReader stringReader = new StringReader("default");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 113: 
StringReader stringReader = new StringReader("shXm#xq2;@%;");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 114: 
StringReader stringReader = new StringReader("interface");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 115: 
StringReader stringReader = new StringReader("cqr`</n8+O");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 116: 
StringReader stringReader = new StringReader("<token of kind 12>");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 117: 
StringReader stringReader = new StringReader("25>v:GXF\"Sj8?e{~");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 118: 
StringReader stringReader = new StringReader("extends");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 119: 
StringReader stringReader = new StringReader("4bEa<yD?ohTa1[");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 120: 
StringReader stringReader = new StringReader("={2&F>/^Rakn(");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 0, 0, 21);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 121: 
StringReader stringReader = new StringReader("||/");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
stringReader.reset();
javaParserTokenManager.getNextToken();
Test 122: 
StringReader stringReader = new StringReader("c&#`</d|+On");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
stringReader.read();
javaParserTokenManager.getNextToken();
Test 123: 
StringReader stringReader = new StringReader("c&#`</d|+On");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 124: 
byte[] byteArray = new byte[2];
byteArray[0] = (byte)43;
byteArray[1] = (byte)43;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, 35, (-616));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 125: 
StringReader stringReader = new StringReader(">>=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.readChar();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 126: 
StringReader stringReader = new StringReader("&=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 105, (byte) (-116), 91);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 127: 
StringReader stringReader = new StringReader("|=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 128: 
StringReader stringReader = new StringReader("\"^=\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
stringReader.read();
javaParserTokenManager.getNextToken();
Test 129: 
StringReader stringReader = new StringReader("n=rX5^J$[CPl].");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 130: 
StringReader stringReader = new StringReader("\"if\"");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 131: 
StringReader stringReader = new StringReader(">>>=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 132: 
StringReader stringReader = new StringReader("transient");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 133: 
StringReader stringReader = new StringReader("public");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 134: 
StringReader stringReader = new StringReader("nejS_'>");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 1, column 8.  Encountered: <EOF> after : \"\\'>\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 135: 
StringReader stringReader = new StringReader("gokz)F+=]");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 136: 
StringReader stringReader = new StringReader("null");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 137: 
StringReader stringReader = new StringReader("<<r");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 138: 
StringReader stringReader = new StringReader("new");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 139: 
StringReader stringReader = new StringReader("\">>\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
stringReader.read();
Token.GTToken nextToken = (Token.GTToken)javaParserTokenManager.getNextToken();
javaParserTokenManager.TokenLexicalActions(nextToken);
Test 140: 
StringReader stringReader = new StringReader("<<=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 141: 
StringReader stringReader = new StringReader("for");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 142: 
StringReader stringReader = new StringReader("brek");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 143: 
StringReader stringReader = new StringReader("goto");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 144: 
StringReader stringReader = new StringReader("\"class\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 31, 31);
javaCharStream.readChar();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 145: 
StringReader stringReader = new StringReader("\"clayss\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1660, 3);
javaCharStream.readChar();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 146: 
StringReader stringReader = new StringReader("true");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 147: 
StringReader stringReader = new StringReader("import");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 148: 
StringReader stringReader = new StringReader("break");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 149: 
StringReader stringReader = new StringReader("float");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 150: 
StringReader stringReader = new StringReader("thro:h");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 151: 
StringReader stringReader = new StringReader("while");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 152: 
StringReader stringReader = new StringReader("super");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 153: 
StringReader stringReader = new StringReader("impot");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 154: 
StringReader stringReader = new StringReader("boolean");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 89, 89);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 155: 
StringReader stringReader = new StringReader("double");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 156: 
StringReader stringReader = new StringReader("\"continue\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.readChar();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 157: 
StringReader stringReader = new StringReader("finally");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 158: 
StringReader stringReader = new StringReader("protected");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 159: 
StringReader stringReader = new StringReader("\"{)/[");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 87, 87);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.jjround = (-1);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 87, column 87.  Encountered: \"\\\"\" (34), after : \"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 160: 
StringReader stringReader = new StringReader("h9e/o9B|mS:R44T<g 3");
char[] charArray = new char[1];
stringReader.read(charArray);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 161: 
StringReader stringReader = new StringReader("\"{)/[");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 1, column 6.  Encountered: <EOF> after : \"\\\"{)/[\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 162: 
StringReader stringReader = new StringReader("\"volatile\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 163: 
byte[] byteArray = new byte[2];
byteArray[0] = (byte) (-43);
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, 761, (byte) (-106));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 761, column -106.  Encountered: \"\\ufffd\" (65533), after : \"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 164: 
StringReader stringReader = new StringReader("'qQ-d;,TTL-");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 1, column 3.  Encountered: \"Q\" (81), after : \"\\'q\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 165: 
byte[] byteArray = new byte[3];
byteArray[0] = (byte)53;
byteArray[1] = (byte) (-116);
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 166: 
byte[] byteArray = new byte[3];
byteArray[0] = (byte)73;
byteArray[1] = (byte) (-102);
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, 56, (byte)73, (byte)73);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 167: 
byte[] byteArray = new byte[2];
byteArray[0] = (byte) (-43);
byteArray[1] = (byte) (-106);
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, 761, (byte) (-106));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 168: 
StringReader stringReader = new StringReader("xuv>w*Zc+;Ub");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.ReInit(javaCharStream, 3);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 1, column 13.  Encountered: <EOF> after : \"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 169: 
byte[] byteArray = new byte[3];
byteArray[2] = (byte) (-119);
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
DataInputStream dataInputStream = new DataInputStream(byteArrayInputStream);
JavaCharStream javaCharStream = new JavaCharStream(dataInputStream, (byte)0, 2);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 1);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 0, column 5.  Encountered: <EOF> after : \"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 170: 
JavaParserTokenManager javaParserTokenManager = null;
try {
  javaParserTokenManager = new JavaParserTokenManager((JavaCharStream) null, 17);
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Error: Ignoring invalid lexical state : 17. State unchanged.
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 171: 
StringReader stringReader = new StringReader("oegb_K~Qhp|N");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
// Undeclared exception!
try { 
  javaParserTokenManager.SwitchTo((-460));
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Error: Ignoring invalid lexical state : -460. State unchanged.
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 172: 
StringReader stringReader = new StringReader(".7ck");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 173: 
StringReader stringReader = new StringReader("xno?[kC");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
// Undeclared exception!
try { 
  javaParserTokenManager.SwitchTo(401);
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Error: Ignoring invalid lexical state : 401. State unchanged.
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 174: 
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager((JavaCharStream) null);
javaParserTokenManager.SwitchTo(0);
Test 175: 
StringReader stringReader = new StringReader("\t");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 176: 
StringReader stringReader = new StringReader(">>");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 177: 
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager((JavaCharStream) null);
javaParserTokenManager.MoreLexicalActions();

* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 68%
* Total number of goals: 1707
* Number of covered goals: 1157
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 65%
* Total number of goals: 981
* Number of covered goals: 641
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 50%
* Total number of goals: 4
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 11
* Number of covered goals: 11
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 68%
* Total number of goals: 1707
* Number of covered goals: 1156
* Generated 178 tests with total length 806
* Resulting test suite's coverage: 70% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 23%
* Compiling and checking tests
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager((JavaCharStream) null);
javaParserTokenManager.ReInit((JavaCharStream) null);

** It was a parseable test case! 
refined test name is: testReInitWithNewInput
* Compiling Tests
refined test name is: testReInitJavaParserTokenManager
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: JavaParserTokenManager javaParserTokenManager = null;
try {
  javaParserTokenManager = new JavaParserTokenManager((JavaCharStream) null, 17);
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Error: Ignoring invalid lexical state : 17. State unchanged.
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}


** It was a parseable test case! 
refined test name is: testNullTokenStreamConstructorThrowsException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager((JavaCharStream) null);
javaParserTokenManager.SwitchTo(0);

** It was a parseable test case! 
refined test name is: testSwitchToMethodSetsCorrectToken
* Compiling Tests
refined test name is: testSwitchToSetsCurrentToken
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager((JavaCharStream) null);
javaParserTokenManager.MoreLexicalActions();

** It was a parseable test case! 
refined test name is: testCreateAndInvokeMoreLexicalActions
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:56:52.618 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar3651463583103696859.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:56:52.639 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3651463583103696859.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 20:56:52.699 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar3651463583103696859.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:56:52.700 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3651463583103696859.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:56:52.749 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar3651463583103696859.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:56:52.750 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3651463583103696859.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 20:56:52.798 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar3651463583103696859.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:56:52.800 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3651463583103696859.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 2 called: 1 to improve: false
[MASTER] 20:56:52.943 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar3651463583103696859.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:56:52.944 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3651463583103696859.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 1 called: 0 to improve: false
** Write a test suite: 3 called: 1 to improve: false
[MASTER] 20:56:53.090 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar3651463583103696859.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:56:53.093 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3651463583103696859.jar
[MASTER] 20:56:54.979 [logback-1] WARN  TimeController - Already entered in phase: INLINING. This will mess up the timing calculations.
* test suite isTestSuite: 181
Test 0: 
StringReader stringReader = new StringReader("\">>\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
stringReader.read();
Token.GTToken nextToken = (Token.GTToken)javaParserTokenManager.getNextToken();
javaParserTokenManager.TokenLexicalActions(nextToken);
Test 1: 
StringReader stringReader = new StringReader("Fx-uv>w*Zc+;~b");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.ReInit(javaCharStream, 2);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 1, column 15.  Encountered: <EOF> after : \"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 2: 
StringReader stringReader = new StringReader("2eU");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 3: 
StringReader stringReader = new StringReader("m~.]Bl");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.curLexState = (-1);
javaParserTokenManager.getNextToken();
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 1, column 7.  Encountered: <EOF> after : \"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 4: 
StringReader stringReader = new StringReader("_k!a5d|Puz9uWaB9Itz");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.setDebugStream((PrintStream) null);
Test 5: 
StringReader stringReader = new StringReader("]@1)\u0004JBe1%&7VY{");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 6: 
StringReader stringReader = new StringReader("assert");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 7: 
StringReader stringReader = new StringReader(">>");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 8: 
StringReader stringReader = new StringReader("brek");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 9: 
StringReader stringReader = new StringReader("impot");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 10: 
StringReader stringReader = new StringReader("doublhe");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 11: 
StringReader stringReader = new StringReader("proteced");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 12: 
StringReader stringReader = new StringReader("/Fh^m<");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 13: 
StringReader stringReader = new StringReader(".7ck");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 14: 
StringReader stringReader = new StringReader(";rX5J$[CPl].");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 15: 
StringReader stringReader = new StringReader("wI+ap1[");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 16: 
StringReader stringReader = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 17: 
StringReader stringReader = new StringReader("final");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 18: 
StringReader stringReader = new StringReader("_k!4a5d|Puz9uWaB9Itz");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 19: 
StringReader stringReader = new StringReader("\"volatile\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 20: 
StringReader stringReader = new StringReader("rMm#Nu]@QPCXiUk^M%");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 1, column 4.  Encountered: \"#\" (35), after : \"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 21: 
StringReader stringReader = new StringReader("$");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 22: 
StringReader stringReader = new StringReader("%7($6ahUP<[k:");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 23: 
StringReader stringReader = new StringReader("&W<5%mURv[Pl\"Gv<");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 24: 
StringReader stringReader = new StringReader("'J6|bZM&jrjaIdIj;[3");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 1, column 3.  Encountered: \"6\" (54), after : \"\\'J\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 25: 
StringReader stringReader = new StringReader(")\"I_5g/kR@qqn");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 26: 
StringReader stringReader = new StringReader("Q7Pk*CNa`u");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 27: 
StringReader stringReader = new StringReader("+=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 28: 
StringReader stringReader = new StringReader("1");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 29: 
StringReader stringReader = new StringReader("3$9#]S)t");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 30: 
StringReader stringReader = new StringReader("4i:m_o0V`DT:JW'I`");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 31: 
StringReader stringReader = new StringReader("5@;jNgS+WO6K>Z[/B");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 3175, 3175, 3175);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
Token nextToken = javaParserTokenManager.getNextToken();
javaParserTokenManager.SkipLexicalActions(nextToken);
Test 32: 
StringReader stringReader = new StringReader("6w_'eE#jveQ*FS0y'\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 33: 
StringReader stringReader = new StringReader("8W]:2)0&e5yVM)mZ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 34: 
StringReader stringReader = new StringReader(":&zD.%#");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 35: 
StringReader stringReader = new StringReader("<<Ar");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 36: 
StringReader stringReader = new StringReader("Z=)]");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 37: 
StringReader stringReader = new StringReader("4bEa<yD?ohTa1[");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 38: 
StringReader stringReader = new StringReader("@@&");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 39: 
StringReader stringReader = new StringReader("A+,`Q{r5_C3");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 40: 
StringReader stringReader = new StringReader("BapK{(YwPPy");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 41: 
StringReader stringReader = new StringReader("CNc0");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 42: 
StringReader stringReader = new StringReader("Diic/3gyL");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 43: 
StringReader stringReader = new StringReader("<EOF> ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 44: 
StringReader stringReader = new StringReader("Fx-uv>w*Zc+;~b");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 45: 
StringReader stringReader = new StringReader("Giic/3gyL");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 46: 
StringReader stringReader = new StringReader("Har`.e*f");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 1, column 4.  Encountered: \"`\" (96), after : \"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 47: 
StringReader stringReader = new StringReader("q|J");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 48: 
StringReader stringReader = new StringReader("K[>5m[$'S/rtW");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 49: 
StringReader stringReader = new StringReader("*=L&twUfU5");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.ReadByte();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 50: 
StringReader stringReader = new StringReader("MMD~");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 87, 87);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 51: 
StringReader stringReader = new StringReader("NnuzEwLnhjXkdWBcX");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 52: 
StringReader stringReader = new StringReader("Oj<Vq-A+W\":I| |XGr_");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 53: 
StringReader stringReader = new StringReader("Pf/k0ug0");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 54: 
StringReader stringReader = new StringReader("Rxj48p*xG~");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 55: 
StringReader stringReader = new StringReader("HS)rvU4e");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 17, 17);
javaCharStream.readChar();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 56: 
StringReader stringReader = new StringReader("TOo7cY0%ZI0~@\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 57: 
StringReader stringReader = new StringReader(".U z&co}!sN");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 58: 
StringReader stringReader = new StringReader(";V_p6pWCyX(fy(g/");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 59: 
StringReader stringReader = new StringReader("9W|c2K");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 60: 
StringReader stringReader = new StringReader("XXi8V.9V{E+nS5");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 61: 
StringReader stringReader = new StringReader("YXDGNX*/.Pc:9FNReF");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 62: 
StringReader stringReader = new StringReader("extends");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 63: 
StringReader stringReader = new StringReader("gokz)F+=]");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 64: 
StringReader stringReader = new StringReader("hile");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 65: 
StringReader stringReader = new StringReader("j0Yb=pv");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 66: 
StringReader stringReader = new StringReader("k!5dPuz9uWaB9Itz");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 67: 
StringReader stringReader = new StringReader("l+");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 68: 
StringReader stringReader = new StringReader("m^0!Y2\"gW3uUu?Ah&5");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 69: 
StringReader stringReader = new StringReader("n;rX5^J$[CPl].");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 70: 
StringReader stringReader = new StringReader("void");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
stringReader.read();
javaParserTokenManager.getNextToken();
Test 71: 
StringReader stringReader = new StringReader("t8ro:s");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 72: 
StringReader stringReader = new StringReader("Fx-uLu>w*C+;~W");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 73: 
StringReader stringReader = new StringReader("void");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 74: 
StringReader stringReader = new StringReader("{");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 75: 
StringReader stringReader = new StringReader("}f-6yMq]KK1ac[Rh5");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 76: 
StringReader stringReader = new StringReader("~");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 77: 
byte[] byteArray = new byte[2];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, 761, (byte) (-106));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 761, column -106.  Encountered: \"\" (0), after : \"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 78: 
StringReader stringReader = new StringReader("&&");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 79: 
StringReader stringReader = new StringReader(".'g4");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 80: 
StringReader stringReader = new StringReader("^f(w:nBm1");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 81: 
StringReader stringReader = new StringReader("...");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 82: 
StringReader stringReader = new StringReader("||/");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 17, 17);
javaCharStream.readChar();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 83: 
StringReader stringReader = new StringReader("Osby$-1^AoS2vl_m");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 84: 
StringReader stringReader = new StringReader("|2r\"Z[-.mR");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 0, 0);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 0);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 0, column 10.  Encountered: <EOF> after : \"\\\"Z[-.mR\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 85: 
StringReader stringReader = new StringReader("XWO/_X!?'+Kv!&>#");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 1, column 11.  Encountered: \"K\" (75), after : \"\\'+\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 86: 
StringReader stringReader = new StringReader("tAo:");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 87: 
StringReader stringReader = new StringReader(" gBSo");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 88: 
StringReader stringReader = new StringReader("yRhF!D{^TS=sA");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 89: 
StringReader stringReader = new StringReader("tG 'Wl:F_9x");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 90: 
StringReader stringReader = new StringReader("*H>\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 105, 105, 120);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 91: 
StringReader stringReader = new StringReader("pL2.VBG3}");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 92: 
StringReader stringReader = new StringReader("fN9 ;]e`3<~@K9");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 93: 
StringReader stringReader = new StringReader("_k!a5d|Puz9uWaB9Itz");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 94: 
StringReader stringReader = new StringReader("gQMR95lJ~4MA6O/;ud");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 95: 
StringReader stringReader = new StringReader("?:.,&RD9$41q 4<");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 96: 
StringReader stringReader = new StringReader(">S*@),wqFO?}Q*1+=`~");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.jjFillToken();
Test 97: 
StringReader stringReader = new StringReader("<T=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 98: 
StringReader stringReader = new StringReader("\">Y\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
stringReader.read();
javaParserTokenManager.getNextToken();
Test 99: 
StringReader stringReader = new StringReader("<ZNxh:^`KF)C`*");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 100: 
StringReader stringReader = new StringReader("t[ro:s");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 101: 
StringReader stringReader = new StringReader("l>hBbPR1 >$1");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 102: 
StringReader stringReader = new StringReader("s]@Y`B ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 103: 
StringReader stringReader = new StringReader(";/^VAF.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 104: 
StringReader stringReader = new StringReader("c`qU;PG~Zv6Mb=mysx");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 105: 
StringReader stringReader = new StringReader("xf+cMa?)-lA{u?L>!p ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 106: 
StringReader stringReader = new StringReader("protec;ed");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 107: 
StringReader stringReader = new StringReader("new");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 108: 
StringReader stringReader = new StringReader("^j3gK5 &[%9]5##");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 109: 
StringReader stringReader = new StringReader("0tk");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 110: 
StringReader stringReader = new StringReader("float");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 111: 
StringReader stringReader = new StringReader("!pw,");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 112: 
StringReader stringReader = new StringReader("cqr`</n8+O");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 113: 
StringReader stringReader = new StringReader("<token of kind 12>");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 114: 
StringReader stringReader = new StringReader("25>v:GXF\"Sj8?e{~");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 115: 
StringReader stringReader = new StringReader("={2&F>/^Rakn(");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 0, 0, 21);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 116: 
StringReader stringReader = new StringReader("||/");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
stringReader.reset();
javaParserTokenManager.getNextToken();
Test 117: 
StringReader stringReader = new StringReader("c&#`</d|+On");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
stringReader.read();
javaParserTokenManager.getNextToken();
Test 118: 
StringReader stringReader = new StringReader("c&#`</d|+On");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 119: 
byte[] byteArray = new byte[2];
byteArray[0] = (byte)43;
byteArray[1] = (byte)43;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, 35, (-616));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 120: 
StringReader stringReader = new StringReader("/FZUh^<");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.readChar();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 0);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 121: 
StringReader stringReader = new StringReader("==");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 122: 
StringReader stringReader = new StringReader(">>=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.readChar();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 123: 
StringReader stringReader = new StringReader("-=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 124: 
StringReader stringReader = new StringReader("n=rX5^J$[CPl].");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 125: 
StringReader stringReader = new StringReader("&=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 105, (byte) (-116), 91);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 126: 
StringReader stringReader = new StringReader("|=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 127: 
StringReader stringReader = new StringReader("\"^=\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
stringReader.read();
javaParserTokenManager.getNextToken();
Test 128: 
StringReader stringReader = new StringReader("\"%=\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
stringReader.read();
javaParserTokenManager.getNextToken();
Test 129: 
StringReader stringReader = new StringReader("\"if\"");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 130: 
StringReader stringReader = new StringReader(">>>=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 131: 
StringReader stringReader = new StringReader("shXm#xq2;@%;");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 132: 
StringReader stringReader = new StringReader("\"clayss\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1660, 3);
javaCharStream.readChar();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 133: 
StringReader stringReader = new StringReader("public");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 134: 
StringReader stringReader = new StringReader("default");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 135: 
StringReader stringReader = new StringReader("nejS_'>");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 1, column 8.  Encountered: <EOF> after : \"\\'>\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 136: 
StringReader stringReader = new StringReader("null");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 137: 
StringReader stringReader = new StringReader("<<r");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 138: 
StringReader stringReader = new StringReader("<<=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 139: 
StringReader stringReader = new StringReader("for");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 140: 
StringReader stringReader = new StringReader("interface");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 141: 
StringReader stringReader = new StringReader("impXr,");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 142: 
StringReader stringReader = new StringReader("transient");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 143: 
StringReader stringReader = new StringReader("\"class\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 31, 31);
javaCharStream.readChar();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 144: 
StringReader stringReader = new StringReader("else");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 145: 
StringReader stringReader = new StringReader("true");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 146: 
StringReader stringReader = new StringReader("goto");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 147: 
StringReader stringReader = new StringReader("break");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 148: 
StringReader stringReader = new StringReader("thro:h");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 149: 
StringReader stringReader = new StringReader("while");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 150: 
StringReader stringReader = new StringReader("super");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 151: 
StringReader stringReader = new StringReader("boolean");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 89, 89);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 152: 
StringReader stringReader = new StringReader("double");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 153: 
StringReader stringReader = new StringReader("\"continue\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.readChar();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 154: 
StringReader stringReader = new StringReader("import");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 155: 
StringReader stringReader = new StringReader("finally");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 156: 
StringReader stringReader = new StringReader("protected");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 157: 
StringReader stringReader = new StringReader("\"{)/[");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 87, 87);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.jjround = (-1);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 87, column 87.  Encountered: \"\\\"\" (34), after : \"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 158: 
StringReader stringReader = new StringReader("h9e/o9B|mS:R44T<g 3");
char[] charArray = new char[1];
stringReader.read(charArray);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 159: 
StringReader stringReader = new StringReader("m^0!Y2\"gW3uUu?Ah&5");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 160: 
StringReader stringReader = new StringReader("\"{)/[");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 1, column 6.  Encountered: <EOF> after : \"\\\"{)/[\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 161: 
byte[] byteArray = new byte[3];
byteArray[0] = (byte)53;
byteArray[1] = (byte) (-116);
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 162: 
StringReader stringReader = new StringReader("'qQ-d;,TTL-");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 1, column 3.  Encountered: \"Q\" (81), after : \"\\'q\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 163: 
StringReader stringReader = new StringReader("9lJMdAZR^xj{f<");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 164: 
StringReader stringReader = new StringReader("\"\n\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 1, column 2.  Encountered: \"\\n\" (10), after : \"\\\"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 165: 
byte[] byteArray = new byte[2];
byteArray[0] = (byte) (-43);
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, 761, (byte) (-106));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 761, column -106.  Encountered: \"\\ufffd\" (65533), after : \"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 166: 
byte[] byteArray = new byte[3];
byteArray[0] = (byte)73;
byteArray[1] = (byte) (-102);
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, 56, (byte)73, (byte)73);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 167: 
byte[] byteArray = new byte[2];
byteArray[0] = (byte) (-43);
byteArray[1] = (byte) (-106);
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, 761, (byte) (-106));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 168: 
StringReader stringReader = new StringReader("xuv>w*Zc+;Ub");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.ReInit(javaCharStream, 3);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 1, column 13.  Encountered: <EOF> after : \"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 169: 
byte[] byteArray = new byte[3];
byteArray[2] = (byte) (-119);
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
DataInputStream dataInputStream = new DataInputStream(byteArrayInputStream);
JavaCharStream javaCharStream = new JavaCharStream(dataInputStream, (byte)0, 2);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 1);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 0, column 5.  Encountered: <EOF> after : \"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 170: 
JavaParserTokenManager javaParserTokenManager = null;
try {
  javaParserTokenManager = new JavaParserTokenManager((JavaCharStream) null, 17);
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Error: Ignoring invalid lexical state : 17. State unchanged.
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 171: 
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager((JavaCharStream) null);
javaParserTokenManager.ReInit((JavaCharStream) null);
Test 172: 
StringReader stringReader = new StringReader(">>=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 173: 
StringReader stringReader = new StringReader("/>");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 174: 
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager((JavaCharStream) null);
javaParserTokenManager.SwitchTo(0);
Test 175: 
StringReader stringReader = new StringReader("xno?[kC");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
// Undeclared exception!
try { 
  javaParserTokenManager.SwitchTo(401);
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Error: Ignoring invalid lexical state : 401. State unchanged.
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 176: 
StringReader stringReader = new StringReader("oegb_K~Qhp|N");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
// Undeclared exception!
try { 
  javaParserTokenManager.SwitchTo((-460));
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Error: Ignoring invalid lexical state : -460. State unchanged.
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 177: 
StringReader stringReader = new StringReader("\t");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 178: 
StringReader stringReader = new StringReader("bre");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 179: 
StringReader stringReader = new StringReader("brea");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 180: 
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager((JavaCharStream) null);
javaParserTokenManager.MoreLexicalActions();

* Minimizing test suite
[MASTER] 20:57:53.352 [logback-1] WARN  TimeController - Already entered in phase: MINIMIZATION. This will mess up the timing calculations.
* test suite isTestSuite: 177
Test 0: 
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager((JavaCharStream) null);
javaParserTokenManager.ReInit((JavaCharStream) null);
Test 1: 
StringReader stringReader = new StringReader(" gBSo");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 2: 
StringReader stringReader = new StringReader("1");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 3: 
StringReader stringReader = new StringReader("m~.]Bl");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.curLexState = (-1);
javaParserTokenManager.getNextToken();
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 1, column 7.  Encountered: <EOF> after : \"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 4: 
StringReader stringReader = new StringReader("_k!a5d|Puz9uWaB9Itz");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.setDebugStream((PrintStream) null);
Test 5: 
StringReader stringReader = new StringReader("&&");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 6: 
StringReader stringReader = new StringReader("assert");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 7: 
StringReader stringReader = new StringReader("Fx-uv>w*Zc+;~b");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.ReInit(javaCharStream, 2);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 1, column 15.  Encountered: <EOF> after : \"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 8: 
StringReader stringReader = new StringReader("<<Ar");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 9: 
StringReader stringReader = new StringReader("bre");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 10: 
StringReader stringReader = new StringReader("brea");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 11: 
StringReader stringReader = new StringReader("doublhe");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 12: 
StringReader stringReader = new StringReader("proteced");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 13: 
StringReader stringReader = new StringReader("/>");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 14: 
StringReader stringReader = new StringReader(".'g4");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 15: 
StringReader stringReader = new StringReader("!pw,");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 16: 
StringReader stringReader = new StringReader("wI+ap1[");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 17: 
StringReader stringReader = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 18: 
StringReader stringReader = new StringReader("final");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 19: 
StringReader stringReader = new StringReader("rMm#Nu]@QPCXiUk^M%");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 1, column 4.  Encountered: \"#\" (35), after : \"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 20: 
StringReader stringReader = new StringReader("$");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 21: 
StringReader stringReader = new StringReader("\"%=\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
stringReader.read();
javaParserTokenManager.getNextToken();
Test 22: 
StringReader stringReader = new StringReader("'J6|bZM&jrjaIdIj;[3");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 1, column 3.  Encountered: \"6\" (54), after : \"\\'J\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 23: 
StringReader stringReader = new StringReader("%7($6ahUP<[k:");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 24: 
StringReader stringReader = new StringReader(")\"I_5g/kR@qqn");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 25: 
StringReader stringReader = new StringReader("*H>\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 105, 105, 120);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 26: 
StringReader stringReader = new StringReader("+=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 27: 
StringReader stringReader = new StringReader("?:.,&RD9$41q 4<");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 28: 
StringReader stringReader = new StringReader("-=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 29: 
StringReader stringReader = new StringReader("0tk");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 30: 
StringReader stringReader = new StringReader("2eU");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 31: 
StringReader stringReader = new StringReader("3$9#]S)t");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 32: 
StringReader stringReader = new StringReader("4i:m_o0V`DT:JW'I`");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 33: 
StringReader stringReader = new StringReader("5@;jNgS+WO6K>Z[/B");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 3175, 3175, 3175);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
Token nextToken = javaParserTokenManager.getNextToken();
javaParserTokenManager.SkipLexicalActions(nextToken);
Test 34: 
StringReader stringReader = new StringReader("6w_'eE#jveQ*FS0y'\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 35: 
StringReader stringReader = new StringReader("8W]:2)0&e5yVM)mZ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 36: 
StringReader stringReader = new StringReader("9lJMdAZR^xj{f<");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 37: 
StringReader stringReader = new StringReader(";/^VAF.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 38: 
StringReader stringReader = new StringReader("==");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 39: 
StringReader stringReader = new StringReader(">>=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 40: 
StringReader stringReader = new StringReader("@@&");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 41: 
StringReader stringReader = new StringReader("A+,`Q{r5_C3");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 42: 
StringReader stringReader = new StringReader("BapK{(YwPPy");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 43: 
StringReader stringReader = new StringReader("CNc0");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 44: 
StringReader stringReader = new StringReader("Diic/3gyL");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 45: 
StringReader stringReader = new StringReader("<EOF> ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 46: 
StringReader stringReader = new StringReader("/FZUh^<");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.readChar();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 0);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 47: 
StringReader stringReader = new StringReader("Giic/3gyL");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 48: 
StringReader stringReader = new StringReader("Har`.e*f");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 1, column 4.  Encountered: \"`\" (96), after : \"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 49: 
StringReader stringReader = new StringReader("q|J");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 50: 
StringReader stringReader = new StringReader("K[>5m[$'S/rtW");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 51: 
StringReader stringReader = new StringReader("*=L&twUfU5");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.ReadByte();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 52: 
StringReader stringReader = new StringReader("MMD~");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 87, 87);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 53: 
StringReader stringReader = new StringReader("NnuzEwLnhjXkdWBcX");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 54: 
StringReader stringReader = new StringReader("Oj<Vq-A+W\":I| |XGr_");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 55: 
StringReader stringReader = new StringReader("Pf/k0ug0");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 56: 
StringReader stringReader = new StringReader("Q7Pk*CNa`u");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 57: 
StringReader stringReader = new StringReader("Rxj48p*xG~");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 58: 
StringReader stringReader = new StringReader("HS)rvU4e");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 17, 17);
javaCharStream.readChar();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 59: 
StringReader stringReader = new StringReader("TOo7cY0%ZI0~@\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 60: 
StringReader stringReader = new StringReader(".U z&co}!sN");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 61: 
StringReader stringReader = new StringReader(";V_p6pWCyX(fy(g/");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 62: 
StringReader stringReader = new StringReader("9W|c2K");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 63: 
StringReader stringReader = new StringReader("XXi8V.9V{E+nS5");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 64: 
StringReader stringReader = new StringReader("YXDGNX*/.Pc:9FNReF");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 65: 
StringReader stringReader = new StringReader("Z=)]");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 66: 
StringReader stringReader = new StringReader(";rX5J$[CPl].");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 67: 
StringReader stringReader = new StringReader("]@1)\u0004JBe1%&7VY{");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 68: 
StringReader stringReader = new StringReader("^j3gK5 &[%9]5##");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 69: 
StringReader stringReader = new StringReader("_k!4a5d|Puz9uWaB9Itz");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 70: 
StringReader stringReader = new StringReader("else");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 71: 
StringReader stringReader = new StringReader("hile");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 72: 
StringReader stringReader = new StringReader("impXr,");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 73: 
StringReader stringReader = new StringReader("j0Yb=pv");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 74: 
StringReader stringReader = new StringReader("k!5dPuz9uWaB9Itz");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 75: 
StringReader stringReader = new StringReader("l+");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 76: 
StringReader stringReader = new StringReader("m^0!Y2\"gW3uUu?Ah&5");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 77: 
StringReader stringReader = new StringReader("n;rX5^J$[CPl].");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 78: 
StringReader stringReader = new StringReader("void");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
stringReader.read();
javaParserTokenManager.getNextToken();
Test 79: 
StringReader stringReader = new StringReader("s]@Y`B ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 80: 
StringReader stringReader = new StringReader("t8ro:s");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 81: 
StringReader stringReader = new StringReader("void");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 82: 
StringReader stringReader = new StringReader("xf+cMa?)-lA{u?L>!p ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 83: 
StringReader stringReader = new StringReader("yRhF!D{^TS=sA");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 84: 
StringReader stringReader = new StringReader(":&zD.%#");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 85: 
StringReader stringReader = new StringReader("{");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 86: 
StringReader stringReader = new StringReader("}f-6yMq]KK1ac[Rh5");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 87: 
StringReader stringReader = new StringReader("~");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 88: 
byte[] byteArray = new byte[2];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, 761, (byte) (-106));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 761, column -106.  Encountered: \"\" (0), after : \"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 89: 
StringReader stringReader = new StringReader("^f(w:nBm1");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 90: 
StringReader stringReader = new StringReader("Fx-uv>w*Zc+;~b");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 91: 
StringReader stringReader = new StringReader("...");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 92: 
StringReader stringReader = new StringReader("||/");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 17, 17);
javaCharStream.readChar();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 93: 
StringReader stringReader = new StringReader("m^0!Y2\"gW3uUu?Ah&5");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 94: 
StringReader stringReader = new StringReader("Osby$-1^AoS2vl_m");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 95: 
StringReader stringReader = new StringReader("|2r\"Z[-.mR");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 0, 0);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 0);
javaParserTokenManager.getNextToken();
Test 96: 
StringReader stringReader = new StringReader("XWO/_X!?'+Kv!&>#");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 1, column 11.  Encountered: \"K\" (75), after : \"\\'+\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 97: 
StringReader stringReader = new StringReader("tAo:");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 98: 
StringReader stringReader = new StringReader("/Fh^m<");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 99: 
StringReader stringReader = new StringReader("tG 'Wl:F_9x");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 100: 
StringReader stringReader = new StringReader("pL2.VBG3}");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 101: 
StringReader stringReader = new StringReader("fN9 ;]e`3<~@K9");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 102: 
StringReader stringReader = new StringReader("_k!a5d|Puz9uWaB9Itz");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 103: 
StringReader stringReader = new StringReader("gQMR95lJ~4MA6O/;ud");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 104: 
StringReader stringReader = new StringReader(">S*@),wqFO?}Q*1+=`~");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.jjFillToken();
Test 105: 
StringReader stringReader = new StringReader("<T=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 106: 
StringReader stringReader = new StringReader("&W<5%mURv[Pl\"Gv<");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 107: 
StringReader stringReader = new StringReader("\">Y\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
stringReader.read();
javaParserTokenManager.getNextToken();
Test 108: 
StringReader stringReader = new StringReader("<ZNxh:^`KF)C`*");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 109: 
StringReader stringReader = new StringReader("t[ro:s");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 110: 
StringReader stringReader = new StringReader("c`qU;PG~Zv6Mb=mysx");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 111: 
StringReader stringReader = new StringReader("protec;ed");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 112: 
StringReader stringReader = new StringReader("default");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 113: 
StringReader stringReader = new StringReader("shXm#xq2;@%;");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 114: 
StringReader stringReader = new StringReader("interface");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 115: 
StringReader stringReader = new StringReader("cqr`</n8+O");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 116: 
StringReader stringReader = new StringReader("<token of kind 12>");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 117: 
StringReader stringReader = new StringReader("25>v:GXF\"Sj8?e{~");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 118: 
StringReader stringReader = new StringReader("extends");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 119: 
StringReader stringReader = new StringReader("4bEa<yD?ohTa1[");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 120: 
StringReader stringReader = new StringReader("={2&F>/^Rakn(");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 0, 0, 21);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 121: 
StringReader stringReader = new StringReader("||/");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
stringReader.reset();
javaParserTokenManager.getNextToken();
Test 122: 
StringReader stringReader = new StringReader("c&#`</d|+On");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
stringReader.read();
javaParserTokenManager.getNextToken();
Test 123: 
StringReader stringReader = new StringReader("c&#`</d|+On");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 124: 
byte[] byteArray = new byte[2];
byteArray[0] = (byte)43;
byteArray[1] = (byte)43;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, 35, (-616));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 125: 
StringReader stringReader = new StringReader(">>=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.readChar();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 126: 
StringReader stringReader = new StringReader("&=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 105, (byte) (-116), 91);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 127: 
StringReader stringReader = new StringReader("|=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 128: 
StringReader stringReader = new StringReader("\"^=\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
stringReader.read();
javaParserTokenManager.getNextToken();
Test 129: 
StringReader stringReader = new StringReader("n=rX5^J$[CPl].");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 130: 
StringReader stringReader = new StringReader("\"if\"");
stringReader.read();
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 131: 
StringReader stringReader = new StringReader(">>>=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 132: 
StringReader stringReader = new StringReader("transient");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 133: 
StringReader stringReader = new StringReader("public");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 134: 
StringReader stringReader = new StringReader("nejS_'>");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 1, column 8.  Encountered: <EOF> after : \"\\'>\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 135: 
StringReader stringReader = new StringReader("gokz)F+=]");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 136: 
StringReader stringReader = new StringReader("null");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 137: 
StringReader stringReader = new StringReader("<<r");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 138: 
StringReader stringReader = new StringReader("new");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 139: 
StringReader stringReader = new StringReader("\">>\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
stringReader.read();
Token.GTToken nextToken = (Token.GTToken)javaParserTokenManager.getNextToken();
javaParserTokenManager.TokenLexicalActions(nextToken);
Test 140: 
StringReader stringReader = new StringReader("<<=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 141: 
StringReader stringReader = new StringReader("for");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 142: 
StringReader stringReader = new StringReader("brek");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 143: 
StringReader stringReader = new StringReader("goto");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 144: 
StringReader stringReader = new StringReader("\"class\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 31, 31);
javaCharStream.readChar();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 145: 
StringReader stringReader = new StringReader("\"clayss\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 1660, 3);
javaCharStream.readChar();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 146: 
StringReader stringReader = new StringReader("true");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 147: 
StringReader stringReader = new StringReader("import");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 148: 
StringReader stringReader = new StringReader("break");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 149: 
StringReader stringReader = new StringReader("float");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 150: 
StringReader stringReader = new StringReader("thro:h");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 151: 
StringReader stringReader = new StringReader("while");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 152: 
StringReader stringReader = new StringReader("super");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 153: 
StringReader stringReader = new StringReader("impot");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 154: 
StringReader stringReader = new StringReader("boolean");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 89, 89);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 155: 
StringReader stringReader = new StringReader("double");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 156: 
StringReader stringReader = new StringReader("\"continue\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
javaCharStream.readChar();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 157: 
StringReader stringReader = new StringReader("finally");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 158: 
StringReader stringReader = new StringReader("protected");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 159: 
StringReader stringReader = new StringReader("\"{)/[");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 87, 87);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.jjround = (-1);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 87, column 87.  Encountered: \"\\\"\" (34), after : \"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 160: 
StringReader stringReader = new StringReader("h9e/o9B|mS:R44T<g 3");
char[] charArray = new char[1];
stringReader.read(charArray);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 161: 
StringReader stringReader = new StringReader("\"{)/[");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 1, column 6.  Encountered: <EOF> after : \"\\\"{)/[\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 162: 
StringReader stringReader = new StringReader("\"volatile\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 163: 
byte[] byteArray = new byte[2];
byteArray[0] = (byte) (-43);
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, 761, (byte) (-106));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 761, column -106.  Encountered: \"\\ufffd\" (65533), after : \"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 164: 
StringReader stringReader = new StringReader("'qQ-d;,TTL-");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 1, column 3.  Encountered: \"Q\" (81), after : \"\\'q\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 165: 
byte[] byteArray = new byte[3];
byteArray[0] = (byte)53;
byteArray[1] = (byte) (-116);
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 166: 
byte[] byteArray = new byte[3];
byteArray[0] = (byte)73;
byteArray[1] = (byte) (-102);
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, 56, (byte)73, (byte)73);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 167: 
byte[] byteArray = new byte[2];
byteArray[0] = (byte) (-43);
byteArray[1] = (byte) (-106);
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, 761, (byte) (-106));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 168: 
StringReader stringReader = new StringReader("xuv>w*Zc+;Ub");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.ReInit(javaCharStream, 3);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 1, column 13.  Encountered: <EOF> after : \"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 169: 
byte[] byteArray = new byte[3];
byteArray[2] = (byte) (-119);
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
DataInputStream dataInputStream = new DataInputStream(byteArrayInputStream);
JavaCharStream javaCharStream = new JavaCharStream(dataInputStream, (byte)0, 2);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 1);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 0, column 5.  Encountered: <EOF> after : \"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 170: 
StringReader stringReader = new StringReader("oegb_K~Qhp|N");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
// Undeclared exception!
try { 
  javaParserTokenManager.SwitchTo((-460));
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Error: Ignoring invalid lexical state : -460. State unchanged.
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 171: 
StringReader stringReader = new StringReader(".7ck");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 172: 
StringReader stringReader = new StringReader("xno?[kC");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
// Undeclared exception!
try { 
  javaParserTokenManager.SwitchTo(401);
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Error: Ignoring invalid lexical state : 401. State unchanged.
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 173: 
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager((JavaCharStream) null);
javaParserTokenManager.SwitchTo(0);
Test 174: 
StringReader stringReader = new StringReader("\t");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 175: 
StringReader stringReader = new StringReader(">>");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 176: 
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager((JavaCharStream) null);
javaParserTokenManager.MoreLexicalActions();

* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 68%
* Total number of goals: 1707
* Number of covered goals: 1157
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 65%
* Total number of goals: 981
* Number of covered goals: 641
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 50%
* Total number of goals: 4
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 11
* Number of covered goals: 11
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 68%
* Total number of goals: 1707
* Number of covered goals: 1156
[MASTER] 20:57:59.372 [logback-1] WARN  TimeController - Already entered in phase: COVERAGE_ANALYSIS. This will mess up the timing calculations.
* Generated 177 tests with total length 805
* Resulting test suite's coverage: 70% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 22%
* Compiling and checking tests
[MASTER] 20:59:10.531 [logback-1] WARN  TimeController - Already entered in phase: ASSERTION_GENERATION. This will mess up the timing calculations.
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:59:21.508 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar3651463583103696859.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:59:21.509 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3651463583103696859.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:59:21.597 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar3651463583103696859.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
[MASTER] 20:59:21.598 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3651463583103696859.jar
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:59:21.663 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar3651463583103696859.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:59:21.664 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3651463583103696859.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
[MASTER] 20:59:21.807 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar3651463583103696859.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:59:21.807 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3651463583103696859.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
[MASTER] 20:59:21.968 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar3651463583103696859.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:59:21.969 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3651463583103696859.jar
* Writing tests to file
[MASTER] 20:59:21.973 [logback-1] WARN  TimeController - Already entered in phase: JUNIT_CHECK. This will mess up the timing calculations.
* Writing JUnit test case 'JavaParserTokenManager_ESTest' to evosuite-tests
** Write a test suite: 1 called: 0 to improve: false
** Write a test suite: 3 called: 1 to improve: false
* Writing JUnit test case 'JavaParserTokenManager_Original_ESTest' to evosuite-tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
* Done!

* Computation finished
