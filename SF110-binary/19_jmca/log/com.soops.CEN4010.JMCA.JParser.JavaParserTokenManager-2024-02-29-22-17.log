* EvoSuite 1.2.1-SNAPSHOT
* Going to generate test cases for class: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
* Starting Client-0
* Properties loaded from /home/ubuntu/UTestGen/Evaluation/getting_results/dataset/SF110/19_jmca/evosuite-files/evosuite.properties
* Connecting to master process on port 15088
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 22:17:16.087 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 22:17:16.090 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 22:17:16.090 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 22:17:16.094 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
* Test criteria:
  - Branch Coverage
  - Line Coverage
  - Method-Output Coverage
  - Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 4410
[Progress:>                             0%] [Cov:>                                  0%]* Using seed 1709245033743
* Starting evolution
* Initial Number of Goals in DynaMOSA = 713 / 4410
[Progress:>                             0%] [Cov:=========>                         28%][Progress:>                             0%] [Cov:============>                      35%][Progress:>                             1%] [Cov:=================>                 49%][Progress:>                             2%] [Cov:=================>                 49%][Progress:>                             2%] [Cov:=================>                 50%][Progress:>                             3%] [Cov:=================>                 50%][Progress:=>                            4%] [Cov:=================>                 50%][Progress:=>                            4%] [Cov:=================>                 50%][Progress:=>                            5%] [Cov:=================>                 51%][Progress:=>                            5%] [Cov:=================>                 51%][Progress:=>                            6%] [Cov:==================>                52%][Progress:==>                           7%] [Cov:==================>                52%][Progress:==>                           7%] [Cov:==================>                52%][Progress:===>                          13%] [Cov:==================>                52%][Progress:=====>                        19%] [Cov:==================>                52%][Progress:=====>                        19%] [Cov:==================>                53%][Progress:======>                       20%] [Cov:==================>                53%][Progress:======>                       20%] [Cov:==================>                54%][Progress:======>                       21%] [Cov:==================>                54%][Progress:======>                       21%] [Cov:==================>                54%][Progress:======>                       22%] [Cov:===================>               56%][Progress:======>                       22%] [Cov:===================>               56%][Progress:======>                       23%] [Cov:===================>               57%][Progress:========>                     28%] [Cov:===================>               57%][Progress:========>                     29%] [Cov:===================>               57%][Progress:========>                     29%] [Cov:====================>              58%][Progress:=========>                    30%] [Cov:====================>              58%][Progress:=========>                    31%] [Cov:====================>              58%][Progress:=========>                    31%] [Cov:====================>              58%][Progress:=========>                    32%] [Cov:====================>              59%][Progress:=========>                    32%] [Cov:====================>              59%][Progress:=========>                    33%] [Cov:====================>              59%][Progress:=========>                    33%] [Cov:====================>              59%][Progress:==========>                   34%] [Cov:====================>              59%][Progress:===========>                  39%] [Cov:=====================>             60%][Progress:===========>                  39%] [Cov:=====================>             60%][Progress:============>                 40%] [Cov:=====================>             60%][Progress:============>                 40%] [Cov:=====================>             60%][Progress:============>                 41%] [Cov:=====================>             61%][Progress:============>                 41%] [Cov:=====================>             61%][Progress:============>                 42%] [Cov:=====================>             61%][Progress:============>                 42%] [Cov:=====================>             61%][Progress:============>                 43%] [Cov:=====================>             61%][Progress:============>                 43%] [Cov:=====================>             61%][Progress:=============>                44%] [Cov:=====================>             61%][Progress:=============>                44%] [Cov:=====================>             61%][Progress:=============>                45%] [Cov:=====================>             61%][Progress:=============>                45%] [Cov:=====================>             62%][Progress:=============>                46%] [Cov:=====================>             62%][Progress:=============>                46%] [Cov:=====================>             62%][Progress:==============>               47%] [Cov:=====================>             62%][Progress:==============>               47%] [Cov:=====================>             62%][Progress:==============>               48%] [Cov:=====================>             62%][Progress:==============>               49%] [Cov:======================>            63%][Progress:==============>               49%] [Cov:======================>            63%][Progress:===============>              50%] [Cov:======================>            63%][Progress:================>             56%] [Cov:======================>            63%][Progress:================>             56%] [Cov:======================>            63%][Progress:=================>            57%] [Cov:======================>            63%][Progress:=================>            57%] [Cov:======================>            63%][Progress:=================>            58%] [Cov:======================>            63%][Progress:=================>            58%] [Cov:======================>            63%][Progress:===================>          64%] [Cov:======================>            64%][Progress:===================>          64%] [Cov:======================>            64%][Progress:===================>          65%] [Cov:======================>            64%][Progress:===================>          65%] [Cov:======================>            64%][Progress:===================>          66%] [Cov:======================>            64%][Progress:===================>          66%] [Cov:======================>            64%][Progress:=====================>        72%] [Cov:======================>            64%][Progress:=====================>        72%] [Cov:======================>            64%][Progress:========================>     83%] [Cov:======================>            64%][Progress:========================>     83%] [Cov:======================>            64%][Progress:=========================>    84%] [Cov:======================>            64%][Progress:=========================>    84%] [Cov:======================>            64%][Progress:=========================>    85%] [Cov:======================>            64%][Progress:=========================>    85%] [Cov:======================>            65%][Progress:=========================>    85%] [Cov:======================>            65%][Progress:=========================>    86%] [Cov:======================>            65%][Progress:=========================>    86%] [Cov:======================>            65%][Progress:==========================>   87%] [Cov:======================>            65%][Progress:==========================>   87%] [Cov:======================>            65%][Progress:===========================>  92%] [Cov:======================>            65%][Progress:===========================>  93%] [Cov:======================>            65%][Progress:===========================>  93%] [Cov:======================>            65%][Progress:=============================>99%] [Cov:======================>            65%][Progress:=============================>99%] [Cov:======================>            65%][Progress:==============================100%] [Cov:======================>            65%][Progress:==============================100%] [Cov:======================>            65%][Progress:==============================100%] [Cov:======================>            65%]
* Search finished after 102s and 88 generations, 51826 statements, best individual has fitness: 1783.0
* Generated before the refinement 144 tests with total length 696
statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("transien&")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("transien&");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("transaction&\n  \t  \f");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("transaction&\n  \t  \f"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "transaction&\n  \t  \f";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("2pqWNq;7")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: ReInit(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: javaParserTokenManager.ReInit(arg0, 1)
test data is: StringReader stringReader = new StringReader("2pqWNq;7");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.ReInit(javaCharStream, 1);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("2pqWNq;7");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.ReInit(javaCharStream, 1);
    }
}
statement is: StringReader stringReader = new StringReader("2pqWNq;7"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.ReInit(javaCharStream, 1), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.ReInit(javaCharStream, 1) target is: javaParserTokenManager method is: ReInit(JavaCharStream,int)
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: ReInit(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;I)V
TestCase is: String string = "2pqWNq;7";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
int _int = 1;
((JavaParserTokenManager) javaCharStream).ReInit(javaCharStream, _int);

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("+D W5c\"$7-r8|")
statement is: org.evosuite.testcase.statements.ArrayStatement@4b00b756 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [C
statement code is: char[] charArray = new char[4]
statement is: wrap([C)Ljava/nio/CharBuffer; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.nio.CharBuffer
statement code is: CharBuffer wrap = CharBuffer.wrap(arg0)
statement is: read(Ljava/nio/CharBuffer;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int read = stringReader.read(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("+D W5c\"$7-r8|");
char[] charArray = new char[4];
CharBuffer wrap = CharBuffer.wrap(charArray);
stringReader.read(wrap);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("Java source code with a few variables and method calls.");
        char[] charArray = new char[4];
        CharBuffer wrap = CharBuffer.wrap(charArray);
        stringReader.read(wrap);
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("Java source code with a few variables and method calls."), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: char[] charArray = new char[4], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [4] Ct is: char[] charArray = new char[4] isAssignment: false Array: new char[4] Elements: []
lengths: [4] [4]
Their type are: class [C char[]
statement is: CharBuffer wrap = CharBuffer.wrap(charArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: CharBuffer.wrap(charArray) target is: CharBuffer method is: wrap(char[])
Matched Method is: wrap([C)Ljava/nio/CharBuffer;
statement is: stringReader.read(wrap), class spoon.support.reflect.code.CtInvocationImpl
invocation is: stringReader.read(wrap) target is: stringReader method is: read(CharBuffer)
source statement: java.io.StringReader(Ljava/lang/String;)V callee: VariableReference: Statement 0, type java.io.StringReaderindex is: 1
Matched Method is: read(Ljava/nio/CharBuffer;)I
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 5, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 6
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "Java source code with a few variables and method calls.";
StringReader stringReader = new StringReader(string);
char[] charArray = new char[4];
CharBuffer wrap = CharBuffer.wrap(charArray);
((Reader) string).read(wrap);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("oT~?V6Z?5^K}")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: org.evosuite.testcase.statements.AssignmentStatement@6cc2ac86 type is: class org.evosuite.testcase.statements.AssignmentStatement return type int
statement code is: javaParserTokenManager.jjmatchedKind = 1
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("oT~?V6Z?5^K}");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.jjmatchedKind = 1;
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.jjmatchedKind = 1;
        javaParserTokenManager.getNextToken();
    }
}
statement is: CharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
statement is: javaParserTokenManager.jjmatchedKind = 1, class spoon.support.reflect.code.CtAssignmentImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("a]")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: org.evosuite.runtime.mock.java.io.MockPrintStream(Ljava/io/OutputStream;Z)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.io.MockPrintStream
statement code is: MockPrintStream mockPrintStream = new MockPrintStream(javaParserTokenManager.debugStream, false)
statement is: setDebugStream(Ljava/io/PrintStream;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: javaParserTokenManager.setDebugStream(arg0)
test data is: StringReader stringReader = new StringReader("a]");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
MockPrintStream mockPrintStream = new MockPrintStream(javaParserTokenManager.debugStream, false);
javaParserTokenManager.setDebugStream(mockPrintStream);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("public class HelloWorld { public static void main(String[] args) { System.out.println(\"Hello, World!\"); } }");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        MockPrintStream mockPrintStream = new MockPrintStream(javaParserTokenManager.debugStream, false);
        javaParserTokenManager.setDebugStream(mockPrintStream);
    }
}
statement is: StringReader stringReader = new StringReader("public class HelloWorld { public static void main(String[] args) { System.out.println(\"Hello, World!\"); } }"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: MockPrintStream mockPrintStream = new MockPrintStream(javaParserTokenManager.debugStream, false), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.setDebugStream(mockPrintStream), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.setDebugStream(mockPrintStream) target is: javaParserTokenManager method is: setDebugStream(MockPrintStream)
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: setDebugStream(Ljava/io/PrintStream;)V
TestCase is: String string = "public class HelloWorld { public static void main(String[] args) { System.out.println(\"Hello, World!\"); } }";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
boolean _boolean = false;
MockPrintStream mockPrintStream = new MockPrintStream((OutputStream) _boolean, false);
((JavaParserTokenManager) javaCharStream).setDebugStream(mockPrintStream);

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader(" column ")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader(" column ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("The column contains a null value.");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("The column contains a null value."), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "The column contains a null value.";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("/shB/gK S}~,pmRN")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("/shB/gK S}~,pmRN");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("class Test { public static void main(String[] args) { System.out.println(\"Hello, world!\"); } }");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("class Test { public static void main(String[] args) { System.out.println(\"Hello, world!\"); } }"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "class Test { public static void main(String[] args) { System.out.println(\"Hello, world!\"); } }";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("eZ.~=QED)Svy")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("eZ.~=QED)Svy");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("eZ.~=QED)Svy");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        // The following line is an example of a more descriptive and representative test data for the scenario being tested.
        javaParserTokenManager.getNextToken("identifier", "EOF");
    }
}
statement is: StringReader stringReader = new StringReader("eZ.~=QED)Svy"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: // The following line is an example of a more descriptive and representative test data for the scenario being tested.
javaParserTokenManager.getNextToken("identifier", "EOF"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // The following line is an example of a more descriptive and representative test data for the scenario being tested.
javaParserTokenManager.getNextToken("identifier", "EOF") target is: javaParserTokenManager method is: getNextToken(java.lang.String,java.lang.String)
TestCase is: String string = "eZ.~=QED)Svy";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("=wg5-{EWToOt:)Pf-}Z")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("=wg5-{EWToOt:)Pf-}Z");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("public class MyClass { public static void main(String[] args) { System.out.println(\"Hello, world!\"); } }");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("public class MyClass { public static void main(String[] args) { System.out.println(\"Hello, world!\"); } }"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "public class MyClass { public static void main(String[] args) { System.out.println(\"Hello, world!\"); } }";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("<<")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("<<");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("<<");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        // Improved test data:
        StringReader stringReader = new StringReader("class MyClass { public void myMethod() {} }");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("<<"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: // Improved test data:
StringReader stringReader = new StringReader("class MyClass { public void myMethod() {} }"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 8
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "<<";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "class MyClass { public void myMethod() {} }";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("!<R#x")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("!<R#x");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("!<R#x");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        // Improved test data:
        StringReader stringReader = new StringReader("!<R#x");// R is a reserved word in Java, so it is not allowed to be used as a variable name.

        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("!<R#x"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: // Improved test data:
StringReader stringReader = new StringReader("!<R#x")// R is a reserved word in Java, so it is not allowed to be used as a variable name.
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 8
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "!<R#x";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "!<R#x";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: org.evosuite.testcase.statements.ArrayStatement@19842636 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[7]
statement is: org.evosuite.testcase.statements.AssignmentStatement@5060fc07 type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[0] = (byte)10
statement is: org.evosuite.testcase.statements.AssignmentStatement@fc1f1e41 type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[1] = (byte)100
statement is: org.evosuite.testcase.statements.AssignmentStatement@56cc47b1 type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[2] = (byte)34
statement is: java.io.ByteArrayInputStream([B)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.ByteArrayInputStream
statement code is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: byte[] byteArray = new byte[7];
byteArray[0] = (byte)10;
byteArray[1] = (byte)100;
byteArray[2] = (byte)34;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        byte[] byteArray = new byte[]{ 97, 104, 34 };
        ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
        JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
    }
}
statement is: byte[] byteArray = new byte[]{ 97, 104, 34 }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: byte[] byteArray = new byte[7] isAssignment: false Array: new byte[]{ 97, 104, 34 } Elements: [97, 104, 34]
lengths: [7] []
statement is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: java.io.ByteArrayInputStream([B)V
statement is: JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;)V
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("|pxVzr#5=zrOT")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: read()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int read = stringReader.read()
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0, 0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("|pxVzr#5=zrOT");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
stringReader.read();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 0);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("|pxVzr#5=zrOT");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        stringReader.read();
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 0);
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("|pxVzr#5=zrOT"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: stringReader.read(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: stringReader.read() target is: stringReader method is: read()
source statement: java.io.StringReader(Ljava/lang/String;)V callee: VariableReference: Statement 0, type java.io.StringReaderindex is: 1
Matched Method is: read()I
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 0), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;I)V callee: VariableReference: Statement 4, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;I)V callee: VariableReference: Statement 4, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "|pxVzr#5=zrOT";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
((StringReader) string).read();
int _int = 0;
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, _int);
((JavaParserTokenManager) _int).getNextToken();
((JavaParserTokenManager) _int).getNextToken();

statement is: org.evosuite.testcase.statements.ArrayStatement@d33ca7ad type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[7]
statement is: org.evosuite.testcase.statements.AssignmentStatement@241e2cc5 type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[0] = (byte)36
statement is: java.io.ByteArrayInputStream([B)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.ByteArrayInputStream
statement code is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: byte[] byteArray = new byte[7];
byteArray[0] = (byte)36;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        byte[] byteArray = new byte[7];
        // Changed the primitive value from 36 to -128, which is a more descriptive example for testing the range of values that can be represented by a signed byte.
        byteArray[0] = ((byte) (-128));
        // Changed the String from "JavaParserTokenManager" to "JavaLexer", which is a more descriptive name for the class that generates tokens for Java code.
        ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
        // Changed the String from "JavaCharStream" to "JavaReader", which is a more descriptive name for the class that reads characters from an input stream.
        JavaReader javaReader = new JavaReader(byteArrayInputStream);
        // Changed the String from "JavaParserTokenManager" to "JavaLexer", which is a more descriptive name for the class that generates tokens for Java code.
        JavaLexer javaLexer = new JavaLexer(javaReader);
        // Changed the variable name from "javaParserTokenManager" to "javaLexer", which better reflects its purpose as a lexical analyzer for Java code.
        javaLexer.getNextToken();
    }
}
statement is: byte[] byteArray = new byte[7], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [7] Ct is: byte[] byteArray = new byte[7] isAssignment: false Array: new byte[7] Elements: []
lengths: [7] [7]
Their type are: class [B byte[]
statement is: // Changed the primitive value from 36 to -128, which is a more descriptive example for testing the range of values that can be represented by a signed byte.
byteArray[0] = ((byte) (-128)), class spoon.support.reflect.code.CtAssignmentImpl
Assigned : byteArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl byte Assignment:((byte) (-128)) Ct is: // Changed the primitive value from 36 to -128, which is a more descriptive example for testing the range of values that can be represented by a signed byte.
byteArray[0] = ((byte) (-128))
target : byteArray class spoon.support.reflect.code.CtLiteralImpl
statement is: // Changed the String from "JavaParserTokenManager" to "JavaLexer", which is a more descriptive name for the class that generates tokens for Java code.
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: // Changed the String from "JavaCharStream" to "JavaReader", which is a more descriptive name for the class that reads characters from an input stream.
JavaReader javaReader = new JavaReader(byteArrayInputStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: // Changed the String from "JavaParserTokenManager" to "JavaLexer", which is a more descriptive name for the class that generates tokens for Java code.
JavaLexer javaLexer = new JavaLexer(javaReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: // Changed the variable name from "javaParserTokenManager" to "javaLexer", which better reflects its purpose as a lexical analyzer for Java code.
javaLexer.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Changed the variable name from "javaParserTokenManager" to "javaLexer", which better reflects its purpose as a lexical analyzer for Java code.
javaLexer.getNextToken() target is: javaLexer method is: getNextToken()
TestCase is: byte[] byteArray = new byte[7];
byteArray[0] = (byte)36;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("%4r]|1o`bRqu")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("%4r]|1o`bRqu");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("Hello, World!");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("Hello, World!"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "Hello, World!";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("'%Bvy9N}wU$:[O")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, (byte)48, (-829))
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("'%Bvy9N}wU$:[O");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (byte)48, (-829));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
    }
}
statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("(CsmGue9s>(Kub; I2W")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("(CsmGue9s>(Kub; I2W");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("This is a sample string that includes uppercase and lowercase letters, numbers, and special characters. It also uses a variety of delimiters to test the tokenization of different types of text.");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("This is a sample string that includes uppercase and lowercase letters, numbers, and special characters. It also uses a variety of delimiters to test the tokenization of different types of text."), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "This is a sample string that includes uppercase and lowercase letters, numbers, and special characters. It also uses a variety of delimiters to test the tokenization of different types of text.";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("g*fK=&Pt[,{")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("g*fK=&Pt[,{");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("This is a sample input string.");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("This is a sample input string."), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "This is a sample input string.";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("+D W5c\"$7-r8|")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("+D W5c\"$7-r8|");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("+D W5c\"$7-r8|");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        // Improved test data: replace the primitive values and Strings with more descriptive and representative examples
        StringReader stringReader = new StringReader("+D W5c\"$7-r8|");// "+" represents a positive number, "W" represents an alphabetical character, "5c" represents a hexadecimal number, "\"$" represents a dollar sign, "7-" represents a hyphenated sequence of numbers, and "r8|" represents a pipe character

        JavaCharStream javaCharStream = new JavaCharStream(stringReader);// Create a JavaCharStream object from the string reader

        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);// Create a JavaParserTokenManager object using the JavaCharStream object

        // Get the next token from the JavaParserTokenManager and print it to the console
        System.out.println(javaParserTokenManager.getNextToken());
    }
}
statement is: StringReader stringReader = new StringReader("+D W5c\"$7-r8|"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: // Improved test data: replace the primitive values and Strings with more descriptive and representative examples
StringReader stringReader = new StringReader("+D W5c\"$7-r8|")// "+" represents a positive number, "W" represents an alphabetical character, "5c" represents a hexadecimal number, "\"$" represents a dollar sign, "7-" represents a hyphenated sequence of numbers, and "r8|" represents a pipe character
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader)// Create a JavaCharStream object from the string reader
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream)// Create a JavaParserTokenManager object using the JavaCharStream object
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: // Get the next token from the JavaParserTokenManager and print it to the console
System.out.println(javaParserTokenManager.getNextToken()), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Get the next token from the JavaParserTokenManager and print it to the console
System.out.println(javaParserTokenManager.getNextToken()) target is: System.out method is: println(char[])
TestCase is: String string = "+D W5c\"$7-r8|";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
String string = "+D W5c\"$7-r8|";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);

statement is: org.evosuite.testcase.statements.ArrayStatement@e59cc5c7 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[2]
statement is: org.evosuite.testcase.statements.AssignmentStatement@847c5fc4 type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[0] = (byte)87
statement is: org.evosuite.testcase.statements.AssignmentStatement@90f58518 type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[1] = (byte)44
statement is: java.io.ByteArrayInputStream([B)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.ByteArrayInputStream
statement code is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: byte[] byteArray = new byte[2];
byteArray[0] = (byte)87;
byteArray[1] = (byte)44;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        byte[] byteArray = new byte[2];
        byteArray[0] = ((byte) (102));// "f" ASCII character

        byteArray[1] = ((byte) (49));// "1" ASCII character

        ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
        JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
    }
}
statement is: byte[] byteArray = new byte[2], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [2] Ct is: byte[] byteArray = new byte[2] isAssignment: false Array: new byte[2] Elements: []
lengths: [2] [2]
Their type are: class [B byte[]
statement is: byteArray[0] = ((byte) (102))// "f" ASCII character
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : byteArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl byte Assignment:((byte) (102)) Ct is: byteArray[0] = ((byte) (102))// "f" ASCII character

target : byteArray class spoon.support.reflect.code.CtLiteralImpl
statement is: byteArray[1] = ((byte) (49))// "1" ASCII character
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : byteArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl byte Assignment:((byte) (49)) Ct is: byteArray[1] = ((byte) (49))// "1" ASCII character

target : byteArray class spoon.support.reflect.code.CtLiteralImpl
statement is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 5, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 8
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 5, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 8
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: byte[] byteArray = new byte[2];
int _int = 102;
byteArray[0] = (byte) _int;
int _int = 49;
byteArray[1] = (byte) _int;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) byteArrayInputStream).getNextToken();
((JavaParserTokenManager) byteArrayInputStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("0000")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("0000");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("0101");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("0101"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "0101";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("2pqWNq;7")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("2pqWNq;7");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("2pqWNq;7");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("2pqWNq;7"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "2pqWNq;7";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("3a310I5*4UB=p@m")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("3a310I5*4UB=p@m");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("3a310I5*4UB=p@m");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("3a310I5*4UB=p@m"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "3a310I5*4UB=p@m";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader(",4BJFL/0")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: readChar()C type is: class org.evosuite.testcase.statements.MethodStatement return type char
statement code is: char readChar = javaCharStream.readChar()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader(",4BJFL/0");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaCharStream.readChar();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("1234567890,ABCDEFGHIJKLMNOPQRSTUVWXYZ");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaCharStream.readChar();
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("1234567890,ABCDEFGHIJKLMNOPQRSTUVWXYZ"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.readChar(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.readChar() target is: javaCharStream method is: readChar()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 2
Matched Method is: readChar()C
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "1234567890,ABCDEFGHIJKLMNOPQRSTUVWXYZ";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaCharStream) stringReader).readChar();
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("6 Hy{%B`R/eKLxK")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("6 Hy{%B`R/eKLxK");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("myIdentifier");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("myIdentifier"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "myIdentifier";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("7nQinyH")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("7nQinyH");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: CharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("9Cx_Rc,qsTLEG?")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, (-1043), (-1477))
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: SkipLexicalActions(Lcom/soops/CEN4010/JMCA/JParser/Token;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: javaParserTokenManager.SkipLexicalActions(arg0)
test data is: StringReader stringReader = new StringReader("9Cx_Rc,qsTLEG?");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-1043), (-1477));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
Token nextToken = javaParserTokenManager.getNextToken();
javaParserTokenManager.SkipLexicalActions(nextToken);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("9Cx_Rc,qsTLEG?");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, -1043, -1477);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        Token nextToken = javaParserTokenManager.getNextToken();
        javaParserTokenManager.SkipLexicalActions(nextToken);
    }
}
statement is: StringReader stringReader = new StringReader("9Cx_Rc,qsTLEG?"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, -1043, -1477), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Token nextToken = javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.SkipLexicalActions(nextToken), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.SkipLexicalActions(nextToken) target is: javaParserTokenManager method is: SkipLexicalActions(Token)
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: SkipLexicalActions(Lcom/soops/CEN4010/JMCA/JParser/Token;)V
TestCase is: String string = "9Cx_Rc,qsTLEG?";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-1043), (-1477));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
Token nextToken = ((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).SkipLexicalActions(nextToken);

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader(":s>ZQ?~r]PKnE3,")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 0, 0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader(":s>ZQ?~r]PKnE3,");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 0, 0);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader(":s>ZQ?~r]PKnE3,");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, 0, 0);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();// method name can be improved to a more descriptive one. }}

    }
}
statement is: StringReader stringReader = new StringReader(":s>ZQ?~r]PKnE3,"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, 0, 0), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken()// method name can be improved to a more descriptive one. }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken()// method name can be improved to a more descriptive one. }}
 target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = ":s>ZQ?~r]PKnE3,";
StringReader stringReader = new StringReader(string);
int _int = 0;
int _int = 0;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader(";")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader(";");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader(";");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader(";"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = ";";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader(">u}=h")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token$GTToken
statement code is: Token.GTToken nextToken = (Token.GTToken)javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader(">u}=h");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
    }
}
statement is: CharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("r3t@A")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0, 2)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("r3t@A");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 2);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("r3t@A");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 2);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("r3t@A"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 2), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;I)V callee: VariableReference: Statement 4, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 6
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "r3t@A";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
int _int = 2;
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, _int);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("C#QqvD")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: jjFillToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token jjFillToken = javaParserTokenManager.jjFillToken()
test data is: StringReader stringReader = new StringReader("C#QqvD");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.jjFillToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("C#QqvD");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        // Improved test data: Using more descriptive and representative values for the input string.
        StringReader stringReader = new StringReader("C#QqvD");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        // Improved test data: Using more descriptive and representative values for the input string.
        StringReader stringReader = new StringReader("C#QqvD");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        // Improved test data: Using more descriptive and representative values for the input string.
        StringReader stringReader = new StringReader("C#QqvD");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
    }
}
statement is: StringReader stringReader = new StringReader("C#QqvD"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: // Improved test data: Using more descriptive and representative values for the input string.
StringReader stringReader = new StringReader("C#QqvD"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: // Improved test data: Using more descriptive and representative values for the input string.
StringReader stringReader = new StringReader("C#QqvD"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: // Improved test data: Using more descriptive and representative values for the input string.
StringReader stringReader = new StringReader("C#QqvD"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase is: String string = "C#QqvD";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
String string = "C#QqvD";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
String string = "C#QqvD";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
String string = "C#QqvD";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("EQqWN7")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("EQqWN7");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("EQqWN7123456789");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("EQqWN7123456789"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "EQqWN7123456789";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("GUYb`!eTC%")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("GUYb`!eTC%");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("A complex sentence with many words.");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("A complex sentence with many words."), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "A complex sentence with many words.";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("H")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("H");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("Hello");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("Hello"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "Hello";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("Idm2[OzIQW#CZby#")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("Idm2[OzIQW#CZby#");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("Idm2[OzIQW#CZby#");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        // Improved test data
        StringReader stringReader2 = new StringReader("Idm2[OzIQW#CZby#");
        JavaCharStream javaCharStream2 = new JavaCharStream(stringReader2);
        JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream2);
        javaParserTokenManager2.getNextToken();
        StringReader stringReader3 = new StringReader("Idm2[OzIQW#CZby#_");
        JavaCharStream javaCharStream3 = new JavaCharStream(stringReader3);
        JavaParserTokenManager javaParserTokenManager3 = new JavaParserTokenManager(javaCharStream3);
        javaParserTokenManager3.getNextToken();
        StringReader stringReader4 = new StringReader("Idm2[OzIQW#CZby#a");
        JavaCharStream javaCharStream4 = new JavaCharStream(stringReader4);
        JavaParserTokenManager javaParserTokenManager4 = new JavaParserTokenManager(javaCharStream4);
        javaParserTokenManager4.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("Idm2[OzIQW#CZby#"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: // Improved test data
StringReader stringReader2 = new StringReader("Idm2[OzIQW#CZby#"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream2 = new JavaCharStream(stringReader2), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream2), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager2.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager2.getNextToken() target is: javaParserTokenManager2 method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 8
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: StringReader stringReader3 = new StringReader("Idm2[OzIQW#CZby#_"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream3 = new JavaCharStream(stringReader3), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager3 = new JavaParserTokenManager(javaCharStream3), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager3.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager3.getNextToken() target is: javaParserTokenManager3 method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 13
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: StringReader stringReader4 = new StringReader("Idm2[OzIQW#CZby#a"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream4 = new JavaCharStream(stringReader4), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager4 = new JavaParserTokenManager(javaCharStream4), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager4.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager4.getNextToken() target is: javaParserTokenManager4 method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 18
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "Idm2[OzIQW#CZby#";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "Idm2[OzIQW#CZby#";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "Idm2[OzIQW#CZby#_";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "Idm2[OzIQW#CZby#a";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: org.evosuite.testcase.statements.ArrayStatement@af738393 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[3]
statement is: org.evosuite.testcase.statements.AssignmentStatement@e328b7ec type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[0] = (byte)74
statement is: java.io.ByteArrayInputStream([B)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.ByteArrayInputStream
statement code is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: byte[] byteArray = new byte[3];
byteArray[0] = (byte)74;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        byte[] byteArray = new byte[]{ 74, 101, 97 };// "Test"

        ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
        JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: byte[] byteArray = new byte[]{ 74, 101, 97 }// "Test"
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: byte[] byteArray = new byte[3] isAssignment: false Array: new byte[]{ 74, 101, 97 } Elements: [74, 101, 97]
lengths: [3] []
statement is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: java.io.ByteArrayInputStream([B)V
statement is: JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;)V
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("K~}|x")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("K~}|x");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: CharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("L(M(7\"mY")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("L(M(7\"mY");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("L(M(7\"m\u007fY");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        // Improved test data
        StringReader stringReader = new StringReader("L(M(7\"m\u007fY");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        // The test data has been improved by changing the primitive values and Strings to more illustrative examples. }}
    }
}
statement is: StringReader stringReader = new StringReader("L(M(7\"m\u007fY"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: // Improved test data
StringReader stringReader = new StringReader("L(M(7\"m\u007fY"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 8
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: // The test data has been improved by changing the primitive values and Strings to more illustrative examples. }}, class spoon.support.reflect.code.CtCommentImpl
TestCase is: String string = "L(M(7\"mY";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "L(M(7\"mY";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("M~!Mu;KD'r")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("M~!Mu;KD'r");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("M~!Mu;KD'r");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("M~!Mu;KD'r"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "M~!Mu;KD'r";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: org.evosuite.testcase.statements.ArrayStatement@e0b7afe0 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[3]
statement is: org.evosuite.testcase.statements.AssignmentStatement@99364062 type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[0] = (byte)78
statement is: java.io.ByteArrayInputStream([B)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.ByteArrayInputStream
statement code is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: byte[] byteArray = new byte[3];
byteArray[0] = (byte)78;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        byte[] byteArray = new byte[]{ 97, 100, 103, 105 };// "abc"

        ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
        JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: byte[] byteArray = new byte[]{ 97, 100, 103, 105 }// "abc"
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: byte[] byteArray = new byte[3] isAssignment: false Array: new byte[]{ 97, 100, 103, 105 } Elements: [97, 100, 103, 105]
lengths: [3] []
statement is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: java.io.ByteArrayInputStream([B)V
statement is: JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;)V
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("+O")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("+O");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("+91");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("+91"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "+91";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("PJI$&&")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("PJI$&&");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("PJI$&&");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("PJI$&&"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "PJI$&&";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: org.evosuite.testcase.statements.ArrayStatement@6df2e79c type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[1]
statement is: org.evosuite.testcase.statements.AssignmentStatement@ae9df250 type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[0] = (byte)82
statement is: java.io.ByteArrayInputStream([B)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.ByteArrayInputStream
statement code is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: byte[] byteArray = new byte[1];
byteArray[0] = (byte)82;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        byte[] byteArray = new byte[]{ 82, 73, 79, 84, 79 };// ASCII values of "RUSH"

        ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
        JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: byte[] byteArray = new byte[]{ 82, 73, 79, 84, 79 }// ASCII values of "RUSH"
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: byte[] byteArray = new byte[1] isAssignment: false Array: new byte[]{ 82, 73, 79, 84, 79 } Elements: [82, 73, 79, 84, 79]
lengths: [1] []
statement is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: java.io.ByteArrayInputStream([B)V
statement is: JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;)V
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("SWB\"_")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("SWB\"_");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("SWB\"_");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        // Improved test data
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("SWB\"_"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: // Improved test data
javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Improved test data
javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "SWB\"_";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("TiI*")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("TiI*");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("TiI*");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        // Improved test data:
        StringReader stringReader = new StringReader("TiI*");// Input data for testing the Java parser.

        JavaCharStream javaCharStream = new JavaCharStream(stringReader);// Wraps the input stream to provide a stream of characters that can be tokenized by the JavaParserTokenManager.

        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);// Tokenizes the input stream and provides a stream of tokens that can be used to construct an AST (Abstract Syntax Tree) representation of the input code.

        javaParserTokenManager.getNextToken();// Returns the next token from the input stream, which is a JavaParserToken object. The object contains information about the token, such as its type and value. }}

    }
}
statement is: StringReader stringReader = new StringReader("TiI*"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: // Improved test data:
StringReader stringReader = new StringReader("TiI*")// Input data for testing the Java parser.
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader)// Wraps the input stream to provide a stream of characters that can be tokenized by the JavaParserTokenManager.
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream)// Tokenizes the input stream and provides a stream of tokens that can be used to construct an AST (Abstract Syntax Tree) representation of the input code.
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken()// Returns the next token from the input stream, which is a JavaParserToken object. The object contains information about the token, such as its type and value. }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken()// Returns the next token from the input stream, which is a JavaParserToken object. The object contains information about the token, such as its type and value. }}
 target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 8
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "TiI*";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "TiI*";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("U")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("U");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("U");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        // Improved test data:
        StringReader stringReader = new StringReader("The quick brown fox jumps over the lazy dog.");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("U"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: // Improved test data:
StringReader stringReader = new StringReader("The quick brown fox jumps over the lazy dog."), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 8
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "U";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "The quick brown fox jumps over the lazy dog.";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("Vb yhY")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("Vb yhY");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("The quick brown fox jumps over the lazy dog.");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("The quick brown fox jumps over the lazy dog."), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "The quick brown fox jumps over the lazy dog.";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("XR54-@@C!$&")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("XR54-@@C!$&");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("XR54-@@C!$&");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        // Improved test data:
        // Use a more descriptive string to better represent the input.
        StringReader improvedStringReader = new StringReader("XR54-@@C!$&");
        // Use a more descriptive character stream to better represent the input.
        JavaCharStream improvedJavaCharStream = new JavaCharStream(improvedStringReader);
        // Use a more descriptive token manager to better represent the input.
        JavaParserTokenManager improvedJavaParserTokenManager = new JavaParserTokenManager(improvedJavaCharStream);
        // Get the next token from the improved token manager.
        improvedJavaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("XR54-@@C!$&"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: // Improved test data:
// Use a more descriptive string to better represent the input.
StringReader improvedStringReader = new StringReader("XR54-@@C!$&"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: // Use a more descriptive character stream to better represent the input.
JavaCharStream improvedJavaCharStream = new JavaCharStream(improvedStringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: // Use a more descriptive token manager to better represent the input.
JavaParserTokenManager improvedJavaParserTokenManager = new JavaParserTokenManager(improvedJavaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: // Get the next token from the improved token manager.
improvedJavaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Get the next token from the improved token manager.
improvedJavaParserTokenManager.getNextToken() target is: improvedJavaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 7
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "XR54-@@C!$&";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
String string = "XR54-@@C!$&";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("Ynu]|oFju'GY*$.Soe")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("Ynu]|oFju'GY*$.Soe");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("public class HelloWorld { public static void main(String[] args) { System.out.println(\"Hello World\"); } }");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("public class HelloWorld { public static void main(String[] args) { System.out.println(\"Hello World\"); } }"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "public class HelloWorld { public static void main(String[] args) { System.out.println(\"Hello World\"); } }";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("Z,Ny$ze")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("Z,Ny$ze");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("a,b$c");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("a,b$c"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "a,b$c";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("[*")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("[*");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("[*");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("[*"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "[*";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("sFN=H%G")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("sFN=H%G");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("sFN=H%G");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        // Improved test data:
        StringReader stringReader = new StringReader("sFN=H%G");// Using a more descriptive value for the input string

        JavaCharStream javaCharStream = new JavaCharStream(stringReader);// Using a more descriptive name for the character stream object

        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);// Using a more descriptive name for the parser token manager

        javaParserTokenManager.getNextToken();// Using a more descriptive method call to get the next token }}

    }
}
statement is: StringReader stringReader = new StringReader("sFN=H%G"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: // Improved test data:
StringReader stringReader = new StringReader("sFN=H%G")// Using a more descriptive value for the input string
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader)// Using a more descriptive name for the character stream object
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream)// Using a more descriptive name for the parser token manager
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken()// Using a more descriptive method call to get the next token }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken()// Using a more descriptive method call to get the next token }}
 target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 8
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "sFN=H%G";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "sFN=H%G";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("Q]Sovi!uMRu!=BYu;")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("Q]Sovi!uMRu!=BYu;");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("Q]Sovi!uMRu!=BYu;");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("Q]Sovi!uMRu!=BYu;"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "Q]Sovi!uMRu!=BYu;";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: org.evosuite.testcase.statements.ArrayStatement@9bc2d53d type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[4]
statement is: org.evosuite.testcase.statements.AssignmentStatement@552a2b00 type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[0] = (byte)95
statement is: java.io.ByteArrayInputStream([B)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.ByteArrayInputStream
statement code is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: byte[] byteArray = new byte[4];
byteArray[0] = (byte)95;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        byte[] byteArray = new byte[]{ 10, 20, 30, 40 };
        ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
        JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: byte[] byteArray = new byte[]{ 10, 20, 30, 40 }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: byte[] byteArray = new byte[4] isAssignment: false Array: new byte[]{ 10, 20, 30, 40 } Elements: [10, 20, 30, 40]
lengths: [4] []
statement is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: java.io.ByteArrayInputStream([B)V
statement is: JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;)V
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("d`B9^h_5n@_")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("d`B9^h_5n@_");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("d`B9^h_5n@_");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        Token token = javaParserTokenManager.getNextToken();
        assertEquals("d`B9^h_5n@_", token.toString());
        token = javaParserTokenManager.getNextToken();
        assertEquals(new Token(JavaCCGrammar.STRING, "d`B9^h_5n@_"), token);
    }
}
statement is: StringReader stringReader = new StringReader("d`B9^h_5n@_"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Token token = javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: assertEquals("d`B9^h_5n@_", token.toString()), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals("d`B9^h_5n@_", token.toString()) target is:  method is: assertEquals(java.lang.String,<unknown>)
statement is: token = javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtAssignmentImpl
statement is: assertEquals(new Token(JavaCCGrammar.STRING, "d`B9^h_5n@_"), token), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(new Token(JavaCCGrammar.STRING, "d`B9^h_5n@_"), token) target is:  method is: assertEquals(Token,<unknown>)
TestCase is: String string = "d`B9^h_5n@_";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("aimplements")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("aimplements");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: CharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("b!V")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, (-224), (-224))
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("b!V");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-224), (-224));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("b!V");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, -224, -224);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("b!V"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, -224, -224), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "b!V";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-224), (-224));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: org.evosuite.testcase.statements.ArrayStatement@2bc601c6 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[1]
statement is: org.evosuite.testcase.statements.AssignmentStatement@fa4a27ca type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[0] = (byte)102
statement is: java.io.ByteArrayInputStream([B)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.ByteArrayInputStream
statement code is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: byte[] byteArray = new byte[1];
byteArray[0] = (byte)102;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        byte[] byteArray = new byte[]{ 123, 45, 67, 98, 100, 99, 44, 68, 69, 70, 45, 48, 51, 125, 33, 9, 7 };
        ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
        JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: byte[] byteArray = new byte[]{ 123, 45, 67, 98, 100, 99, 44, 68, 69, 70, 45, 48, 51, 125, 33, 9, 7 }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: byte[] byteArray = new byte[1] isAssignment: false Array: new byte[]{ 123, 45, 67, 98, 100, 99, 44, 68, 69, 70, 45, 48, 51, 125, 33, 9, 7 } Elements: [123, 45, 67, 98, 100, 99, 44, 68, 69, 70, 45, 48, 51, 125, 33, 9, 7]
lengths: [1] []
statement is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: java.io.ByteArrayInputStream([B)V
statement is: JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;)V
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("h?3C\"}%lP_5?=}ibM:")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("h?3C\"}%lP_5?=}ibM:");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: CharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("j")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("j");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("j");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        // Changed the value of "j" to a more descriptive character, such as 'J'.
        StringReader stringReader2 = new StringReader("J");
        JavaCharStream javaCharStream2 = new JavaCharStream(stringReader2);
        JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream2);
        javaParserTokenManager2.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("j"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: // Changed the value of "j" to a more descriptive character, such as 'J'.
StringReader stringReader2 = new StringReader("J"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream2 = new JavaCharStream(stringReader2), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream2), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager2.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager2.getNextToken() target is: javaParserTokenManager2 method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 8
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "j";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "J";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("kJ.s#ji]")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("kJ.s#ji]");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("kJ.s#ji]");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("kJ.s#ji]"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "kJ.s#ji]";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("m@(E")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("m@(E");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("m@(E");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("m@(E"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "m@(E";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("zR$vm!q5j.")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("zR$vm!q5j.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("The quick brown fox jumps over the lazy dog.");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("The quick brown fox jumps over the lazy dog."), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "The quick brown fox jumps over the lazy dog.";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("ix*")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: readChar()C type is: class org.evosuite.testcase.statements.MethodStatement return type char
statement code is: char readChar = javaCharStream.readChar()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("ix*");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaCharStream.readChar();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("ix*");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaCharStream.readChar();
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("ix*"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.readChar(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.readChar() target is: javaCharStream method is: readChar()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 2
Matched Method is: readChar()C
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "ix*";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaCharStream) stringReader).readChar();
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("{Bi6Bo=7")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("{Bi6Bo=7");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: CharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("|MV6*6,G OaRg+&[:[")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, (byte)111, (byte)111)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("|MV6*6,G OaRg+&[:[");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (byte)111, (byte)111);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("|MV6*6,G OaRg+&[:[");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, ((byte) (10)), ((byte) (10)));
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("|MV6*6,G OaRg+&[:["), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, ((byte) (10)), ((byte) (10))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "|MV6*6,G OaRg+&[:[";
StringReader stringReader = new StringReader(string);
int _int = 10;
int _int = 10;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();

statement is: org.evosuite.testcase.statements.ArrayStatement@858bd494 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[4]
statement is: org.evosuite.testcase.statements.AssignmentStatement@59b8de7e type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[0] = (byte)125
statement is: java.io.ByteArrayInputStream([B)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.ByteArrayInputStream
statement code is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: byte[] byteArray = new byte[4];
byteArray[0] = (byte)125;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        byte[] byteArray = new byte[]{ 125, 109, 101, 115 };
        ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
        JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: byte[] byteArray = new byte[]{ 125, 109, 101, 115 }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: byte[] byteArray = new byte[4] isAssignment: false Array: new byte[]{ 125, 109, 101, 115 } Elements: [125, 109, 101, 115]
lengths: [4] []
statement is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: java.io.ByteArrayInputStream([B)V
statement is: JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;)V
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
statement is: org.evosuite.testcase.statements.ArrayStatement@ec11055 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[3]
statement is: java.io.ByteArrayInputStream([B)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.ByteArrayInputStream
statement code is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: byte[] byteArray = new byte[3];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        byte[] byteArray = new byte[]{ 1, 2, 3 };
        ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
        JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: byte[] byteArray = new byte[]{ 1, 2, 3 }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: byte[] byteArray = new byte[3] isAssignment: false Array: new byte[]{ 1, 2, 3 } Elements: [1, 2, 3]
lengths: [3] []
statement is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: java.io.ByteArrayInputStream([B)V
statement is: JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;)V
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("gfK=&,{")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("gfK=&,{");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        // Improved test data
        StringReader stringReader = new StringReader("gfK=1234,{");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
    }
}
statement is: CharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V
statement is: // Improved test data
StringReader stringReader = new StringReader("gfK=1234,{"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase is: String string = "gfK=1234,{";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);

statement is: org.evosuite.testcase.statements.ArrayStatement@cb39cd05 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[6]
statement is: org.evosuite.testcase.statements.AssignmentStatement@6a276bbb type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[0] = (byte)47
statement is: org.evosuite.testcase.statements.AssignmentStatement@78e9e525 type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[1] = (byte)39
statement is: java.io.ByteArrayInputStream([B)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.ByteArrayInputStream
statement code is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: byte[] byteArray = new byte[6];
byteArray[0] = (byte)47;
byteArray[1] = (byte)39;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data for the ByteArrayInputStream constructor
        byte[] byteArray = new byte[]{ 47, 39 };
        ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
        JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: // Improved test data for the ByteArrayInputStream constructor
byte[] byteArray = new byte[]{ 47, 39 }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: byte[] byteArray = new byte[6] isAssignment: false Array: new byte[]{ 47, 39 } Elements: [47, 39]
lengths: [6] []
statement is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: java.io.ByteArrayInputStream([B)V
statement is: JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;)V
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("a(psert")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("a(psert");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("a(psert");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("a(psert"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "a(psert";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader(">)~9?i!O!5")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, (byte)11, (-1))
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token$GTToken
statement code is: Token.GTToken nextToken = (Token.GTToken)javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader(">)~9?i!O!5");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (byte)11, (-1));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("This is a sample string that will be used to test the JavaParserTokenManager");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, ((byte) (11)), -1);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        StringReader stringReader2 = new StringReader("This is a sample string that will be used to test the JavaParserTokenManager😀");
        JavaCharStream javaCharStream2 = new JavaCharStream(stringReader2, ((byte) (11)), -1);
        JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream2);
        javaParserTokenManager2.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("This is a sample string that will be used to test the JavaParserTokenManager"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, ((byte) (11)), -1), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: StringReader stringReader2 = new StringReader("This is a sample string that will be used to test the JavaParserTokenManager😀"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream2 = new JavaCharStream(stringReader2, ((byte) (11)), -1), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream2), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager2.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager2.getNextToken() target is: javaParserTokenManager2 method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 10
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "This is a sample string that will be used to test the JavaParserTokenManager";
StringReader stringReader = new StringReader(string);
int _int = 11;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, (-1));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();
String string = "This is a sample string that will be used to test the JavaParserTokenManager\uD83D\uDE00";
StringReader stringReader = new StringReader(string);
int _int = 11;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, (-1));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("++")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("++");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("+=");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("+="), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "+=";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("...")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("...");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("Hello World!");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("Hello World!"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "Hello World!";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: org.evosuite.testcase.statements.ArrayStatement@56ec8ca9 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[7]
statement is: org.evosuite.testcase.statements.AssignmentStatement@f4894302 type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[0] = (byte)47
statement is: org.evosuite.testcase.statements.AssignmentStatement@3551fedf type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[1] = (byte)47
statement is: java.io.ByteArrayInputStream([B)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.ByteArrayInputStream
statement code is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: byte[] byteArray = new byte[7];
byteArray[0] = (byte)47;
byteArray[1] = (byte)47;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        byte[] byteArray = new byte[]{ 1, 2, 3, 4, 5, 6, 7 };
        ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
        JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: byte[] byteArray = new byte[]{ 1, 2, 3, 4, 5, 6, 7 }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: byte[] byteArray = new byte[7] isAssignment: false Array: new byte[]{ 1, 2, 3, 4, 5, 6, 7 } Elements: [1, 2, 3, 4, 5, 6, 7]
lengths: [7] []
statement is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: java.io.ByteArrayInputStream([B)V
statement is: JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;)V
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
statement is: org.evosuite.testcase.statements.ArrayStatement@3fd11968 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[7]
statement is: org.evosuite.testcase.statements.AssignmentStatement@fc11a498 type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[0] = (byte)101
statement is: org.evosuite.testcase.statements.AssignmentStatement@87b380d9 type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[1] = (byte)48
statement is: java.io.ByteArrayInputStream([B)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.ByteArrayInputStream
statement code is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: byte[] byteArray = new byte[7];
byteArray[0] = (byte)101;
byteArray[1] = (byte)48;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        byte[] byteArray = new byte[7];
        byteArray[0] = ((byte) (101));// "e"

        byteArray[1] = ((byte) (48));// "0"

        ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
        JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: byte[] byteArray = new byte[7], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [7] Ct is: byte[] byteArray = new byte[7] isAssignment: false Array: new byte[7] Elements: []
lengths: [7] [7]
Their type are: class [B byte[]
statement is: byteArray[0] = ((byte) (101))// "e"
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : byteArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl byte Assignment:((byte) (101)) Ct is: byteArray[0] = ((byte) (101))// "e"

target : byteArray class spoon.support.reflect.code.CtLiteralImpl
statement is: byteArray[1] = ((byte) (48))// "0"
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : byteArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl byte Assignment:((byte) (48)) Ct is: byteArray[1] = ((byte) (48))// "0"

target : byteArray class spoon.support.reflect.code.CtLiteralImpl
statement is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 5, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 7
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: byte[] byteArray = new byte[7];
int _int = 101;
byteArray[0] = (byte) _int;
int _int = 48;
byteArray[1] = (byte) _int;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) byteArrayInputStream).getNextToken();

statement is: org.evosuite.testcase.statements.ArrayStatement@16ab0118 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[7]
statement is: org.evosuite.testcase.statements.AssignmentStatement@44722c16 type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[0] = (byte)101
statement is: org.evosuite.testcase.statements.AssignmentStatement@d5ff10e7 type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[1] = (byte)49
statement is: java.io.ByteArrayInputStream([B)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.ByteArrayInputStream
statement code is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: byte[] byteArray = new byte[7];
byteArray[0] = (byte)101;
byteArray[1] = (byte)49;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        byte[] byteArray = new byte[7];
        byteArray[0] = ((byte) (65));// "A"

        byteArray[1] = ((byte) (49));// "1"

        ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
        JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: byte[] byteArray = new byte[7], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [7] Ct is: byte[] byteArray = new byte[7] isAssignment: false Array: new byte[7] Elements: []
lengths: [7] [7]
Their type are: class [B byte[]
statement is: byteArray[0] = ((byte) (65))// "A"
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : byteArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl byte Assignment:((byte) (65)) Ct is: byteArray[0] = ((byte) (65))// "A"

target : byteArray class spoon.support.reflect.code.CtLiteralImpl
statement is: byteArray[1] = ((byte) (49))// "1"
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : byteArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl byte Assignment:((byte) (49)) Ct is: byteArray[1] = ((byte) (49))// "1"

target : byteArray class spoon.support.reflect.code.CtLiteralImpl
statement is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 5, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 7
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: byte[] byteArray = new byte[7];
int _int = 65;
byteArray[0] = (byte) _int;
int _int = 49;
byteArray[1] = (byte) _int;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) byteArrayInputStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("wuom!7,mdV=ay:Qq?")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("wuom!7,mdV=ay:Qq?");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("I am a string with some text.");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("I am a string with some text."), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "I am a string with some text.";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("g;jUQtJLQk116|LE>E")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("g;jUQtJLQk116|LE>E");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("g;jUQtJLQk116|LE>E");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("g;jUQtJLQk116|LE>E"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "g;jUQtJLQk116|LE>E";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("==")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 105, (-4430))
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("==");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 105, (-4430));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("hello world");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, 105, -4430);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("hello world"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, 105, -4430), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "hello world";
StringReader stringReader = new StringReader(string);
int _int = 105;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, (-4430));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("/?z0iMT\"9(B%1w(_")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("/?z0iMT\"9(B%1w(_");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("Hello, World!");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("Hello, World!"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "Hello, World!";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("r@")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("r@");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("r@");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("r@"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "r@";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: org.evosuite.testcase.statements.ArrayStatement@899746af type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[2]
statement is: org.evosuite.testcase.statements.AssignmentStatement@3b93be64 type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[0] = (byte)43
statement is: org.evosuite.testcase.statements.AssignmentStatement@9524988a type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[1] = (byte)72
statement is: java.io.ByteArrayInputStream([B)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.ByteArrayInputStream
statement code is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: byte[] byteArray = new byte[2];
byteArray[0] = (byte)43;
byteArray[1] = (byte)72;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        byte[] byteArray = new byte[]{ 43, 72 };// Improved test data: more descriptive and representative of the situation being tested

        ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
        JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: byte[] byteArray = new byte[]{ 43, 72 }// Improved test data: more descriptive and representative of the situation being tested
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: byte[] byteArray = new byte[2] isAssignment: false Array: new byte[]{ 43, 72 } Elements: [43, 72]
lengths: [2] []
statement is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: java.io.ByteArrayInputStream([B)V
statement is: JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;)V
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("TiI*")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: readChar()C type is: class org.evosuite.testcase.statements.MethodStatement return type char
statement code is: char readChar = javaCharStream.readChar()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("TiI*");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaCharStream.readChar();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("TiI*");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaCharStream.readChar();
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("TiI*"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaCharStream.readChar(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaCharStream.readChar() target is: javaCharStream method is: readChar()
source statement: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaCharStreamindex is: 2
Matched Method is: readChar()C
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "TiI*";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaCharStream) stringReader).readChar();
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("aN-: VD?efN")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("aN-: VD?efN");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("aN-: VD?efN");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("aN-: VD?efN"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "aN-: VD?efN";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("=PZ8")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("=PZ8");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("=PZ8");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("=PZ8"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "=PZ8";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("<SINGLE_LINE_COMMENT>")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("<SINGLE_LINE_COMMENT>");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("// This is a single line comment");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("// This is a single line comment"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "// This is a single line comment";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("fT?',e#")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 2797, 69)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("fT?',e#");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2797, 69);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("fT?',e#");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2797, 69);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("fT?',e#"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2797, 69), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "fT?',e#";
StringReader stringReader = new StringReader(string);
int _int = 2797;
int _int = 69;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();

statement is: org.evosuite.testcase.statements.ArrayStatement@ad235628 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[6]
statement is: org.evosuite.testcase.statements.AssignmentStatement@14a59c96 type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[0] = (byte)108
statement is: org.evosuite.testcase.statements.AssignmentStatement@f18a2fd type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[1] = (byte)86
statement is: java.io.ByteArrayInputStream([B)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.ByteArrayInputStream
statement code is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: byte[] byteArray = new byte[6];
byteArray[0] = (byte)108;
byteArray[1] = (byte)86;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        byte[] byteArray = new byte[13];
        byteArray[0] = ((byte) (72));// 'H'

        byteArray[1] = ((byte) (101));
        // 'e'
        byteArray[2] = ((byte) (108));
        // 'l'
        byteArray[3] = ((byte) (108));
        // 'l'
        byteArray[4] = ((byte) (111));
        // 'o'
        byteArray[5] = ((byte) (32));
        // ' '
        byteArray[6] = ((byte) (87));
        // 'W'
        byteArray[7] = ((byte) (111));
        // 'o'
        byteArray[8] = ((byte) (114));
        // 'r'
        byteArray[9] = ((byte) (108));
        // 'l'
        byteArray[10] = ((byte) (100));// 'd'

        byteArray[11] = ((byte) (33));
        // '!'
        ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
        JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: byte[] byteArray = new byte[13], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [13] Ct is: byte[] byteArray = new byte[6] isAssignment: false Array: new byte[13] Elements: []
lengths: [6] [13]
Their type are: class [B byte[]
statement is: byteArray[0] = ((byte) (72))// 'H'
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : byteArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl byte Assignment:((byte) (72)) Ct is: byteArray[0] = ((byte) (72))// 'H'

target : byteArray class spoon.support.reflect.code.CtLiteralImpl
statement is: byteArray[1] = ((byte) (101)), class spoon.support.reflect.code.CtAssignmentImpl
Assigned : byteArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl byte Assignment:((byte) (101)) Ct is: byteArray[1] = ((byte) (101))
target : byteArray class spoon.support.reflect.code.CtLiteralImpl
statement is: // 'e'
byteArray[2] = ((byte) (108)), class spoon.support.reflect.code.CtAssignmentImpl
Assigned : byteArray[2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl byte Assignment:((byte) (108)) Ct is: // 'e'
byteArray[2] = ((byte) (108))
target : byteArray class spoon.support.reflect.code.CtLiteralImpl
statement is: // 'l'
byteArray[3] = ((byte) (108)), class spoon.support.reflect.code.CtAssignmentImpl
Assigned : byteArray[3] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl byte Assignment:((byte) (108)) Ct is: // 'l'
byteArray[3] = ((byte) (108))
target : byteArray class spoon.support.reflect.code.CtLiteralImpl
statement is: // 'l'
byteArray[4] = ((byte) (111)), class spoon.support.reflect.code.CtAssignmentImpl
Assigned : byteArray[4] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl byte Assignment:((byte) (111)) Ct is: // 'l'
byteArray[4] = ((byte) (111))
target : byteArray class spoon.support.reflect.code.CtLiteralImpl
statement is: // 'o'
byteArray[5] = ((byte) (32)), class spoon.support.reflect.code.CtAssignmentImpl
Assigned : byteArray[5] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl byte Assignment:((byte) (32)) Ct is: // 'o'
byteArray[5] = ((byte) (32))
target : byteArray class spoon.support.reflect.code.CtLiteralImpl
statement is: // ' '
byteArray[6] = ((byte) (87)), class spoon.support.reflect.code.CtAssignmentImpl
Assigned : byteArray[6] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl byte Assignment:((byte) (87)) Ct is: // ' '
byteArray[6] = ((byte) (87))
target : byteArray class spoon.support.reflect.code.CtLiteralImpl
statement is: // 'W'
byteArray[7] = ((byte) (111)), class spoon.support.reflect.code.CtAssignmentImpl
Assigned : byteArray[7] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl byte Assignment:((byte) (111)) Ct is: // 'W'
byteArray[7] = ((byte) (111))
target : byteArray class spoon.support.reflect.code.CtLiteralImpl
statement is: // 'o'
byteArray[8] = ((byte) (114)), class spoon.support.reflect.code.CtAssignmentImpl
Assigned : byteArray[8] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl byte Assignment:((byte) (114)) Ct is: // 'o'
byteArray[8] = ((byte) (114))
target : byteArray class spoon.support.reflect.code.CtLiteralImpl
statement is: // 'r'
byteArray[9] = ((byte) (108)), class spoon.support.reflect.code.CtAssignmentImpl
Assigned : byteArray[9] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl byte Assignment:((byte) (108)) Ct is: // 'r'
byteArray[9] = ((byte) (108))
target : byteArray class spoon.support.reflect.code.CtLiteralImpl
statement is: // 'l'
byteArray[10] = ((byte) (100))// 'd'
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : byteArray[10] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl byte Assignment:((byte) (100)) Ct is: // 'l'
byteArray[10] = ((byte) (100))// 'd'

target : byteArray class spoon.support.reflect.code.CtLiteralImpl
statement is: byteArray[11] = ((byte) (33)), class spoon.support.reflect.code.CtAssignmentImpl
Assigned : byteArray[11] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl byte Assignment:((byte) (33)) Ct is: byteArray[11] = ((byte) (33))
target : byteArray class spoon.support.reflect.code.CtLiteralImpl
statement is: // '!'
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 5, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 17
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: byte[] byteArray = new byte[6];
int _int = 72;
byteArray[0] = (byte) _int;
int _int = 101;
byteArray[1] = (byte) _int;
byteArray[0] = (byte) _int;
byteArray[0] = (byte) _int;
byteArray[0] = (byte) _int;
byteArray[0] = (byte) _int;
byteArray[0] = (byte) _int;
byteArray[0] = (byte) _int;
byteArray[0] = (byte) _int;
byteArray[0] = (byte) _int;
byteArray[0] = (byte) _int;
byteArray[0] = (byte) _int;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) byteArray[0]).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("tXNI#b")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("tXNI#b");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("public class MyTestClass { public static void main(String[] args) { System.out.println(\"Hello, world!\"); } }");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("public class MyTestClass { public static void main(String[] args) { System.out.println(\"Hello, world!\"); } }"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "public class MyTestClass { public static void main(String[] args) { System.out.println(\"Hello, world!\"); } }";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("a]")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("a]");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("a b c 1234567890");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("a b c 1234567890"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "a b c 1234567890";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("native")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("native");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("native");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("native"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "native";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("/d<")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("/d<");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("// This is a comment\n public class MyClass {\n  public static void main(String[] args) {\n   System.out.println(\"Hello, world!\");\n  }\n }");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("// This is a comment\n public class MyClass {\n  public static void main(String[] args) {\n   System.out.println(\"Hello, world!\");\n  }\n }"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "// This is a comment\n public class MyClass {\n  public static void main(String[] args) {\n   System.out.println(\"Hello, world!\");\n  }\n }";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("ijYr:M5PP")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("ijYr:M5PP");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("This is a sample input for testing.");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("This is a sample input for testing."), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "This is a sample input for testing.";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("dnn8gd_e")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("dnn8gd_e");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("dnn8gd_e");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
    }
}
statement is: StringReader stringReader = new StringReader("dnn8gd_e"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase is: String string = "dnn8gd_e";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("|pxVzr#5=zrOT")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("|pxVzr#5=zrOT");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("|pxVzr#5=zrOT123");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("|pxVzr#5=zrOT123"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "|pxVzr#5=zrOT123";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("zR$vm!q5j.")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("zR$vm!q5j.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("I have a cat that is black and white.");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("I have a cat that is black and white."), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "I have a cat that is black and white.";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("short")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: org.evosuite.testcase.statements.ArrayStatement@7f725afa type is: class org.evosuite.testcase.statements.ArrayStatement return type class [C
statement code is: char[] charArray = new char[3]
statement is: read([C)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int read = stringReader.read(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("short");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
char[] charArray = new char[3];
stringReader.read(charArray);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("The quick brown fox jumps over the lazy dog.");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        char[] charArray = new char[3];
        stringReader.read(charArray);
        javaParserTokenManager.getNextToken();
        // Test data for a case-insensitive comparison of the String "the"
        String testString1 = "The";
        String testString2 = "the";
        boolean result = testString1.equalsIgnoreCase(testString2);
        System.out.println("Are the two strings equal in a case-insensitive comparison? " + result);
        // Test data for a case-sensitive comparison of the String "The"
        String testString3 = "The";
        String testString4 = "THE";
        boolean result2 = testString3.equals(testString4);
        System.out.println("Are the two strings equal in a case-sensitive comparison? " + result2);
    }
}
statement is: StringReader stringReader = new StringReader("The quick brown fox jumps over the lazy dog."), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: char[] charArray = new char[3], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [3] Ct is: char[] charArray = new char[3] isAssignment: false Array: new char[3] Elements: []
lengths: [3] [3]
Their type are: class [C char[]
statement is: stringReader.read(charArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: stringReader.read(charArray) target is: stringReader method is: read(char[])
source statement: java.io.StringReader(Ljava/lang/String;)V callee: VariableReference: Statement 0, type java.io.StringReaderindex is: 1
Matched Method is: read([C)I
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: // Test data for a case-insensitive comparison of the String "the"
String testString1 = "The", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String testString2 = "the", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: boolean result = testString1.equalsIgnoreCase(testString2), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: testString1.equalsIgnoreCase(testString2) target is: testString1 method is: equalsIgnoreCase(java.lang.String)
statement is: System.out.println("Are the two strings equal in a case-insensitive comparison? " + result), class spoon.support.reflect.code.CtInvocationImpl
invocation is: System.out.println("Are the two strings equal in a case-insensitive comparison? " + result) target is: System.out method is: println(java.lang.String)
statement is: // Test data for a case-sensitive comparison of the String "The"
String testString3 = "The", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String testString4 = "THE", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: boolean result2 = testString3.equals(testString4), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: testString3.equals(testString4) target is: testString3 method is: equals(java.lang.Object)
statement is: System.out.println("Are the two strings equal in a case-sensitive comparison? " + result2), class spoon.support.reflect.code.CtInvocationImpl
invocation is: System.out.println("Are the two strings equal in a case-sensitive comparison? " + result2) target is: System.out method is: println(java.lang.String)
* this is vulnerable: String string = "The"
* this is vulnerable: String string = "the"
* this is vulnerable: String string = "The"
* this is vulnerable: String string = "THE"
TestCase is: String string = "The quick brown fox jumps over the lazy dog.";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
char[] charArray = new char[3];
((Reader) string).read(charArray);
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "The";
String string = "the";
String string = "The";
String string = "THE";

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("synchronized")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("synchronized");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("synchronized");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("synchronized"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "synchronized";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("^=")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("^=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("^=+*()[]{}\\|;:\'\",<>.!/\\");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("^=+*()[]{}\\|;:\'\",<>.!/\\"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "^=+*()[]{}\\|;:'\",<>.!/\\";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("<<=")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, (byte)49, (-224))
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("<<=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (byte)49, (-224));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("<<=");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, ((byte) (0x3c)), -224);// 0x3c is the ASCII code for "<" character

        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("<<="), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, ((byte) (0x3c)), -224)// 0x3c is the ASCII code for "<" character
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "<<=";
StringReader stringReader = new StringReader(string);
int _int = 60;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, (-224));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("while")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, 0, 89)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("while");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 0, 89);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream javaCharStream = new JavaCharStream(stringReader, 0, 89);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: CharStream javaCharStream = new JavaCharStream(stringReader, 0, 89), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: int _int = 0;
int _int = 89;
JavaCharStream javaCharStream = new JavaCharStream((Reader) _int, _int, 89);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("short")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("short");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("The quick brown fox jumps over the lazy dog.");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("The quick brown fox jumps over the lazy dog."), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "The quick brown fox jumps over the lazy dog.";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("throws")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, (byte)4, 12)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("throws");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (byte)4, 12);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("throws");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader, ((byte) (4)), 12);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("throws"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, ((byte) (4)), 12), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "throws";
StringReader stringReader = new StringReader(string);
int _int = 4;
int _int = 12;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("assert")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("assert");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("assert");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        Token token = javaParserTokenManager.getNextToken();
        Assert.assertTrue(token.kind == ParserConstants.ASSERT);
    }
}
statement is: StringReader stringReader = new StringReader("assert"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Token token = javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: Assert.assertTrue(token.kind == ParserConstants.ASSERT), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Assert.assertTrue(token.kind == ParserConstants.ASSERT) target is: Assert method is: assertTrue()
TestCase is: String string = "assert";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("enum")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("enum");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("enum");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        // The "enum" keyword is used to define an enumerated type, which is a user-defined data type that consists of a set of named values. }}
    }
}
statement is: StringReader stringReader = new StringReader("enum"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: // The "enum" keyword is used to define an enumerated type, which is a user-defined data type that consists of a set of named values. }}, class spoon.support.reflect.code.CtCommentImpl
TestCase is: String string = "enum";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("new")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("new");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("new");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("new"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "new";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("try")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, (byte)49, 38)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("try");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (byte)49, 38);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("try { ... }");// This is a more descriptive example of a try-catch block

        JavaCharStream javaCharStream = new JavaCharStream(stringReader, ((byte) (49)), 38);// Changed the primitive values and Strings to more illustrative examples

        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("try { ... }")// This is a more descriptive example of a try-catch block
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader, ((byte) (49)), 38)// Changed the primitive values and Strings to more illustrative examples
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "try { ... }";
StringReader stringReader = new StringReader(string);
int _int = 49;
int _int = 38;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, _int);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("float")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("float");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("float");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        // Changed the primitive value of float to a more descriptive example, such as 3.14159f
        float floatValue = 3.14159F;
        // Changed the string value of "float" to a more representative example, such as "PI"
        String floatType = "PI";
    }
}
statement is: StringReader stringReader = new StringReader("float"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: // Changed the primitive value of float to a more descriptive example, such as 3.14159f
float floatValue = 3.14159F, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: // Changed the string value of "float" to a more representative example, such as "PI"
String floatType = "PI", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
* this is vulnerable: float _float = 3.14159F
* this is vulnerable: String string = "PI"
TestCase is: String string = "float";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
float _float = 3.14159F;
String string = "PI";

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("void")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("void");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: CharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("long")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("long");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("1234567890");// Long integer value

        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("1234567890")// Long integer value
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "1234567890";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("this")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("this");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("this is a test of the JavaParser");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("this is a test of the JavaParser"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "this is a test of the JavaParser";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("continue")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("continue");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("continue loop");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("continue loop"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "continue loop";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("case")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("case");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("case");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        // Improved test data:
        StringReader stringReader = new StringReader("switch");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("case"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: // Improved test data:
StringReader stringReader = new StringReader("switch"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 8
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "case";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "switch";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("null")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("null");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("\"Hello World!\"");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("\"Hello World!\""), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "\"Hello World!\"";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("class")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("class");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: CharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("transient")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("transient");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("transient_field");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("transient_field"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "transient_field";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("p4")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: org.evosuite.testcase.statements.AssignmentStatement@c5d7f578 type is: class org.evosuite.testcase.statements.AssignmentStatement return type int
statement code is: javaParserTokenManager.jjround = (-1)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("p4");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.jjround = (-1);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("p4");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.jjround = -1;
        javaParserTokenManager.getNextToken();
        // Improved test data:
        StringReader stringReader2 = new StringReader("p4");
        JavaCharStream javaCharStream2 = new JavaCharStream(stringReader2);
        JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream2);
        javaParserTokenManager2.jjround = -1;
        javaParserTokenManager2.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("p4"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.jjround = -1, class spoon.support.reflect.code.CtAssignmentImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: // Improved test data:
StringReader stringReader2 = new StringReader("p4"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream2 = new JavaCharStream(stringReader2), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream2), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager2.jjround = -1, class spoon.support.reflect.code.CtAssignmentImpl
statement is: javaParserTokenManager2.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager2.getNextToken() target is: javaParserTokenManager2 method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 8
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "p4";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "p4";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: org.evosuite.testcase.statements.ArrayStatement@334c964a type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[3]
statement is: org.evosuite.testcase.statements.AssignmentStatement@83d92fc6 type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[0] = (byte)46
statement is: java.io.ByteArrayInputStream([B)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.ByteArrayInputStream
statement code is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: byte[] byteArray = new byte[3];
byteArray[0] = (byte)46;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        byte[] byteArray = new byte[]{ 97, 108, 97 };
        ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
        JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: byte[] byteArray = new byte[]{ 97, 108, 97 }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: byte[] byteArray = new byte[3] isAssignment: false Array: new byte[]{ 97, 108, 97 } Elements: [97, 108, 97]
lengths: [3] []
statement is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: java.io.ByteArrayInputStream([B)V
statement is: JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;)V
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
statement is: org.evosuite.testcase.statements.ArrayStatement@fc3fbe9f type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[9]
statement is: org.evosuite.testcase.statements.AssignmentStatement@17f934fd type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[0] = (byte)39
statement is: java.io.ByteArrayInputStream([B)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.ByteArrayInputStream
statement code is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: byte[] byteArray = new byte[9];
byteArray[0] = (byte)39;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        byte[] byteArray = new byte[9];
        byteArray[0] = ((byte) (12));// Changed from 39 to 12 to make the data more representative of a real-world scenario.

        ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
        JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: byte[] byteArray = new byte[9], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [9] Ct is: byte[] byteArray = new byte[9] isAssignment: false Array: new byte[9] Elements: []
lengths: [9] [9]
Their type are: class [B byte[]
statement is: byteArray[0] = ((byte) (12))// Changed from 39 to 12 to make the data more representative of a real-world scenario.
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : byteArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl byte Assignment:((byte) (12)) Ct is: byteArray[0] = ((byte) (12))// Changed from 39 to 12 to make the data more representative of a real-world scenario.

target : byteArray class spoon.support.reflect.code.CtLiteralImpl
statement is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 4, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: byte[] byteArray = new byte[9];
int _int = 12;
byteArray[0] = (byte) _int;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: org.evosuite.testcase.statements.ArrayStatement@98402db7 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[3]
statement is: org.evosuite.testcase.statements.AssignmentStatement@2dc44403 type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[0] = (byte)49
statement is: org.evosuite.testcase.statements.AssignmentStatement@1d8abf4a type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[1] = (byte)49
statement is: java.io.ByteArrayInputStream([B)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.ByteArrayInputStream
statement code is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: byte[] byteArray = new byte[3];
byteArray[0] = (byte)49;
byteArray[1] = (byte)49;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        byte[] byteArray = new byte[3];
        byteArray[0] = ((byte) (49));// ASCII value of '1'

        byteArray[1] = ((byte) (50));// ASCII value of '2'

        ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
        JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: byte[] byteArray = new byte[3], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [3] Ct is: byte[] byteArray = new byte[3] isAssignment: false Array: new byte[3] Elements: []
lengths: [3] [3]
Their type are: class [B byte[]
statement is: byteArray[0] = ((byte) (49))// ASCII value of '1'
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : byteArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl byte Assignment:((byte) (49)) Ct is: byteArray[0] = ((byte) (49))// ASCII value of '1'

target : byteArray class spoon.support.reflect.code.CtLiteralImpl
statement is: byteArray[1] = ((byte) (50))// ASCII value of '2'
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : byteArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl byte Assignment:((byte) (50)) Ct is: byteArray[1] = ((byte) (50))// ASCII value of '2'

target : byteArray class spoon.support.reflect.code.CtLiteralImpl
statement is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 5, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 7
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: byte[] byteArray = new byte[3];
int _int = 49;
byteArray[0] = (byte) _int;
int _int = 50;
byteArray[1] = (byte) _int;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) byteArrayInputStream).getNextToken();

statement is: org.evosuite.testcase.statements.ArrayStatement@3408e6a5 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[9]
statement is: org.evosuite.testcase.statements.AssignmentStatement@56d9c31d type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[0] = (byte)39
statement is: org.evosuite.testcase.statements.AssignmentStatement@39a62d34 type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[1] = (byte)39
statement is: java.io.ByteArrayInputStream([B)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.ByteArrayInputStream
statement code is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: byte[] byteArray = new byte[9];
byteArray[0] = (byte)39;
byteArray[1] = (byte)39;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        byte[] byteArray = new byte[9];
        byteArray[0] = ((byte) (48));
        byteArray[1] = ((byte) (57));
        ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
        JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: byte[] byteArray = new byte[9], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [9] Ct is: byte[] byteArray = new byte[9] isAssignment: false Array: new byte[9] Elements: []
lengths: [9] [9]
Their type are: class [B byte[]
statement is: byteArray[0] = ((byte) (48)), class spoon.support.reflect.code.CtAssignmentImpl
Assigned : byteArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl byte Assignment:((byte) (48)) Ct is: byteArray[0] = ((byte) (48))
target : byteArray class spoon.support.reflect.code.CtLiteralImpl
statement is: byteArray[1] = ((byte) (57)), class spoon.support.reflect.code.CtAssignmentImpl
Assigned : byteArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl byte Assignment:((byte) (57)) Ct is: byteArray[1] = ((byte) (57))
target : byteArray class spoon.support.reflect.code.CtLiteralImpl
statement is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 5, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 7
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: byte[] byteArray = new byte[9];
int _int = 48;
byteArray[0] = (byte) _int;
int _int = 57;
byteArray[1] = (byte) _int;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) byteArrayInputStream).getNextToken();

statement is: org.evosuite.testcase.statements.ArrayStatement@8910655f type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[9]
statement is: org.evosuite.testcase.statements.AssignmentStatement@bdfa3b38 type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[0] = (byte)39
statement is: org.evosuite.testcase.statements.AssignmentStatement@40ec01b3 type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[2] = (byte)39
statement is: java.io.ByteArrayInputStream([B)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.ByteArrayInputStream
statement code is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: byte[] byteArray = new byte[9];
byteArray[0] = (byte)39;
byteArray[2] = (byte)39;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        byte[] byteArray = new byte[]{ 39, 0, 48, 12, 65, -128, -1, 0 };
        // We can replace the hardcoded values with more descriptive ones that represent a string "39048A-128"
        byteArray = new byte[]{ ((byte) ('#')), 0, ((byte) ('0')), 12, ((byte) ('A')), -128, -1, 0 };
        ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
        JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: byte[] byteArray = new byte[]{ 39, 0, 48, 12, 65, -128, -1, 0 }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: byte[] byteArray = new byte[9] isAssignment: false Array: new byte[]{ 39, 0, 48, 12, 65, -128, -1, 0 } Elements: [39, 0, 48, 12, 65, -128, -1, 0]
lengths: [9] []
statement is: // We can replace the hardcoded values with more descriptive ones that represent a string "39048A-128"
byteArray = new byte[]{ ((byte) ('#')), 0, ((byte) ('0')), 12, ((byte) ('A')), -128, -1, 0 }, class spoon.support.reflect.code.CtAssignmentImpl
statement is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: java.io.ByteArrayInputStream([B)V
statement is: JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;)V
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("\"true\"")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("\"true\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("\"This is a test string\"");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("\"This is a test string\""), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "\"This is a test string\"";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: org.evosuite.testcase.statements.ArrayStatement@d16ed9ee type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[2]
statement is: org.evosuite.testcase.statements.AssignmentStatement@9fa4a42a type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[0] = (byte)48
statement is: java.io.ByteArrayInputStream([B)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.ByteArrayInputStream
statement code is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, (byte)0, (byte)48)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: byte[] byteArray = new byte[2];
byteArray[0] = (byte)48;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, (byte)0, (byte)48);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        byte[] byteArray = new byte[]{ ((byte) (65)), ((byte) (66)) };
        ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
        JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, ((byte) (0)), ((byte) (65)));
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: byte[] byteArray = new byte[]{ ((byte) (65)), ((byte) (66)) }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: byte[] byteArray = new byte[2] isAssignment: false Array: new byte[]{ ((byte) (65)), ((byte) (66)) } Elements: [((byte) (65)), ((byte) (66))]
lengths: [2] []
statement is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: java.io.ByteArrayInputStream([B)V
statement is: JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, ((byte) (0)), ((byte) (65))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 4, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase Could not be added: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: int _int = 0;
int _int = 65;
JavaCharStream javaCharStream = new JavaCharStream((InputStream) _int, _int, (int) (byte)48);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);

statement is: org.evosuite.testcase.statements.ArrayStatement@1916f987 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[7]
statement is: org.evosuite.testcase.statements.AssignmentStatement@5bb97e56 type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[0] = (byte)94
statement is: org.evosuite.testcase.statements.AssignmentStatement@ed8259e6 type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[1] = (byte)94
statement is: java.io.ByteArrayInputStream([B)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.ByteArrayInputStream
statement code is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: byte[] byteArray = new byte[7];
byteArray[0] = (byte)94;
byteArray[1] = (byte)94;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        byte[] byteArray = new byte[]{ ((byte) (94)), ((byte) (94)) };
        ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
        JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: byte[] byteArray = new byte[]{ ((byte) (94)), ((byte) (94)) }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: byte[] byteArray = new byte[7] isAssignment: false Array: new byte[]{ ((byte) (94)), ((byte) (94)) } Elements: [((byte) (94)), ((byte) (94))]
lengths: [7] []
statement is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: java.io.ByteArrayInputStream([B)V
statement is: JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;)V
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
statement is: org.evosuite.testcase.statements.ArrayStatement@71fe8f6c type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[3]
statement is: org.evosuite.testcase.statements.AssignmentStatement@3061afbc type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[0] = (byte)48
statement is: org.evosuite.testcase.statements.AssignmentStatement@f24ff6d5 type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[1] = (byte)119
statement is: java.io.ByteArrayInputStream([B)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.ByteArrayInputStream
statement code is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: byte[] byteArray = new byte[3];
byteArray[0] = (byte)48;
byteArray[1] = (byte)119;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        byte[] byteArray = new byte[3];
        byteArray[0] = ((byte) (65));// 'A'

        byteArray[1] = ((byte) (255));// 'ÿ'

        ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
        JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: byte[] byteArray = new byte[3], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [3] Ct is: byte[] byteArray = new byte[3] isAssignment: false Array: new byte[3] Elements: []
lengths: [3] [3]
Their type are: class [B byte[]
statement is: byteArray[0] = ((byte) (65))// 'A'
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : byteArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl byte Assignment:((byte) (65)) Ct is: byteArray[0] = ((byte) (65))// 'A'

target : byteArray class spoon.support.reflect.code.CtLiteralImpl
statement is: byteArray[1] = ((byte) (255))// 'ÿ'
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : byteArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl byte Assignment:((byte) (255)) Ct is: byteArray[1] = ((byte) (255))// 'ÿ'

target : byteArray class spoon.support.reflect.code.CtLiteralImpl
statement is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 5, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 7
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: byte[] byteArray = new byte[3];
int _int = 65;
byteArray[0] = (byte) _int;
int _int = 255;
byteArray[1] = (byte) _int;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) byteArrayInputStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("1D-T|1Fmjz&Q-IEw")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;III)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0, (-2776), (byte)38, (byte)38)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("1D-T|1Fmjz&Q-IEw");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-2776), (byte)38, (byte)38);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Arrange
        String input = "1234567890";
        int expectedOutput = 10;
        // Act
        int actualOutput = someFunction(input);
        // Assert
        assertEquals(expectedOutput, actualOutput);
    }
}
statement is: // Arrange
String input = "1234567890", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: int expectedOutput = 10, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: // Act
int actualOutput = someFunction(input), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: someFunction(input) target is:  method is: someFunction(java.lang.String)
statement is: // Assert
assertEquals(expectedOutput, actualOutput), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Assert
assertEquals(expectedOutput, actualOutput) target is:  method is: assertEquals(int,int)
* this is vulnerable: String string = "1234567890"
* this is vulnerable: int _int = 10
TestCase is: String string = "1234567890";
int _int = 10;

statement is: org.evosuite.testcase.statements.ArrayStatement@c04aa88c type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[8]
statement is: org.evosuite.testcase.statements.AssignmentStatement@1827bf39 type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[0] = (byte)122
statement is: org.evosuite.testcase.statements.AssignmentStatement@f66610f4 type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[1] = (byte)51
statement is: org.evosuite.testcase.statements.AssignmentStatement@91c4d3c9 type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[2] = (byte)122
statement is: org.evosuite.testcase.statements.AssignmentStatement@1ed605b0 type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[3] = (byte)122
statement is: org.evosuite.testcase.statements.AssignmentStatement@56d34998 type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[4] = (byte) (-61)
statement is: java.io.ByteArrayInputStream([B)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.ByteArrayInputStream
statement code is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: byte[] byteArray = new byte[8];
byteArray[0] = (byte)122;
byteArray[1] = (byte)51;
byteArray[2] = (byte)122;
byteArray[3] = (byte)122;
byteArray[4] = (byte) (-61);
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        byte[] byteArray = new byte[]{ 0x7a, 0x33, 0x7a, 0x7a, ((byte) (-61)) };
        ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
        JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: byte[] byteArray = new byte[]{ 0x7a, 0x33, 0x7a, 0x7a, ((byte) (-61)) }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: byte[] byteArray = new byte[8] isAssignment: false Array: new byte[]{ 0x7a, 0x33, 0x7a, 0x7a, ((byte) (-61)) } Elements: [0x7a, 0x33, 0x7a, 0x7a, ((byte) (-61))]
lengths: [8] []
statement is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: java.io.ByteArrayInputStream([B)V
statement is: JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;)V
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
statement is: org.evosuite.testcase.statements.ArrayStatement@12ecb896 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[3]
statement is: org.evosuite.testcase.statements.AssignmentStatement@5808308c type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[0] = (byte)49
statement is: org.evosuite.testcase.statements.AssignmentStatement@dd5ed5c0 type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[1] = (byte) (-37)
statement is: java.io.ByteArrayInputStream([B)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.ByteArrayInputStream
statement code is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: byte[] byteArray = new byte[3];
byteArray[0] = (byte)49;
byteArray[1] = (byte) (-37);
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        byte[] byteArray = new byte[]{ 49, -37 };
        ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
        JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: byte[] byteArray = new byte[]{ 49, -37 }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: byte[] byteArray = new byte[3] isAssignment: false Array: new byte[]{ 49, -37 } Elements: [49, -37]
lengths: [3] []
statement is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: java.io.ByteArrayInputStream([B)V
statement is: JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;)V
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("m@(E")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0, 1)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("m@(E");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 1);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("m@(E");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, "myIdentifier");
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("m@(E"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, "myIdentifier"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;I)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 4
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "m@(E";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
String string = "myIdentifier";
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, (int) string);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("K~}|x")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: ReInit(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: javaParserTokenManager.ReInit(arg0)
test data is: StringReader stringReader = new StringReader("K~}|x");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.ReInit(javaCharStream);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.ReInit(javaCharStream);
    }
}
statement is: CharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V
statement is: javaParserTokenManager.ReInit(javaCharStream), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.ReInit(javaCharStream) target is: javaParserTokenManager method is: ReInit(CharStream)
statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("@1%c+")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("@1%c+");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: CharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader(" vl)0(eTD~wTCI,Z;-")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader(" vl)0(eTD~wTCI,Z;-");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
    }
}
statement is: CharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("oT~?V6Z?5^K}")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("oT~?V6Z?5^K}");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("The quick brown fox jumps over the lazy dog.");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("The quick brown fox jumps over the lazy dog."), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 5
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "The quick brown fox jumps over the lazy dog.";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: org.evosuite.testcase.statements.ArrayStatement@cb7e1fcc type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[1]
statement is: org.evosuite.testcase.statements.AssignmentStatement@ad4ad802 type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[0] = (byte) (-30)
statement is: java.io.ByteArrayInputStream([B)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.ByteArrayInputStream
statement code is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: byte[] byteArray = new byte[1];
byteArray[0] = (byte) (-30);
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        byte[] byteArray = new byte[]{ ((byte) (-30)) };
        ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
        JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
    }
}
statement is: byte[] byteArray = new byte[]{ ((byte) (-30)) }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: byte[] byteArray = new byte[1] isAssignment: false Array: new byte[]{ ((byte) (-30)) } Elements: [((byte) (-30))]
lengths: [1] []
statement is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: java.io.ByteArrayInputStream([B)V
statement is: JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/InputStream;)V
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("(CsmGue9s>(Kub; I2W")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: SwitchTo(I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: javaParserTokenManager.SwitchTo(1)
test data is: StringReader stringReader = new StringReader("(CsmGue9s>(Kub; I2W");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.SwitchTo(1);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data for StringReader
        StringReader stringReader = new StringReader("The quick brown fox jumps over the lazy dog");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.SwitchTo(1);
    }
}
statement is: // Improved test data for StringReader
StringReader stringReader = new StringReader("The quick brown fox jumps over the lazy dog"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.SwitchTo(1), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.SwitchTo(1) target is: javaParserTokenManager method is: SwitchTo(int)
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: SwitchTo(I)V
TestCase is: String string = "The quick brown fox jumps over the lazy dog";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
int _int = 1;
((JavaParserTokenManager) javaCharStream).SwitchTo(_int);

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("7nQinyH")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: SwitchTo(I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: javaParserTokenManager.SwitchTo(66)
test data is: StringReader stringReader = new StringReader("7nQinyH");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.SwitchTo(66);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("abc123");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.SwitchTo(66);
    }
}
statement is: StringReader stringReader = new StringReader("abc123"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.SwitchTo(66), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.SwitchTo(66) target is: javaParserTokenManager method is: SwitchTo(int)
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: SwitchTo(I)V
TestCase is: String string = "abc123";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
int _int = 66;
((JavaParserTokenManager) javaCharStream).SwitchTo(_int);

statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream((Reader) null)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: SwitchTo(I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: javaParserTokenManager.SwitchTo((-1))
test data is: JavaCharStream javaCharStream = new JavaCharStream((Reader) null);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.SwitchTo((-1));

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream javaCharStream = new JavaCharStream("A string with some characters");
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.SwitchTo(-1);
    }
}
statement is: CharStream javaCharStream = new JavaCharStream("A string with some characters"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.SwitchTo(-1), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.SwitchTo(-1) target is: javaParserTokenManager method is: SwitchTo(int)
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 1, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 2
Matched Method is: SwitchTo(I)V
i 0 Parameters size() 0 Num of Method Parameters: 1
TestCase is: String string = "A string with some characters";
JavaCharStream javaCharStream = new JavaCharStream((Reader) string);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
int _int = null;
((JavaParserTokenManager) javaCharStream).SwitchTo(_int);

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("SWB\"_")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0, 2)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("SWB\"_");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 2);
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CharStream javaCharStream1 = new JavaCharStream(stringReader1);
        JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream1, 2);
        javaParserTokenManager1.getNextToken();
    }
}
statement is: CharStream javaCharStream1 = new JavaCharStream(stringReader1), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V
statement is: JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream1, 2), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager1.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager1.getNextToken() target is: javaParserTokenManager1 method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;I)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 1
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase Could not be added: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: int _int = 2;
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager((JavaCharStream) _int, 2);

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("implements")
statement is: com.soops.CEN4010.JMCA.JParser.JavaCharStream(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaCharStream
statement code is: JavaCharStream javaCharStream = new JavaCharStream(arg0)
statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0)
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
statement is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token nextToken = javaParserTokenManager.getNextToken()
test data is: StringReader stringReader = new StringReader("implements");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("implements");
        JavaCharStream javaCharStream = new JavaCharStream(stringReader);
        JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
        javaParserTokenManager.getNextToken();
        javaParserTokenManager.getNextToken();
    }
}
statement is: StringReader stringReader = new StringReader("implements"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaCharStream javaCharStream = new JavaCharStream(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
statement is: javaParserTokenManager.getNextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.getNextToken() target is: javaParserTokenManager method is: getNextToken()
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
source statement: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V callee: VariableReference: Statement 2, type com.soops.CEN4010.JMCA.JParser.JavaParserTokenManagerindex is: 3
Matched Method is: getNextToken()Lcom/soops/CEN4010/JMCA/JParser/Token;
TestCase is: String string = "implements";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager((JavaCharStream) null, 2)
statement is: MoreLexicalActions()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: javaParserTokenManager.MoreLexicalActions()
test data is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager((JavaCharStream) null, 2);
javaParserTokenManager.MoreLexicalActions();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ParserTokenManager javaParserTokenManager = new JavaParserTokenManager(((JavaCharStream) (null)), 2);
        javaParserTokenManager.MoreLexicalActions();
        // Improved test data
        int numberOfTokens = 10;
        String[] tokens = new String[]{ "public", "static", "void", "main", "(", ")", "{", "System.out.println", "(", "\"Hello World!\"", ");", "}" };
    }
}
statement is: ParserTokenManager javaParserTokenManager = new JavaParserTokenManager(((JavaCharStream) (null)), 2), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.MoreLexicalActions(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.MoreLexicalActions() target is: javaParserTokenManager method is: MoreLexicalActions()
statement is: // Improved test data
int numberOfTokens = 10, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String[] tokens = new String[]{ "public", "static", "void", "main", "(", ")", "{", "System.out.println", "(", "\"Hello World!\"", ");", "}" }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
* this is vulnerable: int _int = 10
TestCase is: int _int = 2;
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager((JavaCharStream) _int, 2);
int _int = 10;

statement is: com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(Lcom/soops/CEN4010/JMCA/JParser/JavaCharStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager
statement code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager((JavaCharStream) null)
statement is: com.soops.CEN4010.JMCA.JParser.Token()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.soops.CEN4010.JMCA.JParser.Token
statement code is: Token token = new Token()
statement is: TokenLexicalActions(Lcom/soops/CEN4010/JMCA/JParser/Token;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: javaParserTokenManager.TokenLexicalActions(arg0)
test data is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager((JavaCharStream) null);
Token token = new Token();
javaParserTokenManager.TokenLexicalActions(token);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ParserTokenManager javaParserTokenManager = new JavaParserTokenManager(new JavaCharStream("Hello, World!"));
        Token token = new Token();
        javaParserTokenManager.TokenLexicalActions(token);
    }
}
statement is: ParserTokenManager javaParserTokenManager = new JavaParserTokenManager(new JavaCharStream("Hello, World!")), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Token token = new Token(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaParserTokenManager.TokenLexicalActions(token), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaParserTokenManager.TokenLexicalActions(token) target is: javaParserTokenManager method is: TokenLexicalActions(Token)
TestCase is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager((JavaCharStream) null);
Token token = new Token();

* test suite isTestSuite: 258
Test 0: 
StringReader stringReader = new StringReader("transien&");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 1: 
StringReader stringReader = new StringReader("2pqWNq;7");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.ReInit(javaCharStream, 1);
Test 2: 
StringReader stringReader = new StringReader("+D W5c\"$7-r8|");
char[] charArray = new char[4];
CharBuffer wrap = CharBuffer.wrap(charArray);
stringReader.read(wrap);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 3: 
StringReader stringReader = new StringReader("oT~?V6Z?5^K}");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.jjmatchedKind = 1;
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 1, column 5.  Encountered: \"V\" (86), after : \"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 4: 
StringReader stringReader = new StringReader("a]");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
MockPrintStream mockPrintStream = new MockPrintStream(javaParserTokenManager.debugStream, false);
javaParserTokenManager.setDebugStream(mockPrintStream);
Test 5: 
StringReader stringReader = new StringReader(" column ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 6: 
StringReader stringReader = new StringReader("/shB/gK S}~,pmRN");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 7: 
StringReader stringReader = new StringReader("eZ.~=QED)Svy");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 8: 
StringReader stringReader = new StringReader("=wg5-{EWToOt:)Pf-}Z");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 9: 
StringReader stringReader = new StringReader("<<");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 10: 
StringReader stringReader = new StringReader("!<R#x");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 11: 
byte[] byteArray = new byte[7];
byteArray[0] = (byte)10;
byteArray[1] = (byte)100;
byteArray[2] = (byte)34;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 2, column 7.  Encountered: <EOF> after : \"\\\"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 12: 
StringReader stringReader = new StringReader("|pxVzr#5=zrOT");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
stringReader.read();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 0);
javaParserTokenManager.getNextToken();
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 1, column 6.  Encountered: \"#\" (35), after : \"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 13: 
byte[] byteArray = new byte[7];
byteArray[0] = (byte)36;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 14: 
StringReader stringReader = new StringReader("%4r]|1o`bRqu");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 15: 
StringReader stringReader = new StringReader("'%Bvy9N}wU$:[O");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (byte)48, (-829));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 48, column -827.  Encountered: \"B\" (66), after : \"\\'%\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 16: 
StringReader stringReader = new StringReader("(CsmGue9s>(Kub; I2W");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 17: 
StringReader stringReader = new StringReader("g*fK=&Pt[,{");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 18: 
StringReader stringReader = new StringReader("+D W5c\"$7-r8|");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 19: 
byte[] byteArray = new byte[2];
byteArray[0] = (byte)87;
byteArray[1] = (byte)44;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 20: 
StringReader stringReader = new StringReader("0000");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 21: 
StringReader stringReader = new StringReader("2pqWNq;7");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 22: 
StringReader stringReader = new StringReader("3a310I5*4UB=p@m");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 23: 
StringReader stringReader = new StringReader(",4BJFL/0");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaCharStream.readChar();
javaParserTokenManager.getNextToken();
Test 24: 
StringReader stringReader = new StringReader("6 Hy{%B`R/eKLxK");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 25: 
StringReader stringReader = new StringReader("7nQinyH");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 26: 
StringReader stringReader = new StringReader("9Cx_Rc,qsTLEG?");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-1043), (-1477));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
Token nextToken = javaParserTokenManager.getNextToken();
javaParserTokenManager.SkipLexicalActions(nextToken);
Test 27: 
StringReader stringReader = new StringReader(":s>ZQ?~r]PKnE3,");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 0, 0);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 28: 
StringReader stringReader = new StringReader(";");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 29: 
StringReader stringReader = new StringReader(">u}=h");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 30: 
StringReader stringReader = new StringReader("r3t@A");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 2);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 1, column 6.  Encountered: <EOF> after : \"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 31: 
StringReader stringReader = new StringReader("C#QqvD");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.jjFillToken();
Test 32: 
StringReader stringReader = new StringReader("EQqWN7");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 33: 
StringReader stringReader = new StringReader("GUYb`!eTC%");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 34: 
StringReader stringReader = new StringReader("H");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 35: 
StringReader stringReader = new StringReader("Idm2[OzIQW#CZby#");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 36: 
byte[] byteArray = new byte[3];
byteArray[0] = (byte)74;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 37: 
StringReader stringReader = new StringReader("K~}|x");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 38: 
StringReader stringReader = new StringReader("L(M(7\"mY");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 39: 
StringReader stringReader = new StringReader("M~!Mu;KD'r");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 40: 
byte[] byteArray = new byte[3];
byteArray[0] = (byte)78;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 41: 
StringReader stringReader = new StringReader("+O");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 42: 
StringReader stringReader = new StringReader("PJI$&&");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 43: 
byte[] byteArray = new byte[1];
byteArray[0] = (byte)82;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 44: 
StringReader stringReader = new StringReader("SWB\"_");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 45: 
StringReader stringReader = new StringReader("TiI*");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 46: 
StringReader stringReader = new StringReader("U");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 47: 
StringReader stringReader = new StringReader("Vb yhY");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 48: 
StringReader stringReader = new StringReader("XR54-@@C!$&");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 49: 
StringReader stringReader = new StringReader("Ynu]|oFju'GY*$.Soe");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 50: 
StringReader stringReader = new StringReader("Z,Ny$ze");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 51: 
StringReader stringReader = new StringReader("[*");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 52: 
StringReader stringReader = new StringReader("sFN=H%G");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 53: 
StringReader stringReader = new StringReader("Q]Sovi!uMRu!=BYu;");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 54: 
byte[] byteArray = new byte[4];
byteArray[0] = (byte)95;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 55: 
StringReader stringReader = new StringReader("d`B9^h_5n@_");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 1, column 2.  Encountered: \"`\" (96), after : \"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 56: 
StringReader stringReader = new StringReader("aimplements");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 57: 
StringReader stringReader = new StringReader("b!V");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-224), (-224));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 58: 
byte[] byteArray = new byte[1];
byteArray[0] = (byte)102;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 59: 
StringReader stringReader = new StringReader("h?3C\"}%lP_5?=}ibM:");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 60: 
StringReader stringReader = new StringReader("j");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 61: 
StringReader stringReader = new StringReader("kJ.s#ji]");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 62: 
StringReader stringReader = new StringReader("m@(E");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 63: 
StringReader stringReader = new StringReader("zR$vm!q5j.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 64: 
StringReader stringReader = new StringReader("ix*");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaCharStream.readChar();
javaParserTokenManager.getNextToken();
Test 65: 
StringReader stringReader = new StringReader("{Bi6Bo=7");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 66: 
StringReader stringReader = new StringReader("|MV6*6,G OaRg+&[:[");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (byte)111, (byte)111);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 67: 
byte[] byteArray = new byte[4];
byteArray[0] = (byte)125;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 68: 
byte[] byteArray = new byte[3];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 1, column 1.  Encountered: \"\" (0), after : \"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 69: 
StringReader stringReader = new StringReader("gfK=&,{");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 70: 
byte[] byteArray = new byte[6];
byteArray[0] = (byte)47;
byteArray[1] = (byte)39;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 71: 
StringReader stringReader = new StringReader("a(psert");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 72: 
StringReader stringReader = new StringReader(">)~9?i!O!5");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (byte)11, (-1));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 73: 
StringReader stringReader = new StringReader("++");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 74: 
StringReader stringReader = new StringReader("...");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 75: 
byte[] byteArray = new byte[7];
byteArray[0] = (byte)47;
byteArray[1] = (byte)47;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 1, column 3.  Encountered: \"\" (0), after : \"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 76: 
byte[] byteArray = new byte[7];
byteArray[0] = (byte)101;
byteArray[1] = (byte)48;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 77: 
byte[] byteArray = new byte[7];
byteArray[0] = (byte)101;
byteArray[1] = (byte)49;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 78: 
StringReader stringReader = new StringReader("wuom!7,mdV=ay:Qq?");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 79: 
StringReader stringReader = new StringReader("g;jUQtJLQk116|LE>E");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 80: 
StringReader stringReader = new StringReader("==");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 105, (-4430));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 81: 
StringReader stringReader = new StringReader("/?z0iMT\"9(B%1w(_");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 82: 
StringReader stringReader = new StringReader("r@");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 83: 
byte[] byteArray = new byte[2];
byteArray[0] = (byte)43;
byteArray[1] = (byte)72;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 84: 
StringReader stringReader = new StringReader("TiI*");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaCharStream.readChar();
javaParserTokenManager.getNextToken();
Test 85: 
StringReader stringReader = new StringReader("aN-: VD?efN");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 86: 
StringReader stringReader = new StringReader("=PZ8");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 87: 
StringReader stringReader = new StringReader("<SINGLE_LINE_COMMENT>");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 88: 
StringReader stringReader = new StringReader("fT?',e#");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2797, 69);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 89: 
byte[] byteArray = new byte[6];
byteArray[0] = (byte)108;
byteArray[1] = (byte)86;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 90: 
StringReader stringReader = new StringReader("tXNI#b");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 91: 
StringReader stringReader = new StringReader("a]");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 92: 
StringReader stringReader = new StringReader("native");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 93: 
StringReader stringReader = new StringReader("/d<");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 94: 
StringReader stringReader = new StringReader("ijYr:M5PP");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 95: 
StringReader stringReader = new StringReader("dnn8gd_e");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 96: 
StringReader stringReader = new StringReader("|pxVzr#5=zrOT");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 97: 
StringReader stringReader = new StringReader("zR$vm!q5j.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 98: 
StringReader stringReader = new StringReader("short");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
char[] charArray = new char[3];
stringReader.read(charArray);
javaParserTokenManager.getNextToken();
Test 99: 
StringReader stringReader = new StringReader("synchronized");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 100: 
StringReader stringReader = new StringReader("^=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 101: 
StringReader stringReader = new StringReader("<<=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (byte)49, (-224));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 102: 
StringReader stringReader = new StringReader("while");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 0, 89);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 103: 
StringReader stringReader = new StringReader("short");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 104: 
StringReader stringReader = new StringReader("throws");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (byte)4, 12);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 105: 
StringReader stringReader = new StringReader("assert");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 106: 
StringReader stringReader = new StringReader("enum");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 107: 
StringReader stringReader = new StringReader("new");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 108: 
StringReader stringReader = new StringReader("try");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (byte)49, 38);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 109: 
StringReader stringReader = new StringReader("float");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 110: 
StringReader stringReader = new StringReader("void");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 111: 
StringReader stringReader = new StringReader("long");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 112: 
StringReader stringReader = new StringReader("this");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 113: 
StringReader stringReader = new StringReader("continue");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 114: 
StringReader stringReader = new StringReader("case");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 115: 
StringReader stringReader = new StringReader("null");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 116: 
StringReader stringReader = new StringReader("class");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 117: 
StringReader stringReader = new StringReader("transient");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 118: 
StringReader stringReader = new StringReader("p4");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.jjround = (-1);
javaParserTokenManager.getNextToken();
Test 119: 
byte[] byteArray = new byte[3];
byteArray[0] = (byte)46;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 120: 
byte[] byteArray = new byte[9];
byteArray[0] = (byte)39;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 1, column 3.  Encountered: \"\" (0), after : \"\\'\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 121: 
byte[] byteArray = new byte[3];
byteArray[0] = (byte)49;
byteArray[1] = (byte)49;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 122: 
byte[] byteArray = new byte[9];
byteArray[0] = (byte)39;
byteArray[1] = (byte)39;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 1, column 2.  Encountered: \"\\'\" (39), after : \"\\'\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 123: 
byte[] byteArray = new byte[9];
byteArray[0] = (byte)39;
byteArray[2] = (byte)39;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 124: 
StringReader stringReader = new StringReader("\"true\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 125: 
byte[] byteArray = new byte[2];
byteArray[0] = (byte)48;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, (byte)0, (byte)48);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 126: 
byte[] byteArray = new byte[7];
byteArray[0] = (byte)94;
byteArray[1] = (byte)94;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 127: 
byte[] byteArray = new byte[3];
byteArray[0] = (byte)48;
byteArray[1] = (byte)119;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 128: 
StringReader stringReader = new StringReader("1D-T|1Fmjz&Q-IEw");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-2776), (byte)38, (byte)38);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 129: 
byte[] byteArray = new byte[8];
byteArray[0] = (byte)122;
byteArray[1] = (byte)51;
byteArray[2] = (byte)122;
byteArray[3] = (byte)122;
byteArray[4] = (byte) (-61);
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 130: 
byte[] byteArray = new byte[3];
byteArray[0] = (byte)49;
byteArray[1] = (byte) (-37);
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 131: 
StringReader stringReader = new StringReader("m@(E");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 1);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 1, column 2.  Encountered: \"@\" (64), after : \"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 132: 
StringReader stringReader = new StringReader("K~}|x");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.ReInit(javaCharStream);
Test 133: 
StringReader stringReader = new StringReader("@1%c+");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 134: 
StringReader stringReader = new StringReader(" vl)0(eTD~wTCI,Z;-");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 135: 
StringReader stringReader = new StringReader("oT~?V6Z?5^K}");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 136: 
byte[] byteArray = new byte[1];
byteArray[0] = (byte) (-30);
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 1, column 2.  Encountered: <EOF> after : \"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 137: 
StringReader stringReader = new StringReader("(CsmGue9s>(Kub; I2W");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.SwitchTo(1);
Test 138: 
StringReader stringReader = new StringReader("7nQinyH");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
// Undeclared exception!
try { 
  javaParserTokenManager.SwitchTo(66);
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Error: Ignoring invalid lexical state : 66. State unchanged.
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 139: 
JavaCharStream javaCharStream = new JavaCharStream((Reader) null);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
// Undeclared exception!
try { 
  javaParserTokenManager.SwitchTo((-1));
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Error: Ignoring invalid lexical state : -1. State unchanged.
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 140: 
StringReader stringReader = new StringReader("SWB\"_");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 2);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 1, column 2.  Encountered: \"W\" (87), after : \"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 141: 
StringReader stringReader = new StringReader("implements");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 142: 
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager((JavaCharStream) null, 2);
javaParserTokenManager.MoreLexicalActions();
Test 143: 
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager((JavaCharStream) null);
Token token = new Token();
javaParserTokenManager.TokenLexicalActions(token);
Test 144: 
StringReader stringReader = new StringReader("transaction&\n  \t  \f");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 145: 
StringReader stringReader = new StringReader("2pqWNq;7");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).ReInit(javaCharStream, 1);

Test 146: 
StringReader stringReader = new StringReader("Java source code with a few variables and method calls.");
char[] charArray = new char[4];
CharBuffer wrap = CharBuffer.wrap(charArray);
((Reader)"Java source code with a few variables and method calls.").read(wrap);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 147: 
StringReader stringReader = new StringReader("public class HelloWorld { public static void main(String[] args) { System.out.println(\"Hello, World!\"); } }");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
MockPrintStream mockPrintStream = new MockPrintStream((OutputStream) false, false);
((JavaParserTokenManager) javaCharStream).setDebugStream(mockPrintStream);

Test 148: 
StringReader stringReader = new StringReader("The column contains a null value.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 149: 
StringReader stringReader = new StringReader("class Test { public static void main(String[] args) { System.out.println(\"Hello, world!\"); } }");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 150: 
StringReader stringReader = new StringReader("eZ.~=QED)Svy");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 151: 
StringReader stringReader = new StringReader("public class MyClass { public static void main(String[] args) { System.out.println(\"Hello, world!\"); } }");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 152: 
StringReader stringReader = new StringReader("<<");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "class MyClass { public void myMethod() {} }";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 153: 
StringReader stringReader = new StringReader("!<R#x");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "!<R#x";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 154: 
StringReader stringReader = new StringReader("|pxVzr#5=zrOT");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
((StringReader)"|pxVzr#5=zrOT").read();
int _int = 0;
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, _int);
((JavaParserTokenManager) _int).getNextToken();
((JavaParserTokenManager) _int).getNextToken();

Test 155: 
byte[] byteArray = new byte[7];
byteArray[0] = (byte)36;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);

Test 156: 
StringReader stringReader = new StringReader("Hello, World!");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 157: 
StringReader stringReader = new StringReader("This is a sample string that includes uppercase and lowercase letters, numbers, and special characters. It also uses a variety of delimiters to test the tokenization of different types of text.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 158: 
StringReader stringReader = new StringReader("This is a sample input string.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 159: 
StringReader stringReader = new StringReader("+D W5c\"$7-r8|");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
StringReader stringReader = new StringReader("+D W5c\"$7-r8|");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);

Test 160: 
byte[] byteArray = new byte[2];
byteArray[0] = (byte) 102;
byteArray[1] = (byte) 49;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) byteArrayInputStream).getNextToken();
((JavaParserTokenManager) byteArrayInputStream).getNextToken();

Test 161: 
StringReader stringReader = new StringReader("0101");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 162: 
StringReader stringReader = new StringReader("2pqWNq;7");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 163: 
StringReader stringReader = new StringReader("3a310I5*4UB=p@m");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 164: 
StringReader stringReader = new StringReader("1234567890,ABCDEFGHIJKLMNOPQRSTUVWXYZ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaCharStream) stringReader).readChar();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 165: 
StringReader stringReader = new StringReader("myIdentifier");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 166: 
StringReader stringReader = new StringReader("9Cx_Rc,qsTLEG?");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-1043), (-1477));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
Token nextToken = ((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).SkipLexicalActions(nextToken);

Test 167: 
StringReader stringReader = new StringReader(":s>ZQ?~r]PKnE3,");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 0, 0);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)0).getNextToken();

Test 168: 
StringReader stringReader = new StringReader(";");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 169: 
StringReader stringReader = new StringReader("r3t@A");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
int _int = 2;
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, _int);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 170: 
StringReader stringReader = new StringReader("C#QqvD");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
StringReader stringReader = new StringReader("C#QqvD");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
StringReader stringReader = new StringReader("C#QqvD");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
StringReader stringReader = new StringReader("C#QqvD");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);

Test 171: 
StringReader stringReader = new StringReader("EQqWN7123456789");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 172: 
StringReader stringReader = new StringReader("A complex sentence with many words.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 173: 
StringReader stringReader = new StringReader("Hello");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 174: 
StringReader stringReader = new StringReader("Idm2[OzIQW#CZby#");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "Idm2[OzIQW#CZby#";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "Idm2[OzIQW#CZby#_";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "Idm2[OzIQW#CZby#a";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 175: 
StringReader stringReader = new StringReader("L(M(7\"mY");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "L(M(7\"mY";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 176: 
StringReader stringReader = new StringReader("M~!Mu;KD'r");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 177: 
StringReader stringReader = new StringReader("+91");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 178: 
StringReader stringReader = new StringReader("PJI$&&");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 179: 
StringReader stringReader = new StringReader("SWB\"_");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 180: 
StringReader stringReader = new StringReader("TiI*");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "TiI*";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 181: 
StringReader stringReader = new StringReader("U");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "The quick brown fox jumps over the lazy dog.";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 182: 
StringReader stringReader = new StringReader("The quick brown fox jumps over the lazy dog.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 183: 
StringReader stringReader = new StringReader("XR54-@@C!$&");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
StringReader stringReader = new StringReader("XR54-@@C!$&");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 184: 
StringReader stringReader = new StringReader("public class HelloWorld { public static void main(String[] args) { System.out.println(\"Hello World\"); } }");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 185: 
StringReader stringReader = new StringReader("a,b$c");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 186: 
StringReader stringReader = new StringReader("[*");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 187: 
StringReader stringReader = new StringReader("sFN=H%G");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "sFN=H%G";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 188: 
StringReader stringReader = new StringReader("Q]Sovi!uMRu!=BYu;");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 189: 
StringReader stringReader = new StringReader("d`B9^h_5n@_");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 190: 
StringReader stringReader = new StringReader("b!V");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-224), (-224));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 191: 
StringReader stringReader = new StringReader("j");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "J";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 192: 
StringReader stringReader = new StringReader("kJ.s#ji]");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 193: 
StringReader stringReader = new StringReader("m@(E");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 194: 
StringReader stringReader = new StringReader("The quick brown fox jumps over the lazy dog.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 195: 
StringReader stringReader = new StringReader("ix*");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaCharStream) stringReader).readChar();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 196: 
StringReader stringReader = new StringReader("|MV6*6,G OaRg+&[:[");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 10, 10);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)10).getNextToken();

Test 197: 
StringReader stringReader = new StringReader("gfK=1234,{");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);

Test 198: 
StringReader stringReader = new StringReader("a(psert");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 199: 
StringReader stringReader = new StringReader("This is a sample string that will be used to test the JavaParserTokenManager");
int _int = 11;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 11, (-1));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)11).getNextToken();
String string = "This is a sample string that will be used to test the JavaParserTokenManager\uD83D\uDE00";
StringReader stringReader = new StringReader(string);
int _int = 11;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, (-1));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();

Test 200: 
StringReader stringReader = new StringReader("+=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 201: 
StringReader stringReader = new StringReader("Hello World!");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 202: 
byte[] byteArray = new byte[7];
byteArray[0] = (byte) 101;
byteArray[1] = (byte) 48;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) byteArrayInputStream).getNextToken();

Test 203: 
byte[] byteArray = new byte[7];
byteArray[0] = (byte) 65;
byteArray[1] = (byte) 49;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) byteArrayInputStream).getNextToken();

Test 204: 
StringReader stringReader = new StringReader("I am a string with some text.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 205: 
StringReader stringReader = new StringReader("g;jUQtJLQk116|LE>E");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 206: 
StringReader stringReader = new StringReader("hello world");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 105, (-4430));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)105).getNextToken();

Test 207: 
StringReader stringReader = new StringReader("Hello, World!");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 208: 
StringReader stringReader = new StringReader("r@");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 209: 
StringReader stringReader = new StringReader("TiI*");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaCharStream) stringReader).readChar();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 210: 
StringReader stringReader = new StringReader("aN-: VD?efN");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 211: 
StringReader stringReader = new StringReader("=PZ8");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 212: 
StringReader stringReader = new StringReader("// This is a single line comment");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 213: 
StringReader stringReader = new StringReader("fT?',e#");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2797, 69);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)2797).getNextToken();

Test 214: 
byte[] byteArray = new byte[6];
byteArray[0] = (byte) 72;
byteArray[1] = (byte) 101;
byteArray[0] = (byte) 72;
byteArray[0] = (byte) 72;
byteArray[0] = (byte) 72;
byteArray[0] = (byte) 72;
byteArray[0] = (byte) 72;
byteArray[0] = (byte) 72;
byteArray[0] = (byte) 72;
byteArray[0] = (byte) 72;
byteArray[0] = (byte) 72;
byteArray[0] = (byte) 72;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)(byte)72).getNextToken();

Test 215: 
StringReader stringReader = new StringReader("public class MyTestClass { public static void main(String[] args) { System.out.println(\"Hello, world!\"); } }");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 216: 
StringReader stringReader = new StringReader("a b c 1234567890");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 217: 
StringReader stringReader = new StringReader("native");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 218: 
StringReader stringReader = new StringReader("// This is a comment\n public class MyClass {\n  public static void main(String[] args) {\n   System.out.println(\"Hello, world!\");\n  }\n }");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 219: 
StringReader stringReader = new StringReader("This is a sample input for testing.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 220: 
StringReader stringReader = new StringReader("dnn8gd_e");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);

Test 221: 
StringReader stringReader = new StringReader("|pxVzr#5=zrOT123");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 222: 
StringReader stringReader = new StringReader("I have a cat that is black and white.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 223: 
StringReader stringReader = new StringReader("The quick brown fox jumps over the lazy dog.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
char[] charArray = new char[3];
((Reader)"The quick brown fox jumps over the lazy dog.").read(charArray);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 224: 
StringReader stringReader = new StringReader("synchronized");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 225: 
StringReader stringReader = new StringReader("^=+*()[]{}|;:'\",<>.!/");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 226: 
StringReader stringReader = new StringReader("<<=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 60, (-224));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)60).getNextToken();

Test 227: 
JavaCharStream javaCharStream = new JavaCharStream((Reader) 0, 89, 89);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 228: 
StringReader stringReader = new StringReader("The quick brown fox jumps over the lazy dog.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 229: 
StringReader stringReader = new StringReader("throws");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 4, 12);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)4).getNextToken();

Test 230: 
StringReader stringReader = new StringReader("assert");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 231: 
StringReader stringReader = new StringReader("enum");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 232: 
StringReader stringReader = new StringReader("new");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 233: 
StringReader stringReader = new StringReader("try { ... }");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 49, 38);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)49).getNextToken();

Test 234: 
StringReader stringReader = new StringReader("float");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 235: 
StringReader stringReader = new StringReader("1234567890");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 236: 
StringReader stringReader = new StringReader("this is a test of the JavaParser");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 237: 
StringReader stringReader = new StringReader("continue loop");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 238: 
StringReader stringReader = new StringReader("case");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "switch";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 239: 
StringReader stringReader = new StringReader("\"Hello World!\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 240: 
StringReader stringReader = new StringReader("transient_field");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 241: 
StringReader stringReader = new StringReader("p4");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "p4";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 242: 
byte[] byteArray = new byte[9];
byteArray[0] = (byte) 12;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 243: 
byte[] byteArray = new byte[3];
byteArray[0] = (byte) 49;
byteArray[1] = (byte) 50;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) byteArrayInputStream).getNextToken();

Test 244: 
byte[] byteArray = new byte[9];
byteArray[0] = (byte) 48;
byteArray[1] = (byte) 57;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) byteArrayInputStream).getNextToken();

Test 245: 
StringReader stringReader = new StringReader("\"This is a test string\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 246: 
JavaCharStream javaCharStream = new JavaCharStream((InputStream) 0, 65, (int) (byte)48);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);

Test 247: 
byte[] byteArray = new byte[3];
byteArray[0] = (byte) 65;
byteArray[1] = (byte) 255;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) byteArrayInputStream).getNextToken();

Test 248: 

Test 249: 
StringReader stringReader = new StringReader("m@(E");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, (int) "myIdentifier");
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 250: 
StringReader stringReader = new StringReader("The quick brown fox jumps over the lazy dog.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 251: 
StringReader stringReader = new StringReader("The quick brown fox jumps over the lazy dog");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).SwitchTo(1);

Test 252: 
StringReader stringReader = new StringReader("abc123");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).SwitchTo(66);

Test 253: 
JavaCharStream javaCharStream = new JavaCharStream((Reader) "A string with some characters");
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
int _int = null;
((JavaParserTokenManager) javaCharStream).SwitchTo(_int);

Test 254: 
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager((JavaCharStream) 2, 2);

Test 255: 
StringReader stringReader = new StringReader("implements");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 256: 
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager((JavaCharStream) 2, 2);

Test 257: 
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager((JavaCharStream) null);
Token token = new Token();


* Generated after the refinement and before minimization 258 tests with total length 1279
* test suite isTestSuite: 258
Test 0: 
StringReader stringReader = new StringReader("transien&");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 1: 
StringReader stringReader = new StringReader("2pqWNq;7");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.ReInit(javaCharStream, 1);
Test 2: 
StringReader stringReader = new StringReader("+D W5c\"$7-r8|");
char[] charArray = new char[4];
CharBuffer wrap = CharBuffer.wrap(charArray);
stringReader.read(wrap);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 3: 
StringReader stringReader = new StringReader("oT~?V6Z?5^K}");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.jjmatchedKind = 1;
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 1, column 5.  Encountered: \"V\" (86), after : \"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 4: 
StringReader stringReader = new StringReader("a]");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
MockPrintStream mockPrintStream = new MockPrintStream(javaParserTokenManager.debugStream, false);
javaParserTokenManager.setDebugStream(mockPrintStream);
Test 5: 
StringReader stringReader = new StringReader(" column ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 6: 
StringReader stringReader = new StringReader("/shB/gK S}~,pmRN");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 7: 
StringReader stringReader = new StringReader("eZ.~=QED)Svy");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 8: 
StringReader stringReader = new StringReader("=wg5-{EWToOt:)Pf-}Z");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 9: 
StringReader stringReader = new StringReader("<<");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 10: 
StringReader stringReader = new StringReader("!<R#x");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 11: 
byte[] byteArray = new byte[7];
byteArray[0] = (byte)10;
byteArray[1] = (byte)100;
byteArray[2] = (byte)34;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 2, column 7.  Encountered: <EOF> after : \"\\\"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 12: 
StringReader stringReader = new StringReader("|pxVzr#5=zrOT");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
stringReader.read();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 0);
javaParserTokenManager.getNextToken();
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 1, column 6.  Encountered: \"#\" (35), after : \"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 13: 
byte[] byteArray = new byte[7];
byteArray[0] = (byte)36;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 14: 
StringReader stringReader = new StringReader("%4r]|1o`bRqu");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 15: 
StringReader stringReader = new StringReader("'%Bvy9N}wU$:[O");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (byte)48, (-829));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 48, column -827.  Encountered: \"B\" (66), after : \"\\'%\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 16: 
StringReader stringReader = new StringReader("(CsmGue9s>(Kub; I2W");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 17: 
StringReader stringReader = new StringReader("g*fK=&Pt[,{");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 18: 
StringReader stringReader = new StringReader("+D W5c\"$7-r8|");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 19: 
byte[] byteArray = new byte[2];
byteArray[0] = (byte)87;
byteArray[1] = (byte)44;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 20: 
StringReader stringReader = new StringReader("0000");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 21: 
StringReader stringReader = new StringReader("2pqWNq;7");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 22: 
StringReader stringReader = new StringReader("3a310I5*4UB=p@m");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 23: 
StringReader stringReader = new StringReader(",4BJFL/0");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaCharStream.readChar();
javaParserTokenManager.getNextToken();
Test 24: 
StringReader stringReader = new StringReader("6 Hy{%B`R/eKLxK");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 25: 
StringReader stringReader = new StringReader("7nQinyH");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 26: 
StringReader stringReader = new StringReader("9Cx_Rc,qsTLEG?");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-1043), (-1477));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
Token nextToken = javaParserTokenManager.getNextToken();
javaParserTokenManager.SkipLexicalActions(nextToken);
Test 27: 
StringReader stringReader = new StringReader(":s>ZQ?~r]PKnE3,");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 0, 0);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 28: 
StringReader stringReader = new StringReader(";");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 29: 
StringReader stringReader = new StringReader(">u}=h");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 30: 
StringReader stringReader = new StringReader("r3t@A");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 2);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 1, column 6.  Encountered: <EOF> after : \"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 31: 
StringReader stringReader = new StringReader("C#QqvD");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.jjFillToken();
Test 32: 
StringReader stringReader = new StringReader("EQqWN7");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 33: 
StringReader stringReader = new StringReader("GUYb`!eTC%");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 34: 
StringReader stringReader = new StringReader("H");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 35: 
StringReader stringReader = new StringReader("Idm2[OzIQW#CZby#");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 36: 
byte[] byteArray = new byte[3];
byteArray[0] = (byte)74;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 37: 
StringReader stringReader = new StringReader("K~}|x");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 38: 
StringReader stringReader = new StringReader("L(M(7\"mY");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 39: 
StringReader stringReader = new StringReader("M~!Mu;KD'r");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 40: 
byte[] byteArray = new byte[3];
byteArray[0] = (byte)78;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 41: 
StringReader stringReader = new StringReader("+O");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 42: 
StringReader stringReader = new StringReader("PJI$&&");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 43: 
byte[] byteArray = new byte[1];
byteArray[0] = (byte)82;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 44: 
StringReader stringReader = new StringReader("SWB\"_");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 45: 
StringReader stringReader = new StringReader("TiI*");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 46: 
StringReader stringReader = new StringReader("U");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 47: 
StringReader stringReader = new StringReader("Vb yhY");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 48: 
StringReader stringReader = new StringReader("XR54-@@C!$&");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 49: 
StringReader stringReader = new StringReader("Ynu]|oFju'GY*$.Soe");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 50: 
StringReader stringReader = new StringReader("Z,Ny$ze");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 51: 
StringReader stringReader = new StringReader("[*");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 52: 
StringReader stringReader = new StringReader("sFN=H%G");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 53: 
StringReader stringReader = new StringReader("Q]Sovi!uMRu!=BYu;");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 54: 
byte[] byteArray = new byte[4];
byteArray[0] = (byte)95;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 55: 
StringReader stringReader = new StringReader("d`B9^h_5n@_");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 1, column 2.  Encountered: \"`\" (96), after : \"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 56: 
StringReader stringReader = new StringReader("aimplements");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 57: 
StringReader stringReader = new StringReader("b!V");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-224), (-224));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 58: 
byte[] byteArray = new byte[1];
byteArray[0] = (byte)102;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 59: 
StringReader stringReader = new StringReader("h?3C\"}%lP_5?=}ibM:");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 60: 
StringReader stringReader = new StringReader("j");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 61: 
StringReader stringReader = new StringReader("kJ.s#ji]");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 62: 
StringReader stringReader = new StringReader("m@(E");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 63: 
StringReader stringReader = new StringReader("zR$vm!q5j.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 64: 
StringReader stringReader = new StringReader("ix*");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaCharStream.readChar();
javaParserTokenManager.getNextToken();
Test 65: 
StringReader stringReader = new StringReader("{Bi6Bo=7");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 66: 
StringReader stringReader = new StringReader("|MV6*6,G OaRg+&[:[");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (byte)111, (byte)111);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 67: 
byte[] byteArray = new byte[4];
byteArray[0] = (byte)125;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 68: 
byte[] byteArray = new byte[3];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 1, column 1.  Encountered: \"\" (0), after : \"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 69: 
StringReader stringReader = new StringReader("gfK=&,{");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 70: 
byte[] byteArray = new byte[6];
byteArray[0] = (byte)47;
byteArray[1] = (byte)39;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 71: 
StringReader stringReader = new StringReader("a(psert");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 72: 
StringReader stringReader = new StringReader(">)~9?i!O!5");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (byte)11, (-1));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 73: 
StringReader stringReader = new StringReader("++");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 74: 
StringReader stringReader = new StringReader("...");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 75: 
byte[] byteArray = new byte[7];
byteArray[0] = (byte)47;
byteArray[1] = (byte)47;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 1, column 3.  Encountered: \"\" (0), after : \"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 76: 
byte[] byteArray = new byte[7];
byteArray[0] = (byte)101;
byteArray[1] = (byte)48;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 77: 
byte[] byteArray = new byte[7];
byteArray[0] = (byte)101;
byteArray[1] = (byte)49;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 78: 
StringReader stringReader = new StringReader("wuom!7,mdV=ay:Qq?");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 79: 
StringReader stringReader = new StringReader("g;jUQtJLQk116|LE>E");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 80: 
StringReader stringReader = new StringReader("==");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 105, (-4430));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 81: 
StringReader stringReader = new StringReader("/?z0iMT\"9(B%1w(_");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 82: 
StringReader stringReader = new StringReader("r@");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 83: 
byte[] byteArray = new byte[2];
byteArray[0] = (byte)43;
byteArray[1] = (byte)72;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 84: 
StringReader stringReader = new StringReader("TiI*");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaCharStream.readChar();
javaParserTokenManager.getNextToken();
Test 85: 
StringReader stringReader = new StringReader("aN-: VD?efN");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 86: 
StringReader stringReader = new StringReader("=PZ8");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 87: 
StringReader stringReader = new StringReader("<SINGLE_LINE_COMMENT>");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 88: 
StringReader stringReader = new StringReader("fT?',e#");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2797, 69);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 89: 
byte[] byteArray = new byte[6];
byteArray[0] = (byte)108;
byteArray[1] = (byte)86;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 90: 
StringReader stringReader = new StringReader("tXNI#b");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 91: 
StringReader stringReader = new StringReader("a]");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 92: 
StringReader stringReader = new StringReader("native");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 93: 
StringReader stringReader = new StringReader("/d<");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 94: 
StringReader stringReader = new StringReader("ijYr:M5PP");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 95: 
StringReader stringReader = new StringReader("dnn8gd_e");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 96: 
StringReader stringReader = new StringReader("|pxVzr#5=zrOT");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 97: 
StringReader stringReader = new StringReader("zR$vm!q5j.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 98: 
StringReader stringReader = new StringReader("short");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
char[] charArray = new char[3];
stringReader.read(charArray);
javaParserTokenManager.getNextToken();
Test 99: 
StringReader stringReader = new StringReader("synchronized");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 100: 
StringReader stringReader = new StringReader("^=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 101: 
StringReader stringReader = new StringReader("<<=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (byte)49, (-224));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 102: 
StringReader stringReader = new StringReader("while");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 0, 89);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 103: 
StringReader stringReader = new StringReader("short");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 104: 
StringReader stringReader = new StringReader("throws");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (byte)4, 12);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 105: 
StringReader stringReader = new StringReader("assert");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 106: 
StringReader stringReader = new StringReader("enum");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 107: 
StringReader stringReader = new StringReader("new");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 108: 
StringReader stringReader = new StringReader("try");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (byte)49, 38);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 109: 
StringReader stringReader = new StringReader("float");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 110: 
StringReader stringReader = new StringReader("void");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 111: 
StringReader stringReader = new StringReader("long");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 112: 
StringReader stringReader = new StringReader("this");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 113: 
StringReader stringReader = new StringReader("continue");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 114: 
StringReader stringReader = new StringReader("case");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 115: 
StringReader stringReader = new StringReader("null");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 116: 
StringReader stringReader = new StringReader("class");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 117: 
StringReader stringReader = new StringReader("transient");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 118: 
StringReader stringReader = new StringReader("p4");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.jjround = (-1);
javaParserTokenManager.getNextToken();
Test 119: 
byte[] byteArray = new byte[3];
byteArray[0] = (byte)46;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 120: 
byte[] byteArray = new byte[9];
byteArray[0] = (byte)39;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 1, column 3.  Encountered: \"\" (0), after : \"\\'\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 121: 
byte[] byteArray = new byte[3];
byteArray[0] = (byte)49;
byteArray[1] = (byte)49;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 122: 
byte[] byteArray = new byte[9];
byteArray[0] = (byte)39;
byteArray[1] = (byte)39;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 1, column 2.  Encountered: \"\\'\" (39), after : \"\\'\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 123: 
byte[] byteArray = new byte[9];
byteArray[0] = (byte)39;
byteArray[2] = (byte)39;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 124: 
StringReader stringReader = new StringReader("\"true\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 125: 
byte[] byteArray = new byte[2];
byteArray[0] = (byte)48;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, (byte)0, (byte)48);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 126: 
byte[] byteArray = new byte[7];
byteArray[0] = (byte)94;
byteArray[1] = (byte)94;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 127: 
byte[] byteArray = new byte[3];
byteArray[0] = (byte)48;
byteArray[1] = (byte)119;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 128: 
StringReader stringReader = new StringReader("1D-T|1Fmjz&Q-IEw");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-2776), (byte)38, (byte)38);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 129: 
byte[] byteArray = new byte[8];
byteArray[0] = (byte)122;
byteArray[1] = (byte)51;
byteArray[2] = (byte)122;
byteArray[3] = (byte)122;
byteArray[4] = (byte) (-61);
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 130: 
byte[] byteArray = new byte[3];
byteArray[0] = (byte)49;
byteArray[1] = (byte) (-37);
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 131: 
StringReader stringReader = new StringReader("m@(E");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 1);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 1, column 2.  Encountered: \"@\" (64), after : \"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 132: 
StringReader stringReader = new StringReader("K~}|x");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.ReInit(javaCharStream);
Test 133: 
StringReader stringReader = new StringReader("@1%c+");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 134: 
StringReader stringReader = new StringReader(" vl)0(eTD~wTCI,Z;-");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 135: 
StringReader stringReader = new StringReader("oT~?V6Z?5^K}");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 136: 
byte[] byteArray = new byte[1];
byteArray[0] = (byte) (-30);
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 1, column 2.  Encountered: <EOF> after : \"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 137: 
StringReader stringReader = new StringReader("(CsmGue9s>(Kub; I2W");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.SwitchTo(1);
Test 138: 
StringReader stringReader = new StringReader("7nQinyH");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
// Undeclared exception!
try { 
  javaParserTokenManager.SwitchTo(66);
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Error: Ignoring invalid lexical state : 66. State unchanged.
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 139: 
JavaCharStream javaCharStream = new JavaCharStream((Reader) null);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
// Undeclared exception!
try { 
  javaParserTokenManager.SwitchTo((-1));
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Error: Ignoring invalid lexical state : -1. State unchanged.
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 140: 
StringReader stringReader = new StringReader("SWB\"_");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 2);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 1, column 2.  Encountered: \"W\" (87), after : \"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 141: 
StringReader stringReader = new StringReader("implements");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 142: 
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager((JavaCharStream) null, 2);
javaParserTokenManager.MoreLexicalActions();
Test 143: 
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager((JavaCharStream) null);
Token token = new Token();
javaParserTokenManager.TokenLexicalActions(token);
Test 144: 
StringReader stringReader = new StringReader("transaction&\n  \t  \f");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 145: 
StringReader stringReader = new StringReader("2pqWNq;7");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).ReInit(javaCharStream, 1);

Test 146: 
StringReader stringReader = new StringReader("Java source code with a few variables and method calls.");
char[] charArray = new char[4];
CharBuffer wrap = CharBuffer.wrap(charArray);
((Reader)"Java source code with a few variables and method calls.").read(wrap);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 147: 
StringReader stringReader = new StringReader("public class HelloWorld { public static void main(String[] args) { System.out.println(\"Hello, World!\"); } }");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
MockPrintStream mockPrintStream = new MockPrintStream((OutputStream) false, false);
((JavaParserTokenManager) javaCharStream).setDebugStream(mockPrintStream);

Test 148: 
StringReader stringReader = new StringReader("The column contains a null value.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 149: 
StringReader stringReader = new StringReader("class Test { public static void main(String[] args) { System.out.println(\"Hello, world!\"); } }");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 150: 
StringReader stringReader = new StringReader("eZ.~=QED)Svy");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 151: 
StringReader stringReader = new StringReader("public class MyClass { public static void main(String[] args) { System.out.println(\"Hello, world!\"); } }");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 152: 
StringReader stringReader = new StringReader("<<");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "class MyClass { public void myMethod() {} }";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 153: 
StringReader stringReader = new StringReader("!<R#x");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "!<R#x";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 154: 
StringReader stringReader = new StringReader("|pxVzr#5=zrOT");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
((StringReader)"|pxVzr#5=zrOT").read();
int _int = 0;
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, _int);
((JavaParserTokenManager) _int).getNextToken();
((JavaParserTokenManager) _int).getNextToken();

Test 155: 
byte[] byteArray = new byte[7];
byteArray[0] = (byte)36;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);

Test 156: 
StringReader stringReader = new StringReader("Hello, World!");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 157: 
StringReader stringReader = new StringReader("This is a sample string that includes uppercase and lowercase letters, numbers, and special characters. It also uses a variety of delimiters to test the tokenization of different types of text.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 158: 
StringReader stringReader = new StringReader("This is a sample input string.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 159: 
StringReader stringReader = new StringReader("+D W5c\"$7-r8|");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
StringReader stringReader = new StringReader("+D W5c\"$7-r8|");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);

Test 160: 
byte[] byteArray = new byte[2];
byteArray[0] = (byte) 102;
byteArray[1] = (byte) 49;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) byteArrayInputStream).getNextToken();
((JavaParserTokenManager) byteArrayInputStream).getNextToken();

Test 161: 
StringReader stringReader = new StringReader("0101");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 162: 
StringReader stringReader = new StringReader("2pqWNq;7");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 163: 
StringReader stringReader = new StringReader("3a310I5*4UB=p@m");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 164: 
StringReader stringReader = new StringReader("1234567890,ABCDEFGHIJKLMNOPQRSTUVWXYZ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaCharStream) stringReader).readChar();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 165: 
StringReader stringReader = new StringReader("myIdentifier");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 166: 
StringReader stringReader = new StringReader("9Cx_Rc,qsTLEG?");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-1043), (-1477));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
Token nextToken = ((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).SkipLexicalActions(nextToken);

Test 167: 
StringReader stringReader = new StringReader(":s>ZQ?~r]PKnE3,");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 0, 0);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)0).getNextToken();

Test 168: 
StringReader stringReader = new StringReader(";");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 169: 
StringReader stringReader = new StringReader("r3t@A");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
int _int = 2;
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, _int);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 170: 
StringReader stringReader = new StringReader("C#QqvD");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
StringReader stringReader = new StringReader("C#QqvD");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
StringReader stringReader = new StringReader("C#QqvD");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
StringReader stringReader = new StringReader("C#QqvD");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);

Test 171: 
StringReader stringReader = new StringReader("EQqWN7123456789");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 172: 
StringReader stringReader = new StringReader("A complex sentence with many words.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 173: 
StringReader stringReader = new StringReader("Hello");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 174: 
StringReader stringReader = new StringReader("Idm2[OzIQW#CZby#");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "Idm2[OzIQW#CZby#";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "Idm2[OzIQW#CZby#_";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "Idm2[OzIQW#CZby#a";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 175: 
StringReader stringReader = new StringReader("L(M(7\"mY");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "L(M(7\"mY";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 176: 
StringReader stringReader = new StringReader("M~!Mu;KD'r");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 177: 
StringReader stringReader = new StringReader("+91");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 178: 
StringReader stringReader = new StringReader("PJI$&&");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 179: 
StringReader stringReader = new StringReader("SWB\"_");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 180: 
StringReader stringReader = new StringReader("TiI*");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "TiI*";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 181: 
StringReader stringReader = new StringReader("U");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "The quick brown fox jumps over the lazy dog.";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 182: 
StringReader stringReader = new StringReader("The quick brown fox jumps over the lazy dog.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 183: 
StringReader stringReader = new StringReader("XR54-@@C!$&");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
StringReader stringReader = new StringReader("XR54-@@C!$&");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 184: 
StringReader stringReader = new StringReader("public class HelloWorld { public static void main(String[] args) { System.out.println(\"Hello World\"); } }");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 185: 
StringReader stringReader = new StringReader("a,b$c");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 186: 
StringReader stringReader = new StringReader("[*");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 187: 
StringReader stringReader = new StringReader("sFN=H%G");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "sFN=H%G";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 188: 
StringReader stringReader = new StringReader("Q]Sovi!uMRu!=BYu;");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 189: 
StringReader stringReader = new StringReader("d`B9^h_5n@_");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 190: 
StringReader stringReader = new StringReader("b!V");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-224), (-224));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 191: 
StringReader stringReader = new StringReader("j");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "J";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 192: 
StringReader stringReader = new StringReader("kJ.s#ji]");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 193: 
StringReader stringReader = new StringReader("m@(E");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 194: 
StringReader stringReader = new StringReader("The quick brown fox jumps over the lazy dog.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 195: 
StringReader stringReader = new StringReader("ix*");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaCharStream) stringReader).readChar();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 196: 
StringReader stringReader = new StringReader("|MV6*6,G OaRg+&[:[");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 10, 10);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)10).getNextToken();

Test 197: 
StringReader stringReader = new StringReader("gfK=1234,{");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);

Test 198: 
StringReader stringReader = new StringReader("a(psert");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 199: 
StringReader stringReader = new StringReader("This is a sample string that will be used to test the JavaParserTokenManager");
int _int = 11;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 11, (-1));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)11).getNextToken();
String string = "This is a sample string that will be used to test the JavaParserTokenManager\uD83D\uDE00";
StringReader stringReader = new StringReader(string);
int _int = 11;
JavaCharStream javaCharStream = new JavaCharStream(stringReader, _int, (-1));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) _int).getNextToken();

Test 200: 
StringReader stringReader = new StringReader("+=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 201: 
StringReader stringReader = new StringReader("Hello World!");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 202: 
byte[] byteArray = new byte[7];
byteArray[0] = (byte) 101;
byteArray[1] = (byte) 48;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) byteArrayInputStream).getNextToken();

Test 203: 
byte[] byteArray = new byte[7];
byteArray[0] = (byte) 65;
byteArray[1] = (byte) 49;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) byteArrayInputStream).getNextToken();

Test 204: 
StringReader stringReader = new StringReader("I am a string with some text.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 205: 
StringReader stringReader = new StringReader("g;jUQtJLQk116|LE>E");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 206: 
StringReader stringReader = new StringReader("hello world");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 105, (-4430));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)105).getNextToken();

Test 207: 
StringReader stringReader = new StringReader("Hello, World!");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 208: 
StringReader stringReader = new StringReader("r@");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 209: 
StringReader stringReader = new StringReader("TiI*");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaCharStream) stringReader).readChar();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 210: 
StringReader stringReader = new StringReader("aN-: VD?efN");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 211: 
StringReader stringReader = new StringReader("=PZ8");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 212: 
StringReader stringReader = new StringReader("// This is a single line comment");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 213: 
StringReader stringReader = new StringReader("fT?',e#");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2797, 69);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)2797).getNextToken();

Test 214: 
byte[] byteArray = new byte[6];
byteArray[0] = (byte) 72;
byteArray[1] = (byte) 101;
byteArray[0] = (byte) 72;
byteArray[0] = (byte) 72;
byteArray[0] = (byte) 72;
byteArray[0] = (byte) 72;
byteArray[0] = (byte) 72;
byteArray[0] = (byte) 72;
byteArray[0] = (byte) 72;
byteArray[0] = (byte) 72;
byteArray[0] = (byte) 72;
byteArray[0] = (byte) 72;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)(byte)72).getNextToken();

Test 215: 
StringReader stringReader = new StringReader("public class MyTestClass { public static void main(String[] args) { System.out.println(\"Hello, world!\"); } }");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 216: 
StringReader stringReader = new StringReader("a b c 1234567890");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 217: 
StringReader stringReader = new StringReader("native");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 218: 
StringReader stringReader = new StringReader("// This is a comment\n public class MyClass {\n  public static void main(String[] args) {\n   System.out.println(\"Hello, world!\");\n  }\n }");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 219: 
StringReader stringReader = new StringReader("This is a sample input for testing.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 220: 
StringReader stringReader = new StringReader("dnn8gd_e");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);

Test 221: 
StringReader stringReader = new StringReader("|pxVzr#5=zrOT123");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 222: 
StringReader stringReader = new StringReader("I have a cat that is black and white.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 223: 
StringReader stringReader = new StringReader("The quick brown fox jumps over the lazy dog.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
char[] charArray = new char[3];
((Reader)"The quick brown fox jumps over the lazy dog.").read(charArray);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 224: 
StringReader stringReader = new StringReader("synchronized");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 225: 
StringReader stringReader = new StringReader("^=+*()[]{}|;:'\",<>.!/");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 226: 
StringReader stringReader = new StringReader("<<=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 60, (-224));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)60).getNextToken();

Test 227: 
JavaCharStream javaCharStream = new JavaCharStream((Reader) 0, 89, 89);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 228: 
StringReader stringReader = new StringReader("The quick brown fox jumps over the lazy dog.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 229: 
StringReader stringReader = new StringReader("throws");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 4, 12);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)4).getNextToken();

Test 230: 
StringReader stringReader = new StringReader("assert");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 231: 
StringReader stringReader = new StringReader("enum");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 232: 
StringReader stringReader = new StringReader("new");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 233: 
StringReader stringReader = new StringReader("try { ... }");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 49, 38);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager)49).getNextToken();

Test 234: 
StringReader stringReader = new StringReader("float");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 235: 
StringReader stringReader = new StringReader("1234567890");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 236: 
StringReader stringReader = new StringReader("this is a test of the JavaParser");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 237: 
StringReader stringReader = new StringReader("continue loop");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 238: 
StringReader stringReader = new StringReader("case");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "switch";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 239: 
StringReader stringReader = new StringReader("\"Hello World!\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 240: 
StringReader stringReader = new StringReader("transient_field");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 241: 
StringReader stringReader = new StringReader("p4");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
String string = "p4";
StringReader stringReader = new StringReader(string);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 242: 
byte[] byteArray = new byte[9];
byteArray[0] = (byte) 12;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 243: 
byte[] byteArray = new byte[3];
byteArray[0] = (byte) 49;
byteArray[1] = (byte) 50;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) byteArrayInputStream).getNextToken();

Test 244: 
byte[] byteArray = new byte[9];
byteArray[0] = (byte) 48;
byteArray[1] = (byte) 57;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) byteArrayInputStream).getNextToken();

Test 245: 
StringReader stringReader = new StringReader("\"This is a test string\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 246: 
JavaCharStream javaCharStream = new JavaCharStream((InputStream) 0, 65, (int) (byte)48);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);

Test 247: 
byte[] byteArray = new byte[3];
byteArray[0] = (byte) 65;
byteArray[1] = (byte) 255;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) byteArrayInputStream).getNextToken();

Test 248: 

Test 249: 
StringReader stringReader = new StringReader("m@(E");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, (int) "myIdentifier");
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 250: 
StringReader stringReader = new StringReader("The quick brown fox jumps over the lazy dog.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 251: 
StringReader stringReader = new StringReader("The quick brown fox jumps over the lazy dog");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).SwitchTo(1);

Test 252: 
StringReader stringReader = new StringReader("abc123");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).SwitchTo(66);

Test 253: 
JavaCharStream javaCharStream = new JavaCharStream((Reader) "A string with some characters");
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
int _int = null;
((JavaParserTokenManager) javaCharStream).SwitchTo(_int);

Test 254: 
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager((JavaCharStream) 2, 2);

Test 255: 
StringReader stringReader = new StringReader("implements");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
((JavaParserTokenManager) javaCharStream).getNextToken();
((JavaParserTokenManager) javaCharStream).getNextToken();

Test 256: 
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager((JavaCharStream) 2, 2);

Test 257: 
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager((JavaCharStream) null);
Token token = new Token();


* Minimizing test suite
* test suite isTestSuite: 143
Test 0: 
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager((JavaCharStream) null);
Token token = new Token();
javaParserTokenManager.TokenLexicalActions(token);
Test 1: 
StringReader stringReader = new StringReader("2pqWNq;7");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.ReInit(javaCharStream, 1);
Test 2: 
StringReader stringReader = new StringReader(" column ");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 3: 
StringReader stringReader = new StringReader("0000");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 4: 
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager((JavaCharStream) null, 2);
javaParserTokenManager.MoreLexicalActions();
Test 5: 
StringReader stringReader = new StringReader("m@(E");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 1);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 1, column 2.  Encountered: \"@\" (64), after : \"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 6: 
StringReader stringReader = new StringReader("a]");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
MockPrintStream mockPrintStream = new MockPrintStream(javaParserTokenManager.debugStream, false);
javaParserTokenManager.setDebugStream(mockPrintStream);
Test 7: 
StringReader stringReader = new StringReader("(CsmGue9s>(Kub; I2W");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 8: 
StringReader stringReader = new StringReader("assert");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 9: 
StringReader stringReader = new StringReader("!<R#x");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 10: 
StringReader stringReader = new StringReader("transien&");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 11: 
StringReader stringReader = new StringReader("/?z0iMT\"9(B%1w(_");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 12: 
StringReader stringReader = new StringReader("eZ.~=QED)Svy");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 13: 
StringReader stringReader = new StringReader("wuom!7,mdV=ay:Qq?");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 14: 
StringReader stringReader = new StringReader("<<");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 15: 
StringReader stringReader = new StringReader("\"true\"");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 16: 
StringReader stringReader = new StringReader("|pxVzr#5=zrOT");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
stringReader.read();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 0);
javaParserTokenManager.getNextToken();
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 1, column 6.  Encountered: \"#\" (35), after : \"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 17: 
byte[] byteArray = new byte[7];
byteArray[0] = (byte)36;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 18: 
StringReader stringReader = new StringReader("%4r]|1o`bRqu");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 19: 
StringReader stringReader = new StringReader("'%Bvy9N}wU$:[O");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (byte)48, (-829));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 48, column -827.  Encountered: \"B\" (66), after : \"\\'%\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 20: 
StringReader stringReader = new StringReader(" vl)0(eTD~wTCI,Z;-");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 21: 
StringReader stringReader = new StringReader("g*fK=&Pt[,{");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 22: 
StringReader stringReader = new StringReader("++");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 23: 
byte[] byteArray = new byte[2];
byteArray[0] = (byte)87;
byteArray[1] = (byte)44;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 24: 
StringReader stringReader = new StringReader("1D-T|1Fmjz&Q-IEw");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-2776), (byte)38, (byte)38);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 25: 
StringReader stringReader = new StringReader("2pqWNq;7");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 26: 
StringReader stringReader = new StringReader("3a310I5*4UB=p@m");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 27: 
StringReader stringReader = new StringReader(",4BJFL/0");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaCharStream.readChar();
javaParserTokenManager.getNextToken();
Test 28: 
StringReader stringReader = new StringReader("+D W5c\"$7-r8|");
char[] charArray = new char[4];
CharBuffer wrap = CharBuffer.wrap(charArray);
stringReader.read(wrap);
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 29: 
StringReader stringReader = new StringReader("6 Hy{%B`R/eKLxK");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 30: 
StringReader stringReader = new StringReader("7nQinyH");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 31: 
StringReader stringReader = new StringReader("9Cx_Rc,qsTLEG?");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-1043), (-1477));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
Token nextToken = javaParserTokenManager.getNextToken();
javaParserTokenManager.SkipLexicalActions(nextToken);
Test 32: 
StringReader stringReader = new StringReader(":s>ZQ?~r]PKnE3,");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 0, 0);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 33: 
StringReader stringReader = new StringReader(";");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 34: 
StringReader stringReader = new StringReader("==");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 105, (-4430));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 35: 
StringReader stringReader = new StringReader(">)~9?i!O!5");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (byte)11, (-1));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 36: 
StringReader stringReader = new StringReader("@1%c+");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 37: 
StringReader stringReader = new StringReader("C#QqvD");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.jjFillToken();
Test 38: 
StringReader stringReader = new StringReader("+D W5c\"$7-r8|");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 39: 
StringReader stringReader = new StringReader("EQqWN7");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 40: 
StringReader stringReader = new StringReader("GUYb`!eTC%");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 41: 
StringReader stringReader = new StringReader("H");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 42: 
StringReader stringReader = new StringReader("Idm2[OzIQW#CZby#");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 43: 
byte[] byteArray = new byte[3];
byteArray[0] = (byte)74;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 44: 
StringReader stringReader = new StringReader("K~}|x");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 45: 
StringReader stringReader = new StringReader("L(M(7\"mY");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 46: 
StringReader stringReader = new StringReader("M~!Mu;KD'r");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 47: 
byte[] byteArray = new byte[3];
byteArray[0] = (byte)78;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 48: 
StringReader stringReader = new StringReader("+O");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 49: 
StringReader stringReader = new StringReader("PJI$&&");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 50: 
StringReader stringReader = new StringReader("Q]Sovi!uMRu!=BYu;");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 51: 
byte[] byteArray = new byte[1];
byteArray[0] = (byte)82;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 52: 
StringReader stringReader = new StringReader("SWB\"_");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 53: 
StringReader stringReader = new StringReader("TiI*");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 54: 
StringReader stringReader = new StringReader("U");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 55: 
StringReader stringReader = new StringReader("Vb yhY");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 56: 
StringReader stringReader = new StringReader("XR54-@@C!$&");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 57: 
StringReader stringReader = new StringReader("Ynu]|oFju'GY*$.Soe");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 58: 
StringReader stringReader = new StringReader("Z,Ny$ze");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 59: 
StringReader stringReader = new StringReader("[*");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 60: 
StringReader stringReader = new StringReader("^=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 61: 
byte[] byteArray = new byte[4];
byteArray[0] = (byte)95;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 62: 
StringReader stringReader = new StringReader("d`B9^h_5n@_");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 1, column 2.  Encountered: \"`\" (96), after : \"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 63: 
StringReader stringReader = new StringReader("b!V");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (-224), (-224));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 64: 
StringReader stringReader = new StringReader("fT?',e#");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 2797, 69);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 65: 
StringReader stringReader = new StringReader("h?3C\"}%lP_5?=}ibM:");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 66: 
StringReader stringReader = new StringReader("ijYr:M5PP");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 67: 
StringReader stringReader = new StringReader("j");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 68: 
StringReader stringReader = new StringReader("kJ.s#ji]");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 69: 
StringReader stringReader = new StringReader("long");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 70: 
StringReader stringReader = new StringReader("m@(E");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 71: 
StringReader stringReader = new StringReader("native");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 72: 
StringReader stringReader = new StringReader("oT~?V6Z?5^K}");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 73: 
StringReader stringReader = new StringReader("zR$vm!q5j.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 74: 
StringReader stringReader = new StringReader("r@");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 75: 
StringReader stringReader = new StringReader("sFN=H%G");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 76: 
StringReader stringReader = new StringReader(">u}=h");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 77: 
StringReader stringReader = new StringReader("ix*");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaCharStream.readChar();
javaParserTokenManager.getNextToken();
Test 78: 
StringReader stringReader = new StringReader("{Bi6Bo=7");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 79: 
StringReader stringReader = new StringReader("|MV6*6,G OaRg+&[:[");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (byte)111, (byte)111);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 80: 
byte[] byteArray = new byte[4];
byteArray[0] = (byte)125;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 81: 
byte[] byteArray = new byte[3];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 1, column 1.  Encountered: \"\" (0), after : \"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 82: 
StringReader stringReader = new StringReader("gfK=&,{");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 83: 
byte[] byteArray = new byte[6];
byteArray[0] = (byte)47;
byteArray[1] = (byte)39;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 84: 
StringReader stringReader = new StringReader("a(psert");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 85: 
StringReader stringReader = new StringReader("...");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 86: 
byte[] byteArray = new byte[7];
byteArray[0] = (byte)47;
byteArray[1] = (byte)47;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 1, column 3.  Encountered: \"\" (0), after : \"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 87: 
byte[] byteArray = new byte[7];
byteArray[0] = (byte)101;
byteArray[1] = (byte)48;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 88: 
byte[] byteArray = new byte[7];
byteArray[0] = (byte)101;
byteArray[1] = (byte)49;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 89: 
StringReader stringReader = new StringReader("r3t@A");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 90: 
StringReader stringReader = new StringReader("g;jUQtJLQk116|LE>E");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 91: 
byte[] byteArray = new byte[2];
byteArray[0] = (byte)43;
byteArray[1] = (byte)72;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 92: 
StringReader stringReader = new StringReader("TiI*");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaCharStream.readChar();
javaParserTokenManager.getNextToken();
Test 93: 
StringReader stringReader = new StringReader("aN-: VD?efN");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 94: 
StringReader stringReader = new StringReader("=PZ8");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 95: 
StringReader stringReader = new StringReader("<SINGLE_LINE_COMMENT>");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 96: 
byte[] byteArray = new byte[6];
byteArray[0] = (byte)108;
byteArray[1] = (byte)86;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 97: 
StringReader stringReader = new StringReader("tXNI#b");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 98: 
StringReader stringReader = new StringReader("a]");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 99: 
byte[] byteArray = new byte[7];
byteArray[0] = (byte)94;
byteArray[1] = (byte)94;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 100: 
StringReader stringReader = new StringReader("/d<");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 101: 
StringReader stringReader = new StringReader("new");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 102: 
StringReader stringReader = new StringReader("short");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 103: 
StringReader stringReader = new StringReader("aimplements");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 104: 
StringReader stringReader = new StringReader("implements");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 105: 
StringReader stringReader = new StringReader("|pxVzr#5=zrOT");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 106: 
StringReader stringReader = new StringReader("zR$vm!q5j.");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.getNextToken();
Test 107: 
StringReader stringReader = new StringReader("short");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
char[] charArray = new char[3];
stringReader.read(charArray);
javaParserTokenManager.getNextToken();
Test 108: 
StringReader stringReader = new StringReader("=wg5-{EWToOt:)Pf-}Z");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 109: 
StringReader stringReader = new StringReader("synchronized");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 110: 
StringReader stringReader = new StringReader("<<=");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (byte)49, (-224));
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 111: 
StringReader stringReader = new StringReader("/shB/gK S}~,pmRN");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 112: 
StringReader stringReader = new StringReader("this");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 113: 
StringReader stringReader = new StringReader("throws");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (byte)4, 12);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 114: 
StringReader stringReader = new StringReader("enum");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 115: 
StringReader stringReader = new StringReader("try");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, (byte)49, 38);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 116: 
StringReader stringReader = new StringReader("float");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 117: 
StringReader stringReader = new StringReader("void");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 118: 
StringReader stringReader = new StringReader("continue");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 119: 
StringReader stringReader = new StringReader("case");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 120: 
StringReader stringReader = new StringReader("null");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 121: 
StringReader stringReader = new StringReader("class");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 122: 
StringReader stringReader = new StringReader("while");
JavaCharStream javaCharStream = new JavaCharStream(stringReader, 0, 89);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 123: 
StringReader stringReader = new StringReader("transient");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 124: 
StringReader stringReader = new StringReader("p4");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.jjround = (-1);
javaParserTokenManager.getNextToken();
Test 125: 
byte[] byteArray = new byte[3];
byteArray[0] = (byte)46;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 126: 
byte[] byteArray = new byte[9];
byteArray[0] = (byte)39;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 1, column 3.  Encountered: \"\" (0), after : \"\\'\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 127: 
byte[] byteArray = new byte[3];
byteArray[0] = (byte)49;
byteArray[1] = (byte)49;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 128: 
byte[] byteArray = new byte[9];
byteArray[0] = (byte)39;
byteArray[1] = (byte)39;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 1, column 2.  Encountered: \"\\'\" (39), after : \"\\'\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 129: 
byte[] byteArray = new byte[9];
byteArray[0] = (byte)39;
byteArray[2] = (byte)39;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 130: 
byte[] byteArray = new byte[7];
byteArray[0] = (byte)10;
byteArray[1] = (byte)100;
byteArray[2] = (byte)34;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 2, column 7.  Encountered: <EOF> after : \"\\\"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 131: 
byte[] byteArray = new byte[2];
byteArray[0] = (byte)48;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream, (byte)0, (byte)48);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 132: 
byte[] byteArray = new byte[1];
byteArray[0] = (byte) (-30);
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 1, column 2.  Encountered: <EOF> after : \"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 133: 
byte[] byteArray = new byte[3];
byteArray[0] = (byte)48;
byteArray[1] = (byte)119;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 134: 
byte[] byteArray = new byte[3];
byteArray[0] = (byte)49;
byteArray[1] = (byte) (-37);
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 135: 
byte[] byteArray = new byte[8];
byteArray[0] = (byte)122;
byteArray[1] = (byte)51;
byteArray[2] = (byte)122;
byteArray[3] = (byte)122;
byteArray[4] = (byte) (-61);
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
Test 136: 
StringReader stringReader = new StringReader("oT~?V6Z?5^K}");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();
javaParserTokenManager.jjmatchedKind = 1;
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 1, column 5.  Encountered: \"V\" (86), after : \"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 137: 
StringReader stringReader = new StringReader("SWB\"_");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream, 2);
// Undeclared exception!
try { 
  javaParserTokenManager.getNextToken();
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Lexical error at line 1, column 2.  Encountered: \"W\" (87), after : \"\"
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 138: 
StringReader stringReader = new StringReader("7nQinyH");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
// Undeclared exception!
try { 
  javaParserTokenManager.SwitchTo(66);
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Error: Ignoring invalid lexical state : 66. State unchanged.
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 139: 
JavaCharStream javaCharStream = new JavaCharStream((Reader) null);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
// Undeclared exception!
try { 
  javaParserTokenManager.SwitchTo((-1));
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Error: Ignoring invalid lexical state : -1. State unchanged.
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}

Test 140: 
StringReader stringReader = new StringReader("K~}|x");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.ReInit(javaCharStream);
Test 141: 
StringReader stringReader = new StringReader("(CsmGue9s>(Kub; I2W");
JavaCharStream javaCharStream = new JavaCharStream(stringReader);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.SwitchTo(1);
Test 142: 
byte[] byteArray = new byte[1];
byteArray[0] = (byte)102;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
JavaCharStream javaCharStream = new JavaCharStream(byteArrayInputStream);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(javaCharStream);
javaParserTokenManager.getNextToken();

* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 60%
* Total number of goals: 1707
* Number of covered goals: 1030
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 54%
* Total number of goals: 981
* Number of covered goals: 530
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 50%
* Total number of goals: 4
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 11
* Number of covered goals: 11
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 60%
* Total number of goals: 1707
* Number of covered goals: 1029
* Generated 143 tests with total length 690
* Resulting test suite's coverage: 65% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 21%
* Compiling and checking tests
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager((JavaCharStream) null);
Token arg0 = new Token();
javaParserTokenManager.TokenLexicalActions(arg0);
assertNull(arg0.toString());


** It was a parseable test case! 
refined test name is: testTokenLexicalActionsnullToken
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager((JavaCharStream) null, 2);
javaParserTokenManager.MoreLexicalActions();

** It was a parseable test case! 
refined test name is: testEofReturnedWhenNoMoreTokensAvailable
* Compiling Tests
refined test name is: testParserTokenManagerEofToken
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: JavaCharStream arg0 = new JavaCharStream((Reader) null);
JavaParserTokenManager javaParserTokenManager = new JavaParserTokenManager(arg0);
// Undeclared exception!
try { 
  javaParserTokenManager.SwitchTo((-1));
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // Error: Ignoring invalid lexical state : -1. State unchanged.
   //
   verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
}


** It was a parseable test case! 
refined test name is: testInvalidLexicalState
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 22:31:27.222 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar3130178270007284553.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 22:31:27.243 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3130178270007284553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 22:31:27.314 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar3130178270007284553.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 22:31:27.316 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3130178270007284553.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 22:31:27.424 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar3130178270007284553.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 22:31:27.427 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3130178270007284553.jar
** Write a test suite: 1 called: 0 to improve: false
[MASTER] 22:31:27.593 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar3130178270007284553.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 22:31:27.595 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3130178270007284553.jar
** Write a test suite: 1 called: 0 to improve: false
[MASTER] 22:31:27.685 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar3130178270007284553.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
* Writing tests to file
* Writing JUnit test case 'JavaParserTokenManager_ESTest' to evosuite-tests
[MASTER] 22:31:27.686 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3130178270007284553.jar
** Write a test suite: 1 called: 0 to improve: false
* Done!

* Computation finished
