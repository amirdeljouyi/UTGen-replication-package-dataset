* EvoSuite 1.0.0-SNAPSHOT
* Going to generate test cases for class: org.exolab.jms.net.connector.DefaultConnectionPool
* Starting Client-0
* Properties loaded from /home/roham/Results-Utestgen/dataset/SF110-new-res/66_openjms/evosuite-files/evosuite.properties
* Connecting to master process on port 2243
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 19:42:45.162 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 19:42:45.164 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 19:42:45.167 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 19:42:45.214 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 19:42:45.219 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 19:42:45.220 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 19:42:45.767 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.sql.SQLType
[MASTER] 19:42:47.528 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 19:42:47.536 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 19:42:47.537 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 19:42:48.953 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 19:42:48.953 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 19:42:48.954 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 19:42:48.955 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 19:42:48.956 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 19:42:48.957 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 19:42:49.473 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 19:42:50.108 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
* Finished analyzing classpath
* Generating tests for class org.exolab.jms.net.connector.DefaultConnectionPool
* Test criteria:
  - Branch Coverage
  - Line Coverage
  - Method-Output Coverage
  - Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 442
* Using seed 1710272562343
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%]* Initial Number of Goals in DynaMOSA = 179 / 442
[MASTER] 19:42:51.384 [logback-1] WARN  TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleImmutableEntry<K, V> : Type points to itself
[Progress:>                             0%] [Cov:==>                                7%][Progress:>                             1%] [Cov:==>                                7%][Progress:>                             1%] [Cov:=======>                           22%][Progress:>                             2%] [Cov:=======>                           22%][Progress:>                             2%] [Cov:========>                          24%][Progress:>                             2%] [Cov:=========>                         27%][Progress:=>                            5%] [Cov:==========>                        30%][Progress:==>                           7%] [Cov:==========>                        30%][Progress:===>                          12%] [Cov:==========>                        30%][Progress:===>                          13%] [Cov:==========>                        30%][Progress:===>                          13%] [Cov:============>                      36%][Progress:===>                          13%] [Cov:============>                      37%][Progress:====>                         16%] [Cov:=============>                     38%][Progress:====>                         16%] [Cov:=============>                     38%][Progress:====>                         16%] [Cov:==============>                    41%][Progress:====>                         16%] [Cov:==============>                    41%][Progress:=====>                        17%] [Cov:==============>                    41%][Progress:=====>                        17%] [Cov:==============>                    41%][Progress:=====>                        17%] [Cov:==============>                    41%][Progress:======>                       20%] [Cov:==============>                    41%][Progress:======>                       22%] [Cov:==============>                    41%][Progress:======>                       23%] [Cov:==============>                    41%][Progress:=======>                      25%] [Cov:===============>                   43%][Progress:========>                     28%] [Cov:===============>                   43%][Progress:========>                     28%] [Cov:===============>                   43%][Progress:=========>                    31%] [Cov:===============>                   43%][Progress:=========>                    32%] [Cov:===============>                   43%][Progress:=========>                    32%] [Cov:===============>                   43%][Progress:==========>                   34%] [Cov:===============>                   43%][Progress:===========>                  37%] [Cov:===============>                   43%][Progress:===========>                  37%] [Cov:===============>                   43%][Progress:============>                 41%] [Cov:===============>                   43%][Progress:============>                 42%] [Cov:===============>                   43%][Progress:============>                 42%] [Cov:===============>                   43%][Progress:============>                 42%] [Cov:===============>                   43%][Progress:=============>                46%] [Cov:===============>                   43%][Progress:==============>               48%] [Cov:===============>                   43%][Progress:===============>              50%] [Cov:===============>                   43%][Progress:===============>              50%] [Cov:===============>                   43%][Progress:===============>              50%] [Cov:===============>                   43%][Progress:===============>              52%] [Cov:===============>                   43%][Progress:================>             56%] [Cov:===============>                   43%][Progress:=================>            58%] [Cov:===============>                   43%][Progress:=================>            58%] [Cov:===============>                   43%][Progress:==================>           61%] [Cov:===============>                   43%][Progress:==================>           63%] [Cov:===============>                   43%][Progress:===================>          64%] [Cov:===============>                   43%][Progress:===================>          66%] [Cov:===============>                   43%][Progress:===================>          66%] [Cov:===============>                   43%][Progress:===================>          66%] [Cov:===============>                   43%][Progress:====================>         69%] [Cov:===============>                   43%][Progress:=====================>        71%] [Cov:===============>                   43%][Progress:=====================>        72%] [Cov:===============>                   43%][Progress:=====================>        72%] [Cov:===============>                   43%][Progress:=====================>        72%] [Cov:===============>                   43%][Progress:=====================>        73%] [Cov:===============>                   43%][Progress:======================>       76%] [Cov:===============>                   43%][Progress:=======================>      79%] [Cov:===============>                   43%][Progress:=======================>      79%] [Cov:===============>                   43%][Progress:=======================>      79%] [Cov:===============>                   43%][Progress:========================>     81%] [Cov:===============>                   43%][Progress:========================>     81%] [Cov:===============>                   43%][Progress:=========================>    84%] [Cov:===============>                   43%][Progress:=========================>    84%] [Cov:===============>                   43%][Progress:=========================>    85%] [Cov:===============>                   43%][Progress:=========================>    85%] [Cov:===============>                   43%][Progress:=========================>    86%] [Cov:===============>                   43%][Progress:=========================>    86%] [Cov:===============>                   43%][Progress:==========================>   87%] [Cov:===============>                   43%][Progress:==========================>   87%] [Cov:===============>                   43%][Progress:==========================>   87%] [Cov:===============>                   43%][Progress:==========================>   87%] [Cov:===============>                   43%][Progress:===========================>  90%] [Cov:===============>                   43%][Progress:===========================>  90%] [Cov:===============>                   43%][Progress:===========================>  93%] [Cov:===============>                   43%][Progress:===========================>  93%] [Cov:===============>                   43%][Progress:============================> 95%] [Cov:===============>                   43%][Progress:=============================>97%] [Cov:===============>                   43%][Progress:==============================100%] [Cov:===============>                   43%][Progress:==============================100%] [Cov:===============>                   43%]
* Search finished after 203s and 79 generations, 38838 statements, best individual has fitness: 278.0
* Generated before the refinement 18 tests with total length 108
statement is: org.exolab.jms.net.vm.VMManagedConnectionFactory()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.vm.VMManagedConnectionFactory
statement code is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory()
statement is: mock(interface org.exolab.jms.net.connector.InvocationHandler) type is: class org.evosuite.testcase.statements.FunctionalMockStatement return type interface org.exolab.jms.net.connector.InvocationHandler
statement code is: InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer())
statement is: createConnectionFactory(Lorg/exolab/jms/net/connector/ConnectionManager;)Lorg/exolab/jms/net/connector/ConnectionFactory; type is: class org.evosuite.testcase.statements.MethodStatement return type interface org.exolab.jms.net.connector.ConnectionFactory
statement code is: ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null)
statement is: org.exolab.jms.net.connector.ContextInvocationHandler(Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Lorg/exolab/jms/net/connector/ManagedConnection;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.ContextInvocationHandler
statement code is: ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(arg0, arg1, (ManagedConnection) null)
statement is: org.exolab.jms.net.connector.DefaultConnectionPool(Lorg/exolab/jms/net/connector/ManagedConnectionFactory;Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Ljava/util/Map;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.DefaultConnectionPool
statement code is: DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(arg0, arg1, arg2, (Map) null)
statement is: getManagedConnectionAcceptorListener()Lorg/exolab/jms/net/connector/ManagedConnectionAcceptorListener; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.exolab.jms.net.connector.DefaultConnectionPool
statement code is: DefaultConnectionPool managedConnectionAcceptorListener = (DefaultConnectionPool)defaultConnectionPool.getManagedConnectionAcceptorListener()
test data is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
defaultConnectionPool.getManagedConnectionAcceptorListener();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
        InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
        ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory(((ConnectionManager) (null)));
        ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, ((ManagedConnection) (null)));
        DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, ((Map) (null)));
        defaultConnectionPool.getManagedConnectionAcceptorListener();
    }
}
statement is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer()), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: mock(InvocationHandler.class, new ViolatedAssumptionAnswer()) target is:  method is: mock(java.lang.Class,<unknown>)
target name is: InvocationHandler argument is: InvocationHandler.class
Matched Method is: mock(interface org.exolab.jms.net.connector.InvocationHandler)
statement is: ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory(((ConnectionManager) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: vMManagedConnectionFactory.createConnectionFactory(((ConnectionManager) (null))) target is: vMManagedConnectionFactory method is: createConnectionFactory(ConnectionManager)
source statement: org.exolab.jms.net.vm.VMManagedConnectionFactory()V callee: VariableReference: Statement 0, type org.exolab.jms.net.vm.VMManagedConnectionFactoryindex is: 0
Matched Method is: createConnectionFactory(Lorg/exolab/jms/net/connector/ConnectionManager;)Lorg/exolab/jms/net/connector/ConnectionFactory;
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, ((ManagedConnection) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, ((Map) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: defaultConnectionPool.getManagedConnectionAcceptorListener(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: defaultConnectionPool.getManagedConnectionAcceptorListener() target is: defaultConnectionPool method is: getManagedConnectionAcceptorListener()
source statement: org.exolab.jms.net.connector.DefaultConnectionPool(Lorg/exolab/jms/net/connector/ManagedConnectionFactory;Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Ljava/util/Map;)V callee: VariableReference: Statement 4, type org.exolab.jms.net.connector.DefaultConnectionPoolindex is: 5
Matched Method is: getManagedConnectionAcceptorListener()Lorg/exolab/jms/net/connector/ManagedConnectionAcceptorListener;
TestCase is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionManager connectionManager = null;
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory(connectionManager);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
((DefaultConnectionPool) contextInvocationHandler).getManagedConnectionAcceptorListener();

statement is: org.exolab.jms.net.vm.VMManagedConnectionFactory()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.vm.VMManagedConnectionFactory
statement code is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory()
statement is: mock(interface org.exolab.jms.net.connector.InvocationHandler) type is: class org.evosuite.testcase.statements.FunctionalMockStatement return type interface org.exolab.jms.net.connector.InvocationHandler
statement code is: InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer())
statement is: createConnectionFactory(Lorg/exolab/jms/net/connector/ConnectionManager;)Lorg/exolab/jms/net/connector/ConnectionFactory; type is: class org.evosuite.testcase.statements.MethodStatement return type interface org.exolab.jms.net.connector.ConnectionFactory
statement code is: ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null)
statement is: org.exolab.jms.net.connector.ContextInvocationHandler(Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Lorg/exolab/jms/net/connector/ManagedConnection;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.ContextInvocationHandler
statement code is: ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(arg0, arg1, (ManagedConnection) null)
statement is: org.exolab.jms.net.connector.DefaultConnectionPool(Lorg/exolab/jms/net/connector/ManagedConnectionFactory;Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Ljava/util/Map;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.DefaultConnectionPool
statement code is: DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(arg0, arg1, arg2, (Map) null)
statement is: org.exolab.jms.net.connector.ManagedConnectionHandle(Lorg/exolab/jms/net/connector/DefaultConnectionPool;Lorg/exolab/jms/net/connector/ManagedConnection;Lorg/exolab/jms/net/connector/ConnectionFactory;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.ManagedConnectionHandle
statement code is: ManagedConnectionHandle managedConnectionHandle = new ManagedConnectionHandle(arg0, (ManagedConnection) null, arg2)
statement is: accepted(Lorg/exolab/jms/net/connector/ManagedConnectionAcceptor;Lorg/exolab/jms/net/connector/ManagedConnection;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: defaultConnectionPool.accepted((ManagedConnectionAcceptor) null, arg1)
test data is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
ManagedConnectionHandle managedConnectionHandle = new ManagedConnectionHandle(defaultConnectionPool, (ManagedConnection) null, createConnectionFactory);
defaultConnectionPool.accepted((ManagedConnectionAcceptor) null, managedConnectionHandle);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
        InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
        ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory("MySQL");
        ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, "MySQL");
        DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, "localhost:3306");
        ManagedConnectionHandle managedConnectionHandle = new ManagedConnectionHandle(defaultConnectionPool, "root", "MySQL");
        defaultConnectionPool.accepted(((ManagedConnectionAcceptor) (null)), managedConnectionHandle);
    }
}
statement is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer()), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: mock(InvocationHandler.class, new ViolatedAssumptionAnswer()) target is:  method is: mock(java.lang.Class,<unknown>)
target name is: InvocationHandler argument is: InvocationHandler.class
Matched Method is: mock(interface org.exolab.jms.net.connector.InvocationHandler)
statement is: ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory("MySQL"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: vMManagedConnectionFactory.createConnectionFactory("MySQL") target is: vMManagedConnectionFactory method is: createConnectionFactory(java.lang.String)
source statement: org.exolab.jms.net.vm.VMManagedConnectionFactory()V callee: VariableReference: Statement 0, type org.exolab.jms.net.vm.VMManagedConnectionFactoryindex is: 0
Matched Method is: createConnectionFactory(Lorg/exolab/jms/net/connector/ConnectionManager;)Lorg/exolab/jms/net/connector/ConnectionFactory;
statement is: ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, "MySQL"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, "localhost:3306"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ManagedConnectionHandle managedConnectionHandle = new ManagedConnectionHandle(defaultConnectionPool, "root", "MySQL"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: defaultConnectionPool.accepted(((ManagedConnectionAcceptor) (null)), managedConnectionHandle), class spoon.support.reflect.code.CtInvocationImpl
invocation is: defaultConnectionPool.accepted(((ManagedConnectionAcceptor) (null)), managedConnectionHandle) target is: defaultConnectionPool method is: accepted(ManagedConnectionAcceptor,ManagedConnectionHandle)
source statement: org.exolab.jms.net.connector.DefaultConnectionPool(Lorg/exolab/jms/net/connector/ManagedConnectionFactory;Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Ljava/util/Map;)V callee: VariableReference: Statement 4, type org.exolab.jms.net.connector.DefaultConnectionPoolindex is: 7
Matched Method is: accepted(Lorg/exolab/jms/net/connector/ManagedConnectionAcceptor;Lorg/exolab/jms/net/connector/ManagedConnection;)V
i 1 Parameters size() 1 Num of Method Parameters: 2
TestCase is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
String string = "MySQL";
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) string);
String string = "MySQL";
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) string);
String string = "localhost:3306";
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) string);
String string = "root";
String string = "MySQL";
ManagedConnectionHandle managedConnectionHandle = new ManagedConnectionHandle(defaultConnectionPool, (ManagedConnection) string, (ConnectionFactory) string);
ManagedConnectionHandle managedConnectionHandle = null;
((DefaultConnectionPool) string).accepted((ManagedConnectionAcceptor) managedConnectionHandle, managedConnectionHandle);

statement is: mock(interface org.exolab.jms.net.connector.InvocationHandler) type is: class org.evosuite.testcase.statements.FunctionalMockStatement return type interface org.exolab.jms.net.connector.InvocationHandler
statement code is: InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer())
statement is: org.exolab.jms.net.http.HTTPSManagedConnectionFactory()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.http.HTTPSManagedConnectionFactory
statement code is: HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory()
statement is: createConnectionFactory(Lorg/exolab/jms/net/connector/ConnectionManager;)Lorg/exolab/jms/net/connector/ConnectionFactory; type is: class org.evosuite.testcase.statements.MethodStatement return type interface org.exolab.jms.net.connector.ConnectionFactory
statement code is: ConnectionFactory createConnectionFactory = hTTPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null)
statement is: org.exolab.jms.net.connector.ContextInvocationHandler(Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Lorg/exolab/jms/net/connector/ManagedConnection;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.ContextInvocationHandler
statement code is: ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(arg0, arg1, (ManagedConnection) null)
statement is: org.exolab.jms.net.connector.DefaultConnectionPool(Lorg/exolab/jms/net/connector/ManagedConnectionFactory;Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Ljava/util/Map;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.DefaultConnectionPool
statement code is: DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(arg0, arg1, arg2, (Map) null)
statement is: org.exolab.jms.net.connector.MulticastCallerListener()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.MulticastCallerListener
statement code is: MulticastCallerListener multicastCallerListener = new MulticastCallerListener()
statement is: setCallerListener(Lorg/exolab/jms/net/connector/CallerListener;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: defaultConnectionPool.setCallerListener(arg0)
test data is: InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
ConnectionFactory createConnectionFactory = hTTPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
MulticastCallerListener multicastCallerListener = new MulticastCallerListener();
defaultConnectionPool.setCallerListener(multicastCallerListener);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
        HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
        ConnectionFactory createConnectionFactory = hTTPSManagedConnectionFactory.createConnectionFactory(((ConnectionManager) (null)));
        ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, ((ManagedConnection) (null)));
        DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, ((Map) (null)));
        MulticastCallerListener multicastCallerListener = new MulticastCallerListener();
        defaultConnectionPool.setCallerListener(multicastCallerListener);
    }
}
statement is: InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer()), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: mock(InvocationHandler.class, new ViolatedAssumptionAnswer()) target is:  method is: mock(java.lang.Class,<unknown>)
target name is: InvocationHandler argument is: InvocationHandler.class
Matched Method is: mock(interface org.exolab.jms.net.connector.InvocationHandler)
statement is: HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ConnectionFactory createConnectionFactory = hTTPSManagedConnectionFactory.createConnectionFactory(((ConnectionManager) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: hTTPSManagedConnectionFactory.createConnectionFactory(((ConnectionManager) (null))) target is: hTTPSManagedConnectionFactory method is: createConnectionFactory(ConnectionManager)
source statement: org.exolab.jms.net.http.HTTPSManagedConnectionFactory()V callee: VariableReference: Statement 1, type org.exolab.jms.net.http.HTTPSManagedConnectionFactoryindex is: 1
Matched Method is: createConnectionFactory(Lorg/exolab/jms/net/connector/ConnectionManager;)Lorg/exolab/jms/net/connector/ConnectionFactory;
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, ((ManagedConnection) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, ((Map) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: MulticastCallerListener multicastCallerListener = new MulticastCallerListener(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: defaultConnectionPool.setCallerListener(multicastCallerListener), class spoon.support.reflect.code.CtInvocationImpl
invocation is: defaultConnectionPool.setCallerListener(multicastCallerListener) target is: defaultConnectionPool method is: setCallerListener(MulticastCallerListener)
source statement: org.exolab.jms.net.connector.DefaultConnectionPool(Lorg/exolab/jms/net/connector/ManagedConnectionFactory;Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Ljava/util/Map;)V callee: VariableReference: Statement 4, type org.exolab.jms.net.connector.DefaultConnectionPoolindex is: 5
Matched Method is: setCallerListener(Lorg/exolab/jms/net/connector/CallerListener;)V
TestCase is: InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
ConnectionManager connectionManager = null;
ConnectionFactory createConnectionFactory = hTTPSManagedConnectionFactory.createConnectionFactory(connectionManager);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
MulticastCallerListener multicastCallerListener = new MulticastCallerListener();
((DefaultConnectionPool) contextInvocationHandler).setCallerListener(multicastCallerListener);

statement is: org.exolab.jms.net.vm.VMManagedConnectionFactory()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.vm.VMManagedConnectionFactory
statement code is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory()
statement is: createConnectionFactory(Lorg/exolab/jms/net/connector/ConnectionManager;)Lorg/exolab/jms/net/connector/ConnectionFactory; type is: class org.evosuite.testcase.statements.MethodStatement return type interface org.exolab.jms.net.connector.ConnectionFactory
statement code is: ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null)
statement is: org.exolab.jms.net.connector.ContextInvocationHandler(Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Lorg/exolab/jms/net/connector/ManagedConnection;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.ContextInvocationHandler
statement code is: ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler((InvocationHandler) null, arg1, (ManagedConnection) null)
statement is: org.exolab.jms.net.connector.DefaultConnectionPool(Lorg/exolab/jms/net/connector/ManagedConnectionFactory;Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Ljava/util/Map;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.DefaultConnectionPool
statement code is: DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(arg0, arg1, arg2, (Map) null)
statement is: createManagedConnection(Ljava/security/Principal;Lorg/exolab/jms/net/connector/ConnectionRequestInfo;)Lorg/exolab/jms/net/connector/ManagedConnection; type is: class org.evosuite.testcase.statements.MethodStatement return type interface org.exolab.jms.net.connector.ManagedConnection
statement code is: ManagedConnection createManagedConnection = defaultConnectionPool.createManagedConnection((Principal) null, (ConnectionRequestInfo) null)
test data is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler((InvocationHandler) null, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
defaultConnectionPool.createManagedConnection((Principal) null, (ConnectionRequestInfo) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
        ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory("jdbc:postgresql://localhost:5432/test");
        ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(null, createConnectionFactory, null);
        DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, null);
        defaultConnectionPool.createManagedConnection("user", "password", "jdbc:postgresql://localhost:5432/test");
    }
}
statement is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory("jdbc:postgresql://localhost:5432/test"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: vMManagedConnectionFactory.createConnectionFactory("jdbc:postgresql://localhost:5432/test") target is: vMManagedConnectionFactory method is: createConnectionFactory(java.lang.String)
source statement: org.exolab.jms.net.vm.VMManagedConnectionFactory()V callee: VariableReference: Statement 0, type org.exolab.jms.net.vm.VMManagedConnectionFactoryindex is: 0
Matched Method is: createConnectionFactory(Lorg/exolab/jms/net/connector/ConnectionManager;)Lorg/exolab/jms/net/connector/ConnectionFactory;
statement is: ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(null, createConnectionFactory, null), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, null), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: defaultConnectionPool.createManagedConnection("user", "password", "jdbc:postgresql://localhost:5432/test"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: defaultConnectionPool.createManagedConnection("user", "password", "jdbc:postgresql://localhost:5432/test") target is: defaultConnectionPool method is: createManagedConnection(java.lang.String,java.lang.String,java.lang.String)
TestCase is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
String string = "jdbc:postgresql://localhost:5432/test";
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) string);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler((InvocationHandler) createConnectionFactory, (ConnectionFactory) string, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);

statement is: org.exolab.jms.net.vm.VMManagedConnectionFactory()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.vm.VMManagedConnectionFactory
statement code is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory()
statement is: mock(interface org.exolab.jms.net.connector.InvocationHandler) type is: class org.evosuite.testcase.statements.FunctionalMockStatement return type interface org.exolab.jms.net.connector.InvocationHandler
statement code is: InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer())
statement is: createConnectionFactory(Lorg/exolab/jms/net/connector/ConnectionManager;)Lorg/exolab/jms/net/connector/ConnectionFactory; type is: class org.evosuite.testcase.statements.MethodStatement return type interface org.exolab.jms.net.connector.ConnectionFactory
statement code is: ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null)
statement is: org.exolab.jms.net.connector.ContextInvocationHandler(Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Lorg/exolab/jms/net/connector/ManagedConnection;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.ContextInvocationHandler
statement code is: ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(arg0, arg1, (ManagedConnection) null)
statement is: org.exolab.jms.net.connector.DefaultConnectionPool(Lorg/exolab/jms/net/connector/ManagedConnectionFactory;Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Ljava/util/Map;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.DefaultConnectionPool
statement code is: DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(arg0, arg1, arg2, (Map) null)
statement is: org.exolab.jms.net.uri.URI()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.uri.URI
statement code is: URI uRI = new URI()
statement is: org.exolab.jms.net.connector.URIRequestInfo(Lorg/exolab/jms/net/uri/URI;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.URIRequestInfo
statement code is: URIRequestInfo uRIRequestInfo = new URIRequestInfo(arg0)
statement is: org.exolab.jms.config.Configuration()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.config.Configuration
statement code is: Configuration configuration = new Configuration()
statement is: org.exolab.jms.persistence.DatabaseService(Lorg/exolab/jms/config/Configuration;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.persistence.DatabaseService
statement code is: DatabaseService databaseService = new DatabaseService(arg0)
statement is: org.exolab.jms.authentication.UserManager(Lorg/exolab/jms/config/Configuration;Lorg/exolab/jms/persistence/DatabaseService;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.authentication.UserManager
statement code is: UserManager userManager = new UserManager(arg0, arg1)
statement is: org.exolab.jms.authentication.AuthenticationMgr(Lorg/exolab/jms/authentication/UserManager;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.authentication.AuthenticationMgr
statement code is: AuthenticationMgr authenticationMgr = new AuthenticationMgr(arg0)
statement is: createManagedConnectionAcceptor(Lorg/exolab/jms/net/connector/Authenticator;Lorg/exolab/jms/net/connector/ConnectionRequestInfo;)Lorg/exolab/jms/net/connector/ManagedConnectionAcceptor; type is: class org.evosuite.testcase.statements.MethodStatement return type interface org.exolab.jms.net.connector.ManagedConnectionAcceptor
statement code is: ManagedConnectionAcceptor createManagedConnectionAcceptor = defaultConnectionPool.createManagedConnectionAcceptor(arg0, arg1)
test data is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
URI uRI = new URI();
URIRequestInfo uRIRequestInfo = new URIRequestInfo(uRI);
Configuration configuration = new Configuration();
DatabaseService databaseService = new DatabaseService(configuration);
UserManager userManager = new UserManager(configuration, databaseService);
AuthenticationMgr authenticationMgr = new AuthenticationMgr(userManager);
defaultConnectionPool.createManagedConnectionAcceptor(authenticationMgr, uRIRequestInfo);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
        InvocationHandler invocationHandler = new InvocationHandlerImpl();
        ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory(((ConnectionManager) (null)));
        ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, ((ManagedConnection) (null)));
        DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, ((Map) (null)));
        URI uRI = new URI("https://www.example.com");
        URIRequestInfo uRIRequestInfo = new URIRequestInfo(uRI);
        Configuration configuration = new Configuration();
        DatabaseService databaseService = new DatabaseService(configuration);
        UserManager userManager = new UserManager(configuration, databaseService);
        AuthenticationMgr authenticationMgr = new AuthenticationMgr(userManager);
        defaultConnectionPool.createManagedConnectionAcceptor(authenticationMgr, uRIRequestInfo);
    }
}
statement is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: InvocationHandler invocationHandler = new InvocationHandlerImpl(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory(((ConnectionManager) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: vMManagedConnectionFactory.createConnectionFactory(((ConnectionManager) (null))) target is: vMManagedConnectionFactory method is: createConnectionFactory(ConnectionManager)
source statement: org.exolab.jms.net.vm.VMManagedConnectionFactory()V callee: VariableReference: Statement 0, type org.exolab.jms.net.vm.VMManagedConnectionFactoryindex is: 0
Matched Method is: createConnectionFactory(Lorg/exolab/jms/net/connector/ConnectionManager;)Lorg/exolab/jms/net/connector/ConnectionFactory;
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, ((ManagedConnection) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, ((Map) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: URI uRI = new URI("https://www.example.com"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: URIRequestInfo uRIRequestInfo = new URIRequestInfo(uRI), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: org.exolab.jms.net.connector.URIRequestInfo(Lorg/exolab/jms/net/uri/URI;)V
statement is: Configuration configuration = new Configuration(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DatabaseService databaseService = new DatabaseService(configuration), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: UserManager userManager = new UserManager(configuration, databaseService), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: AuthenticationMgr authenticationMgr = new AuthenticationMgr(userManager), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: defaultConnectionPool.createManagedConnectionAcceptor(authenticationMgr, uRIRequestInfo), class spoon.support.reflect.code.CtInvocationImpl
invocation is: defaultConnectionPool.createManagedConnectionAcceptor(authenticationMgr, uRIRequestInfo) target is: defaultConnectionPool method is: createManagedConnectionAcceptor(AuthenticationMgr,URIRequestInfo)
source statement: org.exolab.jms.net.connector.DefaultConnectionPool(Lorg/exolab/jms/net/connector/ManagedConnectionFactory;Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Ljava/util/Map;)V callee: VariableReference: Statement 4, type org.exolab.jms.net.connector.DefaultConnectionPoolindex is: 4
Matched Method is: createManagedConnectionAcceptor(Lorg/exolab/jms/net/connector/Authenticator;Lorg/exolab/jms/net/connector/ConnectionRequestInfo;)Lorg/exolab/jms/net/connector/ManagedConnectionAcceptor;
i 1 Parameters size() 1 Num of Method Parameters: 2
TestCase is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
ConnectionManager connectionManager = null;
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory(connectionManager);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler((InvocationHandler) createConnectionFactory, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
Configuration configuration = new Configuration();
DatabaseService databaseService = new DatabaseService(configuration);
UserManager userManager = new UserManager(configuration, databaseService);
AuthenticationMgr authenticationMgr = new AuthenticationMgr(userManager);
URIRequestInfo uRIRequestInfo = null;
defaultConnectionPool.createManagedConnectionAcceptor(authenticationMgr, uRIRequestInfo);

statement is: org.exolab.jms.net.vm.VMManagedConnectionFactory()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.vm.VMManagedConnectionFactory
statement code is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory()
statement is: mock(interface org.exolab.jms.net.connector.InvocationHandler) type is: class org.evosuite.testcase.statements.FunctionalMockStatement return type interface org.exolab.jms.net.connector.InvocationHandler
statement code is: InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer())
statement is: createConnectionFactory(Lorg/exolab/jms/net/connector/ConnectionManager;)Lorg/exolab/jms/net/connector/ConnectionFactory; type is: class org.evosuite.testcase.statements.MethodStatement return type interface org.exolab.jms.net.connector.ConnectionFactory
statement code is: ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null)
statement is: org.exolab.jms.net.connector.ContextInvocationHandler(Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Lorg/exolab/jms/net/connector/ManagedConnection;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.ContextInvocationHandler
statement code is: ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(arg0, arg1, (ManagedConnection) null)
statement is: org.exolab.jms.net.connector.DefaultConnectionPool(Lorg/exolab/jms/net/connector/ManagedConnectionFactory;Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Ljava/util/Map;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.DefaultConnectionPool
statement code is: DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(arg0, arg1, arg2, (Map) null)
statement is: matchManagedConnectionAcceptors(Lorg/exolab/jms/net/connector/ConnectionRequestInfo;)Lorg/exolab/jms/net/connector/ManagedConnectionAcceptor; type is: class org.evosuite.testcase.statements.MethodStatement return type interface org.exolab.jms.net.connector.ManagedConnectionAcceptor
statement code is: ManagedConnectionAcceptor matchManagedConnectionAcceptors = defaultConnectionPool.matchManagedConnectionAcceptors((ConnectionRequestInfo) null)
test data is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
defaultConnectionPool.matchManagedConnectionAcceptors((ConnectionRequestInfo) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
        InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
        ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory(((ConnectionManager) (null)));
        ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, ((ManagedConnection) (null)));
        DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, ((Map) (null)));
        defaultConnectionPool.matchManagedConnectionAcceptors(((ConnectionRequestInfo) (null)));
    }
}
statement is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer()), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: mock(InvocationHandler.class, new ViolatedAssumptionAnswer()) target is:  method is: mock(java.lang.Class,<unknown>)
target name is: InvocationHandler argument is: InvocationHandler.class
Matched Method is: mock(interface org.exolab.jms.net.connector.InvocationHandler)
statement is: ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory(((ConnectionManager) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: vMManagedConnectionFactory.createConnectionFactory(((ConnectionManager) (null))) target is: vMManagedConnectionFactory method is: createConnectionFactory(ConnectionManager)
source statement: org.exolab.jms.net.vm.VMManagedConnectionFactory()V callee: VariableReference: Statement 0, type org.exolab.jms.net.vm.VMManagedConnectionFactoryindex is: 0
Matched Method is: createConnectionFactory(Lorg/exolab/jms/net/connector/ConnectionManager;)Lorg/exolab/jms/net/connector/ConnectionFactory;
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, ((ManagedConnection) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, ((Map) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: defaultConnectionPool.matchManagedConnectionAcceptors(((ConnectionRequestInfo) (null))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: defaultConnectionPool.matchManagedConnectionAcceptors(((ConnectionRequestInfo) (null))) target is: defaultConnectionPool method is: matchManagedConnectionAcceptors(ConnectionRequestInfo)
source statement: org.exolab.jms.net.connector.DefaultConnectionPool(Lorg/exolab/jms/net/connector/ManagedConnectionFactory;Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Ljava/util/Map;)V callee: VariableReference: Statement 4, type org.exolab.jms.net.connector.DefaultConnectionPoolindex is: 5
Matched Method is: matchManagedConnectionAcceptors(Lorg/exolab/jms/net/connector/ConnectionRequestInfo;)Lorg/exolab/jms/net/connector/ManagedConnectionAcceptor;
i 0 Parameters size() 0 Num of Method Parameters: 1
TestCase is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionManager connectionManager = null;
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory(connectionManager);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
ConnectionRequestInfo connectionRequestInfo = null;
((DefaultConnectionPool) contextInvocationHandler).matchManagedConnectionAcceptors(connectionRequestInfo);

statement is: org.exolab.jms.net.vm.VMManagedConnectionFactory()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.vm.VMManagedConnectionFactory
statement code is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory()
statement is: createConnectionFactory(Lorg/exolab/jms/net/connector/ConnectionManager;)Lorg/exolab/jms/net/connector/ConnectionFactory; type is: class org.evosuite.testcase.statements.MethodStatement return type interface org.exolab.jms.net.connector.ConnectionFactory
statement code is: ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null)
statement is: org.exolab.jms.net.connector.DefaultConnectionPool(Lorg/exolab/jms/net/connector/ManagedConnectionFactory;Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Ljava/util/Map;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.DefaultConnectionPool
statement code is: DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool((ManagedConnectionFactory) null, (InvocationHandler) null, arg2, (Map) null)
test data is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool((ManagedConnectionFactory) null, (InvocationHandler) null, createConnectionFactory, (Map) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory(new MockConnectionManager());
        ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory(new MockConnectionManager());
        DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(new MockManagedConnectionFactory(), new MockInvocationHandler(), createConnectionFactory, null);
    }
}
statement is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory(new MockConnectionManager()), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory(new MockConnectionManager()), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: vMManagedConnectionFactory.createConnectionFactory(new MockConnectionManager()) target is: vMManagedConnectionFactory method is: createConnectionFactory(MockConnectionManager)
statement is: DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(new MockManagedConnectionFactory(), new MockInvocationHandler(), createConnectionFactory, null), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: org.exolab.jms.net.connector.DefaultConnectionPool(Lorg/exolab/jms/net/connector/ManagedConnectionFactory;Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Ljava/util/Map;)V
statement is: org.exolab.jms.net.vm.VMManagedConnectionFactory()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.vm.VMManagedConnectionFactory
statement code is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory()
statement is: org.exolab.jms.net.connector.DefaultConnectionPool(Lorg/exolab/jms/net/connector/ManagedConnectionFactory;Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Ljava/util/Map;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.DefaultConnectionPool
statement code is: DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(arg0, (InvocationHandler) null, (ConnectionFactory) null, (Map) null)
test data is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, (InvocationHandler) null, (ConnectionFactory) null, (Map) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
        DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, ((InvocationHandler) (null)), ((ConnectionFactory) (null)), ((Map) (null)));
        // Improved test data:
        VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory("MySQL", "localhost", 3306);
        DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, "username", "password");
    }
}
statement is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, ((InvocationHandler) (null)), ((ConnectionFactory) (null)), ((Map) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: // Improved test data:
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory("MySQL", "localhost", 3306), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, "username", "password"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, (InvocationHandler) null, (ConnectionFactory) null, (Map) null);

statement is: org.exolab.jms.net.vm.VMManagedConnectionFactory()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.vm.VMManagedConnectionFactory
statement code is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory()
statement is: mock(interface org.exolab.jms.net.connector.InvocationHandler) type is: class org.evosuite.testcase.statements.FunctionalMockStatement return type interface org.exolab.jms.net.connector.InvocationHandler
statement code is: InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer())
statement is: org.exolab.jms.net.connector.ContextInvocationHandler(Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Lorg/exolab/jms/net/connector/ManagedConnection;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.ContextInvocationHandler
statement code is: ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(arg0, (ConnectionFactory) null, (ManagedConnection) null)
statement is: org.apache.derby.iapi.sql.depend.ProviderList()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.apache.derby.iapi.sql.depend.ProviderList
statement code is: ProviderList providerList = new ProviderList()
statement is: org.exolab.jms.net.connector.DefaultConnectionPool(Lorg/exolab/jms/net/connector/ManagedConnectionFactory;Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Ljava/util/Map;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.DefaultConnectionPool
statement code is: DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(arg0, arg1, (ConnectionFactory) null, arg3)
test data is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, (ConnectionFactory) null, (ManagedConnection) null);
ProviderList providerList = new ProviderList();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, (ConnectionFactory) null, providerList);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
        // Improved: Use more descriptive and representative values for the primitive types and Strings
        InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
        ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, ((ConnectionFactory) (null)), ((ManagedConnection) (null)));
        // Improved: Use more descriptive and representative values for the lists and other collections
        ProviderList providerList = new ProviderList();
        DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, ((ConnectionFactory) (null)), providerList);
    }
}
statement is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: // Improved: Use more descriptive and representative values for the primitive types and Strings
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer()), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: mock(InvocationHandler.class, new ViolatedAssumptionAnswer()) target is:  method is: mock(java.lang.Class,<unknown>)
target name is: InvocationHandler argument is: InvocationHandler.class
Matched Method is: mock(interface org.exolab.jms.net.connector.InvocationHandler)
statement is: ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, ((ConnectionFactory) (null)), ((ManagedConnection) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: // Improved: Use more descriptive and representative values for the lists and other collections
ProviderList providerList = new ProviderList(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, ((ConnectionFactory) (null)), providerList), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, (ConnectionFactory) null, (ManagedConnection) null);
ProviderList providerList = new ProviderList();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, (ConnectionFactory) providerList, providerList);

statement is: org.exolab.jms.net.vm.VMManagedConnectionFactory()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.vm.VMManagedConnectionFactory
statement code is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory()
statement is: mock(interface org.exolab.jms.net.connector.InvocationHandler) type is: class org.evosuite.testcase.statements.FunctionalMockStatement return type interface org.exolab.jms.net.connector.InvocationHandler
statement code is: InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer())
statement is: createConnectionFactory(Lorg/exolab/jms/net/connector/ConnectionManager;)Lorg/exolab/jms/net/connector/ConnectionFactory; type is: class org.evosuite.testcase.statements.MethodStatement return type interface org.exolab.jms.net.connector.ConnectionFactory
statement code is: ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null)
statement is: org.exolab.jms.net.connector.ContextInvocationHandler(Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Lorg/exolab/jms/net/connector/ManagedConnection;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.ContextInvocationHandler
statement code is: ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(arg0, arg1, (ManagedConnection) null)
statement is: org.exolab.jms.net.connector.DefaultConnectionPool(Lorg/exolab/jms/net/connector/ManagedConnectionFactory;Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Ljava/util/Map;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.DefaultConnectionPool
statement code is: DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(arg0, arg1, arg2, (Map) null)
statement is: matchManagedConnections(Ljava/security/Principal;Lorg/exolab/jms/net/connector/ConnectionRequestInfo;)Lorg/exolab/jms/net/connector/ManagedConnection; type is: class org.evosuite.testcase.statements.MethodStatement return type interface org.exolab.jms.net.connector.ManagedConnection
statement code is: ManagedConnection matchManagedConnections = defaultConnectionPool.matchManagedConnections((Principal) null, (ConnectionRequestInfo) null)
test data is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
defaultConnectionPool.matchManagedConnections((Principal) null, (ConnectionRequestInfo) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
        InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
        ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory(((ConnectionManager) (null)));
        ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, ((ManagedConnection) (null)));
        DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, ((Map) (null)));
        defaultConnectionPool.matchManagedConnections(((Principal) ("John Doe")), ((ConnectionRequestInfo) ("Retrieving data from database")));
    }
}
statement is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer()), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: mock(InvocationHandler.class, new ViolatedAssumptionAnswer()) target is:  method is: mock(java.lang.Class,<unknown>)
target name is: InvocationHandler argument is: InvocationHandler.class
Matched Method is: mock(interface org.exolab.jms.net.connector.InvocationHandler)
statement is: ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory(((ConnectionManager) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: vMManagedConnectionFactory.createConnectionFactory(((ConnectionManager) (null))) target is: vMManagedConnectionFactory method is: createConnectionFactory(ConnectionManager)
source statement: org.exolab.jms.net.vm.VMManagedConnectionFactory()V callee: VariableReference: Statement 0, type org.exolab.jms.net.vm.VMManagedConnectionFactoryindex is: 0
Matched Method is: createConnectionFactory(Lorg/exolab/jms/net/connector/ConnectionManager;)Lorg/exolab/jms/net/connector/ConnectionFactory;
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, ((ManagedConnection) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, ((Map) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: defaultConnectionPool.matchManagedConnections(((Principal) ("John Doe")), ((ConnectionRequestInfo) ("Retrieving data from database"))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: defaultConnectionPool.matchManagedConnections(((Principal) ("John Doe")), ((ConnectionRequestInfo) ("Retrieving data from database"))) target is: defaultConnectionPool method is: matchManagedConnections(Principal,ConnectionRequestInfo)
source statement: org.exolab.jms.net.connector.DefaultConnectionPool(Lorg/exolab/jms/net/connector/ManagedConnectionFactory;Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Ljava/util/Map;)V callee: VariableReference: Statement 4, type org.exolab.jms.net.connector.DefaultConnectionPoolindex is: 5
Matched Method is: matchManagedConnections(Ljava/security/Principal;Lorg/exolab/jms/net/connector/ConnectionRequestInfo;)Lorg/exolab/jms/net/connector/ManagedConnection;
TestCase is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionManager connectionManager = null;
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory(connectionManager);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
String string = "John Doe";
String string = "Retrieving data from database";
((DefaultConnectionPool) contextInvocationHandler).matchManagedConnections((Principal) string, (ConnectionRequestInfo) string);

statement is: org.exolab.jms.net.vm.VMManagedConnectionFactory()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.vm.VMManagedConnectionFactory
statement code is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory()
statement is: mock(interface org.exolab.jms.net.connector.InvocationHandler) type is: class org.evosuite.testcase.statements.FunctionalMockStatement return type interface org.exolab.jms.net.connector.InvocationHandler
statement code is: InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer())
statement is: createConnectionFactory(Lorg/exolab/jms/net/connector/ConnectionManager;)Lorg/exolab/jms/net/connector/ConnectionFactory; type is: class org.evosuite.testcase.statements.MethodStatement return type interface org.exolab.jms.net.connector.ConnectionFactory
statement code is: ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null)
statement is: org.exolab.jms.net.connector.ContextInvocationHandler(Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Lorg/exolab/jms/net/connector/ManagedConnection;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.ContextInvocationHandler
statement code is: ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(arg0, arg1, (ManagedConnection) null)
statement is: org.exolab.jms.net.connector.DefaultConnectionPool(Lorg/exolab/jms/net/connector/ManagedConnectionFactory;Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Ljava/util/Map;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.DefaultConnectionPool
statement code is: DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(arg0, arg1, arg2, (Map) null)
statement is: closed(Lorg/exolab/jms/net/connector/ManagedConnection;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: defaultConnectionPool.closed((ManagedConnection) null)
test data is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
defaultConnectionPool.closed((ManagedConnection) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
        InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
        ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory(((ConnectionManager) (null)));
        ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, ((ManagedConnection) (null)));
        DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, ((Map) (null)));
        defaultConnectionPool.closed(((ManagedConnection) (null)));
    }
}
statement is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer()), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: mock(InvocationHandler.class, new ViolatedAssumptionAnswer()) target is:  method is: mock(java.lang.Class,<unknown>)
target name is: InvocationHandler argument is: InvocationHandler.class
Matched Method is: mock(interface org.exolab.jms.net.connector.InvocationHandler)
statement is: ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory(((ConnectionManager) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: vMManagedConnectionFactory.createConnectionFactory(((ConnectionManager) (null))) target is: vMManagedConnectionFactory method is: createConnectionFactory(ConnectionManager)
source statement: org.exolab.jms.net.vm.VMManagedConnectionFactory()V callee: VariableReference: Statement 0, type org.exolab.jms.net.vm.VMManagedConnectionFactoryindex is: 0
Matched Method is: createConnectionFactory(Lorg/exolab/jms/net/connector/ConnectionManager;)Lorg/exolab/jms/net/connector/ConnectionFactory;
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, ((ManagedConnection) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, ((Map) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: defaultConnectionPool.closed(((ManagedConnection) (null))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: defaultConnectionPool.closed(((ManagedConnection) (null))) target is: defaultConnectionPool method is: closed(ManagedConnection)
source statement: org.exolab.jms.net.connector.DefaultConnectionPool(Lorg/exolab/jms/net/connector/ManagedConnectionFactory;Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Ljava/util/Map;)V callee: VariableReference: Statement 4, type org.exolab.jms.net.connector.DefaultConnectionPoolindex is: 5
Matched Method is: closed(Lorg/exolab/jms/net/connector/ManagedConnection;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
TestCase is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionManager connectionManager = null;
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory(connectionManager);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
ManagedConnection managedConnection = null;
((DefaultConnectionPool) contextInvocationHandler).closed(managedConnection);

statement is: org.exolab.jms.net.vm.VMManagedConnectionFactory()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.vm.VMManagedConnectionFactory
statement code is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory()
statement is: createConnectionFactory(Lorg/exolab/jms/net/connector/ConnectionManager;)Lorg/exolab/jms/net/connector/ConnectionFactory; type is: class org.evosuite.testcase.statements.MethodStatement return type interface org.exolab.jms.net.connector.ConnectionFactory
statement code is: ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null)
statement is: org.exolab.jms.net.connector.ContextInvocationHandler(Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Lorg/exolab/jms/net/connector/ManagedConnection;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.ContextInvocationHandler
statement code is: ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler((InvocationHandler) null, arg1, (ManagedConnection) null)
statement is: org.exolab.jms.net.connector.DefaultConnectionPool(Lorg/exolab/jms/net/connector/ManagedConnectionFactory;Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Ljava/util/Map;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.DefaultConnectionPool
statement code is: DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(arg0, arg1, arg2, (Map) null)
statement is: error(Lorg/exolab/jms/net/connector/ManagedConnection;Ljava/lang/Throwable;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: defaultConnectionPool.error((ManagedConnection) null, (Throwable) null)
test data is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler((InvocationHandler) null, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
defaultConnectionPool.error((ManagedConnection) null, (Throwable) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
    }
}
statement is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();

statement is: org.exolab.jms.net.vm.VMManagedConnectionFactory()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.vm.VMManagedConnectionFactory
statement code is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory()
statement is: mock(interface org.exolab.jms.net.connector.InvocationHandler) type is: class org.evosuite.testcase.statements.FunctionalMockStatement return type interface org.exolab.jms.net.connector.InvocationHandler
statement code is: InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer())
statement is: createConnectionFactory(Lorg/exolab/jms/net/connector/ConnectionManager;)Lorg/exolab/jms/net/connector/ConnectionFactory; type is: class org.evosuite.testcase.statements.MethodStatement return type interface org.exolab.jms.net.connector.ConnectionFactory
statement code is: ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null)
statement is: org.exolab.jms.net.connector.ContextInvocationHandler(Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Lorg/exolab/jms/net/connector/ManagedConnection;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.ContextInvocationHandler
statement code is: ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(arg0, arg1, (ManagedConnection) null)
statement is: java.util.Hashtable()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type java.util.Hashtable<java.security.Principal, java.lang.Object>
statement code is: Hashtable<Principal, Object> hashtable = new Hashtable<Principal, Object>()
statement is: org.exolab.jms.net.connector.DefaultConnectionPool(Lorg/exolab/jms/net/connector/ManagedConnectionFactory;Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Ljava/util/Map;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.DefaultConnectionPool
statement code is: DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(arg0, arg1, arg2, arg3)
statement is: org.exolab.jms.net.connector.ManagedConnectionHandle(Lorg/exolab/jms/net/connector/DefaultConnectionPool;Lorg/exolab/jms/net/connector/ManagedConnection;Lorg/exolab/jms/net/connector/ConnectionFactory;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.ManagedConnectionHandle
statement code is: ManagedConnectionHandle managedConnectionHandle = new ManagedConnectionHandle(arg0, (ManagedConnection) null, arg2)
statement is: pinged(Lorg/exolab/jms/net/connector/ManagedConnection;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: defaultConnectionPool.pinged(arg0)
test data is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
Hashtable<Principal, Object> hashtable = new Hashtable<Principal, Object>();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, hashtable);
ManagedConnectionHandle managedConnectionHandle = new ManagedConnectionHandle(defaultConnectionPool, (ManagedConnection) null, createConnectionFactory);
defaultConnectionPool.pinged(managedConnectionHandle);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
        InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
        ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory(((ConnectionManager) (null)));
        ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, ((ManagedConnection) (null)));
        Hashtable<Principal, Object> hashtable = new Hashtable<>();
        DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, hashtable);
        ManagedConnectionHandle managedConnectionHandle = new ManagedConnectionHandle(defaultConnectionPool, ((ManagedConnection) (null)), createConnectionFactory);
        defaultConnectionPool.pinged(managedConnectionHandle);
    }
}
statement is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer()), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: mock(InvocationHandler.class, new ViolatedAssumptionAnswer()) target is:  method is: mock(java.lang.Class,<unknown>)
target name is: InvocationHandler argument is: InvocationHandler.class
Matched Method is: mock(interface org.exolab.jms.net.connector.InvocationHandler)
statement is: ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory(((ConnectionManager) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: vMManagedConnectionFactory.createConnectionFactory(((ConnectionManager) (null))) target is: vMManagedConnectionFactory method is: createConnectionFactory(ConnectionManager)
source statement: org.exolab.jms.net.vm.VMManagedConnectionFactory()V callee: VariableReference: Statement 0, type org.exolab.jms.net.vm.VMManagedConnectionFactoryindex is: 0
Matched Method is: createConnectionFactory(Lorg/exolab/jms/net/connector/ConnectionManager;)Lorg/exolab/jms/net/connector/ConnectionFactory;
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, ((ManagedConnection) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Hashtable<Principal, Object> hashtable = new Hashtable<>(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, hashtable), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ManagedConnectionHandle managedConnectionHandle = new ManagedConnectionHandle(defaultConnectionPool, ((ManagedConnection) (null)), createConnectionFactory), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: defaultConnectionPool.pinged(managedConnectionHandle), class spoon.support.reflect.code.CtInvocationImpl
invocation is: defaultConnectionPool.pinged(managedConnectionHandle) target is: defaultConnectionPool method is: pinged(ManagedConnectionHandle)
source statement: org.exolab.jms.net.connector.DefaultConnectionPool(Lorg/exolab/jms/net/connector/ManagedConnectionFactory;Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Ljava/util/Map;)V callee: VariableReference: Statement 5, type org.exolab.jms.net.connector.DefaultConnectionPoolindex is: 6
Matched Method is: pinged(Lorg/exolab/jms/net/connector/ManagedConnection;)V
TestCase is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionManager connectionManager = null;
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory(connectionManager);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
Hashtable<Principal, Object> hashtable = new Hashtable<Principal, Object>();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, hashtable);
ManagedConnectionHandle managedConnectionHandle = new ManagedConnectionHandle(defaultConnectionPool, (ManagedConnection) createConnectionFactory, (ConnectionFactory) connectionManager);
((DefaultConnectionPool) hashtable).pinged(managedConnectionHandle);

statement is: org.exolab.jms.net.vm.VMManagedConnectionFactory()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.vm.VMManagedConnectionFactory
statement code is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory()
statement is: createConnectionFactory(Lorg/exolab/jms/net/connector/ConnectionManager;)Lorg/exolab/jms/net/connector/ConnectionFactory; type is: class org.evosuite.testcase.statements.MethodStatement return type interface org.exolab.jms.net.connector.ConnectionFactory
statement code is: ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null)
statement is: org.exolab.jms.net.connector.ContextInvocationHandler(Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Lorg/exolab/jms/net/connector/ManagedConnection;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.ContextInvocationHandler
statement code is: ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler((InvocationHandler) null, arg1, (ManagedConnection) null)
statement is: org.exolab.jms.net.connector.DefaultConnectionPool(Lorg/exolab/jms/net/connector/ManagedConnectionFactory;Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Ljava/util/Map;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.DefaultConnectionPool
statement code is: DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(arg0, arg1, arg2, (Map) null)
statement is: close()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: defaultConnectionPool.close()
test data is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler((InvocationHandler) null, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
defaultConnectionPool.close();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
        ConnectionManager mockConnectionManager = Mockito.mock(ConnectionManager.class);
        when(mockConnectionManager.getMaxConnections()).thenReturn(10);
        when(mockConnectionManager.getMinConnections()).thenReturn(2);
        ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory(mockConnectionManager);
        ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(new InvocationHandler(), createConnectionFactory, Mockito.mock(ManagedConnection.class));
        Map<String, Object> optionalParameters = new HashMap<>();
        optionalParameters.put("maxConnections", 10);
        defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, optionalParameters);
    }
}
statement is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ConnectionManager mockConnectionManager = Mockito.mock(ConnectionManager.class), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: Mockito.mock(ConnectionManager.class) target is: Mockito method is: mock(java.lang.Class)
statement is: when(mockConnectionManager.getMaxConnections()).thenReturn(10), class spoon.support.reflect.code.CtInvocationImpl
invocation is: when(mockConnectionManager.getMaxConnections()).thenReturn(10) target is: when(mockConnectionManager.getMaxConnections()) method is: thenReturn(int)
statement is: when(mockConnectionManager.getMinConnections()).thenReturn(2), class spoon.support.reflect.code.CtInvocationImpl
invocation is: when(mockConnectionManager.getMinConnections()).thenReturn(2) target is: when(mockConnectionManager.getMinConnections()) method is: thenReturn(int)
statement is: ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory(mockConnectionManager), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: vMManagedConnectionFactory.createConnectionFactory(mockConnectionManager) target is: vMManagedConnectionFactory method is: createConnectionFactory(ConnectionManager)
source statement: org.exolab.jms.net.vm.VMManagedConnectionFactory()V callee: VariableReference: Statement 0, type org.exolab.jms.net.vm.VMManagedConnectionFactoryindex is: 0
Matched Method is: createConnectionFactory(Lorg/exolab/jms/net/connector/ConnectionManager;)Lorg/exolab/jms/net/connector/ConnectionFactory;
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(new InvocationHandler(), createConnectionFactory, Mockito.mock(ManagedConnection.class)), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Map<String, Object> optionalParameters = new HashMap<>(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: optionalParameters.put("maxConnections", 10), class spoon.support.reflect.code.CtInvocationImpl
invocation is: optionalParameters.put("maxConnections", 10) target is: optionalParameters method is: put(java.lang.String,int)
statement is: defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, optionalParameters), class spoon.support.reflect.code.CtAssignmentImpl
TestCase is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
ConnectionManager connectionManager = null;
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory(connectionManager);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler((InvocationHandler) createConnectionFactory, (ConnectionFactory) connectionManager, (ManagedConnection) null);

statement is: org.exolab.jms.net.vm.VMManagedConnectionFactory()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.vm.VMManagedConnectionFactory
statement code is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory()
statement is: mock(interface org.exolab.jms.net.connector.InvocationHandler) type is: class org.evosuite.testcase.statements.FunctionalMockStatement return type interface org.exolab.jms.net.connector.InvocationHandler
statement code is: InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer())
statement is: createConnectionFactory(Lorg/exolab/jms/net/connector/ConnectionManager;)Lorg/exolab/jms/net/connector/ConnectionFactory; type is: class org.evosuite.testcase.statements.MethodStatement return type interface org.exolab.jms.net.connector.ConnectionFactory
statement code is: ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null)
statement is: org.exolab.jms.net.connector.ContextInvocationHandler(Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Lorg/exolab/jms/net/connector/ManagedConnection;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.ContextInvocationHandler
statement code is: ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(arg0, arg1, (ManagedConnection) null)
statement is: java.util.Hashtable()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type java.util.Hashtable<java.security.Principal, java.lang.Object>
statement code is: Hashtable<Principal, Object> hashtable = new Hashtable<Principal, Object>()
statement is: org.exolab.jms.net.connector.DefaultConnectionPool(Lorg/exolab/jms/net/connector/ManagedConnectionFactory;Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Ljava/util/Map;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.DefaultConnectionPool
statement code is: DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(arg0, arg1, arg2, arg3)
statement is: org.exolab.jms.net.connector.ManagedConnectionHandle(Lorg/exolab/jms/net/connector/DefaultConnectionPool;Lorg/exolab/jms/net/connector/ManagedConnection;Lorg/exolab/jms/net/connector/ConnectionFactory;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.ManagedConnectionHandle
statement code is: ManagedConnectionHandle managedConnectionHandle = new ManagedConnectionHandle(arg0, (ManagedConnection) null, arg2)
statement is: idle(Lorg/exolab/jms/net/connector/ManagedConnectionHandle;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: defaultConnectionPool.idle(arg0)
test data is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
Hashtable<Principal, Object> hashtable = new Hashtable<Principal, Object>();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, hashtable);
ManagedConnectionHandle managedConnectionHandle = new ManagedConnectionHandle(defaultConnectionPool, (ManagedConnection) null, createConnectionFactory);
defaultConnectionPool.idle(managedConnectionHandle);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
        InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
        ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory("DB_CONN");
        ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, "DB_CONTEXT");
        Hashtable<Principal, Object> hashtable = new Hashtable<>();
        hashtable.put("dbUser", "username");
        hashtable.put("dbPassword", "password");
        DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory);
        ManagedConnectionHandle managedConnectionHandle = new ManagedConnectionHandle(defaultConnectionPool, "DB_CONN", createConnectionFactory);
        defaultConnectionPool.idle(managedConnectionHandle);
    }
}
statement is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer()), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: mock(InvocationHandler.class, new ViolatedAssumptionAnswer()) target is:  method is: mock(java.lang.Class,<unknown>)
target name is: InvocationHandler argument is: InvocationHandler.class
Matched Method is: mock(interface org.exolab.jms.net.connector.InvocationHandler)
statement is: ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory("DB_CONN"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: vMManagedConnectionFactory.createConnectionFactory("DB_CONN") target is: vMManagedConnectionFactory method is: createConnectionFactory(java.lang.String)
source statement: org.exolab.jms.net.vm.VMManagedConnectionFactory()V callee: VariableReference: Statement 0, type org.exolab.jms.net.vm.VMManagedConnectionFactoryindex is: 0
Matched Method is: createConnectionFactory(Lorg/exolab/jms/net/connector/ConnectionManager;)Lorg/exolab/jms/net/connector/ConnectionFactory;
statement is: ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, "DB_CONTEXT"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Hashtable<Principal, Object> hashtable = new Hashtable<>(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: hashtable.put("dbUser", "username"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: hashtable.put("dbUser", "username") target is: hashtable method is: put(java.lang.String,java.lang.String)
statement is: hashtable.put("dbPassword", "password"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: hashtable.put("dbPassword", "password") target is: hashtable method is: put(java.lang.String,java.lang.String)
statement is: DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ManagedConnectionHandle managedConnectionHandle = new ManagedConnectionHandle(defaultConnectionPool, "DB_CONN", createConnectionFactory), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: defaultConnectionPool.idle(managedConnectionHandle), class spoon.support.reflect.code.CtInvocationImpl
invocation is: defaultConnectionPool.idle(managedConnectionHandle) target is: defaultConnectionPool method is: idle(ManagedConnectionHandle)
TestCase is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
String string = "DB_CONN";
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) string);
String string = "DB_CONTEXT";
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) string);
Hashtable<Principal, Object> hashtable = new Hashtable<Principal, Object>();
String string = "DB_CONN";
ManagedConnectionHandle managedConnectionHandle = new ManagedConnectionHandle((DefaultConnectionPool) string, (ManagedConnection) createConnectionFactory, (ConnectionFactory) string);

statement is: org.exolab.jms.net.vm.VMManagedConnectionFactory()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.vm.VMManagedConnectionFactory
statement code is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory()
statement is: createConnectionFactory(Lorg/exolab/jms/net/connector/ConnectionManager;)Lorg/exolab/jms/net/connector/ConnectionFactory; type is: class org.evosuite.testcase.statements.MethodStatement return type interface org.exolab.jms.net.connector.ConnectionFactory
statement code is: ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null)
statement is: org.exolab.jms.net.connector.ContextInvocationHandler(Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Lorg/exolab/jms/net/connector/ManagedConnection;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.ContextInvocationHandler
statement code is: ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler((InvocationHandler) null, arg1, (ManagedConnection) null)
statement is: org.exolab.jms.net.connector.DefaultConnectionPool(Lorg/exolab/jms/net/connector/ManagedConnectionFactory;Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Ljava/util/Map;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.DefaultConnectionPool
statement code is: DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(arg0, arg1, arg2, (Map) null)
statement is: add(Lorg/exolab/jms/net/connector/ManagedConnection;Z)Lorg/exolab/jms/net/connector/ManagedConnection; type is: class org.evosuite.testcase.statements.MethodStatement return type interface org.exolab.jms.net.connector.ManagedConnection
statement code is: ManagedConnection add = defaultConnectionPool.add((ManagedConnection) null, false)
test data is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler((InvocationHandler) null, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
defaultConnectionPool.add((ManagedConnection) null, false);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
        ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory(new ConnectionManager());
        ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(null, createConnectionFactory, null);
        DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, null);
        defaultConnectionPool.add(new ManagedConnection("DB_URL", "userName", "password"), false);
    }
}
statement is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory(new ConnectionManager()), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: vMManagedConnectionFactory.createConnectionFactory(new ConnectionManager()) target is: vMManagedConnectionFactory method is: createConnectionFactory(ConnectionManager)
source statement: org.exolab.jms.net.vm.VMManagedConnectionFactory()V callee: VariableReference: Statement 0, type org.exolab.jms.net.vm.VMManagedConnectionFactoryindex is: 0
Matched Method is: createConnectionFactory(Lorg/exolab/jms/net/connector/ConnectionManager;)Lorg/exolab/jms/net/connector/ConnectionFactory;
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(null, createConnectionFactory, null), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, null), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: defaultConnectionPool.add(new ManagedConnection("DB_URL", "userName", "password"), false), class spoon.support.reflect.code.CtInvocationImpl
invocation is: defaultConnectionPool.add(new ManagedConnection("DB_URL", "userName", "password"), false) target is: defaultConnectionPool method is: add(ManagedConnection,boolean)
source statement: org.exolab.jms.net.connector.DefaultConnectionPool(Lorg/exolab/jms/net/connector/ManagedConnectionFactory;Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Ljava/util/Map;)V callee: VariableReference: Statement 3, type org.exolab.jms.net.connector.DefaultConnectionPoolindex is: 4
Matched Method is: add(Lorg/exolab/jms/net/connector/ManagedConnection;Z)Lorg/exolab/jms/net/connector/ManagedConnection;
i 1 Parameters size() 1 Num of Method Parameters: 2
TestCase is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
ConnectionManager connectionManager = null;
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory(connectionManager);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler((InvocationHandler) createConnectionFactory, (ConnectionFactory) connectionManager, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
boolean _boolean = false;
boolean _boolean = null;
((DefaultConnectionPool) contextInvocationHandler).add((ManagedConnection) _boolean, _boolean);

statement is: org.exolab.jms.net.vm.VMManagedConnectionFactory()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.vm.VMManagedConnectionFactory
statement code is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory()
statement is: mock(interface org.exolab.jms.net.connector.InvocationHandler) type is: class org.evosuite.testcase.statements.FunctionalMockStatement return type interface org.exolab.jms.net.connector.InvocationHandler
statement code is: InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer())
statement is: createConnectionFactory(Lorg/exolab/jms/net/connector/ConnectionManager;)Lorg/exolab/jms/net/connector/ConnectionFactory; type is: class org.evosuite.testcase.statements.MethodStatement return type interface org.exolab.jms.net.connector.ConnectionFactory
statement code is: ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null)
statement is: org.exolab.jms.net.connector.ContextInvocationHandler(Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Lorg/exolab/jms/net/connector/ManagedConnection;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.ContextInvocationHandler
statement code is: ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(arg0, arg1, (ManagedConnection) null)
statement is: java.util.Hashtable()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type java.util.Hashtable<java.security.Principal, java.lang.Object>
statement code is: Hashtable<Principal, Object> hashtable = new Hashtable<Principal, Object>()
statement is: org.exolab.jms.net.connector.DefaultConnectionPool(Lorg/exolab/jms/net/connector/ManagedConnectionFactory;Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Ljava/util/Map;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.DefaultConnectionPool
statement code is: DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(arg0, arg1, arg2, arg3)
statement is: error(Lorg/exolab/jms/net/connector/ManagedConnectionAcceptor;Ljava/lang/Throwable;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: defaultConnectionPool.error((ManagedConnectionAcceptor) null, (Throwable) null)
test data is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
Hashtable<Principal, Object> hashtable = new Hashtable<Principal, Object>();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, hashtable);
defaultConnectionPool.error((ManagedConnectionAcceptor) null, (Throwable) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        VMManagedConnectionFactory vmManagedConnectionFactory = new VMManagedConnectionFactory();
        InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
        ConnectionFactory createConnectionFactory = vmManagedConnectionFactory.createConnectionFactory(((ConnectionManager) (null)));
        ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, ((ManagedConnection) (null)));
        Hashtable<Principal, Object> hashtable = new Hashtable<>();
        DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vmManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, hashtable);
        // Test 1: Verify that error() throws an exception when a connection cannot be created
        when(createConnectionFactory.createConnection()).thenThrow(new SQLException("Connection could not be created"));
        try {
            defaultConnectionPool.error(((ManagedConnectionAcceptor) (null)), ((Throwable) (null)));
        } catch (SQLException e) {
            assertEquals("Connection could not be created", e.getMessage());
        }
        // Test 2: Verify that error() does not throw an exception when there is a connection available
        when(createConnectionFactory.createConnection()).thenReturn(mock(ManagedConnection.class));
        assertDoesNotThrow(() -> defaultConnectionPool.error(((ManagedConnectionAcceptor) (null)), ((Throwable) (null))));
        // Test 3: Verify that error() does not throw an exception when there is no connection available and the pool is empty
        when(createConnectionFactory.createConnection()).thenReturn(null);
        assertDoesNotThrow(() -> defaultConnectionPool.error(((ManagedConnectionAcceptor) (null)), ((Throwable) (null))));
    }
}
statement is: VMManagedConnectionFactory vmManagedConnectionFactory = new VMManagedConnectionFactory(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer()), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: mock(InvocationHandler.class, new ViolatedAssumptionAnswer()) target is:  method is: mock(java.lang.Class,<unknown>)
target name is: InvocationHandler argument is: InvocationHandler.class
Matched Method is: mock(interface org.exolab.jms.net.connector.InvocationHandler)
statement is: ConnectionFactory createConnectionFactory = vmManagedConnectionFactory.createConnectionFactory(((ConnectionManager) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: vmManagedConnectionFactory.createConnectionFactory(((ConnectionManager) (null))) target is: vmManagedConnectionFactory method is: createConnectionFactory(ConnectionManager)
source statement: org.exolab.jms.net.vm.VMManagedConnectionFactory()V callee: VariableReference: Statement 0, type org.exolab.jms.net.vm.VMManagedConnectionFactoryindex is: 0
Matched Method is: createConnectionFactory(Lorg/exolab/jms/net/connector/ConnectionManager;)Lorg/exolab/jms/net/connector/ConnectionFactory;
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, ((ManagedConnection) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Hashtable<Principal, Object> hashtable = new Hashtable<>(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vmManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, hashtable), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: // Test 1: Verify that error() throws an exception when a connection cannot be created
when(createConnectionFactory.createConnection()).thenThrow(new SQLException("Connection could not be created")), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Test 1: Verify that error() throws an exception when a connection cannot be created
when(createConnectionFactory.createConnection()).thenThrow(new SQLException("Connection could not be created")) target is: when(createConnectionFactory.createConnection()) method is: thenThrow(SQLException)
statement is: try {
    defaultConnectionPool.error(((ManagedConnectionAcceptor) (null)), ((Throwable) (null)));
} catch (SQLException e) {
    assertEquals("Connection could not be created", e.getMessage());
}, class spoon.support.reflect.code.CtTryImpl
statement is: // Test 2: Verify that error() does not throw an exception when there is a connection available
when(createConnectionFactory.createConnection()).thenReturn(mock(ManagedConnection.class)), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Test 2: Verify that error() does not throw an exception when there is a connection available
when(createConnectionFactory.createConnection()).thenReturn(mock(ManagedConnection.class)) target is: when(createConnectionFactory.createConnection()) method is: thenReturn()
statement is: assertDoesNotThrow(() -> defaultConnectionPool.error(((ManagedConnectionAcceptor) (null)), ((Throwable) (null)))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertDoesNotThrow(() -> defaultConnectionPool.error(((ManagedConnectionAcceptor) (null)), ((Throwable) (null)))) target is:  method is: assertDoesNotThrow(java.lang.Object)
statement is: // Test 3: Verify that error() does not throw an exception when there is no connection available and the pool is empty
when(createConnectionFactory.createConnection()).thenReturn(null), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Test 3: Verify that error() does not throw an exception when there is no connection available and the pool is empty
when(createConnectionFactory.createConnection()).thenReturn(null) target is: when(createConnectionFactory.createConnection()) method is: thenReturn(<unknown>)
statement is: assertDoesNotThrow(() -> defaultConnectionPool.error(((ManagedConnectionAcceptor) (null)), ((Throwable) (null)))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertDoesNotThrow(() -> defaultConnectionPool.error(((ManagedConnectionAcceptor) (null)), ((Throwable) (null)))) target is:  method is: assertDoesNotThrow(java.lang.Object)
TestCase is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionManager connectionManager = null;
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory(connectionManager);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
Hashtable<Principal, Object> hashtable = new Hashtable<Principal, Object>();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, hashtable);

statement is: org.exolab.jms.net.http.HTTPSManagedConnectionFactory()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.http.HTTPSManagedConnectionFactory
statement code is: HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory()
statement is: createConnectionFactory(Lorg/exolab/jms/net/connector/ConnectionManager;)Lorg/exolab/jms/net/connector/ConnectionFactory; type is: class org.evosuite.testcase.statements.MethodStatement return type interface org.exolab.jms.net.connector.ConnectionFactory
statement code is: ConnectionFactory createConnectionFactory = hTTPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null)
statement is: org.exolab.jms.net.connector.ContextInvocationHandler(Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Lorg/exolab/jms/net/connector/ManagedConnection;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.ContextInvocationHandler
statement code is: ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler((InvocationHandler) null, arg1, (ManagedConnection) null)
statement is: org.exolab.jms.net.connector.DefaultConnectionPool(Lorg/exolab/jms/net/connector/ManagedConnectionFactory;Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Ljava/util/Map;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.DefaultConnectionPool
statement code is: DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(arg0, arg1, arg2, (Map) null)
statement is: remove(Lorg/exolab/jms/net/connector/ManagedConnection;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: defaultConnectionPool.remove((ManagedConnection) null)
test data is: HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
ConnectionFactory createConnectionFactory = hTTPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler((InvocationHandler) null, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
defaultConnectionPool.remove((ManagedConnection) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
        ConnectionFactory createConnectionFactory = hTTPSManagedConnectionFactory.createConnectionFactory(new ConnectionManager());
        ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(new InvocationHandler(), createConnectionFactory, new ManagedConnection());
        DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory);
        defaultConnectionPool.remove(new ManagedConnection());
    }
}
statement is: HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ConnectionFactory createConnectionFactory = hTTPSManagedConnectionFactory.createConnectionFactory(new ConnectionManager()), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: hTTPSManagedConnectionFactory.createConnectionFactory(new ConnectionManager()) target is: hTTPSManagedConnectionFactory method is: createConnectionFactory(ConnectionManager)
source statement: org.exolab.jms.net.http.HTTPSManagedConnectionFactory()V callee: VariableReference: Statement 0, type org.exolab.jms.net.http.HTTPSManagedConnectionFactoryindex is: 0
Matched Method is: createConnectionFactory(Lorg/exolab/jms/net/connector/ConnectionManager;)Lorg/exolab/jms/net/connector/ConnectionFactory;
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(new InvocationHandler(), createConnectionFactory, new ManagedConnection()), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: defaultConnectionPool.remove(new ManagedConnection()), class spoon.support.reflect.code.CtInvocationImpl
invocation is: defaultConnectionPool.remove(new ManagedConnection()) target is: defaultConnectionPool method is: remove(ManagedConnection)
TestCase is: HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
ConnectionManager connectionManager = null;
ConnectionFactory createConnectionFactory = hTTPSManagedConnectionFactory.createConnectionFactory(connectionManager);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler((InvocationHandler) createConnectionFactory, (ConnectionFactory) connectionManager, (ManagedConnection) null);

* test suite isTestSuite: 35
Test 0: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
defaultConnectionPool.getManagedConnectionAcceptorListener();
Test 1: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
ManagedConnectionHandle managedConnectionHandle = new ManagedConnectionHandle(defaultConnectionPool, (ManagedConnection) null, createConnectionFactory);
// Undeclared exception!
try { 
  defaultConnectionPool.accepted((ManagedConnectionAcceptor) null, managedConnectionHandle);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.exolab.jms.net.connector.ManagedConnectionHandle", e);
}

Test 2: 
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
ConnectionFactory createConnectionFactory = hTTPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
MulticastCallerListener multicastCallerListener = new MulticastCallerListener();
defaultConnectionPool.setCallerListener(multicastCallerListener);
Test 3: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler((InvocationHandler) null, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
try { 
  defaultConnectionPool.createManagedConnection((Principal) null, (ConnectionRequestInfo) null);
  fail("Expecting exception: Exception");

} catch(Exception e) {
   //
   // Argument 'info' must be of type org.exolab.jms.net.connector.URIRequestInfo
   //
   verifyException("org.exolab.jms.net.vm.VMManagedConnectionFactory", e);
}

Test 4: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
URI uRI = new URI();
URIRequestInfo uRIRequestInfo = new URIRequestInfo(uRI);
Configuration configuration = new Configuration();
DatabaseService databaseService = new DatabaseService(configuration);
UserManager userManager = new UserManager(configuration, databaseService);
AuthenticationMgr authenticationMgr = new AuthenticationMgr(userManager);
defaultConnectionPool.createManagedConnectionAcceptor(authenticationMgr, uRIRequestInfo);
Test 5: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
defaultConnectionPool.matchManagedConnectionAcceptors((ConnectionRequestInfo) null);
Test 6: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
DefaultConnectionPool defaultConnectionPool = null;
try {
  defaultConnectionPool = new DefaultConnectionPool((ManagedConnectionFactory) null, (InvocationHandler) null, createConnectionFactory, (Map) null);
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // Argument 'factory' is null
   //
   verifyException("org.exolab.jms.net.connector.DefaultConnectionPool", e);
}

Test 7: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
DefaultConnectionPool defaultConnectionPool = null;
try {
  defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, (InvocationHandler) null, (ConnectionFactory) null, (Map) null);
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // Argument 'handler' is null
   //
   verifyException("org.exolab.jms.net.connector.DefaultConnectionPool", e);
}

Test 8: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, (ConnectionFactory) null, (ManagedConnection) null);
ProviderList providerList = new ProviderList();
DefaultConnectionPool defaultConnectionPool = null;
try {
  defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, (ConnectionFactory) null, providerList);
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // Argument 'resolver' is null
   //
   verifyException("org.exolab.jms.net.connector.DefaultConnectionPool", e);
}

Test 9: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
defaultConnectionPool.matchManagedConnections((Principal) null, (ConnectionRequestInfo) null);
Test 10: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
defaultConnectionPool.closed((ManagedConnection) null);
Test 11: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler((InvocationHandler) null, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
defaultConnectionPool.error((ManagedConnection) null, (Throwable) null);
Test 12: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
Hashtable<Principal, Object> hashtable = new Hashtable<Principal, Object>();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, hashtable);
ManagedConnectionHandle managedConnectionHandle = new ManagedConnectionHandle(defaultConnectionPool, (ManagedConnection) null, createConnectionFactory);
defaultConnectionPool.pinged(managedConnectionHandle);
Test 13: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler((InvocationHandler) null, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
defaultConnectionPool.close();
Test 14: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
Hashtable<Principal, Object> hashtable = new Hashtable<Principal, Object>();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, hashtable);
ManagedConnectionHandle managedConnectionHandle = new ManagedConnectionHandle(defaultConnectionPool, (ManagedConnection) null, createConnectionFactory);
defaultConnectionPool.idle(managedConnectionHandle);
Test 15: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler((InvocationHandler) null, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
// Undeclared exception!
try { 
  defaultConnectionPool.add((ManagedConnection) null, false);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.exolab.jms.net.connector.DefaultConnectionPool", e);
}

Test 16: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
Hashtable<Principal, Object> hashtable = new Hashtable<Principal, Object>();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, hashtable);
// Undeclared exception!
try { 
  defaultConnectionPool.error((ManagedConnectionAcceptor) null, (Throwable) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.exolab.jms.net.connector.DefaultConnectionPool", e);
}

Test 17: 
HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
ConnectionFactory createConnectionFactory = hTTPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler((InvocationHandler) null, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
defaultConnectionPool.remove((ManagedConnection) null);
Test 18: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
((DefaultConnectionPool) contextInvocationHandler).getManagedConnectionAcceptorListener();

Test 19: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) "MySQL");
String string = "MySQL";
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) string);
String string = "localhost:3306";
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) string);
String string = "root";
String string = "MySQL";
ManagedConnectionHandle managedConnectionHandle = new ManagedConnectionHandle(defaultConnectionPool, (ManagedConnection) string, (ConnectionFactory) string);
ManagedConnectionHandle managedConnectionHandle = null;
((DefaultConnectionPool) string).accepted((ManagedConnectionAcceptor) managedConnectionHandle, managedConnectionHandle);

Test 20: 
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
ConnectionFactory createConnectionFactory = hTTPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
MulticastCallerListener multicastCallerListener = new MulticastCallerListener();
((DefaultConnectionPool) contextInvocationHandler).setCallerListener(multicastCallerListener);

Test 21: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
String string = "jdbc:postgresql://localhost:5432/test";
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) "jdbc:postgresql://localhost:5432/test");
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler((InvocationHandler) createConnectionFactory, (ConnectionFactory) string, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);

Test 22: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler((InvocationHandler) createConnectionFactory, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
Configuration configuration = new Configuration();
DatabaseService databaseService = new DatabaseService(configuration);
UserManager userManager = new UserManager(configuration, databaseService);
AuthenticationMgr authenticationMgr = new AuthenticationMgr(userManager);
URIRequestInfo uRIRequestInfo = null;
defaultConnectionPool.createManagedConnectionAcceptor(authenticationMgr, uRIRequestInfo);

Test 23: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
((DefaultConnectionPool) contextInvocationHandler).matchManagedConnectionAcceptors((ConnectionRequestInfo) null);

Test 24: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, (InvocationHandler) null, (ConnectionFactory) null, (Map) null);

Test 25: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, (ConnectionFactory) null, (ManagedConnection) null);
ProviderList providerList = new ProviderList();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, (ConnectionFactory) providerList, providerList);

Test 26: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
((DefaultConnectionPool) contextInvocationHandler).matchManagedConnections((Principal) "John Doe", (ConnectionRequestInfo) "Retrieving data from database");

Test 27: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
((DefaultConnectionPool) contextInvocationHandler).closed((ManagedConnection) null);

Test 28: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();

Test 29: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
Hashtable<Principal, Object> hashtable = new Hashtable<Principal, Object>();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, hashtable);
ManagedConnectionHandle managedConnectionHandle = new ManagedConnectionHandle(defaultConnectionPool, (ManagedConnection) createConnectionFactory, (ConnectionFactory) null);
((DefaultConnectionPool) hashtable).pinged(managedConnectionHandle);

Test 30: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler((InvocationHandler) createConnectionFactory, (ConnectionFactory) null, (ManagedConnection) null);

Test 31: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
String string = "DB_CONN";
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) "DB_CONN");
String string = "DB_CONTEXT";
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) string);
Hashtable<Principal, Object> hashtable = new Hashtable<Principal, Object>();
String string = "DB_CONN";
ManagedConnectionHandle managedConnectionHandle = new ManagedConnectionHandle((DefaultConnectionPool) string, (ManagedConnection) createConnectionFactory, (ConnectionFactory) string);

Test 32: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler((InvocationHandler) createConnectionFactory, (ConnectionFactory) null, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
boolean _boolean = false;
boolean _boolean = null;
((DefaultConnectionPool) contextInvocationHandler).add((ManagedConnection) _boolean, _boolean);

Test 33: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
Hashtable<Principal, Object> hashtable = new Hashtable<Principal, Object>();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, hashtable);

Test 34: 
HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
ConnectionFactory createConnectionFactory = hTTPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler((InvocationHandler) createConnectionFactory, (ConnectionFactory) null, (ManagedConnection) null);


* Generated after the refinement and before minimization 35 tests with total length 210
* test suite isTestSuite: 35
Test 0: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
defaultConnectionPool.getManagedConnectionAcceptorListener();
Test 1: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
ManagedConnectionHandle managedConnectionHandle = new ManagedConnectionHandle(defaultConnectionPool, (ManagedConnection) null, createConnectionFactory);
// Undeclared exception!
try { 
  defaultConnectionPool.accepted((ManagedConnectionAcceptor) null, managedConnectionHandle);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.exolab.jms.net.connector.ManagedConnectionHandle", e);
}

Test 2: 
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
ConnectionFactory createConnectionFactory = hTTPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
MulticastCallerListener multicastCallerListener = new MulticastCallerListener();
defaultConnectionPool.setCallerListener(multicastCallerListener);
Test 3: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler((InvocationHandler) null, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
try { 
  defaultConnectionPool.createManagedConnection((Principal) null, (ConnectionRequestInfo) null);
  fail("Expecting exception: Exception");

} catch(Exception e) {
   //
   // Argument 'info' must be of type org.exolab.jms.net.connector.URIRequestInfo
   //
   verifyException("org.exolab.jms.net.vm.VMManagedConnectionFactory", e);
}

Test 4: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
URI uRI = new URI();
URIRequestInfo uRIRequestInfo = new URIRequestInfo(uRI);
Configuration configuration = new Configuration();
DatabaseService databaseService = new DatabaseService(configuration);
UserManager userManager = new UserManager(configuration, databaseService);
AuthenticationMgr authenticationMgr = new AuthenticationMgr(userManager);
defaultConnectionPool.createManagedConnectionAcceptor(authenticationMgr, uRIRequestInfo);
Test 5: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
defaultConnectionPool.matchManagedConnectionAcceptors((ConnectionRequestInfo) null);
Test 6: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
DefaultConnectionPool defaultConnectionPool = null;
try {
  defaultConnectionPool = new DefaultConnectionPool((ManagedConnectionFactory) null, (InvocationHandler) null, createConnectionFactory, (Map) null);
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // Argument 'factory' is null
   //
   verifyException("org.exolab.jms.net.connector.DefaultConnectionPool", e);
}

Test 7: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
DefaultConnectionPool defaultConnectionPool = null;
try {
  defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, (InvocationHandler) null, (ConnectionFactory) null, (Map) null);
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // Argument 'handler' is null
   //
   verifyException("org.exolab.jms.net.connector.DefaultConnectionPool", e);
}

Test 8: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, (ConnectionFactory) null, (ManagedConnection) null);
ProviderList providerList = new ProviderList();
DefaultConnectionPool defaultConnectionPool = null;
try {
  defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, (ConnectionFactory) null, providerList);
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // Argument 'resolver' is null
   //
   verifyException("org.exolab.jms.net.connector.DefaultConnectionPool", e);
}

Test 9: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
defaultConnectionPool.matchManagedConnections((Principal) null, (ConnectionRequestInfo) null);
Test 10: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
defaultConnectionPool.closed((ManagedConnection) null);
Test 11: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler((InvocationHandler) null, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
defaultConnectionPool.error((ManagedConnection) null, (Throwable) null);
Test 12: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
Hashtable<Principal, Object> hashtable = new Hashtable<Principal, Object>();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, hashtable);
ManagedConnectionHandle managedConnectionHandle = new ManagedConnectionHandle(defaultConnectionPool, (ManagedConnection) null, createConnectionFactory);
defaultConnectionPool.pinged(managedConnectionHandle);
Test 13: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler((InvocationHandler) null, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
defaultConnectionPool.close();
Test 14: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
Hashtable<Principal, Object> hashtable = new Hashtable<Principal, Object>();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, hashtable);
ManagedConnectionHandle managedConnectionHandle = new ManagedConnectionHandle(defaultConnectionPool, (ManagedConnection) null, createConnectionFactory);
defaultConnectionPool.idle(managedConnectionHandle);
Test 15: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler((InvocationHandler) null, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
// Undeclared exception!
try { 
  defaultConnectionPool.add((ManagedConnection) null, false);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.exolab.jms.net.connector.DefaultConnectionPool", e);
}

Test 16: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
Hashtable<Principal, Object> hashtable = new Hashtable<Principal, Object>();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, hashtable);
// Undeclared exception!
try { 
  defaultConnectionPool.error((ManagedConnectionAcceptor) null, (Throwable) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.exolab.jms.net.connector.DefaultConnectionPool", e);
}

Test 17: 
HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
ConnectionFactory createConnectionFactory = hTTPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler((InvocationHandler) null, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
defaultConnectionPool.remove((ManagedConnection) null);
Test 18: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
((DefaultConnectionPool) contextInvocationHandler).getManagedConnectionAcceptorListener();

Test 19: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) "MySQL");
String string = "MySQL";
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) string);
String string = "localhost:3306";
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) string);
String string = "root";
String string = "MySQL";
ManagedConnectionHandle managedConnectionHandle = new ManagedConnectionHandle(defaultConnectionPool, (ManagedConnection) string, (ConnectionFactory) string);
ManagedConnectionHandle managedConnectionHandle = null;
((DefaultConnectionPool) string).accepted((ManagedConnectionAcceptor) managedConnectionHandle, managedConnectionHandle);

Test 20: 
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
ConnectionFactory createConnectionFactory = hTTPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
MulticastCallerListener multicastCallerListener = new MulticastCallerListener();
((DefaultConnectionPool) contextInvocationHandler).setCallerListener(multicastCallerListener);

Test 21: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
String string = "jdbc:postgresql://localhost:5432/test";
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) "jdbc:postgresql://localhost:5432/test");
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler((InvocationHandler) createConnectionFactory, (ConnectionFactory) string, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);

Test 22: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler((InvocationHandler) createConnectionFactory, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
Configuration configuration = new Configuration();
DatabaseService databaseService = new DatabaseService(configuration);
UserManager userManager = new UserManager(configuration, databaseService);
AuthenticationMgr authenticationMgr = new AuthenticationMgr(userManager);
URIRequestInfo uRIRequestInfo = null;
defaultConnectionPool.createManagedConnectionAcceptor(authenticationMgr, uRIRequestInfo);

Test 23: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
((DefaultConnectionPool) contextInvocationHandler).matchManagedConnectionAcceptors((ConnectionRequestInfo) null);

Test 24: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, (InvocationHandler) null, (ConnectionFactory) null, (Map) null);

Test 25: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, (ConnectionFactory) null, (ManagedConnection) null);
ProviderList providerList = new ProviderList();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, (ConnectionFactory) providerList, providerList);

Test 26: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
((DefaultConnectionPool) contextInvocationHandler).matchManagedConnections((Principal) "John Doe", (ConnectionRequestInfo) "Retrieving data from database");

Test 27: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
((DefaultConnectionPool) contextInvocationHandler).closed((ManagedConnection) null);

Test 28: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();

Test 29: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
Hashtable<Principal, Object> hashtable = new Hashtable<Principal, Object>();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, hashtable);
ManagedConnectionHandle managedConnectionHandle = new ManagedConnectionHandle(defaultConnectionPool, (ManagedConnection) createConnectionFactory, (ConnectionFactory) null);
((DefaultConnectionPool) hashtable).pinged(managedConnectionHandle);

Test 30: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler((InvocationHandler) createConnectionFactory, (ConnectionFactory) null, (ManagedConnection) null);

Test 31: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
String string = "DB_CONN";
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) "DB_CONN");
String string = "DB_CONTEXT";
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) string);
Hashtable<Principal, Object> hashtable = new Hashtable<Principal, Object>();
String string = "DB_CONN";
ManagedConnectionHandle managedConnectionHandle = new ManagedConnectionHandle((DefaultConnectionPool) string, (ManagedConnection) createConnectionFactory, (ConnectionFactory) string);

Test 32: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler((InvocationHandler) createConnectionFactory, (ConnectionFactory) null, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
boolean _boolean = false;
boolean _boolean = null;
((DefaultConnectionPool) contextInvocationHandler).add((ManagedConnection) _boolean, _boolean);

Test 33: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
Hashtable<Principal, Object> hashtable = new Hashtable<Principal, Object>();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, hashtable);

Test 34: 
HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
ConnectionFactory createConnectionFactory = hTTPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler((InvocationHandler) createConnectionFactory, (ConnectionFactory) null, (ManagedConnection) null);


* Minimizing test suite
* test suite isTestSuite: 18
Test 0: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
defaultConnectionPool.getManagedConnectionAcceptorListener();
Test 1: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
ManagedConnectionHandle managedConnectionHandle = new ManagedConnectionHandle(defaultConnectionPool, (ManagedConnection) null, createConnectionFactory);
// Undeclared exception!
try { 
  defaultConnectionPool.accepted((ManagedConnectionAcceptor) null, managedConnectionHandle);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.exolab.jms.net.connector.ManagedConnectionHandle", e);
}

Test 2: 
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
ConnectionFactory createConnectionFactory = hTTPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
MulticastCallerListener multicastCallerListener = new MulticastCallerListener();
defaultConnectionPool.setCallerListener(multicastCallerListener);
Test 3: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler((InvocationHandler) null, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
try { 
  defaultConnectionPool.createManagedConnection((Principal) null, (ConnectionRequestInfo) null);
  fail("Expecting exception: Exception");

} catch(Exception e) {
   //
   // Argument 'info' must be of type org.exolab.jms.net.connector.URIRequestInfo
   //
   verifyException("org.exolab.jms.net.vm.VMManagedConnectionFactory", e);
}

Test 4: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
URI uRI = new URI();
URIRequestInfo uRIRequestInfo = new URIRequestInfo(uRI);
Configuration configuration = new Configuration();
DatabaseService databaseService = new DatabaseService(configuration);
UserManager userManager = new UserManager(configuration, databaseService);
AuthenticationMgr authenticationMgr = new AuthenticationMgr(userManager);
defaultConnectionPool.createManagedConnectionAcceptor(authenticationMgr, uRIRequestInfo);
Test 5: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
defaultConnectionPool.matchManagedConnectionAcceptors((ConnectionRequestInfo) null);
Test 6: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
DefaultConnectionPool defaultConnectionPool = null;
try {
  defaultConnectionPool = new DefaultConnectionPool((ManagedConnectionFactory) null, (InvocationHandler) null, createConnectionFactory, (Map) null);
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // Argument 'factory' is null
   //
   verifyException("org.exolab.jms.net.connector.DefaultConnectionPool", e);
}

Test 7: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
DefaultConnectionPool defaultConnectionPool = null;
try {
  defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, (InvocationHandler) null, (ConnectionFactory) null, (Map) null);
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // Argument 'handler' is null
   //
   verifyException("org.exolab.jms.net.connector.DefaultConnectionPool", e);
}

Test 8: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, (ConnectionFactory) null, (ManagedConnection) null);
ProviderList providerList = new ProviderList();
DefaultConnectionPool defaultConnectionPool = null;
try {
  defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, (ConnectionFactory) null, providerList);
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // Argument 'resolver' is null
   //
   verifyException("org.exolab.jms.net.connector.DefaultConnectionPool", e);
}

Test 9: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
defaultConnectionPool.matchManagedConnections((Principal) null, (ConnectionRequestInfo) null);
Test 10: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
defaultConnectionPool.closed((ManagedConnection) null);
Test 11: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler((InvocationHandler) null, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
defaultConnectionPool.error((ManagedConnection) null, (Throwable) null);
Test 12: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
Hashtable<Principal, Object> hashtable = new Hashtable<Principal, Object>();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, hashtable);
ManagedConnectionHandle managedConnectionHandle = new ManagedConnectionHandle(defaultConnectionPool, (ManagedConnection) null, createConnectionFactory);
defaultConnectionPool.pinged(managedConnectionHandle);
Test 13: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler((InvocationHandler) null, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
defaultConnectionPool.close();
Test 14: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
Hashtable<Principal, Object> hashtable = new Hashtable<Principal, Object>();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, hashtable);
ManagedConnectionHandle managedConnectionHandle = new ManagedConnectionHandle(defaultConnectionPool, (ManagedConnection) null, createConnectionFactory);
defaultConnectionPool.idle(managedConnectionHandle);
Test 15: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler((InvocationHandler) null, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
// Undeclared exception!
try { 
  defaultConnectionPool.add((ManagedConnection) null, false);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.exolab.jms.net.connector.DefaultConnectionPool", e);
}

Test 16: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
Hashtable<Principal, Object> hashtable = new Hashtable<Principal, Object>();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, hashtable);
// Undeclared exception!
try { 
  defaultConnectionPool.error((ManagedConnectionAcceptor) null, (Throwable) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.exolab.jms.net.connector.DefaultConnectionPool", e);
}

Test 17: 
HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
ConnectionFactory createConnectionFactory = hTTPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler((InvocationHandler) null, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
defaultConnectionPool.remove((ManagedConnection) null);

* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 29%
* Total number of goals: 99
* Number of covered goals: 29
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 41%
* Total number of goals: 214
* Number of covered goals: 88
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 33%
* Total number of goals: 12
* Number of covered goals: 4
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 89%
* Total number of goals: 18
* Number of covered goals: 16
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 29%
* Total number of goals: 99
* Number of covered goals: 29
* Generated 18 tests with total length 108
* Resulting test suite's coverage: 43% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 8%
* Compiling and checking tests
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: VMManagedConnectionFactory arg0 = new VMManagedConnectionFactory();
ConnectionFactory arg2 = arg0.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler arg1 = new ContextInvocationHandler((InvocationHandler) null, arg2, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(arg0, arg1, arg2, (Map) null);
try { 
  defaultConnectionPool.createManagedConnection((Principal) null, (ConnectionRequestInfo) null);
  fail("Expecting exception: Exception");

} catch(Exception e) {
   //
   // Argument 'info' must be of type org.exolab.jms.net.connector.URIRequestInfo
   //
   verifyException("org.exolab.jms.net.vm.VMManagedConnectionFactory", e);
}


** It was a parseable test case! 
refined test name is: testCreateManagedConnectionWithInvalidInfoType
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
ConnectionFactory arg2 = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
DefaultConnectionPool defaultConnectionPool = null;
try {
  defaultConnectionPool = new DefaultConnectionPool((ManagedConnectionFactory) null, (InvocationHandler) null, arg2, (Map) null);
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // Argument 'factory' is null
   //
   verifyException("org.exolab.jms.net.connector.DefaultConnectionPool", e);
}


** It was a parseable test case! 
refined test name is: testCreateConnectionPoolWithNullInvocationHandler
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: VMManagedConnectionFactory arg0 = new VMManagedConnectionFactory();
DefaultConnectionPool defaultConnectionPool = null;
try {
  defaultConnectionPool = new DefaultConnectionPool(arg0, (InvocationHandler) null, (ConnectionFactory) null, (Map) null);
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // Argument 'handler' is null
   //
   verifyException("org.exolab.jms.net.connector.DefaultConnectionPool", e);
}


** It was a parseable test case! 
refined test name is: testCreateWithNullInvocationHandler
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: VMManagedConnectionFactory arg0 = new VMManagedConnectionFactory();
ConnectionFactory arg2 = arg0.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler arg1 = new ContextInvocationHandler((InvocationHandler) null, arg2, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(arg0, arg1, arg2, (Map) null);
defaultConnectionPool.error((ManagedConnection) null, (Throwable) null);

** It was a parseable test case! 
refined test name is: testError
* Compiling Tests
refined test name is: testErrorRemoveAllConnectionsFromPool
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: VMManagedConnectionFactory arg0 = new VMManagedConnectionFactory();
ConnectionFactory arg2 = arg0.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler arg1 = new ContextInvocationHandler((InvocationHandler) null, arg2, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(arg0, arg1, arg2, (Map) null);
defaultConnectionPool.close();

** It was a parseable test case! 
refined test name is: testCloseMethod
* Compiling Tests
refined test name is: testCloseemptiesPoolAndClosesIt
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: VMManagedConnectionFactory arg0 = new VMManagedConnectionFactory();
ConnectionFactory arg2 = arg0.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler arg1 = new ContextInvocationHandler((InvocationHandler) null, arg2, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(arg0, arg1, arg2, (Map) null);
// Undeclared exception!
try { 
  defaultConnectionPool.add((ManagedConnection) null, false);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.exolab.jms.net.connector.DefaultConnectionPool", e);
}


** It was a parseable test case! 
refined test name is: testAddManagedConnectionNullPointerException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: HTTPSManagedConnectionFactory arg0 = new HTTPSManagedConnectionFactory();
ConnectionFactory arg2 = arg0.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler arg1 = new ContextInvocationHandler((InvocationHandler) null, arg2, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(arg0, arg1, arg2, (Map) null);
defaultConnectionPool.remove((ManagedConnection) null);

** It was a parseable test case! 
refined test name is: testRemoveMethodCallsCorrectly
* Compiling Tests
refined test name is: testRemoveMethod
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 20:06:22.524 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar25129541371371558.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:06:22.544 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar25129541371371558.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 20:06:22.638 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar25129541371371558.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:06:22.639 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar25129541371371558.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 20:06:22.720 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar25129541371371558.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:06:22.721 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar25129541371371558.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:06:22.808 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar25129541371371558.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:06:22.809 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar25129541371371558.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:06:22.887 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar25129541371371558.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:06:22.888 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar25129541371371558.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 20:06:22.965 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar25129541371371558.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:06:22.966 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar25129541371371558.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:06:23.047 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar25129541371371558.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:06:23.048 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar25129541371371558.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 3 called: 0 to improve: false
** Write a test suite: 4 called: 1 to improve: false
** Write a test suite: 6 called: 2 to improve: false
[MASTER] 20:06:23.198 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar25129541371371558.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:06:23.199 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar25129541371371558.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 2 called: 1 to improve: false
** Write a test suite: 3 called: 2 to improve: false
[MASTER] 20:06:23.377 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar25129541371371558.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:06:23.379 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar25129541371371558.jar
[MASTER] 20:06:23.562 [logback-1] WARN  TimeController - Already entered in phase: INLINING. This will mess up the timing calculations.
[MASTER] 20:06:23.667 [logback-1] WARN  TimeController - Already entered in phase: MINIMIZATION. This will mess up the timing calculations.
* Computation finished
