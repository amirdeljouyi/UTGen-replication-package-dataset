* EvoSuite 1.0.0-SNAPSHOT
* Going to generate test cases for class: org.exolab.jms.net.connector.DefaultConnectionPool
* Starting Client-0
* Properties loaded from /home/roham/Results-Utestgen/dataset/SF110-new-res/66_openjms/evosuite-files/evosuite.properties
* Connecting to master process on port 4371
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 16:30:27.207 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 16:30:27.208 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 16:30:27.209 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 16:30:27.252 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 16:30:27.256 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 16:30:27.257 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 16:30:27.663 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.sql.SQLType
[MASTER] 16:30:28.842 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 16:30:28.848 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 16:30:28.848 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 16:30:29.861 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 16:30:29.862 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 16:30:29.863 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 16:30:29.864 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 16:30:29.865 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 16:30:29.867 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 16:30:30.362 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 16:30:31.056 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
* Finished analyzing classpath
* Generating tests for class org.exolab.jms.net.connector.DefaultConnectionPool
* Test criteria:
  - Branch Coverage
  - Line Coverage
  - Method-Output Coverage
  - Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 442
* Using seed 1710261024517
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%]* Initial Number of Goals in DynaMOSA = 179 / 442
[MASTER] 16:30:32.213 [logback-1] WARN  TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleImmutableEntry<K, V> : Type points to itself
[Progress:>                             0%] [Cov:=>                                 5%][Progress:>                             1%] [Cov:=====>                             15%][Progress:>                             1%] [Cov:=========>                         27%][Progress:>                             1%] [Cov:=========>                         27%][Progress:>                             1%] [Cov:===========>                       32%][Progress:>                             3%] [Cov:============>                      35%][Progress:>                             3%] [Cov:============>                      37%][Progress:>                             3%] [Cov:============>                      37%][Progress:>                             3%] [Cov:============>                      37%][Progress:>                             3%] [Cov:=============>                     38%][Progress:=>                            4%] [Cov:=============>                     38%][Progress:=>                            4%] [Cov:=============>                     38%][Progress:=>                            4%] [Cov:=============>                     39%][Progress:=>                            4%] [Cov:=============>                     39%][Progress:=>                            4%] [Cov:==============>                    41%][Progress:=>                            4%] [Cov:==============>                    41%][Progress:=>                            4%] [Cov:==============>                    41%][Progress:=>                            6%] [Cov:==============>                    41%][Progress:=>                            6%] [Cov:==============>                    41%][Progress:=>                            6%] [Cov:==============>                    41%][Progress:=>                            6%] [Cov:==============>                    41%][Progress:=>                            6%] [Cov:==============>                    41%][Progress:=>                            6%] [Cov:==============>                    41%][Progress:==>                           8%] [Cov:==============>                    41%][Progress:==>                           8%] [Cov:==============>                    41%][Progress:==>                           9%] [Cov:==============>                    41%][Progress:==>                           9%] [Cov:==============>                    41%][Progress:==>                           9%] [Cov:==============>                    41%][Progress:===>                          10%] [Cov:==============>                    41%][Progress:===>                          10%] [Cov:==============>                    41%][Progress:===>                          11%] [Cov:==============>                    41%][Progress:===>                          11%] [Cov:==============>                    41%][Progress:===>                          11%] [Cov:==============>                    41%][Progress:===>                          11%] [Cov:==============>                    41%][Progress:===>                          12%] [Cov:==============>                    41%][Progress:===>                          13%] [Cov:==============>                    41%][Progress:===>                          13%] [Cov:==============>                    41%][Progress:===>                          13%] [Cov:==============>                    41%][Progress:===>                          13%] [Cov:==============>                    41%][Progress:===>                          13%] [Cov:==============>                    41%][Progress:===>                          13%] [Cov:==============>                    41%][Progress:===>                          13%] [Cov:==============>                    41%][Progress:===>                          13%] [Cov:==============>                    41%][Progress:===>                          13%] [Cov:==============>                    41%][Progress:====>                         16%] [Cov:==============>                    41%][Progress:====>                         16%] [Cov:==============>                    41%][Progress:====>                         16%] [Cov:==============>                    41%][Progress:====>                         16%] [Cov:==============>                    41%][Progress:====>                         16%] [Cov:==============>                    41%][Progress:====>                         16%] [Cov:==============>                    41%][Progress:=====>                        17%] [Cov:==============>                    41%][Progress:=====>                        17%] [Cov:==============>                    41%][Progress:=====>                        17%] [Cov:==============>                    41%][Progress:=====>                        17%] [Cov:==============>                    41%][Progress:=====>                        17%] [Cov:==============>                    41%][Progress:=====>                        18%] [Cov:==============>                    41%][Progress:=====>                        19%] [Cov:==============>                    41%][Progress:=====>                        19%] [Cov:==============>                    41%][Progress:======>                       21%] [Cov:==============>                    41%][Progress:======>                       23%] [Cov:==============>                    41%][Progress:======>                       23%] [Cov:==============>                    41%][Progress:=======>                      26%] [Cov:==============>                    41%][Progress:=======>                      26%] [Cov:==============>                    41%][Progress:=======>                      26%] [Cov:==============>                    41%][Progress:=======>                      26%] [Cov:==============>                    41%][Progress:=======>                      26%] [Cov:==============>                    41%][Progress:=======>                      26%] [Cov:==============>                    41%][Progress:=======>                      26%] [Cov:==============>                    41%][Progress:========>                     28%] [Cov:==============>                    41%][Progress:========>                     28%] [Cov:==============>                    41%][Progress:========>                     28%] [Cov:==============>                    41%][Progress:========>                     28%] [Cov:==============>                    41%][Progress:========>                     28%] [Cov:==============>                    41%][Progress:=========>                    31%] [Cov:==============>                    41%][Progress:=========>                    31%] [Cov:==============>                    41%][Progress:=========>                    31%] [Cov:==============>                    41%][Progress:=========>                    31%] [Cov:==============>                    41%][Progress:=========>                    31%] [Cov:==============>                    41%][Progress:=========>                    31%] [Cov:==============>                    41%][Progress:=========>                    31%] [Cov:==============>                    41%][Progress:=========>                    31%] [Cov:==============>                    41%][Progress:=========>                    31%] [Cov:==============>                    41%][Progress:=========>                    31%] [Cov:==============>                    41%][Progress:=========>                    31%] [Cov:==============>                    41%][Progress:=========>                    32%] [Cov:==============>                    41%][Progress:=========>                    32%] [Cov:==============>                    41%][Progress:=========>                    32%] [Cov:==============>                    41%][Progress:=========>                    32%] [Cov:==============>                    41%][Progress:=========>                    32%] [Cov:==============>                    41%][Progress:=========>                    32%] [Cov:==============>                    41%][Progress:=========>                    32%] [Cov:==============>                    41%][Progress:==========>                   34%] [Cov:==============>                    41%][Progress:==========>                   36%] [Cov:==============>                    41%][Progress:==========>                   36%] [Cov:==============>                    41%][Progress:==========>                   36%] [Cov:==============>                    41%][Progress:==========>                   36%] [Cov:==============>                    41%][Progress:==========>                   36%] [Cov:==============>                    41%][Progress:===========>                  37%] [Cov:==============>                    41%][Progress:===========>                  37%] [Cov:==============>                    41%][Progress:===========>                  37%] [Cov:==============>                    41%][Progress:===========>                  38%] [Cov:==============>                    41%][Progress:===========>                  38%] [Cov:==============>                    41%][Progress:===========>                  38%] [Cov:==============>                    41%][Progress:===========>                  38%] [Cov:==============>                    41%][Progress:===========>                  38%] [Cov:==============>                    41%][Progress:===========>                  38%] [Cov:==============>                    41%][Progress:===========>                  38%] [Cov:==============>                    41%][Progress:===========>                  38%] [Cov:==============>                    41%][Progress:===========>                  38%] [Cov:==============>                    41%][Progress:===========>                  38%] [Cov:==============>                    41%][Progress:===========>                  38%] [Cov:==============>                    41%][Progress:===========>                  38%] [Cov:==============>                    41%][Progress:===========>                  38%] [Cov:==============>                    41%][Progress:===========>                  39%] [Cov:==============>                    41%][Progress:===========>                  39%] [Cov:==============>                    41%][Progress:===========>                  39%] [Cov:==============>                    41%][Progress:===========>                  39%] [Cov:==============>                    41%][Progress:===========>                  39%] [Cov:==============>                    41%][Progress:===========>                  39%] [Cov:==============>                    41%][Progress:===========>                  39%] [Cov:==============>                    41%][Progress:===========>                  39%] [Cov:==============>                    41%][Progress:===========>                  39%] [Cov:==============>                    41%][Progress:===========>                  39%] [Cov:==============>                    41%][Progress:===========>                  39%] [Cov:==============>                    41%][Progress:===========>                  39%] [Cov:==============>                    41%][Progress:===========>                  39%] [Cov:==============>                    41%][Progress:============>                 42%] [Cov:==============>                    41%][Progress:============>                 42%] [Cov:==============>                    41%][Progress:============>                 42%] [Cov:==============>                    41%][Progress:=============>                46%] [Cov:==============>                    41%][Progress:==============>               48%] [Cov:==============>                    41%][Progress:==============>               48%] [Cov:==============>                    41%][Progress:===============>              51%] [Cov:==============>                    41%][Progress:===============>              51%] [Cov:==============>                    41%][Progress:===============>              51%] [Cov:==============>                    41%][Progress:===============>              51%] [Cov:==============>                    41%][Progress:===============>              53%] [Cov:==============>                    41%][Progress:================>             54%] [Cov:==============>                    41%][Progress:================>             54%] [Cov:==============>                    41%][Progress:================>             54%] [Cov:==============>                    41%][Progress:================>             54%] [Cov:==============>                    41%][Progress:================>             54%] [Cov:==============>                    41%][Progress:================>             54%] [Cov:==============>                    41%][Progress:================>             54%] [Cov:==============>                    41%][Progress:================>             54%] [Cov:==============>                    41%][Progress:================>             54%] [Cov:==============>                    41%][Progress:================>             54%] [Cov:==============>                    41%][Progress:================>             56%] [Cov:==============>                    41%][Progress:================>             56%] [Cov:==============>                    41%][Progress:================>             56%] [Cov:==============>                    41%][Progress:================>             56%] [Cov:==============>                    41%][Progress:================>             56%] [Cov:==============>                    41%][Progress:================>             56%] [Cov:==============>                    41%][Progress:================>             56%] [Cov:==============>                    41%][Progress:================>             56%] [Cov:==============>                    41%][Progress:=================>            59%] [Cov:==============>                    41%][Progress:=================>            59%] [Cov:==============>                    41%][Progress:=================>            59%] [Cov:==============>                    41%][Progress:=================>            59%] [Cov:==============>                    41%][Progress:=================>            59%] [Cov:==============>                    41%][Progress:=================>            59%] [Cov:==============>                    41%][Progress:==================>           60%] [Cov:==============>                    41%][Progress:==================>           60%] [Cov:==============>                    41%][Progress:==================>           60%] [Cov:==============>                    41%][Progress:==================>           60%] [Cov:==============>                    41%][Progress:==================>           60%] [Cov:==============>                    41%][Progress:==================>           60%] [Cov:==============>                    41%][Progress:==================>           62%] [Cov:==============>                    41%][Progress:==================>           63%] [Cov:==============>                    41%][Progress:==================>           63%] [Cov:==============>                    41%][Progress:===================>          65%] [Cov:==============>                    41%][Progress:===================>          65%] [Cov:==============>                    41%][Progress:===================>          65%] [Cov:==============>                    41%][Progress:===================>          65%] [Cov:==============>                    41%][Progress:===================>          65%] [Cov:==============>                    41%][Progress:====================>         68%] [Cov:==============>                    41%][Progress:=====================>        70%] [Cov:==============>                    41%][Progress:=====================>        71%] [Cov:==============>                    41%][Progress:=====================>        71%] [Cov:==============>                    41%][Progress:=====================>        71%] [Cov:==============>                    41%][Progress:=====================>        71%] [Cov:==============>                    41%][Progress:=====================>        71%] [Cov:==============>                    41%][Progress:=====================>        71%] [Cov:==============>                    41%][Progress:=====================>        71%] [Cov:==============>                    41%][Progress:=====================>        71%] [Cov:==============>                    41%][Progress:=====================>        71%] [Cov:==============>                    41%][Progress:=====================>        71%] [Cov:==============>                    41%][Progress:=====================>        71%] [Cov:==============>                    41%][Progress:======================>       74%] [Cov:==============>                    41%][Progress:======================>       74%] [Cov:==============>                    41%][Progress:======================>       74%] [Cov:==============>                    41%][Progress:======================>       76%] [Cov:==============>                    41%][Progress:=======================>      79%] [Cov:==============>                    41%][Progress:=======================>      79%] [Cov:==============>                    41%][Progress:=======================>      79%] [Cov:==============>                    41%][Progress:=======================>      79%] [Cov:==============>                    41%][Progress:=======================>      79%] [Cov:==============>                    41%][Progress:========================>     80%] [Cov:==============>                    41%][Progress:========================>     80%] [Cov:==============>                    41%][Progress:========================>     80%] [Cov:==============>                    41%][Progress:========================>     81%] [Cov:==============>                    41%][Progress:========================>     81%] [Cov:==============>                    41%][Progress:========================>     81%] [Cov:==============>                    41%][Progress:=========================>    84%] [Cov:==============>                    41%][Progress:=========================>    84%] [Cov:==============>                    41%][Progress:=========================>    84%] [Cov:==============>                    41%][Progress:=========================>    84%] [Cov:==============>                    41%][Progress:=========================>    84%] [Cov:==============>                    41%][Progress:==========================>   87%] [Cov:==============>                    41%][Progress:==========================>   87%] [Cov:==============>                    41%][Progress:==========================>   87%] [Cov:==============>                    41%][Progress:==========================>   87%] [Cov:==============>                    41%][Progress:==========================>   87%] [Cov:==============>                    41%][Progress:===========================>  90%] [Cov:==============>                    41%][Progress:===========================>  90%] [Cov:==============>                    41%][Progress:===========================>  90%] [Cov:==============>                    41%][Progress:===========================>  92%] [Cov:==============>                    41%][Progress:===========================>  92%] [Cov:==============>                    41%][Progress:===========================>  93%] [Cov:==============>                    41%][Progress:===========================>  93%] [Cov:==============>                    41%][Progress:===========================>  93%] [Cov:==============>                    41%][Progress:===========================>  93%] [Cov:==============>                    41%][Progress:============================> 95%] [Cov:==============>                    41%][Progress:============================> 95%] [Cov:==============>                    41%][Progress:============================> 95%] [Cov:==============>                    41%][Progress:=============================>98%] [Cov:==============>                    41%][Progress:=============================>98%] [Cov:==============>                    41%][Progress:==============================100%] [Cov:==============>                    41%][Progress:==============================100%] [Cov:==============>                    41%][Progress:==============================100%] [Cov:==============>                    41%][Progress:==============================100%] [Cov:==============>                    41%][Progress:==============================100%] [Cov:==============>                    41%][Progress:==============================100%] [Cov:==============>                    41%]
* Search finished after 205s and 232 generations, 110240 statements, best individual has fitness: 276.0
* Generated before the refinement 18 tests with total length 135
statement is: mock(interface org.exolab.jms.net.connector.InvocationHandler) type is: class org.evosuite.testcase.statements.FunctionalMockStatement return type interface org.exolab.jms.net.connector.InvocationHandler
statement code is: InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer())
statement is: org.exolab.jms.net.tcp.TCPSManagedConnectionFactory()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.tcp.TCPSManagedConnectionFactory
statement code is: TCPSManagedConnectionFactory tCPSManagedConnectionFactory = new TCPSManagedConnectionFactory()
statement is: createConnectionFactory(Lorg/exolab/jms/net/connector/ConnectionManager;)Lorg/exolab/jms/net/connector/ConnectionFactory; type is: class org.evosuite.testcase.statements.MethodStatement return type interface org.exolab.jms.net.connector.ConnectionFactory
statement code is: ConnectionFactory createConnectionFactory = tCPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null)
statement is: org.exolab.jms.net.connector.ContextInvocationHandler(Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Lorg/exolab/jms/net/connector/ManagedConnection;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.ContextInvocationHandler
statement code is: ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(arg0, arg1, (ManagedConnection) null)
statement is: org.apache.derby.impl.services.locks.SinglePool()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.apache.derby.impl.services.locks.SinglePool
statement code is: SinglePool singlePool = new SinglePool()
statement is: org.exolab.jms.net.connector.DefaultConnectionPool(Lorg/exolab/jms/net/connector/ManagedConnectionFactory;Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Ljava/util/Map;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.DefaultConnectionPool
statement code is: DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(arg0, arg1, arg2, arg3)
statement is: getManagedConnectionAcceptorListener()Lorg/exolab/jms/net/connector/ManagedConnectionAcceptorListener; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.exolab.jms.net.connector.DefaultConnectionPool
statement code is: DefaultConnectionPool managedConnectionAcceptorListener = (DefaultConnectionPool)defaultConnectionPool.getManagedConnectionAcceptorListener()
test data is: InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
TCPSManagedConnectionFactory tCPSManagedConnectionFactory = new TCPSManagedConnectionFactory();
ConnectionFactory createConnectionFactory = tCPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
SinglePool singlePool = new SinglePool();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(tCPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, singlePool);
defaultConnectionPool.getManagedConnectionAcceptorListener();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        InvocationHandler invocationHandler = Mockito.mock(InvocationHandler.class);
        TCPSManagedConnectionFactory tCPSManagedConnectionFactory = new TCPSManagedConnectionFactory();
        tCPSManagedConnectionFactory.setMaxPoolSize(10);
        tCPSManagedConnectionFactory.setMinPoolSize(5);
        tCPSManagedConnectionFactory.setConnectionTimeout(60000);
        ConnectionFactory createConnectionFactory = tCPSManagedConnectionFactory.createConnectionFactory(((ConnectionManager) (null)));
        ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, ((ManagedConnection) (null)));
        SinglePool singlePool = new SinglePool();
        DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(tCPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, singlePool);
        defaultConnectionPool.getManagedConnectionAcceptorListener();
    }
}
statement is: InvocationHandler invocationHandler = Mockito.mock(InvocationHandler.class), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: Mockito.mock(InvocationHandler.class) target is: Mockito method is: mock(java.lang.Class)
target name is: InvocationHandler argument is: InvocationHandler.class
Matched Method is: mock(interface org.exolab.jms.net.connector.InvocationHandler)
statement is: TCPSManagedConnectionFactory tCPSManagedConnectionFactory = new TCPSManagedConnectionFactory(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: tCPSManagedConnectionFactory.setMaxPoolSize(10), class spoon.support.reflect.code.CtInvocationImpl
invocation is: tCPSManagedConnectionFactory.setMaxPoolSize(10) target is: tCPSManagedConnectionFactory method is: setMaxPoolSize(int)
statement is: tCPSManagedConnectionFactory.setMinPoolSize(5), class spoon.support.reflect.code.CtInvocationImpl
invocation is: tCPSManagedConnectionFactory.setMinPoolSize(5) target is: tCPSManagedConnectionFactory method is: setMinPoolSize(int)
statement is: tCPSManagedConnectionFactory.setConnectionTimeout(60000), class spoon.support.reflect.code.CtInvocationImpl
invocation is: tCPSManagedConnectionFactory.setConnectionTimeout(60000) target is: tCPSManagedConnectionFactory method is: setConnectionTimeout(int)
statement is: ConnectionFactory createConnectionFactory = tCPSManagedConnectionFactory.createConnectionFactory(((ConnectionManager) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: tCPSManagedConnectionFactory.createConnectionFactory(((ConnectionManager) (null))) target is: tCPSManagedConnectionFactory method is: createConnectionFactory(ConnectionManager)
source statement: org.exolab.jms.net.tcp.TCPSManagedConnectionFactory()V callee: VariableReference: Statement 1, type org.exolab.jms.net.tcp.TCPSManagedConnectionFactoryindex is: 1
Matched Method is: createConnectionFactory(Lorg/exolab/jms/net/connector/ConnectionManager;)Lorg/exolab/jms/net/connector/ConnectionFactory;
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, ((ManagedConnection) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: SinglePool singlePool = new SinglePool(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(tCPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, singlePool), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: defaultConnectionPool.getManagedConnectionAcceptorListener(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: defaultConnectionPool.getManagedConnectionAcceptorListener() target is: defaultConnectionPool method is: getManagedConnectionAcceptorListener()
source statement: org.exolab.jms.net.connector.DefaultConnectionPool(Lorg/exolab/jms/net/connector/ManagedConnectionFactory;Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Ljava/util/Map;)V callee: VariableReference: Statement 5, type org.exolab.jms.net.connector.DefaultConnectionPoolindex is: 6
Matched Method is: getManagedConnectionAcceptorListener()Lorg/exolab/jms/net/connector/ManagedConnectionAcceptorListener;
TestCase is: InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
TCPSManagedConnectionFactory tCPSManagedConnectionFactory = new TCPSManagedConnectionFactory();
ConnectionManager connectionManager = null;
ConnectionFactory createConnectionFactory = tCPSManagedConnectionFactory.createConnectionFactory(connectionManager);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
SinglePool singlePool = new SinglePool();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(tCPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, singlePool);
((DefaultConnectionPool) singlePool).getManagedConnectionAcceptorListener();

statement is: mock(interface org.exolab.jms.net.connector.InvocationHandler) type is: class org.evosuite.testcase.statements.FunctionalMockStatement return type interface org.exolab.jms.net.connector.InvocationHandler
statement code is: InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer())
statement is: org.exolab.jms.net.tcp.TCPSManagedConnectionFactory()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.tcp.TCPSManagedConnectionFactory
statement code is: TCPSManagedConnectionFactory tCPSManagedConnectionFactory = new TCPSManagedConnectionFactory()
statement is: org.apache.derby.impl.services.locks.SinglePool()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.apache.derby.impl.services.locks.SinglePool
statement code is: SinglePool singlePool = new SinglePool()
statement is: createConnectionFactory(Lorg/exolab/jms/net/connector/ConnectionManager;)Lorg/exolab/jms/net/connector/ConnectionFactory; type is: class org.evosuite.testcase.statements.MethodStatement return type interface org.exolab.jms.net.connector.ConnectionFactory
statement code is: ConnectionFactory createConnectionFactory = tCPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null)
statement is: org.exolab.jms.net.connector.DefaultConnectionPool(Lorg/exolab/jms/net/connector/ManagedConnectionFactory;Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Ljava/util/Map;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.DefaultConnectionPool
statement code is: DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(arg0, arg1, arg2, arg3)
statement is: accepted(Lorg/exolab/jms/net/connector/ManagedConnectionAcceptor;Lorg/exolab/jms/net/connector/ManagedConnection;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: defaultConnectionPool.accepted((ManagedConnectionAcceptor) null, (ManagedConnection) null)
test data is: InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
TCPSManagedConnectionFactory tCPSManagedConnectionFactory = new TCPSManagedConnectionFactory();
SinglePool singlePool = new SinglePool();
ConnectionFactory createConnectionFactory = tCPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(tCPSManagedConnectionFactory, invocationHandler, createConnectionFactory, singlePool);
defaultConnectionPool.accepted((ManagedConnectionAcceptor) null, (ManagedConnection) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
        TCPSManagedConnectionFactory tCPSManagedConnectionFactory = new TCPSManagedConnectionFactory();
        SinglePool singlePool = new SinglePool();
        ConnectionFactory createConnectionFactory = tCPSManagedConnectionFactory.createConnectionFactory(((ConnectionManager) (null)));
        DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(tCPSManagedConnectionFactory, invocationHandler, createConnectionFactory, singlePool);
        defaultConnectionPool.accepted(((ManagedConnectionAcceptor) (null)), ((ManagedConnection) (null)));
    }
}
statement is: InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer()), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: mock(InvocationHandler.class, new ViolatedAssumptionAnswer()) target is:  method is: mock(java.lang.Class,<unknown>)
target name is: InvocationHandler argument is: InvocationHandler.class
Matched Method is: mock(interface org.exolab.jms.net.connector.InvocationHandler)
statement is: TCPSManagedConnectionFactory tCPSManagedConnectionFactory = new TCPSManagedConnectionFactory(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: SinglePool singlePool = new SinglePool(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ConnectionFactory createConnectionFactory = tCPSManagedConnectionFactory.createConnectionFactory(((ConnectionManager) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: tCPSManagedConnectionFactory.createConnectionFactory(((ConnectionManager) (null))) target is: tCPSManagedConnectionFactory method is: createConnectionFactory(ConnectionManager)
source statement: org.exolab.jms.net.tcp.TCPSManagedConnectionFactory()V callee: VariableReference: Statement 1, type org.exolab.jms.net.tcp.TCPSManagedConnectionFactoryindex is: 1
Matched Method is: createConnectionFactory(Lorg/exolab/jms/net/connector/ConnectionManager;)Lorg/exolab/jms/net/connector/ConnectionFactory;
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(tCPSManagedConnectionFactory, invocationHandler, createConnectionFactory, singlePool), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: defaultConnectionPool.accepted(((ManagedConnectionAcceptor) (null)), ((ManagedConnection) (null))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: defaultConnectionPool.accepted(((ManagedConnectionAcceptor) (null)), ((ManagedConnection) (null))) target is: defaultConnectionPool method is: accepted(ManagedConnectionAcceptor,ManagedConnection)
source statement: org.exolab.jms.net.connector.DefaultConnectionPool(Lorg/exolab/jms/net/connector/ManagedConnectionFactory;Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Ljava/util/Map;)V callee: VariableReference: Statement 4, type org.exolab.jms.net.connector.DefaultConnectionPoolindex is: 5
Matched Method is: accepted(Lorg/exolab/jms/net/connector/ManagedConnectionAcceptor;Lorg/exolab/jms/net/connector/ManagedConnection;)V
i 0 Parameters size() 0 Num of Method Parameters: 2
i 1 Parameters size() 0 Num of Method Parameters: 2
TestCase is: InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
TCPSManagedConnectionFactory tCPSManagedConnectionFactory = new TCPSManagedConnectionFactory();
SinglePool singlePool = new SinglePool();
ConnectionManager connectionManager = null;
ConnectionFactory createConnectionFactory = tCPSManagedConnectionFactory.createConnectionFactory(connectionManager);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(tCPSManagedConnectionFactory, invocationHandler, createConnectionFactory, singlePool);
ManagedConnectionAcceptor managedConnectionAcceptor = null;
ManagedConnection managedConnection = null;
((DefaultConnectionPool) createConnectionFactory).accepted(managedConnectionAcceptor, managedConnection);

statement is: org.exolab.jms.net.vm.VMManagedConnectionFactory()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.vm.VMManagedConnectionFactory
statement code is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory()
statement is: mock(interface org.exolab.jms.net.connector.InvocationHandler) type is: class org.evosuite.testcase.statements.FunctionalMockStatement return type interface org.exolab.jms.net.connector.InvocationHandler
statement code is: InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer())
statement is: org.exolab.jms.net.tcp.TCPSManagedConnectionFactory()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.tcp.TCPSManagedConnectionFactory
statement code is: TCPSManagedConnectionFactory tCPSManagedConnectionFactory = new TCPSManagedConnectionFactory()
statement is: createConnectionFactory(Lorg/exolab/jms/net/connector/ConnectionManager;)Lorg/exolab/jms/net/connector/ConnectionFactory; type is: class org.evosuite.testcase.statements.MethodStatement return type interface org.exolab.jms.net.connector.ConnectionFactory
statement code is: ConnectionFactory createConnectionFactory = tCPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null)
statement is: org.exolab.jms.net.connector.ContextInvocationHandler(Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Lorg/exolab/jms/net/connector/ManagedConnection;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.ContextInvocationHandler
statement code is: ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(arg0, arg1, (ManagedConnection) null)
statement is: org.apache.derby.impl.services.locks.SinglePool()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.apache.derby.impl.services.locks.SinglePool
statement code is: SinglePool singlePool = new SinglePool()
statement is: org.exolab.jms.net.connector.DefaultConnectionPool(Lorg/exolab/jms/net/connector/ManagedConnectionFactory;Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Ljava/util/Map;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.DefaultConnectionPool
statement code is: DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(arg0, arg1, arg2, arg3)
statement is: setCallerListener(Lorg/exolab/jms/net/connector/CallerListener;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: defaultConnectionPool.setCallerListener((CallerListener) null)
test data is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
TCPSManagedConnectionFactory tCPSManagedConnectionFactory = new TCPSManagedConnectionFactory();
ConnectionFactory createConnectionFactory = tCPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
SinglePool singlePool = new SinglePool();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, singlePool);
defaultConnectionPool.setCallerListener((CallerListener) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
        vMManagedConnectionFactory.setIORType("IIOP");
        vMManagedConnectionFactory.setHost("192.168.0.100");
        vMManagedConnectionFactory.setPort(1099);
        vMManagedConnectionFactory.setObjectName("bankingService");
        InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
        TCPSManagedConnectionFactory tCPSManagedConnectionFactory = new TCPSManagedConnectionFactory();
        tCPSManagedConnectionFactory.setIORType("IIOP");
        tCPSManagedConnectionFactory.setHost("192.168.0.100");
        tCPSManagedConnectionFactory.setPort(1099);
        tCPSManagedConnectionFactory.setObjectName("bankingService");
        ConnectionFactory createConnectionFactory = tCPSManagedConnectionFactory.createConnectionFactory(((ConnectionManager) (null)));
        ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, ((ManagedConnection) (null)));
        SinglePool singlePool = new SinglePool();
        DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, singlePool);
        defaultConnectionPool.setCallerListener(((CallerListener) (null)));
    }
}
statement is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: vMManagedConnectionFactory.setIORType("IIOP"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: vMManagedConnectionFactory.setIORType("IIOP") target is: vMManagedConnectionFactory method is: setIORType(java.lang.String)
statement is: vMManagedConnectionFactory.setHost("192.168.0.100"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: vMManagedConnectionFactory.setHost("192.168.0.100") target is: vMManagedConnectionFactory method is: setHost(java.lang.String)
statement is: vMManagedConnectionFactory.setPort(1099), class spoon.support.reflect.code.CtInvocationImpl
invocation is: vMManagedConnectionFactory.setPort(1099) target is: vMManagedConnectionFactory method is: setPort(int)
statement is: vMManagedConnectionFactory.setObjectName("bankingService"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: vMManagedConnectionFactory.setObjectName("bankingService") target is: vMManagedConnectionFactory method is: setObjectName(java.lang.String)
statement is: InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer()), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: mock(InvocationHandler.class, new ViolatedAssumptionAnswer()) target is:  method is: mock(java.lang.Class,<unknown>)
target name is: InvocationHandler argument is: InvocationHandler.class
Matched Method is: mock(interface org.exolab.jms.net.connector.InvocationHandler)
statement is: TCPSManagedConnectionFactory tCPSManagedConnectionFactory = new TCPSManagedConnectionFactory(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: tCPSManagedConnectionFactory.setIORType("IIOP"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: tCPSManagedConnectionFactory.setIORType("IIOP") target is: tCPSManagedConnectionFactory method is: setIORType(java.lang.String)
statement is: tCPSManagedConnectionFactory.setHost("192.168.0.100"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: tCPSManagedConnectionFactory.setHost("192.168.0.100") target is: tCPSManagedConnectionFactory method is: setHost(java.lang.String)
statement is: tCPSManagedConnectionFactory.setPort(1099), class spoon.support.reflect.code.CtInvocationImpl
invocation is: tCPSManagedConnectionFactory.setPort(1099) target is: tCPSManagedConnectionFactory method is: setPort(int)
statement is: tCPSManagedConnectionFactory.setObjectName("bankingService"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: tCPSManagedConnectionFactory.setObjectName("bankingService") target is: tCPSManagedConnectionFactory method is: setObjectName(java.lang.String)
statement is: ConnectionFactory createConnectionFactory = tCPSManagedConnectionFactory.createConnectionFactory(((ConnectionManager) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: tCPSManagedConnectionFactory.createConnectionFactory(((ConnectionManager) (null))) target is: tCPSManagedConnectionFactory method is: createConnectionFactory(ConnectionManager)
source statement: org.exolab.jms.net.tcp.TCPSManagedConnectionFactory()V callee: VariableReference: Statement 2, type org.exolab.jms.net.tcp.TCPSManagedConnectionFactoryindex is: 2
Matched Method is: createConnectionFactory(Lorg/exolab/jms/net/connector/ConnectionManager;)Lorg/exolab/jms/net/connector/ConnectionFactory;
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, ((ManagedConnection) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: SinglePool singlePool = new SinglePool(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, singlePool), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: defaultConnectionPool.setCallerListener(((CallerListener) (null))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: defaultConnectionPool.setCallerListener(((CallerListener) (null))) target is: defaultConnectionPool method is: setCallerListener(CallerListener)
source statement: org.exolab.jms.net.connector.DefaultConnectionPool(Lorg/exolab/jms/net/connector/ManagedConnectionFactory;Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Ljava/util/Map;)V callee: VariableReference: Statement 6, type org.exolab.jms.net.connector.DefaultConnectionPoolindex is: 7
Matched Method is: setCallerListener(Lorg/exolab/jms/net/connector/CallerListener;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
TestCase is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
TCPSManagedConnectionFactory tCPSManagedConnectionFactory = new TCPSManagedConnectionFactory();
ConnectionManager connectionManager = null;
ConnectionFactory createConnectionFactory = tCPSManagedConnectionFactory.createConnectionFactory(connectionManager);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
SinglePool singlePool = new SinglePool();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, singlePool);
CallerListener callerListener = null;
((DefaultConnectionPool) singlePool).setCallerListener(callerListener);

statement is: org.exolab.jms.net.tcp.TCPManagedConnectionFactory()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.tcp.TCPManagedConnectionFactory
statement code is: TCPManagedConnectionFactory tCPManagedConnectionFactory = new TCPManagedConnectionFactory()
statement is: org.exolab.jms.net.tcp.TCPSManagedConnectionFactory()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.tcp.TCPSManagedConnectionFactory
statement code is: TCPSManagedConnectionFactory tCPSManagedConnectionFactory = new TCPSManagedConnectionFactory()
statement is: createConnectionFactory(Lorg/exolab/jms/net/connector/ConnectionManager;)Lorg/exolab/jms/net/connector/ConnectionFactory; type is: class org.evosuite.testcase.statements.MethodStatement return type interface org.exolab.jms.net.connector.ConnectionFactory
statement code is: ConnectionFactory createConnectionFactory = tCPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null)
statement is: javax.management.remote.JMXPrincipal(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class javax.management.remote.JMXPrincipal
statement code is: JMXPrincipal jMXPrincipal = new JMXPrincipal("")
statement is: org.exolab.jms.net.connector.ContextInvocationHandler(Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Lorg/exolab/jms/net/connector/ManagedConnection;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.ContextInvocationHandler
statement code is: ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler((InvocationHandler) null, arg1, (ManagedConnection) null)
statement is: java.util.Hashtable()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type java.util.Hashtable<javax.management.remote.JMXPrincipal, org.exolab.jms.net.connector.ManagedConnectionHandle>
statement code is: Hashtable<JMXPrincipal, ManagedConnectionHandle> hashtable = new Hashtable<JMXPrincipal, ManagedConnectionHandle>()
statement is: org.exolab.jms.net.connector.DefaultConnectionPool(Lorg/exolab/jms/net/connector/ManagedConnectionFactory;Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Ljava/util/Map;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.DefaultConnectionPool
statement code is: DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(arg0, arg1, arg2, arg3)
statement is: createManagedConnection(Ljava/security/Principal;Lorg/exolab/jms/net/connector/ConnectionRequestInfo;)Lorg/exolab/jms/net/connector/ManagedConnection; type is: class org.evosuite.testcase.statements.MethodStatement return type interface org.exolab.jms.net.connector.ManagedConnection
statement code is: ManagedConnection createManagedConnection = defaultConnectionPool.createManagedConnection(arg0, (ConnectionRequestInfo) null)
test data is: TCPManagedConnectionFactory tCPManagedConnectionFactory = new TCPManagedConnectionFactory();
TCPSManagedConnectionFactory tCPSManagedConnectionFactory = new TCPSManagedConnectionFactory();
ConnectionFactory createConnectionFactory = tCPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
JMXPrincipal jMXPrincipal = new JMXPrincipal("");
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler((InvocationHandler) null, createConnectionFactory, (ManagedConnection) null);
Hashtable<JMXPrincipal, ManagedConnectionHandle> hashtable = new Hashtable<JMXPrincipal, ManagedConnectionHandle>();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(tCPManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, hashtable);
defaultConnectionPool.createManagedConnection(jMXPrincipal, (ConnectionRequestInfo) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        TCPManagedConnectionFactory tCPManagedConnectionFactory = new TCPManagedConnectionFactory("127.0.0.1", 8888);// use a more descriptive IP address and port number

        TCPSManagedConnectionFactory tCPSManagedConnectionFactory = new TCPSManagedConnectionFactory("127.0.0.1", 8888);// use a more descriptive IP address and port number

        ConnectionFactory createConnectionFactory = tCPSManagedConnectionFactory.createConnectionFactory(((ConnectionManager) (null)));
        JMXPrincipal jMXPrincipal = new JMXPrincipal("jmx-user");// use a more descriptive principal name

        ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(((InvocationHandler) (null)), createConnectionFactory, ((ManagedConnection) (null)));
        Hashtable<JMXPrincipal, ManagedConnectionHandle> hashtable = new Hashtable<JMXPrincipal, ManagedConnectionHandle>();
        DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(tCPManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, hashtable);
        defaultConnectionPool.createManagedConnection(jMXPrincipal, ((ConnectionRequestInfo) (null)));
    }
}
statement is: TCPManagedConnectionFactory tCPManagedConnectionFactory = new TCPManagedConnectionFactory("127.0.0.1", 8888)// use a more descriptive IP address and port number
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: TCPSManagedConnectionFactory tCPSManagedConnectionFactory = new TCPSManagedConnectionFactory("127.0.0.1", 8888)// use a more descriptive IP address and port number
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ConnectionFactory createConnectionFactory = tCPSManagedConnectionFactory.createConnectionFactory(((ConnectionManager) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: tCPSManagedConnectionFactory.createConnectionFactory(((ConnectionManager) (null))) target is: tCPSManagedConnectionFactory method is: createConnectionFactory(ConnectionManager)
statement is: JMXPrincipal jMXPrincipal = new JMXPrincipal("jmx-user")// use a more descriptive principal name
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(((InvocationHandler) (null)), createConnectionFactory, ((ManagedConnection) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: org.exolab.jms.net.connector.ContextInvocationHandler(Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Lorg/exolab/jms/net/connector/ManagedConnection;)V
statement is: Hashtable<JMXPrincipal, ManagedConnectionHandle> hashtable = new Hashtable<JMXPrincipal, ManagedConnectionHandle>(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(tCPManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, hashtable), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: org.exolab.jms.net.connector.DefaultConnectionPool(Lorg/exolab/jms/net/connector/ManagedConnectionFactory;Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Ljava/util/Map;)V
statement is: defaultConnectionPool.createManagedConnection(jMXPrincipal, ((ConnectionRequestInfo) (null))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: defaultConnectionPool.createManagedConnection(jMXPrincipal, ((ConnectionRequestInfo) (null))) target is: defaultConnectionPool method is: createManagedConnection(JMXPrincipal,ConnectionRequestInfo)
TestCase is: String string = "jmx-user";
JMXPrincipal jMXPrincipal = new JMXPrincipal(string);
Hashtable<JMXPrincipal, ManagedConnectionHandle> hashtable = new Hashtable<JMXPrincipal, ManagedConnectionHandle>();

statement is: mock(interface org.exolab.jms.net.connector.InvocationHandler) type is: class org.evosuite.testcase.statements.FunctionalMockStatement return type interface org.exolab.jms.net.connector.InvocationHandler
statement code is: InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer())
statement is: org.exolab.jms.net.tcp.TCPSManagedConnectionFactory()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.tcp.TCPSManagedConnectionFactory
statement code is: TCPSManagedConnectionFactory tCPSManagedConnectionFactory = new TCPSManagedConnectionFactory()
statement is: createConnectionFactory(Lorg/exolab/jms/net/connector/ConnectionManager;)Lorg/exolab/jms/net/connector/ConnectionFactory; type is: class org.evosuite.testcase.statements.MethodStatement return type interface org.exolab.jms.net.connector.ConnectionFactory
statement code is: ConnectionFactory createConnectionFactory = tCPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null)
statement is: org.exolab.jms.net.connector.ContextInvocationHandler(Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Lorg/exolab/jms/net/connector/ManagedConnection;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.ContextInvocationHandler
statement code is: ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(arg0, arg1, (ManagedConnection) null)
statement is: org.apache.derby.impl.services.locks.SinglePool()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.apache.derby.impl.services.locks.SinglePool
statement code is: SinglePool singlePool = new SinglePool()
statement is: org.exolab.jms.net.connector.DefaultConnectionPool(Lorg/exolab/jms/net/connector/ManagedConnectionFactory;Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Ljava/util/Map;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.DefaultConnectionPool
statement code is: DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(arg0, arg1, arg2, arg3)
statement is: org.exolab.jms.net.uri.URI()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.uri.URI
statement code is: URI uRI = new URI()
statement is: org.exolab.jms.net.connector.URIRequestInfo(Lorg/exolab/jms/net/uri/URI;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.URIRequestInfo
statement code is: URIRequestInfo uRIRequestInfo = new URIRequestInfo(arg0)
statement is: createManagedConnectionAcceptor(Lorg/exolab/jms/net/connector/Authenticator;Lorg/exolab/jms/net/connector/ConnectionRequestInfo;)Lorg/exolab/jms/net/connector/ManagedConnectionAcceptor; type is: class org.evosuite.testcase.statements.MethodStatement return type interface org.exolab.jms.net.connector.ManagedConnectionAcceptor
statement code is: ManagedConnectionAcceptor createManagedConnectionAcceptor = defaultConnectionPool.createManagedConnectionAcceptor((Authenticator) null, arg1)
test data is: InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
TCPSManagedConnectionFactory tCPSManagedConnectionFactory = new TCPSManagedConnectionFactory();
ConnectionFactory createConnectionFactory = tCPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
SinglePool singlePool = new SinglePool();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(tCPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, singlePool);
URI uRI = new URI();
URIRequestInfo uRIRequestInfo = new URIRequestInfo(uRI);
defaultConnectionPool.createManagedConnectionAcceptor((Authenticator) null, uRIRequestInfo);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
        TCPSManagedConnectionFactory tCPSManagedConnectionFactory = new TCPSManagedConnectionFactory();
        ConnectionFactory createConnectionFactory = tCPSManagedConnectionFactory.createConnectionFactory(((ConnectionManager) (null)));
        ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, ((ManagedConnection) (null)));
        SinglePool singlePool = new SinglePool();
        DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(tCPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, singlePool);
        URI uRI = new URI("https://www.example.com");
        URIRequestInfo uRIRequestInfo = new URIRequestInfo(uRI);
        defaultConnectionPool.createManagedConnectionAcceptor(((Authenticator) (null)), uRIRequestInfo);
    }
}
statement is: InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer()), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: mock(InvocationHandler.class, new ViolatedAssumptionAnswer()) target is:  method is: mock(java.lang.Class,<unknown>)
target name is: InvocationHandler argument is: InvocationHandler.class
Matched Method is: mock(interface org.exolab.jms.net.connector.InvocationHandler)
statement is: TCPSManagedConnectionFactory tCPSManagedConnectionFactory = new TCPSManagedConnectionFactory(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ConnectionFactory createConnectionFactory = tCPSManagedConnectionFactory.createConnectionFactory(((ConnectionManager) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: tCPSManagedConnectionFactory.createConnectionFactory(((ConnectionManager) (null))) target is: tCPSManagedConnectionFactory method is: createConnectionFactory(ConnectionManager)
source statement: org.exolab.jms.net.tcp.TCPSManagedConnectionFactory()V callee: VariableReference: Statement 1, type org.exolab.jms.net.tcp.TCPSManagedConnectionFactoryindex is: 1
Matched Method is: createConnectionFactory(Lorg/exolab/jms/net/connector/ConnectionManager;)Lorg/exolab/jms/net/connector/ConnectionFactory;
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, ((ManagedConnection) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: SinglePool singlePool = new SinglePool(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(tCPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, singlePool), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: URI uRI = new URI("https://www.example.com"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: URIRequestInfo uRIRequestInfo = new URIRequestInfo(uRI), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: defaultConnectionPool.createManagedConnectionAcceptor(((Authenticator) (null)), uRIRequestInfo), class spoon.support.reflect.code.CtInvocationImpl
invocation is: defaultConnectionPool.createManagedConnectionAcceptor(((Authenticator) (null)), uRIRequestInfo) target is: defaultConnectionPool method is: createManagedConnectionAcceptor(Authenticator,URIRequestInfo)
source statement: org.exolab.jms.net.connector.DefaultConnectionPool(Lorg/exolab/jms/net/connector/ManagedConnectionFactory;Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Ljava/util/Map;)V callee: VariableReference: Statement 5, type org.exolab.jms.net.connector.DefaultConnectionPoolindex is: 6
Matched Method is: createManagedConnectionAcceptor(Lorg/exolab/jms/net/connector/Authenticator;Lorg/exolab/jms/net/connector/ConnectionRequestInfo;)Lorg/exolab/jms/net/connector/ManagedConnectionAcceptor;
i 1 Parameters size() 1 Num of Method Parameters: 2
TestCase is: InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
TCPSManagedConnectionFactory tCPSManagedConnectionFactory = new TCPSManagedConnectionFactory();
ConnectionManager connectionManager = null;
ConnectionFactory createConnectionFactory = tCPSManagedConnectionFactory.createConnectionFactory(connectionManager);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
SinglePool singlePool = new SinglePool();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(tCPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, singlePool);
URIRequestInfo uRIRequestInfo = new URIRequestInfo((URI) defaultConnectionPool);
URIRequestInfo uRIRequestInfo = null;
((DefaultConnectionPool) singlePool).createManagedConnectionAcceptor((Authenticator) uRIRequestInfo, uRIRequestInfo);

statement is: org.exolab.jms.net.vm.VMManagedConnectionFactory()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.vm.VMManagedConnectionFactory
statement code is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory()
statement is: mock(interface org.exolab.jms.net.connector.InvocationHandler) type is: class org.evosuite.testcase.statements.FunctionalMockStatement return type interface org.exolab.jms.net.connector.InvocationHandler
statement code is: InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer())
statement is: org.exolab.jms.net.tcp.TCPSManagedConnectionFactory()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.tcp.TCPSManagedConnectionFactory
statement code is: TCPSManagedConnectionFactory tCPSManagedConnectionFactory = new TCPSManagedConnectionFactory()
statement is: createConnectionFactory(Lorg/exolab/jms/net/connector/ConnectionManager;)Lorg/exolab/jms/net/connector/ConnectionFactory; type is: class org.evosuite.testcase.statements.MethodStatement return type interface org.exolab.jms.net.connector.ConnectionFactory
statement code is: ConnectionFactory createConnectionFactory = tCPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null)
statement is: org.exolab.jms.net.connector.ContextInvocationHandler(Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Lorg/exolab/jms/net/connector/ManagedConnection;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.ContextInvocationHandler
statement code is: ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(arg0, arg1, (ManagedConnection) null)
statement is: org.apache.derby.impl.services.locks.SinglePool()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.apache.derby.impl.services.locks.SinglePool
statement code is: SinglePool singlePool = new SinglePool()
statement is: org.exolab.jms.net.connector.DefaultConnectionPool(Lorg/exolab/jms/net/connector/ManagedConnectionFactory;Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Ljava/util/Map;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.DefaultConnectionPool
statement code is: DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(arg0, arg1, arg2, arg3)
statement is: org.exolab.jms.net.uri.URI()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.uri.URI
statement code is: URI uRI = new URI()
statement is: org.exolab.jms.net.connector.URIRequestInfo(Lorg/exolab/jms/net/uri/URI;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.URIRequestInfo
statement code is: URIRequestInfo uRIRequestInfo = new URIRequestInfo(arg0)
statement is: matchManagedConnectionAcceptors(Lorg/exolab/jms/net/connector/ConnectionRequestInfo;)Lorg/exolab/jms/net/connector/ManagedConnectionAcceptor; type is: class org.evosuite.testcase.statements.MethodStatement return type interface org.exolab.jms.net.connector.ManagedConnectionAcceptor
statement code is: ManagedConnectionAcceptor matchManagedConnectionAcceptors = defaultConnectionPool.matchManagedConnectionAcceptors(arg0)
test data is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
TCPSManagedConnectionFactory tCPSManagedConnectionFactory = new TCPSManagedConnectionFactory();
ConnectionFactory createConnectionFactory = tCPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
SinglePool singlePool = new SinglePool();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, singlePool);
URI uRI = new URI();
URIRequestInfo uRIRequestInfo = new URIRequestInfo(uRI);
defaultConnectionPool.matchManagedConnectionAcceptors(uRIRequestInfo);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
        InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
        TCPSManagedConnectionFactory tCPSManagedConnectionFactory = new TCPSManagedConnectionFactory();
        ConnectionFactory createConnectionFactory = tCPSManagedConnectionFactory.createConnectionFactory(((ConnectionManager) (null)));
        ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, ((ManagedConnection) (null)));
        SinglePool singlePool = new SinglePool();
        DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, singlePool);
        URI uRI = new URI("https://www.example.com");
        URIRequestInfo uRIRequestInfo = new URIRequestInfo(uRI);
        defaultConnectionPool.matchManagedConnectionAcceptors(uRIRequestInfo);
    }
}
statement is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer()), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: mock(InvocationHandler.class, new ViolatedAssumptionAnswer()) target is:  method is: mock(java.lang.Class,<unknown>)
target name is: InvocationHandler argument is: InvocationHandler.class
Matched Method is: mock(interface org.exolab.jms.net.connector.InvocationHandler)
statement is: TCPSManagedConnectionFactory tCPSManagedConnectionFactory = new TCPSManagedConnectionFactory(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ConnectionFactory createConnectionFactory = tCPSManagedConnectionFactory.createConnectionFactory(((ConnectionManager) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: tCPSManagedConnectionFactory.createConnectionFactory(((ConnectionManager) (null))) target is: tCPSManagedConnectionFactory method is: createConnectionFactory(ConnectionManager)
source statement: org.exolab.jms.net.tcp.TCPSManagedConnectionFactory()V callee: VariableReference: Statement 2, type org.exolab.jms.net.tcp.TCPSManagedConnectionFactoryindex is: 2
Matched Method is: createConnectionFactory(Lorg/exolab/jms/net/connector/ConnectionManager;)Lorg/exolab/jms/net/connector/ConnectionFactory;
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, ((ManagedConnection) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: SinglePool singlePool = new SinglePool(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, singlePool), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: URI uRI = new URI("https://www.example.com"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: URIRequestInfo uRIRequestInfo = new URIRequestInfo(uRI), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: defaultConnectionPool.matchManagedConnectionAcceptors(uRIRequestInfo), class spoon.support.reflect.code.CtInvocationImpl
invocation is: defaultConnectionPool.matchManagedConnectionAcceptors(uRIRequestInfo) target is: defaultConnectionPool method is: matchManagedConnectionAcceptors(URIRequestInfo)
source statement: org.exolab.jms.net.connector.DefaultConnectionPool(Lorg/exolab/jms/net/connector/ManagedConnectionFactory;Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Ljava/util/Map;)V callee: VariableReference: Statement 6, type org.exolab.jms.net.connector.DefaultConnectionPoolindex is: 7
Matched Method is: matchManagedConnectionAcceptors(Lorg/exolab/jms/net/connector/ConnectionRequestInfo;)Lorg/exolab/jms/net/connector/ManagedConnectionAcceptor;
TestCase is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
TCPSManagedConnectionFactory tCPSManagedConnectionFactory = new TCPSManagedConnectionFactory();
ConnectionManager connectionManager = null;
ConnectionFactory createConnectionFactory = tCPSManagedConnectionFactory.createConnectionFactory(connectionManager);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
SinglePool singlePool = new SinglePool();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, singlePool);
URIRequestInfo uRIRequestInfo = new URIRequestInfo((URI) defaultConnectionPool);
((DefaultConnectionPool) singlePool).matchManagedConnectionAcceptors(uRIRequestInfo);

statement is: org.exolab.jms.net.http.HTTPSManagedConnectionFactory()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.http.HTTPSManagedConnectionFactory
statement code is: HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory()
statement is: createConnectionFactory(Lorg/exolab/jms/net/connector/ConnectionManager;)Lorg/exolab/jms/net/connector/ConnectionFactory; type is: class org.evosuite.testcase.statements.MethodStatement return type interface org.exolab.jms.net.connector.ConnectionFactory
statement code is: ConnectionFactory createConnectionFactory = hTTPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null)
statement is: java.util.HashMap()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type java.util.HashMap<javax.management.remote.JMXPrincipal, org.exolab.jms.net.connector.ManagedConnectionHandle>
statement code is: HashMap<JMXPrincipal, ManagedConnectionHandle> hashMap = new HashMap<JMXPrincipal, ManagedConnectionHandle>()
statement is: org.exolab.jms.net.connector.DefaultConnectionPool(Lorg/exolab/jms/net/connector/ManagedConnectionFactory;Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Ljava/util/Map;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.DefaultConnectionPool
statement code is: DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool((ManagedConnectionFactory) null, (InvocationHandler) null, arg2, arg3)
test data is: HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
ConnectionFactory createConnectionFactory = hTTPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
HashMap<JMXPrincipal, ManagedConnectionHandle> hashMap = new HashMap<JMXPrincipal, ManagedConnectionHandle>();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool((ManagedConnectionFactory) null, (InvocationHandler) null, createConnectionFactory, hashMap);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
        ConnectionFactory createConnectionFactory = hTTPSManagedConnectionFactory.createConnectionFactory(new ConnectionManager());
        HashMap<JMXPrincipal, ManagedConnectionHandle> hashMap = new HashMap<>();
        DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(createConnectionFactory, new InvocationHandler(), hashMap);
    }
}
statement is: HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ConnectionFactory createConnectionFactory = hTTPSManagedConnectionFactory.createConnectionFactory(new ConnectionManager()), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: hTTPSManagedConnectionFactory.createConnectionFactory(new ConnectionManager()) target is: hTTPSManagedConnectionFactory method is: createConnectionFactory(ConnectionManager)
source statement: org.exolab.jms.net.http.HTTPSManagedConnectionFactory()V callee: VariableReference: Statement 0, type org.exolab.jms.net.http.HTTPSManagedConnectionFactoryindex is: 0
Matched Method is: createConnectionFactory(Lorg/exolab/jms/net/connector/ConnectionManager;)Lorg/exolab/jms/net/connector/ConnectionFactory;
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: HashMap<JMXPrincipal, ManagedConnectionHandle> hashMap = new HashMap<>(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(createConnectionFactory, new InvocationHandler(), hashMap), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase is: HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
ConnectionManager connectionManager = null;
hTTPSManagedConnectionFactory.createConnectionFactory(connectionManager);
HashMap<JMXPrincipal, ManagedConnectionHandle> hashMap = new HashMap<JMXPrincipal, ManagedConnectionHandle>();

statement is: org.exolab.jms.net.http.HTTPManagedConnectionFactory()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.http.HTTPManagedConnectionFactory
statement code is: HTTPManagedConnectionFactory hTTPManagedConnectionFactory = new HTTPManagedConnectionFactory()
statement is: org.exolab.jms.net.http.AbstractHTTPConnectionFactory(Ljava/lang/String;Ljava/lang/String;Lorg/exolab/jms/net/connector/ManagedConnectionFactory;Lorg/exolab/jms/net/connector/ConnectionManager;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.http.AbstractHTTPConnectionFactory
statement code is: AbstractHTTPConnectionFactory abstractHTTPConnectionFactory = new AbstractHTTPConnectionFactory((String) null, (String) null, arg2, (ConnectionManager) null)
statement is: org.exolab.jms.net.connector.DefaultConnectionPool(Lorg/exolab/jms/net/connector/ManagedConnectionFactory;Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Ljava/util/Map;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.DefaultConnectionPool
statement code is: DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(arg0, (InvocationHandler) null, arg2, (Map) null)
test data is: HTTPManagedConnectionFactory hTTPManagedConnectionFactory = new HTTPManagedConnectionFactory();
AbstractHTTPConnectionFactory abstractHTTPConnectionFactory = new AbstractHTTPConnectionFactory((String) null, (String) null, hTTPManagedConnectionFactory, (ConnectionManager) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPManagedConnectionFactory, (InvocationHandler) null, abstractHTTPConnectionFactory, (Map) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        HTTPManagedConnectionFactory hTTPManagedConnectionFactory = new HTTPManagedConnectionFactory();
        AbstractHTTPConnectionFactory abstractHTTPConnectionFactory = new AbstractHTTPConnectionFactory("https://www.example.com", "GET", hTTPManagedConnectionFactory, ((ConnectionManager) (null)));
        DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPManagedConnectionFactory, ((InvocationHandler) (null)), abstractHTTPConnectionFactory, ((Map) (null)));
    }
}
statement is: HTTPManagedConnectionFactory hTTPManagedConnectionFactory = new HTTPManagedConnectionFactory(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: AbstractHTTPConnectionFactory abstractHTTPConnectionFactory = new AbstractHTTPConnectionFactory("https://www.example.com", "GET", hTTPManagedConnectionFactory, ((ConnectionManager) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPManagedConnectionFactory, ((InvocationHandler) (null)), abstractHTTPConnectionFactory, ((Map) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase is: HTTPManagedConnectionFactory hTTPManagedConnectionFactory = new HTTPManagedConnectionFactory();
String string = "https://www.example.com";
String string = "GET";
AbstractHTTPConnectionFactory abstractHTTPConnectionFactory = new AbstractHTTPConnectionFactory(string, string, hTTPManagedConnectionFactory, (ConnectionManager) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPManagedConnectionFactory, (InvocationHandler) abstractHTTPConnectionFactory, (ConnectionFactory) string, (Map) null);

statement is: org.exolab.jms.net.tcp.TCPManagedConnectionFactory()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.tcp.TCPManagedConnectionFactory
statement code is: TCPManagedConnectionFactory tCPManagedConnectionFactory = new TCPManagedConnectionFactory()
statement is: mock(interface org.exolab.jms.net.connector.InvocationHandler) type is: class org.evosuite.testcase.statements.FunctionalMockStatement return type interface org.exolab.jms.net.connector.InvocationHandler
statement code is: InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer())
statement is: org.exolab.jms.net.connector.ContextInvocationHandler(Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Lorg/exolab/jms/net/connector/ManagedConnection;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.ContextInvocationHandler
statement code is: ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(arg0, (ConnectionFactory) null, (ManagedConnection) null)
statement is: org.apache.derby.iapi.sql.depend.ProviderList()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.apache.derby.iapi.sql.depend.ProviderList
statement code is: ProviderList providerList = new ProviderList()
statement is: org.exolab.jms.net.connector.DefaultConnectionPool(Lorg/exolab/jms/net/connector/ManagedConnectionFactory;Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Ljava/util/Map;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.DefaultConnectionPool
statement code is: DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(arg0, arg1, (ConnectionFactory) null, arg3)
test data is: TCPManagedConnectionFactory tCPManagedConnectionFactory = new TCPManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, (ConnectionFactory) null, (ManagedConnection) null);
ProviderList providerList = new ProviderList();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(tCPManagedConnectionFactory, contextInvocationHandler, (ConnectionFactory) null, providerList);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        TCPManagedConnectionFactory tCPManagedConnectionFactory = new TCPManagedConnectionFactory();
        InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
        ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, ((ConnectionFactory) (null)), ((ManagedConnection) (null)));
        ProviderList providerList = new ProviderList();
        DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(tCPManagedConnectionFactory, contextInvocationHandler, ((ConnectionFactory) (null)), providerList);
        // Improved test data:
        TCPManagedConnectionFactory tCPManagedConnectionFactory = new TCPManagedConnectionFactory("192.168.1.1", 12345);
        InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
        ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, ((ConnectionFactory) (null)), ((ManagedConnection) (null)));
        ProviderList providerList = new ProviderList("MySQL", "MSSQL");
        DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(tCPManagedConnectionFactory, contextInvocationHandler, ((ConnectionFactory) (null)), providerList);
    }
}
statement is: TCPManagedConnectionFactory tCPManagedConnectionFactory = new TCPManagedConnectionFactory(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer()), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: mock(InvocationHandler.class, new ViolatedAssumptionAnswer()) target is:  method is: mock(java.lang.Class,<unknown>)
target name is: InvocationHandler argument is: InvocationHandler.class
Matched Method is: mock(interface org.exolab.jms.net.connector.InvocationHandler)
statement is: ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, ((ConnectionFactory) (null)), ((ManagedConnection) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ProviderList providerList = new ProviderList(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(tCPManagedConnectionFactory, contextInvocationHandler, ((ConnectionFactory) (null)), providerList), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: // Improved test data:
TCPManagedConnectionFactory tCPManagedConnectionFactory = new TCPManagedConnectionFactory("192.168.1.1", 12345), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer()), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: mock(InvocationHandler.class, new ViolatedAssumptionAnswer()) target is:  method is: mock(java.lang.Class,<unknown>)
target name is: InvocationHandler argument is: InvocationHandler.class
Matched Method is: mock(interface org.exolab.jms.net.connector.InvocationHandler)
statement is: ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, ((ConnectionFactory) (null)), ((ManagedConnection) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ProviderList providerList = new ProviderList("MySQL", "MSSQL"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(tCPManagedConnectionFactory, contextInvocationHandler, ((ConnectionFactory) (null)), providerList), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase is: TCPManagedConnectionFactory tCPManagedConnectionFactory = new TCPManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, (ConnectionFactory) null, (ManagedConnection) null);
ProviderList providerList = new ProviderList();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(tCPManagedConnectionFactory, contextInvocationHandler, (ConnectionFactory) providerList, providerList);
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, (ConnectionFactory) null, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(tCPManagedConnectionFactory, contextInvocationHandler, (ConnectionFactory) providerList, providerList);

statement is: mock(interface org.exolab.jms.net.connector.InvocationHandler) type is: class org.evosuite.testcase.statements.FunctionalMockStatement return type interface org.exolab.jms.net.connector.InvocationHandler
statement code is: InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer())
statement is: org.exolab.jms.net.tcp.TCPSManagedConnectionFactory()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.tcp.TCPSManagedConnectionFactory
statement code is: TCPSManagedConnectionFactory tCPSManagedConnectionFactory = new TCPSManagedConnectionFactory()
statement is: createConnectionFactory(Lorg/exolab/jms/net/connector/ConnectionManager;)Lorg/exolab/jms/net/connector/ConnectionFactory; type is: class org.evosuite.testcase.statements.MethodStatement return type interface org.exolab.jms.net.connector.ConnectionFactory
statement code is: ConnectionFactory createConnectionFactory = tCPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null)
statement is: org.exolab.jms.net.connector.ContextInvocationHandler(Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Lorg/exolab/jms/net/connector/ManagedConnection;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.ContextInvocationHandler
statement code is: ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(arg0, arg1, (ManagedConnection) null)
statement is: org.apache.derby.impl.services.locks.SinglePool()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.apache.derby.impl.services.locks.SinglePool
statement code is: SinglePool singlePool = new SinglePool()
statement is: org.exolab.jms.net.connector.DefaultConnectionPool(Lorg/exolab/jms/net/connector/ManagedConnectionFactory;Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Ljava/util/Map;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.DefaultConnectionPool
statement code is: DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(arg0, arg1, arg2, arg3)
statement is: org.exolab.jms.net.uri.URI()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.uri.URI
statement code is: URI uRI = new URI()
statement is: org.exolab.jms.net.connector.URIRequestInfo(Lorg/exolab/jms/net/uri/URI;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.URIRequestInfo
statement code is: URIRequestInfo uRIRequestInfo = new URIRequestInfo(arg0)
statement is: matchManagedConnections(Ljava/security/Principal;Lorg/exolab/jms/net/connector/ConnectionRequestInfo;)Lorg/exolab/jms/net/connector/ManagedConnection; type is: class org.evosuite.testcase.statements.MethodStatement return type interface org.exolab.jms.net.connector.ManagedConnection
statement code is: ManagedConnection matchManagedConnections = defaultConnectionPool.matchManagedConnections((Principal) null, arg1)
test data is: InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
TCPSManagedConnectionFactory tCPSManagedConnectionFactory = new TCPSManagedConnectionFactory();
ConnectionFactory createConnectionFactory = tCPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
SinglePool singlePool = new SinglePool();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(tCPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, singlePool);
URI uRI = new URI();
URIRequestInfo uRIRequestInfo = new URIRequestInfo(uRI);
defaultConnectionPool.matchManagedConnections((Principal) null, uRIRequestInfo);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
        TCPSManagedConnectionFactory tCPSManagedConnectionFactory = new TCPSManagedConnectionFactory();
        ConnectionFactory createConnectionFactory = tCPSManagedConnectionFactory.createConnectionFactory(((ConnectionManager) (null)));
        ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, ((ManagedConnection) (null)));
        SinglePool singlePool = new SinglePool();
        DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(tCPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, singlePool);
        URI uRI = new URI("http://localhost:8080");// using a more descriptive and representative value for the URI

        URIRequestInfo uRIRequestInfo = new URIRequestInfo(uRI);
        defaultConnectionPool.matchManagedConnections(((Principal) (null)), uRIRequestInfo);
    }
}
statement is: InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer()), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: mock(InvocationHandler.class, new ViolatedAssumptionAnswer()) target is:  method is: mock(java.lang.Class,<unknown>)
target name is: InvocationHandler argument is: InvocationHandler.class
Matched Method is: mock(interface org.exolab.jms.net.connector.InvocationHandler)
statement is: TCPSManagedConnectionFactory tCPSManagedConnectionFactory = new TCPSManagedConnectionFactory(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ConnectionFactory createConnectionFactory = tCPSManagedConnectionFactory.createConnectionFactory(((ConnectionManager) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: tCPSManagedConnectionFactory.createConnectionFactory(((ConnectionManager) (null))) target is: tCPSManagedConnectionFactory method is: createConnectionFactory(ConnectionManager)
source statement: org.exolab.jms.net.tcp.TCPSManagedConnectionFactory()V callee: VariableReference: Statement 1, type org.exolab.jms.net.tcp.TCPSManagedConnectionFactoryindex is: 1
Matched Method is: createConnectionFactory(Lorg/exolab/jms/net/connector/ConnectionManager;)Lorg/exolab/jms/net/connector/ConnectionFactory;
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, ((ManagedConnection) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: SinglePool singlePool = new SinglePool(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(tCPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, singlePool), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: URI uRI = new URI("http://localhost:8080")// using a more descriptive and representative value for the URI
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: URIRequestInfo uRIRequestInfo = new URIRequestInfo(uRI), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: defaultConnectionPool.matchManagedConnections(((Principal) (null)), uRIRequestInfo), class spoon.support.reflect.code.CtInvocationImpl
invocation is: defaultConnectionPool.matchManagedConnections(((Principal) (null)), uRIRequestInfo) target is: defaultConnectionPool method is: matchManagedConnections(Principal,URIRequestInfo)
source statement: org.exolab.jms.net.connector.DefaultConnectionPool(Lorg/exolab/jms/net/connector/ManagedConnectionFactory;Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Ljava/util/Map;)V callee: VariableReference: Statement 5, type org.exolab.jms.net.connector.DefaultConnectionPoolindex is: 6
Matched Method is: matchManagedConnections(Ljava/security/Principal;Lorg/exolab/jms/net/connector/ConnectionRequestInfo;)Lorg/exolab/jms/net/connector/ManagedConnection;
i 1 Parameters size() 1 Num of Method Parameters: 2
TestCase is: InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
TCPSManagedConnectionFactory tCPSManagedConnectionFactory = new TCPSManagedConnectionFactory();
ConnectionManager connectionManager = null;
ConnectionFactory createConnectionFactory = tCPSManagedConnectionFactory.createConnectionFactory(connectionManager);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
SinglePool singlePool = new SinglePool();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(tCPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, singlePool);
URIRequestInfo uRIRequestInfo = new URIRequestInfo((URI) defaultConnectionPool);
URIRequestInfo uRIRequestInfo = null;
((DefaultConnectionPool) singlePool).matchManagedConnections((Principal) uRIRequestInfo, uRIRequestInfo);

statement is: mock(interface org.exolab.jms.net.connector.InvocationHandler) type is: class org.evosuite.testcase.statements.FunctionalMockStatement return type interface org.exolab.jms.net.connector.InvocationHandler
statement code is: InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer())
statement is: org.exolab.jms.net.tcp.TCPSManagedConnectionFactory()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.tcp.TCPSManagedConnectionFactory
statement code is: TCPSManagedConnectionFactory tCPSManagedConnectionFactory = new TCPSManagedConnectionFactory()
statement is: createConnectionFactory(Lorg/exolab/jms/net/connector/ConnectionManager;)Lorg/exolab/jms/net/connector/ConnectionFactory; type is: class org.evosuite.testcase.statements.MethodStatement return type interface org.exolab.jms.net.connector.ConnectionFactory
statement code is: ConnectionFactory createConnectionFactory = tCPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null)
statement is: org.exolab.jms.net.connector.ContextInvocationHandler(Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Lorg/exolab/jms/net/connector/ManagedConnection;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.ContextInvocationHandler
statement code is: ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(arg0, arg1, (ManagedConnection) null)
statement is: org.apache.derby.impl.services.locks.SinglePool()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.apache.derby.impl.services.locks.SinglePool
statement code is: SinglePool singlePool = new SinglePool()
statement is: org.exolab.jms.net.connector.DefaultConnectionPool(Lorg/exolab/jms/net/connector/ManagedConnectionFactory;Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Ljava/util/Map;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.DefaultConnectionPool
statement code is: DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(arg0, arg1, arg2, arg3)
statement is: closed(Lorg/exolab/jms/net/connector/ManagedConnection;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: defaultConnectionPool.closed((ManagedConnection) null)
test data is: InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
TCPSManagedConnectionFactory tCPSManagedConnectionFactory = new TCPSManagedConnectionFactory();
ConnectionFactory createConnectionFactory = tCPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
SinglePool singlePool = new SinglePool();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(tCPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, singlePool);
defaultConnectionPool.closed((ManagedConnection) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
        TCPSManagedConnectionFactory tCPSManagedConnectionFactory = new TCPSManagedConnectionFactory();
        ConnectionFactory createConnectionFactory = tCPSManagedConnectionFactory.createConnectionFactory(((ConnectionManager) (null)));
        ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, ((ManagedConnection) (null)));
        SinglePool singlePool = new SinglePool();
        DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(tCPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, singlePool);
        defaultConnectionPool.closed(((ManagedConnection) (null)));
        improved version;
        the test;
        the we;
        used more;
        descriptive values;
        the variables;
    }
}
statement is: InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer()), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: mock(InvocationHandler.class, new ViolatedAssumptionAnswer()) target is:  method is: mock(java.lang.Class,<unknown>)
target name is: InvocationHandler argument is: InvocationHandler.class
Matched Method is: mock(interface org.exolab.jms.net.connector.InvocationHandler)
statement is: TCPSManagedConnectionFactory tCPSManagedConnectionFactory = new TCPSManagedConnectionFactory(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ConnectionFactory createConnectionFactory = tCPSManagedConnectionFactory.createConnectionFactory(((ConnectionManager) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: tCPSManagedConnectionFactory.createConnectionFactory(((ConnectionManager) (null))) target is: tCPSManagedConnectionFactory method is: createConnectionFactory(ConnectionManager)
source statement: org.exolab.jms.net.tcp.TCPSManagedConnectionFactory()V callee: VariableReference: Statement 1, type org.exolab.jms.net.tcp.TCPSManagedConnectionFactoryindex is: 1
Matched Method is: createConnectionFactory(Lorg/exolab/jms/net/connector/ConnectionManager;)Lorg/exolab/jms/net/connector/ConnectionFactory;
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, ((ManagedConnection) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: SinglePool singlePool = new SinglePool(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(tCPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, singlePool), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: defaultConnectionPool.closed(((ManagedConnection) (null))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: defaultConnectionPool.closed(((ManagedConnection) (null))) target is: defaultConnectionPool method is: closed(ManagedConnection)
source statement: org.exolab.jms.net.connector.DefaultConnectionPool(Lorg/exolab/jms/net/connector/ManagedConnectionFactory;Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Ljava/util/Map;)V callee: VariableReference: Statement 5, type org.exolab.jms.net.connector.DefaultConnectionPoolindex is: 6
Matched Method is: closed(Lorg/exolab/jms/net/connector/ManagedConnection;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: improved version, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: the test, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: the we, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: used more, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: descriptive values, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: the variables, class spoon.support.reflect.code.CtLocalVariableImpl
TestCase is: InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
TCPSManagedConnectionFactory tCPSManagedConnectionFactory = new TCPSManagedConnectionFactory();
ConnectionManager connectionManager = null;
ConnectionFactory createConnectionFactory = tCPSManagedConnectionFactory.createConnectionFactory(connectionManager);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
SinglePool singlePool = new SinglePool();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(tCPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, singlePool);
ManagedConnection managedConnection = null;
((DefaultConnectionPool) singlePool).closed(managedConnection);

statement is: org.exolab.jms.net.vm.VMManagedConnectionFactory()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.vm.VMManagedConnectionFactory
statement code is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory()
statement is: mock(interface org.exolab.jms.net.connector.InvocationHandler) type is: class org.evosuite.testcase.statements.FunctionalMockStatement return type interface org.exolab.jms.net.connector.InvocationHandler
statement code is: InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer())
statement is: org.exolab.jms.net.tcp.TCPSManagedConnectionFactory()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.tcp.TCPSManagedConnectionFactory
statement code is: TCPSManagedConnectionFactory tCPSManagedConnectionFactory = new TCPSManagedConnectionFactory()
statement is: createConnectionFactory(Lorg/exolab/jms/net/connector/ConnectionManager;)Lorg/exolab/jms/net/connector/ConnectionFactory; type is: class org.evosuite.testcase.statements.MethodStatement return type interface org.exolab.jms.net.connector.ConnectionFactory
statement code is: ConnectionFactory createConnectionFactory = tCPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null)
statement is: org.exolab.jms.net.connector.ContextInvocationHandler(Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Lorg/exolab/jms/net/connector/ManagedConnection;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.ContextInvocationHandler
statement code is: ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(arg0, arg1, (ManagedConnection) null)
statement is: org.apache.derby.impl.services.locks.SinglePool()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.apache.derby.impl.services.locks.SinglePool
statement code is: SinglePool singlePool = new SinglePool()
statement is: org.exolab.jms.net.connector.DefaultConnectionPool(Lorg/exolab/jms/net/connector/ManagedConnectionFactory;Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Ljava/util/Map;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.DefaultConnectionPool
statement code is: DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(arg0, arg1, arg2, arg3)
statement is: normalClose()Lorg/apache/derby/iapi/error/StandardException; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.apache.derby.iapi.error.StandardException
statement code is: StandardException normalClose = StandardException.normalClose()
statement is: java.sql.SQLException(Ljava/lang/String;Ljava/lang/String;ILjava/lang/Throwable;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.sql.SQLException
statement code is: SQLException sQLException = new SQLException("yFz%e?:g", "yFz%e?:g", 658, arg3)
statement is: error(Lorg/exolab/jms/net/connector/ManagedConnection;Ljava/lang/Throwable;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: defaultConnectionPool.error((ManagedConnection) null, (Throwable) arg1)
test data is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
TCPSManagedConnectionFactory tCPSManagedConnectionFactory = new TCPSManagedConnectionFactory();
ConnectionFactory createConnectionFactory = tCPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
SinglePool singlePool = new SinglePool();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, singlePool);
StandardException normalClose = StandardException.normalClose();
SQLException sQLException = new SQLException("yFz%e?:g", "yFz%e?:g", 658, normalClose);
defaultConnectionPool.error((ManagedConnection) null, (Throwable) sQLException);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
        InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
        TCPSManagedConnectionFactory tCPSManagedConnectionFactory = new TCPSManagedConnectionFactory();
        ConnectionFactory createConnectionFactory = tCPSManagedConnectionFactory.createConnectionFactory(((ConnectionManager) (null)));
        ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, ((ManagedConnection) (null)));
        SinglePool singlePool = new SinglePool();
        DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, singlePool);
        StandardException normalClose = StandardException.normalClose();
        SQLException sQLException = new SQLException("Database connection error", "yFz%e?:g", 658, normalClose);
        defaultConnectionPool.error(((ManagedConnection) (null)), ((Throwable) (sQLException)));
    }
}
statement is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer()), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: mock(InvocationHandler.class, new ViolatedAssumptionAnswer()) target is:  method is: mock(java.lang.Class,<unknown>)
target name is: InvocationHandler argument is: InvocationHandler.class
Matched Method is: mock(interface org.exolab.jms.net.connector.InvocationHandler)
statement is: TCPSManagedConnectionFactory tCPSManagedConnectionFactory = new TCPSManagedConnectionFactory(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ConnectionFactory createConnectionFactory = tCPSManagedConnectionFactory.createConnectionFactory(((ConnectionManager) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: tCPSManagedConnectionFactory.createConnectionFactory(((ConnectionManager) (null))) target is: tCPSManagedConnectionFactory method is: createConnectionFactory(ConnectionManager)
source statement: org.exolab.jms.net.tcp.TCPSManagedConnectionFactory()V callee: VariableReference: Statement 2, type org.exolab.jms.net.tcp.TCPSManagedConnectionFactoryindex is: 2
Matched Method is: createConnectionFactory(Lorg/exolab/jms/net/connector/ConnectionManager;)Lorg/exolab/jms/net/connector/ConnectionFactory;
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, ((ManagedConnection) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: SinglePool singlePool = new SinglePool(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, singlePool), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: StandardException normalClose = StandardException.normalClose(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: StandardException.normalClose() target is: StandardException method is: normalClose()
Matched Method is: normalClose()Lorg/apache/derby/iapi/error/StandardException;
statement is: SQLException sQLException = new SQLException("Database connection error", "yFz%e?:g", 658, normalClose), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: defaultConnectionPool.error(((ManagedConnection) (null)), ((Throwable) (sQLException))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: defaultConnectionPool.error(((ManagedConnection) (null)), ((Throwable) (sQLException))) target is: defaultConnectionPool method is: error(ManagedConnection,java.lang.Throwable)
source statement: org.exolab.jms.net.connector.DefaultConnectionPool(Lorg/exolab/jms/net/connector/ManagedConnectionFactory;Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Ljava/util/Map;)V callee: VariableReference: Statement 6, type org.exolab.jms.net.connector.DefaultConnectionPoolindex is: 7
Matched Method is: error(Lorg/exolab/jms/net/connector/ManagedConnection;Ljava/lang/Throwable;)V
i 1 Parameters size() 1 Num of Method Parameters: 2
TestCase is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
TCPSManagedConnectionFactory tCPSManagedConnectionFactory = new TCPSManagedConnectionFactory();
ConnectionManager connectionManager = null;
ConnectionFactory createConnectionFactory = tCPSManagedConnectionFactory.createConnectionFactory(connectionManager);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
SinglePool singlePool = new SinglePool();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, singlePool);
StandardException normalClose = StandardException.normalClose();
String string = "Database connection error";
String string = "yFz%e?:g";
int _int = 658;
SQLException sQLException = new SQLException(string, string, _int, normalClose);
SQLException sQLException = null;
((DefaultConnectionPool) singlePool).error((ManagedConnection) sQLException, (Throwable) sQLException);

statement is: mock(interface org.exolab.jms.net.connector.InvocationHandler) type is: class org.evosuite.testcase.statements.FunctionalMockStatement return type interface org.exolab.jms.net.connector.InvocationHandler
statement code is: InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer())
statement is: org.exolab.jms.net.tcp.TCPSManagedConnectionFactory()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.tcp.TCPSManagedConnectionFactory
statement code is: TCPSManagedConnectionFactory tCPSManagedConnectionFactory = new TCPSManagedConnectionFactory()
statement is: createConnectionFactory(Lorg/exolab/jms/net/connector/ConnectionManager;)Lorg/exolab/jms/net/connector/ConnectionFactory; type is: class org.evosuite.testcase.statements.MethodStatement return type interface org.exolab.jms.net.connector.ConnectionFactory
statement code is: ConnectionFactory createConnectionFactory = tCPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null)
statement is: org.exolab.jms.net.connector.DefaultConnectionPool(Lorg/exolab/jms/net/connector/ManagedConnectionFactory;Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Ljava/util/Map;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.DefaultConnectionPool
statement code is: DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(arg0, arg1, arg2, (Map) null)
statement is: pinged(Lorg/exolab/jms/net/connector/ManagedConnection;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: defaultConnectionPool.pinged((ManagedConnection) null)
test data is: InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
TCPSManagedConnectionFactory tCPSManagedConnectionFactory = new TCPSManagedConnectionFactory();
ConnectionFactory createConnectionFactory = tCPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(tCPSManagedConnectionFactory, invocationHandler, createConnectionFactory, (Map) null);
defaultConnectionPool.pinged((ManagedConnection) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
        TCPSManagedConnectionFactory tCPSManagedConnectionFactory = new TCPSManagedConnectionFactory();
        ConnectionFactory createConnectionFactory = tCPSManagedConnectionFactory.createConnectionFactory(((ConnectionManager) (null)));
        DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(tCPSManagedConnectionFactory, invocationHandler, createConnectionFactory, ((Map) (null)));
        defaultConnectionPool.pinged(((ManagedConnection) (mock(ManagedConnection.class))));
    }
}
statement is: InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer()), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: mock(InvocationHandler.class, new ViolatedAssumptionAnswer()) target is:  method is: mock(java.lang.Class,<unknown>)
target name is: InvocationHandler argument is: InvocationHandler.class
Matched Method is: mock(interface org.exolab.jms.net.connector.InvocationHandler)
statement is: TCPSManagedConnectionFactory tCPSManagedConnectionFactory = new TCPSManagedConnectionFactory(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ConnectionFactory createConnectionFactory = tCPSManagedConnectionFactory.createConnectionFactory(((ConnectionManager) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: tCPSManagedConnectionFactory.createConnectionFactory(((ConnectionManager) (null))) target is: tCPSManagedConnectionFactory method is: createConnectionFactory(ConnectionManager)
source statement: org.exolab.jms.net.tcp.TCPSManagedConnectionFactory()V callee: VariableReference: Statement 1, type org.exolab.jms.net.tcp.TCPSManagedConnectionFactoryindex is: 1
Matched Method is: createConnectionFactory(Lorg/exolab/jms/net/connector/ConnectionManager;)Lorg/exolab/jms/net/connector/ConnectionFactory;
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(tCPSManagedConnectionFactory, invocationHandler, createConnectionFactory, ((Map) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: defaultConnectionPool.pinged(((ManagedConnection) (mock(ManagedConnection.class)))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: defaultConnectionPool.pinged(((ManagedConnection) (mock(ManagedConnection.class)))) target is: defaultConnectionPool method is: pinged(ManagedConnection)
source statement: org.exolab.jms.net.connector.DefaultConnectionPool(Lorg/exolab/jms/net/connector/ManagedConnectionFactory;Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Ljava/util/Map;)V callee: VariableReference: Statement 3, type org.exolab.jms.net.connector.DefaultConnectionPoolindex is: 4
Matched Method is: pinged(Lorg/exolab/jms/net/connector/ManagedConnection;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
TestCase is: InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
TCPSManagedConnectionFactory tCPSManagedConnectionFactory = new TCPSManagedConnectionFactory();
ConnectionManager connectionManager = null;
ConnectionFactory createConnectionFactory = tCPSManagedConnectionFactory.createConnectionFactory(connectionManager);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(tCPSManagedConnectionFactory, invocationHandler, createConnectionFactory, (Map) null);
ManagedConnection managedConnection = null;
((DefaultConnectionPool) createConnectionFactory).pinged(managedConnection);

statement is: org.apache.derby.impl.services.locks.SinglePool()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.apache.derby.impl.services.locks.SinglePool
statement code is: SinglePool singlePool = new SinglePool()
statement is: org.exolab.jms.net.http.HTTPManagedConnectionFactory()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.http.HTTPManagedConnectionFactory
statement code is: HTTPManagedConnectionFactory hTTPManagedConnectionFactory = new HTTPManagedConnectionFactory()
statement is: createConnectionFactory(Lorg/exolab/jms/net/connector/ConnectionManager;)Lorg/exolab/jms/net/connector/ConnectionFactory; type is: class org.evosuite.testcase.statements.MethodStatement return type interface org.exolab.jms.net.connector.ConnectionFactory
statement code is: ConnectionFactory createConnectionFactory = hTTPManagedConnectionFactory.createConnectionFactory((ConnectionManager) null)
statement is: org.exolab.jms.net.connector.ContextInvocationHandler(Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Lorg/exolab/jms/net/connector/ManagedConnection;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.ContextInvocationHandler
statement code is: ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler((InvocationHandler) null, arg1, (ManagedConnection) null)
statement is: org.exolab.jms.net.connector.DefaultConnectionPool(Lorg/exolab/jms/net/connector/ManagedConnectionFactory;Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Ljava/util/Map;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.DefaultConnectionPool
statement code is: DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(arg0, arg1, arg2, arg3)
statement is: close()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: defaultConnectionPool.close()
test data is: SinglePool singlePool = new SinglePool();
HTTPManagedConnectionFactory hTTPManagedConnectionFactory = new HTTPManagedConnectionFactory();
ConnectionFactory createConnectionFactory = hTTPManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler((InvocationHandler) null, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, singlePool);
defaultConnectionPool.close();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        SinglePool singlePool = new SinglePool(10);
        HTTPManagedConnectionFactory hTTPManagedConnectionFactory = new HTTPManagedConnectionFactory("custom-connection-factory", "http://localhost:8080");
        ConnectionFactory createConnectionFactory = hTTPManagedConnectionFactory.createConnectionFactory(new MockConnectionManager());
        ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(new MyCustomInvocationHandler(), createConnectionFactory, new MyCustomManagedConnection());
        DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, singlePool);
        defaultConnectionPool.disconnect();
    }
}
statement is: SinglePool singlePool = new SinglePool(10), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: HTTPManagedConnectionFactory hTTPManagedConnectionFactory = new HTTPManagedConnectionFactory("custom-connection-factory", "http://localhost:8080"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ConnectionFactory createConnectionFactory = hTTPManagedConnectionFactory.createConnectionFactory(new MockConnectionManager()), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: hTTPManagedConnectionFactory.createConnectionFactory(new MockConnectionManager()) target is: hTTPManagedConnectionFactory method is: createConnectionFactory(MockConnectionManager)
statement is: ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(new MyCustomInvocationHandler(), createConnectionFactory, new MyCustomManagedConnection()), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: org.exolab.jms.net.connector.ContextInvocationHandler(Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Lorg/exolab/jms/net/connector/ManagedConnection;)V
statement is: DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, singlePool), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: org.exolab.jms.net.connector.DefaultConnectionPool(Lorg/exolab/jms/net/connector/ManagedConnectionFactory;Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Ljava/util/Map;)V
statement is: defaultConnectionPool.disconnect(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: defaultConnectionPool.disconnect() target is: defaultConnectionPool method is: disconnect()
statement is: org.exolab.jms.net.vm.VMManagedConnectionFactory()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.vm.VMManagedConnectionFactory
statement code is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory()
statement is: mock(interface org.exolab.jms.net.connector.InvocationHandler) type is: class org.evosuite.testcase.statements.FunctionalMockStatement return type interface org.exolab.jms.net.connector.InvocationHandler
statement code is: InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer())
statement is: org.exolab.jms.net.tcp.TCPSManagedConnectionFactory()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.tcp.TCPSManagedConnectionFactory
statement code is: TCPSManagedConnectionFactory tCPSManagedConnectionFactory = new TCPSManagedConnectionFactory()
statement is: createConnectionFactory(Lorg/exolab/jms/net/connector/ConnectionManager;)Lorg/exolab/jms/net/connector/ConnectionFactory; type is: class org.evosuite.testcase.statements.MethodStatement return type interface org.exolab.jms.net.connector.ConnectionFactory
statement code is: ConnectionFactory createConnectionFactory = tCPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null)
statement is: org.exolab.jms.net.connector.ContextInvocationHandler(Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Lorg/exolab/jms/net/connector/ManagedConnection;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.ContextInvocationHandler
statement code is: ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(arg0, arg1, (ManagedConnection) null)
statement is: org.apache.derby.impl.services.locks.SinglePool()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.apache.derby.impl.services.locks.SinglePool
statement code is: SinglePool singlePool = new SinglePool()
statement is: org.exolab.jms.net.connector.DefaultConnectionPool(Lorg/exolab/jms/net/connector/ManagedConnectionFactory;Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Ljava/util/Map;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.DefaultConnectionPool
statement code is: DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(arg0, arg1, arg2, arg3)
statement is: org.exolab.jms.net.connector.ManagedConnectionHandle(Lorg/exolab/jms/net/connector/DefaultConnectionPool;Lorg/exolab/jms/net/connector/ManagedConnection;Lorg/exolab/jms/net/connector/ConnectionFactory;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.ManagedConnectionHandle
statement code is: ManagedConnectionHandle managedConnectionHandle = new ManagedConnectionHandle(arg0, (ManagedConnection) null, arg2)
statement is: idle(Lorg/exolab/jms/net/connector/ManagedConnectionHandle;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: defaultConnectionPool.idle(arg0)
test data is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
TCPSManagedConnectionFactory tCPSManagedConnectionFactory = new TCPSManagedConnectionFactory();
ConnectionFactory createConnectionFactory = tCPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
SinglePool singlePool = new SinglePool();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, singlePool);
ManagedConnectionHandle managedConnectionHandle = new ManagedConnectionHandle(defaultConnectionPool, (ManagedConnection) null, createConnectionFactory);
defaultConnectionPool.idle(managedConnectionHandle);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
        InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
        TCPSManagedConnectionFactory tCPSManagedConnectionFactory = new TCPSManagedConnectionFactory();
        ConnectionFactory createConnectionFactory = tCPSManagedConnectionFactory.createConnectionFactory(((ConnectionManager) (null)));
        ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, ((ManagedConnection) (null)));
        SinglePool singlePool = new SinglePool();
        DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, singlePool);
        ManagedConnectionHandle managedConnectionHandle = new ManagedConnectionHandle(defaultConnectionPool, ((ManagedConnection) (null)), createConnectionFactory);
        defaultConnectionPool.idle(managedConnectionHandle);
    }
}
statement is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer()), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: mock(InvocationHandler.class, new ViolatedAssumptionAnswer()) target is:  method is: mock(java.lang.Class,<unknown>)
target name is: InvocationHandler argument is: InvocationHandler.class
Matched Method is: mock(interface org.exolab.jms.net.connector.InvocationHandler)
statement is: TCPSManagedConnectionFactory tCPSManagedConnectionFactory = new TCPSManagedConnectionFactory(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ConnectionFactory createConnectionFactory = tCPSManagedConnectionFactory.createConnectionFactory(((ConnectionManager) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: tCPSManagedConnectionFactory.createConnectionFactory(((ConnectionManager) (null))) target is: tCPSManagedConnectionFactory method is: createConnectionFactory(ConnectionManager)
source statement: org.exolab.jms.net.tcp.TCPSManagedConnectionFactory()V callee: VariableReference: Statement 2, type org.exolab.jms.net.tcp.TCPSManagedConnectionFactoryindex is: 2
Matched Method is: createConnectionFactory(Lorg/exolab/jms/net/connector/ConnectionManager;)Lorg/exolab/jms/net/connector/ConnectionFactory;
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, ((ManagedConnection) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: SinglePool singlePool = new SinglePool(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, singlePool), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ManagedConnectionHandle managedConnectionHandle = new ManagedConnectionHandle(defaultConnectionPool, ((ManagedConnection) (null)), createConnectionFactory), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: defaultConnectionPool.idle(managedConnectionHandle), class spoon.support.reflect.code.CtInvocationImpl
invocation is: defaultConnectionPool.idle(managedConnectionHandle) target is: defaultConnectionPool method is: idle(ManagedConnectionHandle)
source statement: org.exolab.jms.net.connector.DefaultConnectionPool(Lorg/exolab/jms/net/connector/ManagedConnectionFactory;Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Ljava/util/Map;)V callee: VariableReference: Statement 6, type org.exolab.jms.net.connector.DefaultConnectionPoolindex is: 7
Matched Method is: idle(Lorg/exolab/jms/net/connector/ManagedConnectionHandle;)V
TestCase is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
TCPSManagedConnectionFactory tCPSManagedConnectionFactory = new TCPSManagedConnectionFactory();
ConnectionManager connectionManager = null;
ConnectionFactory createConnectionFactory = tCPSManagedConnectionFactory.createConnectionFactory(connectionManager);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
SinglePool singlePool = new SinglePool();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, singlePool);
ManagedConnectionHandle managedConnectionHandle = new ManagedConnectionHandle(defaultConnectionPool, (ManagedConnection) createConnectionFactory, (ConnectionFactory) connectionManager);
((DefaultConnectionPool) singlePool).idle(managedConnectionHandle);

statement is: org.exolab.jms.net.vm.VMManagedConnectionFactory()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.vm.VMManagedConnectionFactory
statement code is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory()
statement is: mock(interface org.exolab.jms.net.connector.InvocationHandler) type is: class org.evosuite.testcase.statements.FunctionalMockStatement return type interface org.exolab.jms.net.connector.InvocationHandler
statement code is: InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer())
statement is: org.exolab.jms.net.tcp.TCPSManagedConnectionFactory()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.tcp.TCPSManagedConnectionFactory
statement code is: TCPSManagedConnectionFactory tCPSManagedConnectionFactory = new TCPSManagedConnectionFactory()
statement is: createConnectionFactory(Lorg/exolab/jms/net/connector/ConnectionManager;)Lorg/exolab/jms/net/connector/ConnectionFactory; type is: class org.evosuite.testcase.statements.MethodStatement return type interface org.exolab.jms.net.connector.ConnectionFactory
statement code is: ConnectionFactory createConnectionFactory = tCPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null)
statement is: org.exolab.jms.net.connector.ContextInvocationHandler(Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Lorg/exolab/jms/net/connector/ManagedConnection;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.ContextInvocationHandler
statement code is: ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(arg0, arg1, (ManagedConnection) null)
statement is: org.apache.derby.impl.services.locks.SinglePool()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.apache.derby.impl.services.locks.SinglePool
statement code is: SinglePool singlePool = new SinglePool()
statement is: org.exolab.jms.net.connector.DefaultConnectionPool(Lorg/exolab/jms/net/connector/ManagedConnectionFactory;Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Ljava/util/Map;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.DefaultConnectionPool
statement code is: DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(arg0, arg1, arg2, arg3)
statement is: org.exolab.jms.net.connector.ManagedConnectionHandle(Lorg/exolab/jms/net/connector/DefaultConnectionPool;Lorg/exolab/jms/net/connector/ManagedConnection;Lorg/exolab/jms/net/connector/ConnectionFactory;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.ManagedConnectionHandle
statement code is: ManagedConnectionHandle managedConnectionHandle = new ManagedConnectionHandle(arg0, (ManagedConnection) null, arg2)
statement is: add(Lorg/exolab/jms/net/connector/ManagedConnection;Z)Lorg/exolab/jms/net/connector/ManagedConnection; type is: class org.evosuite.testcase.statements.MethodStatement return type interface org.exolab.jms.net.connector.ManagedConnection
statement code is: ManagedConnection add = defaultConnectionPool.add(arg0, false)
test data is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
TCPSManagedConnectionFactory tCPSManagedConnectionFactory = new TCPSManagedConnectionFactory();
ConnectionFactory createConnectionFactory = tCPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
SinglePool singlePool = new SinglePool();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, singlePool);
ManagedConnectionHandle managedConnectionHandle = new ManagedConnectionHandle(defaultConnectionPool, (ManagedConnection) null, createConnectionFactory);
defaultConnectionPool.add(managedConnectionHandle, false);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
        InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
        TCPSManagedConnectionFactory tCPSManagedConnectionFactory = new TCPSManagedConnectionFactory();
        ConnectionFactory createConnectionFactory = tCPSManagedConnectionFactory.createConnectionFactory(((ConnectionManager) (null)));
        ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, ((ManagedConnection) (null)));
        SinglePool singlePool = new SinglePool();
        DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, singlePool);
        ManagedConnectionHandle managedConnectionHandle = new ManagedConnectionHandle(defaultConnectionPool, ((ManagedConnection) (null)), createConnectionFactory);
        // Add a more descriptive connection handle to the pool
        defaultConnectionPool.add(managedConnectionHandle, false);
    }
}
statement is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer()), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: mock(InvocationHandler.class, new ViolatedAssumptionAnswer()) target is:  method is: mock(java.lang.Class,<unknown>)
target name is: InvocationHandler argument is: InvocationHandler.class
Matched Method is: mock(interface org.exolab.jms.net.connector.InvocationHandler)
statement is: TCPSManagedConnectionFactory tCPSManagedConnectionFactory = new TCPSManagedConnectionFactory(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ConnectionFactory createConnectionFactory = tCPSManagedConnectionFactory.createConnectionFactory(((ConnectionManager) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: tCPSManagedConnectionFactory.createConnectionFactory(((ConnectionManager) (null))) target is: tCPSManagedConnectionFactory method is: createConnectionFactory(ConnectionManager)
source statement: org.exolab.jms.net.tcp.TCPSManagedConnectionFactory()V callee: VariableReference: Statement 2, type org.exolab.jms.net.tcp.TCPSManagedConnectionFactoryindex is: 2
Matched Method is: createConnectionFactory(Lorg/exolab/jms/net/connector/ConnectionManager;)Lorg/exolab/jms/net/connector/ConnectionFactory;
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, ((ManagedConnection) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: SinglePool singlePool = new SinglePool(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, singlePool), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ManagedConnectionHandle managedConnectionHandle = new ManagedConnectionHandle(defaultConnectionPool, ((ManagedConnection) (null)), createConnectionFactory), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: // Add a more descriptive connection handle to the pool
defaultConnectionPool.add(managedConnectionHandle, false), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Add a more descriptive connection handle to the pool
defaultConnectionPool.add(managedConnectionHandle, false) target is: defaultConnectionPool method is: add(ManagedConnectionHandle,boolean)
source statement: org.exolab.jms.net.connector.DefaultConnectionPool(Lorg/exolab/jms/net/connector/ManagedConnectionFactory;Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Ljava/util/Map;)V callee: VariableReference: Statement 6, type org.exolab.jms.net.connector.DefaultConnectionPoolindex is: 7
Matched Method is: add(Lorg/exolab/jms/net/connector/ManagedConnection;Z)Lorg/exolab/jms/net/connector/ManagedConnection;
TestCase is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
TCPSManagedConnectionFactory tCPSManagedConnectionFactory = new TCPSManagedConnectionFactory();
ConnectionManager connectionManager = null;
ConnectionFactory createConnectionFactory = tCPSManagedConnectionFactory.createConnectionFactory(connectionManager);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
SinglePool singlePool = new SinglePool();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, singlePool);
ManagedConnectionHandle managedConnectionHandle = new ManagedConnectionHandle(defaultConnectionPool, (ManagedConnection) createConnectionFactory, (ConnectionFactory) connectionManager);
boolean _boolean = false;
((DefaultConnectionPool) singlePool).add(managedConnectionHandle, _boolean);

statement is: mock(interface org.exolab.jms.net.connector.InvocationHandler) type is: class org.evosuite.testcase.statements.FunctionalMockStatement return type interface org.exolab.jms.net.connector.InvocationHandler
statement code is: InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer())
statement is: org.exolab.jms.net.tcp.TCPSManagedConnectionFactory()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.tcp.TCPSManagedConnectionFactory
statement code is: TCPSManagedConnectionFactory tCPSManagedConnectionFactory = new TCPSManagedConnectionFactory()
statement is: createConnectionFactory(Lorg/exolab/jms/net/connector/ConnectionManager;)Lorg/exolab/jms/net/connector/ConnectionFactory; type is: class org.evosuite.testcase.statements.MethodStatement return type interface org.exolab.jms.net.connector.ConnectionFactory
statement code is: ConnectionFactory createConnectionFactory = tCPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null)
statement is: org.exolab.jms.net.connector.ContextInvocationHandler(Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Lorg/exolab/jms/net/connector/ManagedConnection;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.ContextInvocationHandler
statement code is: ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(arg0, arg1, (ManagedConnection) null)
statement is: org.apache.derby.impl.services.locks.SinglePool()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.apache.derby.impl.services.locks.SinglePool
statement code is: SinglePool singlePool = new SinglePool()
statement is: org.exolab.jms.net.connector.DefaultConnectionPool(Lorg/exolab/jms/net/connector/ManagedConnectionFactory;Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Ljava/util/Map;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.DefaultConnectionPool
statement code is: DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(arg0, arg1, arg2, arg3)
statement is: org.exolab.jms.net.uri.URI()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.uri.URI
statement code is: URI uRI = new URI()
statement is: org.exolab.jms.net.connector.URIRequestInfo(Lorg/exolab/jms/net/uri/URI;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.URIRequestInfo
statement code is: URIRequestInfo uRIRequestInfo = new URIRequestInfo(arg0)
statement is: org.exolab.jms.net.vm.VMManagedConnectionFactory()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.vm.VMManagedConnectionFactory
statement code is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory()
statement is: createManagedConnectionAcceptor(Lorg/exolab/jms/net/connector/Authenticator;Lorg/exolab/jms/net/connector/ConnectionRequestInfo;)Lorg/exolab/jms/net/connector/ManagedConnectionAcceptor; type is: class org.evosuite.testcase.statements.MethodStatement return type interface org.exolab.jms.net.connector.ManagedConnectionAcceptor
statement code is: ManagedConnectionAcceptor createManagedConnectionAcceptor = vMManagedConnectionFactory.createManagedConnectionAcceptor((Authenticator) null, arg1)
statement is: org.xml.sax.SAXParseException(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.xml.sax.SAXParseException
statement code is: SAXParseException sAXParseException = new SAXParseException("", "PydW\"T/BM", "", 0, 59)
statement is: java.sql.SQLException(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.sql.SQLException
statement code is: SQLException sQLException = new SQLException("W,|*hO}b", "", arg2)
statement is: error(Lorg/exolab/jms/net/connector/ManagedConnectionAcceptor;Ljava/lang/Throwable;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: defaultConnectionPool.error(arg0, (Throwable) arg1)
test data is: InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
TCPSManagedConnectionFactory tCPSManagedConnectionFactory = new TCPSManagedConnectionFactory();
ConnectionFactory createConnectionFactory = tCPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
SinglePool singlePool = new SinglePool();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(tCPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, singlePool);
URI uRI = new URI();
URIRequestInfo uRIRequestInfo = new URIRequestInfo(uRI);
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
ManagedConnectionAcceptor createManagedConnectionAcceptor = vMManagedConnectionFactory.createManagedConnectionAcceptor((Authenticator) null, uRIRequestInfo);
SAXParseException sAXParseException = new SAXParseException("", "PydW\"T/BM", "", 0, 59);
SQLException sQLException = new SQLException("W,|*hO}b", "", sAXParseException);
defaultConnectionPool.error(createManagedConnectionAcceptor, (Throwable) sQLException);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
        TCPSManagedConnectionFactory tCPSManagedConnectionFactory = new TCPSManagedConnectionFactory();
        ConnectionFactory createConnectionFactory = tCPSManagedConnectionFactory.createConnectionFactory(((ConnectionManager) (null)));
        ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, ((ManagedConnection) (null)));
        SinglePool singlePool = new SinglePool();
        DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(tCPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, singlePool);
        URI uRI = new URI("https://example.com");
        URIRequestInfo uRIRequestInfo = new URIRequestInfo(uRI);
        VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
        ManagedConnectionAcceptor createManagedConnectionAcceptor = vMManagedConnectionFactory.createManagedConnectionAcceptor(((Authenticator) (null)), uRIRequestInfo);
        SQLException sQLException = new SQLException("Invalid URL", "", null);
        defaultConnectionPool.error(createManagedConnectionAcceptor, ((Throwable) (sQLException)));
    }
}
statement is: InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer()), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: mock(InvocationHandler.class, new ViolatedAssumptionAnswer()) target is:  method is: mock(java.lang.Class,<unknown>)
target name is: InvocationHandler argument is: InvocationHandler.class
Matched Method is: mock(interface org.exolab.jms.net.connector.InvocationHandler)
statement is: TCPSManagedConnectionFactory tCPSManagedConnectionFactory = new TCPSManagedConnectionFactory(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ConnectionFactory createConnectionFactory = tCPSManagedConnectionFactory.createConnectionFactory(((ConnectionManager) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: tCPSManagedConnectionFactory.createConnectionFactory(((ConnectionManager) (null))) target is: tCPSManagedConnectionFactory method is: createConnectionFactory(ConnectionManager)
source statement: org.exolab.jms.net.tcp.TCPSManagedConnectionFactory()V callee: VariableReference: Statement 1, type org.exolab.jms.net.tcp.TCPSManagedConnectionFactoryindex is: 1
Matched Method is: createConnectionFactory(Lorg/exolab/jms/net/connector/ConnectionManager;)Lorg/exolab/jms/net/connector/ConnectionFactory;
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, ((ManagedConnection) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: SinglePool singlePool = new SinglePool(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(tCPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, singlePool), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: URI uRI = new URI("https://example.com"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: URIRequestInfo uRIRequestInfo = new URIRequestInfo(uRI), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ManagedConnectionAcceptor createManagedConnectionAcceptor = vMManagedConnectionFactory.createManagedConnectionAcceptor(((Authenticator) (null)), uRIRequestInfo), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: vMManagedConnectionFactory.createManagedConnectionAcceptor(((Authenticator) (null)), uRIRequestInfo) target is: vMManagedConnectionFactory method is: createManagedConnectionAcceptor(Authenticator,URIRequestInfo)
source statement: org.exolab.jms.net.vm.VMManagedConnectionFactory()V callee: VariableReference: Statement 8, type org.exolab.jms.net.vm.VMManagedConnectionFactoryindex is: 8
Matched Method is: createManagedConnectionAcceptor(Lorg/exolab/jms/net/connector/Authenticator;Lorg/exolab/jms/net/connector/ConnectionRequestInfo;)Lorg/exolab/jms/net/connector/ManagedConnectionAcceptor;
i 1 Parameters size() 1 Num of Method Parameters: 2
statement is: SQLException sQLException = new SQLException("Invalid URL", "", null), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: defaultConnectionPool.error(createManagedConnectionAcceptor, ((Throwable) (sQLException))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: defaultConnectionPool.error(createManagedConnectionAcceptor, ((Throwable) (sQLException))) target is: defaultConnectionPool method is: error(ManagedConnectionAcceptor,java.lang.Throwable)
source statement: org.exolab.jms.net.connector.DefaultConnectionPool(Lorg/exolab/jms/net/connector/ManagedConnectionFactory;Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Ljava/util/Map;)V callee: VariableReference: Statement 5, type org.exolab.jms.net.connector.DefaultConnectionPoolindex is: 6
Matched Method is: error(Lorg/exolab/jms/net/connector/ManagedConnectionAcceptor;Ljava/lang/Throwable;)V
TestCase is: InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
TCPSManagedConnectionFactory tCPSManagedConnectionFactory = new TCPSManagedConnectionFactory();
ConnectionManager connectionManager = null;
ConnectionFactory createConnectionFactory = tCPSManagedConnectionFactory.createConnectionFactory(connectionManager);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
SinglePool singlePool = new SinglePool();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(tCPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, singlePool);
URIRequestInfo uRIRequestInfo = new URIRequestInfo((URI) defaultConnectionPool);
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
URIRequestInfo uRIRequestInfo = null;
ManagedConnectionAcceptor createManagedConnectionAcceptor = vMManagedConnectionFactory.createManagedConnectionAcceptor((Authenticator) uRIRequestInfo, uRIRequestInfo);
String string = "Invalid URL";
String string = "";
SQLException sQLException = new SQLException(string, string, (Throwable) createManagedConnectionAcceptor);
((DefaultConnectionPool) singlePool).error(createManagedConnectionAcceptor, (Throwable) sQLException);

statement is: org.apache.derby.impl.services.locks.SinglePool()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.apache.derby.impl.services.locks.SinglePool
statement code is: SinglePool singlePool = new SinglePool()
statement is: org.exolab.jms.net.http.HTTPSManagedConnectionFactory()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.http.HTTPSManagedConnectionFactory
statement code is: HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory()
statement is: org.exolab.jms.net.rmi.RMIManagedConnectionFactory()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.rmi.RMIManagedConnectionFactory
statement code is: RMIManagedConnectionFactory rMIManagedConnectionFactory = new RMIManagedConnectionFactory()
statement is: createConnectionFactory(Lorg/exolab/jms/net/connector/ConnectionManager;)Lorg/exolab/jms/net/connector/ConnectionFactory; type is: class org.evosuite.testcase.statements.MethodStatement return type interface org.exolab.jms.net.connector.ConnectionFactory
statement code is: ConnectionFactory createConnectionFactory = rMIManagedConnectionFactory.createConnectionFactory((ConnectionManager) null)
statement is: org.exolab.jms.net.connector.ContextInvocationHandler(Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Lorg/exolab/jms/net/connector/ManagedConnection;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.ContextInvocationHandler
statement code is: ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler((InvocationHandler) null, arg1, (ManagedConnection) null)
statement is: org.exolab.jms.net.connector.DefaultConnectionPool(Lorg/exolab/jms/net/connector/ManagedConnectionFactory;Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Ljava/util/Map;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.DefaultConnectionPool
statement code is: DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(arg0, arg1, arg2, arg3)
statement is: remove(Lorg/exolab/jms/net/connector/ManagedConnection;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: defaultConnectionPool.remove((ManagedConnection) null)
test data is: SinglePool singlePool = new SinglePool();
HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
RMIManagedConnectionFactory rMIManagedConnectionFactory = new RMIManagedConnectionFactory();
ConnectionFactory createConnectionFactory = rMIManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler((InvocationHandler) null, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, singlePool);
defaultConnectionPool.remove((ManagedConnection) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        SinglePool singlePool = new SinglePool();
        HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
        RMIManagedConnectionFactory rMIManagedConnectionFactory = new RMIManagedConnectionFactory();
        // Improved code:
        // Change the primitive values and Strings to more descriptive examples.
        ConnectionFactory createConnectionFactory = rMIManagedConnectionFactory.createConnectionFactory(((ConnectionManager) (null)));
        ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(((InvocationHandler) (null)), createConnectionFactory, ((ManagedConnection) (null)));
        // Improved test data:
        // Use more descriptive examples for the ConnectionManager and ManagedConnection parameters.
        DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, singlePool);
        defaultConnectionPool.remove(((ManagedConnection) (null)));
    }
}
statement is: SinglePool singlePool = new SinglePool(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: RMIManagedConnectionFactory rMIManagedConnectionFactory = new RMIManagedConnectionFactory(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: // Improved code:
// Change the primitive values and Strings to more descriptive examples.
ConnectionFactory createConnectionFactory = rMIManagedConnectionFactory.createConnectionFactory(((ConnectionManager) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: rMIManagedConnectionFactory.createConnectionFactory(((ConnectionManager) (null))) target is: rMIManagedConnectionFactory method is: createConnectionFactory(ConnectionManager)
source statement: org.exolab.jms.net.rmi.RMIManagedConnectionFactory()V callee: VariableReference: Statement 2, type org.exolab.jms.net.rmi.RMIManagedConnectionFactoryindex is: 2
Matched Method is: createConnectionFactory(Lorg/exolab/jms/net/connector/ConnectionManager;)Lorg/exolab/jms/net/connector/ConnectionFactory;
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(((InvocationHandler) (null)), createConnectionFactory, ((ManagedConnection) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: // Improved test data:
// Use more descriptive examples for the ConnectionManager and ManagedConnection parameters.
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, singlePool), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: defaultConnectionPool.remove(((ManagedConnection) (null))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: defaultConnectionPool.remove(((ManagedConnection) (null))) target is: defaultConnectionPool method is: remove(ManagedConnection)
source statement: org.exolab.jms.net.connector.DefaultConnectionPool(Lorg/exolab/jms/net/connector/ManagedConnectionFactory;Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Ljava/util/Map;)V callee: VariableReference: Statement 5, type org.exolab.jms.net.connector.DefaultConnectionPoolindex is: 6
Matched Method is: remove(Lorg/exolab/jms/net/connector/ManagedConnection;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
TestCase is: SinglePool singlePool = new SinglePool();
HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
RMIManagedConnectionFactory rMIManagedConnectionFactory = new RMIManagedConnectionFactory();
ConnectionManager connectionManager = null;
ConnectionFactory createConnectionFactory = rMIManagedConnectionFactory.createConnectionFactory(connectionManager);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler((InvocationHandler) createConnectionFactory, (ConnectionFactory) connectionManager, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, singlePool);
ManagedConnection managedConnection = null;
((DefaultConnectionPool) contextInvocationHandler).remove(managedConnection);

* test suite isTestSuite: 35
Test 0: 
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
TCPSManagedConnectionFactory tCPSManagedConnectionFactory = new TCPSManagedConnectionFactory();
ConnectionFactory createConnectionFactory = tCPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
SinglePool singlePool = new SinglePool();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(tCPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, singlePool);
defaultConnectionPool.getManagedConnectionAcceptorListener();
Test 1: 
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
TCPSManagedConnectionFactory tCPSManagedConnectionFactory = new TCPSManagedConnectionFactory();
SinglePool singlePool = new SinglePool();
ConnectionFactory createConnectionFactory = tCPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(tCPSManagedConnectionFactory, invocationHandler, createConnectionFactory, singlePool);
// Undeclared exception!
try { 
  defaultConnectionPool.accepted((ManagedConnectionAcceptor) null, (ManagedConnection) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.exolab.jms.net.connector.DefaultConnectionPool", e);
}

Test 2: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
TCPSManagedConnectionFactory tCPSManagedConnectionFactory = new TCPSManagedConnectionFactory();
ConnectionFactory createConnectionFactory = tCPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
SinglePool singlePool = new SinglePool();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, singlePool);
defaultConnectionPool.setCallerListener((CallerListener) null);
Test 3: 
TCPManagedConnectionFactory tCPManagedConnectionFactory = new TCPManagedConnectionFactory();
TCPSManagedConnectionFactory tCPSManagedConnectionFactory = new TCPSManagedConnectionFactory();
ConnectionFactory createConnectionFactory = tCPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
JMXPrincipal jMXPrincipal = new JMXPrincipal("");
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler((InvocationHandler) null, createConnectionFactory, (ManagedConnection) null);
Hashtable<JMXPrincipal, ManagedConnectionHandle> hashtable = new Hashtable<JMXPrincipal, ManagedConnectionHandle>();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(tCPManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, hashtable);
try { 
  defaultConnectionPool.createManagedConnection(jMXPrincipal, (ConnectionRequestInfo) null);
  fail("Expecting exception: Exception");

} catch(Exception e) {
   //
   // Argument 'info' must be of type org.exolab.jms.net.socket.SocketRequestInfo
   //
   verifyException("org.exolab.jms.net.tcp.TCPManagedConnectionFactory", e);
}

Test 4: 
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
TCPSManagedConnectionFactory tCPSManagedConnectionFactory = new TCPSManagedConnectionFactory();
ConnectionFactory createConnectionFactory = tCPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
SinglePool singlePool = new SinglePool();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(tCPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, singlePool);
URI uRI = new URI();
URIRequestInfo uRIRequestInfo = new URIRequestInfo(uRI);
try { 
  defaultConnectionPool.createManagedConnectionAcceptor((Authenticator) null, uRIRequestInfo);
  fail("Expecting exception: Exception");

} catch(Exception e) {
   //
   // Argument 'info' must be of type org.exolab.jms.net.tcp.TCPSRequestInfo
   //
   verifyException("org.exolab.jms.net.tcp.TCPSManagedConnectionFactory", e);
}

Test 5: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
TCPSManagedConnectionFactory tCPSManagedConnectionFactory = new TCPSManagedConnectionFactory();
ConnectionFactory createConnectionFactory = tCPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
SinglePool singlePool = new SinglePool();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, singlePool);
URI uRI = new URI();
URIRequestInfo uRIRequestInfo = new URIRequestInfo(uRI);
defaultConnectionPool.matchManagedConnectionAcceptors(uRIRequestInfo);
Test 6: 
HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
ConnectionFactory createConnectionFactory = hTTPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
HashMap<JMXPrincipal, ManagedConnectionHandle> hashMap = new HashMap<JMXPrincipal, ManagedConnectionHandle>();
DefaultConnectionPool defaultConnectionPool = null;
try {
  defaultConnectionPool = new DefaultConnectionPool((ManagedConnectionFactory) null, (InvocationHandler) null, createConnectionFactory, hashMap);
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // Argument 'factory' is null
   //
   verifyException("org.exolab.jms.net.connector.DefaultConnectionPool", e);
}

Test 7: 
HTTPManagedConnectionFactory hTTPManagedConnectionFactory = new HTTPManagedConnectionFactory();
AbstractHTTPConnectionFactory abstractHTTPConnectionFactory = new AbstractHTTPConnectionFactory((String) null, (String) null, hTTPManagedConnectionFactory, (ConnectionManager) null);
DefaultConnectionPool defaultConnectionPool = null;
try {
  defaultConnectionPool = new DefaultConnectionPool(hTTPManagedConnectionFactory, (InvocationHandler) null, abstractHTTPConnectionFactory, (Map) null);
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // Argument 'handler' is null
   //
   verifyException("org.exolab.jms.net.connector.DefaultConnectionPool", e);
}

Test 8: 
TCPManagedConnectionFactory tCPManagedConnectionFactory = new TCPManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, (ConnectionFactory) null, (ManagedConnection) null);
ProviderList providerList = new ProviderList();
DefaultConnectionPool defaultConnectionPool = null;
try {
  defaultConnectionPool = new DefaultConnectionPool(tCPManagedConnectionFactory, contextInvocationHandler, (ConnectionFactory) null, providerList);
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // Argument 'resolver' is null
   //
   verifyException("org.exolab.jms.net.connector.DefaultConnectionPool", e);
}

Test 9: 
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
TCPSManagedConnectionFactory tCPSManagedConnectionFactory = new TCPSManagedConnectionFactory();
ConnectionFactory createConnectionFactory = tCPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
SinglePool singlePool = new SinglePool();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(tCPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, singlePool);
URI uRI = new URI();
URIRequestInfo uRIRequestInfo = new URIRequestInfo(uRI);
defaultConnectionPool.matchManagedConnections((Principal) null, uRIRequestInfo);
Test 10: 
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
TCPSManagedConnectionFactory tCPSManagedConnectionFactory = new TCPSManagedConnectionFactory();
ConnectionFactory createConnectionFactory = tCPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
SinglePool singlePool = new SinglePool();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(tCPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, singlePool);
defaultConnectionPool.closed((ManagedConnection) null);
Test 11: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
TCPSManagedConnectionFactory tCPSManagedConnectionFactory = new TCPSManagedConnectionFactory();
ConnectionFactory createConnectionFactory = tCPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
SinglePool singlePool = new SinglePool();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, singlePool);
StandardException normalClose = StandardException.normalClose();
SQLException sQLException = new SQLException("yFz%e?:g", "yFz%e?:g", 658, normalClose);
defaultConnectionPool.error((ManagedConnection) null, (Throwable) sQLException);
Test 12: 
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
TCPSManagedConnectionFactory tCPSManagedConnectionFactory = new TCPSManagedConnectionFactory();
ConnectionFactory createConnectionFactory = tCPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(tCPSManagedConnectionFactory, invocationHandler, createConnectionFactory, (Map) null);
defaultConnectionPool.pinged((ManagedConnection) null);
Test 13: 
SinglePool singlePool = new SinglePool();
HTTPManagedConnectionFactory hTTPManagedConnectionFactory = new HTTPManagedConnectionFactory();
ConnectionFactory createConnectionFactory = hTTPManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler((InvocationHandler) null, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, singlePool);
defaultConnectionPool.close();
Test 14: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
TCPSManagedConnectionFactory tCPSManagedConnectionFactory = new TCPSManagedConnectionFactory();
ConnectionFactory createConnectionFactory = tCPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
SinglePool singlePool = new SinglePool();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, singlePool);
ManagedConnectionHandle managedConnectionHandle = new ManagedConnectionHandle(defaultConnectionPool, (ManagedConnection) null, createConnectionFactory);
defaultConnectionPool.idle(managedConnectionHandle);
Test 15: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
TCPSManagedConnectionFactory tCPSManagedConnectionFactory = new TCPSManagedConnectionFactory();
ConnectionFactory createConnectionFactory = tCPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
SinglePool singlePool = new SinglePool();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, singlePool);
ManagedConnectionHandle managedConnectionHandle = new ManagedConnectionHandle(defaultConnectionPool, (ManagedConnection) null, createConnectionFactory);
// Undeclared exception!
try { 
  defaultConnectionPool.add(managedConnectionHandle, false);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.exolab.jms.net.connector.ManagedConnectionHandle", e);
}

Test 16: 
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
TCPSManagedConnectionFactory tCPSManagedConnectionFactory = new TCPSManagedConnectionFactory();
ConnectionFactory createConnectionFactory = tCPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
SinglePool singlePool = new SinglePool();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(tCPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, singlePool);
URI uRI = new URI();
URIRequestInfo uRIRequestInfo = new URIRequestInfo(uRI);
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
ManagedConnectionAcceptor createManagedConnectionAcceptor = vMManagedConnectionFactory.createManagedConnectionAcceptor((Authenticator) null, uRIRequestInfo);
SAXParseException sAXParseException = new SAXParseException("", "PydW\"T/BM", "", 0, 59);
SQLException sQLException = new SQLException("W,|*hO}b", "", sAXParseException);
defaultConnectionPool.error(createManagedConnectionAcceptor, (Throwable) sQLException);
Test 17: 
SinglePool singlePool = new SinglePool();
HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
RMIManagedConnectionFactory rMIManagedConnectionFactory = new RMIManagedConnectionFactory();
ConnectionFactory createConnectionFactory = rMIManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler((InvocationHandler) null, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, singlePool);
defaultConnectionPool.remove((ManagedConnection) null);
Test 18: 
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
TCPSManagedConnectionFactory tCPSManagedConnectionFactory = new TCPSManagedConnectionFactory();
ConnectionFactory createConnectionFactory = tCPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
SinglePool singlePool = new SinglePool();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(tCPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, singlePool);
((DefaultConnectionPool) singlePool).getManagedConnectionAcceptorListener();

Test 19: 
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
TCPSManagedConnectionFactory tCPSManagedConnectionFactory = new TCPSManagedConnectionFactory();
SinglePool singlePool = new SinglePool();
ConnectionFactory createConnectionFactory = tCPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(tCPSManagedConnectionFactory, invocationHandler, createConnectionFactory, singlePool);
((DefaultConnectionPool) createConnectionFactory).accepted((ManagedConnectionAcceptor) null, (ManagedConnection) null);

Test 20: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
TCPSManagedConnectionFactory tCPSManagedConnectionFactory = new TCPSManagedConnectionFactory();
ConnectionFactory createConnectionFactory = tCPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
SinglePool singlePool = new SinglePool();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, singlePool);
((DefaultConnectionPool) singlePool).setCallerListener((CallerListener) null);

Test 21: 
JMXPrincipal jMXPrincipal = new JMXPrincipal("jmx-user");
Hashtable<JMXPrincipal, ManagedConnectionHandle> hashtable = new Hashtable<JMXPrincipal, ManagedConnectionHandle>();

Test 22: 
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
TCPSManagedConnectionFactory tCPSManagedConnectionFactory = new TCPSManagedConnectionFactory();
ConnectionFactory createConnectionFactory = tCPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
SinglePool singlePool = new SinglePool();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(tCPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, singlePool);
URIRequestInfo uRIRequestInfo = new URIRequestInfo((URI) defaultConnectionPool);
URIRequestInfo uRIRequestInfo = null;
((DefaultConnectionPool) singlePool).createManagedConnectionAcceptor((Authenticator) uRIRequestInfo, uRIRequestInfo);

Test 23: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
TCPSManagedConnectionFactory tCPSManagedConnectionFactory = new TCPSManagedConnectionFactory();
ConnectionFactory createConnectionFactory = tCPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
SinglePool singlePool = new SinglePool();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, singlePool);
URIRequestInfo uRIRequestInfo = new URIRequestInfo((URI) defaultConnectionPool);
((DefaultConnectionPool) singlePool).matchManagedConnectionAcceptors(uRIRequestInfo);

Test 24: 
HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
hTTPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
HashMap<JMXPrincipal, ManagedConnectionHandle> hashMap = new HashMap<JMXPrincipal, ManagedConnectionHandle>();

Test 25: 
HTTPManagedConnectionFactory hTTPManagedConnectionFactory = new HTTPManagedConnectionFactory();
AbstractHTTPConnectionFactory abstractHTTPConnectionFactory = new AbstractHTTPConnectionFactory("https://www.example.com", "GET", hTTPManagedConnectionFactory, (ConnectionManager) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPManagedConnectionFactory, (InvocationHandler) abstractHTTPConnectionFactory, (ConnectionFactory) "https://www.example.com", (Map) null);

Test 26: 
TCPManagedConnectionFactory tCPManagedConnectionFactory = new TCPManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, (ConnectionFactory) null, (ManagedConnection) null);
ProviderList providerList = new ProviderList();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(tCPManagedConnectionFactory, contextInvocationHandler, (ConnectionFactory) providerList, providerList);
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, (ConnectionFactory) null, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(tCPManagedConnectionFactory, contextInvocationHandler, (ConnectionFactory) providerList, providerList);

Test 27: 
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
TCPSManagedConnectionFactory tCPSManagedConnectionFactory = new TCPSManagedConnectionFactory();
ConnectionFactory createConnectionFactory = tCPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
SinglePool singlePool = new SinglePool();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(tCPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, singlePool);
URIRequestInfo uRIRequestInfo = new URIRequestInfo((URI) defaultConnectionPool);
URIRequestInfo uRIRequestInfo = null;
((DefaultConnectionPool) singlePool).matchManagedConnections((Principal) uRIRequestInfo, uRIRequestInfo);

Test 28: 
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
TCPSManagedConnectionFactory tCPSManagedConnectionFactory = new TCPSManagedConnectionFactory();
ConnectionFactory createConnectionFactory = tCPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
SinglePool singlePool = new SinglePool();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(tCPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, singlePool);
((DefaultConnectionPool) singlePool).closed((ManagedConnection) null);

Test 29: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
TCPSManagedConnectionFactory tCPSManagedConnectionFactory = new TCPSManagedConnectionFactory();
ConnectionFactory createConnectionFactory = tCPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
SinglePool singlePool = new SinglePool();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, singlePool);
StandardException normalClose = StandardException.normalClose();
SQLException sQLException = new SQLException("Database connection error", "yFz%e?:g", 658, normalClose);
((DefaultConnectionPool) singlePool).error((ManagedConnection) sQLException, (Throwable) null);

Test 30: 
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
TCPSManagedConnectionFactory tCPSManagedConnectionFactory = new TCPSManagedConnectionFactory();
ConnectionFactory createConnectionFactory = tCPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(tCPSManagedConnectionFactory, invocationHandler, createConnectionFactory, (Map) null);
((DefaultConnectionPool) createConnectionFactory).pinged((ManagedConnection) null);

Test 31: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
TCPSManagedConnectionFactory tCPSManagedConnectionFactory = new TCPSManagedConnectionFactory();
ConnectionFactory createConnectionFactory = tCPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
SinglePool singlePool = new SinglePool();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, singlePool);
ManagedConnectionHandle managedConnectionHandle = new ManagedConnectionHandle(defaultConnectionPool, (ManagedConnection) createConnectionFactory, (ConnectionFactory) null);
((DefaultConnectionPool) singlePool).idle(managedConnectionHandle);

Test 32: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
TCPSManagedConnectionFactory tCPSManagedConnectionFactory = new TCPSManagedConnectionFactory();
ConnectionFactory createConnectionFactory = tCPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
SinglePool singlePool = new SinglePool();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, singlePool);
ManagedConnectionHandle managedConnectionHandle = new ManagedConnectionHandle(defaultConnectionPool, (ManagedConnection) createConnectionFactory, (ConnectionFactory) null);
boolean _boolean = false;
((DefaultConnectionPool) singlePool).add(managedConnectionHandle, _boolean);

Test 33: 
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
TCPSManagedConnectionFactory tCPSManagedConnectionFactory = new TCPSManagedConnectionFactory();
ConnectionFactory createConnectionFactory = tCPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
SinglePool singlePool = new SinglePool();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(tCPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, singlePool);
URIRequestInfo uRIRequestInfo = new URIRequestInfo((URI) defaultConnectionPool);
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
URIRequestInfo uRIRequestInfo = null;
ManagedConnectionAcceptor createManagedConnectionAcceptor = vMManagedConnectionFactory.createManagedConnectionAcceptor((Authenticator) uRIRequestInfo, uRIRequestInfo);
String string = "Invalid URL";
String string = "";
SQLException sQLException = new SQLException(string, string, (Throwable) createManagedConnectionAcceptor);
((DefaultConnectionPool) singlePool).error(createManagedConnectionAcceptor, (Throwable) sQLException);

Test 34: 
SinglePool singlePool = new SinglePool();
HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
RMIManagedConnectionFactory rMIManagedConnectionFactory = new RMIManagedConnectionFactory();
ConnectionFactory createConnectionFactory = rMIManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler((InvocationHandler) createConnectionFactory, (ConnectionFactory) null, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, singlePool);
ManagedConnection managedConnection = null;
((DefaultConnectionPool) contextInvocationHandler).remove(managedConnection);


* Generated after the refinement and before minimization 35 tests with total length 262
* test suite isTestSuite: 35
Test 0: 
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
TCPSManagedConnectionFactory tCPSManagedConnectionFactory = new TCPSManagedConnectionFactory();
ConnectionFactory createConnectionFactory = tCPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
SinglePool singlePool = new SinglePool();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(tCPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, singlePool);
defaultConnectionPool.getManagedConnectionAcceptorListener();
Test 1: 
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
TCPSManagedConnectionFactory tCPSManagedConnectionFactory = new TCPSManagedConnectionFactory();
SinglePool singlePool = new SinglePool();
ConnectionFactory createConnectionFactory = tCPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(tCPSManagedConnectionFactory, invocationHandler, createConnectionFactory, singlePool);
// Undeclared exception!
try { 
  defaultConnectionPool.accepted((ManagedConnectionAcceptor) null, (ManagedConnection) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.exolab.jms.net.connector.DefaultConnectionPool", e);
}

Test 2: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
TCPSManagedConnectionFactory tCPSManagedConnectionFactory = new TCPSManagedConnectionFactory();
ConnectionFactory createConnectionFactory = tCPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
SinglePool singlePool = new SinglePool();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, singlePool);
defaultConnectionPool.setCallerListener((CallerListener) null);
Test 3: 
TCPManagedConnectionFactory tCPManagedConnectionFactory = new TCPManagedConnectionFactory();
TCPSManagedConnectionFactory tCPSManagedConnectionFactory = new TCPSManagedConnectionFactory();
ConnectionFactory createConnectionFactory = tCPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
JMXPrincipal jMXPrincipal = new JMXPrincipal("");
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler((InvocationHandler) null, createConnectionFactory, (ManagedConnection) null);
Hashtable<JMXPrincipal, ManagedConnectionHandle> hashtable = new Hashtable<JMXPrincipal, ManagedConnectionHandle>();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(tCPManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, hashtable);
try { 
  defaultConnectionPool.createManagedConnection(jMXPrincipal, (ConnectionRequestInfo) null);
  fail("Expecting exception: Exception");

} catch(Exception e) {
   //
   // Argument 'info' must be of type org.exolab.jms.net.socket.SocketRequestInfo
   //
   verifyException("org.exolab.jms.net.tcp.TCPManagedConnectionFactory", e);
}

Test 4: 
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
TCPSManagedConnectionFactory tCPSManagedConnectionFactory = new TCPSManagedConnectionFactory();
ConnectionFactory createConnectionFactory = tCPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
SinglePool singlePool = new SinglePool();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(tCPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, singlePool);
URI uRI = new URI();
URIRequestInfo uRIRequestInfo = new URIRequestInfo(uRI);
try { 
  defaultConnectionPool.createManagedConnectionAcceptor((Authenticator) null, uRIRequestInfo);
  fail("Expecting exception: Exception");

} catch(Exception e) {
   //
   // Argument 'info' must be of type org.exolab.jms.net.tcp.TCPSRequestInfo
   //
   verifyException("org.exolab.jms.net.tcp.TCPSManagedConnectionFactory", e);
}

Test 5: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
TCPSManagedConnectionFactory tCPSManagedConnectionFactory = new TCPSManagedConnectionFactory();
ConnectionFactory createConnectionFactory = tCPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
SinglePool singlePool = new SinglePool();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, singlePool);
URI uRI = new URI();
URIRequestInfo uRIRequestInfo = new URIRequestInfo(uRI);
defaultConnectionPool.matchManagedConnectionAcceptors(uRIRequestInfo);
Test 6: 
HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
ConnectionFactory createConnectionFactory = hTTPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
HashMap<JMXPrincipal, ManagedConnectionHandle> hashMap = new HashMap<JMXPrincipal, ManagedConnectionHandle>();
DefaultConnectionPool defaultConnectionPool = null;
try {
  defaultConnectionPool = new DefaultConnectionPool((ManagedConnectionFactory) null, (InvocationHandler) null, createConnectionFactory, hashMap);
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // Argument 'factory' is null
   //
   verifyException("org.exolab.jms.net.connector.DefaultConnectionPool", e);
}

Test 7: 
HTTPManagedConnectionFactory hTTPManagedConnectionFactory = new HTTPManagedConnectionFactory();
AbstractHTTPConnectionFactory abstractHTTPConnectionFactory = new AbstractHTTPConnectionFactory((String) null, (String) null, hTTPManagedConnectionFactory, (ConnectionManager) null);
DefaultConnectionPool defaultConnectionPool = null;
try {
  defaultConnectionPool = new DefaultConnectionPool(hTTPManagedConnectionFactory, (InvocationHandler) null, abstractHTTPConnectionFactory, (Map) null);
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // Argument 'handler' is null
   //
   verifyException("org.exolab.jms.net.connector.DefaultConnectionPool", e);
}

Test 8: 
TCPManagedConnectionFactory tCPManagedConnectionFactory = new TCPManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, (ConnectionFactory) null, (ManagedConnection) null);
ProviderList providerList = new ProviderList();
DefaultConnectionPool defaultConnectionPool = null;
try {
  defaultConnectionPool = new DefaultConnectionPool(tCPManagedConnectionFactory, contextInvocationHandler, (ConnectionFactory) null, providerList);
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // Argument 'resolver' is null
   //
   verifyException("org.exolab.jms.net.connector.DefaultConnectionPool", e);
}

Test 9: 
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
TCPSManagedConnectionFactory tCPSManagedConnectionFactory = new TCPSManagedConnectionFactory();
ConnectionFactory createConnectionFactory = tCPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
SinglePool singlePool = new SinglePool();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(tCPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, singlePool);
URI uRI = new URI();
URIRequestInfo uRIRequestInfo = new URIRequestInfo(uRI);
defaultConnectionPool.matchManagedConnections((Principal) null, uRIRequestInfo);
Test 10: 
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
TCPSManagedConnectionFactory tCPSManagedConnectionFactory = new TCPSManagedConnectionFactory();
ConnectionFactory createConnectionFactory = tCPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
SinglePool singlePool = new SinglePool();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(tCPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, singlePool);
defaultConnectionPool.closed((ManagedConnection) null);
Test 11: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
TCPSManagedConnectionFactory tCPSManagedConnectionFactory = new TCPSManagedConnectionFactory();
ConnectionFactory createConnectionFactory = tCPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
SinglePool singlePool = new SinglePool();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, singlePool);
StandardException normalClose = StandardException.normalClose();
SQLException sQLException = new SQLException("yFz%e?:g", "yFz%e?:g", 658, normalClose);
defaultConnectionPool.error((ManagedConnection) null, (Throwable) sQLException);
Test 12: 
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
TCPSManagedConnectionFactory tCPSManagedConnectionFactory = new TCPSManagedConnectionFactory();
ConnectionFactory createConnectionFactory = tCPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(tCPSManagedConnectionFactory, invocationHandler, createConnectionFactory, (Map) null);
defaultConnectionPool.pinged((ManagedConnection) null);
Test 13: 
SinglePool singlePool = new SinglePool();
HTTPManagedConnectionFactory hTTPManagedConnectionFactory = new HTTPManagedConnectionFactory();
ConnectionFactory createConnectionFactory = hTTPManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler((InvocationHandler) null, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, singlePool);
defaultConnectionPool.close();
Test 14: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
TCPSManagedConnectionFactory tCPSManagedConnectionFactory = new TCPSManagedConnectionFactory();
ConnectionFactory createConnectionFactory = tCPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
SinglePool singlePool = new SinglePool();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, singlePool);
ManagedConnectionHandle managedConnectionHandle = new ManagedConnectionHandle(defaultConnectionPool, (ManagedConnection) null, createConnectionFactory);
defaultConnectionPool.idle(managedConnectionHandle);
Test 15: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
TCPSManagedConnectionFactory tCPSManagedConnectionFactory = new TCPSManagedConnectionFactory();
ConnectionFactory createConnectionFactory = tCPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
SinglePool singlePool = new SinglePool();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, singlePool);
ManagedConnectionHandle managedConnectionHandle = new ManagedConnectionHandle(defaultConnectionPool, (ManagedConnection) null, createConnectionFactory);
// Undeclared exception!
try { 
  defaultConnectionPool.add(managedConnectionHandle, false);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.exolab.jms.net.connector.ManagedConnectionHandle", e);
}

Test 16: 
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
TCPSManagedConnectionFactory tCPSManagedConnectionFactory = new TCPSManagedConnectionFactory();
ConnectionFactory createConnectionFactory = tCPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
SinglePool singlePool = new SinglePool();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(tCPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, singlePool);
URI uRI = new URI();
URIRequestInfo uRIRequestInfo = new URIRequestInfo(uRI);
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
ManagedConnectionAcceptor createManagedConnectionAcceptor = vMManagedConnectionFactory.createManagedConnectionAcceptor((Authenticator) null, uRIRequestInfo);
SAXParseException sAXParseException = new SAXParseException("", "PydW\"T/BM", "", 0, 59);
SQLException sQLException = new SQLException("W,|*hO}b", "", sAXParseException);
defaultConnectionPool.error(createManagedConnectionAcceptor, (Throwable) sQLException);
Test 17: 
SinglePool singlePool = new SinglePool();
HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
RMIManagedConnectionFactory rMIManagedConnectionFactory = new RMIManagedConnectionFactory();
ConnectionFactory createConnectionFactory = rMIManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler((InvocationHandler) null, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, singlePool);
defaultConnectionPool.remove((ManagedConnection) null);
Test 18: 
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
TCPSManagedConnectionFactory tCPSManagedConnectionFactory = new TCPSManagedConnectionFactory();
ConnectionFactory createConnectionFactory = tCPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
SinglePool singlePool = new SinglePool();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(tCPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, singlePool);
((DefaultConnectionPool) singlePool).getManagedConnectionAcceptorListener();

Test 19: 
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
TCPSManagedConnectionFactory tCPSManagedConnectionFactory = new TCPSManagedConnectionFactory();
SinglePool singlePool = new SinglePool();
ConnectionFactory createConnectionFactory = tCPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(tCPSManagedConnectionFactory, invocationHandler, createConnectionFactory, singlePool);
((DefaultConnectionPool) createConnectionFactory).accepted((ManagedConnectionAcceptor) null, (ManagedConnection) null);

Test 20: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
TCPSManagedConnectionFactory tCPSManagedConnectionFactory = new TCPSManagedConnectionFactory();
ConnectionFactory createConnectionFactory = tCPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
SinglePool singlePool = new SinglePool();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, singlePool);
((DefaultConnectionPool) singlePool).setCallerListener((CallerListener) null);

Test 21: 
JMXPrincipal jMXPrincipal = new JMXPrincipal("jmx-user");
Hashtable<JMXPrincipal, ManagedConnectionHandle> hashtable = new Hashtable<JMXPrincipal, ManagedConnectionHandle>();

Test 22: 
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
TCPSManagedConnectionFactory tCPSManagedConnectionFactory = new TCPSManagedConnectionFactory();
ConnectionFactory createConnectionFactory = tCPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
SinglePool singlePool = new SinglePool();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(tCPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, singlePool);
URIRequestInfo uRIRequestInfo = new URIRequestInfo((URI) defaultConnectionPool);
URIRequestInfo uRIRequestInfo = null;
((DefaultConnectionPool) singlePool).createManagedConnectionAcceptor((Authenticator) uRIRequestInfo, uRIRequestInfo);

Test 23: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
TCPSManagedConnectionFactory tCPSManagedConnectionFactory = new TCPSManagedConnectionFactory();
ConnectionFactory createConnectionFactory = tCPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
SinglePool singlePool = new SinglePool();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, singlePool);
URIRequestInfo uRIRequestInfo = new URIRequestInfo((URI) defaultConnectionPool);
((DefaultConnectionPool) singlePool).matchManagedConnectionAcceptors(uRIRequestInfo);

Test 24: 
HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
hTTPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
HashMap<JMXPrincipal, ManagedConnectionHandle> hashMap = new HashMap<JMXPrincipal, ManagedConnectionHandle>();

Test 25: 
HTTPManagedConnectionFactory hTTPManagedConnectionFactory = new HTTPManagedConnectionFactory();
AbstractHTTPConnectionFactory abstractHTTPConnectionFactory = new AbstractHTTPConnectionFactory("https://www.example.com", "GET", hTTPManagedConnectionFactory, (ConnectionManager) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPManagedConnectionFactory, (InvocationHandler) abstractHTTPConnectionFactory, (ConnectionFactory) "https://www.example.com", (Map) null);

Test 26: 
TCPManagedConnectionFactory tCPManagedConnectionFactory = new TCPManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, (ConnectionFactory) null, (ManagedConnection) null);
ProviderList providerList = new ProviderList();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(tCPManagedConnectionFactory, contextInvocationHandler, (ConnectionFactory) providerList, providerList);
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, (ConnectionFactory) null, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(tCPManagedConnectionFactory, contextInvocationHandler, (ConnectionFactory) providerList, providerList);

Test 27: 
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
TCPSManagedConnectionFactory tCPSManagedConnectionFactory = new TCPSManagedConnectionFactory();
ConnectionFactory createConnectionFactory = tCPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
SinglePool singlePool = new SinglePool();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(tCPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, singlePool);
URIRequestInfo uRIRequestInfo = new URIRequestInfo((URI) defaultConnectionPool);
URIRequestInfo uRIRequestInfo = null;
((DefaultConnectionPool) singlePool).matchManagedConnections((Principal) uRIRequestInfo, uRIRequestInfo);

Test 28: 
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
TCPSManagedConnectionFactory tCPSManagedConnectionFactory = new TCPSManagedConnectionFactory();
ConnectionFactory createConnectionFactory = tCPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
SinglePool singlePool = new SinglePool();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(tCPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, singlePool);
((DefaultConnectionPool) singlePool).closed((ManagedConnection) null);

Test 29: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
TCPSManagedConnectionFactory tCPSManagedConnectionFactory = new TCPSManagedConnectionFactory();
ConnectionFactory createConnectionFactory = tCPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
SinglePool singlePool = new SinglePool();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, singlePool);
StandardException normalClose = StandardException.normalClose();
SQLException sQLException = new SQLException("Database connection error", "yFz%e?:g", 658, normalClose);
((DefaultConnectionPool) singlePool).error((ManagedConnection) sQLException, (Throwable) null);

Test 30: 
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
TCPSManagedConnectionFactory tCPSManagedConnectionFactory = new TCPSManagedConnectionFactory();
ConnectionFactory createConnectionFactory = tCPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(tCPSManagedConnectionFactory, invocationHandler, createConnectionFactory, (Map) null);
((DefaultConnectionPool) createConnectionFactory).pinged((ManagedConnection) null);

Test 31: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
TCPSManagedConnectionFactory tCPSManagedConnectionFactory = new TCPSManagedConnectionFactory();
ConnectionFactory createConnectionFactory = tCPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
SinglePool singlePool = new SinglePool();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, singlePool);
ManagedConnectionHandle managedConnectionHandle = new ManagedConnectionHandle(defaultConnectionPool, (ManagedConnection) createConnectionFactory, (ConnectionFactory) null);
((DefaultConnectionPool) singlePool).idle(managedConnectionHandle);

Test 32: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
TCPSManagedConnectionFactory tCPSManagedConnectionFactory = new TCPSManagedConnectionFactory();
ConnectionFactory createConnectionFactory = tCPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
SinglePool singlePool = new SinglePool();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, singlePool);
ManagedConnectionHandle managedConnectionHandle = new ManagedConnectionHandle(defaultConnectionPool, (ManagedConnection) createConnectionFactory, (ConnectionFactory) null);
boolean _boolean = false;
((DefaultConnectionPool) singlePool).add(managedConnectionHandle, _boolean);

Test 33: 
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
TCPSManagedConnectionFactory tCPSManagedConnectionFactory = new TCPSManagedConnectionFactory();
ConnectionFactory createConnectionFactory = tCPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
SinglePool singlePool = new SinglePool();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(tCPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, singlePool);
URIRequestInfo uRIRequestInfo = new URIRequestInfo((URI) defaultConnectionPool);
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
URIRequestInfo uRIRequestInfo = null;
ManagedConnectionAcceptor createManagedConnectionAcceptor = vMManagedConnectionFactory.createManagedConnectionAcceptor((Authenticator) uRIRequestInfo, uRIRequestInfo);
String string = "Invalid URL";
String string = "";
SQLException sQLException = new SQLException(string, string, (Throwable) createManagedConnectionAcceptor);
((DefaultConnectionPool) singlePool).error(createManagedConnectionAcceptor, (Throwable) sQLException);

Test 34: 
SinglePool singlePool = new SinglePool();
HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
RMIManagedConnectionFactory rMIManagedConnectionFactory = new RMIManagedConnectionFactory();
ConnectionFactory createConnectionFactory = rMIManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler((InvocationHandler) createConnectionFactory, (ConnectionFactory) null, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, singlePool);
ManagedConnection managedConnection = null;
((DefaultConnectionPool) contextInvocationHandler).remove(managedConnection);


* Minimizing test suite
* test suite isTestSuite: 18
Test 0: 
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
TCPSManagedConnectionFactory tCPSManagedConnectionFactory = new TCPSManagedConnectionFactory();
ConnectionFactory createConnectionFactory = tCPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
SinglePool singlePool = new SinglePool();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(tCPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, singlePool);
defaultConnectionPool.getManagedConnectionAcceptorListener();
Test 1: 
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
TCPSManagedConnectionFactory tCPSManagedConnectionFactory = new TCPSManagedConnectionFactory();
SinglePool singlePool = new SinglePool();
ConnectionFactory createConnectionFactory = tCPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(tCPSManagedConnectionFactory, invocationHandler, createConnectionFactory, singlePool);
// Undeclared exception!
try { 
  defaultConnectionPool.accepted((ManagedConnectionAcceptor) null, (ManagedConnection) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.exolab.jms.net.connector.DefaultConnectionPool", e);
}

Test 2: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
TCPSManagedConnectionFactory tCPSManagedConnectionFactory = new TCPSManagedConnectionFactory();
ConnectionFactory createConnectionFactory = tCPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
SinglePool singlePool = new SinglePool();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, singlePool);
defaultConnectionPool.setCallerListener((CallerListener) null);
Test 3: 
TCPManagedConnectionFactory tCPManagedConnectionFactory = new TCPManagedConnectionFactory();
TCPSManagedConnectionFactory tCPSManagedConnectionFactory = new TCPSManagedConnectionFactory();
ConnectionFactory createConnectionFactory = tCPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
JMXPrincipal jMXPrincipal = new JMXPrincipal("");
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler((InvocationHandler) null, createConnectionFactory, (ManagedConnection) null);
Hashtable<JMXPrincipal, ManagedConnectionHandle> hashtable = new Hashtable<JMXPrincipal, ManagedConnectionHandle>();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(tCPManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, hashtable);
try { 
  defaultConnectionPool.createManagedConnection(jMXPrincipal, (ConnectionRequestInfo) null);
  fail("Expecting exception: Exception");

} catch(Exception e) {
   //
   // Argument 'info' must be of type org.exolab.jms.net.socket.SocketRequestInfo
   //
   verifyException("org.exolab.jms.net.tcp.TCPManagedConnectionFactory", e);
}

Test 4: 
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
TCPSManagedConnectionFactory tCPSManagedConnectionFactory = new TCPSManagedConnectionFactory();
ConnectionFactory createConnectionFactory = tCPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
SinglePool singlePool = new SinglePool();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(tCPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, singlePool);
URI uRI = new URI();
URIRequestInfo uRIRequestInfo = new URIRequestInfo(uRI);
try { 
  defaultConnectionPool.createManagedConnectionAcceptor((Authenticator) null, uRIRequestInfo);
  fail("Expecting exception: Exception");

} catch(Exception e) {
   //
   // Argument 'info' must be of type org.exolab.jms.net.tcp.TCPSRequestInfo
   //
   verifyException("org.exolab.jms.net.tcp.TCPSManagedConnectionFactory", e);
}

Test 5: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
TCPSManagedConnectionFactory tCPSManagedConnectionFactory = new TCPSManagedConnectionFactory();
ConnectionFactory createConnectionFactory = tCPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
SinglePool singlePool = new SinglePool();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, singlePool);
URI uRI = new URI();
URIRequestInfo uRIRequestInfo = new URIRequestInfo(uRI);
defaultConnectionPool.matchManagedConnectionAcceptors(uRIRequestInfo);
Test 6: 
HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
ConnectionFactory createConnectionFactory = hTTPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
HashMap<JMXPrincipal, ManagedConnectionHandle> hashMap = new HashMap<JMXPrincipal, ManagedConnectionHandle>();
DefaultConnectionPool defaultConnectionPool = null;
try {
  defaultConnectionPool = new DefaultConnectionPool((ManagedConnectionFactory) null, (InvocationHandler) null, createConnectionFactory, hashMap);
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // Argument 'factory' is null
   //
   verifyException("org.exolab.jms.net.connector.DefaultConnectionPool", e);
}

Test 7: 
HTTPManagedConnectionFactory hTTPManagedConnectionFactory = new HTTPManagedConnectionFactory();
AbstractHTTPConnectionFactory abstractHTTPConnectionFactory = new AbstractHTTPConnectionFactory((String) null, (String) null, hTTPManagedConnectionFactory, (ConnectionManager) null);
DefaultConnectionPool defaultConnectionPool = null;
try {
  defaultConnectionPool = new DefaultConnectionPool(hTTPManagedConnectionFactory, (InvocationHandler) null, abstractHTTPConnectionFactory, (Map) null);
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // Argument 'handler' is null
   //
   verifyException("org.exolab.jms.net.connector.DefaultConnectionPool", e);
}

Test 8: 
TCPManagedConnectionFactory tCPManagedConnectionFactory = new TCPManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, (ConnectionFactory) null, (ManagedConnection) null);
ProviderList providerList = new ProviderList();
DefaultConnectionPool defaultConnectionPool = null;
try {
  defaultConnectionPool = new DefaultConnectionPool(tCPManagedConnectionFactory, contextInvocationHandler, (ConnectionFactory) null, providerList);
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // Argument 'resolver' is null
   //
   verifyException("org.exolab.jms.net.connector.DefaultConnectionPool", e);
}

Test 9: 
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
TCPSManagedConnectionFactory tCPSManagedConnectionFactory = new TCPSManagedConnectionFactory();
ConnectionFactory createConnectionFactory = tCPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
SinglePool singlePool = new SinglePool();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(tCPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, singlePool);
URI uRI = new URI();
URIRequestInfo uRIRequestInfo = new URIRequestInfo(uRI);
defaultConnectionPool.matchManagedConnections((Principal) null, uRIRequestInfo);
Test 10: 
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
TCPSManagedConnectionFactory tCPSManagedConnectionFactory = new TCPSManagedConnectionFactory();
ConnectionFactory createConnectionFactory = tCPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
SinglePool singlePool = new SinglePool();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(tCPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, singlePool);
defaultConnectionPool.closed((ManagedConnection) null);
Test 11: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
TCPSManagedConnectionFactory tCPSManagedConnectionFactory = new TCPSManagedConnectionFactory();
ConnectionFactory createConnectionFactory = tCPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
SinglePool singlePool = new SinglePool();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, singlePool);
StandardException normalClose = StandardException.normalClose();
SQLException sQLException = new SQLException("yFz%e?:g", "yFz%e?:g", 658, normalClose);
defaultConnectionPool.error((ManagedConnection) null, (Throwable) sQLException);
Test 12: 
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
TCPSManagedConnectionFactory tCPSManagedConnectionFactory = new TCPSManagedConnectionFactory();
ConnectionFactory createConnectionFactory = tCPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(tCPSManagedConnectionFactory, invocationHandler, createConnectionFactory, (Map) null);
defaultConnectionPool.pinged((ManagedConnection) null);
Test 13: 
SinglePool singlePool = new SinglePool();
HTTPManagedConnectionFactory hTTPManagedConnectionFactory = new HTTPManagedConnectionFactory();
ConnectionFactory createConnectionFactory = hTTPManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler((InvocationHandler) null, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, singlePool);
defaultConnectionPool.close();
Test 14: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
TCPSManagedConnectionFactory tCPSManagedConnectionFactory = new TCPSManagedConnectionFactory();
ConnectionFactory createConnectionFactory = tCPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
SinglePool singlePool = new SinglePool();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, singlePool);
ManagedConnectionHandle managedConnectionHandle = new ManagedConnectionHandle(defaultConnectionPool, (ManagedConnection) null, createConnectionFactory);
defaultConnectionPool.idle(managedConnectionHandle);
Test 15: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
TCPSManagedConnectionFactory tCPSManagedConnectionFactory = new TCPSManagedConnectionFactory();
ConnectionFactory createConnectionFactory = tCPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
SinglePool singlePool = new SinglePool();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, singlePool);
ManagedConnectionHandle managedConnectionHandle = new ManagedConnectionHandle(defaultConnectionPool, (ManagedConnection) null, createConnectionFactory);
// Undeclared exception!
try { 
  defaultConnectionPool.add(managedConnectionHandle, false);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.exolab.jms.net.connector.ManagedConnectionHandle", e);
}

Test 16: 
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
TCPSManagedConnectionFactory tCPSManagedConnectionFactory = new TCPSManagedConnectionFactory();
ConnectionFactory createConnectionFactory = tCPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
SinglePool singlePool = new SinglePool();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(tCPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, singlePool);
URI uRI = new URI();
URIRequestInfo uRIRequestInfo = new URIRequestInfo(uRI);
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
ManagedConnectionAcceptor createManagedConnectionAcceptor = vMManagedConnectionFactory.createManagedConnectionAcceptor((Authenticator) null, uRIRequestInfo);
SAXParseException sAXParseException = new SAXParseException("", "PydW\"T/BM", "", 0, 59);
SQLException sQLException = new SQLException("W,|*hO}b", "", sAXParseException);
defaultConnectionPool.error(createManagedConnectionAcceptor, (Throwable) sQLException);
Test 17: 
SinglePool singlePool = new SinglePool();
HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
RMIManagedConnectionFactory rMIManagedConnectionFactory = new RMIManagedConnectionFactory();
ConnectionFactory createConnectionFactory = rMIManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler((InvocationHandler) null, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, singlePool);
defaultConnectionPool.remove((ManagedConnection) null);

* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 29%
* Total number of goals: 99
* Number of covered goals: 29
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 43%
* Total number of goals: 214
* Number of covered goals: 91
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 25%
* Total number of goals: 12
* Number of covered goals: 3
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 89%
* Total number of goals: 18
* Number of covered goals: 16
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 29%
* Total number of goals: 99
* Number of covered goals: 29
* Generated 18 tests with total length 135
* Resulting test suite's coverage: 42% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 8%
* Compiling and checking tests
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: InvocationHandler arg1 = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
TCPSManagedConnectionFactory arg0 = new TCPSManagedConnectionFactory();
SinglePool arg3 = new SinglePool();
ConnectionFactory arg2 = arg0.createConnectionFactory((ConnectionManager) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(arg0, arg1, arg2, arg3);
// Undeclared exception!
try { 
  defaultConnectionPool.accepted((ManagedConnectionAcceptor) null, (ManagedConnection) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.exolab.jms.net.connector.DefaultConnectionPool", e);
}


** It was a parseable test case! 
refined test name is: testAcceptedWithNullArgumentThrowsNPE
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
ConnectionFactory arg2 = hTTPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
HashMap<JMXPrincipal, ManagedConnectionHandle> arg3 = new HashMap<JMXPrincipal, ManagedConnectionHandle>();
DefaultConnectionPool defaultConnectionPool = null;
try {
  defaultConnectionPool = new DefaultConnectionPool((ManagedConnectionFactory) null, (InvocationHandler) null, arg2, arg3);
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // Argument 'factory' is null
   //
   verifyException("org.exolab.jms.net.connector.DefaultConnectionPool", e);
}


** It was a parseable test case! 
refined test name is: testCreateWithNullManagedConnectionHandles
* Compiling Tests
refined test name is: testCreateConnectionPoolWithNullManagedConnections
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: HTTPManagedConnectionFactory arg0 = new HTTPManagedConnectionFactory();
AbstractHTTPConnectionFactory arg2 = new AbstractHTTPConnectionFactory((String) null, (String) null, arg0, (ConnectionManager) null);
DefaultConnectionPool defaultConnectionPool = null;
try {
  defaultConnectionPool = new DefaultConnectionPool(arg0, (InvocationHandler) null, arg2, (Map) null);
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // Argument 'handler' is null
   //
   verifyException("org.exolab.jms.net.connector.DefaultConnectionPool", e);
}


** It was a parseable test case! 
refined test name is: testNullHandlerThrowsIllegalArgumentException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: InvocationHandler arg1 = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
TCPSManagedConnectionFactory arg0 = new TCPSManagedConnectionFactory();
ConnectionFactory arg2 = arg0.createConnectionFactory((ConnectionManager) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(arg0, arg1, arg2, (Map) null);
defaultConnectionPool.pinged((ManagedConnection) null);

** It was a parseable test case! 
refined test name is: testPingNullManagedConnection
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: SinglePool arg3 = new SinglePool();
HTTPManagedConnectionFactory arg0 = new HTTPManagedConnectionFactory();
ConnectionFactory arg2 = arg0.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler arg1 = new ContextInvocationHandler((InvocationHandler) null, arg2, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(arg0, arg1, arg2, arg3);
defaultConnectionPool.close();

** It was a parseable test case! 
refined test name is: testDefaultConnectionPoolCreationAndClose
* Compiling Tests
refined test name is: testDefaultConnectionPoolCreationAndClose
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: SinglePool arg3 = new SinglePool();
HTTPSManagedConnectionFactory arg0 = new HTTPSManagedConnectionFactory();
RMIManagedConnectionFactory rMIManagedConnectionFactory = new RMIManagedConnectionFactory();
ConnectionFactory arg2 = rMIManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler arg1 = new ContextInvocationHandler((InvocationHandler) null, arg2, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(arg0, arg1, arg2, arg3);
defaultConnectionPool.remove((ManagedConnection) null);

** It was a parseable test case! 
refined test name is: testRemoveManagedConnectionFromPool
* Compiling Tests
refined test name is: testRemoveManagedConnectionFromPool
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 16:46:26.565 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar8138471825904388202.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:46:26.586 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8138471825904388202.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 16:46:26.643 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar8138471825904388202.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:46:26.644 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8138471825904388202.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 16:46:26.700 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar8138471825904388202.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:46:26.701 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8138471825904388202.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 16:46:26.757 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar8138471825904388202.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:46:26.758 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8138471825904388202.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 16:46:26.813 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar8138471825904388202.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:46:26.815 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8138471825904388202.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 16:46:26.878 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar8138471825904388202.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:46:26.879 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8138471825904388202.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 1 called: 0 to improve: false
** Write a test suite: 4 called: 1 to improve: false
** Write a test suite: 5 called: 2 to improve: false
[MASTER] 16:46:27.037 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar8138471825904388202.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:46:27.038 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8138471825904388202.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 4 called: 2 to improve: false
[MASTER] 16:46:27.140 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar8138471825904388202.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 16:46:27.141 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8138471825904388202.jar
[MASTER] 16:46:27.260 [logback-1] WARN  TimeController - Already entered in phase: INLINING. This will mess up the timing calculations.
[MASTER] 16:46:27.352 [logback-1] WARN  TimeController - Already entered in phase: MINIMIZATION. This will mess up the timing calculations.
* Computation finished
