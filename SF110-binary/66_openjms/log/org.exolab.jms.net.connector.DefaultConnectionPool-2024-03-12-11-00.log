* EvoSuite 1.0.0-SNAPSHOT
* Going to generate test cases for class: org.exolab.jms.net.connector.DefaultConnectionPool
* Starting Client-0
* Properties loaded from /home/roham/Results-Utestgen/dataset/SF110-new-res/66_openjms/evosuite-files/evosuite.properties
* Connecting to master process on port 12197
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 11:00:25.939 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 11:00:25.949 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 11:00:25.951 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 11:00:26.043 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 11:00:26.047 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 11:00:26.048 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 11:00:26.554 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.sql.SQLType
[MASTER] 11:00:28.073 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 11:00:28.080 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 11:00:28.081 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 11:00:29.394 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 11:00:29.395 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 11:00:29.396 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 11:00:29.397 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 11:00:29.398 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 11:00:29.399 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 11:00:30.068 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 11:00:31.012 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
* Finished analyzing classpath
* Generating tests for class org.exolab.jms.net.connector.DefaultConnectionPool
* Test criteria:
  - Branch Coverage
  - Line Coverage
  - Method-Output Coverage
  - Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 442
* Using seed 1710241223097
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%]* Initial Number of Goals in DynaMOSA = 179 / 442
[MASTER] 11:00:32.467 [logback-1] WARN  TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleImmutableEntry<K, V> : Type points to itself
[Progress:=>                            5%] [Cov:==>                                8%][Progress:=>                            6%] [Cov:=====>                             17%][Progress:==>                           7%] [Cov:=========>                         28%][Progress:==>                           7%] [Cov:===========>                       32%][Progress:===>                          13%] [Cov:===========>                       34%][Progress:===>                          13%] [Cov:===========>                       34%][Progress:====>                         14%] [Cov:=============>                     39%][Progress:====>                         14%] [Cov:=============>                     39%][Progress:====>                         14%] [Cov:=============>                     39%][Progress:====>                         15%] [Cov:=============>                     39%][Progress:====>                         15%] [Cov:=============>                     39%][Progress:=======>                      26%] [Cov:=============>                     39%][Progress:========>                     27%] [Cov:=============>                     39%][Progress:========>                     27%] [Cov:=============>                     39%][Progress:========>                     27%] [Cov:=============>                     39%][Progress:===========>                  38%] [Cov:=============>                     39%][Progress:===========>                  38%] [Cov:=============>                     39%][Progress:===========>                  38%] [Cov:=============>                     39%][Progress:===========>                  38%] [Cov:=============>                     39%][Progress:===========>                  38%] [Cov:=============>                     39%][Progress:=============>                44%] [Cov:=============>                     39%][Progress:==============>               49%] [Cov:=============>                     39%][Progress:==============>               49%] [Cov:==============>                    41%][Progress:===============>              52%] [Cov:==============>                    41%][Progress:===============>              53%] [Cov:==============>                    41%][Progress:================>             54%] [Cov:==============>                    41%][Progress:================>             54%] [Cov:==============>                    41%][Progress:================>             54%] [Cov:==============>                    41%][Progress:================>             55%] [Cov:==============>                    41%][Progress:================>             55%] [Cov:==============>                    41%][Progress:================>             55%] [Cov:==============>                    41%][Progress:================>             55%] [Cov:==============>                    41%][Progress:================>             55%] [Cov:==============>                    41%][Progress:================>             55%] [Cov:==============>                    41%][Progress:================>             56%] [Cov:==============>                    41%][Progress:=================>            59%] [Cov:==============>                    41%][Progress:=================>            59%] [Cov:==============>                    41%][Progress:=================>            59%] [Cov:==============>                    41%][Progress:===================>          64%] [Cov:==============>                    41%][Progress:====================>         69%] [Cov:==============>                    41%][Progress:=====================>        70%] [Cov:==============>                    41%][Progress:=====================>        73%] [Cov:==============>                    41%][Progress:=====================>        73%] [Cov:==============>                    41%][Progress:=======================>      79%] [Cov:==============>                    41%][Progress:=======================>      79%] [Cov:==============>                    41%][Progress:=======================>      79%] [Cov:==============>                    41%][Progress:=======================>      79%] [Cov:==============>                    41%][Progress:=========================>    86%] [Cov:==============>                    41%][Progress:=========================>    86%] [Cov:==============>                    41%][Progress:=========================>    86%] [Cov:==============>                    41%][Progress:=========================>    86%] [Cov:==============>                    41%][Progress:==========================>   87%] [Cov:==============>                    41%][Progress:==========================>   87%] [Cov:==============>                    41%][Progress:==========================>   87%] [Cov:==============>                    41%][Progress:==========================>   87%] [Cov:==============>                    41%][Progress:==========================>   87%] [Cov:==============>                    41%][Progress:==========================>   88%] [Cov:==============>                    41%][Progress:==========================>   88%] [Cov:==============>                    41%][Progress:==========================>   88%] [Cov:==============>                    41%][Progress:==========================>   88%] [Cov:==============>                    41%][Progress:===========================>  91%] [Cov:==============>                    41%][Progress:===========================>  91%] [Cov:==============>                    41%][Progress:===========================>  91%] [Cov:==============>                    41%][Progress:===========================>  92%] [Cov:==============>                    41%][Progress:===========================>  92%] [Cov:==============>                    41%][Progress:===========================>  92%] [Cov:==============>                    41%][Progress:===========================>  92%] [Cov:==============>                    41%][Progress:===========================>  92%] [Cov:==============>                    41%][Progress:===========================>  92%] [Cov:==============>                    41%][Progress:===========================>  92%] [Cov:==============>                    41%][Progress:===========================>  93%] [Cov:==============>                    41%][Progress:===========================>  93%] [Cov:==============>                    41%][Progress:===========================>  93%] [Cov:==============>                    41%][Progress:=============================>98%] [Cov:==============>                    41%][Progress:=============================>98%] [Cov:==============>                    41%][Progress:=============================>98%] [Cov:==============>                    41%][Progress:=============================>98%] [Cov:==============>                    41%][Progress:=============================>99%] [Cov:==============>                    41%][Progress:=============================>99%] [Cov:==============>                    41%][Progress:=============================>99%] [Cov:==============>                    41%][Progress:=============================>99%] [Cov:==============>                    41%][Progress:=============================>99%] [Cov:==============>                    41%][Progress:==============================100%] [Cov:==============>                    41%]
* Search finished after 103s and 82 generations, 48572 statements, best individual has fitness: 281.0
* Generated before the refinement 18 tests with total length 121
statement is: org.exolab.jms.net.http.HTTPSManagedConnectionFactory()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.http.HTTPSManagedConnectionFactory
statement code is: HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory()
statement is: mock(interface org.exolab.jms.net.connector.InvocationHandler) type is: class org.evosuite.testcase.statements.FunctionalMockStatement return type interface org.exolab.jms.net.connector.InvocationHandler
statement code is: InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer())
statement is: org.exolab.jms.net.http.HTTPManagedConnectionFactory()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.http.HTTPManagedConnectionFactory
statement code is: HTTPManagedConnectionFactory hTTPManagedConnectionFactory = new HTTPManagedConnectionFactory()
statement is: createConnectionFactory(Lorg/exolab/jms/net/connector/ConnectionManager;)Lorg/exolab/jms/net/connector/ConnectionFactory; type is: class org.evosuite.testcase.statements.MethodStatement return type interface org.exolab.jms.net.connector.ConnectionFactory
statement code is: ConnectionFactory createConnectionFactory = hTTPManagedConnectionFactory.createConnectionFactory((ConnectionManager) null)
statement is: org.exolab.jms.net.connector.ContextInvocationHandler(Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Lorg/exolab/jms/net/connector/ManagedConnection;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.ContextInvocationHandler
statement code is: ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(arg0, arg1, (ManagedConnection) null)
statement is: org.exolab.jms.net.connector.DefaultConnectionPool(Lorg/exolab/jms/net/connector/ManagedConnectionFactory;Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Ljava/util/Map;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.DefaultConnectionPool
statement code is: DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(arg0, arg1, arg2, (Map) null)
statement is: getManagedConnectionAcceptorListener()Lorg/exolab/jms/net/connector/ManagedConnectionAcceptorListener; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.exolab.jms.net.connector.DefaultConnectionPool
statement code is: DefaultConnectionPool managedConnectionAcceptorListener = (DefaultConnectionPool)defaultConnectionPool.getManagedConnectionAcceptorListener()
test data is: HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
HTTPManagedConnectionFactory hTTPManagedConnectionFactory = new HTTPManagedConnectionFactory();
ConnectionFactory createConnectionFactory = hTTPManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
defaultConnectionPool.getManagedConnectionAcceptorListener();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
        hTTPSManagedConnectionFactory.setHost("example.com");
        hTTPSManagedConnectionFactory.setPort(443);
        hTTPSManagedConnectionFactory.setProtocol("https");
        InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
        HTTPManagedConnectionFactory hTTPManagedConnectionFactory = new HTTPManagedConnectionFactory();
        hTTPManagedConnectionFactory.setHost("example.com");
        hTTPManagedConnectionFactory.setPort(80);
        hTTPManagedConnectionFactory.setProtocol("http");
        createConnectionFactory = hTTPManagedConnectionFactory.createConnectionFactory(((ConnectionManager) (null)));
        ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, ((ManagedConnection) (null)));
        DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, ((Map) (null)));
        defaultConnectionPool.getManagedConnectionAcceptorListener();
    }
}
statement is: HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: hTTPSManagedConnectionFactory.setHost("example.com"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: hTTPSManagedConnectionFactory.setHost("example.com") target is: hTTPSManagedConnectionFactory method is: setHost(java.lang.String)
statement is: hTTPSManagedConnectionFactory.setPort(443), class spoon.support.reflect.code.CtInvocationImpl
invocation is: hTTPSManagedConnectionFactory.setPort(443) target is: hTTPSManagedConnectionFactory method is: setPort(int)
statement is: hTTPSManagedConnectionFactory.setProtocol("https"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: hTTPSManagedConnectionFactory.setProtocol("https") target is: hTTPSManagedConnectionFactory method is: setProtocol(java.lang.String)
statement is: InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer()), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: mock(InvocationHandler.class, new ViolatedAssumptionAnswer()) target is:  method is: mock(java.lang.Class,<unknown>)
target name is: InvocationHandler argument is: InvocationHandler.class
Matched Method is: mock(interface org.exolab.jms.net.connector.InvocationHandler)
statement is: HTTPManagedConnectionFactory hTTPManagedConnectionFactory = new HTTPManagedConnectionFactory(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: hTTPManagedConnectionFactory.setHost("example.com"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: hTTPManagedConnectionFactory.setHost("example.com") target is: hTTPManagedConnectionFactory method is: setHost(java.lang.String)
statement is: hTTPManagedConnectionFactory.setPort(80), class spoon.support.reflect.code.CtInvocationImpl
invocation is: hTTPManagedConnectionFactory.setPort(80) target is: hTTPManagedConnectionFactory method is: setPort(int)
statement is: hTTPManagedConnectionFactory.setProtocol("http"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: hTTPManagedConnectionFactory.setProtocol("http") target is: hTTPManagedConnectionFactory method is: setProtocol(java.lang.String)
statement is: createConnectionFactory = hTTPManagedConnectionFactory.createConnectionFactory(((ConnectionManager) (null))), class spoon.support.reflect.code.CtAssignmentImpl
statement is: ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, ((ManagedConnection) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: org.exolab.jms.net.connector.ContextInvocationHandler(Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Lorg/exolab/jms/net/connector/ManagedConnection;)V
statement is: DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, ((Map) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: org.exolab.jms.net.connector.DefaultConnectionPool(Lorg/exolab/jms/net/connector/ManagedConnectionFactory;Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Ljava/util/Map;)V
statement is: defaultConnectionPool.getManagedConnectionAcceptorListener(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: defaultConnectionPool.getManagedConnectionAcceptorListener() target is: defaultConnectionPool method is: getManagedConnectionAcceptorListener()
TestCase is: HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
HTTPManagedConnectionFactory hTTPManagedConnectionFactory = new HTTPManagedConnectionFactory();

statement is: org.exolab.jms.net.http.HTTPSManagedConnectionFactory()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.http.HTTPSManagedConnectionFactory
statement code is: HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory()
statement is: mock(interface org.exolab.jms.net.connector.InvocationHandler) type is: class org.evosuite.testcase.statements.FunctionalMockStatement return type interface org.exolab.jms.net.connector.InvocationHandler
statement code is: InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer())
statement is: org.exolab.jms.net.http.HTTPManagedConnectionFactory()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.http.HTTPManagedConnectionFactory
statement code is: HTTPManagedConnectionFactory hTTPManagedConnectionFactory = new HTTPManagedConnectionFactory()
statement is: createConnectionFactory(Lorg/exolab/jms/net/connector/ConnectionManager;)Lorg/exolab/jms/net/connector/ConnectionFactory; type is: class org.evosuite.testcase.statements.MethodStatement return type interface org.exolab.jms.net.connector.ConnectionFactory
statement code is: ConnectionFactory createConnectionFactory = hTTPManagedConnectionFactory.createConnectionFactory((ConnectionManager) null)
statement is: org.exolab.jms.net.connector.ContextInvocationHandler(Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Lorg/exolab/jms/net/connector/ManagedConnection;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.ContextInvocationHandler
statement code is: ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(arg0, arg1, (ManagedConnection) null)
statement is: org.exolab.jms.net.connector.DefaultConnectionPool(Lorg/exolab/jms/net/connector/ManagedConnectionFactory;Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Ljava/util/Map;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.DefaultConnectionPool
statement code is: DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(arg0, arg1, arg2, (Map) null)
statement is: accepted(Lorg/exolab/jms/net/connector/ManagedConnectionAcceptor;Lorg/exolab/jms/net/connector/ManagedConnection;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: defaultConnectionPool.accepted((ManagedConnectionAcceptor) null, (ManagedConnection) null)
test data is: HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
HTTPManagedConnectionFactory hTTPManagedConnectionFactory = new HTTPManagedConnectionFactory();
ConnectionFactory createConnectionFactory = hTTPManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
defaultConnectionPool.accepted((ManagedConnectionAcceptor) null, (ManagedConnection) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
        InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
        HTTPManagedConnectionFactory hTTPManagedConnectionFactory = new HTTPManagedConnectionFactory();
        ConnectionFactory createConnectionFactory = hTTPManagedConnectionFactory.createConnectionFactory(((ConnectionManager) (null)));
        ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, ((ManagedConnection) (null)));
        DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, ((Map) (null)));
        defaultConnectionPool.accepted(((ManagedConnectionAcceptor) (null)), ((ManagedConnection) (null)));
    }
}
statement is: HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer()), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: mock(InvocationHandler.class, new ViolatedAssumptionAnswer()) target is:  method is: mock(java.lang.Class,<unknown>)
target name is: InvocationHandler argument is: InvocationHandler.class
Matched Method is: mock(interface org.exolab.jms.net.connector.InvocationHandler)
statement is: HTTPManagedConnectionFactory hTTPManagedConnectionFactory = new HTTPManagedConnectionFactory(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ConnectionFactory createConnectionFactory = hTTPManagedConnectionFactory.createConnectionFactory(((ConnectionManager) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: hTTPManagedConnectionFactory.createConnectionFactory(((ConnectionManager) (null))) target is: hTTPManagedConnectionFactory method is: createConnectionFactory(ConnectionManager)
source statement: org.exolab.jms.net.http.HTTPManagedConnectionFactory()V callee: VariableReference: Statement 2, type org.exolab.jms.net.http.HTTPManagedConnectionFactoryindex is: 2
Matched Method is: createConnectionFactory(Lorg/exolab/jms/net/connector/ConnectionManager;)Lorg/exolab/jms/net/connector/ConnectionFactory;
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, ((ManagedConnection) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, ((Map) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: defaultConnectionPool.accepted(((ManagedConnectionAcceptor) (null)), ((ManagedConnection) (null))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: defaultConnectionPool.accepted(((ManagedConnectionAcceptor) (null)), ((ManagedConnection) (null))) target is: defaultConnectionPool method is: accepted(ManagedConnectionAcceptor,ManagedConnection)
source statement: org.exolab.jms.net.connector.DefaultConnectionPool(Lorg/exolab/jms/net/connector/ManagedConnectionFactory;Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Ljava/util/Map;)V callee: VariableReference: Statement 5, type org.exolab.jms.net.connector.DefaultConnectionPoolindex is: 6
Matched Method is: accepted(Lorg/exolab/jms/net/connector/ManagedConnectionAcceptor;Lorg/exolab/jms/net/connector/ManagedConnection;)V
i 0 Parameters size() 0 Num of Method Parameters: 2
i 1 Parameters size() 0 Num of Method Parameters: 2
TestCase is: HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
HTTPManagedConnectionFactory hTTPManagedConnectionFactory = new HTTPManagedConnectionFactory();
ConnectionManager connectionManager = null;
ConnectionFactory createConnectionFactory = hTTPManagedConnectionFactory.createConnectionFactory(connectionManager);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
ManagedConnectionAcceptor managedConnectionAcceptor = null;
ManagedConnection managedConnection = null;
((DefaultConnectionPool) contextInvocationHandler).accepted(managedConnectionAcceptor, managedConnection);

statement is: org.exolab.jms.net.http.HTTPSManagedConnectionFactory()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.http.HTTPSManagedConnectionFactory
statement code is: HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory()
statement is: mock(interface org.exolab.jms.net.connector.InvocationHandler) type is: class org.evosuite.testcase.statements.FunctionalMockStatement return type interface org.exolab.jms.net.connector.InvocationHandler
statement code is: InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer())
statement is: createConnectionFactory(Lorg/exolab/jms/net/connector/ConnectionManager;)Lorg/exolab/jms/net/connector/ConnectionFactory; type is: class org.evosuite.testcase.statements.MethodStatement return type interface org.exolab.jms.net.connector.ConnectionFactory
statement code is: ConnectionFactory createConnectionFactory = hTTPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null)
statement is: org.apache.derby.iapi.services.io.FormatableHashtable()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.apache.derby.iapi.services.io.FormatableHashtable
statement code is: FormatableHashtable formatableHashtable = new FormatableHashtable()
statement is: org.exolab.jms.net.connector.DefaultConnectionPool(Lorg/exolab/jms/net/connector/ManagedConnectionFactory;Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Ljava/util/Map;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.DefaultConnectionPool
statement code is: DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(arg0, arg1, arg2, arg3)
statement is: org.exolab.jms.net.connector.MulticastCallerListener()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.MulticastCallerListener
statement code is: MulticastCallerListener multicastCallerListener = new MulticastCallerListener()
statement is: setCallerListener(Lorg/exolab/jms/net/connector/CallerListener;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: defaultConnectionPool.setCallerListener(arg0)
test data is: HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = hTTPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
FormatableHashtable formatableHashtable = new FormatableHashtable();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPSManagedConnectionFactory, invocationHandler, createConnectionFactory, formatableHashtable);
MulticastCallerListener multicastCallerListener = new MulticastCallerListener();
defaultConnectionPool.setCallerListener(multicastCallerListener);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
        InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
        ConnectionFactory createConnectionFactory = hTTPSManagedConnectionFactory.createConnectionFactory(((ConnectionManager) (null)));
        FormatableHashtable formatableHashtable = new FormatableHashtable();
        formatableHashtable.put("connectionTimeout", 60000);// 1 minute

        formatableHashtable.put("loginTimeout", 30000);// 30 seconds

        DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPSManagedConnectionFactory, invocationHandler, createConnectionFactory, formatableHashtable);
        MulticastCallerListener multicastCallerListener = new MulticastCallerListener();
        defaultConnectionPool.setCallerListener(multicastCallerListener);
    }
}
statement is: HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer()), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: mock(InvocationHandler.class, new ViolatedAssumptionAnswer()) target is:  method is: mock(java.lang.Class,<unknown>)
target name is: InvocationHandler argument is: InvocationHandler.class
Matched Method is: mock(interface org.exolab.jms.net.connector.InvocationHandler)
statement is: ConnectionFactory createConnectionFactory = hTTPSManagedConnectionFactory.createConnectionFactory(((ConnectionManager) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: hTTPSManagedConnectionFactory.createConnectionFactory(((ConnectionManager) (null))) target is: hTTPSManagedConnectionFactory method is: createConnectionFactory(ConnectionManager)
source statement: org.exolab.jms.net.http.HTTPSManagedConnectionFactory()V callee: VariableReference: Statement 0, type org.exolab.jms.net.http.HTTPSManagedConnectionFactoryindex is: 0
Matched Method is: createConnectionFactory(Lorg/exolab/jms/net/connector/ConnectionManager;)Lorg/exolab/jms/net/connector/ConnectionFactory;
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: FormatableHashtable formatableHashtable = new FormatableHashtable(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: formatableHashtable.put("connectionTimeout", 60000)// 1 minute
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: formatableHashtable.put("connectionTimeout", 60000)// 1 minute
 target is: formatableHashtable method is: put(java.lang.String,int)
statement is: formatableHashtable.put("loginTimeout", 30000)// 30 seconds
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: formatableHashtable.put("loginTimeout", 30000)// 30 seconds
 target is: formatableHashtable method is: put(java.lang.String,int)
statement is: DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPSManagedConnectionFactory, invocationHandler, createConnectionFactory, formatableHashtable), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: MulticastCallerListener multicastCallerListener = new MulticastCallerListener(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: defaultConnectionPool.setCallerListener(multicastCallerListener), class spoon.support.reflect.code.CtInvocationImpl
invocation is: defaultConnectionPool.setCallerListener(multicastCallerListener) target is: defaultConnectionPool method is: setCallerListener(MulticastCallerListener)
source statement: org.exolab.jms.net.connector.DefaultConnectionPool(Lorg/exolab/jms/net/connector/ManagedConnectionFactory;Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Ljava/util/Map;)V callee: VariableReference: Statement 4, type org.exolab.jms.net.connector.DefaultConnectionPoolindex is: 5
Matched Method is: setCallerListener(Lorg/exolab/jms/net/connector/CallerListener;)V
TestCase is: HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionManager connectionManager = null;
ConnectionFactory createConnectionFactory = hTTPSManagedConnectionFactory.createConnectionFactory(connectionManager);
FormatableHashtable formatableHashtable = new FormatableHashtable();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPSManagedConnectionFactory, invocationHandler, createConnectionFactory, formatableHashtable);
MulticastCallerListener multicastCallerListener = new MulticastCallerListener();
((DefaultConnectionPool) formatableHashtable).setCallerListener(multicastCallerListener);

statement is: org.exolab.jms.net.http.HTTPManagedConnectionFactory()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.http.HTTPManagedConnectionFactory
statement code is: HTTPManagedConnectionFactory hTTPManagedConnectionFactory = new HTTPManagedConnectionFactory()
statement is: createConnectionFactory(Lorg/exolab/jms/net/connector/ConnectionManager;)Lorg/exolab/jms/net/connector/ConnectionFactory; type is: class org.evosuite.testcase.statements.MethodStatement return type interface org.exolab.jms.net.connector.ConnectionFactory
statement code is: ConnectionFactory createConnectionFactory = hTTPManagedConnectionFactory.createConnectionFactory((ConnectionManager) null)
statement is: org.exolab.jms.net.vm.VMManagedConnectionFactory()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.vm.VMManagedConnectionFactory
statement code is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory()
statement is: javax.management.remote.JMXPrincipal(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class javax.management.remote.JMXPrincipal
statement code is: JMXPrincipal jMXPrincipal = new JMXPrincipal("")
statement is: org.exolab.jms.net.connector.ContextInvocationHandler(Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Lorg/exolab/jms/net/connector/ManagedConnection;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.ContextInvocationHandler
statement code is: ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler((InvocationHandler) null, arg1, (ManagedConnection) null)
statement is: org.exolab.jms.net.connector.DefaultConnectionPool(Lorg/exolab/jms/net/connector/ManagedConnectionFactory;Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Ljava/util/Map;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.DefaultConnectionPool
statement code is: DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(arg0, arg1, arg2, (Map) null)
statement is: createManagedConnection(Ljava/security/Principal;Lorg/exolab/jms/net/connector/ConnectionRequestInfo;)Lorg/exolab/jms/net/connector/ManagedConnection; type is: class org.evosuite.testcase.statements.MethodStatement return type interface org.exolab.jms.net.connector.ManagedConnection
statement code is: ManagedConnection createManagedConnection = defaultConnectionPool.createManagedConnection(arg0, (ConnectionRequestInfo) null)
test data is: HTTPManagedConnectionFactory hTTPManagedConnectionFactory = new HTTPManagedConnectionFactory();
ConnectionFactory createConnectionFactory = hTTPManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
JMXPrincipal jMXPrincipal = new JMXPrincipal("");
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler((InvocationHandler) null, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
defaultConnectionPool.createManagedConnection(jMXPrincipal, (ConnectionRequestInfo) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        HTTPManagedConnectionFactory hTTPManagedConnectionFactory = new HTTPManagedConnectionFactory();
        hTTPManagedConnectionFactory.setProtocol("https");
        hTTPManagedConnectionFactory.setHost("www.example.com");
        hTTPManagedConnectionFactory.setPort(443);
        ConnectionFactory createConnectionFactory = hTTPManagedConnectionFactory.createConnectionFactory(((ConnectionManager) (null)));
        VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
        vMManagedConnectionFactory.setMaxActive(100);
        vMManagedConnectionFactory.setMinIdle(5);
        vMManagedConnectionFactory.setInitialSize(10);
        JMXPrincipal jMXPrincipal = new JMXPrincipal("user");
        ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(((InvocationHandler) (null)), createConnectionFactory, ((ManagedConnection) (null)));
        DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, ((Map) (null)));
        defaultConnectionPool.createManagedConnection(jMXPrincipal, ((ConnectionRequestInfo) (null)));
    }
}
statement is: HTTPManagedConnectionFactory hTTPManagedConnectionFactory = new HTTPManagedConnectionFactory(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: hTTPManagedConnectionFactory.setProtocol("https"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: hTTPManagedConnectionFactory.setProtocol("https") target is: hTTPManagedConnectionFactory method is: setProtocol(java.lang.String)
statement is: hTTPManagedConnectionFactory.setHost("www.example.com"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: hTTPManagedConnectionFactory.setHost("www.example.com") target is: hTTPManagedConnectionFactory method is: setHost(java.lang.String)
statement is: hTTPManagedConnectionFactory.setPort(443), class spoon.support.reflect.code.CtInvocationImpl
invocation is: hTTPManagedConnectionFactory.setPort(443) target is: hTTPManagedConnectionFactory method is: setPort(int)
statement is: ConnectionFactory createConnectionFactory = hTTPManagedConnectionFactory.createConnectionFactory(((ConnectionManager) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: hTTPManagedConnectionFactory.createConnectionFactory(((ConnectionManager) (null))) target is: hTTPManagedConnectionFactory method is: createConnectionFactory(ConnectionManager)
source statement: org.exolab.jms.net.http.HTTPManagedConnectionFactory()V callee: VariableReference: Statement 0, type org.exolab.jms.net.http.HTTPManagedConnectionFactoryindex is: 0
Matched Method is: createConnectionFactory(Lorg/exolab/jms/net/connector/ConnectionManager;)Lorg/exolab/jms/net/connector/ConnectionFactory;
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: vMManagedConnectionFactory.setMaxActive(100), class spoon.support.reflect.code.CtInvocationImpl
invocation is: vMManagedConnectionFactory.setMaxActive(100) target is: vMManagedConnectionFactory method is: setMaxActive(int)
statement is: vMManagedConnectionFactory.setMinIdle(5), class spoon.support.reflect.code.CtInvocationImpl
invocation is: vMManagedConnectionFactory.setMinIdle(5) target is: vMManagedConnectionFactory method is: setMinIdle(int)
statement is: vMManagedConnectionFactory.setInitialSize(10), class spoon.support.reflect.code.CtInvocationImpl
invocation is: vMManagedConnectionFactory.setInitialSize(10) target is: vMManagedConnectionFactory method is: setInitialSize(int)
statement is: JMXPrincipal jMXPrincipal = new JMXPrincipal("user"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(((InvocationHandler) (null)), createConnectionFactory, ((ManagedConnection) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, ((Map) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: defaultConnectionPool.createManagedConnection(jMXPrincipal, ((ConnectionRequestInfo) (null))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: defaultConnectionPool.createManagedConnection(jMXPrincipal, ((ConnectionRequestInfo) (null))) target is: defaultConnectionPool method is: createManagedConnection(JMXPrincipal,ConnectionRequestInfo)
source statement: org.exolab.jms.net.connector.DefaultConnectionPool(Lorg/exolab/jms/net/connector/ManagedConnectionFactory;Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Ljava/util/Map;)V callee: VariableReference: Statement 5, type org.exolab.jms.net.connector.DefaultConnectionPoolindex is: 7
Matched Method is: createManagedConnection(Ljava/security/Principal;Lorg/exolab/jms/net/connector/ConnectionRequestInfo;)Lorg/exolab/jms/net/connector/ManagedConnection;
i 1 Parameters size() 1 Num of Method Parameters: 2
TestCase is: HTTPManagedConnectionFactory hTTPManagedConnectionFactory = new HTTPManagedConnectionFactory();
ConnectionManager connectionManager = null;
ConnectionFactory createConnectionFactory = hTTPManagedConnectionFactory.createConnectionFactory(connectionManager);
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
String string = "user";
JMXPrincipal jMXPrincipal = new JMXPrincipal(string);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler((InvocationHandler) createConnectionFactory, (ConnectionFactory) connectionManager, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
ConnectionRequestInfo connectionRequestInfo = null;
((DefaultConnectionPool) jMXPrincipal).createManagedConnection(jMXPrincipal, connectionRequestInfo);

statement is: org.exolab.jms.net.http.HTTPSManagedConnectionFactory()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.http.HTTPSManagedConnectionFactory
statement code is: HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory()
statement is: mock(interface org.exolab.jms.net.connector.InvocationHandler) type is: class org.evosuite.testcase.statements.FunctionalMockStatement return type interface org.exolab.jms.net.connector.InvocationHandler
statement code is: InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer())
statement is: createConnectionFactory(Lorg/exolab/jms/net/connector/ConnectionManager;)Lorg/exolab/jms/net/connector/ConnectionFactory; type is: class org.evosuite.testcase.statements.MethodStatement return type interface org.exolab.jms.net.connector.ConnectionFactory
statement code is: ConnectionFactory createConnectionFactory = hTTPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null)
statement is: org.exolab.jms.net.connector.ContextInvocationHandler(Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Lorg/exolab/jms/net/connector/ManagedConnection;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.ContextInvocationHandler
statement code is: ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(arg0, arg1, (ManagedConnection) null)
statement is: org.exolab.jms.net.connector.DefaultConnectionPool(Lorg/exolab/jms/net/connector/ManagedConnectionFactory;Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Ljava/util/Map;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.DefaultConnectionPool
statement code is: DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(arg0, arg1, arg2, (Map) null)
statement is: org.exolab.jms.config.Configuration()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.config.Configuration
statement code is: Configuration configuration = new Configuration()
statement is: org.exolab.jms.persistence.DatabaseService(Lorg/exolab/jms/config/Configuration;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.persistence.DatabaseService
statement code is: DatabaseService databaseService = new DatabaseService(arg0)
statement is: org.exolab.jms.authentication.UserManager(Lorg/exolab/jms/config/Configuration;Lorg/exolab/jms/persistence/DatabaseService;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.authentication.UserManager
statement code is: UserManager userManager = new UserManager(arg0, arg1)
statement is: org.exolab.jms.authentication.AuthenticationMgr(Lorg/exolab/jms/authentication/UserManager;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.authentication.AuthenticationMgr
statement code is: AuthenticationMgr authenticationMgr = new AuthenticationMgr(arg0)
statement is: createManagedConnectionAcceptor(Lorg/exolab/jms/net/connector/Authenticator;Lorg/exolab/jms/net/connector/ConnectionRequestInfo;)Lorg/exolab/jms/net/connector/ManagedConnectionAcceptor; type is: class org.evosuite.testcase.statements.MethodStatement return type interface org.exolab.jms.net.connector.ManagedConnectionAcceptor
statement code is: ManagedConnectionAcceptor createManagedConnectionAcceptor = defaultConnectionPool.createManagedConnectionAcceptor(arg0, (ConnectionRequestInfo) null)
test data is: HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = hTTPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
Configuration configuration = new Configuration();
DatabaseService databaseService = new DatabaseService(configuration);
UserManager userManager = new UserManager(configuration, databaseService);
AuthenticationMgr authenticationMgr = new AuthenticationMgr(userManager);
defaultConnectionPool.createManagedConnectionAcceptor(authenticationMgr, (ConnectionRequestInfo) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
        InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
        ConnectionFactory createConnectionFactory = hTTPSManagedConnectionFactory.createConnectionFactory("https://example.com");
        ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, "user@example.com");
        DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, null);
        Configuration configuration = new Configuration();
        DatabaseService databaseService = new DatabaseService(configuration);
        UserManager userManager = new UserManager(configuration, databaseService);
        AuthenticationMgr authenticationMgr = new AuthenticationMgr(userManager);
        defaultConnectionPool.createManagedConnectionAcceptor(authenticationMgr, null);
    }
}
statement is: HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer()), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: mock(InvocationHandler.class, new ViolatedAssumptionAnswer()) target is:  method is: mock(java.lang.Class,<unknown>)
target name is: InvocationHandler argument is: InvocationHandler.class
Matched Method is: mock(interface org.exolab.jms.net.connector.InvocationHandler)
statement is: ConnectionFactory createConnectionFactory = hTTPSManagedConnectionFactory.createConnectionFactory("https://example.com"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: hTTPSManagedConnectionFactory.createConnectionFactory("https://example.com") target is: hTTPSManagedConnectionFactory method is: createConnectionFactory(java.lang.String)
source statement: org.exolab.jms.net.http.HTTPSManagedConnectionFactory()V callee: VariableReference: Statement 0, type org.exolab.jms.net.http.HTTPSManagedConnectionFactoryindex is: 0
Matched Method is: createConnectionFactory(Lorg/exolab/jms/net/connector/ConnectionManager;)Lorg/exolab/jms/net/connector/ConnectionFactory;
statement is: ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, "user@example.com"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, null), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Configuration configuration = new Configuration(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DatabaseService databaseService = new DatabaseService(configuration), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: UserManager userManager = new UserManager(configuration, databaseService), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: AuthenticationMgr authenticationMgr = new AuthenticationMgr(userManager), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: defaultConnectionPool.createManagedConnectionAcceptor(authenticationMgr, null), class spoon.support.reflect.code.CtInvocationImpl
invocation is: defaultConnectionPool.createManagedConnectionAcceptor(authenticationMgr, null) target is: defaultConnectionPool method is: createManagedConnectionAcceptor(AuthenticationMgr,<unknown>)
source statement: org.exolab.jms.net.connector.DefaultConnectionPool(Lorg/exolab/jms/net/connector/ManagedConnectionFactory;Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Ljava/util/Map;)V callee: VariableReference: Statement 4, type org.exolab.jms.net.connector.DefaultConnectionPoolindex is: 6
Matched Method is: createManagedConnectionAcceptor(Lorg/exolab/jms/net/connector/Authenticator;Lorg/exolab/jms/net/connector/ConnectionRequestInfo;)Lorg/exolab/jms/net/connector/ManagedConnectionAcceptor;
i 1 Parameters size() 1 Num of Method Parameters: 2
TestCase is: HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
String string = "https://example.com";
ConnectionFactory createConnectionFactory = hTTPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) string);
String string = "user@example.com";
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) string);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
Configuration configuration = new Configuration();
DatabaseService databaseService = new DatabaseService(configuration);
UserManager userManager = new UserManager(configuration, databaseService);
AuthenticationMgr authenticationMgr = new AuthenticationMgr(userManager);
ConnectionRequestInfo connectionRequestInfo = null;
((DefaultConnectionPool) string).createManagedConnectionAcceptor(authenticationMgr, connectionRequestInfo);

statement is: org.exolab.jms.net.http.HTTPSManagedConnectionFactory()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.http.HTTPSManagedConnectionFactory
statement code is: HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory()
statement is: mock(interface org.exolab.jms.net.connector.InvocationHandler) type is: class org.evosuite.testcase.statements.FunctionalMockStatement return type interface org.exolab.jms.net.connector.InvocationHandler
statement code is: InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer())
statement is: createConnectionFactory(Lorg/exolab/jms/net/connector/ConnectionManager;)Lorg/exolab/jms/net/connector/ConnectionFactory; type is: class org.evosuite.testcase.statements.MethodStatement return type interface org.exolab.jms.net.connector.ConnectionFactory
statement code is: ConnectionFactory createConnectionFactory = hTTPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null)
statement is: org.exolab.jms.net.connector.ContextInvocationHandler(Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Lorg/exolab/jms/net/connector/ManagedConnection;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.ContextInvocationHandler
statement code is: ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(arg0, arg1, (ManagedConnection) null)
statement is: org.exolab.jms.net.connector.DefaultConnectionPool(Lorg/exolab/jms/net/connector/ManagedConnectionFactory;Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Ljava/util/Map;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.DefaultConnectionPool
statement code is: DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(arg0, arg1, arg2, (Map) null)
statement is: matchManagedConnectionAcceptors(Lorg/exolab/jms/net/connector/ConnectionRequestInfo;)Lorg/exolab/jms/net/connector/ManagedConnectionAcceptor; type is: class org.evosuite.testcase.statements.MethodStatement return type interface org.exolab.jms.net.connector.ManagedConnectionAcceptor
statement code is: ManagedConnectionAcceptor matchManagedConnectionAcceptors = defaultConnectionPool.matchManagedConnectionAcceptors((ConnectionRequestInfo) null)
test data is: HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = hTTPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
defaultConnectionPool.matchManagedConnectionAcceptors((ConnectionRequestInfo) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
        InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
        ConnectionFactory createConnectionFactory = hTTPSManagedConnectionFactory.createConnectionFactory("https://example.com");
        ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, "https://example.com/api/v1/users");
        DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, Collections.singletonMap("Content-Type", "application/json"));
        defaultConnectionPool.matchManagedConnectionAcceptors(((ConnectionRequestInfo) (null)));
    }
}
statement is: HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer()), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: mock(InvocationHandler.class, new ViolatedAssumptionAnswer()) target is:  method is: mock(java.lang.Class,<unknown>)
target name is: InvocationHandler argument is: InvocationHandler.class
Matched Method is: mock(interface org.exolab.jms.net.connector.InvocationHandler)
statement is: ConnectionFactory createConnectionFactory = hTTPSManagedConnectionFactory.createConnectionFactory("https://example.com"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: hTTPSManagedConnectionFactory.createConnectionFactory("https://example.com") target is: hTTPSManagedConnectionFactory method is: createConnectionFactory(java.lang.String)
source statement: org.exolab.jms.net.http.HTTPSManagedConnectionFactory()V callee: VariableReference: Statement 0, type org.exolab.jms.net.http.HTTPSManagedConnectionFactoryindex is: 0
Matched Method is: createConnectionFactory(Lorg/exolab/jms/net/connector/ConnectionManager;)Lorg/exolab/jms/net/connector/ConnectionFactory;
statement is: ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, "https://example.com/api/v1/users"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, Collections.singletonMap("Content-Type", "application/json")), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: defaultConnectionPool.matchManagedConnectionAcceptors(((ConnectionRequestInfo) (null))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: defaultConnectionPool.matchManagedConnectionAcceptors(((ConnectionRequestInfo) (null))) target is: defaultConnectionPool method is: matchManagedConnectionAcceptors(ConnectionRequestInfo)
source statement: org.exolab.jms.net.connector.DefaultConnectionPool(Lorg/exolab/jms/net/connector/ManagedConnectionFactory;Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Ljava/util/Map;)V callee: VariableReference: Statement 4, type org.exolab.jms.net.connector.DefaultConnectionPoolindex is: 6
Matched Method is: matchManagedConnectionAcceptors(Lorg/exolab/jms/net/connector/ConnectionRequestInfo;)Lorg/exolab/jms/net/connector/ManagedConnectionAcceptor;
i 0 Parameters size() 0 Num of Method Parameters: 1
TestCase is: HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
String string = "https://example.com";
ConnectionFactory createConnectionFactory = hTTPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) string);
String string = "https://example.com/api/v1/users";
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) string);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
ConnectionRequestInfo connectionRequestInfo = null;
((DefaultConnectionPool) string).matchManagedConnectionAcceptors(connectionRequestInfo);

statement is: org.exolab.jms.net.http.HTTPSManagedConnectionFactory()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.http.HTTPSManagedConnectionFactory
statement code is: HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory()
statement is: createConnectionFactory(Lorg/exolab/jms/net/connector/ConnectionManager;)Lorg/exolab/jms/net/connector/ConnectionFactory; type is: class org.evosuite.testcase.statements.MethodStatement return type interface org.exolab.jms.net.connector.ConnectionFactory
statement code is: ConnectionFactory createConnectionFactory = hTTPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null)
statement is: org.apache.derby.iapi.services.io.FormatableHashtable()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.apache.derby.iapi.services.io.FormatableHashtable
statement code is: FormatableHashtable formatableHashtable = new FormatableHashtable()
statement is: org.exolab.jms.net.connector.DefaultConnectionPool(Lorg/exolab/jms/net/connector/ManagedConnectionFactory;Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Ljava/util/Map;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.DefaultConnectionPool
statement code is: DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool((ManagedConnectionFactory) null, (InvocationHandler) null, arg2, arg3)
test data is: HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
ConnectionFactory createConnectionFactory = hTTPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
FormatableHashtable formatableHashtable = new FormatableHashtable();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool((ManagedConnectionFactory) null, (InvocationHandler) null, createConnectionFactory, formatableHashtable);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
        ConnectionFactory createConnectionFactory = hTTPSManagedConnectionFactory.createConnectionFactory("https://www.example.com");
        FormatableHashtable formatableHashtable = new FormatableHashtable(new String[]{ "user", "password" }, new Object[]{ "admin", "secret" });
        DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(((ManagedConnectionFactory) (null)), ((InvocationHandler) (null)), createConnectionFactory, formatableHashtable);
    }
}
statement is: HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ConnectionFactory createConnectionFactory = hTTPSManagedConnectionFactory.createConnectionFactory("https://www.example.com"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: hTTPSManagedConnectionFactory.createConnectionFactory("https://www.example.com") target is: hTTPSManagedConnectionFactory method is: createConnectionFactory(java.lang.String)
source statement: org.exolab.jms.net.http.HTTPSManagedConnectionFactory()V callee: VariableReference: Statement 0, type org.exolab.jms.net.http.HTTPSManagedConnectionFactoryindex is: 0
Matched Method is: createConnectionFactory(Lorg/exolab/jms/net/connector/ConnectionManager;)Lorg/exolab/jms/net/connector/ConnectionFactory;
statement is: FormatableHashtable formatableHashtable = new FormatableHashtable(new String[]{ "user", "password" }, new Object[]{ "admin", "secret" }), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(((ManagedConnectionFactory) (null)), ((InvocationHandler) (null)), createConnectionFactory, formatableHashtable), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase is: HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
String string = "https://www.example.com";
ConnectionFactory createConnectionFactory = hTTPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) string);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool((ManagedConnectionFactory) createConnectionFactory, (InvocationHandler) null, (ConnectionFactory) string, (Map) createConnectionFactory);

statement is: org.exolab.jms.net.http.HTTPSManagedConnectionFactory()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.http.HTTPSManagedConnectionFactory
statement code is: HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory()
statement is: createConnectionFactory(Lorg/exolab/jms/net/connector/ConnectionManager;)Lorg/exolab/jms/net/connector/ConnectionFactory; type is: class org.evosuite.testcase.statements.MethodStatement return type interface org.exolab.jms.net.connector.ConnectionFactory
statement code is: ConnectionFactory createConnectionFactory = hTTPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null)
statement is: org.apache.derby.iapi.services.io.FormatableHashtable()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.apache.derby.iapi.services.io.FormatableHashtable
statement code is: FormatableHashtable formatableHashtable = new FormatableHashtable()
statement is: org.exolab.jms.net.connector.DefaultConnectionPool(Lorg/exolab/jms/net/connector/ManagedConnectionFactory;Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Ljava/util/Map;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.DefaultConnectionPool
statement code is: DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(arg0, (InvocationHandler) null, arg2, arg3)
test data is: HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
ConnectionFactory createConnectionFactory = hTTPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
FormatableHashtable formatableHashtable = new FormatableHashtable();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPSManagedConnectionFactory, (InvocationHandler) null, createConnectionFactory, formatableHashtable);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
        ConnectionFactory createConnectionFactory = hTTPSManagedConnectionFactory.createConnectionFactory(new ConnectionManager());
        FormattedHashtable formatableHashtable = new FormatableHashtable();
        DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPSManagedConnectionFactory, new MyInvocationHandler(), createConnectionFactory, formatableHashtable);
    }
}
statement is: HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ConnectionFactory createConnectionFactory = hTTPSManagedConnectionFactory.createConnectionFactory(new ConnectionManager()), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: hTTPSManagedConnectionFactory.createConnectionFactory(new ConnectionManager()) target is: hTTPSManagedConnectionFactory method is: createConnectionFactory(ConnectionManager)
source statement: org.exolab.jms.net.http.HTTPSManagedConnectionFactory()V callee: VariableReference: Statement 0, type org.exolab.jms.net.http.HTTPSManagedConnectionFactoryindex is: 0
Matched Method is: createConnectionFactory(Lorg/exolab/jms/net/connector/ConnectionManager;)Lorg/exolab/jms/net/connector/ConnectionFactory;
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: FormattedHashtable formatableHashtable = new FormatableHashtable(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPSManagedConnectionFactory, new MyInvocationHandler(), createConnectionFactory, formatableHashtable), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase is: HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
ConnectionManager connectionManager = null;
ConnectionFactory createConnectionFactory = hTTPSManagedConnectionFactory.createConnectionFactory(connectionManager);
FormatableHashtable formatableHashtable = new FormatableHashtable();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPSManagedConnectionFactory, (InvocationHandler) createConnectionFactory, (ConnectionFactory) formatableHashtable, (Map) createConnectionFactory);

statement is: org.exolab.jms.net.vm.VMManagedConnectionFactory()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.vm.VMManagedConnectionFactory
statement code is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory()
statement is: org.exolab.jms.net.connector.ContextInvocationHandler(Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Lorg/exolab/jms/net/connector/ManagedConnection;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.ContextInvocationHandler
statement code is: ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler((InvocationHandler) null, (ConnectionFactory) null, (ManagedConnection) null)
statement is: java.util.Hashtable()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type java.util.Hashtable<java.lang.Object, org.exolab.jms.net.connector.ManagedConnectionHandle>
statement code is: Hashtable<Object, ManagedConnectionHandle> hashtable = new Hashtable<Object, ManagedConnectionHandle>()
statement is: org.exolab.jms.net.connector.DefaultConnectionPool(Lorg/exolab/jms/net/connector/ManagedConnectionFactory;Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Ljava/util/Map;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.DefaultConnectionPool
statement code is: DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(arg0, arg1, (ConnectionFactory) null, arg3)
test data is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler((InvocationHandler) null, (ConnectionFactory) null, (ManagedConnection) null);
Hashtable<Object, ManagedConnectionHandle> hashtable = new Hashtable<Object, ManagedConnectionHandle>();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, (ConnectionFactory) null, hashtable);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
        ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(((InvocationHandler) (null)), ((ConnectionFactory) (null)), ((ManagedConnection) (null)));
        Hashtable<Object, ManagedConnectionHandle> hashtable = new Hashtable<Object, ManagedConnectionHandle>();
        DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, ((ConnectionFactory) (null)), hashtable);
    }
}
statement is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(((InvocationHandler) (null)), ((ConnectionFactory) (null)), ((ManagedConnection) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Hashtable<Object, ManagedConnectionHandle> hashtable = new Hashtable<Object, ManagedConnectionHandle>(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, ((ConnectionFactory) (null)), hashtable), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler((InvocationHandler) null, (ConnectionFactory) null, (ManagedConnection) null);
Hashtable<Object, ManagedConnectionHandle> hashtable = new Hashtable<Object, ManagedConnectionHandle>();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, hashtable, hashtable);

statement is: org.exolab.jms.net.http.HTTPSManagedConnectionFactory()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.http.HTTPSManagedConnectionFactory
statement code is: HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory()
statement is: mock(interface org.exolab.jms.net.connector.InvocationHandler) type is: class org.evosuite.testcase.statements.FunctionalMockStatement return type interface org.exolab.jms.net.connector.InvocationHandler
statement code is: InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer())
statement is: org.exolab.jms.net.http.HTTPManagedConnectionFactory()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.http.HTTPManagedConnectionFactory
statement code is: HTTPManagedConnectionFactory hTTPManagedConnectionFactory = new HTTPManagedConnectionFactory()
statement is: createConnectionFactory(Lorg/exolab/jms/net/connector/ConnectionManager;)Lorg/exolab/jms/net/connector/ConnectionFactory; type is: class org.evosuite.testcase.statements.MethodStatement return type interface org.exolab.jms.net.connector.ConnectionFactory
statement code is: ConnectionFactory createConnectionFactory = hTTPManagedConnectionFactory.createConnectionFactory((ConnectionManager) null)
statement is: javax.management.remote.JMXPrincipal(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class javax.management.remote.JMXPrincipal
statement code is: JMXPrincipal jMXPrincipal = new JMXPrincipal("")
statement is: org.exolab.jms.net.connector.ContextInvocationHandler(Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Lorg/exolab/jms/net/connector/ManagedConnection;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.ContextInvocationHandler
statement code is: ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(arg0, arg1, (ManagedConnection) null)
statement is: org.exolab.jms.net.connector.DefaultConnectionPool(Lorg/exolab/jms/net/connector/ManagedConnectionFactory;Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Ljava/util/Map;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.DefaultConnectionPool
statement code is: DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(arg0, arg1, arg2, (Map) null)
statement is: matchManagedConnections(Ljava/security/Principal;Lorg/exolab/jms/net/connector/ConnectionRequestInfo;)Lorg/exolab/jms/net/connector/ManagedConnection; type is: class org.evosuite.testcase.statements.MethodStatement return type interface org.exolab.jms.net.connector.ManagedConnection
statement code is: ManagedConnection matchManagedConnections = defaultConnectionPool.matchManagedConnections(arg0, (ConnectionRequestInfo) null)
test data is: HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
HTTPManagedConnectionFactory hTTPManagedConnectionFactory = new HTTPManagedConnectionFactory();
ConnectionFactory createConnectionFactory = hTTPManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
JMXPrincipal jMXPrincipal = new JMXPrincipal("");
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
defaultConnectionPool.matchManagedConnections(jMXPrincipal, (ConnectionRequestInfo) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
        InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
        HTTPManagedConnectionFactory hTTPManagedConnectionFactory = new HTTPManagedConnectionFactory();
        ConnectionFactory createConnectionFactory = hTTPManagedConnectionFactory.createConnectionFactory(((ConnectionManager) (null)));
        JMXPrincipal jMXPrincipal = new JMXPrincipal("Administrator");
        ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, ((ManagedConnection) (null)));
        DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, ((Map) (null)));
        defaultConnectionPool.matchManagedConnections(jMXPrincipal, ((ConnectionRequestInfo) (null)));
    }
}
statement is: HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer()), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: mock(InvocationHandler.class, new ViolatedAssumptionAnswer()) target is:  method is: mock(java.lang.Class,<unknown>)
target name is: InvocationHandler argument is: InvocationHandler.class
Matched Method is: mock(interface org.exolab.jms.net.connector.InvocationHandler)
statement is: HTTPManagedConnectionFactory hTTPManagedConnectionFactory = new HTTPManagedConnectionFactory(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ConnectionFactory createConnectionFactory = hTTPManagedConnectionFactory.createConnectionFactory(((ConnectionManager) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: hTTPManagedConnectionFactory.createConnectionFactory(((ConnectionManager) (null))) target is: hTTPManagedConnectionFactory method is: createConnectionFactory(ConnectionManager)
source statement: org.exolab.jms.net.http.HTTPManagedConnectionFactory()V callee: VariableReference: Statement 2, type org.exolab.jms.net.http.HTTPManagedConnectionFactoryindex is: 2
Matched Method is: createConnectionFactory(Lorg/exolab/jms/net/connector/ConnectionManager;)Lorg/exolab/jms/net/connector/ConnectionFactory;
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: JMXPrincipal jMXPrincipal = new JMXPrincipal("Administrator"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, ((ManagedConnection) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, ((Map) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: defaultConnectionPool.matchManagedConnections(jMXPrincipal, ((ConnectionRequestInfo) (null))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: defaultConnectionPool.matchManagedConnections(jMXPrincipal, ((ConnectionRequestInfo) (null))) target is: defaultConnectionPool method is: matchManagedConnections(JMXPrincipal,ConnectionRequestInfo)
source statement: org.exolab.jms.net.connector.DefaultConnectionPool(Lorg/exolab/jms/net/connector/ManagedConnectionFactory;Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Ljava/util/Map;)V callee: VariableReference: Statement 6, type org.exolab.jms.net.connector.DefaultConnectionPoolindex is: 8
Matched Method is: matchManagedConnections(Ljava/security/Principal;Lorg/exolab/jms/net/connector/ConnectionRequestInfo;)Lorg/exolab/jms/net/connector/ManagedConnection;
i 1 Parameters size() 1 Num of Method Parameters: 2
TestCase is: HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
HTTPManagedConnectionFactory hTTPManagedConnectionFactory = new HTTPManagedConnectionFactory();
ConnectionManager connectionManager = null;
ConnectionFactory createConnectionFactory = hTTPManagedConnectionFactory.createConnectionFactory(connectionManager);
String string = "Administrator";
JMXPrincipal jMXPrincipal = new JMXPrincipal(string);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
ConnectionRequestInfo connectionRequestInfo = null;
((DefaultConnectionPool) jMXPrincipal).matchManagedConnections(jMXPrincipal, connectionRequestInfo);

statement is: org.exolab.jms.net.http.HTTPSManagedConnectionFactory()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.http.HTTPSManagedConnectionFactory
statement code is: HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory()
statement is: mock(interface org.exolab.jms.net.connector.InvocationHandler) type is: class org.evosuite.testcase.statements.FunctionalMockStatement return type interface org.exolab.jms.net.connector.InvocationHandler
statement code is: InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer())
statement is: createConnectionFactory(Lorg/exolab/jms/net/connector/ConnectionManager;)Lorg/exolab/jms/net/connector/ConnectionFactory; type is: class org.evosuite.testcase.statements.MethodStatement return type interface org.exolab.jms.net.connector.ConnectionFactory
statement code is: ConnectionFactory createConnectionFactory = hTTPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null)
statement is: org.apache.derby.iapi.services.io.FormatableHashtable()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.apache.derby.iapi.services.io.FormatableHashtable
statement code is: FormatableHashtable formatableHashtable = new FormatableHashtable()
statement is: org.exolab.jms.net.connector.DefaultConnectionPool(Lorg/exolab/jms/net/connector/ManagedConnectionFactory;Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Ljava/util/Map;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.DefaultConnectionPool
statement code is: DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(arg0, arg1, arg2, arg3)
statement is: closed(Lorg/exolab/jms/net/connector/ManagedConnection;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: defaultConnectionPool.closed((ManagedConnection) null)
test data is: HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = hTTPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
FormatableHashtable formatableHashtable = new FormatableHashtable();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPSManagedConnectionFactory, invocationHandler, createConnectionFactory, formatableHashtable);
defaultConnectionPool.closed((ManagedConnection) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
        InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
        ConnectionFactory createConnectionFactory = mock(ConnectionFactory.class, new ViolatedAssumptionAnswer());
        FormattableHashtable formatableHashtable = mock(FormattableHashtable.class);
        DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPSManagedConnectionFactory, invocationHandler, createConnectionFactory, formatableHashtable);
        defaultConnectionPool.closed(((ManagedConnection) (null)));
    }
}
statement is: HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer()), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: mock(InvocationHandler.class, new ViolatedAssumptionAnswer()) target is:  method is: mock(java.lang.Class,<unknown>)
target name is: InvocationHandler argument is: InvocationHandler.class
Matched Method is: mock(interface org.exolab.jms.net.connector.InvocationHandler)
statement is: ConnectionFactory createConnectionFactory = mock(ConnectionFactory.class, new ViolatedAssumptionAnswer()), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: mock(ConnectionFactory.class, new ViolatedAssumptionAnswer()) target is:  method is: mock(java.lang.Class,<unknown>)
target name is: InvocationHandler argument is: ConnectionFactory.class
statement is: FormattableHashtable formatableHashtable = mock(FormattableHashtable.class), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: mock(FormattableHashtable.class) target is:  method is: mock(java.lang.Class)
target name is: InvocationHandler argument is: FormattableHashtable.class
statement is: DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPSManagedConnectionFactory, invocationHandler, createConnectionFactory, formatableHashtable), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: org.exolab.jms.net.connector.DefaultConnectionPool(Lorg/exolab/jms/net/connector/ManagedConnectionFactory;Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Ljava/util/Map;)V
statement is: defaultConnectionPool.closed(((ManagedConnection) (null))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: defaultConnectionPool.closed(((ManagedConnection) (null))) target is: defaultConnectionPool method is: closed(ManagedConnection)
TestCase is: HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());

statement is: org.exolab.jms.net.http.HTTPSManagedConnectionFactory()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.http.HTTPSManagedConnectionFactory
statement code is: HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory()
statement is: mock(interface org.exolab.jms.net.connector.InvocationHandler) type is: class org.evosuite.testcase.statements.FunctionalMockStatement return type interface org.exolab.jms.net.connector.InvocationHandler
statement code is: InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer())
statement is: createConnectionFactory(Lorg/exolab/jms/net/connector/ConnectionManager;)Lorg/exolab/jms/net/connector/ConnectionFactory; type is: class org.evosuite.testcase.statements.MethodStatement return type interface org.exolab.jms.net.connector.ConnectionFactory
statement code is: ConnectionFactory createConnectionFactory = hTTPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null)
statement is: org.exolab.jms.net.connector.ContextInvocationHandler(Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Lorg/exolab/jms/net/connector/ManagedConnection;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.ContextInvocationHandler
statement code is: ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(arg0, arg1, (ManagedConnection) null)
statement is: org.exolab.jms.net.connector.DefaultConnectionPool(Lorg/exolab/jms/net/connector/ManagedConnectionFactory;Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Ljava/util/Map;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.DefaultConnectionPool
statement code is: DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(arg0, arg1, arg2, (Map) null)
statement is: org.exolab.jms.net.connector.ManagedConnectionHandle(Lorg/exolab/jms/net/connector/DefaultConnectionPool;Lorg/exolab/jms/net/connector/ManagedConnection;Lorg/exolab/jms/net/connector/ConnectionFactory;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.ManagedConnectionHandle
statement code is: ManagedConnectionHandle managedConnectionHandle = new ManagedConnectionHandle(arg0, (ManagedConnection) null, arg2)
statement is: java.sql.SQLException(Ljava/lang/String;Ljava/lang/String;I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.sql.SQLException
statement code is: SQLException sQLException = new SQLException("Reaping idle connection, URI=", "Zot[uH&4Sh_", 2147483645)
statement is: java.sql.SQLWarning(Ljava/lang/String;Ljava/lang/String;ILjava/lang/Throwable;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.sql.SQLWarning
statement code is: SQLWarning sQLWarning = new SQLWarning("EYQMIp7k]", "Reaping idle connection, URI=", (-1), arg3)
statement is: error(Lorg/exolab/jms/net/connector/ManagedConnection;Ljava/lang/Throwable;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: defaultConnectionPool.error((ManagedConnection) arg0, (Throwable) arg1)
test data is: HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = hTTPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
ManagedConnectionHandle managedConnectionHandle = new ManagedConnectionHandle(defaultConnectionPool, (ManagedConnection) null, createConnectionFactory);
SQLException sQLException = new SQLException("Reaping idle connection, URI=", "Zot[uH&4Sh_", 2147483645);
SQLWarning sQLWarning = new SQLWarning("EYQMIp7k]", "Reaping idle connection, URI=", (-1), sQLException);
defaultConnectionPool.error((ManagedConnection) managedConnectionHandle, (Throwable) sQLWarning);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
        InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
        ConnectionFactory createConnectionFactory = hTTPSManagedConnectionFactory.createConnectionFactory(((ConnectionManager) (null)));
        ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, ((ManagedConnection) (null)));
        DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, ((Map) (null)));
        ManagedConnectionHandle managedConnectionHandle = new ManagedConnectionHandle(defaultConnectionPool, ((ManagedConnection) (null)), createConnectionFactory);
        SQLException sQLException = new SQLException("Reaping idle connection, URI=https://www.example.com", "Zot[uH&4Sh_", 2147483645);
        SQLWarning sQLWarning = new SQLWarning("EYQMIp7k]", "Reaping idle connection, URI=https://www.example.com", -1, sQLException);
        defaultConnectionPool.error(((ManagedConnection) (managedConnectionHandle)), ((Throwable) (sQLWarning)));
    }
}
statement is: HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer()), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: mock(InvocationHandler.class, new ViolatedAssumptionAnswer()) target is:  method is: mock(java.lang.Class,<unknown>)
target name is: InvocationHandler argument is: InvocationHandler.class
Matched Method is: mock(interface org.exolab.jms.net.connector.InvocationHandler)
statement is: ConnectionFactory createConnectionFactory = hTTPSManagedConnectionFactory.createConnectionFactory(((ConnectionManager) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: hTTPSManagedConnectionFactory.createConnectionFactory(((ConnectionManager) (null))) target is: hTTPSManagedConnectionFactory method is: createConnectionFactory(ConnectionManager)
source statement: org.exolab.jms.net.http.HTTPSManagedConnectionFactory()V callee: VariableReference: Statement 0, type org.exolab.jms.net.http.HTTPSManagedConnectionFactoryindex is: 0
Matched Method is: createConnectionFactory(Lorg/exolab/jms/net/connector/ConnectionManager;)Lorg/exolab/jms/net/connector/ConnectionFactory;
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, ((ManagedConnection) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, ((Map) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ManagedConnectionHandle managedConnectionHandle = new ManagedConnectionHandle(defaultConnectionPool, ((ManagedConnection) (null)), createConnectionFactory), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: SQLException sQLException = new SQLException("Reaping idle connection, URI=https://www.example.com", "Zot[uH&4Sh_", 2147483645), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: SQLWarning sQLWarning = new SQLWarning("EYQMIp7k]", "Reaping idle connection, URI=https://www.example.com", -1, sQLException), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: defaultConnectionPool.error(((ManagedConnection) (managedConnectionHandle)), ((Throwable) (sQLWarning))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: defaultConnectionPool.error(((ManagedConnection) (managedConnectionHandle)), ((Throwable) (sQLWarning))) target is: defaultConnectionPool method is: error(ManagedConnection,java.lang.Throwable)
source statement: org.exolab.jms.net.connector.DefaultConnectionPool(Lorg/exolab/jms/net/connector/ManagedConnectionFactory;Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Ljava/util/Map;)V callee: VariableReference: Statement 4, type org.exolab.jms.net.connector.DefaultConnectionPoolindex is: 5
Matched Method is: error(Lorg/exolab/jms/net/connector/ManagedConnection;Ljava/lang/Throwable;)V
TestCase is: HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionManager connectionManager = null;
ConnectionFactory createConnectionFactory = hTTPSManagedConnectionFactory.createConnectionFactory(connectionManager);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
ManagedConnectionHandle managedConnectionHandle = new ManagedConnectionHandle(defaultConnectionPool, (ManagedConnection) createConnectionFactory, (ConnectionFactory) connectionManager);
String string = "Reaping idle connection, URI=https://www.example.com";
String string = "Zot[uH&4Sh_";
int _int = 2147483645;
SQLException sQLException = new SQLException(string, string, _int);
String string = "EYQMIp7k]";
String string = "Reaping idle connection, URI=https://www.example.com";
SQLWarning sQLWarning = new SQLWarning(string, string, (int) sQLException, (Throwable) managedConnectionHandle);
((DefaultConnectionPool) contextInvocationHandler).error((ManagedConnection) managedConnectionHandle, (Throwable) sQLWarning);

statement is: org.exolab.jms.net.http.HTTPSManagedConnectionFactory()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.http.HTTPSManagedConnectionFactory
statement code is: HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory()
statement is: mock(interface org.exolab.jms.net.connector.InvocationHandler) type is: class org.evosuite.testcase.statements.FunctionalMockStatement return type interface org.exolab.jms.net.connector.InvocationHandler
statement code is: InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer())
statement is: createConnectionFactory(Lorg/exolab/jms/net/connector/ConnectionManager;)Lorg/exolab/jms/net/connector/ConnectionFactory; type is: class org.evosuite.testcase.statements.MethodStatement return type interface org.exolab.jms.net.connector.ConnectionFactory
statement code is: ConnectionFactory createConnectionFactory = hTTPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null)
statement is: org.apache.derby.iapi.services.io.FormatableHashtable()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.apache.derby.iapi.services.io.FormatableHashtable
statement code is: FormatableHashtable formatableHashtable = new FormatableHashtable()
statement is: org.exolab.jms.net.connector.DefaultConnectionPool(Lorg/exolab/jms/net/connector/ManagedConnectionFactory;Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Ljava/util/Map;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.DefaultConnectionPool
statement code is: DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(arg0, arg1, arg2, arg3)
statement is: pinged(Lorg/exolab/jms/net/connector/ManagedConnection;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: defaultConnectionPool.pinged((ManagedConnection) null)
test data is: HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = hTTPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
FormatableHashtable formatableHashtable = new FormatableHashtable();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPSManagedConnectionFactory, invocationHandler, createConnectionFactory, formatableHashtable);
defaultConnectionPool.pinged((ManagedConnection) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
        InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
        ConnectionFactory createConnectionFactory = hTTPSManagedConnectionFactory.createConnectionFactory(((ConnectionManager) (null)));
        FormattedHashtable formattedHashtable = new FormattedHashtable();
        formattedHashtable.put("server", "https://example.com");
        formattedHashtable.put("port", 443);
        DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPSManagedConnectionFactory, invocationHandler, createConnectionFactory, formattedHashtable);
        defaultConnectionPool.pinged(((ManagedConnection) (null)));
    }
}
statement is: HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer()), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: mock(InvocationHandler.class, new ViolatedAssumptionAnswer()) target is:  method is: mock(java.lang.Class,<unknown>)
target name is: InvocationHandler argument is: InvocationHandler.class
Matched Method is: mock(interface org.exolab.jms.net.connector.InvocationHandler)
statement is: ConnectionFactory createConnectionFactory = hTTPSManagedConnectionFactory.createConnectionFactory(((ConnectionManager) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: hTTPSManagedConnectionFactory.createConnectionFactory(((ConnectionManager) (null))) target is: hTTPSManagedConnectionFactory method is: createConnectionFactory(ConnectionManager)
source statement: org.exolab.jms.net.http.HTTPSManagedConnectionFactory()V callee: VariableReference: Statement 0, type org.exolab.jms.net.http.HTTPSManagedConnectionFactoryindex is: 0
Matched Method is: createConnectionFactory(Lorg/exolab/jms/net/connector/ConnectionManager;)Lorg/exolab/jms/net/connector/ConnectionFactory;
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: FormattedHashtable formattedHashtable = new FormattedHashtable(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: formattedHashtable.put("server", "https://example.com"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: formattedHashtable.put("server", "https://example.com") target is: formattedHashtable method is: put(java.lang.String,java.lang.String)
statement is: formattedHashtable.put("port", 443), class spoon.support.reflect.code.CtInvocationImpl
invocation is: formattedHashtable.put("port", 443) target is: formattedHashtable method is: put(java.lang.String,int)
statement is: DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPSManagedConnectionFactory, invocationHandler, createConnectionFactory, formattedHashtable), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: defaultConnectionPool.pinged(((ManagedConnection) (null))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: defaultConnectionPool.pinged(((ManagedConnection) (null))) target is: defaultConnectionPool method is: pinged(ManagedConnection)
source statement: org.exolab.jms.net.connector.DefaultConnectionPool(Lorg/exolab/jms/net/connector/ManagedConnectionFactory;Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Ljava/util/Map;)V callee: VariableReference: Statement 4, type org.exolab.jms.net.connector.DefaultConnectionPoolindex is: 4
Matched Method is: pinged(Lorg/exolab/jms/net/connector/ManagedConnection;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
TestCase is: HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionManager connectionManager = null;
ConnectionFactory createConnectionFactory = hTTPSManagedConnectionFactory.createConnectionFactory(connectionManager);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPSManagedConnectionFactory, invocationHandler, createConnectionFactory, (Map) createConnectionFactory);
ManagedConnection managedConnection = null;
defaultConnectionPool.pinged(managedConnection);

statement is: org.exolab.jms.net.http.HTTPSManagedConnectionFactory()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.http.HTTPSManagedConnectionFactory
statement code is: HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory()
statement is: mock(interface org.exolab.jms.net.connector.InvocationHandler) type is: class org.evosuite.testcase.statements.FunctionalMockStatement return type interface org.exolab.jms.net.connector.InvocationHandler
statement code is: InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer())
statement is: org.exolab.jms.net.http.HTTPManagedConnectionFactory()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.http.HTTPManagedConnectionFactory
statement code is: HTTPManagedConnectionFactory hTTPManagedConnectionFactory = new HTTPManagedConnectionFactory()
statement is: createConnectionFactory(Lorg/exolab/jms/net/connector/ConnectionManager;)Lorg/exolab/jms/net/connector/ConnectionFactory; type is: class org.evosuite.testcase.statements.MethodStatement return type interface org.exolab.jms.net.connector.ConnectionFactory
statement code is: ConnectionFactory createConnectionFactory = hTTPManagedConnectionFactory.createConnectionFactory((ConnectionManager) null)
statement is: org.exolab.jms.net.connector.ContextInvocationHandler(Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Lorg/exolab/jms/net/connector/ManagedConnection;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.ContextInvocationHandler
statement code is: ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(arg0, arg1, (ManagedConnection) null)
statement is: org.exolab.jms.net.connector.DefaultConnectionPool(Lorg/exolab/jms/net/connector/ManagedConnectionFactory;Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Ljava/util/Map;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.DefaultConnectionPool
statement code is: DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(arg0, arg1, arg2, (Map) null)
statement is: close()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: defaultConnectionPool.close()
test data is: HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
HTTPManagedConnectionFactory hTTPManagedConnectionFactory = new HTTPManagedConnectionFactory();
ConnectionFactory createConnectionFactory = hTTPManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
defaultConnectionPool.close();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory("https://www.example.com", 443, "username", "password");
        InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
        HTTPManagedConnectionFactory hTTPManagedConnectionFactory = new HTTPManagedConnectionFactory("http://www.example.com", 80, "username", "password");
        ConnectionFactory createConnectionFactory = hTTPManagedConnectionFactory.createConnectionFactory(((ConnectionManager) (null)));
        ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, ((ManagedConnection) (null)));
        DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, ((Map) (null)));
        defaultConnectionPool.close();
    }
}
statement is: HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory("https://www.example.com", 443, "username", "password"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer()), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: mock(InvocationHandler.class, new ViolatedAssumptionAnswer()) target is:  method is: mock(java.lang.Class,<unknown>)
target name is: InvocationHandler argument is: InvocationHandler.class
Matched Method is: mock(interface org.exolab.jms.net.connector.InvocationHandler)
statement is: HTTPManagedConnectionFactory hTTPManagedConnectionFactory = new HTTPManagedConnectionFactory("http://www.example.com", 80, "username", "password"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ConnectionFactory createConnectionFactory = hTTPManagedConnectionFactory.createConnectionFactory(((ConnectionManager) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: hTTPManagedConnectionFactory.createConnectionFactory(((ConnectionManager) (null))) target is: hTTPManagedConnectionFactory method is: createConnectionFactory(ConnectionManager)
statement is: ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, ((ManagedConnection) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: org.exolab.jms.net.connector.ContextInvocationHandler(Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Lorg/exolab/jms/net/connector/ManagedConnection;)V
statement is: DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, ((Map) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: org.exolab.jms.net.connector.DefaultConnectionPool(Lorg/exolab/jms/net/connector/ManagedConnectionFactory;Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Ljava/util/Map;)V
statement is: defaultConnectionPool.close(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: defaultConnectionPool.close() target is: defaultConnectionPool method is: close()
TestCase is: InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());

statement is: org.exolab.jms.net.http.HTTPSManagedConnectionFactory()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.http.HTTPSManagedConnectionFactory
statement code is: HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory()
statement is: mock(interface org.exolab.jms.net.connector.InvocationHandler) type is: class org.evosuite.testcase.statements.FunctionalMockStatement return type interface org.exolab.jms.net.connector.InvocationHandler
statement code is: InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer())
statement is: createConnectionFactory(Lorg/exolab/jms/net/connector/ConnectionManager;)Lorg/exolab/jms/net/connector/ConnectionFactory; type is: class org.evosuite.testcase.statements.MethodStatement return type interface org.exolab.jms.net.connector.ConnectionFactory
statement code is: ConnectionFactory createConnectionFactory = hTTPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null)
statement is: org.exolab.jms.net.connector.ContextInvocationHandler(Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Lorg/exolab/jms/net/connector/ManagedConnection;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.ContextInvocationHandler
statement code is: ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(arg0, arg1, (ManagedConnection) null)
statement is: org.exolab.jms.net.connector.DefaultConnectionPool(Lorg/exolab/jms/net/connector/ManagedConnectionFactory;Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Ljava/util/Map;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.DefaultConnectionPool
statement code is: DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(arg0, arg1, arg2, (Map) null)
statement is: org.exolab.jms.net.connector.ManagedConnectionHandle(Lorg/exolab/jms/net/connector/DefaultConnectionPool;Lorg/exolab/jms/net/connector/ManagedConnection;Lorg/exolab/jms/net/connector/ConnectionFactory;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.ManagedConnectionHandle
statement code is: ManagedConnectionHandle managedConnectionHandle = new ManagedConnectionHandle(arg0, (ManagedConnection) null, arg2)
statement is: idle(Lorg/exolab/jms/net/connector/ManagedConnectionHandle;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: defaultConnectionPool.idle(arg0)
test data is: HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = hTTPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
ManagedConnectionHandle managedConnectionHandle = new ManagedConnectionHandle(defaultConnectionPool, (ManagedConnection) null, createConnectionFactory);
defaultConnectionPool.idle(managedConnectionHandle);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
        InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
        ConnectionFactory createConnectionFactory = hTTPSManagedConnectionFactory.createConnectionFactory(((ConnectionManager) (null)));
        ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, ((ManagedConnection) (null)));
        DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, ((Map) (null)));
        ManagedConnectionHandle managedConnectionHandle = new ManagedConnectionHandle(defaultConnectionPool, ((ManagedConnection) (null)), createConnectionFactory);
        defaultConnectionPool.idle(managedConnectionHandle);
    }
}
statement is: HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer()), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: mock(InvocationHandler.class, new ViolatedAssumptionAnswer()) target is:  method is: mock(java.lang.Class,<unknown>)
target name is: InvocationHandler argument is: InvocationHandler.class
Matched Method is: mock(interface org.exolab.jms.net.connector.InvocationHandler)
statement is: ConnectionFactory createConnectionFactory = hTTPSManagedConnectionFactory.createConnectionFactory(((ConnectionManager) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: hTTPSManagedConnectionFactory.createConnectionFactory(((ConnectionManager) (null))) target is: hTTPSManagedConnectionFactory method is: createConnectionFactory(ConnectionManager)
source statement: org.exolab.jms.net.http.HTTPSManagedConnectionFactory()V callee: VariableReference: Statement 0, type org.exolab.jms.net.http.HTTPSManagedConnectionFactoryindex is: 0
Matched Method is: createConnectionFactory(Lorg/exolab/jms/net/connector/ConnectionManager;)Lorg/exolab/jms/net/connector/ConnectionFactory;
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, ((ManagedConnection) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, ((Map) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ManagedConnectionHandle managedConnectionHandle = new ManagedConnectionHandle(defaultConnectionPool, ((ManagedConnection) (null)), createConnectionFactory), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: defaultConnectionPool.idle(managedConnectionHandle), class spoon.support.reflect.code.CtInvocationImpl
invocation is: defaultConnectionPool.idle(managedConnectionHandle) target is: defaultConnectionPool method is: idle(ManagedConnectionHandle)
source statement: org.exolab.jms.net.connector.DefaultConnectionPool(Lorg/exolab/jms/net/connector/ManagedConnectionFactory;Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Ljava/util/Map;)V callee: VariableReference: Statement 4, type org.exolab.jms.net.connector.DefaultConnectionPoolindex is: 5
Matched Method is: idle(Lorg/exolab/jms/net/connector/ManagedConnectionHandle;)V
TestCase is: HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionManager connectionManager = null;
ConnectionFactory createConnectionFactory = hTTPSManagedConnectionFactory.createConnectionFactory(connectionManager);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
ManagedConnectionHandle managedConnectionHandle = new ManagedConnectionHandle(defaultConnectionPool, (ManagedConnection) createConnectionFactory, (ConnectionFactory) connectionManager);
((DefaultConnectionPool) contextInvocationHandler).idle(managedConnectionHandle);

statement is: org.exolab.jms.net.http.HTTPSManagedConnectionFactory()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.http.HTTPSManagedConnectionFactory
statement code is: HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory()
statement is: mock(interface org.exolab.jms.net.connector.InvocationHandler) type is: class org.evosuite.testcase.statements.FunctionalMockStatement return type interface org.exolab.jms.net.connector.InvocationHandler
statement code is: InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer())
statement is: org.exolab.jms.net.http.HTTPManagedConnectionFactory()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.http.HTTPManagedConnectionFactory
statement code is: HTTPManagedConnectionFactory hTTPManagedConnectionFactory = new HTTPManagedConnectionFactory()
statement is: createConnectionFactory(Lorg/exolab/jms/net/connector/ConnectionManager;)Lorg/exolab/jms/net/connector/ConnectionFactory; type is: class org.evosuite.testcase.statements.MethodStatement return type interface org.exolab.jms.net.connector.ConnectionFactory
statement code is: ConnectionFactory createConnectionFactory = hTTPManagedConnectionFactory.createConnectionFactory((ConnectionManager) null)
statement is: org.exolab.jms.net.connector.ContextInvocationHandler(Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Lorg/exolab/jms/net/connector/ManagedConnection;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.ContextInvocationHandler
statement code is: ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(arg0, arg1, (ManagedConnection) null)
statement is: org.exolab.jms.net.connector.DefaultConnectionPool(Lorg/exolab/jms/net/connector/ManagedConnectionFactory;Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Ljava/util/Map;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.DefaultConnectionPool
statement code is: DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(arg0, arg1, arg2, (Map) null)
statement is: add(Lorg/exolab/jms/net/connector/ManagedConnection;Z)Lorg/exolab/jms/net/connector/ManagedConnection; type is: class org.evosuite.testcase.statements.MethodStatement return type interface org.exolab.jms.net.connector.ManagedConnection
statement code is: ManagedConnection add = defaultConnectionPool.add((ManagedConnection) null, false)
test data is: HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
HTTPManagedConnectionFactory hTTPManagedConnectionFactory = new HTTPManagedConnectionFactory();
ConnectionFactory createConnectionFactory = hTTPManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
defaultConnectionPool.add((ManagedConnection) null, false);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
        InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
        HTTPManagedConnectionFactory hTTPManagedConnectionFactory = new HTTPManagedConnectionFactory();
        ConnectionFactory createConnectionFactory = hTTPManagedConnectionFactory.createConnectionFactory(((ConnectionManager) (null)));
        ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, ((ManagedConnection) (null)));
        DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, ((Map) (null)));
        defaultConnectionPool.add(((ManagedConnection) (null)), false);
    }
}
statement is: HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer()), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: mock(InvocationHandler.class, new ViolatedAssumptionAnswer()) target is:  method is: mock(java.lang.Class,<unknown>)
target name is: InvocationHandler argument is: InvocationHandler.class
Matched Method is: mock(interface org.exolab.jms.net.connector.InvocationHandler)
statement is: HTTPManagedConnectionFactory hTTPManagedConnectionFactory = new HTTPManagedConnectionFactory(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ConnectionFactory createConnectionFactory = hTTPManagedConnectionFactory.createConnectionFactory(((ConnectionManager) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: hTTPManagedConnectionFactory.createConnectionFactory(((ConnectionManager) (null))) target is: hTTPManagedConnectionFactory method is: createConnectionFactory(ConnectionManager)
source statement: org.exolab.jms.net.http.HTTPManagedConnectionFactory()V callee: VariableReference: Statement 2, type org.exolab.jms.net.http.HTTPManagedConnectionFactoryindex is: 2
Matched Method is: createConnectionFactory(Lorg/exolab/jms/net/connector/ConnectionManager;)Lorg/exolab/jms/net/connector/ConnectionFactory;
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, ((ManagedConnection) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, ((Map) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: defaultConnectionPool.add(((ManagedConnection) (null)), false), class spoon.support.reflect.code.CtInvocationImpl
invocation is: defaultConnectionPool.add(((ManagedConnection) (null)), false) target is: defaultConnectionPool method is: add(ManagedConnection,boolean)
source statement: org.exolab.jms.net.connector.DefaultConnectionPool(Lorg/exolab/jms/net/connector/ManagedConnectionFactory;Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Ljava/util/Map;)V callee: VariableReference: Statement 5, type org.exolab.jms.net.connector.DefaultConnectionPoolindex is: 6
Matched Method is: add(Lorg/exolab/jms/net/connector/ManagedConnection;Z)Lorg/exolab/jms/net/connector/ManagedConnection;
i 1 Parameters size() 1 Num of Method Parameters: 2
TestCase is: HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
HTTPManagedConnectionFactory hTTPManagedConnectionFactory = new HTTPManagedConnectionFactory();
ConnectionManager connectionManager = null;
ConnectionFactory createConnectionFactory = hTTPManagedConnectionFactory.createConnectionFactory(connectionManager);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
boolean _boolean = false;
boolean _boolean = null;
((DefaultConnectionPool) contextInvocationHandler).add((ManagedConnection) _boolean, _boolean);

statement is: mock(interface org.exolab.jms.net.connector.InvocationHandler) type is: class org.evosuite.testcase.statements.FunctionalMockStatement return type interface org.exolab.jms.net.connector.InvocationHandler
statement code is: InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer())
statement is: org.exolab.jms.net.http.HTTPManagedConnectionFactory()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.http.HTTPManagedConnectionFactory
statement code is: HTTPManagedConnectionFactory hTTPManagedConnectionFactory = new HTTPManagedConnectionFactory()
statement is: createConnectionFactory(Lorg/exolab/jms/net/connector/ConnectionManager;)Lorg/exolab/jms/net/connector/ConnectionFactory; type is: class org.evosuite.testcase.statements.MethodStatement return type interface org.exolab.jms.net.connector.ConnectionFactory
statement code is: ConnectionFactory createConnectionFactory = hTTPManagedConnectionFactory.createConnectionFactory((ConnectionManager) null)
statement is: org.exolab.jms.net.vm.VMManagedConnectionFactory()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.vm.VMManagedConnectionFactory
statement code is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory()
statement is: org.apache.derby.iapi.sql.depend.ProviderList()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.apache.derby.iapi.sql.depend.ProviderList
statement code is: ProviderList providerList = new ProviderList()
statement is: org.exolab.jms.net.connector.DefaultConnectionPool(Lorg/exolab/jms/net/connector/ManagedConnectionFactory;Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Ljava/util/Map;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.DefaultConnectionPool
statement code is: DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(arg0, arg1, arg2, arg3)
statement is: closeException()Lorg/apache/derby/iapi/error/StandardException; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.apache.derby.iapi.error.StandardException
statement code is: StandardException closeException = StandardException.closeException()
statement is: error(Lorg/exolab/jms/net/connector/ManagedConnectionAcceptor;Ljava/lang/Throwable;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: defaultConnectionPool.error((ManagedConnectionAcceptor) null, (Throwable) arg1)
test data is: InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
HTTPManagedConnectionFactory hTTPManagedConnectionFactory = new HTTPManagedConnectionFactory();
ConnectionFactory createConnectionFactory = hTTPManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
ProviderList providerList = new ProviderList();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, invocationHandler, createConnectionFactory, providerList);
StandardException closeException = StandardException.closeException();
defaultConnectionPool.error((ManagedConnectionAcceptor) null, (Throwable) closeException);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
        HTTPManagedConnectionFactory hTTPManagedConnectionFactory = new HTTPManagedConnectionFactory();
        ConnectionFactory createConnectionFactory = hTTPManagedConnectionFactory.createConnectionFactory(((ConnectionManager) (null)));
        VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
        ProviderList providerList = new ProviderList();
        DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, invocationHandler, createConnectionFactory, providerList);
        StandardException closeException = StandardException.closeException("Test exception message");
        defaultConnectionPool.error(((ManagedConnectionAcceptor) (null)), ((Throwable) (closeException)));
    }
}
statement is: InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer()), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: mock(InvocationHandler.class, new ViolatedAssumptionAnswer()) target is:  method is: mock(java.lang.Class,<unknown>)
target name is: InvocationHandler argument is: InvocationHandler.class
Matched Method is: mock(interface org.exolab.jms.net.connector.InvocationHandler)
statement is: HTTPManagedConnectionFactory hTTPManagedConnectionFactory = new HTTPManagedConnectionFactory(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ConnectionFactory createConnectionFactory = hTTPManagedConnectionFactory.createConnectionFactory(((ConnectionManager) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: hTTPManagedConnectionFactory.createConnectionFactory(((ConnectionManager) (null))) target is: hTTPManagedConnectionFactory method is: createConnectionFactory(ConnectionManager)
source statement: org.exolab.jms.net.http.HTTPManagedConnectionFactory()V callee: VariableReference: Statement 1, type org.exolab.jms.net.http.HTTPManagedConnectionFactoryindex is: 1
Matched Method is: createConnectionFactory(Lorg/exolab/jms/net/connector/ConnectionManager;)Lorg/exolab/jms/net/connector/ConnectionFactory;
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ProviderList providerList = new ProviderList(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, invocationHandler, createConnectionFactory, providerList), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: StandardException closeException = StandardException.closeException("Test exception message"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: StandardException.closeException("Test exception message") target is: StandardException method is: closeException(java.lang.String)
statement is: defaultConnectionPool.error(((ManagedConnectionAcceptor) (null)), ((Throwable) (closeException))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: defaultConnectionPool.error(((ManagedConnectionAcceptor) (null)), ((Throwable) (closeException))) target is: defaultConnectionPool method is: error(ManagedConnectionAcceptor,java.lang.Throwable)
source statement: org.exolab.jms.net.connector.DefaultConnectionPool(Lorg/exolab/jms/net/connector/ManagedConnectionFactory;Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Ljava/util/Map;)V callee: VariableReference: Statement 5, type org.exolab.jms.net.connector.DefaultConnectionPoolindex is: 6
Matched Method is: error(Lorg/exolab/jms/net/connector/ManagedConnectionAcceptor;Ljava/lang/Throwable;)V
i 0 Parameters size() 0 Num of Method Parameters: 2
i 1 Parameters size() 0 Num of Method Parameters: 2
TestCase is: InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
HTTPManagedConnectionFactory hTTPManagedConnectionFactory = new HTTPManagedConnectionFactory();
ConnectionManager connectionManager = null;
ConnectionFactory createConnectionFactory = hTTPManagedConnectionFactory.createConnectionFactory(connectionManager);
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
ProviderList providerList = new ProviderList();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, invocationHandler, createConnectionFactory, providerList);
ManagedConnectionAcceptor managedConnectionAcceptor = null;
StandardException standardException = null;
((DefaultConnectionPool) providerList).error(managedConnectionAcceptor, (Throwable) standardException);

statement is: org.exolab.jms.net.http.HTTPSManagedConnectionFactory()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.http.HTTPSManagedConnectionFactory
statement code is: HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory()
statement is: mock(interface org.exolab.jms.net.connector.InvocationHandler) type is: class org.evosuite.testcase.statements.FunctionalMockStatement return type interface org.exolab.jms.net.connector.InvocationHandler
statement code is: InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer())
statement is: org.exolab.jms.net.http.HTTPManagedConnectionFactory()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.http.HTTPManagedConnectionFactory
statement code is: HTTPManagedConnectionFactory hTTPManagedConnectionFactory = new HTTPManagedConnectionFactory()
statement is: createConnectionFactory(Lorg/exolab/jms/net/connector/ConnectionManager;)Lorg/exolab/jms/net/connector/ConnectionFactory; type is: class org.evosuite.testcase.statements.MethodStatement return type interface org.exolab.jms.net.connector.ConnectionFactory
statement code is: ConnectionFactory createConnectionFactory = hTTPManagedConnectionFactory.createConnectionFactory((ConnectionManager) null)
statement is: org.exolab.jms.net.connector.ContextInvocationHandler(Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Lorg/exolab/jms/net/connector/ManagedConnection;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.ContextInvocationHandler
statement code is: ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(arg0, arg1, (ManagedConnection) null)
statement is: org.exolab.jms.net.connector.DefaultConnectionPool(Lorg/exolab/jms/net/connector/ManagedConnectionFactory;Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Ljava/util/Map;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.DefaultConnectionPool
statement code is: DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(arg0, arg1, arg2, (Map) null)
statement is: remove(Lorg/exolab/jms/net/connector/ManagedConnection;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: defaultConnectionPool.remove((ManagedConnection) null)
test data is: HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
HTTPManagedConnectionFactory hTTPManagedConnectionFactory = new HTTPManagedConnectionFactory();
ConnectionFactory createConnectionFactory = hTTPManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
defaultConnectionPool.remove((ManagedConnection) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
        InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
        HTTPManagedConnectionFactory hTTPManagedConnectionFactory = new HTTPManagedConnectionFactory();
        ConnectionFactory createConnectionFactory = hTTPManagedConnectionFactory.createConnectionFactory(((ConnectionManager) (null)));
        ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, ((ManagedConnection) (null)));
        DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, ((Map) (null)));
        defaultConnectionPool.remove(((ManagedConnection) (null)));
    }
}
statement is: HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer()), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: mock(InvocationHandler.class, new ViolatedAssumptionAnswer()) target is:  method is: mock(java.lang.Class,<unknown>)
target name is: InvocationHandler argument is: InvocationHandler.class
Matched Method is: mock(interface org.exolab.jms.net.connector.InvocationHandler)
statement is: HTTPManagedConnectionFactory hTTPManagedConnectionFactory = new HTTPManagedConnectionFactory(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ConnectionFactory createConnectionFactory = hTTPManagedConnectionFactory.createConnectionFactory(((ConnectionManager) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: hTTPManagedConnectionFactory.createConnectionFactory(((ConnectionManager) (null))) target is: hTTPManagedConnectionFactory method is: createConnectionFactory(ConnectionManager)
source statement: org.exolab.jms.net.http.HTTPManagedConnectionFactory()V callee: VariableReference: Statement 2, type org.exolab.jms.net.http.HTTPManagedConnectionFactoryindex is: 2
Matched Method is: createConnectionFactory(Lorg/exolab/jms/net/connector/ConnectionManager;)Lorg/exolab/jms/net/connector/ConnectionFactory;
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, ((ManagedConnection) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, ((Map) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: defaultConnectionPool.remove(((ManagedConnection) (null))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: defaultConnectionPool.remove(((ManagedConnection) (null))) target is: defaultConnectionPool method is: remove(ManagedConnection)
source statement: org.exolab.jms.net.connector.DefaultConnectionPool(Lorg/exolab/jms/net/connector/ManagedConnectionFactory;Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Ljava/util/Map;)V callee: VariableReference: Statement 5, type org.exolab.jms.net.connector.DefaultConnectionPoolindex is: 6
Matched Method is: remove(Lorg/exolab/jms/net/connector/ManagedConnection;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
TestCase is: HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
HTTPManagedConnectionFactory hTTPManagedConnectionFactory = new HTTPManagedConnectionFactory();
ConnectionManager connectionManager = null;
ConnectionFactory createConnectionFactory = hTTPManagedConnectionFactory.createConnectionFactory(connectionManager);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
ManagedConnection managedConnection = null;
((DefaultConnectionPool) contextInvocationHandler).remove(managedConnection);

* test suite isTestSuite: 36
Test 0: 
HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
HTTPManagedConnectionFactory hTTPManagedConnectionFactory = new HTTPManagedConnectionFactory();
ConnectionFactory createConnectionFactory = hTTPManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
defaultConnectionPool.getManagedConnectionAcceptorListener();
Test 1: 
HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
HTTPManagedConnectionFactory hTTPManagedConnectionFactory = new HTTPManagedConnectionFactory();
ConnectionFactory createConnectionFactory = hTTPManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
// Undeclared exception!
try { 
  defaultConnectionPool.accepted((ManagedConnectionAcceptor) null, (ManagedConnection) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.exolab.jms.net.connector.DefaultConnectionPool", e);
}

Test 2: 
HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = hTTPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
FormatableHashtable formatableHashtable = new FormatableHashtable();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPSManagedConnectionFactory, invocationHandler, createConnectionFactory, formatableHashtable);
MulticastCallerListener multicastCallerListener = new MulticastCallerListener();
defaultConnectionPool.setCallerListener(multicastCallerListener);
Test 3: 
HTTPManagedConnectionFactory hTTPManagedConnectionFactory = new HTTPManagedConnectionFactory();
ConnectionFactory createConnectionFactory = hTTPManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
JMXPrincipal jMXPrincipal = new JMXPrincipal("");
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler((InvocationHandler) null, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
try { 
  defaultConnectionPool.createManagedConnection(jMXPrincipal, (ConnectionRequestInfo) null);
  fail("Expecting exception: Exception");

} catch(Exception e) {
   //
   // Argument 'info' must be of type org.exolab.jms.net.connector.URIRequestInfo
   //
   verifyException("org.exolab.jms.net.vm.VMManagedConnectionFactory", e);
}

Test 4: 
HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = hTTPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
Configuration configuration = new Configuration();
DatabaseService databaseService = new DatabaseService(configuration);
UserManager userManager = new UserManager(configuration, databaseService);
AuthenticationMgr authenticationMgr = new AuthenticationMgr(userManager);
try { 
  defaultConnectionPool.createManagedConnectionAcceptor(authenticationMgr, (ConnectionRequestInfo) null);
  fail("Expecting exception: Exception");

} catch(Exception e) {
   //
   // Argument 'info' must be of type org.exolab.jms.net.socket.SocketRequestInfo
   //
   verifyException("org.exolab.jms.net.http.HTTPSManagedConnectionFactory", e);
}

Test 5: 
HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = hTTPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
defaultConnectionPool.matchManagedConnectionAcceptors((ConnectionRequestInfo) null);
Test 6: 
HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
ConnectionFactory createConnectionFactory = hTTPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
FormatableHashtable formatableHashtable = new FormatableHashtable();
DefaultConnectionPool defaultConnectionPool = null;
try {
  defaultConnectionPool = new DefaultConnectionPool((ManagedConnectionFactory) null, (InvocationHandler) null, createConnectionFactory, formatableHashtable);
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // Argument 'factory' is null
   //
   verifyException("org.exolab.jms.net.connector.DefaultConnectionPool", e);
}

Test 7: 
HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
ConnectionFactory createConnectionFactory = hTTPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
FormatableHashtable formatableHashtable = new FormatableHashtable();
DefaultConnectionPool defaultConnectionPool = null;
try {
  defaultConnectionPool = new DefaultConnectionPool(hTTPSManagedConnectionFactory, (InvocationHandler) null, createConnectionFactory, formatableHashtable);
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // Argument 'handler' is null
   //
   verifyException("org.exolab.jms.net.connector.DefaultConnectionPool", e);
}

Test 8: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler((InvocationHandler) null, (ConnectionFactory) null, (ManagedConnection) null);
Hashtable<Object, ManagedConnectionHandle> hashtable = new Hashtable<Object, ManagedConnectionHandle>();
DefaultConnectionPool defaultConnectionPool = null;
try {
  defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, (ConnectionFactory) null, hashtable);
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // Argument 'resolver' is null
   //
   verifyException("org.exolab.jms.net.connector.DefaultConnectionPool", e);
}

Test 9: 
HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
HTTPManagedConnectionFactory hTTPManagedConnectionFactory = new HTTPManagedConnectionFactory();
ConnectionFactory createConnectionFactory = hTTPManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
JMXPrincipal jMXPrincipal = new JMXPrincipal("");
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
defaultConnectionPool.matchManagedConnections(jMXPrincipal, (ConnectionRequestInfo) null);
Test 10: 
HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = hTTPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
FormatableHashtable formatableHashtable = new FormatableHashtable();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPSManagedConnectionFactory, invocationHandler, createConnectionFactory, formatableHashtable);
defaultConnectionPool.closed((ManagedConnection) null);
Test 11: 
HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = hTTPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
ManagedConnectionHandle managedConnectionHandle = new ManagedConnectionHandle(defaultConnectionPool, (ManagedConnection) null, createConnectionFactory);
SQLException sQLException = new SQLException("Reaping idle connection, URI=", "Zot[uH&4Sh_", 2147483645);
SQLWarning sQLWarning = new SQLWarning("EYQMIp7k]", "Reaping idle connection, URI=", (-1), sQLException);
defaultConnectionPool.error((ManagedConnection) managedConnectionHandle, (Throwable) sQLWarning);
Test 12: 
HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = hTTPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
FormatableHashtable formatableHashtable = new FormatableHashtable();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPSManagedConnectionFactory, invocationHandler, createConnectionFactory, formatableHashtable);
defaultConnectionPool.pinged((ManagedConnection) null);
Test 13: 
HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
HTTPManagedConnectionFactory hTTPManagedConnectionFactory = new HTTPManagedConnectionFactory();
ConnectionFactory createConnectionFactory = hTTPManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
defaultConnectionPool.close();
Test 14: 
HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = hTTPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
ManagedConnectionHandle managedConnectionHandle = new ManagedConnectionHandle(defaultConnectionPool, (ManagedConnection) null, createConnectionFactory);
defaultConnectionPool.idle(managedConnectionHandle);
Test 15: 
HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
HTTPManagedConnectionFactory hTTPManagedConnectionFactory = new HTTPManagedConnectionFactory();
ConnectionFactory createConnectionFactory = hTTPManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
// Undeclared exception!
try { 
  defaultConnectionPool.add((ManagedConnection) null, false);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.exolab.jms.net.connector.DefaultConnectionPool", e);
}

Test 16: 
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
HTTPManagedConnectionFactory hTTPManagedConnectionFactory = new HTTPManagedConnectionFactory();
ConnectionFactory createConnectionFactory = hTTPManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
ProviderList providerList = new ProviderList();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, invocationHandler, createConnectionFactory, providerList);
StandardException closeException = StandardException.closeException();
// Undeclared exception!
try { 
  defaultConnectionPool.error((ManagedConnectionAcceptor) null, (Throwable) closeException);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.exolab.jms.net.connector.DefaultConnectionPool", e);
}

Test 17: 
HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
HTTPManagedConnectionFactory hTTPManagedConnectionFactory = new HTTPManagedConnectionFactory();
ConnectionFactory createConnectionFactory = hTTPManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
defaultConnectionPool.remove((ManagedConnection) null);
Test 18: 
HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
HTTPManagedConnectionFactory hTTPManagedConnectionFactory = new HTTPManagedConnectionFactory();

Test 19: 
HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
HTTPManagedConnectionFactory hTTPManagedConnectionFactory = new HTTPManagedConnectionFactory();
ConnectionFactory createConnectionFactory = hTTPManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
((DefaultConnectionPool) contextInvocationHandler).accepted((ManagedConnectionAcceptor) null, (ManagedConnection) null);

Test 20: 
HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = hTTPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
FormatableHashtable formatableHashtable = new FormatableHashtable();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPSManagedConnectionFactory, invocationHandler, createConnectionFactory, formatableHashtable);
MulticastCallerListener multicastCallerListener = new MulticastCallerListener();
((DefaultConnectionPool) formatableHashtable).setCallerListener(multicastCallerListener);

Test 21: 
HTTPManagedConnectionFactory hTTPManagedConnectionFactory = new HTTPManagedConnectionFactory();
ConnectionFactory createConnectionFactory = hTTPManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
JMXPrincipal jMXPrincipal = new JMXPrincipal("user");
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler((InvocationHandler) createConnectionFactory, (ConnectionFactory) null, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
ConnectionRequestInfo connectionRequestInfo = null;
((DefaultConnectionPool) jMXPrincipal).createManagedConnection(jMXPrincipal, connectionRequestInfo);

Test 22: 
HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = hTTPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) "https://example.com");
String string = "user@example.com";
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) string);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
Configuration configuration = new Configuration();
DatabaseService databaseService = new DatabaseService(configuration);
UserManager userManager = new UserManager(configuration, databaseService);
AuthenticationMgr authenticationMgr = new AuthenticationMgr(userManager);
ConnectionRequestInfo connectionRequestInfo = null;
((DefaultConnectionPool) string).createManagedConnectionAcceptor(authenticationMgr, connectionRequestInfo);

Test 23: 
HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = hTTPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) "https://example.com");
String string = "https://example.com/api/v1/users";
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) string);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
ConnectionRequestInfo connectionRequestInfo = null;
((DefaultConnectionPool) string).matchManagedConnectionAcceptors(connectionRequestInfo);

Test 24: 
HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
String string = "https://www.example.com";
ConnectionFactory createConnectionFactory = hTTPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) "https://www.example.com");
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool((ManagedConnectionFactory) createConnectionFactory, (InvocationHandler) null, (ConnectionFactory) string, (Map) createConnectionFactory);

Test 25: 
HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
ConnectionFactory createConnectionFactory = hTTPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
FormatableHashtable formatableHashtable = new FormatableHashtable();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPSManagedConnectionFactory, (InvocationHandler) createConnectionFactory, (ConnectionFactory) formatableHashtable, (Map) createConnectionFactory);

Test 26: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler((InvocationHandler) null, (ConnectionFactory) null, (ManagedConnection) null);
Hashtable<Object, ManagedConnectionHandle> hashtable = new Hashtable<Object, ManagedConnectionHandle>();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, hashtable, hashtable);

Test 27: 
HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
HTTPManagedConnectionFactory hTTPManagedConnectionFactory = new HTTPManagedConnectionFactory();
ConnectionFactory createConnectionFactory = hTTPManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
JMXPrincipal jMXPrincipal = new JMXPrincipal("Administrator");
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
((DefaultConnectionPool) jMXPrincipal).matchManagedConnections(jMXPrincipal, (ConnectionRequestInfo) null);

Test 28: 
HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());

Test 29: 
HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = hTTPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
ManagedConnectionHandle managedConnectionHandle = new ManagedConnectionHandle(defaultConnectionPool, (ManagedConnection) createConnectionFactory, (ConnectionFactory) null);
String string = "Reaping idle connection, URI=https://www.example.com";
String string = "Zot[uH&4Sh_";
int _int = 2147483645;
SQLException sQLException = new SQLException(string, string, _int);
String string = "EYQMIp7k]";
String string = "Reaping idle connection, URI=https://www.example.com";
SQLWarning sQLWarning = new SQLWarning(string, string, (int) sQLException, (Throwable) managedConnectionHandle);
((DefaultConnectionPool) contextInvocationHandler).error((ManagedConnection) managedConnectionHandle, (Throwable) sQLWarning);

Test 30: 
HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = hTTPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPSManagedConnectionFactory, invocationHandler, createConnectionFactory, (Map) createConnectionFactory);
ManagedConnection managedConnection = null;
defaultConnectionPool.pinged(managedConnection);

Test 31: 
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());

Test 32: 
HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = hTTPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
ManagedConnectionHandle managedConnectionHandle = new ManagedConnectionHandle(defaultConnectionPool, (ManagedConnection) createConnectionFactory, (ConnectionFactory) null);
((DefaultConnectionPool) contextInvocationHandler).idle(managedConnectionHandle);

Test 33: 
HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
HTTPManagedConnectionFactory hTTPManagedConnectionFactory = new HTTPManagedConnectionFactory();
ConnectionFactory createConnectionFactory = hTTPManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
((DefaultConnectionPool) contextInvocationHandler).add((ManagedConnection) false, (boolean) (Boolean) null);

Test 34: 
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
HTTPManagedConnectionFactory hTTPManagedConnectionFactory = new HTTPManagedConnectionFactory();
ConnectionFactory createConnectionFactory = hTTPManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
ProviderList providerList = new ProviderList();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, invocationHandler, createConnectionFactory, providerList);
((DefaultConnectionPool) providerList).error((ManagedConnectionAcceptor) null, (Throwable) null);

Test 35: 
HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
HTTPManagedConnectionFactory hTTPManagedConnectionFactory = new HTTPManagedConnectionFactory();
ConnectionFactory createConnectionFactory = hTTPManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
((DefaultConnectionPool) contextInvocationHandler).remove((ManagedConnection) null);


* Generated after the refinement and before minimization 36 tests with total length 237
* test suite isTestSuite: 36
Test 0: 
HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
HTTPManagedConnectionFactory hTTPManagedConnectionFactory = new HTTPManagedConnectionFactory();
ConnectionFactory createConnectionFactory = hTTPManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
defaultConnectionPool.getManagedConnectionAcceptorListener();
Test 1: 
HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
HTTPManagedConnectionFactory hTTPManagedConnectionFactory = new HTTPManagedConnectionFactory();
ConnectionFactory createConnectionFactory = hTTPManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
// Undeclared exception!
try { 
  defaultConnectionPool.accepted((ManagedConnectionAcceptor) null, (ManagedConnection) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.exolab.jms.net.connector.DefaultConnectionPool", e);
}

Test 2: 
HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = hTTPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
FormatableHashtable formatableHashtable = new FormatableHashtable();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPSManagedConnectionFactory, invocationHandler, createConnectionFactory, formatableHashtable);
MulticastCallerListener multicastCallerListener = new MulticastCallerListener();
defaultConnectionPool.setCallerListener(multicastCallerListener);
Test 3: 
HTTPManagedConnectionFactory hTTPManagedConnectionFactory = new HTTPManagedConnectionFactory();
ConnectionFactory createConnectionFactory = hTTPManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
JMXPrincipal jMXPrincipal = new JMXPrincipal("");
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler((InvocationHandler) null, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
try { 
  defaultConnectionPool.createManagedConnection(jMXPrincipal, (ConnectionRequestInfo) null);
  fail("Expecting exception: Exception");

} catch(Exception e) {
   //
   // Argument 'info' must be of type org.exolab.jms.net.connector.URIRequestInfo
   //
   verifyException("org.exolab.jms.net.vm.VMManagedConnectionFactory", e);
}

Test 4: 
HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = hTTPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
Configuration configuration = new Configuration();
DatabaseService databaseService = new DatabaseService(configuration);
UserManager userManager = new UserManager(configuration, databaseService);
AuthenticationMgr authenticationMgr = new AuthenticationMgr(userManager);
try { 
  defaultConnectionPool.createManagedConnectionAcceptor(authenticationMgr, (ConnectionRequestInfo) null);
  fail("Expecting exception: Exception");

} catch(Exception e) {
   //
   // Argument 'info' must be of type org.exolab.jms.net.socket.SocketRequestInfo
   //
   verifyException("org.exolab.jms.net.http.HTTPSManagedConnectionFactory", e);
}

Test 5: 
HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = hTTPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
defaultConnectionPool.matchManagedConnectionAcceptors((ConnectionRequestInfo) null);
Test 6: 
HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
ConnectionFactory createConnectionFactory = hTTPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
FormatableHashtable formatableHashtable = new FormatableHashtable();
DefaultConnectionPool defaultConnectionPool = null;
try {
  defaultConnectionPool = new DefaultConnectionPool((ManagedConnectionFactory) null, (InvocationHandler) null, createConnectionFactory, formatableHashtable);
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // Argument 'factory' is null
   //
   verifyException("org.exolab.jms.net.connector.DefaultConnectionPool", e);
}

Test 7: 
HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
ConnectionFactory createConnectionFactory = hTTPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
FormatableHashtable formatableHashtable = new FormatableHashtable();
DefaultConnectionPool defaultConnectionPool = null;
try {
  defaultConnectionPool = new DefaultConnectionPool(hTTPSManagedConnectionFactory, (InvocationHandler) null, createConnectionFactory, formatableHashtable);
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // Argument 'handler' is null
   //
   verifyException("org.exolab.jms.net.connector.DefaultConnectionPool", e);
}

Test 8: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler((InvocationHandler) null, (ConnectionFactory) null, (ManagedConnection) null);
Hashtable<Object, ManagedConnectionHandle> hashtable = new Hashtable<Object, ManagedConnectionHandle>();
DefaultConnectionPool defaultConnectionPool = null;
try {
  defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, (ConnectionFactory) null, hashtable);
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // Argument 'resolver' is null
   //
   verifyException("org.exolab.jms.net.connector.DefaultConnectionPool", e);
}

Test 9: 
HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
HTTPManagedConnectionFactory hTTPManagedConnectionFactory = new HTTPManagedConnectionFactory();
ConnectionFactory createConnectionFactory = hTTPManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
JMXPrincipal jMXPrincipal = new JMXPrincipal("");
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
defaultConnectionPool.matchManagedConnections(jMXPrincipal, (ConnectionRequestInfo) null);
Test 10: 
HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = hTTPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
FormatableHashtable formatableHashtable = new FormatableHashtable();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPSManagedConnectionFactory, invocationHandler, createConnectionFactory, formatableHashtable);
defaultConnectionPool.closed((ManagedConnection) null);
Test 11: 
HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = hTTPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
ManagedConnectionHandle managedConnectionHandle = new ManagedConnectionHandle(defaultConnectionPool, (ManagedConnection) null, createConnectionFactory);
SQLException sQLException = new SQLException("Reaping idle connection, URI=", "Zot[uH&4Sh_", 2147483645);
SQLWarning sQLWarning = new SQLWarning("EYQMIp7k]", "Reaping idle connection, URI=", (-1), sQLException);
defaultConnectionPool.error((ManagedConnection) managedConnectionHandle, (Throwable) sQLWarning);
Test 12: 
HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = hTTPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
FormatableHashtable formatableHashtable = new FormatableHashtable();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPSManagedConnectionFactory, invocationHandler, createConnectionFactory, formatableHashtable);
defaultConnectionPool.pinged((ManagedConnection) null);
Test 13: 
HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
HTTPManagedConnectionFactory hTTPManagedConnectionFactory = new HTTPManagedConnectionFactory();
ConnectionFactory createConnectionFactory = hTTPManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
defaultConnectionPool.close();
Test 14: 
HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = hTTPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
ManagedConnectionHandle managedConnectionHandle = new ManagedConnectionHandle(defaultConnectionPool, (ManagedConnection) null, createConnectionFactory);
defaultConnectionPool.idle(managedConnectionHandle);
Test 15: 
HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
HTTPManagedConnectionFactory hTTPManagedConnectionFactory = new HTTPManagedConnectionFactory();
ConnectionFactory createConnectionFactory = hTTPManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
// Undeclared exception!
try { 
  defaultConnectionPool.add((ManagedConnection) null, false);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.exolab.jms.net.connector.DefaultConnectionPool", e);
}

Test 16: 
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
HTTPManagedConnectionFactory hTTPManagedConnectionFactory = new HTTPManagedConnectionFactory();
ConnectionFactory createConnectionFactory = hTTPManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
ProviderList providerList = new ProviderList();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, invocationHandler, createConnectionFactory, providerList);
StandardException closeException = StandardException.closeException();
// Undeclared exception!
try { 
  defaultConnectionPool.error((ManagedConnectionAcceptor) null, (Throwable) closeException);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.exolab.jms.net.connector.DefaultConnectionPool", e);
}

Test 17: 
HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
HTTPManagedConnectionFactory hTTPManagedConnectionFactory = new HTTPManagedConnectionFactory();
ConnectionFactory createConnectionFactory = hTTPManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
defaultConnectionPool.remove((ManagedConnection) null);
Test 18: 
HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
HTTPManagedConnectionFactory hTTPManagedConnectionFactory = new HTTPManagedConnectionFactory();

Test 19: 
HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
HTTPManagedConnectionFactory hTTPManagedConnectionFactory = new HTTPManagedConnectionFactory();
ConnectionFactory createConnectionFactory = hTTPManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
((DefaultConnectionPool) contextInvocationHandler).accepted((ManagedConnectionAcceptor) null, (ManagedConnection) null);

Test 20: 
HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = hTTPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
FormatableHashtable formatableHashtable = new FormatableHashtable();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPSManagedConnectionFactory, invocationHandler, createConnectionFactory, formatableHashtable);
MulticastCallerListener multicastCallerListener = new MulticastCallerListener();
((DefaultConnectionPool) formatableHashtable).setCallerListener(multicastCallerListener);

Test 21: 
HTTPManagedConnectionFactory hTTPManagedConnectionFactory = new HTTPManagedConnectionFactory();
ConnectionFactory createConnectionFactory = hTTPManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
JMXPrincipal jMXPrincipal = new JMXPrincipal("user");
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler((InvocationHandler) createConnectionFactory, (ConnectionFactory) null, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
ConnectionRequestInfo connectionRequestInfo = null;
((DefaultConnectionPool) jMXPrincipal).createManagedConnection(jMXPrincipal, connectionRequestInfo);

Test 22: 
HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = hTTPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) "https://example.com");
String string = "user@example.com";
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) string);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
Configuration configuration = new Configuration();
DatabaseService databaseService = new DatabaseService(configuration);
UserManager userManager = new UserManager(configuration, databaseService);
AuthenticationMgr authenticationMgr = new AuthenticationMgr(userManager);
ConnectionRequestInfo connectionRequestInfo = null;
((DefaultConnectionPool) string).createManagedConnectionAcceptor(authenticationMgr, connectionRequestInfo);

Test 23: 
HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = hTTPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) "https://example.com");
String string = "https://example.com/api/v1/users";
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) string);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
ConnectionRequestInfo connectionRequestInfo = null;
((DefaultConnectionPool) string).matchManagedConnectionAcceptors(connectionRequestInfo);

Test 24: 
HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
String string = "https://www.example.com";
ConnectionFactory createConnectionFactory = hTTPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) "https://www.example.com");
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool((ManagedConnectionFactory) createConnectionFactory, (InvocationHandler) null, (ConnectionFactory) string, (Map) createConnectionFactory);

Test 25: 
HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
ConnectionFactory createConnectionFactory = hTTPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
FormatableHashtable formatableHashtable = new FormatableHashtable();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPSManagedConnectionFactory, (InvocationHandler) createConnectionFactory, (ConnectionFactory) formatableHashtable, (Map) createConnectionFactory);

Test 26: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler((InvocationHandler) null, (ConnectionFactory) null, (ManagedConnection) null);
Hashtable<Object, ManagedConnectionHandle> hashtable = new Hashtable<Object, ManagedConnectionHandle>();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, hashtable, hashtable);

Test 27: 
HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
HTTPManagedConnectionFactory hTTPManagedConnectionFactory = new HTTPManagedConnectionFactory();
ConnectionFactory createConnectionFactory = hTTPManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
JMXPrincipal jMXPrincipal = new JMXPrincipal("Administrator");
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
((DefaultConnectionPool) jMXPrincipal).matchManagedConnections(jMXPrincipal, (ConnectionRequestInfo) null);

Test 28: 
HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());

Test 29: 
HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = hTTPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
ManagedConnectionHandle managedConnectionHandle = new ManagedConnectionHandle(defaultConnectionPool, (ManagedConnection) createConnectionFactory, (ConnectionFactory) null);
String string = "Reaping idle connection, URI=https://www.example.com";
String string = "Zot[uH&4Sh_";
int _int = 2147483645;
SQLException sQLException = new SQLException(string, string, _int);
String string = "EYQMIp7k]";
String string = "Reaping idle connection, URI=https://www.example.com";
SQLWarning sQLWarning = new SQLWarning(string, string, (int) sQLException, (Throwable) managedConnectionHandle);
((DefaultConnectionPool) contextInvocationHandler).error((ManagedConnection) managedConnectionHandle, (Throwable) sQLWarning);

Test 30: 
HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = hTTPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPSManagedConnectionFactory, invocationHandler, createConnectionFactory, (Map) createConnectionFactory);
ManagedConnection managedConnection = null;
defaultConnectionPool.pinged(managedConnection);

Test 31: 
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());

Test 32: 
HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = hTTPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
ManagedConnectionHandle managedConnectionHandle = new ManagedConnectionHandle(defaultConnectionPool, (ManagedConnection) createConnectionFactory, (ConnectionFactory) null);
((DefaultConnectionPool) contextInvocationHandler).idle(managedConnectionHandle);

Test 33: 
HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
HTTPManagedConnectionFactory hTTPManagedConnectionFactory = new HTTPManagedConnectionFactory();
ConnectionFactory createConnectionFactory = hTTPManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
((DefaultConnectionPool) contextInvocationHandler).add((ManagedConnection) false, (boolean) (Boolean) null);

Test 34: 
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
HTTPManagedConnectionFactory hTTPManagedConnectionFactory = new HTTPManagedConnectionFactory();
ConnectionFactory createConnectionFactory = hTTPManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
ProviderList providerList = new ProviderList();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, invocationHandler, createConnectionFactory, providerList);
((DefaultConnectionPool) providerList).error((ManagedConnectionAcceptor) null, (Throwable) null);

Test 35: 
HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
HTTPManagedConnectionFactory hTTPManagedConnectionFactory = new HTTPManagedConnectionFactory();
ConnectionFactory createConnectionFactory = hTTPManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
((DefaultConnectionPool) contextInvocationHandler).remove((ManagedConnection) null);


* Minimizing test suite
* test suite isTestSuite: 18
Test 0: 
HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
HTTPManagedConnectionFactory hTTPManagedConnectionFactory = new HTTPManagedConnectionFactory();
ConnectionFactory createConnectionFactory = hTTPManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
defaultConnectionPool.getManagedConnectionAcceptorListener();
Test 1: 
HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
HTTPManagedConnectionFactory hTTPManagedConnectionFactory = new HTTPManagedConnectionFactory();
ConnectionFactory createConnectionFactory = hTTPManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
// Undeclared exception!
try { 
  defaultConnectionPool.accepted((ManagedConnectionAcceptor) null, (ManagedConnection) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.exolab.jms.net.connector.DefaultConnectionPool", e);
}

Test 2: 
HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = hTTPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
FormatableHashtable formatableHashtable = new FormatableHashtable();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPSManagedConnectionFactory, invocationHandler, createConnectionFactory, formatableHashtable);
MulticastCallerListener multicastCallerListener = new MulticastCallerListener();
defaultConnectionPool.setCallerListener(multicastCallerListener);
Test 3: 
HTTPManagedConnectionFactory hTTPManagedConnectionFactory = new HTTPManagedConnectionFactory();
ConnectionFactory createConnectionFactory = hTTPManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
JMXPrincipal jMXPrincipal = new JMXPrincipal("");
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler((InvocationHandler) null, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
try { 
  defaultConnectionPool.createManagedConnection(jMXPrincipal, (ConnectionRequestInfo) null);
  fail("Expecting exception: Exception");

} catch(Exception e) {
   //
   // Argument 'info' must be of type org.exolab.jms.net.connector.URIRequestInfo
   //
   verifyException("org.exolab.jms.net.vm.VMManagedConnectionFactory", e);
}

Test 4: 
HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = hTTPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
Configuration configuration = new Configuration();
DatabaseService databaseService = new DatabaseService(configuration);
UserManager userManager = new UserManager(configuration, databaseService);
AuthenticationMgr authenticationMgr = new AuthenticationMgr(userManager);
try { 
  defaultConnectionPool.createManagedConnectionAcceptor(authenticationMgr, (ConnectionRequestInfo) null);
  fail("Expecting exception: Exception");

} catch(Exception e) {
   //
   // Argument 'info' must be of type org.exolab.jms.net.socket.SocketRequestInfo
   //
   verifyException("org.exolab.jms.net.http.HTTPSManagedConnectionFactory", e);
}

Test 5: 
HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = hTTPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
defaultConnectionPool.matchManagedConnectionAcceptors((ConnectionRequestInfo) null);
Test 6: 
HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
ConnectionFactory createConnectionFactory = hTTPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
FormatableHashtable formatableHashtable = new FormatableHashtable();
DefaultConnectionPool defaultConnectionPool = null;
try {
  defaultConnectionPool = new DefaultConnectionPool((ManagedConnectionFactory) null, (InvocationHandler) null, createConnectionFactory, formatableHashtable);
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // Argument 'factory' is null
   //
   verifyException("org.exolab.jms.net.connector.DefaultConnectionPool", e);
}

Test 7: 
HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
ConnectionFactory createConnectionFactory = hTTPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
FormatableHashtable formatableHashtable = new FormatableHashtable();
DefaultConnectionPool defaultConnectionPool = null;
try {
  defaultConnectionPool = new DefaultConnectionPool(hTTPSManagedConnectionFactory, (InvocationHandler) null, createConnectionFactory, formatableHashtable);
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // Argument 'handler' is null
   //
   verifyException("org.exolab.jms.net.connector.DefaultConnectionPool", e);
}

Test 8: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler((InvocationHandler) null, (ConnectionFactory) null, (ManagedConnection) null);
Hashtable<Object, ManagedConnectionHandle> hashtable = new Hashtable<Object, ManagedConnectionHandle>();
DefaultConnectionPool defaultConnectionPool = null;
try {
  defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, (ConnectionFactory) null, hashtable);
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // Argument 'resolver' is null
   //
   verifyException("org.exolab.jms.net.connector.DefaultConnectionPool", e);
}

Test 9: 
HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
HTTPManagedConnectionFactory hTTPManagedConnectionFactory = new HTTPManagedConnectionFactory();
ConnectionFactory createConnectionFactory = hTTPManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
JMXPrincipal jMXPrincipal = new JMXPrincipal("");
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
defaultConnectionPool.matchManagedConnections(jMXPrincipal, (ConnectionRequestInfo) null);
Test 10: 
HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = hTTPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
FormatableHashtable formatableHashtable = new FormatableHashtable();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPSManagedConnectionFactory, invocationHandler, createConnectionFactory, formatableHashtable);
defaultConnectionPool.closed((ManagedConnection) null);
Test 11: 
HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = hTTPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
ManagedConnectionHandle managedConnectionHandle = new ManagedConnectionHandle(defaultConnectionPool, (ManagedConnection) null, createConnectionFactory);
SQLException sQLException = new SQLException("Reaping idle connection, URI=", "Zot[uH&4Sh_", 2147483645);
SQLWarning sQLWarning = new SQLWarning("EYQMIp7k]", "Reaping idle connection, URI=", (-1), sQLException);
defaultConnectionPool.error((ManagedConnection) managedConnectionHandle, (Throwable) sQLWarning);
Test 12: 
HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = hTTPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
FormatableHashtable formatableHashtable = new FormatableHashtable();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPSManagedConnectionFactory, invocationHandler, createConnectionFactory, formatableHashtable);
defaultConnectionPool.pinged((ManagedConnection) null);
Test 13: 
HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
HTTPManagedConnectionFactory hTTPManagedConnectionFactory = new HTTPManagedConnectionFactory();
ConnectionFactory createConnectionFactory = hTTPManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
defaultConnectionPool.close();
Test 14: 
HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = hTTPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
ManagedConnectionHandle managedConnectionHandle = new ManagedConnectionHandle(defaultConnectionPool, (ManagedConnection) null, createConnectionFactory);
defaultConnectionPool.idle(managedConnectionHandle);
Test 15: 
HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
HTTPManagedConnectionFactory hTTPManagedConnectionFactory = new HTTPManagedConnectionFactory();
ConnectionFactory createConnectionFactory = hTTPManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(hTTPSManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
// Undeclared exception!
try { 
  defaultConnectionPool.add((ManagedConnection) null, false);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.exolab.jms.net.connector.DefaultConnectionPool", e);
}

Test 16: 
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
HTTPManagedConnectionFactory hTTPManagedConnectionFactory = new HTTPManagedConnectionFactory();
ConnectionFactory createConnectionFactory = hTTPManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
ProviderList providerList = new ProviderList();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, invocationHandler, createConnectionFactory, providerList);
StandardException closeException = StandardException.closeException();
// Undeclared exception!
try { 
  defaultConnectionPool.error((ManagedConnectionAcceptor) null, (Throwable) closeException);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.exolab.jms.net.connector.DefaultConnectionPool", e);
}

Test 17: 
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
HTTPManagedConnectionFactory hTTPManagedConnectionFactory = new HTTPManagedConnectionFactory();
ConnectionFactory createConnectionFactory = hTTPManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
// Undeclared exception!
try { 
  ((DefaultConnectionPool) contextInvocationHandler).remove((ManagedConnection) null);
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
}


* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 29%
* Total number of goals: 99
* Number of covered goals: 29
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 40%
* Total number of goals: 214
* Number of covered goals: 86
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 25%
* Total number of goals: 12
* Number of covered goals: 3
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 89%
* Total number of goals: 18
* Number of covered goals: 16
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 29%
* Total number of goals: 99
* Number of covered goals: 29
* Generated 18 tests with total length 119
* Resulting test suite's coverage: 41% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 8%
* Compiling and checking tests
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: HTTPSManagedConnectionFactory hTTPSManagedConnectionFactory = new HTTPSManagedConnectionFactory();
ConnectionFactory arg2 = hTTPSManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
FormatableHashtable arg3 = new FormatableHashtable();
DefaultConnectionPool defaultConnectionPool = null;
try {
  defaultConnectionPool = new DefaultConnectionPool((ManagedConnectionFactory) null, (InvocationHandler) null, arg2, arg3);
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // Argument 'factory' is null
   //
   verifyException("org.exolab.jms.net.connector.DefaultConnectionPool", e);
}


** It was a parseable test case! 
refined test name is: testCreateConnectionPoolWithNullConnectionFactory
* Compiling Tests
refined test name is: testCreateConnectionFactoryWithNullProperties
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: HTTPSManagedConnectionFactory arg0 = new HTTPSManagedConnectionFactory();
ConnectionFactory arg2 = arg0.createConnectionFactory((ConnectionManager) null);
FormatableHashtable arg3 = new FormatableHashtable();
DefaultConnectionPool defaultConnectionPool = null;
try {
  defaultConnectionPool = new DefaultConnectionPool(arg0, (InvocationHandler) null, arg2, arg3);
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // Argument 'handler' is null
   //
   verifyException("org.exolab.jms.net.connector.DefaultConnectionPool", e);
}


** It was a parseable test case! 
refined test name is: testCreateDefaultConnectionPoolWithNullFactory
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: VMManagedConnectionFactory arg0 = new VMManagedConnectionFactory();
ContextInvocationHandler arg1 = new ContextInvocationHandler((InvocationHandler) null, (ConnectionFactory) null, (ManagedConnection) null);
Hashtable<Object, ManagedConnectionHandle> arg3 = new Hashtable<Object, ManagedConnectionHandle>();
DefaultConnectionPool defaultConnectionPool = null;
try {
  defaultConnectionPool = new DefaultConnectionPool(arg0, arg1, (ConnectionFactory) null, arg3);
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // Argument 'resolver' is null
   //
   verifyException("org.exolab.jms.net.connector.DefaultConnectionPool", e);
}


** It was a parseable test case! 
refined test name is: testConstructorThrowsExceptionIfResolverIsNull
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: HTTPSManagedConnectionFactory arg0 = new HTTPSManagedConnectionFactory();
InvocationHandler arg1 = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory arg2 = arg0.createConnectionFactory((ConnectionManager) null);
FormatableHashtable arg3 = new FormatableHashtable();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(arg0, arg1, arg2, arg3);
defaultConnectionPool.closed((ManagedConnection) null);

** It was a parseable test case! 
refined test name is: testCreateAndConfigureDefaultConnectionPool
* Compiling Tests
refined test name is: testCreateConnectionFactoryAndClosedMethods
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: HTTPSManagedConnectionFactory arg0 = new HTTPSManagedConnectionFactory();
InvocationHandler arg1 = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory arg2 = arg0.createConnectionFactory((ConnectionManager) null);
FormatableHashtable arg3 = new FormatableHashtable();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(arg0, arg1, arg2, arg3);
defaultConnectionPool.pinged((ManagedConnection) null);

** It was a parseable test case! 
refined test name is: testPingedNullConnectionReturnsFalse
* Compiling Tests
refined test name is: testPingedWithNullConnectionReturnsFalse
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 11:11:19.699 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar4817833701228533866.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:11:19.725 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4817833701228533866.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 11:11:19.793 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar4817833701228533866.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:11:19.795 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4817833701228533866.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 11:11:19.872 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar4817833701228533866.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:11:19.873 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4817833701228533866.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 11:11:19.975 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar4817833701228533866.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:11:19.976 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4817833701228533866.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 11:11:20.050 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar4817833701228533866.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:11:20.051 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4817833701228533866.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 3 called: 1 to improve: false
** Write a test suite: 4 called: 2 to improve: false
[MASTER] 11:11:20.169 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar4817833701228533866.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:11:20.170 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4817833701228533866.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 4 called: 2 to improve: false
[MASTER] 11:11:20.317 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar4817833701228533866.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:11:20.318 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4817833701228533866.jar
[MASTER] 11:11:20.479 [logback-1] WARN  TimeController - Already entered in phase: INLINING. This will mess up the timing calculations.
[MASTER] 11:11:20.635 [logback-1] WARN  TimeController - Already entered in phase: MINIMIZATION. This will mess up the timing calculations.
* Computation finished
