* EvoSuite 1.0.0-SNAPSHOT
* Going to generate test cases for class: org.exolab.jms.net.connector.DefaultConnectionPool
* Starting Client-0
* Properties loaded from /home/roham/Results-Utestgen/dataset/SF110-new-res/66_openjms/evosuite-files/evosuite.properties
* Connecting to master process on port 20495
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 13:57:10.603 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 13:57:10.605 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 13:57:10.607 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 13:57:10.665 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 13:57:10.670 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 13:57:10.671 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 13:57:11.095 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.sql.SQLType
[MASTER] 13:57:12.859 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 13:57:12.871 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 13:57:12.872 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 13:57:14.079 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 13:57:14.081 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 13:57:14.083 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 13:57:14.084 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 13:57:14.086 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 13:57:14.087 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 13:57:14.641 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 13:57:15.448 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
* Finished analyzing classpath
* Generating tests for class org.exolab.jms.net.connector.DefaultConnectionPool
* Test criteria:
  - Branch Coverage
  - Line Coverage
  - Method-Output Coverage
  - Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 442
* Using seed 1710251827539
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%]* Initial Number of Goals in DynaMOSA = 179 / 442
[MASTER] 13:57:17.122 [logback-1] WARN  TestCluster - Failed to check cache for java.util.AbstractMap<K, V>.SimpleImmutableEntry<K, V> : Type points to itself
[Progress:>                             2%] [Cov:=>                                 5%][Progress:>                             2%] [Cov:=>                                 5%][Progress:=>                            4%] [Cov:======>                            18%][Progress:=>                            4%] [Cov:======>                            18%][Progress:=>                            6%] [Cov:=======>                           22%][Progress:=>                            6%] [Cov:=========>                         27%][Progress:=>                            6%] [Cov:=========>                         27%][Progress:==>                           9%] [Cov:==========>                        29%][Progress:====>                         16%] [Cov:==========>                        29%][Progress:====>                         16%] [Cov:==========>                        30%][Progress:====>                         16%] [Cov:==========>                        31%][Progress:=====>                        19%] [Cov:============>                      36%][Progress:======>                       23%] [Cov:=============>                     39%][Progress:=======>                      24%] [Cov:=============>                     39%][Progress:=======>                      24%] [Cov:=============>                     39%][Progress:=======>                      25%] [Cov:=============>                     39%][Progress:=======>                      26%] [Cov:=============>                     39%][Progress:=========>                    30%] [Cov:=============>                     39%][Progress:=========>                    32%] [Cov:=============>                     39%][Progress:=========>                    32%] [Cov:=============>                     39%][Progress:=========>                    32%] [Cov:=============>                     39%][Progress:==========>                   34%] [Cov:===============>                   43%][Progress:==========>                   36%] [Cov:===============>                   43%][Progress:==========>                   36%] [Cov:===============>                   43%][Progress:==========>                   36%] [Cov:===============>                   43%][Progress:============>                 40%] [Cov:===============>                   43%][Progress:============>                 42%] [Cov:===============>                   43%][Progress:=============>                44%] [Cov:===============>                   43%][Progress:=============>                44%] [Cov:===============>                   43%][Progress:=============>                44%] [Cov:===============>                   43%][Progress:=============>                46%] [Cov:===============>                   43%][Progress:==============>               47%] [Cov:===============>                   43%][Progress:==============>               47%] [Cov:===============>                   43%][Progress:==============>               47%] [Cov:===============>                   43%][Progress:==============>               48%] [Cov:===============>                   43%][Progress:==============>               48%] [Cov:===============>                   43%][Progress:==============>               48%] [Cov:===============>                   43%][Progress:==============>               48%] [Cov:===============>                   43%][Progress:==============>               49%] [Cov:===============>                   43%][Progress:===============>              50%] [Cov:===============>                   43%][Progress:===============>              50%] [Cov:===============>                   43%][Progress:================>             56%] [Cov:===============>                   43%][Progress:================>             56%] [Cov:===============>                   43%][Progress:================>             56%] [Cov:===============>                   43%][Progress:================>             56%] [Cov:===============>                   43%][Progress:================>             56%] [Cov:===============>                   43%][Progress:=================>            58%] [Cov:===============>                   43%][Progress:==================>           60%] [Cov:===============>                   43%][Progress:==================>           60%] [Cov:===============>                   43%][Progress:==================>           62%] [Cov:===============>                   43%][Progress:==================>           62%] [Cov:===============>                   43%][Progress:==================>           62%] [Cov:===============>                   43%][Progress:====================>         68%] [Cov:===============>                   43%][Progress:======================>       74%] [Cov:===============>                   43%][Progress:======================>       74%] [Cov:===============>                   43%][Progress:======================>       75%] [Cov:===============>                   43%][Progress:======================>       75%] [Cov:===============>                   43%][Progress:======================>       75%] [Cov:===============>                   43%][Progress:======================>       75%] [Cov:===============>                   43%][Progress:======================>       76%] [Cov:===============>                   43%][Progress:======================>       76%] [Cov:===============>                   43%][Progress:======================>       76%] [Cov:===============>                   43%][Progress:=======================>      77%] [Cov:===============>                   43%][Progress:=======================>      79%] [Cov:===============>                   43%][Progress:=======================>      79%] [Cov:===============>                   43%][Progress:=======================>      79%] [Cov:===============>                   43%][Progress:=========================>    84%] [Cov:===============>                   43%][Progress:==========================>   88%] [Cov:===============>                   43%][Progress:==========================>   88%] [Cov:===============>                   43%][Progress:==========================>   88%] [Cov:===============>                   43%][Progress:===========================>  90%] [Cov:===============>                   43%][Progress:============================> 94%] [Cov:===============>                   43%][Progress:============================> 96%] [Cov:===============>                   43%][Progress:==============================100%] [Cov:===============>                   43%]
* Search finished after 203s and 73 generations, 37387 statements, best individual has fitness: 275.0
* Generated before the refinement 17 tests with total length 116
statement is: org.exolab.jms.net.vm.VMManagedConnectionFactory()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.vm.VMManagedConnectionFactory
statement code is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory()
statement is: mock(interface org.exolab.jms.net.connector.InvocationHandler) type is: class org.evosuite.testcase.statements.FunctionalMockStatement return type interface org.exolab.jms.net.connector.InvocationHandler
statement code is: InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer())
statement is: createConnectionFactory(Lorg/exolab/jms/net/connector/ConnectionManager;)Lorg/exolab/jms/net/connector/ConnectionFactory; type is: class org.evosuite.testcase.statements.MethodStatement return type interface org.exolab.jms.net.connector.ConnectionFactory
statement code is: ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null)
statement is: org.exolab.jms.net.connector.ContextInvocationHandler(Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Lorg/exolab/jms/net/connector/ManagedConnection;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.ContextInvocationHandler
statement code is: ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(arg0, arg1, (ManagedConnection) null)
statement is: org.exolab.jms.net.connector.DefaultConnectionPool(Lorg/exolab/jms/net/connector/ManagedConnectionFactory;Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Ljava/util/Map;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.DefaultConnectionPool
statement code is: DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(arg0, arg1, arg2, (Map) null)
statement is: getManagedConnectionAcceptorListener()Lorg/exolab/jms/net/connector/ManagedConnectionAcceptorListener; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.exolab.jms.net.connector.DefaultConnectionPool
statement code is: DefaultConnectionPool managedConnectionAcceptorListener = (DefaultConnectionPool)defaultConnectionPool.getManagedConnectionAcceptorListener()
test data is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
defaultConnectionPool.getManagedConnectionAcceptorListener();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
        InvocationHandler invocationHandler = mock(ViolatedAssumptionAnswer.class);
        ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory(new ConnectionManager());
        ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, new ManagedConnection());
        DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, new ManagedConnectionAcceptorListener());
        defaultConnectionPool.getManagedConnectionAcceptorListener();
    }
}
statement is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: InvocationHandler invocationHandler = mock(ViolatedAssumptionAnswer.class), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: mock(ViolatedAssumptionAnswer.class) target is:  method is: mock(java.lang.Class)
target name is: InvocationHandler argument is: ViolatedAssumptionAnswer.class
statement is: ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory(new ConnectionManager()), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: vMManagedConnectionFactory.createConnectionFactory(new ConnectionManager()) target is: vMManagedConnectionFactory method is: createConnectionFactory(ConnectionManager)
source statement: org.exolab.jms.net.vm.VMManagedConnectionFactory()V callee: VariableReference: Statement 0, type org.exolab.jms.net.vm.VMManagedConnectionFactoryindex is: 0
Matched Method is: createConnectionFactory(Lorg/exolab/jms/net/connector/ConnectionManager;)Lorg/exolab/jms/net/connector/ConnectionFactory;
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, new ManagedConnection()), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, new ManagedConnectionAcceptorListener()), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: defaultConnectionPool.getManagedConnectionAcceptorListener(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: defaultConnectionPool.getManagedConnectionAcceptorListener() target is: defaultConnectionPool method is: getManagedConnectionAcceptorListener()
source statement: org.exolab.jms.net.connector.DefaultConnectionPool(Lorg/exolab/jms/net/connector/ManagedConnectionFactory;Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Ljava/util/Map;)V callee: VariableReference: Statement 4, type org.exolab.jms.net.connector.DefaultConnectionPoolindex is: 4
Matched Method is: getManagedConnectionAcceptorListener()Lorg/exolab/jms/net/connector/ManagedConnectionAcceptorListener;
TestCase is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
ConnectionManager connectionManager = null;
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory(connectionManager);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler((InvocationHandler) createConnectionFactory, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
defaultConnectionPool.getManagedConnectionAcceptorListener();

statement is: org.exolab.jms.net.vm.VMManagedConnectionFactory()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.vm.VMManagedConnectionFactory
statement code is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory()
statement is: mock(interface org.exolab.jms.net.connector.InvocationHandler) type is: class org.evosuite.testcase.statements.FunctionalMockStatement return type interface org.exolab.jms.net.connector.InvocationHandler
statement code is: InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer())
statement is: createConnectionFactory(Lorg/exolab/jms/net/connector/ConnectionManager;)Lorg/exolab/jms/net/connector/ConnectionFactory; type is: class org.evosuite.testcase.statements.MethodStatement return type interface org.exolab.jms.net.connector.ConnectionFactory
statement code is: ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null)
statement is: org.exolab.jms.net.connector.ContextInvocationHandler(Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Lorg/exolab/jms/net/connector/ManagedConnection;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.ContextInvocationHandler
statement code is: ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(arg0, arg1, (ManagedConnection) null)
statement is: org.exolab.jms.net.connector.DefaultConnectionPool(Lorg/exolab/jms/net/connector/ManagedConnectionFactory;Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Ljava/util/Map;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.DefaultConnectionPool
statement code is: DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(arg0, arg1, arg2, (Map) null)
statement is: accepted(Lorg/exolab/jms/net/connector/ManagedConnectionAcceptor;Lorg/exolab/jms/net/connector/ManagedConnection;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: defaultConnectionPool.accepted((ManagedConnectionAcceptor) null, (ManagedConnection) null)
test data is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
defaultConnectionPool.accepted((ManagedConnectionAcceptor) null, (ManagedConnection) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
        InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
        ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory(((ConnectionManager) (null)));
        ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, ((ManagedConnection) (null)));
        DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, ((Map) (null)));
        defaultConnectionPool.accepted(((ManagedConnectionAcceptor) (null)), ((ManagedConnection) (null)));
    }
}
statement is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer()), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: mock(InvocationHandler.class, new ViolatedAssumptionAnswer()) target is:  method is: mock(java.lang.Class,<unknown>)
target name is: InvocationHandler argument is: InvocationHandler.class
Matched Method is: mock(interface org.exolab.jms.net.connector.InvocationHandler)
statement is: ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory(((ConnectionManager) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: vMManagedConnectionFactory.createConnectionFactory(((ConnectionManager) (null))) target is: vMManagedConnectionFactory method is: createConnectionFactory(ConnectionManager)
source statement: org.exolab.jms.net.vm.VMManagedConnectionFactory()V callee: VariableReference: Statement 0, type org.exolab.jms.net.vm.VMManagedConnectionFactoryindex is: 0
Matched Method is: createConnectionFactory(Lorg/exolab/jms/net/connector/ConnectionManager;)Lorg/exolab/jms/net/connector/ConnectionFactory;
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, ((ManagedConnection) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, ((Map) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: defaultConnectionPool.accepted(((ManagedConnectionAcceptor) (null)), ((ManagedConnection) (null))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: defaultConnectionPool.accepted(((ManagedConnectionAcceptor) (null)), ((ManagedConnection) (null))) target is: defaultConnectionPool method is: accepted(ManagedConnectionAcceptor,ManagedConnection)
source statement: org.exolab.jms.net.connector.DefaultConnectionPool(Lorg/exolab/jms/net/connector/ManagedConnectionFactory;Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Ljava/util/Map;)V callee: VariableReference: Statement 4, type org.exolab.jms.net.connector.DefaultConnectionPoolindex is: 5
Matched Method is: accepted(Lorg/exolab/jms/net/connector/ManagedConnectionAcceptor;Lorg/exolab/jms/net/connector/ManagedConnection;)V
i 0 Parameters size() 0 Num of Method Parameters: 2
i 1 Parameters size() 0 Num of Method Parameters: 2
TestCase is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionManager connectionManager = null;
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory(connectionManager);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
ManagedConnectionAcceptor managedConnectionAcceptor = null;
ManagedConnection managedConnection = null;
((DefaultConnectionPool) contextInvocationHandler).accepted(managedConnectionAcceptor, managedConnection);

statement is: org.exolab.jms.net.vm.VMManagedConnectionFactory()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.vm.VMManagedConnectionFactory
statement code is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory()
statement is: mock(interface org.exolab.jms.net.connector.InvocationHandler) type is: class org.evosuite.testcase.statements.FunctionalMockStatement return type interface org.exolab.jms.net.connector.InvocationHandler
statement code is: InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer())
statement is: createConnectionFactory(Lorg/exolab/jms/net/connector/ConnectionManager;)Lorg/exolab/jms/net/connector/ConnectionFactory; type is: class org.evosuite.testcase.statements.MethodStatement return type interface org.exolab.jms.net.connector.ConnectionFactory
statement code is: ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null)
statement is: org.exolab.jms.net.connector.ContextInvocationHandler(Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Lorg/exolab/jms/net/connector/ManagedConnection;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.ContextInvocationHandler
statement code is: ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(arg0, arg1, (ManagedConnection) null)
statement is: org.exolab.jms.net.connector.DefaultConnectionPool(Lorg/exolab/jms/net/connector/ManagedConnectionFactory;Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Ljava/util/Map;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.DefaultConnectionPool
statement code is: DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(arg0, arg1, arg2, (Map) null)
statement is: org.exolab.jms.net.connector.MulticastCallerListener()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.MulticastCallerListener
statement code is: MulticastCallerListener multicastCallerListener = new MulticastCallerListener()
statement is: setCallerListener(Lorg/exolab/jms/net/connector/CallerListener;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: defaultConnectionPool.setCallerListener(arg0)
test data is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
MulticastCallerListener multicastCallerListener = new MulticastCallerListener();
defaultConnectionPool.setCallerListener(multicastCallerListener);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
        InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
        ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory("jdbc:oracle://localhost:1521/ORCL");
        ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, ((ManagedConnection) (null)));
        DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, ((Map) (null)));
        MulticastCallerListener multicastCallerListener = new MulticastCallerListener();
        defaultConnectionPool.setCallerListener(multicastCallerListener);
    }
}
statement is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer()), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: mock(InvocationHandler.class, new ViolatedAssumptionAnswer()) target is:  method is: mock(java.lang.Class,<unknown>)
target name is: InvocationHandler argument is: InvocationHandler.class
Matched Method is: mock(interface org.exolab.jms.net.connector.InvocationHandler)
statement is: ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory("jdbc:oracle://localhost:1521/ORCL"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: vMManagedConnectionFactory.createConnectionFactory("jdbc:oracle://localhost:1521/ORCL") target is: vMManagedConnectionFactory method is: createConnectionFactory(java.lang.String)
source statement: org.exolab.jms.net.vm.VMManagedConnectionFactory()V callee: VariableReference: Statement 0, type org.exolab.jms.net.vm.VMManagedConnectionFactoryindex is: 0
Matched Method is: createConnectionFactory(Lorg/exolab/jms/net/connector/ConnectionManager;)Lorg/exolab/jms/net/connector/ConnectionFactory;
statement is: ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, ((ManagedConnection) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, ((Map) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: MulticastCallerListener multicastCallerListener = new MulticastCallerListener(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: defaultConnectionPool.setCallerListener(multicastCallerListener), class spoon.support.reflect.code.CtInvocationImpl
invocation is: defaultConnectionPool.setCallerListener(multicastCallerListener) target is: defaultConnectionPool method is: setCallerListener(MulticastCallerListener)
source statement: org.exolab.jms.net.connector.DefaultConnectionPool(Lorg/exolab/jms/net/connector/ManagedConnectionFactory;Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Ljava/util/Map;)V callee: VariableReference: Statement 4, type org.exolab.jms.net.connector.DefaultConnectionPoolindex is: 5
Matched Method is: setCallerListener(Lorg/exolab/jms/net/connector/CallerListener;)V
TestCase is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
String string = "jdbc:oracle://localhost:1521/ORCL";
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) string);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
MulticastCallerListener multicastCallerListener = new MulticastCallerListener();
((DefaultConnectionPool) contextInvocationHandler).setCallerListener(multicastCallerListener);

statement is: org.exolab.jms.net.vm.VMManagedConnectionFactory()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.vm.VMManagedConnectionFactory
statement code is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory()
statement is: mock(interface org.exolab.jms.net.connector.InvocationHandler) type is: class org.evosuite.testcase.statements.FunctionalMockStatement return type interface org.exolab.jms.net.connector.InvocationHandler
statement code is: InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer())
statement is: createConnectionFactory(Lorg/exolab/jms/net/connector/ConnectionManager;)Lorg/exolab/jms/net/connector/ConnectionFactory; type is: class org.evosuite.testcase.statements.MethodStatement return type interface org.exolab.jms.net.connector.ConnectionFactory
statement code is: ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null)
statement is: org.apache.derby.iapi.services.io.FormatableHashtable()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.apache.derby.iapi.services.io.FormatableHashtable
statement code is: FormatableHashtable formatableHashtable = new FormatableHashtable()
statement is: org.exolab.jms.net.connector.DefaultConnectionPool(Lorg/exolab/jms/net/connector/ManagedConnectionFactory;Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Ljava/util/Map;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.DefaultConnectionPool
statement code is: DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(arg0, arg1, arg2, arg3)
statement is: createManagedConnection(Ljava/security/Principal;Lorg/exolab/jms/net/connector/ConnectionRequestInfo;)Lorg/exolab/jms/net/connector/ManagedConnection; type is: class org.evosuite.testcase.statements.MethodStatement return type interface org.exolab.jms.net.connector.ManagedConnection
statement code is: ManagedConnection createManagedConnection = defaultConnectionPool.createManagedConnection((Principal) null, (ConnectionRequestInfo) null)
test data is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
FormatableHashtable formatableHashtable = new FormatableHashtable();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, invocationHandler, createConnectionFactory, formatableHashtable);
defaultConnectionPool.createManagedConnection((Principal) null, (ConnectionRequestInfo) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
        InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
        ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory(((ConnectionManager) (null)));
        FormattableHashtable formatableHashtable = new FormattableHashtable();
        DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, invocationHandler, createConnectionFactory, formatableHashtable);
        defaultConnectionPool.createManagedConnection("johndoe@example.com", "123456");
    }
}
statement is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer()), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: mock(InvocationHandler.class, new ViolatedAssumptionAnswer()) target is:  method is: mock(java.lang.Class,<unknown>)
target name is: InvocationHandler argument is: InvocationHandler.class
Matched Method is: mock(interface org.exolab.jms.net.connector.InvocationHandler)
statement is: ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory(((ConnectionManager) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: vMManagedConnectionFactory.createConnectionFactory(((ConnectionManager) (null))) target is: vMManagedConnectionFactory method is: createConnectionFactory(ConnectionManager)
source statement: org.exolab.jms.net.vm.VMManagedConnectionFactory()V callee: VariableReference: Statement 0, type org.exolab.jms.net.vm.VMManagedConnectionFactoryindex is: 0
Matched Method is: createConnectionFactory(Lorg/exolab/jms/net/connector/ConnectionManager;)Lorg/exolab/jms/net/connector/ConnectionFactory;
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: FormattableHashtable formatableHashtable = new FormattableHashtable(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, invocationHandler, createConnectionFactory, formatableHashtable), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: defaultConnectionPool.createManagedConnection("johndoe@example.com", "123456"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: defaultConnectionPool.createManagedConnection("johndoe@example.com", "123456") target is: defaultConnectionPool method is: createManagedConnection(java.lang.String,java.lang.String)
source statement: org.exolab.jms.net.connector.DefaultConnectionPool(Lorg/exolab/jms/net/connector/ManagedConnectionFactory;Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Ljava/util/Map;)V callee: VariableReference: Statement 4, type org.exolab.jms.net.connector.DefaultConnectionPoolindex is: 4
Matched Method is: createManagedConnection(Ljava/security/Principal;Lorg/exolab/jms/net/connector/ConnectionRequestInfo;)Lorg/exolab/jms/net/connector/ManagedConnection;
TestCase is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionManager connectionManager = null;
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory(connectionManager);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, invocationHandler, createConnectionFactory, (Map) createConnectionFactory);
String string = "johndoe@example.com";
String string = "123456";
defaultConnectionPool.createManagedConnection((Principal) string, (ConnectionRequestInfo) string);

statement is: org.exolab.jms.net.vm.VMManagedConnectionFactory()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.vm.VMManagedConnectionFactory
statement code is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory()
statement is: mock(interface org.exolab.jms.net.connector.InvocationHandler) type is: class org.evosuite.testcase.statements.FunctionalMockStatement return type interface org.exolab.jms.net.connector.InvocationHandler
statement code is: InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer())
statement is: createConnectionFactory(Lorg/exolab/jms/net/connector/ConnectionManager;)Lorg/exolab/jms/net/connector/ConnectionFactory; type is: class org.evosuite.testcase.statements.MethodStatement return type interface org.exolab.jms.net.connector.ConnectionFactory
statement code is: ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null)
statement is: org.exolab.jms.net.connector.ContextInvocationHandler(Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Lorg/exolab/jms/net/connector/ManagedConnection;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.ContextInvocationHandler
statement code is: ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(arg0, arg1, (ManagedConnection) null)
statement is: org.exolab.jms.net.connector.DefaultConnectionPool(Lorg/exolab/jms/net/connector/ManagedConnectionFactory;Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Ljava/util/Map;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.DefaultConnectionPool
statement code is: DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(arg0, arg1, arg2, (Map) null)
statement is: org.exolab.jms.net.uri.URI()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.uri.URI
statement code is: URI uRI = new URI()
statement is: org.exolab.jms.net.connector.URIRequestInfo(Lorg/exolab/jms/net/uri/URI;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.URIRequestInfo
statement code is: URIRequestInfo uRIRequestInfo = new URIRequestInfo(arg0)
statement is: matchManagedConnectionAcceptors(Lorg/exolab/jms/net/connector/ConnectionRequestInfo;)Lorg/exolab/jms/net/connector/ManagedConnectionAcceptor; type is: class org.evosuite.testcase.statements.MethodStatement return type interface org.exolab.jms.net.connector.ManagedConnectionAcceptor
statement code is: ManagedConnectionAcceptor matchManagedConnectionAcceptors = defaultConnectionPool.matchManagedConnectionAcceptors(arg0)
test data is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
URI uRI = new URI();
URIRequestInfo uRIRequestInfo = new URIRequestInfo(uRI);
defaultConnectionPool.matchManagedConnectionAcceptors(uRIRequestInfo);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
        InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
        ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory(((ConnectionManager) (null)));
        ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, ((ManagedConnection) (null)));
        DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, ((Map) (null)));
        URI uRI = new URI("http://www.example.com");
        URIRequestInfo uRIRequestInfo = new URIRequestInfo(uRI);
        defaultConnectionPool.matchManagedConnectionAcceptors(uRIRequestInfo);
    }
}
statement is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer()), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: mock(InvocationHandler.class, new ViolatedAssumptionAnswer()) target is:  method is: mock(java.lang.Class,<unknown>)
target name is: InvocationHandler argument is: InvocationHandler.class
Matched Method is: mock(interface org.exolab.jms.net.connector.InvocationHandler)
statement is: ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory(((ConnectionManager) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: vMManagedConnectionFactory.createConnectionFactory(((ConnectionManager) (null))) target is: vMManagedConnectionFactory method is: createConnectionFactory(ConnectionManager)
source statement: org.exolab.jms.net.vm.VMManagedConnectionFactory()V callee: VariableReference: Statement 0, type org.exolab.jms.net.vm.VMManagedConnectionFactoryindex is: 0
Matched Method is: createConnectionFactory(Lorg/exolab/jms/net/connector/ConnectionManager;)Lorg/exolab/jms/net/connector/ConnectionFactory;
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, ((ManagedConnection) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, ((Map) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: URI uRI = new URI("http://www.example.com"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: URIRequestInfo uRIRequestInfo = new URIRequestInfo(uRI), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: defaultConnectionPool.matchManagedConnectionAcceptors(uRIRequestInfo), class spoon.support.reflect.code.CtInvocationImpl
invocation is: defaultConnectionPool.matchManagedConnectionAcceptors(uRIRequestInfo) target is: defaultConnectionPool method is: matchManagedConnectionAcceptors(URIRequestInfo)
source statement: org.exolab.jms.net.connector.DefaultConnectionPool(Lorg/exolab/jms/net/connector/ManagedConnectionFactory;Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Ljava/util/Map;)V callee: VariableReference: Statement 4, type org.exolab.jms.net.connector.DefaultConnectionPoolindex is: 5
Matched Method is: matchManagedConnectionAcceptors(Lorg/exolab/jms/net/connector/ConnectionRequestInfo;)Lorg/exolab/jms/net/connector/ManagedConnectionAcceptor;
TestCase is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionManager connectionManager = null;
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory(connectionManager);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
URIRequestInfo uRIRequestInfo = new URIRequestInfo((URI) defaultConnectionPool);
((DefaultConnectionPool) contextInvocationHandler).matchManagedConnectionAcceptors(uRIRequestInfo);

statement is: org.exolab.jms.net.vm.VMManagedConnectionFactory()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.vm.VMManagedConnectionFactory
statement code is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory()
statement is: mock(interface org.exolab.jms.net.connector.InvocationHandler) type is: class org.evosuite.testcase.statements.FunctionalMockStatement return type interface org.exolab.jms.net.connector.InvocationHandler
statement code is: InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer())
statement is: createConnectionFactory(Lorg/exolab/jms/net/connector/ConnectionManager;)Lorg/exolab/jms/net/connector/ConnectionFactory; type is: class org.evosuite.testcase.statements.MethodStatement return type interface org.exolab.jms.net.connector.ConnectionFactory
statement code is: ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null)
statement is: org.exolab.jms.net.connector.ContextInvocationHandler(Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Lorg/exolab/jms/net/connector/ManagedConnection;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.ContextInvocationHandler
statement code is: ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(arg0, arg1, (ManagedConnection) null)
statement is: org.apache.derby.iapi.services.io.FormatableHashtable()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.apache.derby.iapi.services.io.FormatableHashtable
statement code is: FormatableHashtable formatableHashtable = new FormatableHashtable()
statement is: org.exolab.jms.net.connector.DefaultConnectionPool(Lorg/exolab/jms/net/connector/ManagedConnectionFactory;Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Ljava/util/Map;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.DefaultConnectionPool
statement code is: DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool((ManagedConnectionFactory) null, arg1, arg2, arg3)
test data is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
FormatableHashtable formatableHashtable = new FormatableHashtable();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool((ManagedConnectionFactory) null, contextInvocationHandler, createConnectionFactory, formatableHashtable);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
        InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
        ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory(((ConnectionManager) (null)));
        ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, ((ManagedConnection) (null)));
        FormatableHashtable formatableHashtable = new FormatableHashtable();
        DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(((ManagedConnectionFactory) (null)), contextInvocationHandler, createConnectionFactory, formatableHashtable);
    }
}
statement is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer()), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: mock(InvocationHandler.class, new ViolatedAssumptionAnswer()) target is:  method is: mock(java.lang.Class,<unknown>)
target name is: InvocationHandler argument is: InvocationHandler.class
Matched Method is: mock(interface org.exolab.jms.net.connector.InvocationHandler)
statement is: ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory(((ConnectionManager) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: vMManagedConnectionFactory.createConnectionFactory(((ConnectionManager) (null))) target is: vMManagedConnectionFactory method is: createConnectionFactory(ConnectionManager)
source statement: org.exolab.jms.net.vm.VMManagedConnectionFactory()V callee: VariableReference: Statement 0, type org.exolab.jms.net.vm.VMManagedConnectionFactoryindex is: 0
Matched Method is: createConnectionFactory(Lorg/exolab/jms/net/connector/ConnectionManager;)Lorg/exolab/jms/net/connector/ConnectionFactory;
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, ((ManagedConnection) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: FormatableHashtable formatableHashtable = new FormatableHashtable(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(((ManagedConnectionFactory) (null)), contextInvocationHandler, createConnectionFactory, formatableHashtable), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionManager connectionManager = null;
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory(connectionManager);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
FormatableHashtable formatableHashtable = new FormatableHashtable();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool((ManagedConnectionFactory) contextInvocationHandler, (InvocationHandler) createConnectionFactory, (ConnectionFactory) formatableHashtable, (Map) contextInvocationHandler);

statement is: org.exolab.jms.net.tcp.TCPSManagedConnectionFactory()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.tcp.TCPSManagedConnectionFactory
statement code is: TCPSManagedConnectionFactory tCPSManagedConnectionFactory = new TCPSManagedConnectionFactory()
statement is: org.exolab.jms.net.http.HTTPManagedConnectionFactory()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.http.HTTPManagedConnectionFactory
statement code is: HTTPManagedConnectionFactory hTTPManagedConnectionFactory = new HTTPManagedConnectionFactory()
statement is: createConnectionFactory(Lorg/exolab/jms/net/connector/ConnectionManager;)Lorg/exolab/jms/net/connector/ConnectionFactory; type is: class org.evosuite.testcase.statements.MethodStatement return type interface org.exolab.jms.net.connector.ConnectionFactory
statement code is: ConnectionFactory createConnectionFactory = hTTPManagedConnectionFactory.createConnectionFactory((ConnectionManager) null)
statement is: java.util.Hashtable()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type java.util.Hashtable<org.exolab.jms.net.connector.ManagedConnectionHandle, java.lang.Object>
statement code is: Hashtable<ManagedConnectionHandle, Object> hashtable = new Hashtable<ManagedConnectionHandle, Object>()
statement is: org.exolab.jms.net.connector.DefaultConnectionPool(Lorg/exolab/jms/net/connector/ManagedConnectionFactory;Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Ljava/util/Map;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.DefaultConnectionPool
statement code is: DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(arg0, (InvocationHandler) null, arg2, arg3)
test data is: TCPSManagedConnectionFactory tCPSManagedConnectionFactory = new TCPSManagedConnectionFactory();
HTTPManagedConnectionFactory hTTPManagedConnectionFactory = new HTTPManagedConnectionFactory();
ConnectionFactory createConnectionFactory = hTTPManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
Hashtable<ManagedConnectionHandle, Object> hashtable = new Hashtable<ManagedConnectionHandle, Object>();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(tCPSManagedConnectionFactory, (InvocationHandler) null, createConnectionFactory, hashtable);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        TCPSManagedConnectionFactory tCPSManagedConnectionFactory = new TCPSManagedConnectionFactory();
        HTTPManagedConnectionFactory hTTPManagedConnectionFactory = new HTTPManagedConnectionFactory();
        ConnectionFactory createConnectionFactory = hTTPManagedConnectionFactory.createConnectionFactory(((ConnectionManager) (null)));
        Hashtable<ManagedConnectionHandle, Object> hashtable = new Hashtable<>();// <-- Use <> instead of [] to indicate a generic type

        DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(tCPSManagedConnectionFactory, ((InvocationHandler) (null)), createConnectionFactory, hashtable);
    }
}
statement is: TCPSManagedConnectionFactory tCPSManagedConnectionFactory = new TCPSManagedConnectionFactory(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: HTTPManagedConnectionFactory hTTPManagedConnectionFactory = new HTTPManagedConnectionFactory(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ConnectionFactory createConnectionFactory = hTTPManagedConnectionFactory.createConnectionFactory(((ConnectionManager) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: hTTPManagedConnectionFactory.createConnectionFactory(((ConnectionManager) (null))) target is: hTTPManagedConnectionFactory method is: createConnectionFactory(ConnectionManager)
source statement: org.exolab.jms.net.http.HTTPManagedConnectionFactory()V callee: VariableReference: Statement 1, type org.exolab.jms.net.http.HTTPManagedConnectionFactoryindex is: 1
Matched Method is: createConnectionFactory(Lorg/exolab/jms/net/connector/ConnectionManager;)Lorg/exolab/jms/net/connector/ConnectionFactory;
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: Hashtable<ManagedConnectionHandle, Object> hashtable = new Hashtable<>()// <-- Use <> instead of [] to indicate a generic type
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(tCPSManagedConnectionFactory, ((InvocationHandler) (null)), createConnectionFactory, hashtable), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase is: TCPSManagedConnectionFactory tCPSManagedConnectionFactory = new TCPSManagedConnectionFactory();
HTTPManagedConnectionFactory hTTPManagedConnectionFactory = new HTTPManagedConnectionFactory();
ConnectionManager connectionManager = null;
ConnectionFactory createConnectionFactory = hTTPManagedConnectionFactory.createConnectionFactory(connectionManager);
Hashtable<ManagedConnectionHandle, Object> hashtable = new Hashtable<ManagedConnectionHandle, Object>();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(tCPSManagedConnectionFactory, (InvocationHandler) createConnectionFactory, hashtable, (Map) createConnectionFactory);

statement is: org.exolab.jms.net.vm.VMManagedConnectionFactory()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.vm.VMManagedConnectionFactory
statement code is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory()
statement is: org.exolab.jms.net.connector.ContextInvocationHandler(Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Lorg/exolab/jms/net/connector/ManagedConnection;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.ContextInvocationHandler
statement code is: ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler((InvocationHandler) null, (ConnectionFactory) null, (ManagedConnection) null)
statement is: java.util.Properties()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.util.Properties
statement code is: Properties properties = new Properties()
statement is: org.exolab.jms.net.connector.DefaultConnectionPool(Lorg/exolab/jms/net/connector/ManagedConnectionFactory;Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Ljava/util/Map;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.DefaultConnectionPool
statement code is: DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(arg0, arg1, (ConnectionFactory) null, arg3)
test data is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler((InvocationHandler) null, (ConnectionFactory) null, (ManagedConnection) null);
Properties properties = new Properties();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, (ConnectionFactory) null, properties);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
        ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(((InvocationHandler) (null)), ((ConnectionFactory) (null)), ((ManagedConnection) (null)));
        Properties properties = new Properties();
        properties.setProperty("maxActive", "10");
        properties.setProperty("maxIdle", "5");
        properties.setProperty("minIdle", "2");
        properties.setProperty("initialSize", "3");
        DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, ((ConnectionFactory) (null)), properties);
    }
}
statement is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(((InvocationHandler) (null)), ((ConnectionFactory) (null)), ((ManagedConnection) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Properties properties = new Properties(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: properties.setProperty("maxActive", "10"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: properties.setProperty("maxActive", "10") target is: properties method is: setProperty(java.lang.String,java.lang.String)
statement is: properties.setProperty("maxIdle", "5"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: properties.setProperty("maxIdle", "5") target is: properties method is: setProperty(java.lang.String,java.lang.String)
statement is: properties.setProperty("minIdle", "2"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: properties.setProperty("minIdle", "2") target is: properties method is: setProperty(java.lang.String,java.lang.String)
statement is: properties.setProperty("initialSize", "3"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: properties.setProperty("initialSize", "3") target is: properties method is: setProperty(java.lang.String,java.lang.String)
statement is: DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, ((ConnectionFactory) (null)), properties), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler((InvocationHandler) null, (ConnectionFactory) null, (ManagedConnection) null);
Properties properties = new Properties();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, (ConnectionFactory) properties, properties);

statement is: org.exolab.jms.net.vm.VMManagedConnectionFactory()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.vm.VMManagedConnectionFactory
statement code is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory()
statement is: mock(interface org.exolab.jms.net.connector.InvocationHandler) type is: class org.evosuite.testcase.statements.FunctionalMockStatement return type interface org.exolab.jms.net.connector.InvocationHandler
statement code is: InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer())
statement is: createConnectionFactory(Lorg/exolab/jms/net/connector/ConnectionManager;)Lorg/exolab/jms/net/connector/ConnectionFactory; type is: class org.evosuite.testcase.statements.MethodStatement return type interface org.exolab.jms.net.connector.ConnectionFactory
statement code is: ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null)
statement is: org.exolab.jms.net.connector.ContextInvocationHandler(Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Lorg/exolab/jms/net/connector/ManagedConnection;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.ContextInvocationHandler
statement code is: ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(arg0, arg1, (ManagedConnection) null)
statement is: java.util.HashMap()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type java.util.HashMap<java.lang.Object, java.lang.Object>
statement code is: HashMap<Object, Object> hashMap = new HashMap<Object, Object>()
statement is: org.exolab.jms.net.connector.DefaultConnectionPool(Lorg/exolab/jms/net/connector/ManagedConnectionFactory;Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Ljava/util/Map;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.DefaultConnectionPool
statement code is: DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(arg0, arg1, arg2, arg3)
statement is: org.exolab.jms.net.uri.URI()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.uri.URI
statement code is: URI uRI = new URI()
statement is: org.exolab.jms.net.connector.URIRequestInfo(Lorg/exolab/jms/net/uri/URI;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.URIRequestInfo
statement code is: URIRequestInfo uRIRequestInfo = new URIRequestInfo(arg0)
statement is: matchManagedConnections(Ljava/security/Principal;Lorg/exolab/jms/net/connector/ConnectionRequestInfo;)Lorg/exolab/jms/net/connector/ManagedConnection; type is: class org.evosuite.testcase.statements.MethodStatement return type interface org.exolab.jms.net.connector.ManagedConnection
statement code is: ManagedConnection matchManagedConnections = defaultConnectionPool.matchManagedConnections((Principal) null, arg1)
test data is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
HashMap<Object, Object> hashMap = new HashMap<Object, Object>();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, hashMap);
URI uRI = new URI();
URIRequestInfo uRIRequestInfo = new URIRequestInfo(uRI);
defaultConnectionPool.matchManagedConnections((Principal) null, uRIRequestInfo);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        VMManagedConnectionFactory vMManagedConnectionFactory = mock(VMManagedConnectionFactory.class);
        InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
        ConnectionFactory connectionFactory = mock(ConnectionFactory.class);
        ContextInvocationHandler contextInvocationHandler = mock(ContextInvocationHandler.class);
        HashMap<Object, Object> hashMap = mock(HashMap.class);
        DefaultConnectionPool defaultConnectionPool = mock(DefaultConnectionPool.class);
        URI uRI = new URI();
        URIRequestInfo uRIRequestInfo = new URIRequestInfo(uRI);
        defaultConnectionPool.matchManagedConnections(((Principal) (null)), uRIRequestInfo);
    }
}
statement is: VMManagedConnectionFactory vMManagedConnectionFactory = mock(VMManagedConnectionFactory.class), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: mock(VMManagedConnectionFactory.class) target is:  method is: mock(java.lang.Class)
target name is: InvocationHandler argument is: VMManagedConnectionFactory.class
statement is: InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer()), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: mock(InvocationHandler.class, new ViolatedAssumptionAnswer()) target is:  method is: mock(java.lang.Class,<unknown>)
target name is: InvocationHandler argument is: InvocationHandler.class
Matched Method is: mock(interface org.exolab.jms.net.connector.InvocationHandler)
statement is: ConnectionFactory connectionFactory = mock(ConnectionFactory.class), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: mock(ConnectionFactory.class) target is:  method is: mock(java.lang.Class)
target name is: InvocationHandler argument is: ConnectionFactory.class
statement is: ContextInvocationHandler contextInvocationHandler = mock(ContextInvocationHandler.class), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: mock(ContextInvocationHandler.class) target is:  method is: mock(java.lang.Class)
target name is: InvocationHandler argument is: ContextInvocationHandler.class
statement is: HashMap<Object, Object> hashMap = mock(HashMap.class), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: mock(HashMap.class) target is:  method is: mock(java.lang.Class)
target name is: InvocationHandler argument is: HashMap.class
statement is: DefaultConnectionPool defaultConnectionPool = mock(DefaultConnectionPool.class), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: mock(DefaultConnectionPool.class) target is:  method is: mock(java.lang.Class)
target name is: InvocationHandler argument is: DefaultConnectionPool.class
statement is: URI uRI = new URI(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: URIRequestInfo uRIRequestInfo = new URIRequestInfo(uRI), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: defaultConnectionPool.matchManagedConnections(((Principal) (null)), uRIRequestInfo), class spoon.support.reflect.code.CtInvocationImpl
invocation is: defaultConnectionPool.matchManagedConnections(((Principal) (null)), uRIRequestInfo) target is: defaultConnectionPool method is: matchManagedConnections(Principal,URIRequestInfo)
TestCase is: InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
URI uRI = new URI();
URIRequestInfo uRIRequestInfo = new URIRequestInfo(uRI);

statement is: org.exolab.jms.net.vm.VMManagedConnectionFactory()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.vm.VMManagedConnectionFactory
statement code is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory()
statement is: mock(interface org.exolab.jms.net.connector.InvocationHandler) type is: class org.evosuite.testcase.statements.FunctionalMockStatement return type interface org.exolab.jms.net.connector.InvocationHandler
statement code is: InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer())
statement is: createConnectionFactory(Lorg/exolab/jms/net/connector/ConnectionManager;)Lorg/exolab/jms/net/connector/ConnectionFactory; type is: class org.evosuite.testcase.statements.MethodStatement return type interface org.exolab.jms.net.connector.ConnectionFactory
statement code is: ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null)
statement is: org.exolab.jms.net.connector.ContextInvocationHandler(Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Lorg/exolab/jms/net/connector/ManagedConnection;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.ContextInvocationHandler
statement code is: ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(arg0, arg1, (ManagedConnection) null)
statement is: org.exolab.jms.net.connector.DefaultConnectionPool(Lorg/exolab/jms/net/connector/ManagedConnectionFactory;Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Ljava/util/Map;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.DefaultConnectionPool
statement code is: DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(arg0, arg1, arg2, (Map) null)
statement is: closed(Lorg/exolab/jms/net/connector/ManagedConnection;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: defaultConnectionPool.closed((ManagedConnection) null)
test data is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
defaultConnectionPool.closed((ManagedConnection) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
        InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
        ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory(((ConnectionManager) (null)));
        ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, ((ManagedConnection) (null)));
        DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, ((Map) (null)));
        defaultConnectionPool.closed(((ManagedConnection) (null)));
    }
}
statement is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer()), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: mock(InvocationHandler.class, new ViolatedAssumptionAnswer()) target is:  method is: mock(java.lang.Class,<unknown>)
target name is: InvocationHandler argument is: InvocationHandler.class
Matched Method is: mock(interface org.exolab.jms.net.connector.InvocationHandler)
statement is: ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory(((ConnectionManager) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: vMManagedConnectionFactory.createConnectionFactory(((ConnectionManager) (null))) target is: vMManagedConnectionFactory method is: createConnectionFactory(ConnectionManager)
source statement: org.exolab.jms.net.vm.VMManagedConnectionFactory()V callee: VariableReference: Statement 0, type org.exolab.jms.net.vm.VMManagedConnectionFactoryindex is: 0
Matched Method is: createConnectionFactory(Lorg/exolab/jms/net/connector/ConnectionManager;)Lorg/exolab/jms/net/connector/ConnectionFactory;
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, ((ManagedConnection) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, ((Map) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: defaultConnectionPool.closed(((ManagedConnection) (null))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: defaultConnectionPool.closed(((ManagedConnection) (null))) target is: defaultConnectionPool method is: closed(ManagedConnection)
source statement: org.exolab.jms.net.connector.DefaultConnectionPool(Lorg/exolab/jms/net/connector/ManagedConnectionFactory;Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Ljava/util/Map;)V callee: VariableReference: Statement 4, type org.exolab.jms.net.connector.DefaultConnectionPoolindex is: 5
Matched Method is: closed(Lorg/exolab/jms/net/connector/ManagedConnection;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
TestCase is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionManager connectionManager = null;
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory(connectionManager);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
ManagedConnection managedConnection = null;
((DefaultConnectionPool) contextInvocationHandler).closed(managedConnection);

statement is: org.exolab.jms.net.vm.VMManagedConnectionFactory()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.vm.VMManagedConnectionFactory
statement code is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory()
statement is: mock(interface org.exolab.jms.net.connector.InvocationHandler) type is: class org.evosuite.testcase.statements.FunctionalMockStatement return type interface org.exolab.jms.net.connector.InvocationHandler
statement code is: InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer())
statement is: createConnectionFactory(Lorg/exolab/jms/net/connector/ConnectionManager;)Lorg/exolab/jms/net/connector/ConnectionFactory; type is: class org.evosuite.testcase.statements.MethodStatement return type interface org.exolab.jms.net.connector.ConnectionFactory
statement code is: ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null)
statement is: org.exolab.jms.net.connector.ContextInvocationHandler(Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Lorg/exolab/jms/net/connector/ManagedConnection;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.ContextInvocationHandler
statement code is: ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(arg0, arg1, (ManagedConnection) null)
statement is: org.apache.derby.impl.sql.compile.ConstraintDefinitionNode()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.apache.derby.impl.sql.compile.ConstraintDefinitionNode
statement code is: ConstraintDefinitionNode constraintDefinitionNode = new ConstraintDefinitionNode()
statement is: org.exolab.jms.net.connector.DefaultConnectionPool(Lorg/exolab/jms/net/connector/ManagedConnectionFactory;Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Ljava/util/Map;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.DefaultConnectionPool
statement code is: DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(arg0, arg1, arg2, (Map) null)
statement is: newException(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/derby/iapi/error/StandardException; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.apache.derby.iapi.error.StandardException
statement code is: StandardException newException = StandardException.newException("JBjM(8RO.;-Rwz", (Object) null, (Object) arg2, (Object) null, (Object) arg4, (Object) null)
statement is: error(Lorg/exolab/jms/net/connector/ManagedConnection;Ljava/lang/Throwable;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: defaultConnectionPool.error((ManagedConnection) null, (Throwable) arg1)
test data is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
ConstraintDefinitionNode constraintDefinitionNode = new ConstraintDefinitionNode();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
StandardException newException = StandardException.newException("JBjM(8RO.;-Rwz", (Object) null, (Object) contextInvocationHandler, (Object) null, (Object) constraintDefinitionNode, (Object) null);
defaultConnectionPool.error((ManagedConnection) null, (Throwable) newException);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
        ConnectionManager connectionManager = mock(ConnectionManager.class);
        InvocationHandler invocationHandler = mock(ContextInvocationHandler.class, new ViolatedAssumptionAnswer());
        ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory(connectionManager);
        ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, ((ManagedConnection) (null)));
        ConstraintDefinitionNode constraintDefinitionNode = new ConstraintDefinitionNode();
        DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, ((Map) (null)));
        StandardException newException = StandardException.newException("JBjM(8RO.;-Rwz", ((Object) (null)), ((Object) (contextInvocationHandler)), ((Object) (null)), ((Object) (constraintDefinitionNode)), ((Object) (null)));
        defaultConnectionPool.error(((ManagedConnection) (null)), ((Throwable) (newException)));
    }
}
statement is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ConnectionManager connectionManager = mock(ConnectionManager.class), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: mock(ConnectionManager.class) target is:  method is: mock(java.lang.Class)
target name is: InvocationHandler argument is: ConnectionManager.class
statement is: InvocationHandler invocationHandler = mock(ContextInvocationHandler.class, new ViolatedAssumptionAnswer()), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: mock(ContextInvocationHandler.class, new ViolatedAssumptionAnswer()) target is:  method is: mock(java.lang.Class,<unknown>)
target name is: InvocationHandler argument is: ContextInvocationHandler.class
statement is: ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory(connectionManager), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: vMManagedConnectionFactory.createConnectionFactory(connectionManager) target is: vMManagedConnectionFactory method is: createConnectionFactory(ConnectionManager)
source statement: org.exolab.jms.net.vm.VMManagedConnectionFactory()V callee: VariableReference: Statement 0, type org.exolab.jms.net.vm.VMManagedConnectionFactoryindex is: 0
Matched Method is: createConnectionFactory(Lorg/exolab/jms/net/connector/ConnectionManager;)Lorg/exolab/jms/net/connector/ConnectionFactory;
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, ((ManagedConnection) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ConstraintDefinitionNode constraintDefinitionNode = new ConstraintDefinitionNode(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, ((Map) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: StandardException newException = StandardException.newException("JBjM(8RO.;-Rwz", ((Object) (null)), ((Object) (contextInvocationHandler)), ((Object) (null)), ((Object) (constraintDefinitionNode)), ((Object) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: StandardException.newException("JBjM(8RO.;-Rwz", ((Object) (null)), ((Object) (contextInvocationHandler)), ((Object) (null)), ((Object) (constraintDefinitionNode)), ((Object) (null))) target is: StandardException method is: newException(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
Matched Method is: newException(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/derby/iapi/error/StandardException;
i 3 Parameters size() 3 Num of Method Parameters: 6
i 4 Parameters size() 3 Num of Method Parameters: 6
i 5 Parameters size() 3 Num of Method Parameters: 6
statement is: defaultConnectionPool.error(((ManagedConnection) (null)), ((Throwable) (newException))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: defaultConnectionPool.error(((ManagedConnection) (null)), ((Throwable) (newException))) target is: defaultConnectionPool method is: error(ManagedConnection,java.lang.Throwable)
source statement: org.exolab.jms.net.connector.DefaultConnectionPool(Lorg/exolab/jms/net/connector/ManagedConnectionFactory;Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Ljava/util/Map;)V callee: VariableReference: Statement 5, type org.exolab.jms.net.connector.DefaultConnectionPoolindex is: 5
Matched Method is: error(Lorg/exolab/jms/net/connector/ManagedConnection;Ljava/lang/Throwable;)V
i 1 Parameters size() 1 Num of Method Parameters: 2
TestCase is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
ConnectionManager connectionManager = null;
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory(connectionManager);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler((InvocationHandler) createConnectionFactory, createConnectionFactory, (ManagedConnection) null);
ConstraintDefinitionNode constraintDefinitionNode = new ConstraintDefinitionNode();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
String string = "JBjM(8RO.;-Rwz";
ProviderList providerList = null;
ConstraintDefinitionNode constraintDefinitionNode = null;
ProviderList providerList = null;
StandardException newException = StandardException.newException(string, (Object) contextInvocationHandler, (Object) constraintDefinitionNode, (Object) providerList, (Object) constraintDefinitionNode, (Object) providerList);
StandardException standardException = null;
defaultConnectionPool.error((ManagedConnection) newException, (Throwable) standardException);

statement is: org.exolab.jms.net.vm.VMManagedConnectionFactory()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.vm.VMManagedConnectionFactory
statement code is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory()
statement is: mock(interface org.exolab.jms.net.connector.InvocationHandler) type is: class org.evosuite.testcase.statements.FunctionalMockStatement return type interface org.exolab.jms.net.connector.InvocationHandler
statement code is: InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer())
statement is: createConnectionFactory(Lorg/exolab/jms/net/connector/ConnectionManager;)Lorg/exolab/jms/net/connector/ConnectionFactory; type is: class org.evosuite.testcase.statements.MethodStatement return type interface org.exolab.jms.net.connector.ConnectionFactory
statement code is: ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null)
statement is: org.apache.derby.iapi.sql.depend.ProviderList()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.apache.derby.iapi.sql.depend.ProviderList
statement code is: ProviderList providerList = new ProviderList()
statement is: org.exolab.jms.net.connector.DefaultConnectionPool(Lorg/exolab/jms/net/connector/ManagedConnectionFactory;Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Ljava/util/Map;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.DefaultConnectionPool
statement code is: DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(arg0, arg1, arg2, arg3)
statement is: pinged(Lorg/exolab/jms/net/connector/ManagedConnection;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: defaultConnectionPool.pinged((ManagedConnection) null)
test data is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ProviderList providerList = new ProviderList();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, invocationHandler, createConnectionFactory, providerList);
defaultConnectionPool.pinged((ManagedConnection) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
        InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
        ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory(((ConnectionManager) (null)));
        ProviderList providerList = new ProviderList();
        DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, invocationHandler, createConnectionFactory, providerList);
        defaultConnectionPool.pinged(new ManagedConnection() {
            @Override
            public void close() throws SQLException {
            }

            @Override
            public int getLoginTimeout() {
                return 0;
            }

            @Override
            public boolean isClosed() {
                return false;
            }
        });
    }
}
statement is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer()), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: mock(InvocationHandler.class, new ViolatedAssumptionAnswer()) target is:  method is: mock(java.lang.Class,<unknown>)
target name is: InvocationHandler argument is: InvocationHandler.class
Matched Method is: mock(interface org.exolab.jms.net.connector.InvocationHandler)
statement is: ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory(((ConnectionManager) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: vMManagedConnectionFactory.createConnectionFactory(((ConnectionManager) (null))) target is: vMManagedConnectionFactory method is: createConnectionFactory(ConnectionManager)
source statement: org.exolab.jms.net.vm.VMManagedConnectionFactory()V callee: VariableReference: Statement 0, type org.exolab.jms.net.vm.VMManagedConnectionFactoryindex is: 0
Matched Method is: createConnectionFactory(Lorg/exolab/jms/net/connector/ConnectionManager;)Lorg/exolab/jms/net/connector/ConnectionFactory;
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: ProviderList providerList = new ProviderList(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, invocationHandler, createConnectionFactory, providerList), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: defaultConnectionPool.pinged(new ManagedConnection() {
    @Override
    public void close() throws SQLException {
    }

    @Override
    public int getLoginTimeout() {
        return 0;
    }

    @Override
    public boolean isClosed() {
        return false;
    }
}), class spoon.support.reflect.code.CtInvocationImpl
invocation is: defaultConnectionPool.pinged(new ManagedConnection() {
    @Override
    public void close() throws SQLException {
    }

    @Override
    public int getLoginTimeout() {
        return 0;
    }

    @Override
    public boolean isClosed() {
        return false;
    }
}) target is: defaultConnectionPool method is: pinged(DummyClass$1)
source statement: org.exolab.jms.net.connector.DefaultConnectionPool(Lorg/exolab/jms/net/connector/ManagedConnectionFactory;Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Ljava/util/Map;)V callee: VariableReference: Statement 4, type org.exolab.jms.net.connector.DefaultConnectionPoolindex is: 5
Matched Method is: pinged(Lorg/exolab/jms/net/connector/ManagedConnection;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
TestCase is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionManager connectionManager = null;
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory(connectionManager);
ProviderList providerList = new ProviderList();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, invocationHandler, createConnectionFactory, providerList);
ManagedConnection managedConnection = null;
((DefaultConnectionPool) providerList).pinged(managedConnection);

statement is: org.exolab.jms.net.vm.VMManagedConnectionFactory()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.vm.VMManagedConnectionFactory
statement code is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory()
statement is: mock(interface org.exolab.jms.net.connector.InvocationHandler) type is: class org.evosuite.testcase.statements.FunctionalMockStatement return type interface org.exolab.jms.net.connector.InvocationHandler
statement code is: InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer())
statement is: createConnectionFactory(Lorg/exolab/jms/net/connector/ConnectionManager;)Lorg/exolab/jms/net/connector/ConnectionFactory; type is: class org.evosuite.testcase.statements.MethodStatement return type interface org.exolab.jms.net.connector.ConnectionFactory
statement code is: ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null)
statement is: org.exolab.jms.net.connector.ContextInvocationHandler(Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Lorg/exolab/jms/net/connector/ManagedConnection;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.ContextInvocationHandler
statement code is: ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(arg0, arg1, (ManagedConnection) null)
statement is: org.apache.derby.iapi.sql.depend.ProviderList()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.apache.derby.iapi.sql.depend.ProviderList
statement code is: ProviderList providerList = new ProviderList()
statement is: org.exolab.jms.net.connector.DefaultConnectionPool(Lorg/exolab/jms/net/connector/ManagedConnectionFactory;Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Ljava/util/Map;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.DefaultConnectionPool
statement code is: DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(arg0, arg1, arg2, arg3)
statement is: org.exolab.jms.config.Configuration()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.config.Configuration
statement code is: Configuration configuration = new Configuration()
statement is: org.exolab.jms.persistence.DatabaseService(Lorg/exolab/jms/config/Configuration;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.persistence.DatabaseService
statement code is: DatabaseService databaseService = new DatabaseService(arg0)
statement is: org.exolab.jms.authentication.UserManager(Lorg/exolab/jms/config/Configuration;Lorg/exolab/jms/persistence/DatabaseService;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.authentication.UserManager
statement code is: UserManager userManager = new UserManager(arg0, arg1)
statement is: org.exolab.jms.authentication.AuthenticationMgr(Lorg/exolab/jms/authentication/UserManager;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.authentication.AuthenticationMgr
statement code is: AuthenticationMgr authenticationMgr = new AuthenticationMgr(arg0)
statement is: org.exolab.jms.net.uri.URI()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.uri.URI
statement code is: URI uRI = new URI()
statement is: org.exolab.jms.net.connector.URIRequestInfo(Lorg/exolab/jms/net/uri/URI;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.URIRequestInfo
statement code is: URIRequestInfo uRIRequestInfo = new URIRequestInfo(arg0)
statement is: createManagedConnectionAcceptor(Lorg/exolab/jms/net/connector/Authenticator;Lorg/exolab/jms/net/connector/ConnectionRequestInfo;)Lorg/exolab/jms/net/connector/ManagedConnectionAcceptor; type is: class org.evosuite.testcase.statements.MethodStatement return type interface org.exolab.jms.net.connector.ManagedConnectionAcceptor
statement code is: ManagedConnectionAcceptor createManagedConnectionAcceptor = defaultConnectionPool.createManagedConnectionAcceptor(arg0, arg1)
statement is: close()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: defaultConnectionPool.close()
test data is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
ProviderList providerList = new ProviderList();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, providerList);
Configuration configuration = new Configuration();
DatabaseService databaseService = new DatabaseService(configuration);
UserManager userManager = new UserManager(configuration, databaseService);
AuthenticationMgr authenticationMgr = new AuthenticationMgr(userManager);
URI uRI = new URI();
URIRequestInfo uRIRequestInfo = new URIRequestInfo(uRI);
defaultConnectionPool.createManagedConnectionAcceptor(authenticationMgr, uRIRequestInfo);
defaultConnectionPool.close();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
        InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
        ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory("jdbc://localhost:3306/testdb");
        ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, "username", "password");
        ProviderList providerList = new ProviderList();
        DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, providerList);
        Configuration configuration = new Configuration();
        DatabaseService databaseService = new DatabaseService(configuration);
        UserManager userManager = new UserManager(configuration, databaseService);
        AuthenticationMgr authenticationMgr = new AuthenticationMgr(userManager);
        URI uRI = new URI("jdbc://localhost:3306/testdb");
        URIRequestInfo uRIRequestInfo = new URIRequestInfo(uRI);
        defaultConnectionPool.createManagedConnectionAcceptor(authenticationMgr, uRIRequestInfo);
        defaultConnectionPool.close();
    }
}
statement is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer()), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: mock(InvocationHandler.class, new ViolatedAssumptionAnswer()) target is:  method is: mock(java.lang.Class,<unknown>)
target name is: InvocationHandler argument is: InvocationHandler.class
Matched Method is: mock(interface org.exolab.jms.net.connector.InvocationHandler)
statement is: ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory("jdbc://localhost:3306/testdb"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: vMManagedConnectionFactory.createConnectionFactory("jdbc://localhost:3306/testdb") target is: vMManagedConnectionFactory method is: createConnectionFactory(java.lang.String)
source statement: org.exolab.jms.net.vm.VMManagedConnectionFactory()V callee: VariableReference: Statement 0, type org.exolab.jms.net.vm.VMManagedConnectionFactoryindex is: 0
Matched Method is: createConnectionFactory(Lorg/exolab/jms/net/connector/ConnectionManager;)Lorg/exolab/jms/net/connector/ConnectionFactory;
statement is: ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, "username", "password"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ProviderList providerList = new ProviderList(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, providerList), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Configuration configuration = new Configuration(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DatabaseService databaseService = new DatabaseService(configuration), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: UserManager userManager = new UserManager(configuration, databaseService), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: AuthenticationMgr authenticationMgr = new AuthenticationMgr(userManager), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: URI uRI = new URI("jdbc://localhost:3306/testdb"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: URIRequestInfo uRIRequestInfo = new URIRequestInfo(uRI), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: org.exolab.jms.net.connector.URIRequestInfo(Lorg/exolab/jms/net/uri/URI;)V
statement is: defaultConnectionPool.createManagedConnectionAcceptor(authenticationMgr, uRIRequestInfo), class spoon.support.reflect.code.CtInvocationImpl
invocation is: defaultConnectionPool.createManagedConnectionAcceptor(authenticationMgr, uRIRequestInfo) target is: defaultConnectionPool method is: createManagedConnectionAcceptor(AuthenticationMgr,URIRequestInfo)
source statement: org.exolab.jms.net.connector.DefaultConnectionPool(Lorg/exolab/jms/net/connector/ManagedConnectionFactory;Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Ljava/util/Map;)V callee: VariableReference: Statement 5, type org.exolab.jms.net.connector.DefaultConnectionPoolindex is: 5
Matched Method is: createManagedConnectionAcceptor(Lorg/exolab/jms/net/connector/Authenticator;Lorg/exolab/jms/net/connector/ConnectionRequestInfo;)Lorg/exolab/jms/net/connector/ManagedConnectionAcceptor;
i 1 Parameters size() 1 Num of Method Parameters: 2
statement is: defaultConnectionPool.close(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: defaultConnectionPool.close() target is: defaultConnectionPool method is: close()
source statement: org.exolab.jms.net.connector.DefaultConnectionPool(Lorg/exolab/jms/net/connector/ManagedConnectionFactory;Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Ljava/util/Map;)V callee: VariableReference: Statement 5, type org.exolab.jms.net.connector.DefaultConnectionPoolindex is: 5
Matched Method is: close()V
TestCase is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
String string = "jdbc://localhost:3306/testdb";
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) string);
ProviderList providerList = new ProviderList();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, (InvocationHandler) createConnectionFactory, (ConnectionFactory) providerList, providerList);
Configuration configuration = new Configuration();
DatabaseService databaseService = new DatabaseService(configuration);
UserManager userManager = new UserManager(configuration, databaseService);
AuthenticationMgr authenticationMgr = new AuthenticationMgr(userManager);
URIRequestInfo uRIRequestInfo = null;
defaultConnectionPool.createManagedConnectionAcceptor(authenticationMgr, uRIRequestInfo);
defaultConnectionPool.close();

statement is: org.exolab.jms.net.vm.VMManagedConnectionFactory()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.vm.VMManagedConnectionFactory
statement code is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory()
statement is: mock(interface org.exolab.jms.net.connector.InvocationHandler) type is: class org.evosuite.testcase.statements.FunctionalMockStatement return type interface org.exolab.jms.net.connector.InvocationHandler
statement code is: InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer())
statement is: createConnectionFactory(Lorg/exolab/jms/net/connector/ConnectionManager;)Lorg/exolab/jms/net/connector/ConnectionFactory; type is: class org.evosuite.testcase.statements.MethodStatement return type interface org.exolab.jms.net.connector.ConnectionFactory
statement code is: ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null)
statement is: org.exolab.jms.net.connector.ContextInvocationHandler(Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Lorg/exolab/jms/net/connector/ManagedConnection;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.ContextInvocationHandler
statement code is: ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(arg0, arg1, (ManagedConnection) null)
statement is: java.util.HashMap()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type java.util.HashMap<java.lang.Object, java.lang.Object>
statement code is: HashMap<Object, Object> hashMap = new HashMap<Object, Object>()
statement is: org.exolab.jms.net.connector.DefaultConnectionPool(Lorg/exolab/jms/net/connector/ManagedConnectionFactory;Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Ljava/util/Map;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.DefaultConnectionPool
statement code is: DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(arg0, arg1, arg2, arg3)
statement is: org.exolab.jms.net.connector.ManagedConnectionHandle(Lorg/exolab/jms/net/connector/DefaultConnectionPool;Lorg/exolab/jms/net/connector/ManagedConnection;Lorg/exolab/jms/net/connector/ConnectionFactory;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.ManagedConnectionHandle
statement code is: ManagedConnectionHandle managedConnectionHandle = new ManagedConnectionHandle(arg0, (ManagedConnection) null, arg2)
statement is: idle(Lorg/exolab/jms/net/connector/ManagedConnectionHandle;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: defaultConnectionPool.idle(arg0)
test data is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
HashMap<Object, Object> hashMap = new HashMap<Object, Object>();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, hashMap);
ManagedConnectionHandle managedConnectionHandle = new ManagedConnectionHandle(defaultConnectionPool, (ManagedConnection) null, createConnectionFactory);
defaultConnectionPool.idle(managedConnectionHandle);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
        InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
        ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory(((ConnectionManager) (null)));
        ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, ((ManagedConnection) (null)));
        HashMap<Object, Object> hashMap = new HashMap<>();
        hashMap.put("connectionPool", new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, hashMap));
        ManagedConnectionHandle managedConnectionHandle = new ManagedConnectionHandle(((DefaultConnectionPool) (hashMap.get("connectionPool"))), ((ManagedConnection) (null)), createConnectionFactory);
        defaultConnectionPool.idle(managedConnectionHandle);
    }
}
statement is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer()), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: mock(InvocationHandler.class, new ViolatedAssumptionAnswer()) target is:  method is: mock(java.lang.Class,<unknown>)
target name is: InvocationHandler argument is: InvocationHandler.class
Matched Method is: mock(interface org.exolab.jms.net.connector.InvocationHandler)
statement is: ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory(((ConnectionManager) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: vMManagedConnectionFactory.createConnectionFactory(((ConnectionManager) (null))) target is: vMManagedConnectionFactory method is: createConnectionFactory(ConnectionManager)
source statement: org.exolab.jms.net.vm.VMManagedConnectionFactory()V callee: VariableReference: Statement 0, type org.exolab.jms.net.vm.VMManagedConnectionFactoryindex is: 0
Matched Method is: createConnectionFactory(Lorg/exolab/jms/net/connector/ConnectionManager;)Lorg/exolab/jms/net/connector/ConnectionFactory;
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, ((ManagedConnection) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: HashMap<Object, Object> hashMap = new HashMap<>(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: hashMap.put("connectionPool", new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, hashMap)), class spoon.support.reflect.code.CtInvocationImpl
invocation is: hashMap.put("connectionPool", new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, hashMap)) target is: hashMap method is: put(java.lang.String,DefaultConnectionPool)
statement is: ManagedConnectionHandle managedConnectionHandle = new ManagedConnectionHandle(((DefaultConnectionPool) (hashMap.get("connectionPool"))), ((ManagedConnection) (null)), createConnectionFactory), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: defaultConnectionPool.idle(managedConnectionHandle), class spoon.support.reflect.code.CtInvocationImpl
invocation is: defaultConnectionPool.idle(managedConnectionHandle) target is: defaultConnectionPool method is: idle(ManagedConnectionHandle)
TestCase is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionManager connectionManager = null;
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory(connectionManager);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
HashMap<Object, Object> hashMap = new HashMap<Object, Object>();
ManagedConnectionHandle managedConnectionHandle = new ManagedConnectionHandle((DefaultConnectionPool) createConnectionFactory, (ManagedConnection) null, (ConnectionFactory) connectionManager);

statement is: org.exolab.jms.net.vm.VMManagedConnectionFactory()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.vm.VMManagedConnectionFactory
statement code is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory()
statement is: mock(interface org.exolab.jms.net.connector.InvocationHandler) type is: class org.evosuite.testcase.statements.FunctionalMockStatement return type interface org.exolab.jms.net.connector.InvocationHandler
statement code is: InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer())
statement is: createConnectionFactory(Lorg/exolab/jms/net/connector/ConnectionManager;)Lorg/exolab/jms/net/connector/ConnectionFactory; type is: class org.evosuite.testcase.statements.MethodStatement return type interface org.exolab.jms.net.connector.ConnectionFactory
statement code is: ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null)
statement is: org.exolab.jms.net.connector.ContextInvocationHandler(Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Lorg/exolab/jms/net/connector/ManagedConnection;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.ContextInvocationHandler
statement code is: ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(arg0, arg1, (ManagedConnection) null)
statement is: org.exolab.jms.net.connector.DefaultConnectionPool(Lorg/exolab/jms/net/connector/ManagedConnectionFactory;Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Ljava/util/Map;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.DefaultConnectionPool
statement code is: DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(arg0, arg1, arg2, (Map) null)
statement is: add(Lorg/exolab/jms/net/connector/ManagedConnection;Z)Lorg/exolab/jms/net/connector/ManagedConnection; type is: class org.evosuite.testcase.statements.MethodStatement return type interface org.exolab.jms.net.connector.ManagedConnection
statement code is: ManagedConnection add = defaultConnectionPool.add((ManagedConnection) null, false)
test data is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
defaultConnectionPool.add((ManagedConnection) null, false);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
        InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
        ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory(((ConnectionManager) (null)));
        ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, ((ManagedConnection) (null)));
        DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, ((Map) (null)));
        defaultConnectionPool.add(((ManagedConnection) (null)), false);
        // Improved test data:
        VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
        InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
        ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory(((ConnectionManager) (null)));
        ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, ((ManagedConnection) (null)));
        DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, ((Map) (null)));
        defaultConnectionPool.add(((ManagedConnection) (new TestManagedConnection())), false);
    }
}
statement is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer()), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: mock(InvocationHandler.class, new ViolatedAssumptionAnswer()) target is:  method is: mock(java.lang.Class,<unknown>)
target name is: InvocationHandler argument is: InvocationHandler.class
Matched Method is: mock(interface org.exolab.jms.net.connector.InvocationHandler)
statement is: ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory(((ConnectionManager) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: vMManagedConnectionFactory.createConnectionFactory(((ConnectionManager) (null))) target is: vMManagedConnectionFactory method is: createConnectionFactory(ConnectionManager)
source statement: org.exolab.jms.net.vm.VMManagedConnectionFactory()V callee: VariableReference: Statement 0, type org.exolab.jms.net.vm.VMManagedConnectionFactoryindex is: 0
Matched Method is: createConnectionFactory(Lorg/exolab/jms/net/connector/ConnectionManager;)Lorg/exolab/jms/net/connector/ConnectionFactory;
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, ((ManagedConnection) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, ((Map) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: defaultConnectionPool.add(((ManagedConnection) (null)), false), class spoon.support.reflect.code.CtInvocationImpl
invocation is: defaultConnectionPool.add(((ManagedConnection) (null)), false) target is: defaultConnectionPool method is: add(ManagedConnection,boolean)
source statement: org.exolab.jms.net.connector.DefaultConnectionPool(Lorg/exolab/jms/net/connector/ManagedConnectionFactory;Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Ljava/util/Map;)V callee: VariableReference: Statement 4, type org.exolab.jms.net.connector.DefaultConnectionPoolindex is: 5
Matched Method is: add(Lorg/exolab/jms/net/connector/ManagedConnection;Z)Lorg/exolab/jms/net/connector/ManagedConnection;
i 1 Parameters size() 1 Num of Method Parameters: 2
statement is: // Improved test data:
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer()), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: mock(InvocationHandler.class, new ViolatedAssumptionAnswer()) target is:  method is: mock(java.lang.Class,<unknown>)
target name is: InvocationHandler argument is: InvocationHandler.class
Matched Method is: mock(interface org.exolab.jms.net.connector.InvocationHandler)
statement is: ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory(((ConnectionManager) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: vMManagedConnectionFactory.createConnectionFactory(((ConnectionManager) (null))) target is: vMManagedConnectionFactory method is: createConnectionFactory(ConnectionManager)
source statement: org.exolab.jms.net.vm.VMManagedConnectionFactory()V callee: VariableReference: Statement 0, type org.exolab.jms.net.vm.VMManagedConnectionFactoryindex is: 9
Matched Method is: createConnectionFactory(Lorg/exolab/jms/net/connector/ConnectionManager;)Lorg/exolab/jms/net/connector/ConnectionFactory;
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, ((ManagedConnection) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, ((Map) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: defaultConnectionPool.add(((ManagedConnection) (new TestManagedConnection())), false), class spoon.support.reflect.code.CtInvocationImpl
invocation is: defaultConnectionPool.add(((ManagedConnection) (new TestManagedConnection())), false) target is: defaultConnectionPool method is: add(ManagedConnection,boolean)
source statement: org.exolab.jms.net.connector.DefaultConnectionPool(Lorg/exolab/jms/net/connector/ManagedConnectionFactory;Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Ljava/util/Map;)V callee: VariableReference: Statement 4, type org.exolab.jms.net.connector.DefaultConnectionPoolindex is: 14
Matched Method is: add(Lorg/exolab/jms/net/connector/ManagedConnection;Z)Lorg/exolab/jms/net/connector/ManagedConnection;
i 1 Parameters size() 1 Num of Method Parameters: 2
TestCase is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionManager connectionManager = null;
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory(connectionManager);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
boolean _boolean = false;
boolean _boolean = null;
((DefaultConnectionPool) contextInvocationHandler).add((ManagedConnection) _boolean, _boolean);
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionManager connectionManager = null;
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory(connectionManager);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
boolean _boolean = false;
boolean _boolean = null;
((DefaultConnectionPool) contextInvocationHandler).add((ManagedConnection) _boolean, _boolean);

statement is: org.exolab.jms.net.vm.VMManagedConnectionFactory()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.vm.VMManagedConnectionFactory
statement code is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory()
statement is: mock(interface org.exolab.jms.net.connector.InvocationHandler) type is: class org.evosuite.testcase.statements.FunctionalMockStatement return type interface org.exolab.jms.net.connector.InvocationHandler
statement code is: InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer())
statement is: createConnectionFactory(Lorg/exolab/jms/net/connector/ConnectionManager;)Lorg/exolab/jms/net/connector/ConnectionFactory; type is: class org.evosuite.testcase.statements.MethodStatement return type interface org.exolab.jms.net.connector.ConnectionFactory
statement code is: ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null)
statement is: org.exolab.jms.net.rmi.RMIManagedConnectionFactory()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.rmi.RMIManagedConnectionFactory
statement code is: RMIManagedConnectionFactory rMIManagedConnectionFactory = new RMIManagedConnectionFactory()
statement is: org.exolab.jms.net.connector.DefaultConnectionPool(Lorg/exolab/jms/net/connector/ManagedConnectionFactory;Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Ljava/util/Map;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.DefaultConnectionPool
statement code is: DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(arg0, arg1, arg2, (Map) null)
statement is: error(Lorg/exolab/jms/net/connector/ManagedConnectionAcceptor;Ljava/lang/Throwable;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: defaultConnectionPool.error((ManagedConnectionAcceptor) null, (Throwable) null)
test data is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
RMIManagedConnectionFactory rMIManagedConnectionFactory = new RMIManagedConnectionFactory();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(rMIManagedConnectionFactory, invocationHandler, createConnectionFactory, (Map) null);
defaultConnectionPool.error((ManagedConnectionAcceptor) null, (Throwable) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
        InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
        ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory(((ConnectionManager) (null)));
        RMIManagedConnectionFactory rMIManagedConnectionFactory = new RMIManagedConnectionFactory();
        DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(rMIManagedConnectionFactory, invocationHandler, createConnectionFactory, ((Map) (null)));
        defaultConnectionPool.error(((ManagedConnectionAcceptor) (null)), new SQLException("Failed to acquire connection from pool", "08S01"));
    }
}
statement is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer()), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: mock(InvocationHandler.class, new ViolatedAssumptionAnswer()) target is:  method is: mock(java.lang.Class,<unknown>)
target name is: InvocationHandler argument is: InvocationHandler.class
Matched Method is: mock(interface org.exolab.jms.net.connector.InvocationHandler)
statement is: ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory(((ConnectionManager) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: vMManagedConnectionFactory.createConnectionFactory(((ConnectionManager) (null))) target is: vMManagedConnectionFactory method is: createConnectionFactory(ConnectionManager)
source statement: org.exolab.jms.net.vm.VMManagedConnectionFactory()V callee: VariableReference: Statement 0, type org.exolab.jms.net.vm.VMManagedConnectionFactoryindex is: 0
Matched Method is: createConnectionFactory(Lorg/exolab/jms/net/connector/ConnectionManager;)Lorg/exolab/jms/net/connector/ConnectionFactory;
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: RMIManagedConnectionFactory rMIManagedConnectionFactory = new RMIManagedConnectionFactory(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(rMIManagedConnectionFactory, invocationHandler, createConnectionFactory, ((Map) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: defaultConnectionPool.error(((ManagedConnectionAcceptor) (null)), new SQLException("Failed to acquire connection from pool", "08S01")), class spoon.support.reflect.code.CtInvocationImpl
invocation is: defaultConnectionPool.error(((ManagedConnectionAcceptor) (null)), new SQLException("Failed to acquire connection from pool", "08S01")) target is: defaultConnectionPool method is: error(ManagedConnectionAcceptor,SQLException)
source statement: org.exolab.jms.net.connector.DefaultConnectionPool(Lorg/exolab/jms/net/connector/ManagedConnectionFactory;Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Ljava/util/Map;)V callee: VariableReference: Statement 4, type org.exolab.jms.net.connector.DefaultConnectionPoolindex is: 5
Matched Method is: error(Lorg/exolab/jms/net/connector/ManagedConnectionAcceptor;Ljava/lang/Throwable;)V
i 0 Parameters size() 0 Num of Method Parameters: 2
i 1 Parameters size() 0 Num of Method Parameters: 2
TestCase is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionManager connectionManager = null;
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory(connectionManager);
RMIManagedConnectionFactory rMIManagedConnectionFactory = new RMIManagedConnectionFactory();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(rMIManagedConnectionFactory, invocationHandler, createConnectionFactory, (Map) null);
ManagedConnectionAcceptor managedConnectionAcceptor = null;
Throwable throwable = null;
((DefaultConnectionPool) rMIManagedConnectionFactory).error(managedConnectionAcceptor, throwable);

statement is: org.exolab.jms.net.vm.VMManagedConnectionFactory()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.vm.VMManagedConnectionFactory
statement code is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory()
statement is: createConnectionFactory(Lorg/exolab/jms/net/connector/ConnectionManager;)Lorg/exolab/jms/net/connector/ConnectionFactory; type is: class org.evosuite.testcase.statements.MethodStatement return type interface org.exolab.jms.net.connector.ConnectionFactory
statement code is: ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null)
statement is: org.exolab.jms.net.connector.ContextInvocationHandler(Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Lorg/exolab/jms/net/connector/ManagedConnection;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.ContextInvocationHandler
statement code is: ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler((InvocationHandler) null, arg1, (ManagedConnection) null)
statement is: org.exolab.jms.net.connector.DefaultConnectionPool(Lorg/exolab/jms/net/connector/ManagedConnectionFactory;Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Ljava/util/Map;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.exolab.jms.net.connector.DefaultConnectionPool
statement code is: DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(arg0, arg1, arg2, (Map) null)
statement is: remove(Lorg/exolab/jms/net/connector/ManagedConnection;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: defaultConnectionPool.remove((ManagedConnection) null)
test data is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler((InvocationHandler) null, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
defaultConnectionPool.remove((ManagedConnection) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
        ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory(new ConnectionManager());
        ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(null, createConnectionFactory, null);
        DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, null);
        defaultConnectionPool.remove(new ManagedConnection());
    }
}
statement is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory(new ConnectionManager()), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: vMManagedConnectionFactory.createConnectionFactory(new ConnectionManager()) target is: vMManagedConnectionFactory method is: createConnectionFactory(ConnectionManager)
source statement: org.exolab.jms.net.vm.VMManagedConnectionFactory()V callee: VariableReference: Statement 0, type org.exolab.jms.net.vm.VMManagedConnectionFactoryindex is: 0
Matched Method is: createConnectionFactory(Lorg/exolab/jms/net/connector/ConnectionManager;)Lorg/exolab/jms/net/connector/ConnectionFactory;
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(null, createConnectionFactory, null), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, null), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: defaultConnectionPool.remove(new ManagedConnection()), class spoon.support.reflect.code.CtInvocationImpl
invocation is: defaultConnectionPool.remove(new ManagedConnection()) target is: defaultConnectionPool method is: remove(ManagedConnection)
source statement: org.exolab.jms.net.connector.DefaultConnectionPool(Lorg/exolab/jms/net/connector/ManagedConnectionFactory;Lorg/exolab/jms/net/connector/InvocationHandler;Lorg/exolab/jms/net/connector/ConnectionFactory;Ljava/util/Map;)V callee: VariableReference: Statement 3, type org.exolab.jms.net.connector.DefaultConnectionPoolindex is: 4
Matched Method is: remove(Lorg/exolab/jms/net/connector/ManagedConnection;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
TestCase is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
ConnectionManager connectionManager = null;
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory(connectionManager);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler((InvocationHandler) createConnectionFactory, (ConnectionFactory) connectionManager, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
ManagedConnection managedConnection = null;
((DefaultConnectionPool) contextInvocationHandler).remove(managedConnection);

* test suite isTestSuite: 34
Test 0: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
defaultConnectionPool.getManagedConnectionAcceptorListener();
Test 1: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
// Undeclared exception!
try { 
  defaultConnectionPool.accepted((ManagedConnectionAcceptor) null, (ManagedConnection) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.exolab.jms.net.connector.DefaultConnectionPool", e);
}

Test 2: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
MulticastCallerListener multicastCallerListener = new MulticastCallerListener();
defaultConnectionPool.setCallerListener(multicastCallerListener);
Test 3: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
FormatableHashtable formatableHashtable = new FormatableHashtable();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, invocationHandler, createConnectionFactory, formatableHashtable);
try { 
  defaultConnectionPool.createManagedConnection((Principal) null, (ConnectionRequestInfo) null);
  fail("Expecting exception: Exception");

} catch(Exception e) {
   //
   // Argument 'info' must be of type org.exolab.jms.net.connector.URIRequestInfo
   //
   verifyException("org.exolab.jms.net.vm.VMManagedConnectionFactory", e);
}

Test 4: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
URI uRI = new URI();
URIRequestInfo uRIRequestInfo = new URIRequestInfo(uRI);
defaultConnectionPool.matchManagedConnectionAcceptors(uRIRequestInfo);
Test 5: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
FormatableHashtable formatableHashtable = new FormatableHashtable();
DefaultConnectionPool defaultConnectionPool = null;
try {
  defaultConnectionPool = new DefaultConnectionPool((ManagedConnectionFactory) null, contextInvocationHandler, createConnectionFactory, formatableHashtable);
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // Argument 'factory' is null
   //
   verifyException("org.exolab.jms.net.connector.DefaultConnectionPool", e);
}

Test 6: 
TCPSManagedConnectionFactory tCPSManagedConnectionFactory = new TCPSManagedConnectionFactory();
HTTPManagedConnectionFactory hTTPManagedConnectionFactory = new HTTPManagedConnectionFactory();
ConnectionFactory createConnectionFactory = hTTPManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
Hashtable<ManagedConnectionHandle, Object> hashtable = new Hashtable<ManagedConnectionHandle, Object>();
DefaultConnectionPool defaultConnectionPool = null;
try {
  defaultConnectionPool = new DefaultConnectionPool(tCPSManagedConnectionFactory, (InvocationHandler) null, createConnectionFactory, hashtable);
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // Argument 'handler' is null
   //
   verifyException("org.exolab.jms.net.connector.DefaultConnectionPool", e);
}

Test 7: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler((InvocationHandler) null, (ConnectionFactory) null, (ManagedConnection) null);
Properties properties = new Properties();
DefaultConnectionPool defaultConnectionPool = null;
try {
  defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, (ConnectionFactory) null, properties);
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // Argument 'resolver' is null
   //
   verifyException("org.exolab.jms.net.connector.DefaultConnectionPool", e);
}

Test 8: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
HashMap<Object, Object> hashMap = new HashMap<Object, Object>();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, hashMap);
URI uRI = new URI();
URIRequestInfo uRIRequestInfo = new URIRequestInfo(uRI);
defaultConnectionPool.matchManagedConnections((Principal) null, uRIRequestInfo);
Test 9: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
defaultConnectionPool.closed((ManagedConnection) null);
Test 10: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
ConstraintDefinitionNode constraintDefinitionNode = new ConstraintDefinitionNode();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
StandardException newException = StandardException.newException("JBjM(8RO.;-Rwz", (Object) null, (Object) contextInvocationHandler, (Object) null, (Object) constraintDefinitionNode, (Object) null);
defaultConnectionPool.error((ManagedConnection) null, (Throwable) newException);
Test 11: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ProviderList providerList = new ProviderList();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, invocationHandler, createConnectionFactory, providerList);
defaultConnectionPool.pinged((ManagedConnection) null);
Test 12: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
ProviderList providerList = new ProviderList();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, providerList);
Configuration configuration = new Configuration();
DatabaseService databaseService = new DatabaseService(configuration);
UserManager userManager = new UserManager(configuration, databaseService);
AuthenticationMgr authenticationMgr = new AuthenticationMgr(userManager);
URI uRI = new URI();
URIRequestInfo uRIRequestInfo = new URIRequestInfo(uRI);
defaultConnectionPool.createManagedConnectionAcceptor(authenticationMgr, uRIRequestInfo);
defaultConnectionPool.close();
Test 13: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
HashMap<Object, Object> hashMap = new HashMap<Object, Object>();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, hashMap);
ManagedConnectionHandle managedConnectionHandle = new ManagedConnectionHandle(defaultConnectionPool, (ManagedConnection) null, createConnectionFactory);
defaultConnectionPool.idle(managedConnectionHandle);
Test 14: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
// Undeclared exception!
try { 
  defaultConnectionPool.add((ManagedConnection) null, false);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.exolab.jms.net.connector.DefaultConnectionPool", e);
}

Test 15: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
RMIManagedConnectionFactory rMIManagedConnectionFactory = new RMIManagedConnectionFactory();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(rMIManagedConnectionFactory, invocationHandler, createConnectionFactory, (Map) null);
// Undeclared exception!
try { 
  defaultConnectionPool.error((ManagedConnectionAcceptor) null, (Throwable) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.exolab.jms.net.connector.DefaultConnectionPool", e);
}

Test 16: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler((InvocationHandler) null, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
defaultConnectionPool.remove((ManagedConnection) null);
Test 17: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler((InvocationHandler) createConnectionFactory, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
defaultConnectionPool.getManagedConnectionAcceptorListener();

Test 18: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
((DefaultConnectionPool) contextInvocationHandler).accepted((ManagedConnectionAcceptor) null, (ManagedConnection) null);

Test 19: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) "jdbc:oracle://localhost:1521/ORCL");
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
MulticastCallerListener multicastCallerListener = new MulticastCallerListener();
((DefaultConnectionPool) contextInvocationHandler).setCallerListener(multicastCallerListener);

Test 20: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, invocationHandler, createConnectionFactory, (Map) createConnectionFactory);
String string = "johndoe@example.com";
String string = "123456";
defaultConnectionPool.createManagedConnection((Principal) string, (ConnectionRequestInfo) string);

Test 21: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
URIRequestInfo uRIRequestInfo = new URIRequestInfo((URI) defaultConnectionPool);
((DefaultConnectionPool) contextInvocationHandler).matchManagedConnectionAcceptors(uRIRequestInfo);

Test 22: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
FormatableHashtable formatableHashtable = new FormatableHashtable();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool((ManagedConnectionFactory) contextInvocationHandler, (InvocationHandler) createConnectionFactory, (ConnectionFactory) formatableHashtable, (Map) contextInvocationHandler);

Test 23: 
TCPSManagedConnectionFactory tCPSManagedConnectionFactory = new TCPSManagedConnectionFactory();
HTTPManagedConnectionFactory hTTPManagedConnectionFactory = new HTTPManagedConnectionFactory();
ConnectionFactory createConnectionFactory = hTTPManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
Hashtable<ManagedConnectionHandle, Object> hashtable = new Hashtable<ManagedConnectionHandle, Object>();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(tCPSManagedConnectionFactory, (InvocationHandler) createConnectionFactory, hashtable, (Map) createConnectionFactory);

Test 24: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler((InvocationHandler) null, (ConnectionFactory) null, (ManagedConnection) null);
Properties properties = new Properties();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, (ConnectionFactory) properties, properties);

Test 25: 
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
URI uRI = new URI();
URIRequestInfo uRIRequestInfo = new URIRequestInfo(uRI);

Test 26: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
((DefaultConnectionPool) contextInvocationHandler).closed((ManagedConnection) null);

Test 27: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler((InvocationHandler) createConnectionFactory, createConnectionFactory, (ManagedConnection) null);
ConstraintDefinitionNode constraintDefinitionNode = new ConstraintDefinitionNode();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
String string = "JBjM(8RO.;-Rwz";
ProviderList providerList = null;
ConstraintDefinitionNode constraintDefinitionNode = null;
ProviderList providerList = null;
StandardException newException = StandardException.newException(string, (Object) contextInvocationHandler, (Object) constraintDefinitionNode, (Object) providerList, (Object) constraintDefinitionNode, (Object) providerList);
StandardException standardException = null;
defaultConnectionPool.error((ManagedConnection) newException, (Throwable) standardException);

Test 28: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ProviderList providerList = new ProviderList();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, invocationHandler, createConnectionFactory, providerList);
((DefaultConnectionPool) providerList).pinged((ManagedConnection) null);

Test 29: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) "jdbc://localhost:3306/testdb");
ProviderList providerList = new ProviderList();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, (InvocationHandler) createConnectionFactory, (ConnectionFactory) providerList, providerList);
Configuration configuration = new Configuration();
DatabaseService databaseService = new DatabaseService(configuration);
UserManager userManager = new UserManager(configuration, databaseService);
AuthenticationMgr authenticationMgr = new AuthenticationMgr(userManager);
URIRequestInfo uRIRequestInfo = null;
defaultConnectionPool.createManagedConnectionAcceptor(authenticationMgr, uRIRequestInfo);
defaultConnectionPool.close();

Test 30: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
HashMap<Object, Object> hashMap = new HashMap<Object, Object>();
ManagedConnectionHandle managedConnectionHandle = new ManagedConnectionHandle((DefaultConnectionPool) createConnectionFactory, (ManagedConnection) null, (ConnectionFactory) null);

Test 31: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
((DefaultConnectionPool) contextInvocationHandler).add((ManagedConnection) false, (boolean) (Boolean) null);
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionManager connectionManager = null;
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory(connectionManager);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
boolean _boolean = false;
boolean _boolean = null;
((DefaultConnectionPool) contextInvocationHandler).add((ManagedConnection) _boolean, _boolean);

Test 32: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
RMIManagedConnectionFactory rMIManagedConnectionFactory = new RMIManagedConnectionFactory();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(rMIManagedConnectionFactory, invocationHandler, createConnectionFactory, (Map) null);
((DefaultConnectionPool) rMIManagedConnectionFactory).error((ManagedConnectionAcceptor) null, (Throwable) null);

Test 33: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler((InvocationHandler) createConnectionFactory, (ConnectionFactory) null, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
ManagedConnection managedConnection = null;
((DefaultConnectionPool) contextInvocationHandler).remove(managedConnection);


* Generated after the refinement and before minimization 34 tests with total length 235
* test suite isTestSuite: 34
Test 0: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
defaultConnectionPool.getManagedConnectionAcceptorListener();
Test 1: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
// Undeclared exception!
try { 
  defaultConnectionPool.accepted((ManagedConnectionAcceptor) null, (ManagedConnection) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.exolab.jms.net.connector.DefaultConnectionPool", e);
}

Test 2: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
MulticastCallerListener multicastCallerListener = new MulticastCallerListener();
defaultConnectionPool.setCallerListener(multicastCallerListener);
Test 3: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
FormatableHashtable formatableHashtable = new FormatableHashtable();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, invocationHandler, createConnectionFactory, formatableHashtable);
try { 
  defaultConnectionPool.createManagedConnection((Principal) null, (ConnectionRequestInfo) null);
  fail("Expecting exception: Exception");

} catch(Exception e) {
   //
   // Argument 'info' must be of type org.exolab.jms.net.connector.URIRequestInfo
   //
   verifyException("org.exolab.jms.net.vm.VMManagedConnectionFactory", e);
}

Test 4: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
URI uRI = new URI();
URIRequestInfo uRIRequestInfo = new URIRequestInfo(uRI);
defaultConnectionPool.matchManagedConnectionAcceptors(uRIRequestInfo);
Test 5: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
FormatableHashtable formatableHashtable = new FormatableHashtable();
DefaultConnectionPool defaultConnectionPool = null;
try {
  defaultConnectionPool = new DefaultConnectionPool((ManagedConnectionFactory) null, contextInvocationHandler, createConnectionFactory, formatableHashtable);
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // Argument 'factory' is null
   //
   verifyException("org.exolab.jms.net.connector.DefaultConnectionPool", e);
}

Test 6: 
TCPSManagedConnectionFactory tCPSManagedConnectionFactory = new TCPSManagedConnectionFactory();
HTTPManagedConnectionFactory hTTPManagedConnectionFactory = new HTTPManagedConnectionFactory();
ConnectionFactory createConnectionFactory = hTTPManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
Hashtable<ManagedConnectionHandle, Object> hashtable = new Hashtable<ManagedConnectionHandle, Object>();
DefaultConnectionPool defaultConnectionPool = null;
try {
  defaultConnectionPool = new DefaultConnectionPool(tCPSManagedConnectionFactory, (InvocationHandler) null, createConnectionFactory, hashtable);
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // Argument 'handler' is null
   //
   verifyException("org.exolab.jms.net.connector.DefaultConnectionPool", e);
}

Test 7: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler((InvocationHandler) null, (ConnectionFactory) null, (ManagedConnection) null);
Properties properties = new Properties();
DefaultConnectionPool defaultConnectionPool = null;
try {
  defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, (ConnectionFactory) null, properties);
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // Argument 'resolver' is null
   //
   verifyException("org.exolab.jms.net.connector.DefaultConnectionPool", e);
}

Test 8: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
HashMap<Object, Object> hashMap = new HashMap<Object, Object>();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, hashMap);
URI uRI = new URI();
URIRequestInfo uRIRequestInfo = new URIRequestInfo(uRI);
defaultConnectionPool.matchManagedConnections((Principal) null, uRIRequestInfo);
Test 9: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
defaultConnectionPool.closed((ManagedConnection) null);
Test 10: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
ConstraintDefinitionNode constraintDefinitionNode = new ConstraintDefinitionNode();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
StandardException newException = StandardException.newException("JBjM(8RO.;-Rwz", (Object) null, (Object) contextInvocationHandler, (Object) null, (Object) constraintDefinitionNode, (Object) null);
defaultConnectionPool.error((ManagedConnection) null, (Throwable) newException);
Test 11: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ProviderList providerList = new ProviderList();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, invocationHandler, createConnectionFactory, providerList);
defaultConnectionPool.pinged((ManagedConnection) null);
Test 12: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
ProviderList providerList = new ProviderList();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, providerList);
Configuration configuration = new Configuration();
DatabaseService databaseService = new DatabaseService(configuration);
UserManager userManager = new UserManager(configuration, databaseService);
AuthenticationMgr authenticationMgr = new AuthenticationMgr(userManager);
URI uRI = new URI();
URIRequestInfo uRIRequestInfo = new URIRequestInfo(uRI);
defaultConnectionPool.createManagedConnectionAcceptor(authenticationMgr, uRIRequestInfo);
defaultConnectionPool.close();
Test 13: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
HashMap<Object, Object> hashMap = new HashMap<Object, Object>();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, hashMap);
ManagedConnectionHandle managedConnectionHandle = new ManagedConnectionHandle(defaultConnectionPool, (ManagedConnection) null, createConnectionFactory);
defaultConnectionPool.idle(managedConnectionHandle);
Test 14: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
// Undeclared exception!
try { 
  defaultConnectionPool.add((ManagedConnection) null, false);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.exolab.jms.net.connector.DefaultConnectionPool", e);
}

Test 15: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
RMIManagedConnectionFactory rMIManagedConnectionFactory = new RMIManagedConnectionFactory();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(rMIManagedConnectionFactory, invocationHandler, createConnectionFactory, (Map) null);
// Undeclared exception!
try { 
  defaultConnectionPool.error((ManagedConnectionAcceptor) null, (Throwable) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.exolab.jms.net.connector.DefaultConnectionPool", e);
}

Test 16: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler((InvocationHandler) null, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
defaultConnectionPool.remove((ManagedConnection) null);
Test 17: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler((InvocationHandler) createConnectionFactory, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
defaultConnectionPool.getManagedConnectionAcceptorListener();

Test 18: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
((DefaultConnectionPool) contextInvocationHandler).accepted((ManagedConnectionAcceptor) null, (ManagedConnection) null);

Test 19: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) "jdbc:oracle://localhost:1521/ORCL");
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
MulticastCallerListener multicastCallerListener = new MulticastCallerListener();
((DefaultConnectionPool) contextInvocationHandler).setCallerListener(multicastCallerListener);

Test 20: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, invocationHandler, createConnectionFactory, (Map) createConnectionFactory);
String string = "johndoe@example.com";
String string = "123456";
defaultConnectionPool.createManagedConnection((Principal) string, (ConnectionRequestInfo) string);

Test 21: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
URIRequestInfo uRIRequestInfo = new URIRequestInfo((URI) defaultConnectionPool);
((DefaultConnectionPool) contextInvocationHandler).matchManagedConnectionAcceptors(uRIRequestInfo);

Test 22: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
FormatableHashtable formatableHashtable = new FormatableHashtable();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool((ManagedConnectionFactory) contextInvocationHandler, (InvocationHandler) createConnectionFactory, (ConnectionFactory) formatableHashtable, (Map) contextInvocationHandler);

Test 23: 
TCPSManagedConnectionFactory tCPSManagedConnectionFactory = new TCPSManagedConnectionFactory();
HTTPManagedConnectionFactory hTTPManagedConnectionFactory = new HTTPManagedConnectionFactory();
ConnectionFactory createConnectionFactory = hTTPManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
Hashtable<ManagedConnectionHandle, Object> hashtable = new Hashtable<ManagedConnectionHandle, Object>();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(tCPSManagedConnectionFactory, (InvocationHandler) createConnectionFactory, hashtable, (Map) createConnectionFactory);

Test 24: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler((InvocationHandler) null, (ConnectionFactory) null, (ManagedConnection) null);
Properties properties = new Properties();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, (ConnectionFactory) properties, properties);

Test 25: 
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
URI uRI = new URI();
URIRequestInfo uRIRequestInfo = new URIRequestInfo(uRI);

Test 26: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
((DefaultConnectionPool) contextInvocationHandler).closed((ManagedConnection) null);

Test 27: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler((InvocationHandler) createConnectionFactory, createConnectionFactory, (ManagedConnection) null);
ConstraintDefinitionNode constraintDefinitionNode = new ConstraintDefinitionNode();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
String string = "JBjM(8RO.;-Rwz";
ProviderList providerList = null;
ConstraintDefinitionNode constraintDefinitionNode = null;
ProviderList providerList = null;
StandardException newException = StandardException.newException(string, (Object) contextInvocationHandler, (Object) constraintDefinitionNode, (Object) providerList, (Object) constraintDefinitionNode, (Object) providerList);
StandardException standardException = null;
defaultConnectionPool.error((ManagedConnection) newException, (Throwable) standardException);

Test 28: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ProviderList providerList = new ProviderList();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, invocationHandler, createConnectionFactory, providerList);
((DefaultConnectionPool) providerList).pinged((ManagedConnection) null);

Test 29: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) "jdbc://localhost:3306/testdb");
ProviderList providerList = new ProviderList();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, (InvocationHandler) createConnectionFactory, (ConnectionFactory) providerList, providerList);
Configuration configuration = new Configuration();
DatabaseService databaseService = new DatabaseService(configuration);
UserManager userManager = new UserManager(configuration, databaseService);
AuthenticationMgr authenticationMgr = new AuthenticationMgr(userManager);
URIRequestInfo uRIRequestInfo = null;
defaultConnectionPool.createManagedConnectionAcceptor(authenticationMgr, uRIRequestInfo);
defaultConnectionPool.close();

Test 30: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
HashMap<Object, Object> hashMap = new HashMap<Object, Object>();
ManagedConnectionHandle managedConnectionHandle = new ManagedConnectionHandle((DefaultConnectionPool) createConnectionFactory, (ManagedConnection) null, (ConnectionFactory) null);

Test 31: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
((DefaultConnectionPool) contextInvocationHandler).add((ManagedConnection) false, (boolean) (Boolean) null);
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionManager connectionManager = null;
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory(connectionManager);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
boolean _boolean = false;
boolean _boolean = null;
((DefaultConnectionPool) contextInvocationHandler).add((ManagedConnection) _boolean, _boolean);

Test 32: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
RMIManagedConnectionFactory rMIManagedConnectionFactory = new RMIManagedConnectionFactory();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(rMIManagedConnectionFactory, invocationHandler, createConnectionFactory, (Map) null);
((DefaultConnectionPool) rMIManagedConnectionFactory).error((ManagedConnectionAcceptor) null, (Throwable) null);

Test 33: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler((InvocationHandler) createConnectionFactory, (ConnectionFactory) null, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
ManagedConnection managedConnection = null;
((DefaultConnectionPool) contextInvocationHandler).remove(managedConnection);


* Minimizing test suite
* test suite isTestSuite: 18
Test 0: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
defaultConnectionPool.getManagedConnectionAcceptorListener();
Test 1: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
// Undeclared exception!
try { 
  defaultConnectionPool.accepted((ManagedConnectionAcceptor) null, (ManagedConnection) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.exolab.jms.net.connector.DefaultConnectionPool", e);
}

Test 2: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
MulticastCallerListener multicastCallerListener = new MulticastCallerListener();
defaultConnectionPool.setCallerListener(multicastCallerListener);
Test 3: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
FormatableHashtable formatableHashtable = new FormatableHashtable();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, invocationHandler, createConnectionFactory, formatableHashtable);
try { 
  defaultConnectionPool.createManagedConnection((Principal) null, (ConnectionRequestInfo) null);
  fail("Expecting exception: Exception");

} catch(Exception e) {
   //
   // Argument 'info' must be of type org.exolab.jms.net.connector.URIRequestInfo
   //
   verifyException("org.exolab.jms.net.vm.VMManagedConnectionFactory", e);
}

Test 4: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
ProviderList providerList = new ProviderList();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, providerList);
Configuration configuration = new Configuration();
DatabaseService databaseService = new DatabaseService(configuration);
UserManager userManager = new UserManager(configuration, databaseService);
AuthenticationMgr authenticationMgr = new AuthenticationMgr(userManager);
URI uRI = new URI();
URIRequestInfo uRIRequestInfo = new URIRequestInfo(uRI);
defaultConnectionPool.createManagedConnectionAcceptor(authenticationMgr, uRIRequestInfo);
defaultConnectionPool.close();
Test 5: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
URI uRI = new URI();
URIRequestInfo uRIRequestInfo = new URIRequestInfo(uRI);
defaultConnectionPool.matchManagedConnectionAcceptors(uRIRequestInfo);
Test 6: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
FormatableHashtable formatableHashtable = new FormatableHashtable();
DefaultConnectionPool defaultConnectionPool = null;
try {
  defaultConnectionPool = new DefaultConnectionPool((ManagedConnectionFactory) null, contextInvocationHandler, createConnectionFactory, formatableHashtable);
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // Argument 'factory' is null
   //
   verifyException("org.exolab.jms.net.connector.DefaultConnectionPool", e);
}

Test 7: 
TCPSManagedConnectionFactory tCPSManagedConnectionFactory = new TCPSManagedConnectionFactory();
HTTPManagedConnectionFactory hTTPManagedConnectionFactory = new HTTPManagedConnectionFactory();
ConnectionFactory createConnectionFactory = hTTPManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
Hashtable<ManagedConnectionHandle, Object> hashtable = new Hashtable<ManagedConnectionHandle, Object>();
DefaultConnectionPool defaultConnectionPool = null;
try {
  defaultConnectionPool = new DefaultConnectionPool(tCPSManagedConnectionFactory, (InvocationHandler) null, createConnectionFactory, hashtable);
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // Argument 'handler' is null
   //
   verifyException("org.exolab.jms.net.connector.DefaultConnectionPool", e);
}

Test 8: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler((InvocationHandler) null, (ConnectionFactory) null, (ManagedConnection) null);
Properties properties = new Properties();
DefaultConnectionPool defaultConnectionPool = null;
try {
  defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, (ConnectionFactory) null, properties);
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // Argument 'resolver' is null
   //
   verifyException("org.exolab.jms.net.connector.DefaultConnectionPool", e);
}

Test 9: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
HashMap<Object, Object> hashMap = new HashMap<Object, Object>();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, hashMap);
URI uRI = new URI();
URIRequestInfo uRIRequestInfo = new URIRequestInfo(uRI);
defaultConnectionPool.matchManagedConnections((Principal) null, uRIRequestInfo);
Test 10: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
defaultConnectionPool.closed((ManagedConnection) null);
Test 11: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
ConstraintDefinitionNode constraintDefinitionNode = new ConstraintDefinitionNode();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
StandardException newException = StandardException.newException("JBjM(8RO.;-Rwz", (Object) null, (Object) contextInvocationHandler, (Object) null, (Object) constraintDefinitionNode, (Object) null);
defaultConnectionPool.error((ManagedConnection) null, (Throwable) newException);
Test 12: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ProviderList providerList = new ProviderList();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, invocationHandler, createConnectionFactory, providerList);
defaultConnectionPool.pinged((ManagedConnection) null);
Test 13: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
ProviderList providerList = new ProviderList();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, providerList);
defaultConnectionPool.close();
Test 14: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
HashMap<Object, Object> hashMap = new HashMap<Object, Object>();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, hashMap);
ManagedConnectionHandle managedConnectionHandle = new ManagedConnectionHandle(defaultConnectionPool, (ManagedConnection) null, createConnectionFactory);
defaultConnectionPool.idle(managedConnectionHandle);
Test 15: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler(invocationHandler, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
// Undeclared exception!
try { 
  defaultConnectionPool.add((ManagedConnection) null, false);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.exolab.jms.net.connector.DefaultConnectionPool", e);
}

Test 16: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler invocationHandler = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
RMIManagedConnectionFactory rMIManagedConnectionFactory = new RMIManagedConnectionFactory();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(rMIManagedConnectionFactory, invocationHandler, createConnectionFactory, (Map) null);
// Undeclared exception!
try { 
  defaultConnectionPool.error((ManagedConnectionAcceptor) null, (Throwable) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.exolab.jms.net.connector.DefaultConnectionPool", e);
}

Test 17: 
VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
ConnectionFactory createConnectionFactory = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler contextInvocationHandler = new ContextInvocationHandler((InvocationHandler) null, createConnectionFactory, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(vMManagedConnectionFactory, contextInvocationHandler, createConnectionFactory, (Map) null);
defaultConnectionPool.remove((ManagedConnection) null);

* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 30%
* Total number of goals: 99
* Number of covered goals: 30
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 42%
* Total number of goals: 214
* Number of covered goals: 89
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 33%
* Total number of goals: 12
* Number of covered goals: 4
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 89%
* Total number of goals: 18
* Number of covered goals: 16
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 30%
* Total number of goals: 99
* Number of covered goals: 30
* Generated 18 tests with total length 123
* Resulting test suite's coverage: 44% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 9%
* Compiling and checking tests
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: VMManagedConnectionFactory arg0 = new VMManagedConnectionFactory();
InvocationHandler arg1 = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory arg2 = arg0.createConnectionFactory((ConnectionManager) null);
FormatableHashtable arg3 = new FormatableHashtable();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(arg0, arg1, arg2, arg3);
try { 
  defaultConnectionPool.createManagedConnection((Principal) null, (ConnectionRequestInfo) null);
  fail("Expecting exception: Exception");

} catch(Exception e) {
   //
   // Argument 'info' must be of type org.exolab.jms.net.connector.URIRequestInfo
   //
   verifyException("org.exolab.jms.net.vm.VMManagedConnectionFactory", e);
}


** It was a parseable test case! 
refined test name is: createManagedConnectionNullArgumentsTest
* Compiling Tests
refined test name is: createManagedConnectionNullURITest
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler arg0 = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory arg2 = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler arg1 = new ContextInvocationHandler(arg0, arg2, (ManagedConnection) null);
FormatableHashtable arg3 = new FormatableHashtable();
DefaultConnectionPool defaultConnectionPool = null;
try {
  defaultConnectionPool = new DefaultConnectionPool((ManagedConnectionFactory) null, arg1, arg2, arg3);
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // Argument 'factory' is null
   //
   verifyException("org.exolab.jms.net.connector.DefaultConnectionPool", e);
}


** It was a parseable test case! 
refined test name is: testConstructorArgumentFactoryIsNull
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: TCPSManagedConnectionFactory arg0 = new TCPSManagedConnectionFactory();
HTTPManagedConnectionFactory hTTPManagedConnectionFactory = new HTTPManagedConnectionFactory();
ConnectionFactory arg2 = hTTPManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
Hashtable<ManagedConnectionHandle, Object> arg3 = new Hashtable<ManagedConnectionHandle, Object>();
DefaultConnectionPool defaultConnectionPool = null;
try {
  defaultConnectionPool = new DefaultConnectionPool(arg0, (InvocationHandler) null, arg2, arg3);
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // Argument 'handler' is null
   //
   verifyException("org.exolab.jms.net.connector.DefaultConnectionPool", e);
}


** It was a parseable test case! 
refined test name is: testConstructorWithHandlerIsNull
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: VMManagedConnectionFactory arg0 = new VMManagedConnectionFactory();
ContextInvocationHandler arg1 = new ContextInvocationHandler((InvocationHandler) null, (ConnectionFactory) null, (ManagedConnection) null);
Properties arg3 = new Properties();
DefaultConnectionPool defaultConnectionPool = null;
try {
  defaultConnectionPool = new DefaultConnectionPool(arg0, arg1, (ConnectionFactory) null, arg3);
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // Argument 'resolver' is null
   //
   verifyException("org.exolab.jms.net.connector.DefaultConnectionPool", e);
}


** It was a parseable test case! 
refined test name is: testNullResolverThrowsException
* Compiling Tests
refined test name is: testConstructorThrowsExceptionWhenResolverIsNull
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: VMManagedConnectionFactory arg0 = new VMManagedConnectionFactory();
InvocationHandler arg1 = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory arg2 = arg0.createConnectionFactory((ConnectionManager) null);
ProviderList arg3 = new ProviderList();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(arg0, arg1, arg2, arg3);
defaultConnectionPool.pinged((ManagedConnection) null);

** It was a parseable test case! 
refined test name is: testPingNullValueShouldReturnFalse
* Compiling Tests
refined test name is: testPingedWithNullConnectionReturnsFalse
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: VMManagedConnectionFactory vMManagedConnectionFactory = new VMManagedConnectionFactory();
InvocationHandler arg1 = mock(InvocationHandler.class, new ViolatedAssumptionAnswer());
ConnectionFactory arg2 = vMManagedConnectionFactory.createConnectionFactory((ConnectionManager) null);
RMIManagedConnectionFactory arg0 = new RMIManagedConnectionFactory();
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(arg0, arg1, arg2, (Map) null);
// Undeclared exception!
try { 
  defaultConnectionPool.error((ManagedConnectionAcceptor) null, (Throwable) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.exolab.jms.net.connector.DefaultConnectionPool", e);
}


** It was a parseable test case! 
refined test name is: testErrorWithNullManagedConnectionAcceptor
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: VMManagedConnectionFactory arg0 = new VMManagedConnectionFactory();
ConnectionFactory arg2 = arg0.createConnectionFactory((ConnectionManager) null);
ContextInvocationHandler arg1 = new ContextInvocationHandler((InvocationHandler) null, arg2, (ManagedConnection) null);
DefaultConnectionPool defaultConnectionPool = new DefaultConnectionPool(arg0, arg1, arg2, (Map) null);
defaultConnectionPool.remove((ManagedConnection) null);

** It was a parseable test case! 
refined test name is: testRemoveManagedConnectionReturnsTrue
* Compiling Tests
refined test name is: testRemoveManagedConnectionReturnsTrue
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 14:11:10.886 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar907071620661742968.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 14:11:10.911 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar907071620661742968.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 14:11:10.984 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar907071620661742968.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 14:11:10.985 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar907071620661742968.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 14:11:11.056 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar907071620661742968.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 14:11:11.058 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar907071620661742968.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 14:11:11.139 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar907071620661742968.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 14:11:11.140 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar907071620661742968.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 14:11:11.227 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar907071620661742968.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 14:11:11.229 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar907071620661742968.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 14:11:11.490 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar907071620661742968.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 14:11:11.491 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar907071620661742968.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 14:11:11.558 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar907071620661742968.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 14:11:11.559 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar907071620661742968.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 3 called: 1 to improve: false
** Write a test suite: 4 called: 2 to improve: false
** Write a test suite: 6 called: 3 to improve: false
[MASTER] 14:11:11.662 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar907071620661742968.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 14:11:11.663 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar907071620661742968.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 2 called: 1 to improve: false
** Write a test suite: 3 called: 2 to improve: false
** Write a test suite: 6 called: 3 to improve: false
[MASTER] 14:11:11.778 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar907071620661742968.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 14:11:11.779 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar907071620661742968.jar
[MASTER] 14:11:11.863 [logback-1] WARN  TimeController - Already entered in phase: INLINING. This will mess up the timing calculations.
[MASTER] 14:11:11.953 [logback-1] WARN  TimeController - Already entered in phase: MINIMIZATION. This will mess up the timing calculations.
* Computation finished
