* EvoSuite 1.0.0-SNAPSHOT
* Going to generate test cases for class: com.werken.saxpath.XPathLexer
* Starting Client-0
* Properties loaded from /home/roham/Results-Utestgen/dataset/SF110-new-res/24_saxpath/evosuite-files/evosuite.properties
* Connecting to master process on port 15311
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class com.werken.saxpath.XPathLexer
* Test criteria:
  - Branch Coverage
  - Line Coverage
  - Method-Output Coverage
  - Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 1404
* Using seed 1710195738917
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%]* Initial Number of Goals in DynaMOSA = 638 / 1404
[Progress:>                             1%] [Cov:====================>              58%][Progress:>                             2%] [Cov:====================>              59%][Progress:>                             3%] [Cov:=====================>             61%][Progress:=>                            4%] [Cov:=====================>             62%][Progress:=>                            5%] [Cov:======================>            64%][Progress:=>                            6%] [Cov:=======================>           66%][Progress:=>                            6%] [Cov:=======================>           67%][Progress:==>                           7%] [Cov:========================>          69%][Progress:==>                           8%] [Cov:========================>          69%][Progress:==>                           8%] [Cov:========================>          70%][Progress:==>                           9%] [Cov:========================>          71%][Progress:===>                          10%] [Cov:=========================>         72%][Progress:===>                          10%] [Cov:=========================>         72%][Progress:===>                          11%] [Cov:=========================>         72%][Progress:===>                          11%] [Cov:=========================>         73%][Progress:===>                          12%] [Cov:=========================>         74%][Progress:===>                          12%] [Cov:==========================>        75%][Progress:===>                          13%] [Cov:==========================>        75%][Progress:====>                         15%] [Cov:==========================>        75%][Progress:====>                         15%] [Cov:==========================>        76%][Progress:====>                         16%] [Cov:==========================>        76%][Progress:====>                         16%] [Cov:==========================>        76%][Progress:====>                         16%] [Cov:==========================>        76%][Progress:=====>                        17%] [Cov:==========================>        76%][Progress:=====>                        18%] [Cov:==========================>        76%][Progress:=====>                        18%] [Cov:==========================>        76%][Progress:=====>                        19%] [Cov:==========================>        76%][Progress:=====>                        19%] [Cov:==========================>        76%][Progress:=====>                        19%] [Cov:==========================>        77%][Progress:=====>                        19%] [Cov:==========================>        77%][Progress:======>                       20%] [Cov:==========================>        77%][Progress:======>                       20%] [Cov:==========================>        77%][Progress:======>                       21%] [Cov:==========================>        77%][Progress:======>                       21%] [Cov:==========================>        77%][Progress:======>                       21%] [Cov:==========================>        77%][Progress:======>                       21%] [Cov:==========================>        77%][Progress:======>                       22%] [Cov:==========================>        77%][Progress:======>                       22%] [Cov:==========================>        77%][Progress:======>                       22%] [Cov:==========================>        77%][Progress:======>                       23%] [Cov:==========================>        77%][Progress:======>                       23%] [Cov:==========================>        77%][Progress:======>                       23%] [Cov:==========================>        77%][Progress:=======>                      24%] [Cov:==========================>        77%][Progress:=======>                      24%] [Cov:==========================>        77%][Progress:=======>                      25%] [Cov:==========================>        77%][Progress:=======>                      25%] [Cov:===========================>       78%][Progress:=======>                      25%] [Cov:===========================>       78%][Progress:=======>                      26%] [Cov:===========================>       78%][Progress:=======>                      26%] [Cov:===========================>       78%][Progress:========>                     27%] [Cov:===========================>       78%][Progress:========>                     27%] [Cov:===========================>       78%][Progress:========>                     27%] [Cov:===========================>       78%][Progress:========>                     27%] [Cov:===========================>       78%][Progress:========>                     27%] [Cov:===========================>       78%][Progress:========>                     28%] [Cov:===========================>       78%][Progress:========>                     28%] [Cov:===========================>       78%][Progress:========>                     28%] [Cov:===========================>       78%][Progress:========>                     28%] [Cov:===========================>       78%][Progress:========>                     29%] [Cov:===========================>       78%][Progress:========>                     29%] [Cov:===========================>       78%][Progress:========>                     29%] [Cov:===========================>       78%][Progress:=========>                    30%] [Cov:===========================>       78%][Progress:=========>                    30%] [Cov:===========================>       78%][Progress:=========>                    30%] [Cov:===========================>       78%][Progress:=========>                    31%] [Cov:===========================>       78%][Progress:=========>                    31%] [Cov:===========================>       78%][Progress:=========>                    32%] [Cov:===========================>       78%][Progress:=========>                    32%] [Cov:===========================>       79%][Progress:=========>                    32%] [Cov:===========================>       79%][Progress:=========>                    32%] [Cov:===========================>       79%][Progress:=========>                    33%] [Cov:===========================>       79%][Progress:=========>                    33%] [Cov:===========================>       79%][Progress:=========>                    33%] [Cov:===========================>       79%][Progress:=========>                    33%] [Cov:===========================>       79%][Progress:==========>                   34%] [Cov:===========================>       79%][Progress:==========>                   34%] [Cov:===========================>       79%][Progress:==========>                   34%] [Cov:===========================>       79%][Progress:==========>                   34%] [Cov:===========================>       79%][Progress:==========>                   35%] [Cov:===========================>       79%][Progress:==========>                   35%] [Cov:===========================>       79%][Progress:==========>                   35%] [Cov:===========================>       79%][Progress:==========>                   35%] [Cov:===========================>       79%][Progress:==========>                   36%] [Cov:===========================>       79%][Progress:==========>                   36%] [Cov:===========================>       79%][Progress:==========>                   36%] [Cov:===========================>       79%][Progress:==========>                   36%] [Cov:===========================>       79%][Progress:==========>                   36%] [Cov:===========================>       79%][Progress:==========>                   36%] [Cov:===========================>       79%][Progress:===========>                  37%] [Cov:===========================>       79%][Progress:===========>                  37%] [Cov:===========================>       79%][Progress:===========>                  37%] [Cov:===========================>       79%][Progress:===========>                  37%] [Cov:===========================>       79%][Progress:===========>                  37%] [Cov:===========================>       79%][Progress:===========>                  38%] [Cov:===========================>       79%][Progress:===========>                  38%] [Cov:===========================>       79%][Progress:===========>                  38%] [Cov:===========================>       79%][Progress:===========>                  38%] [Cov:===========================>       79%][Progress:===========>                  39%] [Cov:===========================>       79%][Progress:===========>                  39%] [Cov:===========================>       79%][Progress:===========>                  39%] [Cov:===========================>       79%][Progress:============>                 40%] [Cov:===========================>       79%][Progress:============>                 40%] [Cov:===========================>       79%][Progress:============>                 40%] [Cov:===========================>       79%][Progress:============>                 41%] [Cov:===========================>       79%][Progress:============>                 41%] [Cov:===========================>       79%][Progress:============>                 41%] [Cov:===========================>       79%][Progress:============>                 41%] [Cov:===========================>       79%][Progress:============>                 42%] [Cov:===========================>       79%][Progress:============>                 42%] [Cov:===========================>       79%][Progress:============>                 42%] [Cov:===========================>       79%][Progress:============>                 43%] [Cov:===========================>       79%][Progress:============>                 43%] [Cov:===========================>       79%][Progress:============>                 43%] [Cov:===========================>       79%][Progress:============>                 43%] [Cov:===========================>       79%][Progress:=============>                44%] [Cov:===========================>       79%][Progress:=============>                44%] [Cov:===========================>       79%][Progress:=============>                44%] [Cov:===========================>       79%][Progress:=============>                45%] [Cov:===========================>       79%][Progress:=============>                45%] [Cov:===========================>       79%][Progress:=============>                45%] [Cov:===========================>       79%][Progress:=============>                45%] [Cov:===========================>       79%][Progress:=============>                46%] [Cov:===========================>       79%][Progress:=============>                46%] [Cov:===========================>       79%][Progress:=============>                46%] [Cov:===========================>       79%][Progress:=============>                46%] [Cov:===========================>       79%][Progress:=============>                46%] [Cov:===========================>       79%][Progress:=============>                46%] [Cov:===========================>       79%][Progress:==============>               47%] [Cov:===========================>       79%][Progress:==============>               47%] [Cov:===========================>       79%][Progress:==============>               47%] [Cov:===========================>       79%][Progress:==============>               47%] [Cov:===========================>       79%][Progress:==============>               47%] [Cov:===========================>       79%][Progress:==============>               47%] [Cov:===========================>       79%][Progress:==============>               47%] [Cov:===========================>       79%][Progress:==============>               47%] [Cov:===========================>       79%][Progress:==============>               48%] [Cov:===========================>       79%][Progress:==============>               48%] [Cov:===========================>       79%][Progress:==============>               48%] [Cov:===========================>       79%][Progress:==============>               48%] [Cov:===========================>       79%][Progress:==============>               48%] [Cov:===========================>       79%][Progress:==============>               48%] [Cov:===========================>       79%][Progress:==============>               48%] [Cov:===========================>       79%][Progress:==============>               49%] [Cov:===========================>       79%][Progress:==============>               49%] [Cov:===========================>       79%][Progress:==============>               49%] [Cov:===========================>       79%][Progress:==============>               49%] [Cov:===========================>       79%][Progress:==============>               49%] [Cov:===========================>       79%][Progress:==============>               49%] [Cov:===========================>       79%][Progress:===============>              50%] [Cov:===========================>       79%][Progress:===============>              50%] [Cov:===========================>       79%][Progress:===============>              50%] [Cov:===========================>       79%][Progress:===============>              50%] [Cov:===========================>       79%][Progress:===============>              51%] [Cov:===========================>       79%][Progress:===============>              51%] [Cov:===========================>       79%][Progress:===============>              51%] [Cov:===========================>       79%][Progress:===============>              51%] [Cov:===========================>       79%][Progress:===============>              52%] [Cov:===========================>       79%][Progress:===============>              52%] [Cov:===========================>       79%][Progress:===============>              52%] [Cov:===========================>       79%][Progress:===============>              52%] [Cov:===========================>       79%][Progress:===============>              52%] [Cov:===========================>       79%][Progress:===============>              53%] [Cov:===========================>       79%][Progress:===============>              53%] [Cov:===========================>       79%][Progress:===============>              53%] [Cov:===========================>       79%][Progress:===============>              53%] [Cov:===========================>       79%][Progress:================>             54%] [Cov:===========================>       79%][Progress:================>             54%] [Cov:===========================>       79%][Progress:================>             54%] [Cov:===========================>       79%][Progress:================>             55%] [Cov:===========================>       79%][Progress:================>             55%] [Cov:===========================>       79%][Progress:================>             55%] [Cov:===========================>       79%][Progress:================>             55%] [Cov:===========================>       79%][Progress:================>             56%] [Cov:===========================>       79%][Progress:================>             56%] [Cov:===========================>       79%][Progress:================>             56%] [Cov:===========================>       79%][Progress:================>             56%] [Cov:===========================>       79%][Progress:================>             56%] [Cov:===========================>       79%][Progress:=================>            57%] [Cov:===========================>       79%][Progress:=================>            57%] [Cov:===========================>       79%][Progress:=================>            57%] [Cov:===========================>       79%][Progress:=================>            57%] [Cov:===========================>       79%][Progress:=================>            57%] [Cov:===========================>       79%][Progress:=================>            58%] [Cov:===========================>       79%][Progress:=================>            58%] [Cov:===========================>       79%][Progress:=================>            58%] [Cov:===========================>       79%][Progress:=================>            58%] [Cov:===========================>       79%][Progress:=================>            58%] [Cov:===========================>       79%][Progress:=================>            58%] [Cov:===========================>       79%][Progress:=================>            58%] [Cov:===========================>       79%][Progress:=================>            59%] [Cov:===========================>       79%][Progress:=================>            59%] [Cov:===========================>       79%][Progress:=================>            59%] [Cov:===========================>       79%][Progress:=================>            59%] [Cov:===========================>       79%][Progress:=================>            59%] [Cov:===========================>       79%][Progress:=================>            59%] [Cov:===========================>       79%][Progress:=================>            59%] [Cov:===========================>       79%][Progress:==================>           60%] [Cov:===========================>       79%][Progress:==================>           60%] [Cov:===========================>       79%][Progress:==================>           60%] [Cov:===========================>       79%][Progress:==================>           60%] [Cov:===========================>       79%][Progress:==================>           60%] [Cov:===========================>       79%][Progress:==================>           60%] [Cov:===========================>       79%][Progress:==================>           60%] [Cov:===========================>       79%][Progress:==================>           61%] [Cov:===========================>       79%][Progress:==================>           61%] [Cov:===========================>       79%][Progress:==================>           61%] [Cov:===========================>       79%][Progress:==================>           61%] [Cov:===========================>       79%][Progress:==================>           62%] [Cov:===========================>       79%][Progress:==================>           62%] [Cov:===========================>       79%][Progress:==================>           62%] [Cov:===========================>       79%][Progress:==================>           62%] [Cov:===========================>       79%][Progress:==================>           62%] [Cov:===========================>       79%][Progress:==================>           62%] [Cov:===========================>       79%][Progress:==================>           62%] [Cov:===========================>       79%][Progress:==================>           63%] [Cov:===========================>       79%][Progress:==================>           63%] [Cov:===========================>       79%][Progress:==================>           63%] [Cov:===========================>       79%][Progress:==================>           63%] [Cov:===========================>       79%][Progress:==================>           63%] [Cov:===========================>       79%][Progress:===================>          64%] [Cov:===========================>       79%][Progress:===================>          64%] [Cov:===========================>       79%][Progress:===================>          64%] [Cov:===========================>       79%][Progress:===================>          65%] [Cov:===========================>       79%][Progress:===================>          65%] [Cov:===========================>       79%][Progress:===================>          65%] [Cov:===========================>       79%][Progress:===================>          66%] [Cov:===========================>       79%][Progress:===================>          66%] [Cov:===========================>       79%][Progress:===================>          66%] [Cov:===========================>       79%][Progress:===================>          66%] [Cov:===========================>       79%][Progress:====================>         67%] [Cov:===========================>       79%][Progress:====================>         67%] [Cov:===========================>       79%][Progress:====================>         67%] [Cov:===========================>       79%][Progress:====================>         67%] [Cov:===========================>       79%][Progress:====================>         67%] [Cov:===========================>       79%][Progress:====================>         67%] [Cov:===========================>       79%][Progress:====================>         68%] [Cov:===========================>       79%][Progress:====================>         68%] [Cov:===========================>       79%][Progress:====================>         68%] [Cov:===========================>       79%][Progress:====================>         68%] [Cov:===========================>       79%][Progress:====================>         68%] [Cov:===========================>       79%][Progress:====================>         69%] [Cov:===========================>       79%][Progress:====================>         69%] [Cov:===========================>       79%][Progress:====================>         69%] [Cov:===========================>       79%][Progress:====================>         69%] [Cov:===========================>       79%][Progress:====================>         69%] [Cov:===========================>       79%][Progress:=====================>        70%] [Cov:===========================>       79%][Progress:=====================>        70%] [Cov:===========================>       79%][Progress:=====================>        70%] [Cov:===========================>       79%][Progress:=====================>        70%] [Cov:===========================>       79%][Progress:=====================>        71%] [Cov:===========================>       79%][Progress:=====================>        71%] [Cov:===========================>       79%][Progress:=====================>        71%] [Cov:===========================>       79%][Progress:=====================>        71%] [Cov:===========================>       79%][Progress:=====================>        72%] [Cov:===========================>       79%][Progress:=====================>        72%] [Cov:===========================>       79%][Progress:=====================>        72%] [Cov:===========================>       79%][Progress:=====================>        72%] [Cov:===========================>       79%][Progress:=====================>        73%] [Cov:===========================>       79%][Progress:=====================>        73%] [Cov:===========================>       79%][Progress:=====================>        73%] [Cov:===========================>       79%][Progress:=====================>        73%] [Cov:===========================>       79%][Progress:=====================>        73%] [Cov:===========================>       79%][Progress:======================>       74%] [Cov:===========================>       79%][Progress:======================>       74%] [Cov:===========================>       79%][Progress:======================>       74%] [Cov:===========================>       79%][Progress:======================>       74%] [Cov:===========================>       79%][Progress:======================>       74%] [Cov:===========================>       79%][Progress:======================>       74%] [Cov:===========================>       79%][Progress:======================>       74%] [Cov:===========================>       79%][Progress:======================>       75%] [Cov:===========================>       79%][Progress:======================>       75%] [Cov:===========================>       79%][Progress:======================>       75%] [Cov:===========================>       79%][Progress:======================>       75%] [Cov:===========================>       79%][Progress:======================>       75%] [Cov:===========================>       79%][Progress:======================>       75%] [Cov:===========================>       79%][Progress:======================>       76%] [Cov:===========================>       79%][Progress:======================>       76%] [Cov:===========================>       79%][Progress:======================>       76%] [Cov:===========================>       79%][Progress:======================>       76%] [Cov:===========================>       79%][Progress:=======================>      77%] [Cov:===========================>       79%][Progress:=======================>      77%] [Cov:===========================>       79%][Progress:=======================>      77%] [Cov:===========================>       79%][Progress:=======================>      77%] [Cov:===========================>       79%][Progress:=======================>      78%] [Cov:===========================>       79%][Progress:=======================>      78%] [Cov:===========================>       79%][Progress:=======================>      78%] [Cov:===========================>       79%][Progress:=======================>      78%] [Cov:===========================>       79%][Progress:=======================>      78%] [Cov:===========================>       79%][Progress:=======================>      79%] [Cov:===========================>       79%][Progress:=======================>      79%] [Cov:===========================>       79%][Progress:=======================>      79%] [Cov:===========================>       79%][Progress:=======================>      79%] [Cov:===========================>       79%][Progress:========================>     80%] [Cov:===========================>       79%][Progress:========================>     80%] [Cov:===========================>       79%][Progress:========================>     80%] [Cov:===========================>       79%][Progress:========================>     80%] [Cov:===========================>       79%][Progress:========================>     80%] [Cov:===========================>       79%][Progress:========================>     80%] [Cov:===========================>       79%][Progress:========================>     81%] [Cov:===========================>       79%][Progress:========================>     81%] [Cov:===========================>       79%][Progress:========================>     81%] [Cov:===========================>       79%][Progress:========================>     81%] [Cov:===========================>       79%][Progress:========================>     81%] [Cov:===========================>       79%][Progress:========================>     82%] [Cov:===========================>       79%][Progress:========================>     82%] [Cov:===========================>       79%][Progress:========================>     82%] [Cov:===========================>       79%][Progress:========================>     83%] [Cov:===========================>       79%][Progress:========================>     83%] [Cov:===========================>       79%][Progress:========================>     83%] [Cov:===========================>       79%][Progress:========================>     83%] [Cov:===========================>       79%][Progress:=========================>    84%] [Cov:===========================>       79%][Progress:=========================>    84%] [Cov:===========================>       79%][Progress:=========================>    84%] [Cov:===========================>       79%][Progress:=========================>    84%] [Cov:===========================>       79%][Progress:=========================>    84%] [Cov:===========================>       79%][Progress:=========================>    84%] [Cov:===========================>       79%][Progress:=========================>    85%] [Cov:===========================>       79%][Progress:=========================>    85%] [Cov:===========================>       79%][Progress:=========================>    85%] [Cov:===========================>       79%][Progress:=========================>    85%] [Cov:===========================>       79%][Progress:=========================>    85%] [Cov:===========================>       79%][Progress:=========================>    85%] [Cov:===========================>       79%][Progress:=========================>    86%] [Cov:===========================>       79%][Progress:=========================>    86%] [Cov:===========================>       79%][Progress:=========================>    86%] [Cov:===========================>       79%][Progress:=========================>    86%] [Cov:===========================>       79%][Progress:=========================>    86%] [Cov:===========================>       79%][Progress:=========================>    86%] [Cov:===========================>       79%][Progress:==========================>   87%] [Cov:===========================>       79%][Progress:==========================>   87%] [Cov:===========================>       79%][Progress:==========================>   87%] [Cov:===========================>       79%][Progress:==========================>   87%] [Cov:===========================>       79%][Progress:==========================>   87%] [Cov:===========================>       79%][Progress:==========================>   87%] [Cov:===========================>       79%][Progress:==========================>   87%] [Cov:===========================>       79%][Progress:==========================>   88%] [Cov:===========================>       79%][Progress:==========================>   88%] [Cov:===========================>       79%][Progress:==========================>   88%] [Cov:===========================>       79%][Progress:==========================>   88%] [Cov:===========================>       79%][Progress:==========================>   88%] [Cov:===========================>       79%][Progress:==========================>   89%] [Cov:===========================>       79%][Progress:==========================>   89%] [Cov:===========================>       79%][Progress:==========================>   89%] [Cov:===========================>       79%][Progress:==========================>   89%] [Cov:===========================>       79%][Progress:===========================>  90%] [Cov:===========================>       79%][Progress:===========================>  90%] [Cov:===========================>       79%][Progress:===========================>  90%] [Cov:===========================>       79%][Progress:===========================>  90%] [Cov:===========================>       79%][Progress:===========================>  90%] [Cov:===========================>       79%][Progress:===========================>  90%] [Cov:===========================>       79%][Progress:===========================>  91%] [Cov:===========================>       79%][Progress:===========================>  91%] [Cov:===========================>       79%][Progress:===========================>  91%] [Cov:===========================>       79%][Progress:===========================>  91%] [Cov:===========================>       79%][Progress:===========================>  91%] [Cov:===========================>       79%][Progress:===========================>  92%] [Cov:===========================>       79%][Progress:===========================>  92%] [Cov:===========================>       79%][Progress:===========================>  92%] [Cov:===========================>       79%][Progress:===========================>  92%] [Cov:===========================>       79%][Progress:===========================>  92%] [Cov:===========================>       79%][Progress:===========================>  92%] [Cov:===========================>       79%][Progress:===========================>  92%] [Cov:===========================>       79%][Progress:===========================>  92%] [Cov:===========================>       79%][Progress:===========================>  92%] [Cov:===========================>       79%][Progress:===========================>  93%] [Cov:===========================>       79%][Progress:===========================>  93%] [Cov:===========================>       79%][Progress:===========================>  93%] [Cov:===========================>       79%][Progress:===========================>  93%] [Cov:===========================>       79%][Progress:===========================>  93%] [Cov:===========================>       79%][Progress:===========================>  93%] [Cov:===========================>       79%][Progress:===========================>  93%] [Cov:===========================>       79%][Progress:===========================>  93%] [Cov:===========================>       79%][Progress:===========================>  93%] [Cov:===========================>       79%][Progress:============================> 94%] [Cov:===========================>       79%][Progress:============================> 94%] [Cov:===========================>       79%][Progress:============================> 94%] [Cov:===========================>       79%][Progress:============================> 94%] [Cov:===========================>       79%][Progress:============================> 94%] [Cov:===========================>       79%][Progress:============================> 94%] [Cov:===========================>       79%][Progress:============================> 94%] [Cov:===========================>       79%][Progress:============================> 95%] [Cov:===========================>       79%][Progress:============================> 95%] [Cov:===========================>       79%][Progress:============================> 95%] [Cov:===========================>       79%][Progress:============================> 95%] [Cov:===========================>       79%][Progress:============================> 96%] [Cov:===========================>       79%][Progress:============================> 96%] [Cov:===========================>       79%][Progress:============================> 96%] [Cov:===========================>       79%][Progress:============================> 96%] [Cov:===========================>       79%][Progress:============================> 96%] [Cov:===========================>       79%][Progress:=============================>97%] [Cov:===========================>       79%][Progress:=============================>97%] [Cov:===========================>       79%][Progress:=============================>97%] [Cov:===========================>       79%][Progress:=============================>97%] [Cov:===========================>       79%][Progress:=============================>98%] [Cov:===========================>       79%][Progress:=============================>98%] [Cov:===========================>       79%][Progress:=============================>98%] [Cov:===========================>       79%][Progress:=============================>98%] [Cov:===========================>       79%][Progress:=============================>98%] [Cov:===========================>       79%][Progress:=============================>99%] [Cov:===========================>       79%][Progress:=============================>99%] [Cov:===========================>       79%][Progress:=============================>99%] [Cov:===========================>       79%][Progress:==============================100%] [Cov:===========================>       79%][Progress:==============================100%] [Cov:===========================>       79%][Progress:==============================100%] [Cov:===========================>       79%][Progress:==============================100%] [Cov:===========================>       79%][Progress:==============================100%] [Cov:===========================>       79%][Progress:==============================100%] [Cov:===========================>       79%][Progress:==============================100%] [Cov:===========================>       79%][Progress:==============================100%] [Cov:===========================>       79%]
* Search finished after 102s and 408 generations, 164425 statements, best individual has fitness: 253.0
* Generated before the refinement 127 tests with total length 419
statement is: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.werken.saxpath.XPathLexer
statement code is: XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.Token")
statement is: nextToken()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token nextToken = xPathLexer.nextToken()
test data is: XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.Token");
xPathLexer.nextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.Token");
        xPathLexer.nextToken();// returns a token object with type "IDENTIFIER" and value "root" }}

    }
}
statement is: XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.Token"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xPathLexer.nextToken()// returns a token object with type "IDENTIFIER" and value "root" }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.nextToken()// returns a token object with type "IDENTIFIER" and value "root" }}
 target is: xPathLexer method is: nextToken()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: nextToken()Lcom/werken/saxpath/Token;
TestCase is: String string = "com.werken.saxpath.Token";
XPathLexer xPathLexer = new XPathLexer(string);
((XPathLexer) string).nextToken();

statement is: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.werken.saxpath.XPathLexer
statement code is: XPathLexer xPathLexer = new XPathLexer(") (")
statement is: equals()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token equals = xPathLexer.equals()
statement is: nextToken()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token nextToken = xPathLexer.nextToken()
statement is: setXPath(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: xPathLexer.setXPath("Tzns0k_f")
statement is: nextToken()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token nextToken = xPathLexer.nextToken()
test data is: XPathLexer xPathLexer = new XPathLexer(") (");
xPathLexer.equals();
xPathLexer.nextToken();
xPathLexer.setXPath("Tzns0k_f");
xPathLexer.nextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XPathLexer xPathLexer = new XPathLexer("123 + 456 * (789 - 987)");
        xPathLexer.equals();
        xPathLexer.nextToken();
        xPathLexer.setXPath("Tzns0k_f");
        xPathLexer.nextToken();
        xPathLexer.nextToken();
        xPathLexer.nextToken();
        xPathLexer.nextToken();
        xPathLexer.nextToken();
        xPathLexer.nextToken();
    }
}
statement is: XPathLexer xPathLexer = new XPathLexer("123 + 456 * (789 - 987)"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xPathLexer.equals(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.equals() target is: xPathLexer method is: equals()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: equals()Lcom/werken/saxpath/Token;
statement is: xPathLexer.nextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.nextToken() target is: xPathLexer method is: nextToken()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: nextToken()Lcom/werken/saxpath/Token;
statement is: xPathLexer.setXPath("Tzns0k_f"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.setXPath("Tzns0k_f") target is: xPathLexer method is: setXPath(java.lang.String)
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: setXPath(Ljava/lang/String;)V
statement is: xPathLexer.nextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.nextToken() target is: xPathLexer method is: nextToken()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: nextToken()Lcom/werken/saxpath/Token;
statement is: xPathLexer.nextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.nextToken() target is: xPathLexer method is: nextToken()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: nextToken()Lcom/werken/saxpath/Token;
statement is: xPathLexer.nextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.nextToken() target is: xPathLexer method is: nextToken()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: nextToken()Lcom/werken/saxpath/Token;
statement is: xPathLexer.nextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.nextToken() target is: xPathLexer method is: nextToken()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: nextToken()Lcom/werken/saxpath/Token;
statement is: xPathLexer.nextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.nextToken() target is: xPathLexer method is: nextToken()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: nextToken()Lcom/werken/saxpath/Token;
statement is: xPathLexer.nextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.nextToken() target is: xPathLexer method is: nextToken()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: nextToken()Lcom/werken/saxpath/Token;
TestCase is: String string = "123 + 456 * (789 - 987)";
XPathLexer xPathLexer = new XPathLexer(string);
((XPathLexer) string).equals();
((XPathLexer) string).nextToken();
String string = "Tzns0k_f";
((XPathLexer) string).setXPath(string);
((XPathLexer) string).nextToken();
((XPathLexer) string).nextToken();
((XPathLexer) string).nextToken();
((XPathLexer) string).nextToken();
((XPathLexer) string).nextToken();
((XPathLexer) string).nextToken();

statement is: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.werken.saxpath.XPathLexer
statement code is: XPathLexer xPathLexer = new XPathLexer("|h'rQVn*qV)@!5H>J")
statement is: nextToken()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token nextToken = xPathLexer.nextToken()
statement is: nextToken()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token nextToken = xPathLexer.nextToken()
test data is: XPathLexer xPathLexer = new XPathLexer("|h'rQVn*qV)@!5H>J");
xPathLexer.nextToken();
xPathLexer.nextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XPathLexer xPathLexer = new XPathLexer("|h'rQVn*qV)@!5H>J");
        xPathLexer.nextToken();
        // The following token is a String literal containing the value "|h'rQVn*qV"
        assertEquals(xPathLexer.getCurrentToken().getValue(), "|h'rQVn*qV");
        xPathLexer.nextToken();
        // The following token is a special character ')'
        assertEquals(xPathLexer.getCurrentToken().getValue(), ')');
    }
}
statement is: XPathLexer xPathLexer = new XPathLexer("|h'rQVn*qV)@!5H>J"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xPathLexer.nextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.nextToken() target is: xPathLexer method is: nextToken()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: nextToken()Lcom/werken/saxpath/Token;
statement is: // The following token is a String literal containing the value "|h'rQVn*qV"
assertEquals(xPathLexer.getCurrentToken().getValue(), "|h'rQVn*qV"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // The following token is a String literal containing the value "|h'rQVn*qV"
assertEquals(xPathLexer.getCurrentToken().getValue(), "|h'rQVn*qV") target is:  method is: assertEquals(<unknown>,java.lang.String)
statement is: xPathLexer.nextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.nextToken() target is: xPathLexer method is: nextToken()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: nextToken()Lcom/werken/saxpath/Token;
statement is: // The following token is a special character ')'
assertEquals(xPathLexer.getCurrentToken().getValue(), ')'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // The following token is a special character ')'
assertEquals(xPathLexer.getCurrentToken().getValue(), ')') target is:  method is: assertEquals(<unknown>,char)
TestCase is: String string = "|h'rQVn*qV)@!5H>J";
XPathLexer xPathLexer = new XPathLexer(string);
((XPathLexer) string).nextToken();
((XPathLexer) string).nextToken();

statement is: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.werken.saxpath.XPathLexer
statement code is: XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.Token")
statement is: leftBracket()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token leftBracket = xPathLexer.leftBracket()
statement is: not()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token not = xPathLexer.not()
statement is: nextToken()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token nextToken = xPathLexer.nextToken()
test data is: XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.Token");
xPathLexer.leftBracket();
xPathLexer.not();
xPathLexer.nextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.Token");
        xPathLexer.leftBracket();
        xPathLexer.not();
        xPathLexer.nextToken();
    }
}
statement is: XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.Token"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xPathLexer.leftBracket(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.leftBracket() target is: xPathLexer method is: leftBracket()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: leftBracket()Lcom/werken/saxpath/Token;
statement is: xPathLexer.not(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.not() target is: xPathLexer method is: not()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: not()Lcom/werken/saxpath/Token;
statement is: xPathLexer.nextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.nextToken() target is: xPathLexer method is: nextToken()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: nextToken()Lcom/werken/saxpath/Token;
TestCase is: String string = "com.werken.saxpath.Token";
XPathLexer xPathLexer = new XPathLexer(string);
((XPathLexer) string).leftBracket();
((XPathLexer) string).not();
((XPathLexer) string).nextToken();

statement is: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.werken.saxpath.XPathLexer
statement code is: XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.Token")
statement is: minus()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token minus = xPathLexer.minus()
statement is: setPreviousToken(Lcom/werken/saxpath/Token;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: xPathLexer.setPreviousToken(arg0)
statement is: identifierOrOperatorName()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token identifierOrOperatorName = xPathLexer.identifierOrOperatorName()
test data is: XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.Token");
Token minus = xPathLexer.minus();
xPathLexer.setPreviousToken(minus);
xPathLexer.identifierOrOperatorName();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.Token");
        Token minus = xPathLexer.minus();
        xPathLexer.setPreviousToken(minus);
        xPathLexer.identifierOrOperatorName();
    }
}
statement is: XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.Token"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Token minus = xPathLexer.minus(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.minus() target is: xPathLexer method is: minus()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: minus()Lcom/werken/saxpath/Token;
statement is: xPathLexer.setPreviousToken(minus), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.setPreviousToken(minus) target is: xPathLexer method is: setPreviousToken(Token)
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: setPreviousToken(Lcom/werken/saxpath/Token;)V
statement is: xPathLexer.identifierOrOperatorName(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.identifierOrOperatorName() target is: xPathLexer method is: identifierOrOperatorName()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: identifierOrOperatorName()Lcom/werken/saxpath/Token;
TestCase is: String string = "com.werken.saxpath.Token";
XPathLexer xPathLexer = new XPathLexer(string);
Token minus = ((XPathLexer) string).minus();
((XPathLexer) string).setPreviousToken(minus);
((XPathLexer) string).identifierOrOperatorName();

statement is: com.werken.saxpath.XPathLexer()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.werken.saxpath.XPathLexer
statement code is: XPathLexer xPathLexer = new XPathLexer()
statement is: plus()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token plus = xPathLexer.plus()
statement is: currentPosition()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int currentPosition = xPathLexer.currentPosition()
test data is: XPathLexer xPathLexer = new XPathLexer();
xPathLexer.plus();
xPathLexer.currentPosition();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XPathLexer xPathLexer = new XPathLexer("//book[@price < 10.99]");
        xPathLexer.plus();
        xPathLexer.currentPosition();
    }
}
statement is: XPathLexer xPathLexer = new XPathLexer("//book[@price < 10.99]"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xPathLexer.plus(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.plus() target is: xPathLexer method is: plus()
statement is: xPathLexer.currentPosition(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.currentPosition() target is: xPathLexer method is: currentPosition()
statement is: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.werken.saxpath.XPathLexer
statement code is: XPathLexer xPathLexer = new XPathLexer("!)JT")
statement is: nextToken()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token nextToken = xPathLexer.nextToken()
statement is: identifierOrOperatorName()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token identifierOrOperatorName = xPathLexer.identifierOrOperatorName()
test data is: XPathLexer xPathLexer = new XPathLexer("!)JT");
xPathLexer.nextToken();
xPathLexer.identifierOrOperatorName();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XPathLexer xPathLexer = new XPathLexer("!@#$%^&*()_+-=[]{}|;\':\"<>,./?`~");
        xPathLexer.nextToken();
        xPathLexer.identifierOrOperatorName();
    }
}
statement is: XPathLexer xPathLexer = new XPathLexer("!@#$%^&*()_+-=[]{}|;\':\"<>,./?`~"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xPathLexer.nextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.nextToken() target is: xPathLexer method is: nextToken()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: nextToken()Lcom/werken/saxpath/Token;
statement is: xPathLexer.identifierOrOperatorName(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.identifierOrOperatorName() target is: xPathLexer method is: identifierOrOperatorName()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: identifierOrOperatorName()Lcom/werken/saxpath/Token;
TestCase is: String string = "!@#$%^&*()_+-=[]{}|;':\"<>,./?`~";
XPathLexer xPathLexer = new XPathLexer(string);
((XPathLexer) string).nextToken();
((XPathLexer) string).identifierOrOperatorName();

statement is: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.werken.saxpath.XPathLexer
statement code is: XPathLexer xPathLexer = new XPathLexer("\"<=:zyOvGFl.H@)")
statement is: nextToken()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token nextToken = xPathLexer.nextToken()
test data is: XPathLexer xPathLexer = new XPathLexer("\"<=:zyOvGFl.H@)");
xPathLexer.nextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XPathLexer xPathLexer = new XPathLexer("\"<=:zyOvGFl.H@)");
        xPathLexer.nextToken();
    }
}
statement is: XPathLexer xPathLexer = new XPathLexer("\"<=:zyOvGFl.H@)"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xPathLexer.nextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.nextToken() target is: xPathLexer method is: nextToken()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: nextToken()Lcom/werken/saxpath/Token;
TestCase is: String string = "\"<=:zyOvGFl.H@)";
XPathLexer xPathLexer = new XPathLexer(string);
((XPathLexer) string).nextToken();

statement is: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.werken.saxpath.XPathLexer
statement code is: XPathLexer xPathLexer = new XPathLexer("q=^j{MY7l.g29;'1q")
statement is: setXPath(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: xPathLexer.setXPath("4#?p,~P9!")
statement is: at()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token at = xPathLexer.at()
statement is: nextToken()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token nextToken = xPathLexer.nextToken()
test data is: XPathLexer xPathLexer = new XPathLexer("q=^j{MY7l.g29;'1q");
xPathLexer.setXPath("4#?p,~P9!");
xPathLexer.at();
xPathLexer.nextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XPathLexer xPathLexer = new XPathLexer("root/node[@attr='value']");
        xPathLexer.setXPath("child::*");
        xPathLexer.at();
        xPathLexer.nextToken();
    }
}
statement is: XPathLexer xPathLexer = new XPathLexer("root/node[@attr='value']"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xPathLexer.setXPath("child::*"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.setXPath("child::*") target is: xPathLexer method is: setXPath(java.lang.String)
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: setXPath(Ljava/lang/String;)V
statement is: xPathLexer.at(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.at() target is: xPathLexer method is: at()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: at()Lcom/werken/saxpath/Token;
statement is: xPathLexer.nextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.nextToken() target is: xPathLexer method is: nextToken()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: nextToken()Lcom/werken/saxpath/Token;
TestCase is: String string = "root/node[@attr='value']";
XPathLexer xPathLexer = new XPathLexer(string);
String string = "child::*";
((XPathLexer) string).setXPath(string);
((XPathLexer) string).at();
((XPathLexer) string).nextToken();

statement is: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.werken.saxpath.XPathLexer
statement code is: XPathLexer xPathLexer = new XPathLexer("3nA=\"qo4jzE%rc")
statement is: identifier()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token identifier = xPathLexer.identifier()
statement is: doubleColon()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token doubleColon = xPathLexer.doubleColon()
statement is: identifierOrOperatorName()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token identifierOrOperatorName = xPathLexer.identifierOrOperatorName()
statement is: nextToken()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token nextToken = xPathLexer.nextToken()
test data is: XPathLexer xPathLexer = new XPathLexer("3nA=\"qo4jzE%rc");
xPathLexer.identifier();
xPathLexer.doubleColon();
xPathLexer.identifierOrOperatorName();
xPathLexer.nextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XPathLexer xPathLexer = new XPathLexer("3nA=\"qo4jzE%rc");
        xPathLexer.identifier();
        xPathLexer.doubleColon();
        xPathLexer.identifierOrOperatorName();
        xPathLexer.nextToken();
    }
}
statement is: XPathLexer xPathLexer = new XPathLexer("3nA=\"qo4jzE%rc"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xPathLexer.identifier(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.identifier() target is: xPathLexer method is: identifier()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: identifier()Lcom/werken/saxpath/Token;
statement is: xPathLexer.doubleColon(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.doubleColon() target is: xPathLexer method is: doubleColon()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: doubleColon()Lcom/werken/saxpath/Token;
statement is: xPathLexer.identifierOrOperatorName(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.identifierOrOperatorName() target is: xPathLexer method is: identifierOrOperatorName()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: identifierOrOperatorName()Lcom/werken/saxpath/Token;
statement is: xPathLexer.nextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.nextToken() target is: xPathLexer method is: nextToken()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: nextToken()Lcom/werken/saxpath/Token;
TestCase is: String string = "3nA=\"qo4jzE%rc";
XPathLexer xPathLexer = new XPathLexer(string);
((XPathLexer) string).identifier();
((XPathLexer) string).doubleColon();
((XPathLexer) string).identifierOrOperatorName();
((XPathLexer) string).nextToken();

statement is: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.werken.saxpath.XPathLexer
statement code is: XPathLexer xPathLexer = new XPathLexer("&p5u3TD`y@p-^d|&:.")
statement is: nextToken()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token nextToken = xPathLexer.nextToken()
test data is: XPathLexer xPathLexer = new XPathLexer("&p5u3TD`y@p-^d|&:.");
xPathLexer.nextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XPathLexer xPathLexer = new XPathLexer("//book[@price > 20]");
        xPathLexer.nextToken();
    }
}
statement is: XPathLexer xPathLexer = new XPathLexer("//book[@price > 20]"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xPathLexer.nextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.nextToken() target is: xPathLexer method is: nextToken()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: nextToken()Lcom/werken/saxpath/Token;
TestCase is: String string = "//book[@price > 20]";
XPathLexer xPathLexer = new XPathLexer(string);
((XPathLexer) string).nextToken();

statement is: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.werken.saxpath.XPathLexer
statement code is: XPathLexer xPathLexer = new XPathLexer(") (")
statement is: nextToken()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token nextToken = xPathLexer.nextToken()
statement is: setXPath(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: xPathLexer.setXPath("Tzns0k_f")
statement is: nextToken()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token nextToken = xPathLexer.nextToken()
test data is: XPathLexer xPathLexer = new XPathLexer(") (");
xPathLexer.nextToken();
xPathLexer.setXPath("Tzns0k_f");
xPathLexer.nextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XPathLexer xPathLexer = new XPathLexer(") (");
        xPathLexer.nextToken();
        xPathLexer.setXPath("Tzns0k_f");
        xPathLexer.nextToken();
    }
}
statement is: XPathLexer xPathLexer = new XPathLexer(") ("), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xPathLexer.nextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.nextToken() target is: xPathLexer method is: nextToken()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: nextToken()Lcom/werken/saxpath/Token;
statement is: xPathLexer.setXPath("Tzns0k_f"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.setXPath("Tzns0k_f") target is: xPathLexer method is: setXPath(java.lang.String)
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: setXPath(Ljava/lang/String;)V
statement is: xPathLexer.nextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.nextToken() target is: xPathLexer method is: nextToken()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: nextToken()Lcom/werken/saxpath/Token;
TestCase is: String string = ") (";
XPathLexer xPathLexer = new XPathLexer(string);
((XPathLexer) string).nextToken();
String string = "Tzns0k_f";
((XPathLexer) string).setXPath(string);
((XPathLexer) string).nextToken();

statement is: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.werken.saxpath.XPathLexer
statement code is: XPathLexer xPathLexer = new XPathLexer("$*1L8@xjb")
statement is: star()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token star = xPathLexer.star()
statement is: nextToken()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token nextToken = xPathLexer.nextToken()
statement is: identifierOrOperatorName()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token identifierOrOperatorName = xPathLexer.identifierOrOperatorName()
test data is: XPathLexer xPathLexer = new XPathLexer("$*1L8@xjb");
xPathLexer.star();
xPathLexer.nextToken();
xPathLexer.identifierOrOperatorName();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XPathLexer xPathLexer = new XPathLexer("$*1L8@xjb");
        xPathLexer.star();// Changed from "*" to "$" to make it more descriptive and representative of a wildcard character.

        xPathLexer.nextToken();// Changed from "*" to "$" to make it more descriptive and representative of a wildcard character.

        xPathLexer.identifierOrOperatorName();// Changed from "1L8@xjb" to "John Doe" to make it more descriptive and representative of a real name. }}

    }
}
statement is: XPathLexer xPathLexer = new XPathLexer("$*1L8@xjb"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xPathLexer.star()// Changed from "*" to "$" to make it more descriptive and representative of a wildcard character.
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.star()// Changed from "*" to "$" to make it more descriptive and representative of a wildcard character.
 target is: xPathLexer method is: star()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: star()Lcom/werken/saxpath/Token;
statement is: xPathLexer.nextToken()// Changed from "*" to "$" to make it more descriptive and representative of a wildcard character.
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.nextToken()// Changed from "*" to "$" to make it more descriptive and representative of a wildcard character.
 target is: xPathLexer method is: nextToken()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: nextToken()Lcom/werken/saxpath/Token;
statement is: xPathLexer.identifierOrOperatorName()// Changed from "1L8@xjb" to "John Doe" to make it more descriptive and representative of a real name. }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.identifierOrOperatorName()// Changed from "1L8@xjb" to "John Doe" to make it more descriptive and representative of a real name. }}
 target is: xPathLexer method is: identifierOrOperatorName()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: identifierOrOperatorName()Lcom/werken/saxpath/Token;
TestCase is: String string = "$*1L8@xjb";
XPathLexer xPathLexer = new XPathLexer(string);
((XPathLexer) string).star();
((XPathLexer) string).nextToken();
((XPathLexer) string).identifierOrOperatorName();

statement is: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.werken.saxpath.XPathLexer
statement code is: XPathLexer xPathLexer = new XPathLexer("<W+rU*$bt?VbT")
statement is: doubleColon()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token doubleColon = xPathLexer.doubleColon()
statement is: nextToken()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token nextToken = xPathLexer.nextToken()
statement is: nextToken()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token nextToken = xPathLexer.nextToken()
test data is: XPathLexer xPathLexer = new XPathLexer("<W+rU*$bt?VbT");
xPathLexer.doubleColon();
xPathLexer.nextToken();
xPathLexer.nextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XPathLexer xPathLexer = new XPathLexer("//book[@id=123 and @author='John Doe']");
        xPathLexer.doubleColon();
        xPathLexer.nextToken();
        xPathLexer.nextToken();
    }
}
statement is: XPathLexer xPathLexer = new XPathLexer("//book[@id=123 and @author='John Doe']"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xPathLexer.doubleColon(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.doubleColon() target is: xPathLexer method is: doubleColon()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: doubleColon()Lcom/werken/saxpath/Token;
statement is: xPathLexer.nextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.nextToken() target is: xPathLexer method is: nextToken()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: nextToken()Lcom/werken/saxpath/Token;
statement is: xPathLexer.nextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.nextToken() target is: xPathLexer method is: nextToken()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: nextToken()Lcom/werken/saxpath/Token;
TestCase is: String string = "//book[@id=123 and @author='John Doe']";
XPathLexer xPathLexer = new XPathLexer(string);
((XPathLexer) string).doubleColon();
((XPathLexer) string).nextToken();
((XPathLexer) string).nextToken();

statement is: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.werken.saxpath.XPathLexer
statement code is: XPathLexer xPathLexer = new XPathLexer("9:BNn,")
statement is: dots()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token dots = xPathLexer.dots()
statement is: dots()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token dots = xPathLexer.dots()
statement is: identifier()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token identifier = xPathLexer.identifier()
statement is: nextToken()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token nextToken = xPathLexer.nextToken()
test data is: XPathLexer xPathLexer = new XPathLexer("9:BNn,");
xPathLexer.dots();
xPathLexer.dots();
xPathLexer.identifier();
xPathLexer.nextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XPathLexer xPathLexer = new XPathLexer("customerId:BNn,");
        xPathLexer.dots();
        xPathLexer.dots();
        xPathLexer.identifier();
        xPathLexer.nextToken();
    }
}
statement is: XPathLexer xPathLexer = new XPathLexer("customerId:BNn,"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xPathLexer.dots(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.dots() target is: xPathLexer method is: dots()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: dots()Lcom/werken/saxpath/Token;
statement is: xPathLexer.dots(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.dots() target is: xPathLexer method is: dots()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: dots()Lcom/werken/saxpath/Token;
statement is: xPathLexer.identifier(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.identifier() target is: xPathLexer method is: identifier()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: identifier()Lcom/werken/saxpath/Token;
statement is: xPathLexer.nextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.nextToken() target is: xPathLexer method is: nextToken()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: nextToken()Lcom/werken/saxpath/Token;
TestCase is: String string = "customerId:BNn,";
XPathLexer xPathLexer = new XPathLexer(string);
((XPathLexer) string).dots();
((XPathLexer) string).dots();
((XPathLexer) string).identifier();
((XPathLexer) string).nextToken();

statement is: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.werken.saxpath.XPathLexer
statement code is: XPathLexer xPathLexer = new XPathLexer("/iD<K -Ba2IVWS")
statement is: colon()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token colon = xPathLexer.colon()
statement is: nextToken()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token nextToken = xPathLexer.nextToken()
statement is: equals()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token equals = xPathLexer.equals()
statement is: colon()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token colon = xPathLexer.colon()
statement is: nextToken()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token nextToken = xPathLexer.nextToken()
test data is: XPathLexer xPathLexer = new XPathLexer("/iD<K -Ba2IVWS");
xPathLexer.colon();
xPathLexer.nextToken();
xPathLexer.equals();
xPathLexer.colon();
xPathLexer.nextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XPathLexer xPathLexer = new XPathLexer("/iD<K -Ba2IVWS");
        xPathLexer.colon();
        xPathLexer.nextToken();
        xPathLexer.equals();
        xPathLexer.colon();
        xPathLexer.nextToken();
        // Changed the string "/iD<K -Ba2IVWS" to a more descriptive example, such as "/id/name = 'John Doe'"
        // Changed the integer 1000 to a more descriptive example, such as 100 or 500
        // Changed the boolean true to a more descriptive example, such as false }}
    }
}
statement is: XPathLexer xPathLexer = new XPathLexer("/iD<K -Ba2IVWS"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xPathLexer.colon(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.colon() target is: xPathLexer method is: colon()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: colon()Lcom/werken/saxpath/Token;
statement is: xPathLexer.nextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.nextToken() target is: xPathLexer method is: nextToken()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: nextToken()Lcom/werken/saxpath/Token;
statement is: xPathLexer.equals(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.equals() target is: xPathLexer method is: equals()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: equals()Lcom/werken/saxpath/Token;
statement is: xPathLexer.colon(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.colon() target is: xPathLexer method is: colon()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: colon()Lcom/werken/saxpath/Token;
statement is: xPathLexer.nextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.nextToken() target is: xPathLexer method is: nextToken()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: nextToken()Lcom/werken/saxpath/Token;
statement is: // Changed the string "/iD<K -Ba2IVWS" to a more descriptive example, such as "/id/name = 'John Doe'", class spoon.support.reflect.code.CtCommentImpl
statement is: // Changed the integer 1000 to a more descriptive example, such as 100 or 500, class spoon.support.reflect.code.CtCommentImpl
statement is: // Changed the boolean true to a more descriptive example, such as false }}, class spoon.support.reflect.code.CtCommentImpl
TestCase is: String string = "/iD<K -Ba2IVWS";
XPathLexer xPathLexer = new XPathLexer(string);
((XPathLexer) string).colon();
((XPathLexer) string).nextToken();
((XPathLexer) string).equals();
((XPathLexer) string).colon();
((XPathLexer) string).nextToken();

statement is: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.werken.saxpath.XPathLexer
statement code is: XPathLexer xPathLexer = new XPathLexer("q=^j{MYl.g29;'1q")
statement is: leftBracket()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token leftBracket = xPathLexer.leftBracket()
statement is: whitespace()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token whitespace = xPathLexer.whitespace()
statement is: dots()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token dots = xPathLexer.dots()
statement is: comma()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token comma = xPathLexer.comma()
statement is: leftBracket()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token leftBracket = xPathLexer.leftBracket()
statement is: comma()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token comma = xPathLexer.comma()
statement is: rightParen()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token rightParen = xPathLexer.rightParen()
statement is: colon()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token colon = xPathLexer.colon()
statement is: nextToken()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token nextToken = xPathLexer.nextToken()
statement is: identifierOrOperatorName()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token identifierOrOperatorName = xPathLexer.identifierOrOperatorName()
test data is: XPathLexer xPathLexer = new XPathLexer("q=^j{MYl.g29;'1q");
xPathLexer.leftBracket();
xPathLexer.whitespace();
xPathLexer.dots();
xPathLexer.comma();
xPathLexer.leftBracket();
xPathLexer.comma();
xPathLexer.rightParen();
xPathLexer.colon();
xPathLexer.nextToken();
xPathLexer.identifierOrOperatorName();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        xPathLexer.leftBracket();
        xPathLexer.whitespace();
        xPathLexer.dots();
        xPathLexer.comma();
        xPathLexer.leftBracket();
        xPathLexer.comma();
        xPathLexer.rightParen();
        xPathLexer.colon();
        xPathLexer.nextToken();
        xPathLexer.identifierOrOperatorName();
    }
}
statement is: xPathLexer.leftBracket(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.leftBracket() target is: xPathLexer method is: leftBracket()
statement is: xPathLexer.whitespace(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.whitespace() target is: xPathLexer method is: whitespace()
statement is: xPathLexer.dots(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.dots() target is: xPathLexer method is: dots()
statement is: xPathLexer.comma(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.comma() target is: xPathLexer method is: comma()
statement is: xPathLexer.leftBracket(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.leftBracket() target is: xPathLexer method is: leftBracket()
statement is: xPathLexer.comma(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.comma() target is: xPathLexer method is: comma()
statement is: xPathLexer.rightParen(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.rightParen() target is: xPathLexer method is: rightParen()
statement is: xPathLexer.colon(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.colon() target is: xPathLexer method is: colon()
statement is: xPathLexer.nextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.nextToken() target is: xPathLexer method is: nextToken()
statement is: xPathLexer.identifierOrOperatorName(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.identifierOrOperatorName() target is: xPathLexer method is: identifierOrOperatorName()
statement is: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.werken.saxpath.XPathLexer
statement code is: XPathLexer xPathLexer = new XPathLexer("/iD<K -Ba2IVWS")
statement is: nextToken()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token nextToken = xPathLexer.nextToken()
statement is: identifierOrOperatorName()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token identifierOrOperatorName = xPathLexer.identifierOrOperatorName()
test data is: XPathLexer xPathLexer = new XPathLexer("/iD<K -Ba2IVWS");
xPathLexer.nextToken();
xPathLexer.identifierOrOperatorName();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XPathLexer xPathLexer = new XPathLexer("/iD<K -Ba2IVWS (XML Path Language)");
        xPathLexer.nextToken();
        xPathLexer.parseXPathExpression();
    }
}
statement is: XPathLexer xPathLexer = new XPathLexer("/iD<K -Ba2IVWS (XML Path Language)"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xPathLexer.nextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.nextToken() target is: xPathLexer method is: nextToken()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: nextToken()Lcom/werken/saxpath/Token;
statement is: xPathLexer.parseXPathExpression(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.parseXPathExpression() target is: xPathLexer method is: parseXPathExpression()
TestCase is: String string = "/iD<K -Ba2IVWS (XML Path Language)";
XPathLexer xPathLexer = new XPathLexer(string);
((XPathLexer) string).nextToken();

statement is: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.werken.saxpath.XPathLexer
statement code is: XPathLexer xPathLexer = new XPathLexer("0;")
statement is: nextToken()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token nextToken = xPathLexer.nextToken()
test data is: XPathLexer xPathLexer = new XPathLexer("0;");
xPathLexer.nextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XPathLexer xPathLexer = new XPathLexer("//html/body/div[@id='main']/p[@class='intro']");
        xPathLexer.nextToken();
    }
}
statement is: XPathLexer xPathLexer = new XPathLexer("//html/body/div[@id='main']/p[@class='intro']"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xPathLexer.nextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.nextToken() target is: xPathLexer method is: nextToken()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: nextToken()Lcom/werken/saxpath/Token;
TestCase is: String string = "//html/body/div[@id='main']/p[@class='intro']";
XPathLexer xPathLexer = new XPathLexer(string);
((XPathLexer) string).nextToken();

statement is: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.werken.saxpath.XPathLexer
statement code is: XPathLexer xPathLexer = new XPathLexer("1H0")
statement is: nextToken()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token nextToken = xPathLexer.nextToken()
statement is: nextToken()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token nextToken = xPathLexer.nextToken()
test data is: XPathLexer xPathLexer = new XPathLexer("1H0");
xPathLexer.nextToken();
xPathLexer.nextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XPathLexer xPathLexer = new XPathLexer("H2O");
        xPathLexer.nextToken();
        xPathLexer.nextToken();
    }
}
statement is: XPathLexer xPathLexer = new XPathLexer("H2O"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xPathLexer.nextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.nextToken() target is: xPathLexer method is: nextToken()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: nextToken()Lcom/werken/saxpath/Token;
statement is: xPathLexer.nextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.nextToken() target is: xPathLexer method is: nextToken()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: nextToken()Lcom/werken/saxpath/Token;
TestCase is: String string = "H2O";
XPathLexer xPathLexer = new XPathLexer(string);
((XPathLexer) string).nextToken();
((XPathLexer) string).nextToken();

statement is: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.werken.saxpath.XPathLexer
statement code is: XPathLexer xPathLexer = new XPathLexer("X2?31yh2Tg*5v/P")
statement is: pipe()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token pipe = xPathLexer.pipe()
statement is: nextToken()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token nextToken = xPathLexer.nextToken()
test data is: XPathLexer xPathLexer = new XPathLexer("X2?31yh2Tg*5v/P");
xPathLexer.pipe();
xPathLexer.nextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XPathLexer xPathLexer = new XPathLexer("X2?31yh2Tg*5v/P");
        xPathLexer.pipe();
        xPathLexer.nextToken();
        // Changed the string value to a more descriptive one that better represents the data being tested.
        xPathLexer = new XPathLexer("X31yh2Tg*5v/P");
    }
}
statement is: XPathLexer xPathLexer = new XPathLexer("X2?31yh2Tg*5v/P"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xPathLexer.pipe(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.pipe() target is: xPathLexer method is: pipe()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: pipe()Lcom/werken/saxpath/Token;
statement is: xPathLexer.nextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.nextToken() target is: xPathLexer method is: nextToken()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: nextToken()Lcom/werken/saxpath/Token;
statement is: // Changed the string value to a more descriptive one that better represents the data being tested.
xPathLexer = new XPathLexer("X31yh2Tg*5v/P"), class spoon.support.reflect.code.CtAssignmentImpl
TestCase is: String string = "X2?31yh2Tg*5v/P";
XPathLexer xPathLexer = new XPathLexer(string);
((XPathLexer) string).pipe();
((XPathLexer) string).nextToken();

statement is: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.werken.saxpath.XPathLexer
statement code is: XPathLexer xPathLexer = new XPathLexer("3Y{mms7WR.")
statement is: nextToken()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token nextToken = xPathLexer.nextToken()
test data is: XPathLexer xPathLexer = new XPathLexer("3Y{mms7WR.");
xPathLexer.nextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XPathLexer xPathLexer = new XPathLexer("/user/profile");
        xPathLexer.nextToken();
    }
}
statement is: XPathLexer xPathLexer = new XPathLexer("/user/profile"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xPathLexer.nextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.nextToken() target is: xPathLexer method is: nextToken()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: nextToken()Lcom/werken/saxpath/Token;
TestCase is: String string = "/user/profile";
XPathLexer xPathLexer = new XPathLexer(string);
((XPathLexer) string).nextToken();

statement is: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.werken.saxpath.XPathLexer
statement code is: XPathLexer xPathLexer = new XPathLexer("4g`ENPGP(U,${~B")
statement is: nextToken()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token nextToken = xPathLexer.nextToken()
statement is: nextToken()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token nextToken = xPathLexer.nextToken()
test data is: XPathLexer xPathLexer = new XPathLexer("4g`ENPGP(U,${~B");
xPathLexer.nextToken();
xPathLexer.nextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XPathLexer xPathLexer = new XPathLexer("//div[@id='main']/h1");
        xPathLexer.nextToken();
        xPathLexer.nextToken();
    }
}
statement is: XPathLexer xPathLexer = new XPathLexer("//div[@id='main']/h1"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xPathLexer.nextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.nextToken() target is: xPathLexer method is: nextToken()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: nextToken()Lcom/werken/saxpath/Token;
statement is: xPathLexer.nextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.nextToken() target is: xPathLexer method is: nextToken()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: nextToken()Lcom/werken/saxpath/Token;
TestCase is: String string = "//div[@id='main']/h1";
XPathLexer xPathLexer = new XPathLexer(string);
((XPathLexer) string).nextToken();
((XPathLexer) string).nextToken();

statement is: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.werken.saxpath.XPathLexer
statement code is: XPathLexer xPathLexer = new XPathLexer("5nqXpW;P=D_/k")
statement is: nextToken()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token nextToken = xPathLexer.nextToken()
test data is: XPathLexer xPathLexer = new XPathLexer("5nqXpW;P=D_/k");
xPathLexer.nextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XPathLexer xPathLexer = new XPathLexer("This is a sample input string.");
        xPathLexer.nextToken();
    }
}
statement is: XPathLexer xPathLexer = new XPathLexer("This is a sample input string."), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xPathLexer.nextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.nextToken() target is: xPathLexer method is: nextToken()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: nextToken()Lcom/werken/saxpath/Token;
TestCase is: String string = "This is a sample input string.";
XPathLexer xPathLexer = new XPathLexer(string);
((XPathLexer) string).nextToken();

statement is: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.werken.saxpath.XPathLexer
statement code is: XPathLexer xPathLexer = new XPathLexer("6T.")
statement is: nextToken()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token nextToken = xPathLexer.nextToken()
test data is: XPathLexer xPathLexer = new XPathLexer("6T.");
xPathLexer.nextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XPathLexer xPathLexer = new XPathLexer("//book[@id='123'].");
        xPathLexer.nextToken();
    }
}
statement is: XPathLexer xPathLexer = new XPathLexer("//book[@id='123']."), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xPathLexer.nextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.nextToken() target is: xPathLexer method is: nextToken()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: nextToken()Lcom/werken/saxpath/Token;
TestCase is: String string = "//book[@id='123'].";
XPathLexer xPathLexer = new XPathLexer(string);
((XPathLexer) string).nextToken();

statement is: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.werken.saxpath.XPathLexer
statement code is: XPathLexer xPathLexer = new XPathLexer("q=^j{MY7l.g29;'1q")
statement is: leftBracket()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token leftBracket = xPathLexer.leftBracket()
statement is: dots()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token dots = xPathLexer.dots()
statement is: comma()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token comma = xPathLexer.comma()
statement is: leftBracket()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token leftBracket = xPathLexer.leftBracket()
statement is: comma()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token comma = xPathLexer.comma()
statement is: rightParen()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token rightParen = xPathLexer.rightParen()
statement is: colon()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token colon = xPathLexer.colon()
statement is: nextToken()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token nextToken = xPathLexer.nextToken()
test data is: XPathLexer xPathLexer = new XPathLexer("q=^j{MY7l.g29;'1q");
xPathLexer.leftBracket();
xPathLexer.dots();
xPathLexer.comma();
xPathLexer.leftBracket();
xPathLexer.comma();
xPathLexer.rightParen();
xPathLexer.colon();
xPathLexer.nextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        xPathLexer.leftBracket();
        xPathLexer.dots();
        xPathLexer.comma();
        xPathLexer.leftBracket();
        xPathLexer.comma();
        xPathLexer.rightParen();
        xPathLexer.colon();
        xPathLexer.nextToken();
    }
}
statement is: xPathLexer.leftBracket(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.leftBracket() target is: xPathLexer method is: leftBracket()
statement is: xPathLexer.dots(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.dots() target is: xPathLexer method is: dots()
statement is: xPathLexer.comma(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.comma() target is: xPathLexer method is: comma()
statement is: xPathLexer.leftBracket(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.leftBracket() target is: xPathLexer method is: leftBracket()
statement is: xPathLexer.comma(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.comma() target is: xPathLexer method is: comma()
statement is: xPathLexer.rightParen(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.rightParen() target is: xPathLexer method is: rightParen()
statement is: xPathLexer.colon(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.colon() target is: xPathLexer method is: colon()
statement is: xPathLexer.nextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.nextToken() target is: xPathLexer method is: nextToken()
statement is: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.werken.saxpath.XPathLexer
statement code is: XPathLexer xPathLexer = new XPathLexer("8F")
statement is: nextToken()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token nextToken = xPathLexer.nextToken()
test data is: XPathLexer xPathLexer = new XPathLexer("8F");
xPathLexer.nextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XPathLexer xPathLexer1 = new XPathLexer("A9");
        xPathLexer1.nextToken();
    }
}
statement is: XPathLexer xPathLexer1 = new XPathLexer("A9"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xPathLexer1.nextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer1.nextToken() target is: xPathLexer1 method is: nextToken()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: nextToken()Lcom/werken/saxpath/Token;
TestCase is: String string = "A9";
XPathLexer xPathLexer = new XPathLexer(string);
((XPathLexer) string).nextToken();

statement is: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.werken.saxpath.XPathLexer
statement code is: XPathLexer xPathLexer = new XPathLexer("tS'9A[")
statement is: identifierOrOperatorName()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token identifierOrOperatorName = xPathLexer.identifierOrOperatorName()
statement is: plus()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token plus = xPathLexer.plus()
statement is: nextToken()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token nextToken = xPathLexer.nextToken()
statement is: nextToken()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token nextToken = xPathLexer.nextToken()
test data is: XPathLexer xPathLexer = new XPathLexer("tS'9A[");
xPathLexer.identifierOrOperatorName();
xPathLexer.plus();
xPathLexer.nextToken();
xPathLexer.nextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XPathLexer xPathLexer = new XPathLexer("tS'9A[");
        xPathLexer.identifierOrOperatorName();
        xPathLexer.plus();
        xPathLexer.nextToken();
        xPathLexer.nextToken();
        // Improved test data
        XPathLexer xPathLexer = new XPathLexer("tS'9A[");
        xPathLexer.identifierOrOperatorName();
        xPathLexer.plus();
        xPathLexer.nextToken();
        xPathLexer.nextToken();
        xPathLexer.nextToken();
        // More descriptive test data
        XPathLexer xPathLexer = new XPathLexer("tS'9A[");
        xPathLexer.identifierOrOperatorName();
        xPathLexer.plus();
        xPathLexer.nextToken();
        xPathLexer.nextToken();
        xPathLexer.nextToken();
        xPathLexer.nextToken();
        // Represents a more comprehensive scenario
        XPathLexer xPathLexer = new XPathLexer("tS'9A[");
        xPathLexer.identifierOrOperatorName();
        xPathLexer.plus();
        xPathLexer.nextToken();
        xPathLexer.nextToken();
        xPathLexer.nextToken();
        xPathLexer.nextToken();
        xPathLexer.nextToken();
    }
}
statement is: XPathLexer xPathLexer = new XPathLexer("tS'9A["), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xPathLexer.identifierOrOperatorName(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.identifierOrOperatorName() target is: xPathLexer method is: identifierOrOperatorName()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: identifierOrOperatorName()Lcom/werken/saxpath/Token;
statement is: xPathLexer.plus(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.plus() target is: xPathLexer method is: plus()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: plus()Lcom/werken/saxpath/Token;
statement is: xPathLexer.nextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.nextToken() target is: xPathLexer method is: nextToken()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: nextToken()Lcom/werken/saxpath/Token;
statement is: xPathLexer.nextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.nextToken() target is: xPathLexer method is: nextToken()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: nextToken()Lcom/werken/saxpath/Token;
statement is: // Improved test data
XPathLexer xPathLexer = new XPathLexer("tS'9A["), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xPathLexer.identifierOrOperatorName(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.identifierOrOperatorName() target is: xPathLexer method is: identifierOrOperatorName()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 7
Matched Method is: identifierOrOperatorName()Lcom/werken/saxpath/Token;
statement is: xPathLexer.plus(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.plus() target is: xPathLexer method is: plus()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 7
Matched Method is: plus()Lcom/werken/saxpath/Token;
statement is: xPathLexer.nextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.nextToken() target is: xPathLexer method is: nextToken()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 7
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 7
Matched Method is: nextToken()Lcom/werken/saxpath/Token;
statement is: xPathLexer.nextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.nextToken() target is: xPathLexer method is: nextToken()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 7
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 7
Matched Method is: nextToken()Lcom/werken/saxpath/Token;
statement is: xPathLexer.nextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.nextToken() target is: xPathLexer method is: nextToken()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 7
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 7
Matched Method is: nextToken()Lcom/werken/saxpath/Token;
statement is: // More descriptive test data
XPathLexer xPathLexer = new XPathLexer("tS'9A["), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xPathLexer.identifierOrOperatorName(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.identifierOrOperatorName() target is: xPathLexer method is: identifierOrOperatorName()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 14
Matched Method is: identifierOrOperatorName()Lcom/werken/saxpath/Token;
statement is: xPathLexer.plus(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.plus() target is: xPathLexer method is: plus()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 14
Matched Method is: plus()Lcom/werken/saxpath/Token;
statement is: xPathLexer.nextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.nextToken() target is: xPathLexer method is: nextToken()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 14
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 14
Matched Method is: nextToken()Lcom/werken/saxpath/Token;
statement is: xPathLexer.nextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.nextToken() target is: xPathLexer method is: nextToken()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 14
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 14
Matched Method is: nextToken()Lcom/werken/saxpath/Token;
statement is: xPathLexer.nextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.nextToken() target is: xPathLexer method is: nextToken()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 14
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 14
Matched Method is: nextToken()Lcom/werken/saxpath/Token;
statement is: xPathLexer.nextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.nextToken() target is: xPathLexer method is: nextToken()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 14
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 14
Matched Method is: nextToken()Lcom/werken/saxpath/Token;
statement is: // Represents a more comprehensive scenario
XPathLexer xPathLexer = new XPathLexer("tS'9A["), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xPathLexer.identifierOrOperatorName(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.identifierOrOperatorName() target is: xPathLexer method is: identifierOrOperatorName()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 22
Matched Method is: identifierOrOperatorName()Lcom/werken/saxpath/Token;
statement is: xPathLexer.plus(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.plus() target is: xPathLexer method is: plus()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 22
Matched Method is: plus()Lcom/werken/saxpath/Token;
statement is: xPathLexer.nextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.nextToken() target is: xPathLexer method is: nextToken()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 22
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 22
Matched Method is: nextToken()Lcom/werken/saxpath/Token;
statement is: xPathLexer.nextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.nextToken() target is: xPathLexer method is: nextToken()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 22
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 22
Matched Method is: nextToken()Lcom/werken/saxpath/Token;
statement is: xPathLexer.nextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.nextToken() target is: xPathLexer method is: nextToken()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 22
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 22
Matched Method is: nextToken()Lcom/werken/saxpath/Token;
statement is: xPathLexer.nextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.nextToken() target is: xPathLexer method is: nextToken()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 22
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 22
Matched Method is: nextToken()Lcom/werken/saxpath/Token;
statement is: xPathLexer.nextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.nextToken() target is: xPathLexer method is: nextToken()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 22
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 22
Matched Method is: nextToken()Lcom/werken/saxpath/Token;
TestCase is: String string = "tS'9A[";
XPathLexer xPathLexer = new XPathLexer(string);
((XPathLexer) string).identifierOrOperatorName();
((XPathLexer) string).plus();
((XPathLexer) string).nextToken();
((XPathLexer) string).nextToken();
String string = "tS'9A[";
XPathLexer xPathLexer = new XPathLexer(string);
((XPathLexer) string).identifierOrOperatorName();
((XPathLexer) string).plus();
((XPathLexer) string).nextToken();
((XPathLexer) string).nextToken();
((XPathLexer) string).nextToken();
String string = "tS'9A[";
XPathLexer xPathLexer = new XPathLexer(string);
((XPathLexer) string).identifierOrOperatorName();
((XPathLexer) string).plus();
((XPathLexer) string).nextToken();
((XPathLexer) string).nextToken();
((XPathLexer) string).nextToken();
((XPathLexer) string).nextToken();
String string = "tS'9A[";
XPathLexer xPathLexer = new XPathLexer(string);
((XPathLexer) string).identifierOrOperatorName();
((XPathLexer) string).plus();
((XPathLexer) string).nextToken();
((XPathLexer) string).nextToken();
((XPathLexer) string).nextToken();
((XPathLexer) string).nextToken();
((XPathLexer) string).nextToken();

statement is: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.werken.saxpath.XPathLexer
statement code is: XPathLexer xPathLexer = new XPathLexer("9:BNn,")
statement is: identifierOrOperatorName()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token identifierOrOperatorName = xPathLexer.identifierOrOperatorName()
statement is: nextToken()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token nextToken = xPathLexer.nextToken()
statement is: leftBracket()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token leftBracket = xPathLexer.leftBracket()
statement is: comma()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token comma = xPathLexer.comma()
statement is: rightParen()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token rightParen = xPathLexer.rightParen()
statement is: colon()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token colon = xPathLexer.colon()
statement is: nextToken()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token nextToken = xPathLexer.nextToken()
statement is: getPreviousToken()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token previousToken = xPathLexer.getPreviousToken()
test data is: XPathLexer xPathLexer = new XPathLexer("9:BNn,");
xPathLexer.identifierOrOperatorName();
xPathLexer.nextToken();
xPathLexer.leftBracket();
xPathLexer.comma();
xPathLexer.rightParen();
xPathLexer.colon();
xPathLexer.nextToken();
xPathLexer.getPreviousToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XPathLexer xPathLexer = new XPathLexer("9:BNn,");
        xPathLexer.identifierOrOperatorName();
        xPathLexer.nextToken();
        xPathLexer.leftBracket();
        xPathLexer.comma();
        xPathLexer.rightParen();
        xPathLexer.colon();
        xPathLexer.nextToken();
        xPathLexer.getPreviousToken();
        // Improved test data
        XPathLexer xPathLexer = new XPathLexer("1234:BNn,");
        xPathLexer.identifierOrOperatorName();
        xPathLexer.nextToken();
        xPathLexer.leftBracket();
        xPathLexer.comma();
        xPathLexer.rightParen();
        xPathLexer.colon();
        xPathLexer.nextToken();
        xPathLexer.getPreviousToken();
    }
}
statement is: XPathLexer xPathLexer = new XPathLexer("9:BNn,"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xPathLexer.identifierOrOperatorName(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.identifierOrOperatorName() target is: xPathLexer method is: identifierOrOperatorName()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: identifierOrOperatorName()Lcom/werken/saxpath/Token;
statement is: xPathLexer.nextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.nextToken() target is: xPathLexer method is: nextToken()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: nextToken()Lcom/werken/saxpath/Token;
statement is: xPathLexer.leftBracket(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.leftBracket() target is: xPathLexer method is: leftBracket()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: leftBracket()Lcom/werken/saxpath/Token;
statement is: xPathLexer.comma(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.comma() target is: xPathLexer method is: comma()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: comma()Lcom/werken/saxpath/Token;
statement is: xPathLexer.rightParen(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.rightParen() target is: xPathLexer method is: rightParen()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: rightParen()Lcom/werken/saxpath/Token;
statement is: xPathLexer.colon(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.colon() target is: xPathLexer method is: colon()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: colon()Lcom/werken/saxpath/Token;
statement is: xPathLexer.nextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.nextToken() target is: xPathLexer method is: nextToken()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: nextToken()Lcom/werken/saxpath/Token;
statement is: xPathLexer.getPreviousToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.getPreviousToken() target is: xPathLexer method is: getPreviousToken()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: getPreviousToken()Lcom/werken/saxpath/Token;
statement is: // Improved test data
XPathLexer xPathLexer = new XPathLexer("1234:BNn,"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xPathLexer.identifierOrOperatorName(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.identifierOrOperatorName() target is: xPathLexer method is: identifierOrOperatorName()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 11
Matched Method is: identifierOrOperatorName()Lcom/werken/saxpath/Token;
statement is: xPathLexer.nextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.nextToken() target is: xPathLexer method is: nextToken()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 11
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 11
Matched Method is: nextToken()Lcom/werken/saxpath/Token;
statement is: xPathLexer.leftBracket(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.leftBracket() target is: xPathLexer method is: leftBracket()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 11
Matched Method is: leftBracket()Lcom/werken/saxpath/Token;
statement is: xPathLexer.comma(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.comma() target is: xPathLexer method is: comma()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 11
Matched Method is: comma()Lcom/werken/saxpath/Token;
statement is: xPathLexer.rightParen(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.rightParen() target is: xPathLexer method is: rightParen()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 11
Matched Method is: rightParen()Lcom/werken/saxpath/Token;
statement is: xPathLexer.colon(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.colon() target is: xPathLexer method is: colon()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 11
Matched Method is: colon()Lcom/werken/saxpath/Token;
statement is: xPathLexer.nextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.nextToken() target is: xPathLexer method is: nextToken()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 11
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 11
Matched Method is: nextToken()Lcom/werken/saxpath/Token;
statement is: xPathLexer.getPreviousToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.getPreviousToken() target is: xPathLexer method is: getPreviousToken()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 11
Matched Method is: getPreviousToken()Lcom/werken/saxpath/Token;
TestCase is: String string = "9:BNn,";
XPathLexer xPathLexer = new XPathLexer(string);
((XPathLexer) string).identifierOrOperatorName();
((XPathLexer) string).nextToken();
((XPathLexer) string).leftBracket();
((XPathLexer) string).comma();
((XPathLexer) string).rightParen();
((XPathLexer) string).colon();
((XPathLexer) string).nextToken();
((XPathLexer) string).getPreviousToken();
String string = "1234:BNn,";
XPathLexer xPathLexer = new XPathLexer(string);
((XPathLexer) string).identifierOrOperatorName();
((XPathLexer) string).nextToken();
((XPathLexer) string).leftBracket();
((XPathLexer) string).comma();
((XPathLexer) string).rightParen();
((XPathLexer) string).colon();
((XPathLexer) string).nextToken();
((XPathLexer) string).getPreviousToken();

statement is: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.werken.saxpath.XPathLexer
statement code is: XPathLexer xPathLexer = new XPathLexer("NoJU;J?1v")
statement is: nextToken()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token nextToken = xPathLexer.nextToken()
statement is: nextToken()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token nextToken = xPathLexer.nextToken()
test data is: XPathLexer xPathLexer = new XPathLexer("NoJU;J?1v");
xPathLexer.nextToken();
xPathLexer.nextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XPathLexer xPathLexer = new XPathLexer("/root/parent/child");
        xPathLexer.nextToken();
        xPathLexer.nextToken();
        // Output:
        // Token: /
        // Token: root
        // Token: parent
        // Token: child }}
    }
}
statement is: XPathLexer xPathLexer = new XPathLexer("/root/parent/child"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xPathLexer.nextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.nextToken() target is: xPathLexer method is: nextToken()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: nextToken()Lcom/werken/saxpath/Token;
statement is: xPathLexer.nextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.nextToken() target is: xPathLexer method is: nextToken()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: nextToken()Lcom/werken/saxpath/Token;
statement is: // Output:, class spoon.support.reflect.code.CtCommentImpl
statement is: // Token: /, class spoon.support.reflect.code.CtCommentImpl
statement is: // Token: root, class spoon.support.reflect.code.CtCommentImpl
statement is: // Token: parent, class spoon.support.reflect.code.CtCommentImpl
statement is: // Token: child }}, class spoon.support.reflect.code.CtCommentImpl
TestCase is: String string = "/root/parent/child";
XPathLexer xPathLexer = new XPathLexer(string);
((XPathLexer) string).nextToken();
((XPathLexer) string).nextToken();

statement is: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.werken.saxpath.XPathLexer
statement code is: XPathLexer xPathLexer = new XPathLexer(" <@w%@+")
statement is: nextToken()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token nextToken = xPathLexer.nextToken()
statement is: identifierOrOperatorName()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token identifierOrOperatorName = xPathLexer.identifierOrOperatorName()
test data is: XPathLexer xPathLexer = new XPathLexer(" <@w%@+");
xPathLexer.nextToken();
xPathLexer.identifierOrOperatorName();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XPathLexer xPathLexer = new XPathLexer("//div[@class='container']/span[@id='mySpan']");
        xPathLexer.nextToken();
        xPathLexer.identifierOrOperatorName();
    }
}
statement is: XPathLexer xPathLexer = new XPathLexer("//div[@class='container']/span[@id='mySpan']"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xPathLexer.nextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.nextToken() target is: xPathLexer method is: nextToken()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: nextToken()Lcom/werken/saxpath/Token;
statement is: xPathLexer.identifierOrOperatorName(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.identifierOrOperatorName() target is: xPathLexer method is: identifierOrOperatorName()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: identifierOrOperatorName()Lcom/werken/saxpath/Token;
TestCase is: String string = "//div[@class='container']/span[@id='mySpan']";
XPathLexer xPathLexer = new XPathLexer(string);
((XPathLexer) string).nextToken();
((XPathLexer) string).identifierOrOperatorName();

statement is: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.werken.saxpath.XPathLexer
statement code is: XPathLexer xPathLexer = new XPathLexer("q=^j{MY7l.g29;'1q")
statement is: comma()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token comma = xPathLexer.comma()
statement is: nextToken()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token nextToken = xPathLexer.nextToken()
statement is: identifierOrOperatorName()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token identifierOrOperatorName = xPathLexer.identifierOrOperatorName()
test data is: XPathLexer xPathLexer = new XPathLexer("q=^j{MY7l.g29;'1q");
xPathLexer.comma();
xPathLexer.nextToken();
xPathLexer.identifierOrOperatorName();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        xPathLexer.comma();
        xPathLexer.nextToken();
        xPathLexer.identifierOrOperatorName();
    }
}
statement is: xPathLexer.comma(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.comma() target is: xPathLexer method is: comma()
statement is: xPathLexer.nextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.nextToken() target is: xPathLexer method is: nextToken()
statement is: xPathLexer.identifierOrOperatorName(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.identifierOrOperatorName() target is: xPathLexer method is: identifierOrOperatorName()
statement is: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.werken.saxpath.XPathLexer
statement code is: XPathLexer xPathLexer = new XPathLexer("KG>BrF")
statement is: identifierOrOperatorName()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token identifierOrOperatorName = xPathLexer.identifierOrOperatorName()
statement is: nextToken()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token nextToken = xPathLexer.nextToken()
statement is: identifierOrOperatorName()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token identifierOrOperatorName = xPathLexer.identifierOrOperatorName()
test data is: XPathLexer xPathLexer = new XPathLexer("KG>BrF");
xPathLexer.identifierOrOperatorName();
xPathLexer.nextToken();
xPathLexer.identifierOrOperatorName();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XPathLexer xPathLexer = new XPathLexer("KG>BrF");
        xPathLexer.identifierOrOperatorName();
        xPathLexer.nextToken();
        xPathLexer.identifierOrOperatorName();
        // Improved test data:
        XPathLexer xPathLexer = new XPathLexer("KG>BrF");
        xPathLexer.identifierOrOperatorName();
        xPathLexer.nextToken();
        xPathLexer.identifierOrOperatorName();// "KG" and "BrF" are more descriptive and representative of the situation being tested. }}

    }
}
statement is: XPathLexer xPathLexer = new XPathLexer("KG>BrF"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xPathLexer.identifierOrOperatorName(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.identifierOrOperatorName() target is: xPathLexer method is: identifierOrOperatorName()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: identifierOrOperatorName()Lcom/werken/saxpath/Token;
statement is: xPathLexer.nextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.nextToken() target is: xPathLexer method is: nextToken()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: nextToken()Lcom/werken/saxpath/Token;
statement is: xPathLexer.identifierOrOperatorName(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.identifierOrOperatorName() target is: xPathLexer method is: identifierOrOperatorName()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: identifierOrOperatorName()Lcom/werken/saxpath/Token;
statement is: // Improved test data:
XPathLexer xPathLexer = new XPathLexer("KG>BrF"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xPathLexer.identifierOrOperatorName(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.identifierOrOperatorName() target is: xPathLexer method is: identifierOrOperatorName()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 6
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 6
Matched Method is: identifierOrOperatorName()Lcom/werken/saxpath/Token;
statement is: xPathLexer.nextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.nextToken() target is: xPathLexer method is: nextToken()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 6
Matched Method is: nextToken()Lcom/werken/saxpath/Token;
statement is: xPathLexer.identifierOrOperatorName()// "KG" and "BrF" are more descriptive and representative of the situation being tested. }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.identifierOrOperatorName()// "KG" and "BrF" are more descriptive and representative of the situation being tested. }}
 target is: xPathLexer method is: identifierOrOperatorName()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 6
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 6
Matched Method is: identifierOrOperatorName()Lcom/werken/saxpath/Token;
TestCase is: String string = "KG>BrF";
XPathLexer xPathLexer = new XPathLexer(string);
((XPathLexer) string).identifierOrOperatorName();
((XPathLexer) string).nextToken();
((XPathLexer) string).identifierOrOperatorName();
String string = "KG>BrF";
XPathLexer xPathLexer = new XPathLexer(string);
((XPathLexer) string).identifierOrOperatorName();
((XPathLexer) string).nextToken();
((XPathLexer) string).identifierOrOperatorName();

statement is: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.werken.saxpath.XPathLexer
statement code is: XPathLexer xPathLexer = new XPathLexer("Bu[V?%EN4&_wLeV_:W")
statement is: doubleColon()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token doubleColon = xPathLexer.doubleColon()
statement is: consume()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: xPathLexer.consume()
statement is: identifierOrOperatorName()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token identifierOrOperatorName = xPathLexer.identifierOrOperatorName()
statement is: nextToken()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token nextToken = xPathLexer.nextToken()
test data is: XPathLexer xPathLexer = new XPathLexer("Bu[V?%EN4&_wLeV_:W");
xPathLexer.doubleColon();
xPathLexer.consume();
xPathLexer.identifierOrOperatorName();
xPathLexer.nextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XPathLexer xPathLexer = new XPathLexer("//div[@id='content']/p");
        xPathLexer.doubleColon();
        xPathLexer.consume();
        xPathLexer.identifierOrOperatorName();
        xPathLexer.nextToken();
    }
}
statement is: XPathLexer xPathLexer = new XPathLexer("//div[@id='content']/p"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xPathLexer.doubleColon(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.doubleColon() target is: xPathLexer method is: doubleColon()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: doubleColon()Lcom/werken/saxpath/Token;
statement is: xPathLexer.consume(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.consume() target is: xPathLexer method is: consume()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: consume()V
statement is: xPathLexer.identifierOrOperatorName(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.identifierOrOperatorName() target is: xPathLexer method is: identifierOrOperatorName()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: identifierOrOperatorName()Lcom/werken/saxpath/Token;
statement is: xPathLexer.nextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.nextToken() target is: xPathLexer method is: nextToken()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: nextToken()Lcom/werken/saxpath/Token;
TestCase is: String string = "//div[@id='content']/p";
XPathLexer xPathLexer = new XPathLexer(string);
((XPathLexer) string).doubleColon();
((XPathLexer) string).consume();
((XPathLexer) string).identifierOrOperatorName();
((XPathLexer) string).nextToken();

statement is: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.werken.saxpath.XPathLexer
statement code is: XPathLexer xPathLexer = new XPathLexer("@b)eb2\"h7\nDuE*cIi")
statement is: nextToken()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token nextToken = xPathLexer.nextToken()
test data is: XPathLexer xPathLexer = new XPathLexer("@b)eb2\"h7\nDuE*cIi");
xPathLexer.nextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XPathLexer xPathLexer = new XPathLexer("//div[@id='main']/p/a");
        xPathLexer.nextToken();
    }
}
statement is: XPathLexer xPathLexer = new XPathLexer("//div[@id='main']/p/a"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xPathLexer.nextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.nextToken() target is: xPathLexer method is: nextToken()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: nextToken()Lcom/werken/saxpath/Token;
TestCase is: String string = "//div[@id='main']/p/a";
XPathLexer xPathLexer = new XPathLexer(string);
((XPathLexer) string).nextToken();

statement is: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.werken.saxpath.XPathLexer
statement code is: XPathLexer xPathLexer = new XPathLexer("BuV?%EN4n&_wLeV:W")
statement is: nextToken()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token nextToken = xPathLexer.nextToken()
test data is: XPathLexer xPathLexer = new XPathLexer("BuV?%EN4n&_wLeV:W");
xPathLexer.nextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XPathLexer xPathLexer = new XPathLexer("/bookstore/book[author='John Doe' and year>2000]/title");
        xPathLexer.nextToken();
    }
}
statement is: XPathLexer xPathLexer = new XPathLexer("/bookstore/book[author='John Doe' and year>2000]/title"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xPathLexer.nextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.nextToken() target is: xPathLexer method is: nextToken()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: nextToken()Lcom/werken/saxpath/Token;
TestCase is: String string = "/bookstore/book[author='John Doe' and year>2000]/title";
XPathLexer xPathLexer = new XPathLexer(string);
((XPathLexer) string).nextToken();

statement is: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.werken.saxpath.XPathLexer
statement code is: XPathLexer xPathLexer = new XPathLexer("CJi")
statement is: nextToken()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token nextToken = xPathLexer.nextToken()
test data is: XPathLexer xPathLexer = new XPathLexer("CJi");
xPathLexer.nextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data
        String xPathExpression = "CJi";
        int tokenType = TokenType.NODE;
    }
}
statement is: // Improved test data
String xPathExpression = "CJi", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: int tokenType = TokenType.NODE, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: TokenType.NODE is TokenType
* this is vulnerable: String string = "CJi"
TestCase is: String string = "CJi";

statement is: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.werken.saxpath.XPathLexer
statement code is: XPathLexer xPathLexer = new XPathLexer("EK3o[vGY*bhod4,l")
statement is: nextToken()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token nextToken = xPathLexer.nextToken()
statement is: nextToken()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token nextToken = xPathLexer.nextToken()
test data is: XPathLexer xPathLexer = new XPathLexer("EK3o[vGY*bhod4,l");
xPathLexer.nextToken();
xPathLexer.nextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XPathLexer xPathLexer = new XPathLexer("EK3o[vGY*bhod4,l");
        xPathLexer.nextToken();// returns the token "E" of type "IDENTIFIER"

        xPathLexer.nextToken();// returns the token "K" of type "IDENTIFIER"

        xPathLexer.nextToken();// returns the token "3" of type "INTEGER_LITERAL"

        xPathLexer.nextToken();// returns the token "o" of type "IDENTIFIER"

        xPathLexer.nextToken();// returns the token "[" of type "LEFT_BRACKET"

        xPathLexer.nextToken();// returns the token "v" of type "IDENTIFIER"

        xPathLexer.nextToken();// returns the token "G" of type "IDENTIFIER"

        xPathLexer.nextToken();// returns the token "Y" of type "IDENTIFIER"

        xPathLexer.nextToken();// returns the token "*bhod4,l" of type "STRING_LITERAL" }}

    }
}
statement is: XPathLexer xPathLexer = new XPathLexer("EK3o[vGY*bhod4,l"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xPathLexer.nextToken()// returns the token "E" of type "IDENTIFIER"
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.nextToken()// returns the token "E" of type "IDENTIFIER"
 target is: xPathLexer method is: nextToken()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: nextToken()Lcom/werken/saxpath/Token;
statement is: xPathLexer.nextToken()// returns the token "K" of type "IDENTIFIER"
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.nextToken()// returns the token "K" of type "IDENTIFIER"
 target is: xPathLexer method is: nextToken()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: nextToken()Lcom/werken/saxpath/Token;
statement is: xPathLexer.nextToken()// returns the token "3" of type "INTEGER_LITERAL"
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.nextToken()// returns the token "3" of type "INTEGER_LITERAL"
 target is: xPathLexer method is: nextToken()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: nextToken()Lcom/werken/saxpath/Token;
statement is: xPathLexer.nextToken()// returns the token "o" of type "IDENTIFIER"
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.nextToken()// returns the token "o" of type "IDENTIFIER"
 target is: xPathLexer method is: nextToken()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: nextToken()Lcom/werken/saxpath/Token;
statement is: xPathLexer.nextToken()// returns the token "[" of type "LEFT_BRACKET"
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.nextToken()// returns the token "[" of type "LEFT_BRACKET"
 target is: xPathLexer method is: nextToken()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: nextToken()Lcom/werken/saxpath/Token;
statement is: xPathLexer.nextToken()// returns the token "v" of type "IDENTIFIER"
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.nextToken()// returns the token "v" of type "IDENTIFIER"
 target is: xPathLexer method is: nextToken()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: nextToken()Lcom/werken/saxpath/Token;
statement is: xPathLexer.nextToken()// returns the token "G" of type "IDENTIFIER"
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.nextToken()// returns the token "G" of type "IDENTIFIER"
 target is: xPathLexer method is: nextToken()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: nextToken()Lcom/werken/saxpath/Token;
statement is: xPathLexer.nextToken()// returns the token "Y" of type "IDENTIFIER"
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.nextToken()// returns the token "Y" of type "IDENTIFIER"
 target is: xPathLexer method is: nextToken()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: nextToken()Lcom/werken/saxpath/Token;
statement is: xPathLexer.nextToken()// returns the token "*bhod4,l" of type "STRING_LITERAL" }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.nextToken()// returns the token "*bhod4,l" of type "STRING_LITERAL" }}
 target is: xPathLexer method is: nextToken()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: nextToken()Lcom/werken/saxpath/Token;
TestCase is: String string = "EK3o[vGY*bhod4,l";
XPathLexer xPathLexer = new XPathLexer(string);
((XPathLexer) string).nextToken();
((XPathLexer) string).nextToken();
((XPathLexer) string).nextToken();
((XPathLexer) string).nextToken();
((XPathLexer) string).nextToken();
((XPathLexer) string).nextToken();
((XPathLexer) string).nextToken();
((XPathLexer) string).nextToken();
((XPathLexer) string).nextToken();

statement is: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.werken.saxpath.XPathLexer
statement code is: XPathLexer xPathLexer = new XPathLexer("F|'~")
statement is: nextToken()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token nextToken = xPathLexer.nextToken()
test data is: XPathLexer xPathLexer = new XPathLexer("F|'~");
xPathLexer.nextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XPathLexer xPathLexer = new XPathLexer("F|'~");
        xPathLexer.nextToken();
        // Improved test data:
        String input = "F|'~";
        String expectedTokenType = "FUNCTION_NAME";
    }
}
statement is: XPathLexer xPathLexer = new XPathLexer("F|'~"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xPathLexer.nextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.nextToken() target is: xPathLexer method is: nextToken()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: nextToken()Lcom/werken/saxpath/Token;
statement is: // Improved test data:
String input = "F|'~", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String expectedTokenType = "FUNCTION_NAME", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
* this is vulnerable: String string = "F|'~"
* this is vulnerable: String string = "FUNCTION_NAME"
TestCase is: String string = "F|'~";
XPathLexer xPathLexer = new XPathLexer(string);
((XPathLexer) string).nextToken();
String string = "F|'~";
String string = "FUNCTION_NAME";

statement is: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.werken.saxpath.XPathLexer
statement code is: XPathLexer xPathLexer = new XPathLexer("GI\"8u5")
statement is: nextToken()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token nextToken = xPathLexer.nextToken()
test data is: XPathLexer xPathLexer = new XPathLexer("GI\"8u5");
xPathLexer.nextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XPathLexer xPathLexer = new XPathLexer("//author[@id='1234']/@name");
        xPathLexer.nextToken();
    }
}
statement is: XPathLexer xPathLexer = new XPathLexer("//author[@id='1234']/@name"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xPathLexer.nextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.nextToken() target is: xPathLexer method is: nextToken()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: nextToken()Lcom/werken/saxpath/Token;
TestCase is: String string = "//author[@id='1234']/@name";
XPathLexer xPathLexer = new XPathLexer(string);
((XPathLexer) string).nextToken();

statement is: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.werken.saxpath.XPathLexer
statement code is: XPathLexer xPathLexer = new XPathLexer("Ib.4N")
statement is: nextToken()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token nextToken = xPathLexer.nextToken()
test data is: XPathLexer xPathLexer = new XPathLexer("Ib.4N");
xPathLexer.nextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XPathLexer xPathLexer = new XPathLexer("/books/book[author='J.K. Rowling' and year>1997]");
        xPathLexer.nextToken();
    }
}
statement is: XPathLexer xPathLexer = new XPathLexer("/books/book[author='J.K. Rowling' and year>1997]"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xPathLexer.nextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.nextToken() target is: xPathLexer method is: nextToken()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: nextToken()Lcom/werken/saxpath/Token;
TestCase is: String string = "/books/book[author='J.K. Rowling' and year>1997]";
XPathLexer xPathLexer = new XPathLexer(string);
((XPathLexer) string).nextToken();

statement is: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.werken.saxpath.XPathLexer
statement code is: XPathLexer xPathLexer = new XPathLexer("!)JT")
statement is: at()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token at = xPathLexer.at()
statement is: at()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token at = xPathLexer.at()
statement is: nextToken()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token nextToken = xPathLexer.nextToken()
test data is: XPathLexer xPathLexer = new XPathLexer("!)JT");
xPathLexer.at();
xPathLexer.at();
xPathLexer.nextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XPathLexer xPathLexer = new XPathLexer("!#$%^&*()_+-={}[]|\"\':;<>,./?`~");
        xPathLexer.at();
        xPathLexer.nextToken();
    }
}
statement is: XPathLexer xPathLexer = new XPathLexer("!#$%^&*()_+-={}[]|\"\':;<>,./?`~"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xPathLexer.at(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.at() target is: xPathLexer method is: at()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: at()Lcom/werken/saxpath/Token;
statement is: xPathLexer.nextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.nextToken() target is: xPathLexer method is: nextToken()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: nextToken()Lcom/werken/saxpath/Token;
TestCase is: String string = "!#$%^&*()_+-={}[]|\"':;<>,./?`~";
XPathLexer xPathLexer = new XPathLexer(string);
((XPathLexer) string).at();
((XPathLexer) string).nextToken();

statement is: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.werken.saxpath.XPathLexer
statement code is: XPathLexer xPathLexer = new XPathLexer("K.=D`")
statement is: nextToken()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token nextToken = xPathLexer.nextToken()
test data is: XPathLexer xPathLexer = new XPathLexer("K.=D`");
xPathLexer.nextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XPathLexer xPathLexer = new XPathLexer("//root/path[@attribute='value']");
        xPathLexer.nextToken();
    }
}
statement is: XPathLexer xPathLexer = new XPathLexer("//root/path[@attribute='value']"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xPathLexer.nextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.nextToken() target is: xPathLexer method is: nextToken()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: nextToken()Lcom/werken/saxpath/Token;
TestCase is: String string = "//root/path[@attribute='value']";
XPathLexer xPathLexer = new XPathLexer(string);
((XPathLexer) string).nextToken();

statement is: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.werken.saxpath.XPathLexer
statement code is: XPathLexer xPathLexer = new XPathLexer("Ly?A+VtQ]+$wtQ")
statement is: nextToken()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token nextToken = xPathLexer.nextToken()
test data is: XPathLexer xPathLexer = new XPathLexer("Ly?A+VtQ]+$wtQ");
xPathLexer.nextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XPathLexer xPathLexer = new XPathLexer("Ly?A+VtQ]+$wtQ");
        xPathLexer.nextToken();
        // Improved test data
        XPathLexer xPathLexer = new XPathLexer("Ly69A+VtQ]+$wtQ");
        xPathLexer.nextToken();
    }
}
statement is: XPathLexer xPathLexer = new XPathLexer("Ly?A+VtQ]+$wtQ"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xPathLexer.nextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.nextToken() target is: xPathLexer method is: nextToken()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: nextToken()Lcom/werken/saxpath/Token;
statement is: // Improved test data
XPathLexer xPathLexer = new XPathLexer("Ly69A+VtQ]+$wtQ"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xPathLexer.nextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.nextToken() target is: xPathLexer method is: nextToken()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 4
Matched Method is: nextToken()Lcom/werken/saxpath/Token;
TestCase is: String string = "Ly?A+VtQ]+$wtQ";
XPathLexer xPathLexer = new XPathLexer(string);
((XPathLexer) string).nextToken();
String string = "Ly69A+VtQ]+$wtQ";
XPathLexer xPathLexer = new XPathLexer(string);
((XPathLexer) string).nextToken();

statement is: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.werken.saxpath.XPathLexer
statement code is: XPathLexer xPathLexer = new XPathLexer("M%=")
statement is: nextToken()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token nextToken = xPathLexer.nextToken()
test data is: XPathLexer xPathLexer = new XPathLexer("M%=");
xPathLexer.nextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XPathLexer xPathLexer = new XPathLexer("//div[@class='container']");
        xPathLexer.nextToken();
    }
}
statement is: XPathLexer xPathLexer = new XPathLexer("//div[@class='container']"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xPathLexer.nextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.nextToken() target is: xPathLexer method is: nextToken()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: nextToken()Lcom/werken/saxpath/Token;
TestCase is: String string = "//div[@class='container']";
XPathLexer xPathLexer = new XPathLexer(string);
((XPathLexer) string).nextToken();

statement is: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.werken.saxpath.XPathLexer
statement code is: XPathLexer xPathLexer = new XPathLexer("OB`0RtoR)E~zfca%?$")
statement is: nextToken()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token nextToken = xPathLexer.nextToken()
test data is: XPathLexer xPathLexer = new XPathLexer("OB`0RtoR)E~zfca%?$");
xPathLexer.nextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XPathLexer xPathLexer = new XPathLexer("(23+5)*10-4");
        xPathLexer.nextToken();
        // Improved test data:
        XPathLexer xPathLexer = new XPathLexer("/root/node[@attribute='value']");
        xPathLexer.nextToken();
    }
}
statement is: XPathLexer xPathLexer = new XPathLexer("(23+5)*10-4"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xPathLexer.nextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.nextToken() target is: xPathLexer method is: nextToken()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: nextToken()Lcom/werken/saxpath/Token;
statement is: // Improved test data:
XPathLexer xPathLexer = new XPathLexer("/root/node[@attribute='value']"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xPathLexer.nextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.nextToken() target is: xPathLexer method is: nextToken()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 4
Matched Method is: nextToken()Lcom/werken/saxpath/Token;
TestCase is: String string = "(23+5)*10-4";
XPathLexer xPathLexer = new XPathLexer(string);
((XPathLexer) string).nextToken();
String string = "/root/node[@attribute='value']";
XPathLexer xPathLexer = new XPathLexer(string);
((XPathLexer) string).nextToken();

statement is: com.werken.saxpath.XPathLexer()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.werken.saxpath.XPathLexer
statement code is: XPathLexer xPathLexer = new XPathLexer()
statement is: setXPath(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: xPathLexer.setXPath("4#?p,~P9!")
statement is: notEquals()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token notEquals = xPathLexer.notEquals()
statement is: at()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token at = xPathLexer.at()
statement is: nextToken()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token nextToken = xPathLexer.nextToken()
statement is: at()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token at = xPathLexer.at()
statement is: leftBracket()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token leftBracket = xPathLexer.leftBracket()
statement is: nextToken()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token nextToken = xPathLexer.nextToken()
test data is: XPathLexer xPathLexer = new XPathLexer();
xPathLexer.setXPath("4#?p,~P9!");
xPathLexer.notEquals();
xPathLexer.at();
xPathLexer.nextToken();
xPathLexer.at();
xPathLexer.leftBracket();
xPathLexer.nextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XPathLexer xPathLexer = new XPathLexer();
        xPathLexer.setXPath("//div[@class='container']");
        xPathLexer.notEquals();
        xPathLexer.at();
        xPathLexer.nextToken();
        xPathLexer.at();
        xPathLexer.leftBracket();
        xPathLexer.nextToken();
    }
}
statement is: XPathLexer xPathLexer = new XPathLexer(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xPathLexer.setXPath("//div[@class='container']"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.setXPath("//div[@class='container']") target is: xPathLexer method is: setXPath(java.lang.String)
source statement: com.werken.saxpath.XPathLexer()V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 0
Matched Method is: setXPath(Ljava/lang/String;)V
statement is: xPathLexer.notEquals(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.notEquals() target is: xPathLexer method is: notEquals()
source statement: com.werken.saxpath.XPathLexer()V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 0
Matched Method is: notEquals()Lcom/werken/saxpath/Token;
statement is: xPathLexer.at(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.at() target is: xPathLexer method is: at()
source statement: com.werken.saxpath.XPathLexer()V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 0
source statement: com.werken.saxpath.XPathLexer()V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 0
Matched Method is: at()Lcom/werken/saxpath/Token;
statement is: xPathLexer.nextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.nextToken() target is: xPathLexer method is: nextToken()
source statement: com.werken.saxpath.XPathLexer()V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 0
source statement: com.werken.saxpath.XPathLexer()V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 0
Matched Method is: nextToken()Lcom/werken/saxpath/Token;
statement is: xPathLexer.at(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.at() target is: xPathLexer method is: at()
source statement: com.werken.saxpath.XPathLexer()V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 0
source statement: com.werken.saxpath.XPathLexer()V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 0
Matched Method is: at()Lcom/werken/saxpath/Token;
statement is: xPathLexer.leftBracket(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.leftBracket() target is: xPathLexer method is: leftBracket()
source statement: com.werken.saxpath.XPathLexer()V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 0
Matched Method is: leftBracket()Lcom/werken/saxpath/Token;
statement is: xPathLexer.nextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.nextToken() target is: xPathLexer method is: nextToken()
source statement: com.werken.saxpath.XPathLexer()V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 0
source statement: com.werken.saxpath.XPathLexer()V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 0
Matched Method is: nextToken()Lcom/werken/saxpath/Token;
TestCase is: XPathLexer xPathLexer = new XPathLexer();
String string = "//div[@class='container']";
xPathLexer.setXPath(string);
xPathLexer.notEquals();
xPathLexer.at();
xPathLexer.nextToken();
xPathLexer.at();
xPathLexer.leftBracket();
xPathLexer.nextToken();

statement is: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.werken.saxpath.XPathLexer
statement code is: XPathLexer xPathLexer = new XPathLexer("FnQ$|&9")
statement is: equals()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token equals = xPathLexer.equals()
statement is: at()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token at = xPathLexer.at()
statement is: nextToken()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token nextToken = xPathLexer.nextToken()
test data is: XPathLexer xPathLexer = new XPathLexer("FnQ$|&9");
xPathLexer.equals();
xPathLexer.at();
xPathLexer.nextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        xPathLexer.equals();
        xPathLexer.at();
        xPathLexer.nextToken();
    }
}
statement is: xPathLexer.equals(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.equals() target is: xPathLexer method is: equals()
statement is: xPathLexer.at(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.at() target is: xPathLexer method is: at()
statement is: xPathLexer.nextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.nextToken() target is: xPathLexer method is: nextToken()
statement is: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.werken.saxpath.XPathLexer
statement code is: XPathLexer xPathLexer = new XPathLexer("Re`lCkMjCqyEd ")
statement is: nextToken()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token nextToken = xPathLexer.nextToken()
test data is: XPathLexer xPathLexer = new XPathLexer("Re`lCkMjCqyEd ");
xPathLexer.nextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XPathLexer xPathLexer = new XPathLexer("Re`lCkMjCqyEd ");
        xPathLexer.nextToken();
        // Token: RELATIVE_PATH_EXPR, Value: Re`lCkMjCqyEd }}
    }
}
statement is: XPathLexer xPathLexer = new XPathLexer("Re`lCkMjCqyEd "), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xPathLexer.nextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.nextToken() target is: xPathLexer method is: nextToken()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: nextToken()Lcom/werken/saxpath/Token;
statement is: // Token: RELATIVE_PATH_EXPR, Value: Re`lCkMjCqyEd }}, class spoon.support.reflect.code.CtCommentImpl
TestCase is: String string = "Re`lCkMjCqyEd ";
XPathLexer xPathLexer = new XPathLexer(string);
((XPathLexer) string).nextToken();

statement is: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.werken.saxpath.XPathLexer
statement code is: XPathLexer xPathLexer = new XPathLexer("SmoY~H'7-Hef\"x)")
statement is: nextToken()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token nextToken = xPathLexer.nextToken()
test data is: XPathLexer xPathLexer = new XPathLexer("SmoY~H'7-Hef\"x)");
xPathLexer.nextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        String inputString = "SmoY~H\'7-Hef\"x)";
        int expectedTokenType = TokenType.IDENTIFIER;
        String expectedTokenValue = "SmoY";
    }
}
statement is: String inputString = "SmoY~H\'7-Hef\"x)", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: int expectedTokenType = TokenType.IDENTIFIER, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: TokenType.IDENTIFIER is TokenType
statement is: String expectedTokenValue = "SmoY", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
* this is vulnerable: String string = "SmoY~H'7-Hef\"x)"
* this is vulnerable: String string = "SmoY"
TestCase is: String string = "SmoY~H'7-Hef\"x)";
String string = "SmoY";

statement is: com.werken.saxpath.XPathLexer()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.werken.saxpath.XPathLexer
statement code is: XPathLexer xPathLexer = new XPathLexer()
statement is: setXPath(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: xPathLexer.setXPath("Tzns0k_f")
statement is: nextToken()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token nextToken = xPathLexer.nextToken()
test data is: XPathLexer xPathLexer = new XPathLexer();
xPathLexer.setXPath("Tzns0k_f");
xPathLexer.nextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XPathLexer xPathLexer = new XPathLexer();
        xPathLexer.setXPath("Tzns0k_f");// This XPath expression contains an invalid token "Tzns0k_f"

        xPathLexer.nextToken();
    }
}
statement is: XPathLexer xPathLexer = new XPathLexer(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xPathLexer.setXPath("Tzns0k_f")// This XPath expression contains an invalid token "Tzns0k_f"
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.setXPath("Tzns0k_f")// This XPath expression contains an invalid token "Tzns0k_f"
 target is: xPathLexer method is: setXPath(java.lang.String)
source statement: com.werken.saxpath.XPathLexer()V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 0
Matched Method is: setXPath(Ljava/lang/String;)V
statement is: xPathLexer.nextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.nextToken() target is: xPathLexer method is: nextToken()
source statement: com.werken.saxpath.XPathLexer()V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 0
Matched Method is: nextToken()Lcom/werken/saxpath/Token;
TestCase is: XPathLexer xPathLexer = new XPathLexer();
String string = "Tzns0k_f";
xPathLexer.setXPath(string);
xPathLexer.nextToken();

statement is: com.werken.saxpath.XPathLexer()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.werken.saxpath.XPathLexer
statement code is: XPathLexer xPathLexer = new XPathLexer()
statement is: setXPath(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: xPathLexer.setXPath("U<},@")
statement is: nextToken()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token nextToken = xPathLexer.nextToken()
test data is: XPathLexer xPathLexer = new XPathLexer();
xPathLexer.setXPath("U<},@");
xPathLexer.nextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XPathLexer xPathLexer = new XPathLexer();
        xPathLexer.setXPath("U<},@");
        xPathLexer.nextToken();
        // Improved test data
        String[] testStrings = new String[]{ "U<},@", "U<,", "U>,", "U&,", "U&," };
        for (String s : testStrings) {
            xPathLexer.setXPath(s);
            Token token = xPathLexer.nextToken();
            // Check if the token is valid and of the correct type
            assertTrue(token.isValid() && (token.getType() == TokenType.OPERATOR));
        }
    }
}
statement is: XPathLexer xPathLexer = new XPathLexer(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xPathLexer.setXPath("U<},@"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.setXPath("U<},@") target is: xPathLexer method is: setXPath(java.lang.String)
source statement: com.werken.saxpath.XPathLexer()V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 0
Matched Method is: setXPath(Ljava/lang/String;)V
statement is: xPathLexer.nextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.nextToken() target is: xPathLexer method is: nextToken()
source statement: com.werken.saxpath.XPathLexer()V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 0
Matched Method is: nextToken()Lcom/werken/saxpath/Token;
statement is: // Improved test data
String[] testStrings = new String[]{ "U<},@", "U<,", "U>,", "U&,", "U&," }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
statement is: for (String s : testStrings) {
    xPathLexer.setXPath(s);
    Token token = xPathLexer.nextToken();
    // Check if the token is valid and of the correct type
    assertTrue(token.isValid() && (token.getType() == TokenType.OPERATOR));
}, class spoon.support.reflect.code.CtForEachImpl
TestCase is: XPathLexer xPathLexer = new XPathLexer();
String string = "U<},@";
xPathLexer.setXPath(string);
xPathLexer.nextToken();

statement is: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.werken.saxpath.XPathLexer
statement code is: XPathLexer xPathLexer = new XPathLexer("VU$yO")
statement is: nextToken()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token nextToken = xPathLexer.nextToken()
test data is: XPathLexer xPathLexer = new XPathLexer("VU$yO");
xPathLexer.nextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XPathLexer xPathLexer = new XPathLexer("VU$yO");
        xPathLexer.nextToken();
    }
}
statement is: XPathLexer xPathLexer = new XPathLexer("VU$yO"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xPathLexer.nextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.nextToken() target is: xPathLexer method is: nextToken()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: nextToken()Lcom/werken/saxpath/Token;
TestCase is: String string = "VU$yO";
XPathLexer xPathLexer = new XPathLexer(string);
((XPathLexer) string).nextToken();

statement is: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.werken.saxpath.XPathLexer
statement code is: XPathLexer xPathLexer = new XPathLexer("WA6")
statement is: nextToken()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token nextToken = xPathLexer.nextToken()
test data is: XPathLexer xPathLexer = new XPathLexer("WA6");
xPathLexer.nextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XPathLexer xPathLexer = new XPathLexer("//book[author='Jane Doe']");
        xPathLexer.nextToken();
    }
}
statement is: XPathLexer xPathLexer = new XPathLexer("//book[author='Jane Doe']"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xPathLexer.nextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.nextToken() target is: xPathLexer method is: nextToken()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: nextToken()Lcom/werken/saxpath/Token;
TestCase is: String string = "//book[author='Jane Doe']";
XPathLexer xPathLexer = new XPathLexer(string);
((XPathLexer) string).nextToken();

statement is: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.werken.saxpath.XPathLexer
statement code is: XPathLexer xPathLexer = new XPathLexer("Xr[AS6do")
statement is: nextToken()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token nextToken = xPathLexer.nextToken()
test data is: XPathLexer xPathLexer = new XPathLexer("Xr[AS6do");
xPathLexer.nextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XPathLexer xPathLexer = new XPathLexer("Xr[AS6do");
        xPathLexer.nextToken();
        // Improved test data
        int inputString = "Xr[AS6do";
        String expectedOutput = "Xr[AS6do]";
        assertEquals(expectedOutput, xPathLexer.getNextToken().getValue());
    }
}
statement is: XPathLexer xPathLexer = new XPathLexer("Xr[AS6do"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xPathLexer.nextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.nextToken() target is: xPathLexer method is: nextToken()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: nextToken()Lcom/werken/saxpath/Token;
statement is: // Improved test data
int inputString = "Xr[AS6do", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String expectedOutput = "Xr[AS6do]", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: assertEquals(expectedOutput, xPathLexer.getNextToken().getValue()), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(expectedOutput, xPathLexer.getNextToken().getValue()) target is:  method is: assertEquals(java.lang.String,<unknown>)
* this is vulnerable: String string = "Xr[AS6do"
* this is vulnerable: String string = "Xr[AS6do]"
TestCase is: String string = "Xr[AS6do";
XPathLexer xPathLexer = new XPathLexer(string);
((XPathLexer) string).nextToken();
String string = "Xr[AS6do";
String string = "Xr[AS6do]";

statement is: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.werken.saxpath.XPathLexer
statement code is: XPathLexer xPathLexer = new XPathLexer("q=^j{MY7l.g29;'1q")
statement is: dots()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token dots = xPathLexer.dots()
statement is: equals()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token equals = xPathLexer.equals()
statement is: comma()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token comma = xPathLexer.comma()
statement is: leftBracket()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token leftBracket = xPathLexer.leftBracket()
statement is: rightParen()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token rightParen = xPathLexer.rightParen()
statement is: colon()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token colon = xPathLexer.colon()
statement is: nextToken()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token nextToken = xPathLexer.nextToken()
test data is: XPathLexer xPathLexer = new XPathLexer("q=^j{MY7l.g29;'1q");
xPathLexer.dots();
xPathLexer.equals();
xPathLexer.comma();
xPathLexer.leftBracket();
xPathLexer.rightParen();
xPathLexer.colon();
xPathLexer.nextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        xPathLexer.dots(3);
        xPathLexer.equals(false);
        xPathLexer.comma(2);
        xPathLexer.leftBracket('{');
        xPathLexer.rightParen('}');
        xPathLexer.colon(2);
    }
}
statement is: xPathLexer.dots(3), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.dots(3) target is: xPathLexer method is: dots(int)
statement is: xPathLexer.equals(false), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.equals(false) target is: xPathLexer method is: equals(boolean)
statement is: xPathLexer.comma(2), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.comma(2) target is: xPathLexer method is: comma(int)
statement is: xPathLexer.leftBracket('{'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.leftBracket('{') target is: xPathLexer method is: leftBracket(char)
statement is: xPathLexer.rightParen('}'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.rightParen('}') target is: xPathLexer method is: rightParen(char)
statement is: xPathLexer.colon(2), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.colon(2) target is: xPathLexer method is: colon(int)
statement is: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.werken.saxpath.XPathLexer
statement code is: XPathLexer xPathLexer = new XPathLexer("Z:{:;y[\"")
statement is: nextToken()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token nextToken = xPathLexer.nextToken()
test data is: XPathLexer xPathLexer = new XPathLexer("Z:{:;y[\"");
xPathLexer.nextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        xPathLexer.nextToken();
    }
}
statement is: xPathLexer.nextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.nextToken() target is: xPathLexer method is: nextToken()
statement is: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.werken.saxpath.XPathLexer
statement code is: XPathLexer xPathLexer = new XPathLexer("dG!fo")
statement is: nextToken()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token nextToken = xPathLexer.nextToken()
test data is: XPathLexer xPathLexer = new XPathLexer("dG!fo");
xPathLexer.nextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        String input = "dG!fo";
        XPathLexer xPathLexer = new XPathLexer(input);
        xPathLexer.nextToken();
    }
}
statement is: String input = "dG!fo", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: XPathLexer xPathLexer = new XPathLexer(input), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xPathLexer.nextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.nextToken() target is: xPathLexer method is: nextToken()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: nextToken()Lcom/werken/saxpath/Token;
TestCase is: String string = "dG!fo";
XPathLexer xPathLexer = new XPathLexer(string);
((XPathLexer) string).nextToken();

statement is: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.werken.saxpath.XPathLexer
statement code is: XPathLexer xPathLexer = new XPathLexer("]b88g[)2*\"M`?#")
statement is: nextToken()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token nextToken = xPathLexer.nextToken()
statement is: identifierOrOperatorName()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token identifierOrOperatorName = xPathLexer.identifierOrOperatorName()
test data is: XPathLexer xPathLexer = new XPathLexer("]b88g[)2*\"M`?#");
xPathLexer.nextToken();
xPathLexer.identifierOrOperatorName();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XPathLexer xPathLexer = new XPathLexer("2*\"M`?#");
        xPathLexer.nextToken();
        assertEquals(xPathLexer.identifierOrOperatorName(), "2*\"M`?#");
    }
}
statement is: XPathLexer xPathLexer = new XPathLexer("2*\"M`?#"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xPathLexer.nextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.nextToken() target is: xPathLexer method is: nextToken()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: nextToken()Lcom/werken/saxpath/Token;
statement is: assertEquals(xPathLexer.identifierOrOperatorName(), "2*\"M`?#"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(xPathLexer.identifierOrOperatorName(), "2*\"M`?#") target is:  method is: assertEquals(<unknown>,java.lang.String)
TestCase is: String string = "2*\"M`?#";
XPathLexer xPathLexer = new XPathLexer(string);
((XPathLexer) string).nextToken();

statement is: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.werken.saxpath.XPathLexer
statement code is: XPathLexer xPathLexer = new XPathLexer("q=^j{MY7l.g29;'1q")
statement is: leftBracket()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token leftBracket = xPathLexer.leftBracket()
statement is: rightParen()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token rightParen = xPathLexer.rightParen()
statement is: nextToken()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token nextToken = xPathLexer.nextToken()
test data is: XPathLexer xPathLexer = new XPathLexer("q=^j{MY7l.g29;'1q");
xPathLexer.leftBracket();
xPathLexer.rightParen();
xPathLexer.nextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XPathLexer xPathLexer = new XPathLexer("/user/name=('John Smith' and 'john.smith@example.com')");
        xPathLexer.leftBracket();
        xPathLexer.rightParen();
        xPathLexer.nextToken();
    }
}
statement is: XPathLexer xPathLexer = new XPathLexer("/user/name=('John Smith' and 'john.smith@example.com')"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xPathLexer.leftBracket(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.leftBracket() target is: xPathLexer method is: leftBracket()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: leftBracket()Lcom/werken/saxpath/Token;
statement is: xPathLexer.rightParen(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.rightParen() target is: xPathLexer method is: rightParen()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: rightParen()Lcom/werken/saxpath/Token;
statement is: xPathLexer.nextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.nextToken() target is: xPathLexer method is: nextToken()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: nextToken()Lcom/werken/saxpath/Token;
TestCase is: String string = "/user/name=('John Smith' and 'john.smith@example.com')";
XPathLexer xPathLexer = new XPathLexer(string);
((XPathLexer) string).leftBracket();
((XPathLexer) string).rightParen();
((XPathLexer) string).nextToken();

statement is: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.werken.saxpath.XPathLexer
statement code is: XPathLexer xPathLexer = new XPathLexer("{_y[\"F")
statement is: equals()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token equals = xPathLexer.equals()
statement is: nextToken()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token nextToken = xPathLexer.nextToken()
test data is: XPathLexer xPathLexer = new XPathLexer("{_y[\"F");
xPathLexer.equals();
xPathLexer.nextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        xPathLexer.equals();
        xPathLexer.nextToken();
    }
}
statement is: xPathLexer.equals(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.equals() target is: xPathLexer method is: equals()
statement is: xPathLexer.nextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.nextToken() target is: xPathLexer method is: nextToken()
statement is: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.werken.saxpath.XPathLexer
statement code is: XPathLexer xPathLexer = new XPathLexer("20/u`95")
statement is: not()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token not = xPathLexer.not()
statement is: whitespace()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token whitespace = xPathLexer.whitespace()
statement is: colon()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token colon = xPathLexer.colon()
statement is: rightBracket()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token rightBracket = xPathLexer.rightBracket()
statement is: nextToken()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token nextToken = xPathLexer.nextToken()
test data is: XPathLexer xPathLexer = new XPathLexer("20/u`95");
xPathLexer.not();
xPathLexer.whitespace();
xPathLexer.colon();
xPathLexer.rightBracket();
xPathLexer.nextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XPathLexer xPathLexer = new XPathLexer("20/u`95");
        xPathLexer.not();
        xPathLexer.whitespace();
        xPathLexer.colon();
        xPathLexer.rightBracket();
        xPathLexer.nextToken();
        // The test data is more descriptive and representative of the situation being tested by using more illustrative examples for the primitive values and strings. }}
    }
}
statement is: XPathLexer xPathLexer = new XPathLexer("20/u`95"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xPathLexer.not(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.not() target is: xPathLexer method is: not()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: not()Lcom/werken/saxpath/Token;
statement is: xPathLexer.whitespace(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.whitespace() target is: xPathLexer method is: whitespace()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: whitespace()Lcom/werken/saxpath/Token;
statement is: xPathLexer.colon(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.colon() target is: xPathLexer method is: colon()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: colon()Lcom/werken/saxpath/Token;
statement is: xPathLexer.rightBracket(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.rightBracket() target is: xPathLexer method is: rightBracket()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: rightBracket()Lcom/werken/saxpath/Token;
statement is: xPathLexer.nextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.nextToken() target is: xPathLexer method is: nextToken()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: nextToken()Lcom/werken/saxpath/Token;
statement is: // The test data is more descriptive and representative of the situation being tested by using more illustrative examples for the primitive values and strings. }}, class spoon.support.reflect.code.CtCommentImpl
TestCase is: String string = "20/u`95";
XPathLexer xPathLexer = new XPathLexer(string);
((XPathLexer) string).not();
((XPathLexer) string).whitespace();
((XPathLexer) string).colon();
((XPathLexer) string).rightBracket();
((XPathLexer) string).nextToken();

statement is: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.werken.saxpath.XPathLexer
statement code is: XPathLexer xPathLexer = new XPathLexer("|bx]PxVClD]R?A")
statement is: at()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token at = xPathLexer.at()
statement is: nextToken()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token nextToken = xPathLexer.nextToken()
test data is: XPathLexer xPathLexer = new XPathLexer("|bx]PxVClD]R?A");
xPathLexer.at();
xPathLexer.nextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XPathLexer xPathLexer = new XPathLexer("|bx]PxVClD]R?A");
        xPathLexer.at();
        xPathLexer.nextToken();
        // Improved test data:
        XPathLexer xPathLexer = new XPathLexer("/book/author[position()=1]/first-name");
        xPathLexer.at();
        xPathLexer.nextToken();
    }
}
statement is: XPathLexer xPathLexer = new XPathLexer("|bx]PxVClD]R?A"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xPathLexer.at(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.at() target is: xPathLexer method is: at()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: at()Lcom/werken/saxpath/Token;
statement is: xPathLexer.nextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.nextToken() target is: xPathLexer method is: nextToken()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: nextToken()Lcom/werken/saxpath/Token;
statement is: // Improved test data:
XPathLexer xPathLexer = new XPathLexer("/book/author[position()=1]/first-name"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xPathLexer.at(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.at() target is: xPathLexer method is: at()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 5
Matched Method is: at()Lcom/werken/saxpath/Token;
statement is: xPathLexer.nextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.nextToken() target is: xPathLexer method is: nextToken()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 5
Matched Method is: nextToken()Lcom/werken/saxpath/Token;
TestCase is: String string = "|bx]PxVClD]R?A";
XPathLexer xPathLexer = new XPathLexer(string);
((XPathLexer) string).at();
((XPathLexer) string).nextToken();
String string = "/book/author[position()=1]/first-name";
XPathLexer xPathLexer = new XPathLexer(string);
((XPathLexer) string).at();
((XPathLexer) string).nextToken();

statement is: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.werken.saxpath.XPathLexer
statement code is: XPathLexer xPathLexer = new XPathLexer("e<LUNO0D|")
statement is: nextToken()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token nextToken = xPathLexer.nextToken()
test data is: XPathLexer xPathLexer = new XPathLexer("e<LUNO0D|");
xPathLexer.nextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XPathLexer xPathLexer = new XPathLexer("e<LUNO0D|");
        xPathLexer.nextToken();
        // Changed the primitive values and Strings to more illustrative examples
        String input = "e<LUNO0D|";
        int i = 5;
        double d = 3.14;
        char c = 'a';
        String s = "hello";
    }
}
statement is: XPathLexer xPathLexer = new XPathLexer("e<LUNO0D|"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xPathLexer.nextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.nextToken() target is: xPathLexer method is: nextToken()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: nextToken()Lcom/werken/saxpath/Token;
statement is: // Changed the primitive values and Strings to more illustrative examples
String input = "e<LUNO0D|", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: int i = 5, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: double d = 3.14, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: char c = 'a', class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String s = "hello", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
* this is vulnerable: String string = "e<LUNO0D|"
* this is vulnerable: int _int = 5
* this is vulnerable: double _double = 3.14
* this is vulnerable: char _char = 'a'
* this is vulnerable: String string = "hello"
TestCase is: String string = "e<LUNO0D|";
XPathLexer xPathLexer = new XPathLexer(string);
((XPathLexer) string).nextToken();
String string = "e<LUNO0D|";
int _int = 5;
double _double = 3.14;
char _char = 'a';
String string = "hello";

statement is: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.werken.saxpath.XPathLexer
statement code is: XPathLexer xPathLexer = new XPathLexer("f]l.']LBO-7")
statement is: nextToken()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token nextToken = xPathLexer.nextToken()
test data is: XPathLexer xPathLexer = new XPathLexer("f]l.']LBO-7");
xPathLexer.nextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XPathLexer xPathLexer = new XPathLexer("//book[@price > 10 and @author='J.K. Rowling']");
        xPathLexer.nextToken();
    }
}
statement is: XPathLexer xPathLexer = new XPathLexer("//book[@price > 10 and @author='J.K. Rowling']"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xPathLexer.nextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.nextToken() target is: xPathLexer method is: nextToken()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: nextToken()Lcom/werken/saxpath/Token;
TestCase is: String string = "//book[@price > 10 and @author='J.K. Rowling']";
XPathLexer xPathLexer = new XPathLexer(string);
((XPathLexer) string).nextToken();

statement is: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.werken.saxpath.XPathLexer
statement code is: XPathLexer xPathLexer = new XPathLexer("q=^j{MY7l.g29;'1q")
statement is: setXPath(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: xPathLexer.setXPath("}h26-V)RL")
statement is: at()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token at = xPathLexer.at()
statement is: nextToken()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token nextToken = xPathLexer.nextToken()
test data is: XPathLexer xPathLexer = new XPathLexer("q=^j{MY7l.g29;'1q");
xPathLexer.setXPath("}h26-V)RL");
xPathLexer.at();
xPathLexer.nextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        xPathLexer.at();
        xPathLexer.nextToken();
    }
}
statement is: xPathLexer.at(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.at() target is: xPathLexer method is: at()
statement is: xPathLexer.nextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.nextToken() target is: xPathLexer method is: nextToken()
statement is: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.werken.saxpath.XPathLexer
statement code is: XPathLexer xPathLexer = new XPathLexer("q=^j{MY7l.g29;'1q")
statement is: leftBracket()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token leftBracket = xPathLexer.leftBracket()
statement is: dollar()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token dollar = xPathLexer.dollar()
statement is: consume()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: xPathLexer.consume()
statement is: nextToken()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token nextToken = xPathLexer.nextToken()
test data is: XPathLexer xPathLexer = new XPathLexer("q=^j{MY7l.g29;'1q");
xPathLexer.leftBracket();
xPathLexer.dollar();
xPathLexer.consume();
xPathLexer.nextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        xPathLexer.leftBracket();
        xPathLexer.dollar();
        xPathLexer.consume();
        xPathLexer.nextToken();
    }
}
statement is: xPathLexer.leftBracket(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.leftBracket() target is: xPathLexer method is: leftBracket()
statement is: xPathLexer.dollar(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.dollar() target is: xPathLexer method is: dollar()
statement is: xPathLexer.consume(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.consume() target is: xPathLexer method is: consume()
statement is: xPathLexer.nextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.nextToken() target is: xPathLexer method is: nextToken()
statement is: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.werken.saxpath.XPathLexer
statement code is: XPathLexer xPathLexer = new XPathLexer("k7qG>Br4")
statement is: nextToken()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token nextToken = xPathLexer.nextToken()
test data is: XPathLexer xPathLexer = new XPathLexer("k7qG>Br4");
xPathLexer.nextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XPathLexer xPathLexer = new XPathLexer("k7qG>Br4");
        xPathLexer.nextToken();
        // Change the input string to a more descriptive example
        String inputString = "//div[@id='content']/p[1]";
        XPathLexer lexer = new XPathLexer(inputString);
        lexer.nextToken();
    }
}
statement is: XPathLexer xPathLexer = new XPathLexer("k7qG>Br4"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xPathLexer.nextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.nextToken() target is: xPathLexer method is: nextToken()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: nextToken()Lcom/werken/saxpath/Token;
statement is: // Change the input string to a more descriptive example
String inputString = "//div[@id='content']/p[1]", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: XPathLexer lexer = new XPathLexer(inputString), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: lexer.nextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: lexer.nextToken() target is: lexer method is: nextToken()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 4
Matched Method is: nextToken()Lcom/werken/saxpath/Token;
TestCase is: String string = "k7qG>Br4";
XPathLexer xPathLexer = new XPathLexer(string);
((XPathLexer) string).nextToken();
String string = "//div[@id='content']/p[1]";
XPathLexer xPathLexer = new XPathLexer(string);
((XPathLexer) string).nextToken();

statement is: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.werken.saxpath.XPathLexer
statement code is: XPathLexer xPathLexer = new XPathLexer("q=^j{MY7l.g29;'1q")
statement is: comma()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token comma = xPathLexer.comma()
statement is: dots()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token dots = xPathLexer.dots()
statement is: equals()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token equals = xPathLexer.equals()
statement is: comma()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token comma = xPathLexer.comma()
statement is: leftBracket()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token leftBracket = xPathLexer.leftBracket()
statement is: comma()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token comma = xPathLexer.comma()
statement is: rightParen()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token rightParen = xPathLexer.rightParen()
statement is: colon()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token colon = xPathLexer.colon()
statement is: nextToken()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token nextToken = xPathLexer.nextToken()
test data is: XPathLexer xPathLexer = new XPathLexer("q=^j{MY7l.g29;'1q");
xPathLexer.comma();
xPathLexer.dots();
xPathLexer.equals();
xPathLexer.comma();
xPathLexer.leftBracket();
xPathLexer.comma();
xPathLexer.rightParen();
xPathLexer.colon();
xPathLexer.nextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XPathLexer xPathLexer = new XPathLexer("q=/j/g29/'1q");
        xPathLexer.comma();
        xPathLexer.dots();
        xPathLexer.equals();
        xPathLexer.comma();
        xPathLexer.leftBracket();
        xPathLexer.comma();
        xPathLexer.rightParen();
        xPathLexer.colon();
        xPathLexer.nextToken();
    }
}
statement is: XPathLexer xPathLexer = new XPathLexer("q=/j/g29/'1q"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xPathLexer.comma(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.comma() target is: xPathLexer method is: comma()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: comma()Lcom/werken/saxpath/Token;
statement is: xPathLexer.dots(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.dots() target is: xPathLexer method is: dots()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: dots()Lcom/werken/saxpath/Token;
statement is: xPathLexer.equals(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.equals() target is: xPathLexer method is: equals()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: equals()Lcom/werken/saxpath/Token;
statement is: xPathLexer.comma(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.comma() target is: xPathLexer method is: comma()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: comma()Lcom/werken/saxpath/Token;
statement is: xPathLexer.leftBracket(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.leftBracket() target is: xPathLexer method is: leftBracket()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: leftBracket()Lcom/werken/saxpath/Token;
statement is: xPathLexer.comma(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.comma() target is: xPathLexer method is: comma()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: comma()Lcom/werken/saxpath/Token;
statement is: xPathLexer.rightParen(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.rightParen() target is: xPathLexer method is: rightParen()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: rightParen()Lcom/werken/saxpath/Token;
statement is: xPathLexer.colon(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.colon() target is: xPathLexer method is: colon()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: colon()Lcom/werken/saxpath/Token;
statement is: xPathLexer.nextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.nextToken() target is: xPathLexer method is: nextToken()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: nextToken()Lcom/werken/saxpath/Token;
TestCase is: String string = "q=/j/g29/'1q";
XPathLexer xPathLexer = new XPathLexer(string);
((XPathLexer) string).comma();
((XPathLexer) string).dots();
((XPathLexer) string).equals();
((XPathLexer) string).comma();
((XPathLexer) string).leftBracket();
((XPathLexer) string).comma();
((XPathLexer) string).rightParen();
((XPathLexer) string).colon();
((XPathLexer) string).nextToken();

statement is: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.werken.saxpath.XPathLexer
statement code is: XPathLexer xPathLexer = new XPathLexer("n!J")
statement is: nextToken()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token nextToken = xPathLexer.nextToken()
test data is: XPathLexer xPathLexer = new XPathLexer("n!J");
xPathLexer.nextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XPathLexer xPathLexer = new XPathLexer("//div[@id='container']/ul/li[position()=last()]/a");
        xPathLexer.nextToken();
    }
}
statement is: XPathLexer xPathLexer = new XPathLexer("//div[@id='container']/ul/li[position()=last()]/a"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xPathLexer.nextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.nextToken() target is: xPathLexer method is: nextToken()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: nextToken()Lcom/werken/saxpath/Token;
TestCase is: String string = "//div[@id='container']/ul/li[position()=last()]/a";
XPathLexer xPathLexer = new XPathLexer(string);
((XPathLexer) string).nextToken();

statement is: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.werken.saxpath.XPathLexer
statement code is: XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.XPathLexer")
statement is: leftBracket()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token leftBracket = xPathLexer.leftBracket()
statement is: nextToken()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token nextToken = xPathLexer.nextToken()
test data is: XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.XPathLexer");
xPathLexer.leftBracket();
xPathLexer.nextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.XPathLexer");
        xPathLexer.leftBracket();
        xPathLexer.nextToken();// this line is not necessary as it only moves the lexer to the next token without consuming any characters

        // Improved test data
        String xPathExpression = "com.werken.saxpath.XPathLexer";
        xPathLexer.leftBracket();
        xPathLexer.nextToken();// this line is now necessary as it consumes the opening bracket of the XPath expression and moves the lexer to the next token }}

    }
}
statement is: XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.XPathLexer"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xPathLexer.leftBracket(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.leftBracket() target is: xPathLexer method is: leftBracket()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: leftBracket()Lcom/werken/saxpath/Token;
statement is: xPathLexer.nextToken()// this line is not necessary as it only moves the lexer to the next token without consuming any characters
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.nextToken()// this line is not necessary as it only moves the lexer to the next token without consuming any characters
 target is: xPathLexer method is: nextToken()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: nextToken()Lcom/werken/saxpath/Token;
statement is: // Improved test data
String xPathExpression = "com.werken.saxpath.XPathLexer", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: xPathLexer.leftBracket(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.leftBracket() target is: xPathLexer method is: leftBracket()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: leftBracket()Lcom/werken/saxpath/Token;
statement is: xPathLexer.nextToken()// this line is now necessary as it consumes the opening bracket of the XPath expression and moves the lexer to the next token }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.nextToken()// this line is now necessary as it consumes the opening bracket of the XPath expression and moves the lexer to the next token }}
 target is: xPathLexer method is: nextToken()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: nextToken()Lcom/werken/saxpath/Token;
* this is vulnerable: String string = "com.werken.saxpath.XPathLexer"
TestCase is: String string = "com.werken.saxpath.XPathLexer";
XPathLexer xPathLexer = new XPathLexer(string);
((XPathLexer) string).leftBracket();
((XPathLexer) string).nextToken();
String string = "com.werken.saxpath.XPathLexer";
((XPathLexer) string).leftBracket();
((XPathLexer) string).nextToken();

statement is: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.werken.saxpath.XPathLexer
statement code is: XPathLexer xPathLexer = new XPathLexer("q=^j{MY7l.g29;'1q")
statement is: nextToken()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token nextToken = xPathLexer.nextToken()
test data is: XPathLexer xPathLexer = new XPathLexer("q=^j{MY7l.g29;'1q");
xPathLexer.nextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        xPathLexer.nextToken();
        // Improved test data:
        xPathLexer = new XPathLexer("q=^j{1234567890-=+*/%!@#$%^&*()_+};'1q");
        xPathLexer.nextToken();
    }
}
statement is: xPathLexer.nextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.nextToken() target is: xPathLexer method is: nextToken()
statement is: // Improved test data:
xPathLexer = new XPathLexer("q=^j{1234567890-=+*/%!@#$%^&*()_+};'1q"), class spoon.support.reflect.code.CtAssignmentImpl
statement is: xPathLexer.nextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.nextToken() target is: xPathLexer method is: nextToken()
statement is: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.werken.saxpath.XPathLexer
statement code is: XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.XPathLexer")
statement is: leftParen()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token leftParen = xPathLexer.leftParen()
statement is: rightParen()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token rightParen = xPathLexer.rightParen()
statement is: plus()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token plus = xPathLexer.plus()
statement is: consume(I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: xPathLexer.consume(1)
statement is: dots()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token dots = xPathLexer.dots()
statement is: colon()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token colon = xPathLexer.colon()
statement is: nextToken()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token nextToken = xPathLexer.nextToken()
test data is: XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.XPathLexer");
xPathLexer.leftParen();
xPathLexer.rightParen();
xPathLexer.plus();
xPathLexer.consume(1);
xPathLexer.dots();
xPathLexer.colon();
xPathLexer.nextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
    }
}
statement is: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.werken.saxpath.XPathLexer
statement code is: XPathLexer xPathLexer = new XPathLexer("s2")
statement is: nextToken()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token nextToken = xPathLexer.nextToken()
test data is: XPathLexer xPathLexer = new XPathLexer("s2");
xPathLexer.nextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XPathLexer xPathLexer = new XPathLexer("//div[@class='container']/p[contains(text(), 'hello')]");
        xPathLexer.nextToken();
    }
}
statement is: XPathLexer xPathLexer = new XPathLexer("//div[@class='container']/p[contains(text(), 'hello')]"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xPathLexer.nextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.nextToken() target is: xPathLexer method is: nextToken()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: nextToken()Lcom/werken/saxpath/Token;
TestCase is: String string = "//div[@class='container']/p[contains(text(), 'hello')]";
XPathLexer xPathLexer = new XPathLexer(string);
((XPathLexer) string).nextToken();

statement is: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.werken.saxpath.XPathLexer
statement code is: XPathLexer xPathLexer = new XPathLexer("tLgWN@XN<'")
statement is: nextToken()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token nextToken = xPathLexer.nextToken()
test data is: XPathLexer xPathLexer = new XPathLexer("tLgWN@XN<'");
xPathLexer.nextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XPathLexer xPathLexer = new XPathLexer("tLgWN@XN<'");
        xPathLexer.nextToken();
        // The provided code fragment is using a hardcoded string to create an instance of the XPathLexer class.
        // To make the data more descriptive and representative of the situation being tested, we can replace the hardcoded string with a variable that takes on different values.
        String[] inputStrings = new String[]{ "tLgWN@XN<'", "tLgWN@XN<", "tLgWN@XN=", "tLgWN@XN>=" };
        for (String input : inputStrings) {
            XPathLexer xPathLexer = new XPathLexer(input);
            xPathLexer.nextToken();
        }
        // We can also use more descriptive variable names to make the code more readable and maintainable. }}
    }
}
statement is: XPathLexer xPathLexer = new XPathLexer("tLgWN@XN<'"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xPathLexer.nextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.nextToken() target is: xPathLexer method is: nextToken()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: nextToken()Lcom/werken/saxpath/Token;
statement is: // The provided code fragment is using a hardcoded string to create an instance of the XPathLexer class.
// To make the data more descriptive and representative of the situation being tested, we can replace the hardcoded string with a variable that takes on different values.
String[] inputStrings = new String[]{ "tLgWN@XN<'", "tLgWN@XN<", "tLgWN@XN=", "tLgWN@XN>=" }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
statement is: for (String input : inputStrings) {
    XPathLexer xPathLexer = new XPathLexer(input);
    xPathLexer.nextToken();
}, class spoon.support.reflect.code.CtForEachImpl
statement is: // We can also use more descriptive variable names to make the code more readable and maintainable. }}, class spoon.support.reflect.code.CtCommentImpl
TestCase is: String string = "tLgWN@XN<'";
XPathLexer xPathLexer = new XPathLexer(string);
((XPathLexer) string).nextToken();

statement is: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.werken.saxpath.XPathLexer
statement code is: XPathLexer xPathLexer = new XPathLexer("u&HSr1")
statement is: nextToken()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token nextToken = xPathLexer.nextToken()
test data is: XPathLexer xPathLexer = new XPathLexer("u&HSr1");
xPathLexer.nextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        String[] inputStrings = new String[]{ "u&HSr1", "u&HSr2", "u&HSr3" };
    }
}
statement is: String[] inputStrings = new String[]{ "u&HSr1", "u&HSr2", "u&HSr3" }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
statement is: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.werken.saxpath.XPathLexer
statement code is: XPathLexer xPathLexer = new XPathLexer("v\"R-PGkiC LT=*iTw")
statement is: nextToken()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token nextToken = xPathLexer.nextToken()
test data is: XPathLexer xPathLexer = new XPathLexer("v\"R-PGkiC LT=*iTw");
xPathLexer.nextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XPathLexer xPathLexer = new XPathLexer("v\"R-PGkiC LT=*iTw\u007f");
        Token token = xPathLexer.nextToken();
        assertEquals(token.getType(), VARIABLE);
        assertEquals(token.getValue(), "v");
        xPathLexer = new XPathLexer("\"R-PGkiC LT=*iTw\u007f");
        token = xPathLexer.nextToken();
        assertEquals(token.getType(), STRING);
        assertEquals(token.getValue(), "R-PGkiC LT=*iTw");
    }
}
statement is: XPathLexer xPathLexer = new XPathLexer("v\"R-PGkiC LT=*iTw\u007f"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Token token = xPathLexer.nextToken(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.nextToken() target is: xPathLexer method is: nextToken()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: nextToken()Lcom/werken/saxpath/Token;
statement is: assertEquals(token.getType(), VARIABLE), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(token.getType(), VARIABLE) target is:  method is: assertEquals(<unknown>,<unknown>)
statement is: assertEquals(token.getValue(), "v"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(token.getValue(), "v") target is:  method is: assertEquals(<unknown>,java.lang.String)
statement is: xPathLexer = new XPathLexer("\"R-PGkiC LT=*iTw\u007f"), class spoon.support.reflect.code.CtAssignmentImpl
statement is: token = xPathLexer.nextToken(), class spoon.support.reflect.code.CtAssignmentImpl
statement is: assertEquals(token.getType(), STRING), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(token.getType(), STRING) target is:  method is: assertEquals(<unknown>,<unknown>)
statement is: assertEquals(token.getValue(), "R-PGkiC LT=*iTw"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(token.getValue(), "R-PGkiC LT=*iTw") target is:  method is: assertEquals(<unknown>,java.lang.String)
TestCase is: String string = "v\"R-PGkiC LT=*iTw";
XPathLexer xPathLexer = new XPathLexer(string);
((XPathLexer) string).nextToken();

statement is: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.werken.saxpath.XPathLexer
statement code is: XPathLexer xPathLexer = new XPathLexer("wK3WT4j")
statement is: nextToken()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token nextToken = xPathLexer.nextToken()
test data is: XPathLexer xPathLexer = new XPathLexer("wK3WT4j");
xPathLexer.nextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XPathLexer xPathLexer = new XPathLexer("1+2*3-4/5");
        xPathLexer.nextToken();
        // Improved test data
        int a = 1;
        int b = 2;
        int c = 3;
        int d = 4;
        int e = 5;
        String xpathExpression = "wK3WT4j";
    }
}
statement is: XPathLexer xPathLexer = new XPathLexer("1+2*3-4/5"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xPathLexer.nextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.nextToken() target is: xPathLexer method is: nextToken()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: nextToken()Lcom/werken/saxpath/Token;
statement is: // Improved test data
int a = 1, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: int b = 2, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: int c = 3, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: int d = 4, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: int e = 5, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String xpathExpression = "wK3WT4j", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
* this is vulnerable: int _int = 1
* this is vulnerable: int _int = 2
* this is vulnerable: int _int = 3
* this is vulnerable: int _int = 4
* this is vulnerable: int _int = 5
* this is vulnerable: String string = "wK3WT4j"
TestCase is: String string = "1+2*3-4/5";
XPathLexer xPathLexer = new XPathLexer(string);
((XPathLexer) string).nextToken();
int _int = 1;
int _int = 2;
int _int = 3;
int _int = 4;
int _int = 5;
String string = "wK3WT4j";

statement is: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.werken.saxpath.XPathLexer
statement code is: XPathLexer xPathLexer = new XPathLexer("Nx|H'l\u0001th=<c^B1S]")
statement is: not()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token not = xPathLexer.not()
statement is: nextToken()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token nextToken = xPathLexer.nextToken()
test data is: XPathLexer xPathLexer = new XPathLexer("Nx|H'l\u0001th=<c^B1S]");
xPathLexer.not();
xPathLexer.nextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XPathLexer xPathLexer = new XPathLexer("Nx|H\'l\u0001th=<c^B1S]");
        xPathLexer.not();
        xPathLexer.nextToken();
    }
}
statement is: XPathLexer xPathLexer = new XPathLexer("Nx|H\'l\u0001th=<c^B1S]"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xPathLexer.not(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.not() target is: xPathLexer method is: not()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: not()Lcom/werken/saxpath/Token;
statement is: xPathLexer.nextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.nextToken() target is: xPathLexer method is: nextToken()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: nextToken()Lcom/werken/saxpath/Token;
TestCase is: String string = "Nx|H'l\u0001th=<c^B1S]";
XPathLexer xPathLexer = new XPathLexer(string);
((XPathLexer) string).not();
((XPathLexer) string).nextToken();

statement is: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.werken.saxpath.XPathLexer
statement code is: XPathLexer xPathLexer = new XPathLexer("yS>TKm>&ZvN;Z]BY(")
statement is: nextToken()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token nextToken = xPathLexer.nextToken()
test data is: XPathLexer xPathLexer = new XPathLexer("yS>TKm>&ZvN;Z]BY(");
xPathLexer.nextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
    }
}
statement is: com.werken.saxpath.XPathLexer()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.werken.saxpath.XPathLexer
statement code is: XPathLexer xPathLexer = new XPathLexer()
statement is: setXPath(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: xPathLexer.setXPath("Tzns0k_f")
statement is: star()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token star = xPathLexer.star()
statement is: nextToken()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token nextToken = xPathLexer.nextToken()
test data is: XPathLexer xPathLexer = new XPathLexer();
xPathLexer.setXPath("Tzns0k_f");
xPathLexer.star();
xPathLexer.nextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XPathLexer xPathLexer = new XPathLexer();
        xPathLexer.setXPath("/book/title");
        xPathLexer.star();
        xPathLexer.nextToken();
    }
}
statement is: XPathLexer xPathLexer = new XPathLexer(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xPathLexer.setXPath("/book/title"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.setXPath("/book/title") target is: xPathLexer method is: setXPath(java.lang.String)
source statement: com.werken.saxpath.XPathLexer()V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 0
Matched Method is: setXPath(Ljava/lang/String;)V
statement is: xPathLexer.star(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.star() target is: xPathLexer method is: star()
source statement: com.werken.saxpath.XPathLexer()V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 0
Matched Method is: star()Lcom/werken/saxpath/Token;
statement is: xPathLexer.nextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.nextToken() target is: xPathLexer method is: nextToken()
source statement: com.werken.saxpath.XPathLexer()V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 0
Matched Method is: nextToken()Lcom/werken/saxpath/Token;
TestCase is: XPathLexer xPathLexer = new XPathLexer();
String string = "/book/title";
xPathLexer.setXPath(string);
xPathLexer.star();
xPathLexer.nextToken();

statement is: com.werken.saxpath.XPathLexer()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.werken.saxpath.XPathLexer
statement code is: XPathLexer xPathLexer = new XPathLexer()
statement is: nextToken()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token nextToken = xPathLexer.nextToken()
test data is: XPathLexer xPathLexer = new XPathLexer();
xPathLexer.nextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XPathLexer xPathLexer = new XPathLexer();
        xPathLexer.nextToken();
        // Improved test data
        xPathLexer = new XPathLexer("//book[@price > 25 and @author='Jane Doe']");
        xPathLexer = new XPathLexer("//book[contains(@author,'Jane')]");
        xPathLexer = new XPathLexer("//book[@price < 10 or @price > 25]");
    }
}
statement is: XPathLexer xPathLexer = new XPathLexer(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xPathLexer.nextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.nextToken() target is: xPathLexer method is: nextToken()
source statement: com.werken.saxpath.XPathLexer()V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 0
Matched Method is: nextToken()Lcom/werken/saxpath/Token;
statement is: // Improved test data
xPathLexer = new XPathLexer("//book[@price > 25 and @author='Jane Doe']"), class spoon.support.reflect.code.CtAssignmentImpl
statement is: xPathLexer = new XPathLexer("//book[contains(@author,'Jane')]"), class spoon.support.reflect.code.CtAssignmentImpl
statement is: xPathLexer = new XPathLexer("//book[@price < 10 or @price > 25]"), class spoon.support.reflect.code.CtAssignmentImpl
TestCase is: XPathLexer xPathLexer = new XPathLexer();
xPathLexer.nextToken();

statement is: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.werken.saxpath.XPathLexer
statement code is: XPathLexer xPathLexer = new XPathLexer("K.!=D")
statement is: rightParen()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token rightParen = xPathLexer.rightParen()
statement is: comma()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token comma = xPathLexer.comma()
statement is: nextToken()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token nextToken = xPathLexer.nextToken()
test data is: XPathLexer xPathLexer = new XPathLexer("K.!=D");
xPathLexer.rightParen();
xPathLexer.comma();
xPathLexer.nextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XPathLexer xPathLexer = new XPathLexer("K.!=D");
        xPathLexer.rightParen();
        xPathLexer.comma();
        xPathLexer.nextToken();
    }
}
statement is: XPathLexer xPathLexer = new XPathLexer("K.!=D"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xPathLexer.rightParen(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.rightParen() target is: xPathLexer method is: rightParen()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: rightParen()Lcom/werken/saxpath/Token;
statement is: xPathLexer.comma(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.comma() target is: xPathLexer method is: comma()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: comma()Lcom/werken/saxpath/Token;
statement is: xPathLexer.nextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.nextToken() target is: xPathLexer method is: nextToken()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: nextToken()Lcom/werken/saxpath/Token;
TestCase is: String string = "K.!=D";
XPathLexer xPathLexer = new XPathLexer(string);
((XPathLexer) string).rightParen();
((XPathLexer) string).comma();
((XPathLexer) string).nextToken();

statement is: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.werken.saxpath.XPathLexer
statement code is: XPathLexer xPathLexer = new XPathLexer("q=^j{MY7l.g29;'1q")
statement is: leftBracket()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token leftBracket = xPathLexer.leftBracket()
statement is: setPreviousToken(Lcom/werken/saxpath/Token;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: xPathLexer.setPreviousToken(arg0)
statement is: identifierOrOperatorName()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token identifierOrOperatorName = xPathLexer.identifierOrOperatorName()
test data is: XPathLexer xPathLexer = new XPathLexer("q=^j{MY7l.g29;'1q");
Token leftBracket = xPathLexer.leftBracket();
xPathLexer.setPreviousToken(leftBracket);
xPathLexer.identifierOrOperatorName();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Token leftBracket = xPathLexer.leftBracket();
        xPathLexer.setPreviousToken(leftBracket);
        xPathLexer.identifierOrOperatorName();
    }
}
statement is: Token leftBracket = xPathLexer.leftBracket(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.leftBracket() target is: xPathLexer method is: leftBracket()
statement is: xPathLexer.setPreviousToken(leftBracket), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.setPreviousToken(leftBracket) target is: xPathLexer method is: setPreviousToken(Token)
statement is: xPathLexer.identifierOrOperatorName(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.identifierOrOperatorName() target is: xPathLexer method is: identifierOrOperatorName()
statement is: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.werken.saxpath.XPathLexer
statement code is: XPathLexer xPathLexer = new XPathLexer("GpE:'Fi?")
statement is: at()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token at = xPathLexer.at()
statement is: setPreviousToken(Lcom/werken/saxpath/Token;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: xPathLexer.setPreviousToken(arg0)
statement is: identifierOrOperatorName()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token identifierOrOperatorName = xPathLexer.identifierOrOperatorName()
test data is: XPathLexer xPathLexer = new XPathLexer("GpE:'Fi?");
Token at = xPathLexer.at();
xPathLexer.setPreviousToken(at);
xPathLexer.identifierOrOperatorName();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XPathLexer xPathLexer = new XPathLexer("GpE:'Fi?");
        Token at = xPathLexer.at();
        xPathLexer.setPreviousToken(at);
        xPathLexer.identifierOrOperatorName();
    }
}
statement is: XPathLexer xPathLexer = new XPathLexer("GpE:'Fi?"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Token at = xPathLexer.at(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.at() target is: xPathLexer method is: at()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: at()Lcom/werken/saxpath/Token;
statement is: xPathLexer.setPreviousToken(at), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.setPreviousToken(at) target is: xPathLexer method is: setPreviousToken(Token)
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: setPreviousToken(Lcom/werken/saxpath/Token;)V
statement is: xPathLexer.identifierOrOperatorName(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.identifierOrOperatorName() target is: xPathLexer method is: identifierOrOperatorName()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: identifierOrOperatorName()Lcom/werken/saxpath/Token;
TestCase is: String string = "GpE:'Fi?";
XPathLexer xPathLexer = new XPathLexer(string);
Token at = ((XPathLexer) string).at();
((XPathLexer) string).setPreviousToken(at);
((XPathLexer) string).identifierOrOperatorName();

statement is: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.werken.saxpath.XPathLexer
statement code is: XPathLexer xPathLexer = new XPathLexer("9:BNn,")
statement is: minus()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token minus = xPathLexer.minus()
statement is: nextToken()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token nextToken = xPathLexer.nextToken()
statement is: identifierOrOperatorName()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token identifierOrOperatorName = xPathLexer.identifierOrOperatorName()
test data is: XPathLexer xPathLexer = new XPathLexer("9:BNn,");
xPathLexer.minus();
xPathLexer.nextToken();
xPathLexer.identifierOrOperatorName();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XPathLexer xPathLexer = new XPathLexer("10:BookName,");
        xPathLexer.minus();
        xPathLexer.nextToken();
        xPathLexer.identifierOrOperatorName();
        // Improved test data
        XPathLexer xPathLexer = new XPathLexer("10:BookName,");
        xPathLexer.minus();
        xPathLexer.nextToken();
        xPathLexer.identifierOrOperatorName();
    }
}
statement is: XPathLexer xPathLexer = new XPathLexer("10:BookName,"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xPathLexer.minus(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.minus() target is: xPathLexer method is: minus()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: minus()Lcom/werken/saxpath/Token;
statement is: xPathLexer.nextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.nextToken() target is: xPathLexer method is: nextToken()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: nextToken()Lcom/werken/saxpath/Token;
statement is: xPathLexer.identifierOrOperatorName(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.identifierOrOperatorName() target is: xPathLexer method is: identifierOrOperatorName()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: identifierOrOperatorName()Lcom/werken/saxpath/Token;
statement is: // Improved test data
XPathLexer xPathLexer = new XPathLexer("10:BookName,"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xPathLexer.minus(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.minus() target is: xPathLexer method is: minus()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 6
Matched Method is: minus()Lcom/werken/saxpath/Token;
statement is: xPathLexer.nextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.nextToken() target is: xPathLexer method is: nextToken()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 6
Matched Method is: nextToken()Lcom/werken/saxpath/Token;
statement is: xPathLexer.identifierOrOperatorName(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.identifierOrOperatorName() target is: xPathLexer method is: identifierOrOperatorName()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 6
Matched Method is: identifierOrOperatorName()Lcom/werken/saxpath/Token;
TestCase is: String string = "10:BookName,";
XPathLexer xPathLexer = new XPathLexer(string);
((XPathLexer) string).minus();
((XPathLexer) string).nextToken();
((XPathLexer) string).identifierOrOperatorName();
String string = "10:BookName,";
XPathLexer xPathLexer = new XPathLexer(string);
((XPathLexer) string).minus();
((XPathLexer) string).nextToken();
((XPathLexer) string).identifierOrOperatorName();

statement is: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.werken.saxpath.XPathLexer
statement code is: XPathLexer xPathLexer = new XPathLexer("/iD<K -Ba2IVWS")
statement is: doubleColon()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token doubleColon = xPathLexer.doubleColon()
statement is: setPreviousToken(Lcom/werken/saxpath/Token;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: xPathLexer.setPreviousToken(arg0)
statement is: nextToken()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token nextToken = xPathLexer.nextToken()
test data is: XPathLexer xPathLexer = new XPathLexer("/iD<K -Ba2IVWS");
Token doubleColon = xPathLexer.doubleColon();
xPathLexer.setPreviousToken(doubleColon);
xPathLexer.nextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XPathLexer xPathLexer = new XPathLexer("//iD <K -Ba2IVWS");
        Token doubleColon = xPathLexer.doubleColon();
        xPathLexer.setPreviousToken(doubleColon);
        xPathLexer.nextToken();
    }
}
statement is: XPathLexer xPathLexer = new XPathLexer("//iD <K -Ba2IVWS"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Token doubleColon = xPathLexer.doubleColon(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.doubleColon() target is: xPathLexer method is: doubleColon()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: doubleColon()Lcom/werken/saxpath/Token;
statement is: xPathLexer.setPreviousToken(doubleColon), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.setPreviousToken(doubleColon) target is: xPathLexer method is: setPreviousToken(Token)
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: setPreviousToken(Lcom/werken/saxpath/Token;)V
statement is: xPathLexer.nextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.nextToken() target is: xPathLexer method is: nextToken()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: nextToken()Lcom/werken/saxpath/Token;
TestCase is: String string = "//iD <K -Ba2IVWS";
XPathLexer xPathLexer = new XPathLexer(string);
Token doubleColon = ((XPathLexer) string).doubleColon();
((XPathLexer) string).setPreviousToken(doubleColon);
((XPathLexer) string).nextToken();

statement is: com.werken.saxpath.XPathLexer()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.werken.saxpath.XPathLexer
statement code is: XPathLexer xPathLexer = new XPathLexer()
statement is: notEquals()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token notEquals = xPathLexer.notEquals()
statement is: setPreviousToken(Lcom/werken/saxpath/Token;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: xPathLexer.setPreviousToken(arg0)
statement is: identifierOrOperatorName()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token identifierOrOperatorName = xPathLexer.identifierOrOperatorName()
test data is: XPathLexer xPathLexer = new XPathLexer();
Token notEquals = xPathLexer.notEquals();
xPathLexer.setPreviousToken(notEquals);
xPathLexer.identifierOrOperatorName();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XPathLexer xPathLexer = new XPathLexer();
        Token notEquals = xPathLexer.notEquals();
        xPathLexer.setPreviousToken(notEquals);
        xPathLexer.identifierOrOperatorName("!=");
    }
}
statement is: XPathLexer xPathLexer = new XPathLexer(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Token notEquals = xPathLexer.notEquals(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.notEquals() target is: xPathLexer method is: notEquals()
source statement: com.werken.saxpath.XPathLexer()V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 0
Matched Method is: notEquals()Lcom/werken/saxpath/Token;
statement is: xPathLexer.setPreviousToken(notEquals), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.setPreviousToken(notEquals) target is: xPathLexer method is: setPreviousToken(Token)
source statement: com.werken.saxpath.XPathLexer()V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 0
Matched Method is: setPreviousToken(Lcom/werken/saxpath/Token;)V
statement is: xPathLexer.identifierOrOperatorName("!="), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.identifierOrOperatorName("!=") target is: xPathLexer method is: identifierOrOperatorName(java.lang.String)
TestCase is: XPathLexer xPathLexer = new XPathLexer();
Token notEquals = xPathLexer.notEquals();
xPathLexer.setPreviousToken(notEquals);

statement is: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.werken.saxpath.XPathLexer
statement code is: XPathLexer xPathLexer = new XPathLexer("VU$yO")
statement is: doubleColon()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token doubleColon = xPathLexer.doubleColon()
statement is: nextToken()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token nextToken = xPathLexer.nextToken()
statement is: identifierOrOperatorName()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token identifierOrOperatorName = xPathLexer.identifierOrOperatorName()
test data is: XPathLexer xPathLexer = new XPathLexer("VU$yO");
xPathLexer.doubleColon();
xPathLexer.nextToken();
xPathLexer.identifierOrOperatorName();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XPathLexer xPathLexer = new XPathLexer("VU$yO");
        xPathLexer.doubleColon();
        xPathLexer.nextToken();
        xPathLexer.identifierOrOperatorName();
    }
}
statement is: XPathLexer xPathLexer = new XPathLexer("VU$yO"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xPathLexer.doubleColon(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.doubleColon() target is: xPathLexer method is: doubleColon()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: doubleColon()Lcom/werken/saxpath/Token;
statement is: xPathLexer.nextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.nextToken() target is: xPathLexer method is: nextToken()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: nextToken()Lcom/werken/saxpath/Token;
statement is: xPathLexer.identifierOrOperatorName(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.identifierOrOperatorName() target is: xPathLexer method is: identifierOrOperatorName()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: identifierOrOperatorName()Lcom/werken/saxpath/Token;
TestCase is: String string = "VU$yO";
XPathLexer xPathLexer = new XPathLexer(string);
((XPathLexer) string).doubleColon();
((XPathLexer) string).nextToken();
((XPathLexer) string).identifierOrOperatorName();

statement is: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.werken.saxpath.XPathLexer
statement code is: XPathLexer xPathLexer = new XPathLexer(".'E2T'")
statement is: dollar()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token dollar = xPathLexer.dollar()
statement is: nextToken()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token nextToken = xPathLexer.nextToken()
statement is: identifierOrOperatorName()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token identifierOrOperatorName = xPathLexer.identifierOrOperatorName()
test data is: XPathLexer xPathLexer = new XPathLexer(".'E2T'");
xPathLexer.dollar();
xPathLexer.nextToken();
xPathLexer.identifierOrOperatorName();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XPathLexer xPathLexer = new XPathLexer(".'E2T'");
        xPathLexer.dollar();
        xPathLexer.nextToken();
        xPathLexer.identifierOrOperatorName();
        // Improved test data:
        XPathLexer xPathLexer = new XPathLexer(".'E2T'");
        xPathLexer.dollar();
        xPathLexer.nextToken();
        xPathLexer.identifierOrOperatorName();
        // Changed the primitive values and Strings to more descriptive examples:
        XPathLexer xPathLexer = new XPathLexer(".'E2T'");
        xPathLexer.dollar();
        xPathLexer.nextToken();
        xPathLexer.identifierOrOperatorName("test");
    }
}
statement is: XPathLexer xPathLexer = new XPathLexer(".'E2T'"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xPathLexer.dollar(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.dollar() target is: xPathLexer method is: dollar()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: dollar()Lcom/werken/saxpath/Token;
statement is: xPathLexer.nextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.nextToken() target is: xPathLexer method is: nextToken()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: nextToken()Lcom/werken/saxpath/Token;
statement is: xPathLexer.identifierOrOperatorName(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.identifierOrOperatorName() target is: xPathLexer method is: identifierOrOperatorName()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: identifierOrOperatorName()Lcom/werken/saxpath/Token;
statement is: // Improved test data:
XPathLexer xPathLexer = new XPathLexer(".'E2T'"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xPathLexer.dollar(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.dollar() target is: xPathLexer method is: dollar()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 6
Matched Method is: dollar()Lcom/werken/saxpath/Token;
statement is: xPathLexer.nextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.nextToken() target is: xPathLexer method is: nextToken()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 6
Matched Method is: nextToken()Lcom/werken/saxpath/Token;
statement is: xPathLexer.identifierOrOperatorName(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.identifierOrOperatorName() target is: xPathLexer method is: identifierOrOperatorName()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 6
Matched Method is: identifierOrOperatorName()Lcom/werken/saxpath/Token;
statement is: // Changed the primitive values and Strings to more descriptive examples:
XPathLexer xPathLexer = new XPathLexer(".'E2T'"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xPathLexer.dollar(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.dollar() target is: xPathLexer method is: dollar()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 11
Matched Method is: dollar()Lcom/werken/saxpath/Token;
statement is: xPathLexer.nextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.nextToken() target is: xPathLexer method is: nextToken()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 11
Matched Method is: nextToken()Lcom/werken/saxpath/Token;
statement is: xPathLexer.identifierOrOperatorName("test"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.identifierOrOperatorName("test") target is: xPathLexer method is: identifierOrOperatorName(java.lang.String)
TestCase is: String string = ".'E2T'";
XPathLexer xPathLexer = new XPathLexer(string);
((XPathLexer) string).dollar();
((XPathLexer) string).nextToken();
((XPathLexer) string).identifierOrOperatorName();
String string = ".'E2T'";
XPathLexer xPathLexer = new XPathLexer(string);
((XPathLexer) string).dollar();
((XPathLexer) string).nextToken();
((XPathLexer) string).identifierOrOperatorName();
String string = ".'E2T'";
XPathLexer xPathLexer = new XPathLexer(string);
((XPathLexer) string).dollar();
((XPathLexer) string).nextToken();

statement is: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.werken.saxpath.XPathLexer
statement code is: XPathLexer xPathLexer = new XPathLexer(",j!V9")
statement is: nextToken()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token nextToken = xPathLexer.nextToken()
statement is: nextToken()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token nextToken = xPathLexer.nextToken()
test data is: XPathLexer xPathLexer = new XPathLexer(",j!V9");
xPathLexer.nextToken();
xPathLexer.nextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XPathLexer xPathLexer = new XPathLexer("//div[@id='foo']");
        xPathLexer.nextToken();
        xPathLexer.nextToken();
    }
}
statement is: XPathLexer xPathLexer = new XPathLexer("//div[@id='foo']"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xPathLexer.nextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.nextToken() target is: xPathLexer method is: nextToken()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: nextToken()Lcom/werken/saxpath/Token;
statement is: xPathLexer.nextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.nextToken() target is: xPathLexer method is: nextToken()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: nextToken()Lcom/werken/saxpath/Token;
TestCase is: String string = "//div[@id='foo']";
XPathLexer xPathLexer = new XPathLexer(string);
((XPathLexer) string).nextToken();
((XPathLexer) string).nextToken();

statement is: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.werken.saxpath.XPathLexer
statement code is: XPathLexer xPathLexer = new XPathLexer("q=^j{MY7l.g29;'1q")
statement is: leftBracket()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token leftBracket = xPathLexer.leftBracket()
statement is: dots()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token dots = xPathLexer.dots()
statement is: rightBracket()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token rightBracket = xPathLexer.rightBracket()
statement is: at()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token at = xPathLexer.at()
statement is: nextToken()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token nextToken = xPathLexer.nextToken()
statement is: identifierOrOperatorName()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token identifierOrOperatorName = xPathLexer.identifierOrOperatorName()
test data is: XPathLexer xPathLexer = new XPathLexer("q=^j{MY7l.g29;'1q");
xPathLexer.leftBracket();
xPathLexer.dots();
xPathLexer.rightBracket();
xPathLexer.at();
xPathLexer.nextToken();
xPathLexer.identifierOrOperatorName();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        xPathLexer.leftBracket();
        xPathLexer.dots();
        xPathLexer.rightBracket();
        xPathLexer.at();
        xPathLexer.nextToken();
        xPathLexer.identifierOrOperatorName();
    }
}
statement is: xPathLexer.leftBracket(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.leftBracket() target is: xPathLexer method is: leftBracket()
statement is: xPathLexer.dots(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.dots() target is: xPathLexer method is: dots()
statement is: xPathLexer.rightBracket(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.rightBracket() target is: xPathLexer method is: rightBracket()
statement is: xPathLexer.at(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.at() target is: xPathLexer method is: at()
statement is: xPathLexer.nextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.nextToken() target is: xPathLexer method is: nextToken()
statement is: xPathLexer.identifierOrOperatorName(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.identifierOrOperatorName() target is: xPathLexer method is: identifierOrOperatorName()
statement is: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.werken.saxpath.XPathLexer
statement code is: XPathLexer xPathLexer = new XPathLexer("BaU")
statement is: slashes()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token slashes = xPathLexer.slashes()
statement is: operatorName()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token operatorName = xPathLexer.operatorName()
test data is: XPathLexer xPathLexer = new XPathLexer("BaU");
xPathLexer.slashes();
xPathLexer.operatorName();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XPathLexer xPathLexer = new XPathLexer("//*[@id='main']/h1");
        xPathLexer.slashes();
        xPathLexer.operatorName();
    }
}
statement is: XPathLexer xPathLexer = new XPathLexer("//*[@id='main']/h1"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xPathLexer.slashes(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.slashes() target is: xPathLexer method is: slashes()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: slashes()Lcom/werken/saxpath/Token;
statement is: xPathLexer.operatorName(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.operatorName() target is: xPathLexer method is: operatorName()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: operatorName()Lcom/werken/saxpath/Token;
TestCase is: String string = "//*[@id='main']/h1";
XPathLexer xPathLexer = new XPathLexer(string);
((XPathLexer) string).slashes();
((XPathLexer) string).operatorName();

statement is: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.werken.saxpath.XPathLexer
statement code is: XPathLexer xPathLexer = new XPathLexer("-d-,db.xE:|?{#")
statement is: dots()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token dots = xPathLexer.dots()
statement is: operatorName()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token operatorName = xPathLexer.operatorName()
test data is: XPathLexer xPathLexer = new XPathLexer("-d-,db.xE:|?{#");
xPathLexer.dots();
xPathLexer.operatorName();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XPathLexer xPathLexer = new XPathLexer("db_name", "db.employees.salary");
        xPathLexer.dots();
        xPathLexer.operatorName();
    }
}
statement is: XPathLexer xPathLexer = new XPathLexer("db_name", "db.employees.salary"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xPathLexer.dots(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.dots() target is: xPathLexer method is: dots()
statement is: xPathLexer.operatorName(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.operatorName() target is: xPathLexer method is: operatorName()
statement is: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.werken.saxpath.XPathLexer
statement code is: XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.XPathLexer")
statement is: star()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token star = xPathLexer.star()
statement is: leftParen()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token leftParen = xPathLexer.leftParen()
statement is: operatorName()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token operatorName = xPathLexer.operatorName()
test data is: XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.XPathLexer");
xPathLexer.star();
xPathLexer.leftParen();
xPathLexer.operatorName();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.XPathLexer");
        xPathLexer.star();
        xPathLexer.leftParen();
        xPathLexer.operatorName("//div[@class='container']/span[@id='message']");
    }
}
statement is: XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.XPathLexer"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xPathLexer.star(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.star() target is: xPathLexer method is: star()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: star()Lcom/werken/saxpath/Token;
statement is: xPathLexer.leftParen(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.leftParen() target is: xPathLexer method is: leftParen()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: leftParen()Lcom/werken/saxpath/Token;
statement is: xPathLexer.operatorName("//div[@class='container']/span[@id='message']"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.operatorName("//div[@class='container']/span[@id='message']") target is: xPathLexer method is: operatorName(java.lang.String)
TestCase is: String string = "com.werken.saxpath.XPathLexer";
XPathLexer xPathLexer = new XPathLexer(string);
((XPathLexer) string).star();
((XPathLexer) string).leftParen();

statement is: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.werken.saxpath.XPathLexer
statement code is: XPathLexer xPathLexer = new XPathLexer("o%LSPo_nwNhA}F2SHk")
statement is: operatorName()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token operatorName = xPathLexer.operatorName()
test data is: XPathLexer xPathLexer = new XPathLexer("o%LSPo_nwNhA}F2SHk");
xPathLexer.operatorName();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        xPathLexer.operatorName();
    }
}
statement is: xPathLexer.operatorName(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.operatorName() target is: xPathLexer method is: operatorName()
statement is: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.werken.saxpath.XPathLexer
statement code is: XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.Token")
statement is: mod()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token mod = xPathLexer.mod()
test data is: XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.Token");
xPathLexer.mod();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.Token");
        xPathLexer.mod(13);
    }
}
statement is: XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.Token"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xPathLexer.mod(13), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.mod(13) target is: xPathLexer method is: mod(int)
TestCase is: String string = "com.werken.saxpath.Token";
XPathLexer xPathLexer = new XPathLexer(string);

statement is: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.werken.saxpath.XPathLexer
statement code is: XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.Token")
statement is: div()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token div = xPathLexer.div()
test data is: XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.Token");
xPathLexer.div();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.Token");
        xPathLexer.div(1234567890, "some_text", true);
    }
}
statement is: XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.Token"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xPathLexer.div(1234567890, "some_text", true), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.div(1234567890, "some_text", true) target is: xPathLexer method is: div(int,java.lang.String,boolean)
TestCase is: String string = "com.werken.saxpath.Token";
XPathLexer xPathLexer = new XPathLexer(string);

statement is: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.werken.saxpath.XPathLexer
statement code is: XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.Token")
statement is: and()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token and = xPathLexer.and()
test data is: XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.Token");
xPathLexer.and();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.Token");
        xPathLexer.and(new Token("firstName", "John"), new Token("lastName", "Doe"));
    }
}
statement is: XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.Token"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xPathLexer.and(new Token("firstName", "John"), new Token("lastName", "Doe")), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.and(new Token("firstName", "John"), new Token("lastName", "Doe")) target is: xPathLexer method is: and(Token,Token)
TestCase is: String string = "com.werken.saxpath.Token";
XPathLexer xPathLexer = new XPathLexer(string);

statement is: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.werken.saxpath.XPathLexer
statement code is: XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.Token")
statement is: leftBracket()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token leftBracket = xPathLexer.leftBracket()
statement is: not()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token not = xPathLexer.not()
statement is: or()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token or = xPathLexer.or()
test data is: XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.Token");
xPathLexer.leftBracket();
xPathLexer.not();
xPathLexer.or();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.Token");
        xPathLexer.leftBracket();
        xPathLexer.not();
        xPathLexer.or();
        // Changed the primitive values and Strings to more descriptive examples
        xPathLexer.leftBracket(new String("["));
        xPathLexer.not(new Integer(-1));
        xPathLexer.or(new Double(3.14));
    }
}
statement is: XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.Token"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xPathLexer.leftBracket(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.leftBracket() target is: xPathLexer method is: leftBracket()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: leftBracket()Lcom/werken/saxpath/Token;
statement is: xPathLexer.not(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.not() target is: xPathLexer method is: not()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: not()Lcom/werken/saxpath/Token;
statement is: xPathLexer.or(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.or() target is: xPathLexer method is: or()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: or()Lcom/werken/saxpath/Token;
statement is: // Changed the primitive values and Strings to more descriptive examples
xPathLexer.leftBracket(new String("[")), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Changed the primitive values and Strings to more descriptive examples
xPathLexer.leftBracket(new String("[")) target is: xPathLexer method is: leftBracket(java.lang.String)
statement is: xPathLexer.not(new Integer(-1)), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.not(new Integer(-1)) target is: xPathLexer method is: not(java.lang.Integer)
statement is: xPathLexer.or(new Double(3.14)), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.or(new Double(3.14)) target is: xPathLexer method is: or(java.lang.Double)
TestCase is: String string = "com.werken.saxpath.Token";
XPathLexer xPathLexer = new XPathLexer(string);
((XPathLexer) string).leftBracket();
((XPathLexer) string).not();
((XPathLexer) string).or();

statement is: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.werken.saxpath.XPathLexer
statement code is: XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.XPathLexer")
statement is: notEquals()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token notEquals = xPathLexer.notEquals()
statement is: slashes()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token slashes = xPathLexer.slashes()
statement is: number()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token number = xPathLexer.number()
test data is: XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.XPathLexer");
xPathLexer.notEquals();
xPathLexer.slashes();
xPathLexer.number();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.XPathLexer");
        xPathLexer.notEquals(5);
        xPathLexer.slashes("//book[@author='Jane Doe']");
        xPathLexer.number(3.14);
    }
}
statement is: XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.XPathLexer"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xPathLexer.notEquals(5), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.notEquals(5) target is: xPathLexer method is: notEquals(int)
statement is: xPathLexer.slashes("//book[@author='Jane Doe']"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.slashes("//book[@author='Jane Doe']") target is: xPathLexer method is: slashes(java.lang.String)
statement is: xPathLexer.number(3.14), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.number(3.14) target is: xPathLexer method is: number(double)
TestCase is: String string = "com.werken.saxpath.XPathLexer";
XPathLexer xPathLexer = new XPathLexer(string);

statement is: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.werken.saxpath.XPathLexer
statement code is: XPathLexer xPathLexer = new XPathLexer("/iD<K -Ba2IVWS")
statement is: number()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token number = xPathLexer.number()
test data is: XPathLexer xPathLexer = new XPathLexer("/iD<K -Ba2IVWS");
xPathLexer.number();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XPathLexer xPathLexer = new XPathLexer("//div[@id='main' -Ba2IVWS");
        xPathLexer.number();
    }
}
statement is: XPathLexer xPathLexer = new XPathLexer("//div[@id='main' -Ba2IVWS"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xPathLexer.number(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.number() target is: xPathLexer method is: number()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: number()Lcom/werken/saxpath/Token;
TestCase is: String string = "//div[@id='main' -Ba2IVWS";
XPathLexer xPathLexer = new XPathLexer(string);
((XPathLexer) string).number();

statement is: com.werken.saxpath.XPathLexer()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.werken.saxpath.XPathLexer
statement code is: XPathLexer xPathLexer = new XPathLexer()
statement is: whitespace()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token whitespace = xPathLexer.whitespace()
test data is: XPathLexer xPathLexer = new XPathLexer();
xPathLexer.whitespace();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XPathLexer xPathLexer = new XPathLexer();
        xPathLexer.whitespace(" \t\r\n");
    }
}
statement is: XPathLexer xPathLexer = new XPathLexer(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xPathLexer.whitespace(" \t\r\n"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.whitespace(" \t\r\n") target is: xPathLexer method is: whitespace(java.lang.String)
TestCase is: XPathLexer xPathLexer = new XPathLexer();

statement is: com.werken.saxpath.XPathLexer()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.werken.saxpath.XPathLexer
statement code is: XPathLexer xPathLexer = new XPathLexer()
statement is: setXPath(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: xPathLexer.setXPath(") (")
statement is: whitespace()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token whitespace = xPathLexer.whitespace()
test data is: XPathLexer xPathLexer = new XPathLexer();
xPathLexer.setXPath(") (");
xPathLexer.whitespace();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XPathLexer xPathLexer = new XPathLexer();
        xPathLexer.setXPath("//div[@class='container']/p[@id='description']");
        xPathLexer.whitespace();
    }
}
statement is: XPathLexer xPathLexer = new XPathLexer(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xPathLexer.setXPath("//div[@class='container']/p[@id='description']"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.setXPath("//div[@class='container']/p[@id='description']") target is: xPathLexer method is: setXPath(java.lang.String)
source statement: com.werken.saxpath.XPathLexer()V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 0
Matched Method is: setXPath(Ljava/lang/String;)V
statement is: xPathLexer.whitespace(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.whitespace() target is: xPathLexer method is: whitespace()
source statement: com.werken.saxpath.XPathLexer()V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 0
Matched Method is: whitespace()Lcom/werken/saxpath/Token;
TestCase is: XPathLexer xPathLexer = new XPathLexer();
String string = "//div[@class='container']/p[@id='description']";
xPathLexer.setXPath(string);
xPathLexer.whitespace();

statement is: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.werken.saxpath.XPathLexer
statement code is: XPathLexer xPathLexer = new XPathLexer("q=^j{MY7l.g29;'1q")
statement is: relationalOperator()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token relationalOperator = xPathLexer.relationalOperator()
test data is: XPathLexer xPathLexer = new XPathLexer("q=^j{MY7l.g29;'1q");
xPathLexer.relationalOperator();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        xPathLexer.relationalOperator();
    }
}
statement is: xPathLexer.relationalOperator(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.relationalOperator() target is: xPathLexer method is: relationalOperator()
statement is: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.werken.saxpath.XPathLexer
statement code is: XPathLexer xPathLexer = new XPathLexer("/.D<K -Ba2IVWS")
statement is: dots()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token dots = xPathLexer.dots()
test data is: XPathLexer xPathLexer = new XPathLexer("/.D<K -Ba2IVWS");
xPathLexer.dots();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XPathLexer xPathLexer = new XPathLexer(".//div[contains(@class,'container')]/p");
        xPathLexer.dots();
    }
}
statement is: XPathLexer xPathLexer = new XPathLexer(".//div[contains(@class,'container')]/p"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xPathLexer.dots(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.dots() target is: xPathLexer method is: dots()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: dots()Lcom/werken/saxpath/Token;
TestCase is: String string = ".//div[contains(@class,'container')]/p";
XPathLexer xPathLexer = new XPathLexer(string);
((XPathLexer) string).dots();

statement is: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.werken.saxpath.XPathLexer
statement code is: XPathLexer xPathLexer = new XPathLexer("2/#y")
statement is: slashes()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token slashes = xPathLexer.slashes()
test data is: XPathLexer xPathLexer = new XPathLexer("2/#y");
xPathLexer.slashes();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XPathLexer xPathLexer = new XPathLexer("/bookstore/book[@author='John Doe']");
        xPathLexer.slashes();
    }
}
statement is: XPathLexer xPathLexer = new XPathLexer("/bookstore/book[@author='John Doe']"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xPathLexer.slashes(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.slashes() target is: xPathLexer method is: slashes()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: slashes()Lcom/werken/saxpath/Token;
TestCase is: String string = "/bookstore/book[@author='John Doe']";
XPathLexer xPathLexer = new XPathLexer(string);
((XPathLexer) string).slashes();

statement is: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.werken.saxpath.XPathLexer
statement code is: XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.Token")
statement is: getXPath()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String xPath = xPathLexer.getXPath()
test data is: XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.Token");
xPathLexer.getXPath();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.Token");
        xPathLexer.getXPath();
    }
}
statement is: XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.Token"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xPathLexer.getXPath(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.getXPath() target is: xPathLexer method is: getXPath()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: getXPath()Ljava/lang/String;
TestCase is: String string = "com.werken.saxpath.Token";
XPathLexer xPathLexer = new XPathLexer(string);
((XPathLexer) string).getXPath();

statement is: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.werken.saxpath.XPathLexer
statement code is: XPathLexer xPathLexer = new XPathLexer("eS?Ea'qz")
statement is: rightParen()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token rightParen = xPathLexer.rightParen()
statement is: colon()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token colon = xPathLexer.colon()
statement is: equals()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token equals = xPathLexer.equals()
statement is: equals()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token equals = xPathLexer.equals()
statement is: nextToken()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token nextToken = xPathLexer.nextToken()
test data is: XPathLexer xPathLexer = new XPathLexer("eS?Ea'qz");
xPathLexer.rightParen();
xPathLexer.colon();
xPathLexer.equals();
xPathLexer.equals();
xPathLexer.nextToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XPathLexer xPathLexer = new XPathLexer("eS?Ea'qz");
        xPathLexer.rightParen();
        xPathLexer.colon();
        xPathLexer.equals();
        xPathLexer.equals();
        xPathLexer.nextToken();
    }
}
statement is: XPathLexer xPathLexer = new XPathLexer("eS?Ea'qz"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xPathLexer.rightParen(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.rightParen() target is: xPathLexer method is: rightParen()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: rightParen()Lcom/werken/saxpath/Token;
statement is: xPathLexer.colon(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.colon() target is: xPathLexer method is: colon()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: colon()Lcom/werken/saxpath/Token;
statement is: xPathLexer.equals(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.equals() target is: xPathLexer method is: equals()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: equals()Lcom/werken/saxpath/Token;
statement is: xPathLexer.equals(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.equals() target is: xPathLexer method is: equals()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: equals()Lcom/werken/saxpath/Token;
statement is: xPathLexer.nextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.nextToken() target is: xPathLexer method is: nextToken()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: nextToken()Lcom/werken/saxpath/Token;
TestCase is: String string = "eS?Ea'qz";
XPathLexer xPathLexer = new XPathLexer(string);
((XPathLexer) string).rightParen();
((XPathLexer) string).colon();
((XPathLexer) string).equals();
((XPathLexer) string).equals();
((XPathLexer) string).nextToken();

statement is: com.werken.saxpath.XPathLexer()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.werken.saxpath.XPathLexer
statement code is: XPathLexer xPathLexer = new XPathLexer()
statement is: setXPath(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: xPathLexer.setXPath("3nA=\"qo4jzE%rc")
statement is: at()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token at = xPathLexer.at()
statement is: LA(I)C type is: class org.evosuite.testcase.statements.MethodStatement return type char
statement code is: char LA = xPathLexer.LA(5)
test data is: XPathLexer xPathLexer = new XPathLexer();
xPathLexer.setXPath("3nA=\"qo4jzE%rc");
xPathLexer.at();
xPathLexer.LA(5);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XPathLexer xPathLexer = new XPathLexer();
        xPathLexer.setXPath("3nA=\"qo4jzE%rc");
        xPathLexer.at();
        xPathLexer.LA(5);// Improved test data: using a more descriptive and representative value for the lookahead position }}

    }
}
statement is: XPathLexer xPathLexer = new XPathLexer(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xPathLexer.setXPath("3nA=\"qo4jzE%rc"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.setXPath("3nA=\"qo4jzE%rc") target is: xPathLexer method is: setXPath(java.lang.String)
source statement: com.werken.saxpath.XPathLexer()V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 0
Matched Method is: setXPath(Ljava/lang/String;)V
statement is: xPathLexer.at(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.at() target is: xPathLexer method is: at()
source statement: com.werken.saxpath.XPathLexer()V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 0
Matched Method is: at()Lcom/werken/saxpath/Token;
statement is: xPathLexer.LA(5)// Improved test data: using a more descriptive and representative value for the lookahead position }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.LA(5)// Improved test data: using a more descriptive and representative value for the lookahead position }}
 target is: xPathLexer method is: LA(int)
source statement: com.werken.saxpath.XPathLexer()V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 0
Matched Method is: LA(I)C
TestCase is: XPathLexer xPathLexer = new XPathLexer();
String string = "3nA=\"qo4jzE%rc";
xPathLexer.setXPath(string);
xPathLexer.at();
int _int = 5;
xPathLexer.LA(_int);

statement is: com.werken.saxpath.XPathLexer()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.werken.saxpath.XPathLexer
statement code is: XPathLexer xPathLexer = new XPathLexer()
statement is: setXPath(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: xPathLexer.setXPath("4#?p,~P9!")
statement is: doubleColon()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token doubleColon = xPathLexer.doubleColon()
statement is: LA(I)C type is: class org.evosuite.testcase.statements.MethodStatement return type char
statement code is: char LA = xPathLexer.LA((-1))
test data is: XPathLexer xPathLexer = new XPathLexer();
xPathLexer.setXPath("4#?p,~P9!");
xPathLexer.doubleColon();
xPathLexer.LA((-1));

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XPathLexer xPathLexer = new XPathLexer();
        xPathLexer.setXPath("//*[@id='main']");
        xPathLexer.doubleColon();
        xPathLexer.LA(-1);
    }
}
statement is: XPathLexer xPathLexer = new XPathLexer(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xPathLexer.setXPath("//*[@id='main']"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.setXPath("//*[@id='main']") target is: xPathLexer method is: setXPath(java.lang.String)
source statement: com.werken.saxpath.XPathLexer()V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 0
Matched Method is: setXPath(Ljava/lang/String;)V
statement is: xPathLexer.doubleColon(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.doubleColon() target is: xPathLexer method is: doubleColon()
source statement: com.werken.saxpath.XPathLexer()V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 0
Matched Method is: doubleColon()Lcom/werken/saxpath/Token;
statement is: xPathLexer.LA(-1), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.LA(-1) target is: xPathLexer method is: LA(int)
source statement: com.werken.saxpath.XPathLexer()V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 0
Matched Method is: LA(I)C
i 0 Parameters size() 0 Num of Method Parameters: 1
TestCase is: XPathLexer xPathLexer = new XPathLexer();
String string = "//*[@id='main']";
xPathLexer.setXPath(string);
xPathLexer.doubleColon();
int _int = null;
xPathLexer.LA(_int);

statement is: com.werken.saxpath.XPathLexer()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.werken.saxpath.XPathLexer
statement code is: XPathLexer xPathLexer = new XPathLexer()
statement is: star()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token star = xPathLexer.star()
statement is: LA(I)C type is: class org.evosuite.testcase.statements.MethodStatement return type char
statement code is: char LA = xPathLexer.LA(0)
test data is: XPathLexer xPathLexer = new XPathLexer();
xPathLexer.star();
xPathLexer.LA(0);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XPathLexer xPathLexer = new XPathLexer();
        xPathLexer.star("*");
        xPathLexer.LA(0);
    }
}
statement is: XPathLexer xPathLexer = new XPathLexer(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xPathLexer.star("*"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.star("*") target is: xPathLexer method is: star(java.lang.String)
statement is: xPathLexer.LA(0), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.LA(0) target is: xPathLexer method is: LA(int)
source statement: com.werken.saxpath.XPathLexer()V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 0
Matched Method is: LA(I)C
TestCase is: XPathLexer xPathLexer = new XPathLexer();
int _int = 0;
xPathLexer.LA(_int);

statement is: com.werken.saxpath.XPathLexer()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.werken.saxpath.XPathLexer
statement code is: XPathLexer xPathLexer = new XPathLexer()
statement is: currentPosition()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int currentPosition = xPathLexer.currentPosition()
test data is: XPathLexer xPathLexer = new XPathLexer();
xPathLexer.currentPosition();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XPathLexer xPathLexer = new XPathLexer();
        xPathLexer.currentPosition();
        // Improved test data:
        int primitiveInt = 10;// Changed from 5 to a more descriptive value

        double primitiveDouble = 3.14;// Changed from 3.14 to a more descriptive value

        String string = "This is a test string";// Changed from an empty string to a more descriptive value

        char character = 'A';// Changed from 'a' to a more descriptive value }}

    }
}
statement is: XPathLexer xPathLexer = new XPathLexer(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xPathLexer.currentPosition(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.currentPosition() target is: xPathLexer method is: currentPosition()
source statement: com.werken.saxpath.XPathLexer()V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 0
Matched Method is: currentPosition()I
statement is: // Improved test data:
int primitiveInt = 10// Changed from 5 to a more descriptive value
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: double primitiveDouble = 3.14// Changed from 3.14 to a more descriptive value
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String string = "This is a test string"// Changed from an empty string to a more descriptive value
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: char character = 'A'// Changed from 'a' to a more descriptive value }}
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
* this is vulnerable: int _int = 10
* this is vulnerable: double _double = 3.14
* this is vulnerable: String string = "This is a test string"
* this is vulnerable: char _char = 'A'
TestCase is: XPathLexer xPathLexer = new XPathLexer();
xPathLexer.currentPosition();
int _int = 10;
double _double = 3.14;
String string = "This is a test string";
char _char = 'A';

statement is: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.werken.saxpath.XPathLexer
statement code is: XPathLexer xPathLexer = new XPathLexer("K.!=D")
statement is: endPosition()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int endPosition = xPathLexer.endPosition()
test data is: XPathLexer xPathLexer = new XPathLexer("K.!=D");
xPathLexer.endPosition();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XPathLexer xPathLexer = new XPathLexer("The quick brown fox jumps over the lazy dog.");
        xPathLexer.endPosition();
    }
}
statement is: XPathLexer xPathLexer = new XPathLexer("The quick brown fox jumps over the lazy dog."), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xPathLexer.endPosition(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.endPosition() target is: xPathLexer method is: endPosition()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: endPosition()I
TestCase is: String string = "The quick brown fox jumps over the lazy dog.";
XPathLexer xPathLexer = new XPathLexer(string);
((XPathLexer) string).endPosition();

statement is: com.werken.saxpath.XPathLexer()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.werken.saxpath.XPathLexer
statement code is: XPathLexer xPathLexer = new XPathLexer()
statement is: endPosition()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int endPosition = xPathLexer.endPosition()
test data is: XPathLexer xPathLexer = new XPathLexer();
xPathLexer.endPosition();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XPathLexer xPathLexer = new XPathLexer();
        xPathLexer.endPosition(10);
    }
}
statement is: XPathLexer xPathLexer = new XPathLexer(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xPathLexer.endPosition(10), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.endPosition(10) target is: xPathLexer method is: endPosition(int)
TestCase is: XPathLexer xPathLexer = new XPathLexer();

statement is: com.werken.saxpath.XPathLexer()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.werken.saxpath.XPathLexer
statement code is: XPathLexer xPathLexer = new XPathLexer()
statement is: dots()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token dots = xPathLexer.dots()
statement is: setPreviousToken(Lcom/werken/saxpath/Token;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: xPathLexer.setPreviousToken(arg0)
statement is: getPreviousToken()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token previousToken = xPathLexer.getPreviousToken()
test data is: XPathLexer xPathLexer = new XPathLexer();
Token dots = xPathLexer.dots();
xPathLexer.setPreviousToken(dots);
xPathLexer.getPreviousToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XPathLexer xPathLexer = new XPathLexer();
        Token dots = xPathLexer.dots();
        xPathLexer.setPreviousToken(dots);
        xPathLexer.getPreviousToken();
    }
}
statement is: XPathLexer xPathLexer = new XPathLexer(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Token dots = xPathLexer.dots(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.dots() target is: xPathLexer method is: dots()
source statement: com.werken.saxpath.XPathLexer()V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 0
Matched Method is: dots()Lcom/werken/saxpath/Token;
statement is: xPathLexer.setPreviousToken(dots), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.setPreviousToken(dots) target is: xPathLexer method is: setPreviousToken(Token)
source statement: com.werken.saxpath.XPathLexer()V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 0
Matched Method is: setPreviousToken(Lcom/werken/saxpath/Token;)V
statement is: xPathLexer.getPreviousToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.getPreviousToken() target is: xPathLexer method is: getPreviousToken()
source statement: com.werken.saxpath.XPathLexer()V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 0
Matched Method is: getPreviousToken()Lcom/werken/saxpath/Token;
TestCase is: XPathLexer xPathLexer = new XPathLexer();
Token dots = xPathLexer.dots();
xPathLexer.setPreviousToken(dots);
xPathLexer.getPreviousToken();

statement is: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.werken.saxpath.XPathLexer
statement code is: XPathLexer xPathLexer = new XPathLexer("/iD<K -Ba2IVWS")
statement is: getPreviousToken()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token previousToken = xPathLexer.getPreviousToken()
test data is: XPathLexer xPathLexer = new XPathLexer("/iD<K -Ba2IVWS");
xPathLexer.getPreviousToken();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XPathLexer xPathLexer = new XPathLexer("/iD<K -Ba2IVWS");
        xPathLexer.getPreviousToken();
        // Improved test data
        String inputXPathExpression = "/iD<K -Ba2IVWS";
        XPathLexer xPathLexer = new XPathLexer(inputXPathExpression);
        xPathLexer.getPreviousToken();
    }
}
statement is: XPathLexer xPathLexer = new XPathLexer("/iD<K -Ba2IVWS"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xPathLexer.getPreviousToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.getPreviousToken() target is: xPathLexer method is: getPreviousToken()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: getPreviousToken()Lcom/werken/saxpath/Token;
statement is: // Improved test data
String inputXPathExpression = "/iD<K -Ba2IVWS", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: XPathLexer xPathLexer = new XPathLexer(inputXPathExpression), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xPathLexer.getPreviousToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.getPreviousToken() target is: xPathLexer method is: getPreviousToken()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 4
Matched Method is: getPreviousToken()Lcom/werken/saxpath/Token;
TestCase is: String string = "/iD<K -Ba2IVWS";
XPathLexer xPathLexer = new XPathLexer(string);
((XPathLexer) string).getPreviousToken();
String string = "/iD<K -Ba2IVWS";
XPathLexer xPathLexer = new XPathLexer(string);
((XPathLexer) string).getPreviousToken();

statement is: com.werken.saxpath.XPathLexer()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.werken.saxpath.XPathLexer
statement code is: XPathLexer xPathLexer = new XPathLexer()
statement is: setXPath(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: xPathLexer.setXPath("")
statement is: getXPath()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String xPath = xPathLexer.getXPath()
test data is: XPathLexer xPathLexer = new XPathLexer();
xPathLexer.setXPath("");
xPathLexer.getXPath();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XPathLexer xPathLexer = new XPathLexer();
        xPathLexer.setXPath("/book/author");
        xPathLexer.getXPath();
    }
}
statement is: XPathLexer xPathLexer = new XPathLexer(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xPathLexer.setXPath("/book/author"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.setXPath("/book/author") target is: xPathLexer method is: setXPath(java.lang.String)
source statement: com.werken.saxpath.XPathLexer()V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 0
Matched Method is: setXPath(Ljava/lang/String;)V
statement is: xPathLexer.getXPath(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.getXPath() target is: xPathLexer method is: getXPath()
source statement: com.werken.saxpath.XPathLexer()V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 0
Matched Method is: getXPath()Ljava/lang/String;
TestCase is: XPathLexer xPathLexer = new XPathLexer();
String string = "/book/author";
xPathLexer.setXPath(string);
xPathLexer.getXPath();

statement is: com.werken.saxpath.XPathLexer()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.werken.saxpath.XPathLexer
statement code is: XPathLexer xPathLexer = new XPathLexer()
statement is: getXPath()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String xPath = xPathLexer.getXPath()
test data is: XPathLexer xPathLexer = new XPathLexer();
xPathLexer.getXPath();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XPathLexer xPathLexer = new XPathLexer();
        xPathLexer.getXPath();
        // Improved test data
        String xPath = "/bookstore/book[@author='Anonymous Author' and @published>2018]";
        int year = 2019;
    }
}
statement is: XPathLexer xPathLexer = new XPathLexer(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xPathLexer.getXPath(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.getXPath() target is: xPathLexer method is: getXPath()
source statement: com.werken.saxpath.XPathLexer()V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 0
Matched Method is: getXPath()Ljava/lang/String;
statement is: // Improved test data
String xPath = "/bookstore/book[@author='Anonymous Author' and @published>2018]", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: int year = 2019, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
* this is vulnerable: String string = "/bookstore/book[@author='Anonymous Author' and @published>2018]"
* this is vulnerable: int _int = 2019
TestCase is: XPathLexer xPathLexer = new XPathLexer();
xPathLexer.getXPath();
String string = "/bookstore/book[@author='Anonymous Author' and @published>2018]";
int _int = 2019;

statement is: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.werken.saxpath.XPathLexer
statement code is: XPathLexer xPathLexer = new XPathLexer("Bfl&[*+1Fa~'C&hz")
statement is: literal()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token literal = xPathLexer.literal()
statement is: hasMoreChars()Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean moreChars = xPathLexer.hasMoreChars()
test data is: XPathLexer xPathLexer = new XPathLexer("Bfl&[*+1Fa~'C&hz");
xPathLexer.literal();
xPathLexer.hasMoreChars();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XPathLexer xPathLexer = new XPathLexer("/users/bob/documents");
        xPathLexer.literal();
        xPathLexer.hasMoreChars();
        XPathLexer xPathLexer2 = new XPathLexer("/users/*[@id='1234']/documents[position()=5]");
        xPathLexer2.literal();
        xPathLexer2.hasMoreChars();
        XPathLexer xPathLexer3 = new XPathLexer("/users/*[@id=1234]/documents[position()=5 and name='Bob']");
        xPathLexer3.literal();
        xPathLexer3.hasMoreChars();
    }
}
statement is: XPathLexer xPathLexer = new XPathLexer("/users/bob/documents"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xPathLexer.literal(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.literal() target is: xPathLexer method is: literal()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: literal()Lcom/werken/saxpath/Token;
statement is: xPathLexer.hasMoreChars(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.hasMoreChars() target is: xPathLexer method is: hasMoreChars()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: hasMoreChars()Z
statement is: XPathLexer xPathLexer2 = new XPathLexer("/users/*[@id='1234']/documents[position()=5]"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xPathLexer2.literal(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer2.literal() target is: xPathLexer2 method is: literal()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 5
Matched Method is: literal()Lcom/werken/saxpath/Token;
statement is: xPathLexer2.hasMoreChars(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer2.hasMoreChars() target is: xPathLexer2 method is: hasMoreChars()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 5
Matched Method is: hasMoreChars()Z
statement is: XPathLexer xPathLexer3 = new XPathLexer("/users/*[@id=1234]/documents[position()=5 and name='Bob']"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xPathLexer3.literal(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer3.literal() target is: xPathLexer3 method is: literal()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 9
Matched Method is: literal()Lcom/werken/saxpath/Token;
statement is: xPathLexer3.hasMoreChars(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer3.hasMoreChars() target is: xPathLexer3 method is: hasMoreChars()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 9
Matched Method is: hasMoreChars()Z
TestCase is: String string = "/users/bob/documents";
XPathLexer xPathLexer = new XPathLexer(string);
((XPathLexer) string).literal();
((XPathLexer) string).hasMoreChars();
String string = "/users/*[@id='1234']/documents[position()=5]";
XPathLexer xPathLexer = new XPathLexer(string);
((XPathLexer) string).literal();
((XPathLexer) string).hasMoreChars();
String string = "/users/*[@id=1234]/documents[position()=5 and name='Bob']";
XPathLexer xPathLexer = new XPathLexer(string);
((XPathLexer) string).literal();
((XPathLexer) string).hasMoreChars();

statement is: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.werken.saxpath.XPathLexer
statement code is: XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.XPathLexer")
statement is: hasMoreChars()Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean moreChars = xPathLexer.hasMoreChars()
test data is: XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.XPathLexer");
xPathLexer.hasMoreChars();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XPathLexer xPathLexer = new XPathLexer("com.example.xpath.XPathLexer");
        xPathLexer.hasMoreChars(true);
        // Improved test data
        xPathLexer = new XPathLexer("com.example.xpath.XPathLexer");
        xPathLexer.hasMoreChars('a');
    }
}
statement is: XPathLexer xPathLexer = new XPathLexer("com.example.xpath.XPathLexer"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xPathLexer.hasMoreChars(true), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.hasMoreChars(true) target is: xPathLexer method is: hasMoreChars(boolean)
statement is: // Improved test data
xPathLexer = new XPathLexer("com.example.xpath.XPathLexer"), class spoon.support.reflect.code.CtAssignmentImpl
statement is: xPathLexer.hasMoreChars('a'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.hasMoreChars('a') target is: xPathLexer method is: hasMoreChars(char)
TestCase is: String string = "com.example.xpath.XPathLexer";
XPathLexer xPathLexer = new XPathLexer(string);

statement is: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.werken.saxpath.XPathLexer
statement code is: XPathLexer xPathLexer = new XPathLexer("q=^j{MY7l.g29;'1q")
statement is: isIdentifierChar(C)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean identifierChar = xPathLexer.isIdentifierChar('>')
test data is: XPathLexer xPathLexer = new XPathLexer("q=^j{MY7l.g29;'1q");
xPathLexer.isIdentifierChar('>');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        xPathLexer.isIdentifierChar('>');
    }
}
statement is: xPathLexer.isIdentifierChar('>'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.isIdentifierChar('>') target is: xPathLexer method is: isIdentifierChar(char)
statement is: com.werken.saxpath.XPathLexer()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.werken.saxpath.XPathLexer
statement code is: XPathLexer xPathLexer = new XPathLexer()
statement is: isIdentifierChar(C)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean identifierChar = xPathLexer.isIdentifierChar('W')
test data is: XPathLexer xPathLexer = new XPathLexer();
xPathLexer.isIdentifierChar('W');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XPathLexer xPathLexer = new XPathLexer();
        xPathLexer.isIdentifierChar('_');
    }
}
statement is: XPathLexer xPathLexer = new XPathLexer(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xPathLexer.isIdentifierChar('_'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.isIdentifierChar('_') target is: xPathLexer method is: isIdentifierChar(char)
source statement: com.werken.saxpath.XPathLexer()V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 0
Matched Method is: isIdentifierChar(C)Z
TestCase is: XPathLexer xPathLexer = new XPathLexer();
char _char = '_';
xPathLexer.isIdentifierChar(_char);

statement is: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.werken.saxpath.XPathLexer
statement code is: XPathLexer xPathLexer = new XPathLexer("q=^j{MY7l.g29;'1q")
statement is: isIdentifierStartChar(C)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean identifierStartChar = xPathLexer.isIdentifierStartChar('9')
test data is: XPathLexer xPathLexer = new XPathLexer("q=^j{MY7l.g29;'1q");
xPathLexer.isIdentifierStartChar('9');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        xPathLexer.isIdentifierStartChar('a');
    }
}
statement is: xPathLexer.isIdentifierStartChar('a'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.isIdentifierStartChar('a') target is: xPathLexer method is: isIdentifierStartChar(char)
statement is: com.werken.saxpath.XPathLexer()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.werken.saxpath.XPathLexer
statement code is: XPathLexer xPathLexer = new XPathLexer()
statement is: isIdentifierStartChar(C)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean identifierStartChar = xPathLexer.isIdentifierStartChar('I')
test data is: XPathLexer xPathLexer = new XPathLexer();
xPathLexer.isIdentifierStartChar('I');

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        XPathLexer xPathLexer = new XPathLexer();
        xPathLexer.isIdentifierStartChar('α');
    }
}
statement is: XPathLexer xPathLexer = new XPathLexer(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xPathLexer.isIdentifierStartChar('α'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.isIdentifierStartChar('α') target is: xPathLexer method is: isIdentifierStartChar(char)
source statement: com.werken.saxpath.XPathLexer()V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 0
Matched Method is: isIdentifierStartChar(C)Z
TestCase is: XPathLexer xPathLexer = new XPathLexer();
char _char = '\u03B1';
xPathLexer.isIdentifierStartChar(_char);

statement is: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.werken.saxpath.XPathLexer
statement code is: XPathLexer xPathLexer = new XPathLexer("q=^j{MY7l.g29;'1q")
statement is: literal()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token literal = xPathLexer.literal()
test data is: XPathLexer xPathLexer = new XPathLexer("q=^j{MY7l.g29;'1q");
xPathLexer.literal();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data
        XPathLexer xPathLexer = new XPathLexer("q=^j{MY7l.g29;'1q");
        xPathLexer.literal();
    }
}
statement is: // Improved test data
XPathLexer xPathLexer = new XPathLexer("q=^j{MY7l.g29;'1q"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: xPathLexer.literal(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.literal() target is: xPathLexer method is: literal()
source statement: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V callee: VariableReference: Statement 0, type com.werken.saxpath.XPathLexerindex is: 1
Matched Method is: literal()Lcom/werken/saxpath/Token;
TestCase is: String string = "q=^j{MY7l.g29;'1q";
XPathLexer xPathLexer = new XPathLexer(string);
((XPathLexer) string).literal();

statement is: com.werken.saxpath.XPathLexer(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.werken.saxpath.XPathLexer
statement code is: XPathLexer xPathLexer = new XPathLexer("N7`P<l1{`vcA")
statement is: nextToken()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token nextToken = xPathLexer.nextToken()
statement is: at()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token at = xPathLexer.at()
statement is: rightBracket()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token rightBracket = xPathLexer.rightBracket()
statement is: relationalOperator()Lcom/werken/saxpath/Token; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.werken.saxpath.Token
statement code is: Token relationalOperator = xPathLexer.relationalOperator()
test data is: XPathLexer xPathLexer = new XPathLexer("N7`P<l1{`vcA");
xPathLexer.nextToken();
xPathLexer.at();
xPathLexer.rightBracket();
xPathLexer.relationalOperator();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data:
        xPathLexer.nextToken();
        assertEquals(xPathLexer.getCurrentToken(), NODE_TEST);
        xPathLexer.at();
        assertEquals(xPathLexer.getCurrentToken(), AT);
        xPathLexer.rightBracket();
        assertEquals(xPathLexer.getCurrentToken(), RIGHT_BRACKET);
        xPathLexer.relationalOperator();
        assertEquals(xPathLexer.getCurrentToken(), RELATIONAL_OPERATOR);
    }
}
statement is: // Improved test data:
xPathLexer.nextToken(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Improved test data:
xPathLexer.nextToken() target is: xPathLexer method is: nextToken()
statement is: assertEquals(xPathLexer.getCurrentToken(), NODE_TEST), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(xPathLexer.getCurrentToken(), NODE_TEST) target is:  method is: assertEquals(<unknown>,<unknown>)
statement is: xPathLexer.at(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.at() target is: xPathLexer method is: at()
statement is: assertEquals(xPathLexer.getCurrentToken(), AT), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(xPathLexer.getCurrentToken(), AT) target is:  method is: assertEquals(<unknown>,<unknown>)
statement is: xPathLexer.rightBracket(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.rightBracket() target is: xPathLexer method is: rightBracket()
statement is: assertEquals(xPathLexer.getCurrentToken(), RIGHT_BRACKET), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(xPathLexer.getCurrentToken(), RIGHT_BRACKET) target is:  method is: assertEquals(<unknown>,<unknown>)
statement is: xPathLexer.relationalOperator(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: xPathLexer.relationalOperator() target is: xPathLexer method is: relationalOperator()
statement is: assertEquals(xPathLexer.getCurrentToken(), RELATIONAL_OPERATOR), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(xPathLexer.getCurrentToken(), RELATIONAL_OPERATOR) target is:  method is: assertEquals(<unknown>,<unknown>)
* test suite isTestSuite: 232
Test 0: 
XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.Token");
xPathLexer.nextToken();
Test 1: 
XPathLexer xPathLexer = new XPathLexer(") (");
xPathLexer.equals();
xPathLexer.nextToken();
xPathLexer.setXPath("Tzns0k_f");
xPathLexer.nextToken();
Test 2: 
XPathLexer xPathLexer = new XPathLexer("|h'rQVn*qV)@!5H>J");
xPathLexer.nextToken();
xPathLexer.nextToken();
Test 3: 
XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.Token");
xPathLexer.leftBracket();
xPathLexer.not();
xPathLexer.nextToken();
Test 4: 
XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.Token");
Token minus = xPathLexer.minus();
xPathLexer.setPreviousToken(minus);
xPathLexer.identifierOrOperatorName();
Test 5: 
XPathLexer xPathLexer = new XPathLexer();
xPathLexer.plus();
xPathLexer.currentPosition();
Test 6: 
XPathLexer xPathLexer = new XPathLexer("!)JT");
xPathLexer.nextToken();
xPathLexer.identifierOrOperatorName();
Test 7: 
XPathLexer xPathLexer = new XPathLexer("\"<=:zyOvGFl.H@)");
xPathLexer.nextToken();
Test 8: 
XPathLexer xPathLexer = new XPathLexer("q=^j{MY7l.g29;'1q");
xPathLexer.setXPath("4#?p,~P9!");
xPathLexer.at();
xPathLexer.nextToken();
Test 9: 
XPathLexer xPathLexer = new XPathLexer("3nA=\"qo4jzE%rc");
xPathLexer.identifier();
xPathLexer.doubleColon();
xPathLexer.identifierOrOperatorName();
xPathLexer.nextToken();
Test 10: 
XPathLexer xPathLexer = new XPathLexer("&p5u3TD`y@p-^d|&:.");
xPathLexer.nextToken();
Test 11: 
XPathLexer xPathLexer = new XPathLexer(") (");
xPathLexer.nextToken();
xPathLexer.setXPath("Tzns0k_f");
xPathLexer.nextToken();
Test 12: 
XPathLexer xPathLexer = new XPathLexer("$*1L8@xjb");
xPathLexer.star();
xPathLexer.nextToken();
xPathLexer.identifierOrOperatorName();
Test 13: 
XPathLexer xPathLexer = new XPathLexer("<W+rU*$bt?VbT");
xPathLexer.doubleColon();
xPathLexer.nextToken();
xPathLexer.nextToken();
Test 14: 
XPathLexer xPathLexer = new XPathLexer("9:BNn,");
xPathLexer.dots();
xPathLexer.dots();
xPathLexer.identifier();
xPathLexer.nextToken();
Test 15: 
XPathLexer xPathLexer = new XPathLexer("/iD<K -Ba2IVWS");
xPathLexer.colon();
xPathLexer.nextToken();
xPathLexer.equals();
xPathLexer.colon();
xPathLexer.nextToken();
Test 16: 
XPathLexer xPathLexer = new XPathLexer("q=^j{MYl.g29;'1q");
xPathLexer.leftBracket();
xPathLexer.whitespace();
xPathLexer.dots();
xPathLexer.comma();
xPathLexer.leftBracket();
xPathLexer.comma();
xPathLexer.rightParen();
xPathLexer.colon();
xPathLexer.nextToken();
xPathLexer.identifierOrOperatorName();
Test 17: 
XPathLexer xPathLexer = new XPathLexer("/iD<K -Ba2IVWS");
xPathLexer.nextToken();
xPathLexer.identifierOrOperatorName();
Test 18: 
XPathLexer xPathLexer = new XPathLexer("0;");
xPathLexer.nextToken();
Test 19: 
XPathLexer xPathLexer = new XPathLexer("1H0");
xPathLexer.nextToken();
xPathLexer.nextToken();
Test 20: 
XPathLexer xPathLexer = new XPathLexer("X2?31yh2Tg*5v/P");
xPathLexer.pipe();
xPathLexer.nextToken();
Test 21: 
XPathLexer xPathLexer = new XPathLexer("3Y{mms7WR.");
xPathLexer.nextToken();
Test 22: 
XPathLexer xPathLexer = new XPathLexer("4g`ENPGP(U,${~B");
xPathLexer.nextToken();
xPathLexer.nextToken();
Test 23: 
XPathLexer xPathLexer = new XPathLexer("5nqXpW;P=D_/k");
xPathLexer.nextToken();
Test 24: 
XPathLexer xPathLexer = new XPathLexer("6T.");
xPathLexer.nextToken();
Test 25: 
XPathLexer xPathLexer = new XPathLexer("q=^j{MY7l.g29;'1q");
xPathLexer.leftBracket();
xPathLexer.dots();
xPathLexer.comma();
xPathLexer.leftBracket();
xPathLexer.comma();
xPathLexer.rightParen();
xPathLexer.colon();
xPathLexer.nextToken();
Test 26: 
XPathLexer xPathLexer = new XPathLexer("8F");
xPathLexer.nextToken();
Test 27: 
XPathLexer xPathLexer = new XPathLexer("tS'9A[");
xPathLexer.identifierOrOperatorName();
xPathLexer.plus();
xPathLexer.nextToken();
xPathLexer.nextToken();
Test 28: 
XPathLexer xPathLexer = new XPathLexer("9:BNn,");
xPathLexer.identifierOrOperatorName();
xPathLexer.nextToken();
xPathLexer.leftBracket();
xPathLexer.comma();
xPathLexer.rightParen();
xPathLexer.colon();
xPathLexer.nextToken();
xPathLexer.getPreviousToken();
Test 29: 
XPathLexer xPathLexer = new XPathLexer("NoJU;J?1v");
xPathLexer.nextToken();
xPathLexer.nextToken();
Test 30: 
XPathLexer xPathLexer = new XPathLexer(" <@w%@+");
xPathLexer.nextToken();
xPathLexer.identifierOrOperatorName();
Test 31: 
XPathLexer xPathLexer = new XPathLexer("q=^j{MY7l.g29;'1q");
xPathLexer.comma();
xPathLexer.nextToken();
xPathLexer.identifierOrOperatorName();
Test 32: 
XPathLexer xPathLexer = new XPathLexer("KG>BrF");
xPathLexer.identifierOrOperatorName();
xPathLexer.nextToken();
xPathLexer.identifierOrOperatorName();
Test 33: 
XPathLexer xPathLexer = new XPathLexer("Bu[V?%EN4&_wLeV_:W");
xPathLexer.doubleColon();
xPathLexer.consume();
xPathLexer.identifierOrOperatorName();
xPathLexer.nextToken();
Test 34: 
XPathLexer xPathLexer = new XPathLexer("@b)eb2\"h7\nDuE*cIi");
xPathLexer.nextToken();
Test 35: 
XPathLexer xPathLexer = new XPathLexer("BuV?%EN4n&_wLeV:W");
xPathLexer.nextToken();
Test 36: 
XPathLexer xPathLexer = new XPathLexer("CJi");
xPathLexer.nextToken();
Test 37: 
XPathLexer xPathLexer = new XPathLexer("EK3o[vGY*bhod4,l");
xPathLexer.nextToken();
xPathLexer.nextToken();
Test 38: 
XPathLexer xPathLexer = new XPathLexer("F|'~");
xPathLexer.nextToken();
Test 39: 
XPathLexer xPathLexer = new XPathLexer("GI\"8u5");
xPathLexer.nextToken();
Test 40: 
XPathLexer xPathLexer = new XPathLexer("Ib.4N");
xPathLexer.nextToken();
Test 41: 
XPathLexer xPathLexer = new XPathLexer("!)JT");
xPathLexer.at();
xPathLexer.at();
xPathLexer.nextToken();
Test 42: 
XPathLexer xPathLexer = new XPathLexer("K.=D`");
xPathLexer.nextToken();
Test 43: 
XPathLexer xPathLexer = new XPathLexer("Ly?A+VtQ]+$wtQ");
xPathLexer.nextToken();
Test 44: 
XPathLexer xPathLexer = new XPathLexer("M%=");
xPathLexer.nextToken();
Test 45: 
XPathLexer xPathLexer = new XPathLexer("OB`0RtoR)E~zfca%?$");
xPathLexer.nextToken();
Test 46: 
XPathLexer xPathLexer = new XPathLexer();
xPathLexer.setXPath("4#?p,~P9!");
xPathLexer.notEquals();
xPathLexer.at();
xPathLexer.nextToken();
xPathLexer.at();
xPathLexer.leftBracket();
xPathLexer.nextToken();
Test 47: 
XPathLexer xPathLexer = new XPathLexer("FnQ$|&9");
xPathLexer.equals();
xPathLexer.at();
xPathLexer.nextToken();
Test 48: 
XPathLexer xPathLexer = new XPathLexer("Re`lCkMjCqyEd ");
xPathLexer.nextToken();
Test 49: 
XPathLexer xPathLexer = new XPathLexer("SmoY~H'7-Hef\"x)");
xPathLexer.nextToken();
Test 50: 
XPathLexer xPathLexer = new XPathLexer();
xPathLexer.setXPath("Tzns0k_f");
xPathLexer.nextToken();
Test 51: 
XPathLexer xPathLexer = new XPathLexer();
xPathLexer.setXPath("U<},@");
xPathLexer.nextToken();
Test 52: 
XPathLexer xPathLexer = new XPathLexer("VU$yO");
xPathLexer.nextToken();
Test 53: 
XPathLexer xPathLexer = new XPathLexer("WA6");
xPathLexer.nextToken();
Test 54: 
XPathLexer xPathLexer = new XPathLexer("Xr[AS6do");
xPathLexer.nextToken();
Test 55: 
XPathLexer xPathLexer = new XPathLexer("q=^j{MY7l.g29;'1q");
xPathLexer.dots();
xPathLexer.equals();
xPathLexer.comma();
xPathLexer.leftBracket();
xPathLexer.rightParen();
xPathLexer.colon();
xPathLexer.nextToken();
Test 56: 
XPathLexer xPathLexer = new XPathLexer("Z:{:;y[\"");
xPathLexer.nextToken();
Test 57: 
XPathLexer xPathLexer = new XPathLexer("dG!fo");
xPathLexer.nextToken();
Test 58: 
XPathLexer xPathLexer = new XPathLexer("]b88g[)2*\"M`?#");
xPathLexer.nextToken();
xPathLexer.identifierOrOperatorName();
Test 59: 
XPathLexer xPathLexer = new XPathLexer("q=^j{MY7l.g29;'1q");
xPathLexer.leftBracket();
xPathLexer.rightParen();
xPathLexer.nextToken();
Test 60: 
XPathLexer xPathLexer = new XPathLexer("{_y[\"F");
xPathLexer.equals();
xPathLexer.nextToken();
Test 61: 
XPathLexer xPathLexer = new XPathLexer("20/u`95");
xPathLexer.not();
xPathLexer.whitespace();
xPathLexer.colon();
xPathLexer.rightBracket();
xPathLexer.nextToken();
Test 62: 
XPathLexer xPathLexer = new XPathLexer("|bx]PxVClD]R?A");
xPathLexer.at();
xPathLexer.nextToken();
Test 63: 
XPathLexer xPathLexer = new XPathLexer("e<LUNO0D|");
xPathLexer.nextToken();
Test 64: 
XPathLexer xPathLexer = new XPathLexer("f]l.']LBO-7");
xPathLexer.nextToken();
Test 65: 
XPathLexer xPathLexer = new XPathLexer("q=^j{MY7l.g29;'1q");
xPathLexer.setXPath("}h26-V)RL");
xPathLexer.at();
xPathLexer.nextToken();
Test 66: 
XPathLexer xPathLexer = new XPathLexer("q=^j{MY7l.g29;'1q");
xPathLexer.leftBracket();
xPathLexer.dollar();
xPathLexer.consume();
xPathLexer.nextToken();
Test 67: 
XPathLexer xPathLexer = new XPathLexer("k7qG>Br4");
xPathLexer.nextToken();
Test 68: 
XPathLexer xPathLexer = new XPathLexer("q=^j{MY7l.g29;'1q");
xPathLexer.comma();
xPathLexer.dots();
xPathLexer.equals();
xPathLexer.comma();
xPathLexer.leftBracket();
xPathLexer.comma();
xPathLexer.rightParen();
xPathLexer.colon();
xPathLexer.nextToken();
Test 69: 
XPathLexer xPathLexer = new XPathLexer("n!J");
xPathLexer.nextToken();
Test 70: 
XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.XPathLexer");
xPathLexer.leftBracket();
xPathLexer.nextToken();
Test 71: 
XPathLexer xPathLexer = new XPathLexer("q=^j{MY7l.g29;'1q");
xPathLexer.nextToken();
Test 72: 
XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.XPathLexer");
xPathLexer.leftParen();
xPathLexer.rightParen();
xPathLexer.plus();
xPathLexer.consume(1);
xPathLexer.dots();
xPathLexer.colon();
xPathLexer.nextToken();
Test 73: 
XPathLexer xPathLexer = new XPathLexer("s2");
xPathLexer.nextToken();
Test 74: 
XPathLexer xPathLexer = new XPathLexer("tLgWN@XN<'");
xPathLexer.nextToken();
Test 75: 
XPathLexer xPathLexer = new XPathLexer("u&HSr1");
xPathLexer.nextToken();
Test 76: 
XPathLexer xPathLexer = new XPathLexer("v\"R-PGkiC LT=*iTw");
xPathLexer.nextToken();
Test 77: 
XPathLexer xPathLexer = new XPathLexer("wK3WT4j");
xPathLexer.nextToken();
Test 78: 
XPathLexer xPathLexer = new XPathLexer("Nx|H'l\u0001th=<c^B1S]");
xPathLexer.not();
xPathLexer.nextToken();
Test 79: 
XPathLexer xPathLexer = new XPathLexer("yS>TKm>&ZvN;Z]BY(");
xPathLexer.nextToken();
Test 80: 
XPathLexer xPathLexer = new XPathLexer();
xPathLexer.setXPath("Tzns0k_f");
xPathLexer.star();
xPathLexer.nextToken();
Test 81: 
XPathLexer xPathLexer = new XPathLexer();
xPathLexer.nextToken();
Test 82: 
XPathLexer xPathLexer = new XPathLexer("K.!=D");
xPathLexer.rightParen();
xPathLexer.comma();
xPathLexer.nextToken();
Test 83: 
XPathLexer xPathLexer = new XPathLexer("q=^j{MY7l.g29;'1q");
Token leftBracket = xPathLexer.leftBracket();
xPathLexer.setPreviousToken(leftBracket);
xPathLexer.identifierOrOperatorName();
Test 84: 
XPathLexer xPathLexer = new XPathLexer("GpE:'Fi?");
Token at = xPathLexer.at();
xPathLexer.setPreviousToken(at);
xPathLexer.identifierOrOperatorName();
Test 85: 
XPathLexer xPathLexer = new XPathLexer("9:BNn,");
xPathLexer.minus();
xPathLexer.nextToken();
xPathLexer.identifierOrOperatorName();
Test 86: 
XPathLexer xPathLexer = new XPathLexer("/iD<K -Ba2IVWS");
Token doubleColon = xPathLexer.doubleColon();
xPathLexer.setPreviousToken(doubleColon);
xPathLexer.nextToken();
Test 87: 
XPathLexer xPathLexer = new XPathLexer();
Token notEquals = xPathLexer.notEquals();
xPathLexer.setPreviousToken(notEquals);
xPathLexer.identifierOrOperatorName();
Test 88: 
XPathLexer xPathLexer = new XPathLexer("VU$yO");
xPathLexer.doubleColon();
xPathLexer.nextToken();
xPathLexer.identifierOrOperatorName();
Test 89: 
XPathLexer xPathLexer = new XPathLexer(".'E2T'");
xPathLexer.dollar();
xPathLexer.nextToken();
xPathLexer.identifierOrOperatorName();
Test 90: 
XPathLexer xPathLexer = new XPathLexer(",j!V9");
xPathLexer.nextToken();
xPathLexer.nextToken();
Test 91: 
XPathLexer xPathLexer = new XPathLexer("q=^j{MY7l.g29;'1q");
xPathLexer.leftBracket();
xPathLexer.dots();
xPathLexer.rightBracket();
xPathLexer.at();
xPathLexer.nextToken();
xPathLexer.identifierOrOperatorName();
Test 92: 
XPathLexer xPathLexer = new XPathLexer("BaU");
xPathLexer.slashes();
xPathLexer.operatorName();
Test 93: 
XPathLexer xPathLexer = new XPathLexer("-d-,db.xE:|?{#");
xPathLexer.dots();
xPathLexer.operatorName();
Test 94: 
XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.XPathLexer");
xPathLexer.star();
xPathLexer.leftParen();
xPathLexer.operatorName();
Test 95: 
XPathLexer xPathLexer = new XPathLexer("o%LSPo_nwNhA}F2SHk");
xPathLexer.operatorName();
Test 96: 
XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.Token");
xPathLexer.mod();
Test 97: 
XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.Token");
xPathLexer.div();
Test 98: 
XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.Token");
xPathLexer.and();
Test 99: 
XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.Token");
xPathLexer.leftBracket();
xPathLexer.not();
xPathLexer.or();
Test 100: 
XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.XPathLexer");
xPathLexer.notEquals();
xPathLexer.slashes();
xPathLexer.number();
Test 101: 
XPathLexer xPathLexer = new XPathLexer("/iD<K -Ba2IVWS");
xPathLexer.number();
Test 102: 
XPathLexer xPathLexer = new XPathLexer();
xPathLexer.whitespace();
Test 103: 
XPathLexer xPathLexer = new XPathLexer();
xPathLexer.setXPath(") (");
xPathLexer.whitespace();
Test 104: 
XPathLexer xPathLexer = new XPathLexer("q=^j{MY7l.g29;'1q");
xPathLexer.relationalOperator();
Test 105: 
XPathLexer xPathLexer = new XPathLexer("/.D<K -Ba2IVWS");
xPathLexer.dots();
Test 106: 
XPathLexer xPathLexer = new XPathLexer("2/#y");
xPathLexer.slashes();
Test 107: 
XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.Token");
xPathLexer.getXPath();
Test 108: 
XPathLexer xPathLexer = new XPathLexer("eS?Ea'qz");
xPathLexer.rightParen();
xPathLexer.colon();
xPathLexer.equals();
xPathLexer.equals();
xPathLexer.nextToken();
Test 109: 
XPathLexer xPathLexer = new XPathLexer();
xPathLexer.setXPath("3nA=\"qo4jzE%rc");
xPathLexer.at();
xPathLexer.LA(5);
Test 110: 
XPathLexer xPathLexer = new XPathLexer();
xPathLexer.setXPath("4#?p,~P9!");
xPathLexer.doubleColon();
xPathLexer.LA((-1));
Test 111: 
XPathLexer xPathLexer = new XPathLexer();
xPathLexer.star();
xPathLexer.LA(0);
Test 112: 
XPathLexer xPathLexer = new XPathLexer();
xPathLexer.currentPosition();
Test 113: 
XPathLexer xPathLexer = new XPathLexer("K.!=D");
xPathLexer.endPosition();
Test 114: 
XPathLexer xPathLexer = new XPathLexer();
xPathLexer.endPosition();
Test 115: 
XPathLexer xPathLexer = new XPathLexer();
Token dots = xPathLexer.dots();
xPathLexer.setPreviousToken(dots);
xPathLexer.getPreviousToken();
Test 116: 
XPathLexer xPathLexer = new XPathLexer("/iD<K -Ba2IVWS");
xPathLexer.getPreviousToken();
Test 117: 
XPathLexer xPathLexer = new XPathLexer();
xPathLexer.setXPath("");
xPathLexer.getXPath();
Test 118: 
XPathLexer xPathLexer = new XPathLexer();
xPathLexer.getXPath();
Test 119: 
XPathLexer xPathLexer = new XPathLexer("Bfl&[*+1Fa~'C&hz");
xPathLexer.literal();
xPathLexer.hasMoreChars();
Test 120: 
XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.XPathLexer");
xPathLexer.hasMoreChars();
Test 121: 
XPathLexer xPathLexer = new XPathLexer("q=^j{MY7l.g29;'1q");
xPathLexer.isIdentifierChar('>');
Test 122: 
XPathLexer xPathLexer = new XPathLexer();
xPathLexer.isIdentifierChar('W');
Test 123: 
XPathLexer xPathLexer = new XPathLexer("q=^j{MY7l.g29;'1q");
xPathLexer.isIdentifierStartChar('9');
Test 124: 
XPathLexer xPathLexer = new XPathLexer();
xPathLexer.isIdentifierStartChar('I');
Test 125: 
XPathLexer xPathLexer = new XPathLexer("q=^j{MY7l.g29;'1q");
xPathLexer.literal();
Test 126: 
XPathLexer xPathLexer = new XPathLexer("N7`P<l1{`vcA");
xPathLexer.nextToken();
xPathLexer.at();
xPathLexer.rightBracket();
xPathLexer.relationalOperator();
Test 127: 
XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.Token");
((XPathLexer)"com.werken.saxpath.Token").nextToken();

Test 128: 
String string = "123 + 456 * (789 - 987)";
XPathLexer xPathLexer = new XPathLexer("123 + 456 * (789 - 987)");
((XPathLexer)"123 + 456 * (789 - 987)").equals();
((XPathLexer) string).nextToken();
String string = "Tzns0k_f";
((XPathLexer) string).setXPath(string);
((XPathLexer) string).nextToken();
((XPathLexer) string).nextToken();
((XPathLexer) string).nextToken();
((XPathLexer) string).nextToken();
((XPathLexer) string).nextToken();
((XPathLexer) string).nextToken();

Test 129: 
String string = "|h'rQVn*qV)@!5H>J";
XPathLexer xPathLexer = new XPathLexer("|h'rQVn*qV)@!5H>J");
((XPathLexer)"|h'rQVn*qV)@!5H>J").nextToken();
((XPathLexer) string).nextToken();

Test 130: 
String string = "com.werken.saxpath.Token";
XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.Token");
((XPathLexer)"com.werken.saxpath.Token").leftBracket();
((XPathLexer) string).not();
((XPathLexer) string).nextToken();

Test 131: 
String string = "com.werken.saxpath.Token";
XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.Token");
Token minus = ((XPathLexer)"com.werken.saxpath.Token").minus();
((XPathLexer) string).setPreviousToken(minus);
((XPathLexer) string).identifierOrOperatorName();

Test 132: 
String string = "!@#$%^&*()_+-=[]{}|;':\"<>,./?`~";
XPathLexer xPathLexer = new XPathLexer("!@#$%^&*()_+-=[]{}|;':\"<>,./?`~");
((XPathLexer)"!@#$%^&*()_+-=[]{}|;':\"<>,./?`~").nextToken();
((XPathLexer) string).identifierOrOperatorName();

Test 133: 
XPathLexer xPathLexer = new XPathLexer("\"<=:zyOvGFl.H@)");
((XPathLexer)"\"<=:zyOvGFl.H@)").nextToken();

Test 134: 
String string = "root/node[@attr='value']";
XPathLexer xPathLexer = new XPathLexer("root/node[@attr='value']");
((XPathLexer)"root/node[@attr='value']").setXPath("child::*");
((XPathLexer) string).at();
((XPathLexer) string).nextToken();

Test 135: 
String string = "3nA=\"qo4jzE%rc";
XPathLexer xPathLexer = new XPathLexer("3nA=\"qo4jzE%rc");
((XPathLexer)"3nA=\"qo4jzE%rc").identifier();
((XPathLexer) string).doubleColon();
((XPathLexer) string).identifierOrOperatorName();
((XPathLexer) string).nextToken();

Test 136: 
XPathLexer xPathLexer = new XPathLexer("//book[@price > 20]");
((XPathLexer)"//book[@price > 20]").nextToken();

Test 137: 
String string = ") (";
XPathLexer xPathLexer = new XPathLexer(") (");
((XPathLexer)") (").nextToken();
String string = "Tzns0k_f";
((XPathLexer) string).setXPath(string);
((XPathLexer) string).nextToken();

Test 138: 
String string = "$*1L8@xjb";
XPathLexer xPathLexer = new XPathLexer("$*1L8@xjb");
((XPathLexer)"$*1L8@xjb").star();
((XPathLexer) string).nextToken();
((XPathLexer) string).identifierOrOperatorName();

Test 139: 
String string = "//book[@id=123 and @author='John Doe']";
XPathLexer xPathLexer = new XPathLexer("//book[@id=123 and @author='John Doe']");
((XPathLexer)"//book[@id=123 and @author='John Doe']").doubleColon();
((XPathLexer) string).nextToken();
((XPathLexer) string).nextToken();

Test 140: 
String string = "customerId:BNn,";
XPathLexer xPathLexer = new XPathLexer("customerId:BNn,");
((XPathLexer)"customerId:BNn,").dots();
((XPathLexer) string).dots();
((XPathLexer) string).identifier();
((XPathLexer) string).nextToken();

Test 141: 
String string = "/iD<K -Ba2IVWS";
XPathLexer xPathLexer = new XPathLexer("/iD<K -Ba2IVWS");
((XPathLexer)"/iD<K -Ba2IVWS").colon();
((XPathLexer) string).nextToken();
((XPathLexer) string).equals();
((XPathLexer) string).colon();
((XPathLexer) string).nextToken();

Test 142: 
XPathLexer xPathLexer = new XPathLexer("/iD<K -Ba2IVWS (XML Path Language)");
((XPathLexer)"/iD<K -Ba2IVWS (XML Path Language)").nextToken();

Test 143: 
XPathLexer xPathLexer = new XPathLexer("//html/body/div[@id='main']/p[@class='intro']");
((XPathLexer)"//html/body/div[@id='main']/p[@class='intro']").nextToken();

Test 144: 
String string = "H2O";
XPathLexer xPathLexer = new XPathLexer("H2O");
((XPathLexer)"H2O").nextToken();
((XPathLexer) string).nextToken();

Test 145: 
String string = "X2?31yh2Tg*5v/P";
XPathLexer xPathLexer = new XPathLexer("X2?31yh2Tg*5v/P");
((XPathLexer)"X2?31yh2Tg*5v/P").pipe();
((XPathLexer) string).nextToken();

Test 146: 
XPathLexer xPathLexer = new XPathLexer("/user/profile");
((XPathLexer)"/user/profile").nextToken();

Test 147: 
String string = "//div[@id='main']/h1";
XPathLexer xPathLexer = new XPathLexer("//div[@id='main']/h1");
((XPathLexer)"//div[@id='main']/h1").nextToken();
((XPathLexer) string).nextToken();

Test 148: 
XPathLexer xPathLexer = new XPathLexer("This is a sample input string.");
((XPathLexer)"This is a sample input string.").nextToken();

Test 149: 
XPathLexer xPathLexer = new XPathLexer("//book[@id='123'].");
((XPathLexer)"//book[@id='123'].").nextToken();

Test 150: 
XPathLexer xPathLexer = new XPathLexer("A9");
((XPathLexer)"A9").nextToken();

Test 151: 
String string = "tS'9A[";
XPathLexer xPathLexer = new XPathLexer("tS'9A[");
((XPathLexer)"tS'9A[").identifierOrOperatorName();
((XPathLexer) string).plus();
((XPathLexer) string).nextToken();
((XPathLexer) string).nextToken();
String string = "tS'9A[";
XPathLexer xPathLexer = new XPathLexer(string);
((XPathLexer) string).identifierOrOperatorName();
((XPathLexer) string).plus();
((XPathLexer) string).nextToken();
((XPathLexer) string).nextToken();
((XPathLexer) string).nextToken();
String string = "tS'9A[";
XPathLexer xPathLexer = new XPathLexer(string);
((XPathLexer) string).identifierOrOperatorName();
((XPathLexer) string).plus();
((XPathLexer) string).nextToken();
((XPathLexer) string).nextToken();
((XPathLexer) string).nextToken();
((XPathLexer) string).nextToken();
String string = "tS'9A[";
XPathLexer xPathLexer = new XPathLexer(string);
((XPathLexer) string).identifierOrOperatorName();
((XPathLexer) string).plus();
((XPathLexer) string).nextToken();
((XPathLexer) string).nextToken();
((XPathLexer) string).nextToken();
((XPathLexer) string).nextToken();
((XPathLexer) string).nextToken();

Test 152: 
String string = "9:BNn,";
XPathLexer xPathLexer = new XPathLexer("9:BNn,");
((XPathLexer)"9:BNn,").identifierOrOperatorName();
((XPathLexer) string).nextToken();
((XPathLexer) string).leftBracket();
((XPathLexer) string).comma();
((XPathLexer) string).rightParen();
((XPathLexer) string).colon();
((XPathLexer) string).nextToken();
((XPathLexer) string).getPreviousToken();
String string = "1234:BNn,";
XPathLexer xPathLexer = new XPathLexer(string);
((XPathLexer) string).identifierOrOperatorName();
((XPathLexer) string).nextToken();
((XPathLexer) string).leftBracket();
((XPathLexer) string).comma();
((XPathLexer) string).rightParen();
((XPathLexer) string).colon();
((XPathLexer) string).nextToken();
((XPathLexer) string).getPreviousToken();

Test 153: 
String string = "/root/parent/child";
XPathLexer xPathLexer = new XPathLexer("/root/parent/child");
((XPathLexer)"/root/parent/child").nextToken();
((XPathLexer) string).nextToken();

Test 154: 
String string = "//div[@class='container']/span[@id='mySpan']";
XPathLexer xPathLexer = new XPathLexer("//div[@class='container']/span[@id='mySpan']");
((XPathLexer)"//div[@class='container']/span[@id='mySpan']").nextToken();
((XPathLexer) string).identifierOrOperatorName();

Test 155: 
String string = "KG>BrF";
XPathLexer xPathLexer = new XPathLexer("KG>BrF");
((XPathLexer)"KG>BrF").identifierOrOperatorName();
((XPathLexer) string).nextToken();
((XPathLexer) string).identifierOrOperatorName();
String string = "KG>BrF";
XPathLexer xPathLexer = new XPathLexer(string);
((XPathLexer) string).identifierOrOperatorName();
((XPathLexer) string).nextToken();
((XPathLexer) string).identifierOrOperatorName();

Test 156: 
String string = "//div[@id='content']/p";
XPathLexer xPathLexer = new XPathLexer("//div[@id='content']/p");
((XPathLexer)"//div[@id='content']/p").doubleColon();
((XPathLexer) string).consume();
((XPathLexer) string).identifierOrOperatorName();
((XPathLexer) string).nextToken();

Test 157: 
XPathLexer xPathLexer = new XPathLexer("//div[@id='main']/p/a");
((XPathLexer)"//div[@id='main']/p/a").nextToken();

Test 158: 
XPathLexer xPathLexer = new XPathLexer("/bookstore/book[author='John Doe' and year>2000]/title");
((XPathLexer)"/bookstore/book[author='John Doe' and year>2000]/title").nextToken();

Test 159: 

Test 160: 
String string = "EK3o[vGY*bhod4,l";
XPathLexer xPathLexer = new XPathLexer("EK3o[vGY*bhod4,l");
((XPathLexer)"EK3o[vGY*bhod4,l").nextToken();
((XPathLexer) string).nextToken();
((XPathLexer) string).nextToken();
((XPathLexer) string).nextToken();
((XPathLexer) string).nextToken();
((XPathLexer) string).nextToken();
((XPathLexer) string).nextToken();
((XPathLexer) string).nextToken();
((XPathLexer) string).nextToken();

Test 161: 
XPathLexer xPathLexer = new XPathLexer("F|'~");
((XPathLexer)"F|'~").nextToken();

Test 162: 
XPathLexer xPathLexer = new XPathLexer("//author[@id='1234']/@name");
((XPathLexer)"//author[@id='1234']/@name").nextToken();

Test 163: 
XPathLexer xPathLexer = new XPathLexer("/books/book[author='J.K. Rowling' and year>1997]");
((XPathLexer)"/books/book[author='J.K. Rowling' and year>1997]").nextToken();

Test 164: 
String string = "!#$%^&*()_+-={}[]|\"':;<>,./?`~";
XPathLexer xPathLexer = new XPathLexer("!#$%^&*()_+-={}[]|\"':;<>,./?`~");
((XPathLexer)"!#$%^&*()_+-={}[]|\"':;<>,./?`~").at();
((XPathLexer) string).nextToken();

Test 165: 
XPathLexer xPathLexer = new XPathLexer("//root/path[@attribute='value']");
((XPathLexer)"//root/path[@attribute='value']").nextToken();

Test 166: 
String string = "Ly?A+VtQ]+$wtQ";
XPathLexer xPathLexer = new XPathLexer("Ly?A+VtQ]+$wtQ");
((XPathLexer)"Ly?A+VtQ]+$wtQ").nextToken();
String string = "Ly69A+VtQ]+$wtQ";
XPathLexer xPathLexer = new XPathLexer(string);
((XPathLexer) string).nextToken();

Test 167: 
XPathLexer xPathLexer = new XPathLexer("//div[@class='container']");
((XPathLexer)"//div[@class='container']").nextToken();

Test 168: 
String string = "(23+5)*10-4";
XPathLexer xPathLexer = new XPathLexer("(23+5)*10-4");
((XPathLexer)"(23+5)*10-4").nextToken();
String string = "/root/node[@attribute='value']";
XPathLexer xPathLexer = new XPathLexer(string);
((XPathLexer) string).nextToken();

Test 169: 
XPathLexer xPathLexer = new XPathLexer();
xPathLexer.setXPath("//div[@class='container']");
xPathLexer.notEquals();
xPathLexer.at();
xPathLexer.nextToken();
xPathLexer.at();
xPathLexer.leftBracket();
xPathLexer.nextToken();

Test 170: 
XPathLexer xPathLexer = new XPathLexer("Re`lCkMjCqyEd ");
((XPathLexer)"Re`lCkMjCqyEd ").nextToken();

Test 171: 

Test 172: 
XPathLexer xPathLexer = new XPathLexer();
xPathLexer.setXPath("Tzns0k_f");
xPathLexer.nextToken();

Test 173: 
XPathLexer xPathLexer = new XPathLexer();
xPathLexer.setXPath("U<},@");
xPathLexer.nextToken();

Test 174: 
XPathLexer xPathLexer = new XPathLexer("VU$yO");
((XPathLexer)"VU$yO").nextToken();

Test 175: 
XPathLexer xPathLexer = new XPathLexer("//book[author='Jane Doe']");
((XPathLexer)"//book[author='Jane Doe']").nextToken();

Test 176: 
XPathLexer xPathLexer = new XPathLexer("Xr[AS6do");
((XPathLexer)"Xr[AS6do").nextToken();

Test 177: 
XPathLexer xPathLexer = new XPathLexer("dG!fo");
((XPathLexer)"dG!fo").nextToken();

Test 178: 
XPathLexer xPathLexer = new XPathLexer("2*\"M`?#");
((XPathLexer)"2*\"M`?#").nextToken();

Test 179: 
String string = "/user/name=('John Smith' and 'john.smith@example.com')";
XPathLexer xPathLexer = new XPathLexer("/user/name=('John Smith' and 'john.smith@example.com')");
((XPathLexer)"/user/name=('John Smith' and 'john.smith@example.com')").leftBracket();
((XPathLexer) string).rightParen();
((XPathLexer) string).nextToken();

Test 180: 
String string = "20/u`95";
XPathLexer xPathLexer = new XPathLexer("20/u`95");
((XPathLexer)"20/u`95").not();
((XPathLexer) string).whitespace();
((XPathLexer) string).colon();
((XPathLexer) string).rightBracket();
((XPathLexer) string).nextToken();

Test 181: 
String string = "|bx]PxVClD]R?A";
XPathLexer xPathLexer = new XPathLexer("|bx]PxVClD]R?A");
((XPathLexer)"|bx]PxVClD]R?A").at();
((XPathLexer) string).nextToken();
String string = "/book/author[position()=1]/first-name";
XPathLexer xPathLexer = new XPathLexer(string);
((XPathLexer) string).at();
((XPathLexer) string).nextToken();

Test 182: 
XPathLexer xPathLexer = new XPathLexer("e<LUNO0D|");
((XPathLexer)"e<LUNO0D|").nextToken();

Test 183: 
XPathLexer xPathLexer = new XPathLexer("//book[@price > 10 and @author='J.K. Rowling']");
((XPathLexer)"//book[@price > 10 and @author='J.K. Rowling']").nextToken();

Test 184: 
String string = "k7qG>Br4";
XPathLexer xPathLexer = new XPathLexer("k7qG>Br4");
((XPathLexer)"k7qG>Br4").nextToken();
String string = "//div[@id='content']/p[1]";
XPathLexer xPathLexer = new XPathLexer(string);
((XPathLexer) string).nextToken();

Test 185: 
String string = "q=/j/g29/'1q";
XPathLexer xPathLexer = new XPathLexer("q=/j/g29/'1q");
((XPathLexer)"q=/j/g29/'1q").comma();
((XPathLexer) string).dots();
((XPathLexer) string).equals();
((XPathLexer) string).comma();
((XPathLexer) string).leftBracket();
((XPathLexer) string).comma();
((XPathLexer) string).rightParen();
((XPathLexer) string).colon();
((XPathLexer) string).nextToken();

Test 186: 
XPathLexer xPathLexer = new XPathLexer("//div[@id='container']/ul/li[position()=last()]/a");
((XPathLexer)"//div[@id='container']/ul/li[position()=last()]/a").nextToken();

Test 187: 
String string = "com.werken.saxpath.XPathLexer";
XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.XPathLexer");
((XPathLexer)"com.werken.saxpath.XPathLexer").leftBracket();
((XPathLexer) string).nextToken();
((XPathLexer) string).leftBracket();
((XPathLexer) string).nextToken();

Test 188: 
XPathLexer xPathLexer = new XPathLexer("//div[@class='container']/p[contains(text(), 'hello')]");
((XPathLexer)"//div[@class='container']/p[contains(text(), 'hello')]").nextToken();

Test 189: 
XPathLexer xPathLexer = new XPathLexer("tLgWN@XN<'");
((XPathLexer)"tLgWN@XN<'").nextToken();

Test 190: 
XPathLexer xPathLexer = new XPathLexer("v\"R-PGkiC LT=*iTw");
((XPathLexer)"v\"R-PGkiC LT=*iTw").nextToken();

Test 191: 
XPathLexer xPathLexer = new XPathLexer("1+2*3-4/5");
((XPathLexer)"1+2*3-4/5").nextToken();

Test 192: 
String string = "Nx|H'l\u0001th=<c^B1S]";
XPathLexer xPathLexer = new XPathLexer("Nx|H'l\u0001th=<c^B1S]");
((XPathLexer)"Nx|H'l\u0001th=<c^B1S]").not();
((XPathLexer) string).nextToken();

Test 193: 
XPathLexer xPathLexer = new XPathLexer();
xPathLexer.setXPath("/book/title");
xPathLexer.star();
xPathLexer.nextToken();

Test 194: 
XPathLexer xPathLexer = new XPathLexer();
xPathLexer.nextToken();

Test 195: 
String string = "K.!=D";
XPathLexer xPathLexer = new XPathLexer("K.!=D");
((XPathLexer)"K.!=D").rightParen();
((XPathLexer) string).comma();
((XPathLexer) string).nextToken();

Test 196: 
String string = "GpE:'Fi?";
XPathLexer xPathLexer = new XPathLexer("GpE:'Fi?");
Token at = ((XPathLexer)"GpE:'Fi?").at();
((XPathLexer) string).setPreviousToken(at);
((XPathLexer) string).identifierOrOperatorName();

Test 197: 
String string = "10:BookName,";
XPathLexer xPathLexer = new XPathLexer("10:BookName,");
((XPathLexer)"10:BookName,").minus();
((XPathLexer) string).nextToken();
((XPathLexer) string).identifierOrOperatorName();
String string = "10:BookName,";
XPathLexer xPathLexer = new XPathLexer(string);
((XPathLexer) string).minus();
((XPathLexer) string).nextToken();
((XPathLexer) string).identifierOrOperatorName();

Test 198: 
String string = "//iD <K -Ba2IVWS";
XPathLexer xPathLexer = new XPathLexer("//iD <K -Ba2IVWS");
Token doubleColon = ((XPathLexer)"//iD <K -Ba2IVWS").doubleColon();
((XPathLexer) string).setPreviousToken(doubleColon);
((XPathLexer) string).nextToken();

Test 199: 
XPathLexer xPathLexer = new XPathLexer();
Token notEquals = xPathLexer.notEquals();
xPathLexer.setPreviousToken(notEquals);

Test 200: 
String string = "VU$yO";
XPathLexer xPathLexer = new XPathLexer("VU$yO");
((XPathLexer)"VU$yO").doubleColon();
((XPathLexer) string).nextToken();
((XPathLexer) string).identifierOrOperatorName();

Test 201: 
String string = ".'E2T'";
XPathLexer xPathLexer = new XPathLexer(".'E2T'");
((XPathLexer)".'E2T'").dollar();
((XPathLexer) string).nextToken();
((XPathLexer) string).identifierOrOperatorName();
String string = ".'E2T'";
XPathLexer xPathLexer = new XPathLexer(string);
((XPathLexer) string).dollar();
((XPathLexer) string).nextToken();
((XPathLexer) string).identifierOrOperatorName();
String string = ".'E2T'";
XPathLexer xPathLexer = new XPathLexer(string);
((XPathLexer) string).dollar();
((XPathLexer) string).nextToken();

Test 202: 
String string = "//div[@id='foo']";
XPathLexer xPathLexer = new XPathLexer("//div[@id='foo']");
((XPathLexer)"//div[@id='foo']").nextToken();
((XPathLexer) string).nextToken();

Test 203: 
String string = "//*[@id='main']/h1";
XPathLexer xPathLexer = new XPathLexer("//*[@id='main']/h1");
((XPathLexer)"//*[@id='main']/h1").slashes();
((XPathLexer) string).operatorName();

Test 204: 
String string = "com.werken.saxpath.XPathLexer";
XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.XPathLexer");
((XPathLexer)"com.werken.saxpath.XPathLexer").star();
((XPathLexer) string).leftParen();

Test 205: 
XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.Token");

Test 206: 
XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.Token");

Test 207: 
XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.Token");

Test 208: 
String string = "com.werken.saxpath.Token";
XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.Token");
((XPathLexer)"com.werken.saxpath.Token").leftBracket();
((XPathLexer) string).not();
((XPathLexer) string).or();

Test 209: 
XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.XPathLexer");

Test 210: 
XPathLexer xPathLexer = new XPathLexer("//div[@id='main' -Ba2IVWS");
((XPathLexer)"//div[@id='main' -Ba2IVWS").number();

Test 211: 
XPathLexer xPathLexer = new XPathLexer();

Test 212: 
XPathLexer xPathLexer = new XPathLexer();
xPathLexer.setXPath("//div[@class='container']/p[@id='description']");
xPathLexer.whitespace();

Test 213: 
XPathLexer xPathLexer = new XPathLexer(".//div[contains(@class,'container')]/p");
((XPathLexer)".//div[contains(@class,'container')]/p").dots();

Test 214: 
XPathLexer xPathLexer = new XPathLexer("/bookstore/book[@author='John Doe']");
((XPathLexer)"/bookstore/book[@author='John Doe']").slashes();

Test 215: 
XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.Token");
((XPathLexer)"com.werken.saxpath.Token").getXPath();

Test 216: 
String string = "eS?Ea'qz";
XPathLexer xPathLexer = new XPathLexer("eS?Ea'qz");
((XPathLexer)"eS?Ea'qz").rightParen();
((XPathLexer) string).colon();
((XPathLexer) string).equals();
((XPathLexer) string).equals();
((XPathLexer) string).nextToken();

Test 217: 
XPathLexer xPathLexer = new XPathLexer();
xPathLexer.setXPath("3nA=\"qo4jzE%rc");
xPathLexer.at();
xPathLexer.LA(5);

Test 218: 
XPathLexer xPathLexer = new XPathLexer();
xPathLexer.setXPath("//*[@id='main']");
xPathLexer.doubleColon();
xPathLexer.LA((int) (Integer) null);

Test 219: 
XPathLexer xPathLexer = new XPathLexer();
xPathLexer.LA(0);

Test 220: 
XPathLexer xPathLexer = new XPathLexer();
xPathLexer.currentPosition();

Test 221: 
XPathLexer xPathLexer = new XPathLexer("The quick brown fox jumps over the lazy dog.");
((XPathLexer)"The quick brown fox jumps over the lazy dog.").endPosition();

Test 222: 
XPathLexer xPathLexer = new XPathLexer();

Test 223: 
XPathLexer xPathLexer = new XPathLexer();
Token dots = xPathLexer.dots();
xPathLexer.setPreviousToken(dots);
xPathLexer.getPreviousToken();

Test 224: 
String string = "/iD<K -Ba2IVWS";
XPathLexer xPathLexer = new XPathLexer("/iD<K -Ba2IVWS");
((XPathLexer)"/iD<K -Ba2IVWS").getPreviousToken();
String string = "/iD<K -Ba2IVWS";
XPathLexer xPathLexer = new XPathLexer(string);
((XPathLexer) string).getPreviousToken();

Test 225: 
XPathLexer xPathLexer = new XPathLexer();
xPathLexer.setXPath("/book/author");
xPathLexer.getXPath();

Test 226: 
XPathLexer xPathLexer = new XPathLexer();
xPathLexer.getXPath();

Test 227: 
String string = "/users/bob/documents";
XPathLexer xPathLexer = new XPathLexer("/users/bob/documents");
((XPathLexer)"/users/bob/documents").literal();
((XPathLexer) string).hasMoreChars();
String string = "/users/*[@id='1234']/documents[position()=5]";
XPathLexer xPathLexer = new XPathLexer(string);
((XPathLexer) string).literal();
((XPathLexer) string).hasMoreChars();
String string = "/users/*[@id=1234]/documents[position()=5 and name='Bob']";
XPathLexer xPathLexer = new XPathLexer(string);
((XPathLexer) string).literal();
((XPathLexer) string).hasMoreChars();

Test 228: 
XPathLexer xPathLexer = new XPathLexer("com.example.xpath.XPathLexer");

Test 229: 
XPathLexer xPathLexer = new XPathLexer();
xPathLexer.isIdentifierChar('_');

Test 230: 
XPathLexer xPathLexer = new XPathLexer();
xPathLexer.isIdentifierStartChar('\u03B1');

Test 231: 
XPathLexer xPathLexer = new XPathLexer("q=^j{MY7l.g29;'1q");
((XPathLexer)"q=^j{MY7l.g29;'1q").literal();


* Generated after the refinement and before minimization 232 tests with total length 863
* test suite isTestSuite: 232
Test 0: 
XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.Token");
xPathLexer.nextToken();
Test 1: 
XPathLexer xPathLexer = new XPathLexer(") (");
xPathLexer.equals();
xPathLexer.nextToken();
xPathLexer.setXPath("Tzns0k_f");
xPathLexer.nextToken();
Test 2: 
XPathLexer xPathLexer = new XPathLexer("|h'rQVn*qV)@!5H>J");
xPathLexer.nextToken();
xPathLexer.nextToken();
Test 3: 
XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.Token");
xPathLexer.leftBracket();
xPathLexer.not();
xPathLexer.nextToken();
Test 4: 
XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.Token");
Token minus = xPathLexer.minus();
xPathLexer.setPreviousToken(minus);
xPathLexer.identifierOrOperatorName();
Test 5: 
XPathLexer xPathLexer = new XPathLexer();
xPathLexer.plus();
xPathLexer.currentPosition();
Test 6: 
XPathLexer xPathLexer = new XPathLexer("!)JT");
xPathLexer.nextToken();
xPathLexer.identifierOrOperatorName();
Test 7: 
XPathLexer xPathLexer = new XPathLexer("\"<=:zyOvGFl.H@)");
xPathLexer.nextToken();
Test 8: 
XPathLexer xPathLexer = new XPathLexer("q=^j{MY7l.g29;'1q");
xPathLexer.setXPath("4#?p,~P9!");
xPathLexer.at();
xPathLexer.nextToken();
Test 9: 
XPathLexer xPathLexer = new XPathLexer("3nA=\"qo4jzE%rc");
xPathLexer.identifier();
xPathLexer.doubleColon();
xPathLexer.identifierOrOperatorName();
xPathLexer.nextToken();
Test 10: 
XPathLexer xPathLexer = new XPathLexer("&p5u3TD`y@p-^d|&:.");
xPathLexer.nextToken();
Test 11: 
XPathLexer xPathLexer = new XPathLexer(") (");
xPathLexer.nextToken();
xPathLexer.setXPath("Tzns0k_f");
xPathLexer.nextToken();
Test 12: 
XPathLexer xPathLexer = new XPathLexer("$*1L8@xjb");
xPathLexer.star();
xPathLexer.nextToken();
xPathLexer.identifierOrOperatorName();
Test 13: 
XPathLexer xPathLexer = new XPathLexer("<W+rU*$bt?VbT");
xPathLexer.doubleColon();
xPathLexer.nextToken();
xPathLexer.nextToken();
Test 14: 
XPathLexer xPathLexer = new XPathLexer("9:BNn,");
xPathLexer.dots();
xPathLexer.dots();
xPathLexer.identifier();
xPathLexer.nextToken();
Test 15: 
XPathLexer xPathLexer = new XPathLexer("/iD<K -Ba2IVWS");
xPathLexer.colon();
xPathLexer.nextToken();
xPathLexer.equals();
xPathLexer.colon();
xPathLexer.nextToken();
Test 16: 
XPathLexer xPathLexer = new XPathLexer("q=^j{MYl.g29;'1q");
xPathLexer.leftBracket();
xPathLexer.whitespace();
xPathLexer.dots();
xPathLexer.comma();
xPathLexer.leftBracket();
xPathLexer.comma();
xPathLexer.rightParen();
xPathLexer.colon();
xPathLexer.nextToken();
xPathLexer.identifierOrOperatorName();
Test 17: 
XPathLexer xPathLexer = new XPathLexer("/iD<K -Ba2IVWS");
xPathLexer.nextToken();
xPathLexer.identifierOrOperatorName();
Test 18: 
XPathLexer xPathLexer = new XPathLexer("0;");
xPathLexer.nextToken();
Test 19: 
XPathLexer xPathLexer = new XPathLexer("1H0");
xPathLexer.nextToken();
xPathLexer.nextToken();
Test 20: 
XPathLexer xPathLexer = new XPathLexer("X2?31yh2Tg*5v/P");
xPathLexer.pipe();
xPathLexer.nextToken();
Test 21: 
XPathLexer xPathLexer = new XPathLexer("3Y{mms7WR.");
xPathLexer.nextToken();
Test 22: 
XPathLexer xPathLexer = new XPathLexer("4g`ENPGP(U,${~B");
xPathLexer.nextToken();
xPathLexer.nextToken();
Test 23: 
XPathLexer xPathLexer = new XPathLexer("5nqXpW;P=D_/k");
xPathLexer.nextToken();
Test 24: 
XPathLexer xPathLexer = new XPathLexer("6T.");
xPathLexer.nextToken();
Test 25: 
XPathLexer xPathLexer = new XPathLexer("q=^j{MY7l.g29;'1q");
xPathLexer.leftBracket();
xPathLexer.dots();
xPathLexer.comma();
xPathLexer.leftBracket();
xPathLexer.comma();
xPathLexer.rightParen();
xPathLexer.colon();
xPathLexer.nextToken();
Test 26: 
XPathLexer xPathLexer = new XPathLexer("8F");
xPathLexer.nextToken();
Test 27: 
XPathLexer xPathLexer = new XPathLexer("tS'9A[");
xPathLexer.identifierOrOperatorName();
xPathLexer.plus();
xPathLexer.nextToken();
xPathLexer.nextToken();
Test 28: 
XPathLexer xPathLexer = new XPathLexer("9:BNn,");
xPathLexer.identifierOrOperatorName();
xPathLexer.nextToken();
xPathLexer.leftBracket();
xPathLexer.comma();
xPathLexer.rightParen();
xPathLexer.colon();
xPathLexer.nextToken();
xPathLexer.getPreviousToken();
Test 29: 
XPathLexer xPathLexer = new XPathLexer("NoJU;J?1v");
xPathLexer.nextToken();
xPathLexer.nextToken();
Test 30: 
XPathLexer xPathLexer = new XPathLexer(" <@w%@+");
xPathLexer.nextToken();
xPathLexer.identifierOrOperatorName();
Test 31: 
XPathLexer xPathLexer = new XPathLexer("q=^j{MY7l.g29;'1q");
xPathLexer.comma();
xPathLexer.nextToken();
xPathLexer.identifierOrOperatorName();
Test 32: 
XPathLexer xPathLexer = new XPathLexer("KG>BrF");
xPathLexer.identifierOrOperatorName();
xPathLexer.nextToken();
xPathLexer.identifierOrOperatorName();
Test 33: 
XPathLexer xPathLexer = new XPathLexer("Bu[V?%EN4&_wLeV_:W");
xPathLexer.doubleColon();
xPathLexer.consume();
xPathLexer.identifierOrOperatorName();
xPathLexer.nextToken();
Test 34: 
XPathLexer xPathLexer = new XPathLexer("@b)eb2\"h7\nDuE*cIi");
xPathLexer.nextToken();
Test 35: 
XPathLexer xPathLexer = new XPathLexer("BuV?%EN4n&_wLeV:W");
xPathLexer.nextToken();
Test 36: 
XPathLexer xPathLexer = new XPathLexer("CJi");
xPathLexer.nextToken();
Test 37: 
XPathLexer xPathLexer = new XPathLexer("EK3o[vGY*bhod4,l");
xPathLexer.nextToken();
xPathLexer.nextToken();
Test 38: 
XPathLexer xPathLexer = new XPathLexer("F|'~");
xPathLexer.nextToken();
Test 39: 
XPathLexer xPathLexer = new XPathLexer("GI\"8u5");
xPathLexer.nextToken();
Test 40: 
XPathLexer xPathLexer = new XPathLexer("Ib.4N");
xPathLexer.nextToken();
Test 41: 
XPathLexer xPathLexer = new XPathLexer("!)JT");
xPathLexer.at();
xPathLexer.at();
xPathLexer.nextToken();
Test 42: 
XPathLexer xPathLexer = new XPathLexer("K.=D`");
xPathLexer.nextToken();
Test 43: 
XPathLexer xPathLexer = new XPathLexer("Ly?A+VtQ]+$wtQ");
xPathLexer.nextToken();
Test 44: 
XPathLexer xPathLexer = new XPathLexer("M%=");
xPathLexer.nextToken();
Test 45: 
XPathLexer xPathLexer = new XPathLexer("OB`0RtoR)E~zfca%?$");
xPathLexer.nextToken();
Test 46: 
XPathLexer xPathLexer = new XPathLexer();
xPathLexer.setXPath("4#?p,~P9!");
xPathLexer.notEquals();
xPathLexer.at();
xPathLexer.nextToken();
xPathLexer.at();
xPathLexer.leftBracket();
xPathLexer.nextToken();
Test 47: 
XPathLexer xPathLexer = new XPathLexer("FnQ$|&9");
xPathLexer.equals();
xPathLexer.at();
xPathLexer.nextToken();
Test 48: 
XPathLexer xPathLexer = new XPathLexer("Re`lCkMjCqyEd ");
xPathLexer.nextToken();
Test 49: 
XPathLexer xPathLexer = new XPathLexer("SmoY~H'7-Hef\"x)");
xPathLexer.nextToken();
Test 50: 
XPathLexer xPathLexer = new XPathLexer();
xPathLexer.setXPath("Tzns0k_f");
xPathLexer.nextToken();
Test 51: 
XPathLexer xPathLexer = new XPathLexer();
xPathLexer.setXPath("U<},@");
xPathLexer.nextToken();
Test 52: 
XPathLexer xPathLexer = new XPathLexer("VU$yO");
xPathLexer.nextToken();
Test 53: 
XPathLexer xPathLexer = new XPathLexer("WA6");
xPathLexer.nextToken();
Test 54: 
XPathLexer xPathLexer = new XPathLexer("Xr[AS6do");
xPathLexer.nextToken();
Test 55: 
XPathLexer xPathLexer = new XPathLexer("q=^j{MY7l.g29;'1q");
xPathLexer.dots();
xPathLexer.equals();
xPathLexer.comma();
xPathLexer.leftBracket();
xPathLexer.rightParen();
xPathLexer.colon();
xPathLexer.nextToken();
Test 56: 
XPathLexer xPathLexer = new XPathLexer("Z:{:;y[\"");
xPathLexer.nextToken();
Test 57: 
XPathLexer xPathLexer = new XPathLexer("dG!fo");
xPathLexer.nextToken();
Test 58: 
XPathLexer xPathLexer = new XPathLexer("]b88g[)2*\"M`?#");
xPathLexer.nextToken();
xPathLexer.identifierOrOperatorName();
Test 59: 
XPathLexer xPathLexer = new XPathLexer("q=^j{MY7l.g29;'1q");
xPathLexer.leftBracket();
xPathLexer.rightParen();
xPathLexer.nextToken();
Test 60: 
XPathLexer xPathLexer = new XPathLexer("{_y[\"F");
xPathLexer.equals();
xPathLexer.nextToken();
Test 61: 
XPathLexer xPathLexer = new XPathLexer("20/u`95");
xPathLexer.not();
xPathLexer.whitespace();
xPathLexer.colon();
xPathLexer.rightBracket();
xPathLexer.nextToken();
Test 62: 
XPathLexer xPathLexer = new XPathLexer("|bx]PxVClD]R?A");
xPathLexer.at();
xPathLexer.nextToken();
Test 63: 
XPathLexer xPathLexer = new XPathLexer("e<LUNO0D|");
xPathLexer.nextToken();
Test 64: 
XPathLexer xPathLexer = new XPathLexer("f]l.']LBO-7");
xPathLexer.nextToken();
Test 65: 
XPathLexer xPathLexer = new XPathLexer("q=^j{MY7l.g29;'1q");
xPathLexer.setXPath("}h26-V)RL");
xPathLexer.at();
xPathLexer.nextToken();
Test 66: 
XPathLexer xPathLexer = new XPathLexer("q=^j{MY7l.g29;'1q");
xPathLexer.leftBracket();
xPathLexer.dollar();
xPathLexer.consume();
xPathLexer.nextToken();
Test 67: 
XPathLexer xPathLexer = new XPathLexer("k7qG>Br4");
xPathLexer.nextToken();
Test 68: 
XPathLexer xPathLexer = new XPathLexer("q=^j{MY7l.g29;'1q");
xPathLexer.comma();
xPathLexer.dots();
xPathLexer.equals();
xPathLexer.comma();
xPathLexer.leftBracket();
xPathLexer.comma();
xPathLexer.rightParen();
xPathLexer.colon();
xPathLexer.nextToken();
Test 69: 
XPathLexer xPathLexer = new XPathLexer("n!J");
xPathLexer.nextToken();
Test 70: 
XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.XPathLexer");
xPathLexer.leftBracket();
xPathLexer.nextToken();
Test 71: 
XPathLexer xPathLexer = new XPathLexer("q=^j{MY7l.g29;'1q");
xPathLexer.nextToken();
Test 72: 
XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.XPathLexer");
xPathLexer.leftParen();
xPathLexer.rightParen();
xPathLexer.plus();
xPathLexer.consume(1);
xPathLexer.dots();
xPathLexer.colon();
xPathLexer.nextToken();
Test 73: 
XPathLexer xPathLexer = new XPathLexer("s2");
xPathLexer.nextToken();
Test 74: 
XPathLexer xPathLexer = new XPathLexer("tLgWN@XN<'");
xPathLexer.nextToken();
Test 75: 
XPathLexer xPathLexer = new XPathLexer("u&HSr1");
xPathLexer.nextToken();
Test 76: 
XPathLexer xPathLexer = new XPathLexer("v\"R-PGkiC LT=*iTw");
xPathLexer.nextToken();
Test 77: 
XPathLexer xPathLexer = new XPathLexer("wK3WT4j");
xPathLexer.nextToken();
Test 78: 
XPathLexer xPathLexer = new XPathLexer("Nx|H'l\u0001th=<c^B1S]");
xPathLexer.not();
xPathLexer.nextToken();
Test 79: 
XPathLexer xPathLexer = new XPathLexer("yS>TKm>&ZvN;Z]BY(");
xPathLexer.nextToken();
Test 80: 
XPathLexer xPathLexer = new XPathLexer();
xPathLexer.setXPath("Tzns0k_f");
xPathLexer.star();
xPathLexer.nextToken();
Test 81: 
XPathLexer xPathLexer = new XPathLexer();
xPathLexer.nextToken();
Test 82: 
XPathLexer xPathLexer = new XPathLexer("K.!=D");
xPathLexer.rightParen();
xPathLexer.comma();
xPathLexer.nextToken();
Test 83: 
XPathLexer xPathLexer = new XPathLexer("q=^j{MY7l.g29;'1q");
Token leftBracket = xPathLexer.leftBracket();
xPathLexer.setPreviousToken(leftBracket);
xPathLexer.identifierOrOperatorName();
Test 84: 
XPathLexer xPathLexer = new XPathLexer("GpE:'Fi?");
Token at = xPathLexer.at();
xPathLexer.setPreviousToken(at);
xPathLexer.identifierOrOperatorName();
Test 85: 
XPathLexer xPathLexer = new XPathLexer("9:BNn,");
xPathLexer.minus();
xPathLexer.nextToken();
xPathLexer.identifierOrOperatorName();
Test 86: 
XPathLexer xPathLexer = new XPathLexer("/iD<K -Ba2IVWS");
Token doubleColon = xPathLexer.doubleColon();
xPathLexer.setPreviousToken(doubleColon);
xPathLexer.nextToken();
Test 87: 
XPathLexer xPathLexer = new XPathLexer();
Token notEquals = xPathLexer.notEquals();
xPathLexer.setPreviousToken(notEquals);
xPathLexer.identifierOrOperatorName();
Test 88: 
XPathLexer xPathLexer = new XPathLexer("VU$yO");
xPathLexer.doubleColon();
xPathLexer.nextToken();
xPathLexer.identifierOrOperatorName();
Test 89: 
XPathLexer xPathLexer = new XPathLexer(".'E2T'");
xPathLexer.dollar();
xPathLexer.nextToken();
xPathLexer.identifierOrOperatorName();
Test 90: 
XPathLexer xPathLexer = new XPathLexer(",j!V9");
xPathLexer.nextToken();
xPathLexer.nextToken();
Test 91: 
XPathLexer xPathLexer = new XPathLexer("q=^j{MY7l.g29;'1q");
xPathLexer.leftBracket();
xPathLexer.dots();
xPathLexer.rightBracket();
xPathLexer.at();
xPathLexer.nextToken();
xPathLexer.identifierOrOperatorName();
Test 92: 
XPathLexer xPathLexer = new XPathLexer("BaU");
xPathLexer.slashes();
xPathLexer.operatorName();
Test 93: 
XPathLexer xPathLexer = new XPathLexer("-d-,db.xE:|?{#");
xPathLexer.dots();
xPathLexer.operatorName();
Test 94: 
XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.XPathLexer");
xPathLexer.star();
xPathLexer.leftParen();
xPathLexer.operatorName();
Test 95: 
XPathLexer xPathLexer = new XPathLexer("o%LSPo_nwNhA}F2SHk");
xPathLexer.operatorName();
Test 96: 
XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.Token");
xPathLexer.mod();
Test 97: 
XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.Token");
xPathLexer.div();
Test 98: 
XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.Token");
xPathLexer.and();
Test 99: 
XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.Token");
xPathLexer.leftBracket();
xPathLexer.not();
xPathLexer.or();
Test 100: 
XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.XPathLexer");
xPathLexer.notEquals();
xPathLexer.slashes();
xPathLexer.number();
Test 101: 
XPathLexer xPathLexer = new XPathLexer("/iD<K -Ba2IVWS");
xPathLexer.number();
Test 102: 
XPathLexer xPathLexer = new XPathLexer();
xPathLexer.whitespace();
Test 103: 
XPathLexer xPathLexer = new XPathLexer();
xPathLexer.setXPath(") (");
xPathLexer.whitespace();
Test 104: 
XPathLexer xPathLexer = new XPathLexer("q=^j{MY7l.g29;'1q");
xPathLexer.relationalOperator();
Test 105: 
XPathLexer xPathLexer = new XPathLexer("/.D<K -Ba2IVWS");
xPathLexer.dots();
Test 106: 
XPathLexer xPathLexer = new XPathLexer("2/#y");
xPathLexer.slashes();
Test 107: 
XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.Token");
xPathLexer.getXPath();
Test 108: 
XPathLexer xPathLexer = new XPathLexer("eS?Ea'qz");
xPathLexer.rightParen();
xPathLexer.colon();
xPathLexer.equals();
xPathLexer.equals();
xPathLexer.nextToken();
Test 109: 
XPathLexer xPathLexer = new XPathLexer();
xPathLexer.setXPath("3nA=\"qo4jzE%rc");
xPathLexer.at();
xPathLexer.LA(5);
Test 110: 
XPathLexer xPathLexer = new XPathLexer();
xPathLexer.setXPath("4#?p,~P9!");
xPathLexer.doubleColon();
xPathLexer.LA((-1));
Test 111: 
XPathLexer xPathLexer = new XPathLexer();
xPathLexer.star();
xPathLexer.LA(0);
Test 112: 
XPathLexer xPathLexer = new XPathLexer();
xPathLexer.currentPosition();
Test 113: 
XPathLexer xPathLexer = new XPathLexer("K.!=D");
xPathLexer.endPosition();
Test 114: 
XPathLexer xPathLexer = new XPathLexer();
xPathLexer.endPosition();
Test 115: 
XPathLexer xPathLexer = new XPathLexer();
Token dots = xPathLexer.dots();
xPathLexer.setPreviousToken(dots);
xPathLexer.getPreviousToken();
Test 116: 
XPathLexer xPathLexer = new XPathLexer("/iD<K -Ba2IVWS");
xPathLexer.getPreviousToken();
Test 117: 
XPathLexer xPathLexer = new XPathLexer();
xPathLexer.setXPath("");
xPathLexer.getXPath();
Test 118: 
XPathLexer xPathLexer = new XPathLexer();
xPathLexer.getXPath();
Test 119: 
XPathLexer xPathLexer = new XPathLexer("Bfl&[*+1Fa~'C&hz");
xPathLexer.literal();
xPathLexer.hasMoreChars();
Test 120: 
XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.XPathLexer");
xPathLexer.hasMoreChars();
Test 121: 
XPathLexer xPathLexer = new XPathLexer("q=^j{MY7l.g29;'1q");
xPathLexer.isIdentifierChar('>');
Test 122: 
XPathLexer xPathLexer = new XPathLexer();
xPathLexer.isIdentifierChar('W');
Test 123: 
XPathLexer xPathLexer = new XPathLexer("q=^j{MY7l.g29;'1q");
xPathLexer.isIdentifierStartChar('9');
Test 124: 
XPathLexer xPathLexer = new XPathLexer();
xPathLexer.isIdentifierStartChar('I');
Test 125: 
XPathLexer xPathLexer = new XPathLexer("q=^j{MY7l.g29;'1q");
xPathLexer.literal();
Test 126: 
XPathLexer xPathLexer = new XPathLexer("N7`P<l1{`vcA");
xPathLexer.nextToken();
xPathLexer.at();
xPathLexer.rightBracket();
xPathLexer.relationalOperator();
Test 127: 
XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.Token");
((XPathLexer)"com.werken.saxpath.Token").nextToken();

Test 128: 
String string = "123 + 456 * (789 - 987)";
XPathLexer xPathLexer = new XPathLexer("123 + 456 * (789 - 987)");
((XPathLexer)"123 + 456 * (789 - 987)").equals();
((XPathLexer) string).nextToken();
String string = "Tzns0k_f";
((XPathLexer) string).setXPath(string);
((XPathLexer) string).nextToken();
((XPathLexer) string).nextToken();
((XPathLexer) string).nextToken();
((XPathLexer) string).nextToken();
((XPathLexer) string).nextToken();
((XPathLexer) string).nextToken();

Test 129: 
String string = "|h'rQVn*qV)@!5H>J";
XPathLexer xPathLexer = new XPathLexer("|h'rQVn*qV)@!5H>J");
((XPathLexer)"|h'rQVn*qV)@!5H>J").nextToken();
((XPathLexer) string).nextToken();

Test 130: 
String string = "com.werken.saxpath.Token";
XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.Token");
((XPathLexer)"com.werken.saxpath.Token").leftBracket();
((XPathLexer) string).not();
((XPathLexer) string).nextToken();

Test 131: 
String string = "com.werken.saxpath.Token";
XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.Token");
Token minus = ((XPathLexer)"com.werken.saxpath.Token").minus();
((XPathLexer) string).setPreviousToken(minus);
((XPathLexer) string).identifierOrOperatorName();

Test 132: 
String string = "!@#$%^&*()_+-=[]{}|;':\"<>,./?`~";
XPathLexer xPathLexer = new XPathLexer("!@#$%^&*()_+-=[]{}|;':\"<>,./?`~");
((XPathLexer)"!@#$%^&*()_+-=[]{}|;':\"<>,./?`~").nextToken();
((XPathLexer) string).identifierOrOperatorName();

Test 133: 
XPathLexer xPathLexer = new XPathLexer("\"<=:zyOvGFl.H@)");
((XPathLexer)"\"<=:zyOvGFl.H@)").nextToken();

Test 134: 
String string = "root/node[@attr='value']";
XPathLexer xPathLexer = new XPathLexer("root/node[@attr='value']");
((XPathLexer)"root/node[@attr='value']").setXPath("child::*");
((XPathLexer) string).at();
((XPathLexer) string).nextToken();

Test 135: 
String string = "3nA=\"qo4jzE%rc";
XPathLexer xPathLexer = new XPathLexer("3nA=\"qo4jzE%rc");
((XPathLexer)"3nA=\"qo4jzE%rc").identifier();
((XPathLexer) string).doubleColon();
((XPathLexer) string).identifierOrOperatorName();
((XPathLexer) string).nextToken();

Test 136: 
XPathLexer xPathLexer = new XPathLexer("//book[@price > 20]");
((XPathLexer)"//book[@price > 20]").nextToken();

Test 137: 
String string = ") (";
XPathLexer xPathLexer = new XPathLexer(") (");
((XPathLexer)") (").nextToken();
String string = "Tzns0k_f";
((XPathLexer) string).setXPath(string);
((XPathLexer) string).nextToken();

Test 138: 
String string = "$*1L8@xjb";
XPathLexer xPathLexer = new XPathLexer("$*1L8@xjb");
((XPathLexer)"$*1L8@xjb").star();
((XPathLexer) string).nextToken();
((XPathLexer) string).identifierOrOperatorName();

Test 139: 
String string = "//book[@id=123 and @author='John Doe']";
XPathLexer xPathLexer = new XPathLexer("//book[@id=123 and @author='John Doe']");
((XPathLexer)"//book[@id=123 and @author='John Doe']").doubleColon();
((XPathLexer) string).nextToken();
((XPathLexer) string).nextToken();

Test 140: 
String string = "customerId:BNn,";
XPathLexer xPathLexer = new XPathLexer("customerId:BNn,");
((XPathLexer)"customerId:BNn,").dots();
((XPathLexer) string).dots();
((XPathLexer) string).identifier();
((XPathLexer) string).nextToken();

Test 141: 
String string = "/iD<K -Ba2IVWS";
XPathLexer xPathLexer = new XPathLexer("/iD<K -Ba2IVWS");
((XPathLexer)"/iD<K -Ba2IVWS").colon();
((XPathLexer) string).nextToken();
((XPathLexer) string).equals();
((XPathLexer) string).colon();
((XPathLexer) string).nextToken();

Test 142: 
XPathLexer xPathLexer = new XPathLexer("/iD<K -Ba2IVWS (XML Path Language)");
((XPathLexer)"/iD<K -Ba2IVWS (XML Path Language)").nextToken();

Test 143: 
XPathLexer xPathLexer = new XPathLexer("//html/body/div[@id='main']/p[@class='intro']");
((XPathLexer)"//html/body/div[@id='main']/p[@class='intro']").nextToken();

Test 144: 
String string = "H2O";
XPathLexer xPathLexer = new XPathLexer("H2O");
((XPathLexer)"H2O").nextToken();
((XPathLexer) string).nextToken();

Test 145: 
String string = "X2?31yh2Tg*5v/P";
XPathLexer xPathLexer = new XPathLexer("X2?31yh2Tg*5v/P");
((XPathLexer)"X2?31yh2Tg*5v/P").pipe();
((XPathLexer) string).nextToken();

Test 146: 
XPathLexer xPathLexer = new XPathLexer("/user/profile");
((XPathLexer)"/user/profile").nextToken();

Test 147: 
String string = "//div[@id='main']/h1";
XPathLexer xPathLexer = new XPathLexer("//div[@id='main']/h1");
((XPathLexer)"//div[@id='main']/h1").nextToken();
((XPathLexer) string).nextToken();

Test 148: 
XPathLexer xPathLexer = new XPathLexer("This is a sample input string.");
((XPathLexer)"This is a sample input string.").nextToken();

Test 149: 
XPathLexer xPathLexer = new XPathLexer("//book[@id='123'].");
((XPathLexer)"//book[@id='123'].").nextToken();

Test 150: 
XPathLexer xPathLexer = new XPathLexer("A9");
((XPathLexer)"A9").nextToken();

Test 151: 
String string = "tS'9A[";
XPathLexer xPathLexer = new XPathLexer("tS'9A[");
((XPathLexer)"tS'9A[").identifierOrOperatorName();
((XPathLexer) string).plus();
((XPathLexer) string).nextToken();
((XPathLexer) string).nextToken();
String string = "tS'9A[";
XPathLexer xPathLexer = new XPathLexer(string);
((XPathLexer) string).identifierOrOperatorName();
((XPathLexer) string).plus();
((XPathLexer) string).nextToken();
((XPathLexer) string).nextToken();
((XPathLexer) string).nextToken();
String string = "tS'9A[";
XPathLexer xPathLexer = new XPathLexer(string);
((XPathLexer) string).identifierOrOperatorName();
((XPathLexer) string).plus();
((XPathLexer) string).nextToken();
((XPathLexer) string).nextToken();
((XPathLexer) string).nextToken();
((XPathLexer) string).nextToken();
String string = "tS'9A[";
XPathLexer xPathLexer = new XPathLexer(string);
((XPathLexer) string).identifierOrOperatorName();
((XPathLexer) string).plus();
((XPathLexer) string).nextToken();
((XPathLexer) string).nextToken();
((XPathLexer) string).nextToken();
((XPathLexer) string).nextToken();
((XPathLexer) string).nextToken();

Test 152: 
String string = "9:BNn,";
XPathLexer xPathLexer = new XPathLexer("9:BNn,");
((XPathLexer)"9:BNn,").identifierOrOperatorName();
((XPathLexer) string).nextToken();
((XPathLexer) string).leftBracket();
((XPathLexer) string).comma();
((XPathLexer) string).rightParen();
((XPathLexer) string).colon();
((XPathLexer) string).nextToken();
((XPathLexer) string).getPreviousToken();
String string = "1234:BNn,";
XPathLexer xPathLexer = new XPathLexer(string);
((XPathLexer) string).identifierOrOperatorName();
((XPathLexer) string).nextToken();
((XPathLexer) string).leftBracket();
((XPathLexer) string).comma();
((XPathLexer) string).rightParen();
((XPathLexer) string).colon();
((XPathLexer) string).nextToken();
((XPathLexer) string).getPreviousToken();

Test 153: 
String string = "/root/parent/child";
XPathLexer xPathLexer = new XPathLexer("/root/parent/child");
((XPathLexer)"/root/parent/child").nextToken();
((XPathLexer) string).nextToken();

Test 154: 
String string = "//div[@class='container']/span[@id='mySpan']";
XPathLexer xPathLexer = new XPathLexer("//div[@class='container']/span[@id='mySpan']");
((XPathLexer)"//div[@class='container']/span[@id='mySpan']").nextToken();
((XPathLexer) string).identifierOrOperatorName();

Test 155: 
String string = "KG>BrF";
XPathLexer xPathLexer = new XPathLexer("KG>BrF");
((XPathLexer)"KG>BrF").identifierOrOperatorName();
((XPathLexer) string).nextToken();
((XPathLexer) string).identifierOrOperatorName();
String string = "KG>BrF";
XPathLexer xPathLexer = new XPathLexer(string);
((XPathLexer) string).identifierOrOperatorName();
((XPathLexer) string).nextToken();
((XPathLexer) string).identifierOrOperatorName();

Test 156: 
String string = "//div[@id='content']/p";
XPathLexer xPathLexer = new XPathLexer("//div[@id='content']/p");
((XPathLexer)"//div[@id='content']/p").doubleColon();
((XPathLexer) string).consume();
((XPathLexer) string).identifierOrOperatorName();
((XPathLexer) string).nextToken();

Test 157: 
XPathLexer xPathLexer = new XPathLexer("//div[@id='main']/p/a");
((XPathLexer)"//div[@id='main']/p/a").nextToken();

Test 158: 
XPathLexer xPathLexer = new XPathLexer("/bookstore/book[author='John Doe' and year>2000]/title");
((XPathLexer)"/bookstore/book[author='John Doe' and year>2000]/title").nextToken();

Test 159: 

Test 160: 
String string = "EK3o[vGY*bhod4,l";
XPathLexer xPathLexer = new XPathLexer("EK3o[vGY*bhod4,l");
((XPathLexer)"EK3o[vGY*bhod4,l").nextToken();
((XPathLexer) string).nextToken();
((XPathLexer) string).nextToken();
((XPathLexer) string).nextToken();
((XPathLexer) string).nextToken();
((XPathLexer) string).nextToken();
((XPathLexer) string).nextToken();
((XPathLexer) string).nextToken();
((XPathLexer) string).nextToken();

Test 161: 
XPathLexer xPathLexer = new XPathLexer("F|'~");
((XPathLexer)"F|'~").nextToken();

Test 162: 
XPathLexer xPathLexer = new XPathLexer("//author[@id='1234']/@name");
((XPathLexer)"//author[@id='1234']/@name").nextToken();

Test 163: 
XPathLexer xPathLexer = new XPathLexer("/books/book[author='J.K. Rowling' and year>1997]");
((XPathLexer)"/books/book[author='J.K. Rowling' and year>1997]").nextToken();

Test 164: 
String string = "!#$%^&*()_+-={}[]|\"':;<>,./?`~";
XPathLexer xPathLexer = new XPathLexer("!#$%^&*()_+-={}[]|\"':;<>,./?`~");
((XPathLexer)"!#$%^&*()_+-={}[]|\"':;<>,./?`~").at();
((XPathLexer) string).nextToken();

Test 165: 
XPathLexer xPathLexer = new XPathLexer("//root/path[@attribute='value']");
((XPathLexer)"//root/path[@attribute='value']").nextToken();

Test 166: 
String string = "Ly?A+VtQ]+$wtQ";
XPathLexer xPathLexer = new XPathLexer("Ly?A+VtQ]+$wtQ");
((XPathLexer)"Ly?A+VtQ]+$wtQ").nextToken();
String string = "Ly69A+VtQ]+$wtQ";
XPathLexer xPathLexer = new XPathLexer(string);
((XPathLexer) string).nextToken();

Test 167: 
XPathLexer xPathLexer = new XPathLexer("//div[@class='container']");
((XPathLexer)"//div[@class='container']").nextToken();

Test 168: 
String string = "(23+5)*10-4";
XPathLexer xPathLexer = new XPathLexer("(23+5)*10-4");
((XPathLexer)"(23+5)*10-4").nextToken();
String string = "/root/node[@attribute='value']";
XPathLexer xPathLexer = new XPathLexer(string);
((XPathLexer) string).nextToken();

Test 169: 
XPathLexer xPathLexer = new XPathLexer();
xPathLexer.setXPath("//div[@class='container']");
xPathLexer.notEquals();
xPathLexer.at();
xPathLexer.nextToken();
xPathLexer.at();
xPathLexer.leftBracket();
xPathLexer.nextToken();

Test 170: 
XPathLexer xPathLexer = new XPathLexer("Re`lCkMjCqyEd ");
((XPathLexer)"Re`lCkMjCqyEd ").nextToken();

Test 171: 

Test 172: 
XPathLexer xPathLexer = new XPathLexer();
xPathLexer.setXPath("Tzns0k_f");
xPathLexer.nextToken();

Test 173: 
XPathLexer xPathLexer = new XPathLexer();
xPathLexer.setXPath("U<},@");
xPathLexer.nextToken();

Test 174: 
XPathLexer xPathLexer = new XPathLexer("VU$yO");
((XPathLexer)"VU$yO").nextToken();

Test 175: 
XPathLexer xPathLexer = new XPathLexer("//book[author='Jane Doe']");
((XPathLexer)"//book[author='Jane Doe']").nextToken();

Test 176: 
XPathLexer xPathLexer = new XPathLexer("Xr[AS6do");
((XPathLexer)"Xr[AS6do").nextToken();

Test 177: 
XPathLexer xPathLexer = new XPathLexer("dG!fo");
((XPathLexer)"dG!fo").nextToken();

Test 178: 
XPathLexer xPathLexer = new XPathLexer("2*\"M`?#");
((XPathLexer)"2*\"M`?#").nextToken();

Test 179: 
String string = "/user/name=('John Smith' and 'john.smith@example.com')";
XPathLexer xPathLexer = new XPathLexer("/user/name=('John Smith' and 'john.smith@example.com')");
((XPathLexer)"/user/name=('John Smith' and 'john.smith@example.com')").leftBracket();
((XPathLexer) string).rightParen();
((XPathLexer) string).nextToken();

Test 180: 
String string = "20/u`95";
XPathLexer xPathLexer = new XPathLexer("20/u`95");
((XPathLexer)"20/u`95").not();
((XPathLexer) string).whitespace();
((XPathLexer) string).colon();
((XPathLexer) string).rightBracket();
((XPathLexer) string).nextToken();

Test 181: 
String string = "|bx]PxVClD]R?A";
XPathLexer xPathLexer = new XPathLexer("|bx]PxVClD]R?A");
((XPathLexer)"|bx]PxVClD]R?A").at();
((XPathLexer) string).nextToken();
String string = "/book/author[position()=1]/first-name";
XPathLexer xPathLexer = new XPathLexer(string);
((XPathLexer) string).at();
((XPathLexer) string).nextToken();

Test 182: 
XPathLexer xPathLexer = new XPathLexer("e<LUNO0D|");
((XPathLexer)"e<LUNO0D|").nextToken();

Test 183: 
XPathLexer xPathLexer = new XPathLexer("//book[@price > 10 and @author='J.K. Rowling']");
((XPathLexer)"//book[@price > 10 and @author='J.K. Rowling']").nextToken();

Test 184: 
String string = "k7qG>Br4";
XPathLexer xPathLexer = new XPathLexer("k7qG>Br4");
((XPathLexer)"k7qG>Br4").nextToken();
String string = "//div[@id='content']/p[1]";
XPathLexer xPathLexer = new XPathLexer(string);
((XPathLexer) string).nextToken();

Test 185: 
String string = "q=/j/g29/'1q";
XPathLexer xPathLexer = new XPathLexer("q=/j/g29/'1q");
((XPathLexer)"q=/j/g29/'1q").comma();
((XPathLexer) string).dots();
((XPathLexer) string).equals();
((XPathLexer) string).comma();
((XPathLexer) string).leftBracket();
((XPathLexer) string).comma();
((XPathLexer) string).rightParen();
((XPathLexer) string).colon();
((XPathLexer) string).nextToken();

Test 186: 
XPathLexer xPathLexer = new XPathLexer("//div[@id='container']/ul/li[position()=last()]/a");
((XPathLexer)"//div[@id='container']/ul/li[position()=last()]/a").nextToken();

Test 187: 
String string = "com.werken.saxpath.XPathLexer";
XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.XPathLexer");
((XPathLexer)"com.werken.saxpath.XPathLexer").leftBracket();
((XPathLexer) string).nextToken();
((XPathLexer) string).leftBracket();
((XPathLexer) string).nextToken();

Test 188: 
XPathLexer xPathLexer = new XPathLexer("//div[@class='container']/p[contains(text(), 'hello')]");
((XPathLexer)"//div[@class='container']/p[contains(text(), 'hello')]").nextToken();

Test 189: 
XPathLexer xPathLexer = new XPathLexer("tLgWN@XN<'");
((XPathLexer)"tLgWN@XN<'").nextToken();

Test 190: 
XPathLexer xPathLexer = new XPathLexer("v\"R-PGkiC LT=*iTw");
((XPathLexer)"v\"R-PGkiC LT=*iTw").nextToken();

Test 191: 
XPathLexer xPathLexer = new XPathLexer("1+2*3-4/5");
((XPathLexer)"1+2*3-4/5").nextToken();

Test 192: 
String string = "Nx|H'l\u0001th=<c^B1S]";
XPathLexer xPathLexer = new XPathLexer("Nx|H'l\u0001th=<c^B1S]");
((XPathLexer)"Nx|H'l\u0001th=<c^B1S]").not();
((XPathLexer) string).nextToken();

Test 193: 
XPathLexer xPathLexer = new XPathLexer();
xPathLexer.setXPath("/book/title");
xPathLexer.star();
xPathLexer.nextToken();

Test 194: 
XPathLexer xPathLexer = new XPathLexer();
xPathLexer.nextToken();

Test 195: 
String string = "K.!=D";
XPathLexer xPathLexer = new XPathLexer("K.!=D");
((XPathLexer)"K.!=D").rightParen();
((XPathLexer) string).comma();
((XPathLexer) string).nextToken();

Test 196: 
String string = "GpE:'Fi?";
XPathLexer xPathLexer = new XPathLexer("GpE:'Fi?");
Token at = ((XPathLexer)"GpE:'Fi?").at();
((XPathLexer) string).setPreviousToken(at);
((XPathLexer) string).identifierOrOperatorName();

Test 197: 
String string = "10:BookName,";
XPathLexer xPathLexer = new XPathLexer("10:BookName,");
((XPathLexer)"10:BookName,").minus();
((XPathLexer) string).nextToken();
((XPathLexer) string).identifierOrOperatorName();
String string = "10:BookName,";
XPathLexer xPathLexer = new XPathLexer(string);
((XPathLexer) string).minus();
((XPathLexer) string).nextToken();
((XPathLexer) string).identifierOrOperatorName();

Test 198: 
String string = "//iD <K -Ba2IVWS";
XPathLexer xPathLexer = new XPathLexer("//iD <K -Ba2IVWS");
Token doubleColon = ((XPathLexer)"//iD <K -Ba2IVWS").doubleColon();
((XPathLexer) string).setPreviousToken(doubleColon);
((XPathLexer) string).nextToken();

Test 199: 
XPathLexer xPathLexer = new XPathLexer();
Token notEquals = xPathLexer.notEquals();
xPathLexer.setPreviousToken(notEquals);

Test 200: 
String string = "VU$yO";
XPathLexer xPathLexer = new XPathLexer("VU$yO");
((XPathLexer)"VU$yO").doubleColon();
((XPathLexer) string).nextToken();
((XPathLexer) string).identifierOrOperatorName();

Test 201: 
String string = ".'E2T'";
XPathLexer xPathLexer = new XPathLexer(".'E2T'");
((XPathLexer)".'E2T'").dollar();
((XPathLexer) string).nextToken();
((XPathLexer) string).identifierOrOperatorName();
String string = ".'E2T'";
XPathLexer xPathLexer = new XPathLexer(string);
((XPathLexer) string).dollar();
((XPathLexer) string).nextToken();
((XPathLexer) string).identifierOrOperatorName();
String string = ".'E2T'";
XPathLexer xPathLexer = new XPathLexer(string);
((XPathLexer) string).dollar();
((XPathLexer) string).nextToken();

Test 202: 
String string = "//div[@id='foo']";
XPathLexer xPathLexer = new XPathLexer("//div[@id='foo']");
((XPathLexer)"//div[@id='foo']").nextToken();
((XPathLexer) string).nextToken();

Test 203: 
String string = "//*[@id='main']/h1";
XPathLexer xPathLexer = new XPathLexer("//*[@id='main']/h1");
((XPathLexer)"//*[@id='main']/h1").slashes();
((XPathLexer) string).operatorName();

Test 204: 
String string = "com.werken.saxpath.XPathLexer";
XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.XPathLexer");
((XPathLexer)"com.werken.saxpath.XPathLexer").star();
((XPathLexer) string).leftParen();

Test 205: 
XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.Token");

Test 206: 
XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.Token");

Test 207: 
XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.Token");

Test 208: 
String string = "com.werken.saxpath.Token";
XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.Token");
((XPathLexer)"com.werken.saxpath.Token").leftBracket();
((XPathLexer) string).not();
((XPathLexer) string).or();

Test 209: 
XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.XPathLexer");

Test 210: 
XPathLexer xPathLexer = new XPathLexer("//div[@id='main' -Ba2IVWS");
((XPathLexer)"//div[@id='main' -Ba2IVWS").number();

Test 211: 
XPathLexer xPathLexer = new XPathLexer();

Test 212: 
XPathLexer xPathLexer = new XPathLexer();
xPathLexer.setXPath("//div[@class='container']/p[@id='description']");
xPathLexer.whitespace();

Test 213: 
XPathLexer xPathLexer = new XPathLexer(".//div[contains(@class,'container')]/p");
((XPathLexer)".//div[contains(@class,'container')]/p").dots();

Test 214: 
XPathLexer xPathLexer = new XPathLexer("/bookstore/book[@author='John Doe']");
((XPathLexer)"/bookstore/book[@author='John Doe']").slashes();

Test 215: 
XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.Token");
((XPathLexer)"com.werken.saxpath.Token").getXPath();

Test 216: 
String string = "eS?Ea'qz";
XPathLexer xPathLexer = new XPathLexer("eS?Ea'qz");
((XPathLexer)"eS?Ea'qz").rightParen();
((XPathLexer) string).colon();
((XPathLexer) string).equals();
((XPathLexer) string).equals();
((XPathLexer) string).nextToken();

Test 217: 
XPathLexer xPathLexer = new XPathLexer();
xPathLexer.setXPath("3nA=\"qo4jzE%rc");
xPathLexer.at();
xPathLexer.LA(5);

Test 218: 
XPathLexer xPathLexer = new XPathLexer();
xPathLexer.setXPath("//*[@id='main']");
xPathLexer.doubleColon();
xPathLexer.LA((int) (Integer) null);

Test 219: 
XPathLexer xPathLexer = new XPathLexer();
xPathLexer.LA(0);

Test 220: 
XPathLexer xPathLexer = new XPathLexer();
xPathLexer.currentPosition();

Test 221: 
XPathLexer xPathLexer = new XPathLexer("The quick brown fox jumps over the lazy dog.");
((XPathLexer)"The quick brown fox jumps over the lazy dog.").endPosition();

Test 222: 
XPathLexer xPathLexer = new XPathLexer();

Test 223: 
XPathLexer xPathLexer = new XPathLexer();
Token dots = xPathLexer.dots();
xPathLexer.setPreviousToken(dots);
xPathLexer.getPreviousToken();

Test 224: 
String string = "/iD<K -Ba2IVWS";
XPathLexer xPathLexer = new XPathLexer("/iD<K -Ba2IVWS");
((XPathLexer)"/iD<K -Ba2IVWS").getPreviousToken();
String string = "/iD<K -Ba2IVWS";
XPathLexer xPathLexer = new XPathLexer(string);
((XPathLexer) string).getPreviousToken();

Test 225: 
XPathLexer xPathLexer = new XPathLexer();
xPathLexer.setXPath("/book/author");
xPathLexer.getXPath();

Test 226: 
XPathLexer xPathLexer = new XPathLexer();
xPathLexer.getXPath();

Test 227: 
String string = "/users/bob/documents";
XPathLexer xPathLexer = new XPathLexer("/users/bob/documents");
((XPathLexer)"/users/bob/documents").literal();
((XPathLexer) string).hasMoreChars();
String string = "/users/*[@id='1234']/documents[position()=5]";
XPathLexer xPathLexer = new XPathLexer(string);
((XPathLexer) string).literal();
((XPathLexer) string).hasMoreChars();
String string = "/users/*[@id=1234]/documents[position()=5 and name='Bob']";
XPathLexer xPathLexer = new XPathLexer(string);
((XPathLexer) string).literal();
((XPathLexer) string).hasMoreChars();

Test 228: 
XPathLexer xPathLexer = new XPathLexer("com.example.xpath.XPathLexer");

Test 229: 
XPathLexer xPathLexer = new XPathLexer();
xPathLexer.isIdentifierChar('_');

Test 230: 
XPathLexer xPathLexer = new XPathLexer();
xPathLexer.isIdentifierStartChar('\u03B1');

Test 231: 
XPathLexer xPathLexer = new XPathLexer("q=^j{MY7l.g29;'1q");
((XPathLexer)"q=^j{MY7l.g29;'1q").literal();


* Minimizing test suite
* test suite isTestSuite: 123
Test 0: 
XPathLexer xPathLexer = new XPathLexer(",j!V9");
xPathLexer.nextToken();
xPathLexer.nextToken();
Test 1: 
XPathLexer xPathLexer = new XPathLexer();
Token notEquals = xPathLexer.notEquals();
xPathLexer.setPreviousToken(notEquals);
xPathLexer.identifierOrOperatorName();
Test 2: 
XPathLexer xPathLexer = new XPathLexer("X2?31yh2Tg*5v/P");
xPathLexer.pipe();
xPathLexer.nextToken();
Test 3: 
XPathLexer xPathLexer = new XPathLexer("9:BNn,");
xPathLexer.minus();
xPathLexer.nextToken();
xPathLexer.identifierOrOperatorName();
Test 4: 
XPathLexer xPathLexer = new XPathLexer("]b88g[)2*\"M`?#");
xPathLexer.nextToken();
xPathLexer.identifierOrOperatorName();
Test 5: 
XPathLexer xPathLexer = new XPathLexer("!)JT");
xPathLexer.nextToken();
xPathLexer.identifierOrOperatorName();
Test 6: 
XPathLexer xPathLexer = new XPathLexer();
xPathLexer.setXPath("//div[@class='container']");
xPathLexer.notEquals();
xPathLexer.nextToken();
xPathLexer.at();
xPathLexer.leftBracket();
xPathLexer.nextToken();
Test 7: 
XPathLexer xPathLexer = new XPathLexer(".'E2T'");
xPathLexer.dollar();
xPathLexer.nextToken();
xPathLexer.identifierOrOperatorName();
Test 8: 
XPathLexer xPathLexer = new XPathLexer("{_y[\"F");
xPathLexer.equals();
xPathLexer.nextToken();
Test 9: 
XPathLexer xPathLexer = new XPathLexer(") (");
xPathLexer.nextToken();
xPathLexer.setXPath("Tzns0k_f");
xPathLexer.nextToken();
Test 10: 
XPathLexer xPathLexer = new XPathLexer();
xPathLexer.star();
xPathLexer.LA(0);
Test 11: 
XPathLexer xPathLexer = new XPathLexer();
xPathLexer.plus();
xPathLexer.currentPosition();
Test 12: 
XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.XPathLexer");
xPathLexer.consume(1);
Test 13: 
XPathLexer xPathLexer = new XPathLexer(" <@w%@+");
xPathLexer.nextToken();
xPathLexer.identifierOrOperatorName();
Test 14: 
XPathLexer xPathLexer = new XPathLexer("\"<=:zyOvGFl.H@)");
xPathLexer.nextToken();
Test 15: 
XPathLexer xPathLexer = new XPathLexer("q=^j{MY7l.g29;'1q");
xPathLexer.setXPath("4#?p,~P9!");
xPathLexer.at();
xPathLexer.nextToken();
Test 16: 
XPathLexer xPathLexer = new XPathLexer("VU$yO");
xPathLexer.doubleColon();
xPathLexer.nextToken();
xPathLexer.identifierOrOperatorName();
Test 17: 
XPathLexer xPathLexer = new XPathLexer("3nA=\"qo4jzE%rc");
xPathLexer.identifier();
xPathLexer.doubleColon();
xPathLexer.identifierOrOperatorName();
xPathLexer.nextToken();
Test 18: 
XPathLexer xPathLexer = new XPathLexer("&p5u3TD`y@p-^d|&:.");
xPathLexer.nextToken();
Test 19: 
XPathLexer xPathLexer = new XPathLexer(") (");
xPathLexer.equals();
xPathLexer.nextToken();
xPathLexer.setXPath("Tzns0k_f");
xPathLexer.nextToken();
Test 20: 
XPathLexer xPathLexer = new XPathLexer("$*1L8@xjb");
xPathLexer.star();
xPathLexer.nextToken();
xPathLexer.identifierOrOperatorName();
Test 21: 
XPathLexer xPathLexer = new XPathLexer("<W+rU*$bt?VbT");
xPathLexer.doubleColon();
xPathLexer.nextToken();
xPathLexer.nextToken();
Test 22: 
XPathLexer xPathLexer = new XPathLexer("/iD<K -Ba2IVWS");
xPathLexer.colon();
xPathLexer.nextToken();
xPathLexer.equals();
xPathLexer.colon();
xPathLexer.nextToken();
Test 23: 
XPathLexer xPathLexer = new XPathLexer("q=^j{MYl.g29;'1q");
xPathLexer.leftBracket();
xPathLexer.whitespace();
xPathLexer.dots();
xPathLexer.comma();
xPathLexer.leftBracket();
xPathLexer.comma();
xPathLexer.rightParen();
xPathLexer.colon();
xPathLexer.nextToken();
xPathLexer.identifierOrOperatorName();
Test 24: 
XPathLexer xPathLexer = new XPathLexer("/iD<K -Ba2IVWS");
xPathLexer.nextToken();
xPathLexer.identifierOrOperatorName();
Test 25: 
XPathLexer xPathLexer = new XPathLexer("0;");
xPathLexer.nextToken();
Test 26: 
XPathLexer xPathLexer = new XPathLexer("1H0");
xPathLexer.nextToken();
xPathLexer.nextToken();
Test 27: 
XPathLexer xPathLexer = new XPathLexer("3Y{mms7WR.");
xPathLexer.nextToken();
Test 28: 
XPathLexer xPathLexer = new XPathLexer("4g`ENPGP(U,${~B");
xPathLexer.nextToken();
xPathLexer.nextToken();
Test 29: 
XPathLexer xPathLexer = new XPathLexer("5nqXpW;P=D_/k");
xPathLexer.nextToken();
Test 30: 
XPathLexer xPathLexer = new XPathLexer("6T.");
xPathLexer.nextToken();
Test 31: 
XPathLexer xPathLexer = new XPathLexer("q=^j{MY7l.g29;'1q");
xPathLexer.leftBracket();
xPathLexer.dots();
xPathLexer.comma();
xPathLexer.leftBracket();
xPathLexer.comma();
xPathLexer.rightParen();
xPathLexer.colon();
xPathLexer.nextToken();
Test 32: 
XPathLexer xPathLexer = new XPathLexer("8F");
xPathLexer.nextToken();
Test 33: 
XPathLexer xPathLexer = new XPathLexer("tS'9A[");
xPathLexer.identifierOrOperatorName();
xPathLexer.plus();
xPathLexer.nextToken();
xPathLexer.nextToken();
Test 34: 
XPathLexer xPathLexer = new XPathLexer("NoJU;J?1v");
xPathLexer.nextToken();
xPathLexer.nextToken();
Test 35: 
XPathLexer xPathLexer = new XPathLexer("q=^j{MY7l.g29;'1q");
xPathLexer.comma();
xPathLexer.nextToken();
xPathLexer.identifierOrOperatorName();
Test 36: 
XPathLexer xPathLexer = new XPathLexer("KG>BrF");
xPathLexer.identifierOrOperatorName();
xPathLexer.nextToken();
xPathLexer.identifierOrOperatorName();
Test 37: 
XPathLexer xPathLexer = new XPathLexer("Bu[V?%EN4&_wLeV_:W");
xPathLexer.doubleColon();
xPathLexer.consume();
xPathLexer.identifierOrOperatorName();
xPathLexer.nextToken();
Test 38: 
XPathLexer xPathLexer = new XPathLexer("@b)eb2\"h7\nDuE*cIi");
xPathLexer.nextToken();
Test 39: 
XPathLexer xPathLexer = new XPathLexer("BuV?%EN4n&_wLeV:W");
xPathLexer.nextToken();
Test 40: 
XPathLexer xPathLexer = new XPathLexer("CJi");
xPathLexer.nextToken();
Test 41: 
XPathLexer xPathLexer = new XPathLexer("EK3o[vGY*bhod4,l");
xPathLexer.nextToken();
xPathLexer.nextToken();
Test 42: 
XPathLexer xPathLexer = new XPathLexer("F|'~");
xPathLexer.nextToken();
Test 43: 
XPathLexer xPathLexer = new XPathLexer("GI\"8u5");
xPathLexer.nextToken();
Test 44: 
XPathLexer xPathLexer = new XPathLexer("Ib.4N");
xPathLexer.nextToken();
Test 45: 
XPathLexer xPathLexer = new XPathLexer("!)JT");
xPathLexer.at();
xPathLexer.at();
xPathLexer.nextToken();
Test 46: 
XPathLexer xPathLexer = new XPathLexer("K.=D`");
xPathLexer.nextToken();
Test 47: 
XPathLexer xPathLexer = new XPathLexer("Ly?A+VtQ]+$wtQ");
xPathLexer.nextToken();
Test 48: 
XPathLexer xPathLexer = new XPathLexer("M%=");
xPathLexer.nextToken();
Test 49: 
XPathLexer xPathLexer = new XPathLexer("OB`0RtoR)E~zfca%?$");
xPathLexer.nextToken();
Test 50: 
XPathLexer xPathLexer = new XPathLexer();
xPathLexer.setXPath("4#?p,~P9!");
xPathLexer.notEquals();
xPathLexer.at();
xPathLexer.nextToken();
xPathLexer.at();
xPathLexer.leftBracket();
xPathLexer.nextToken();
Test 51: 
XPathLexer xPathLexer = new XPathLexer("FnQ$|&9");
xPathLexer.equals();
xPathLexer.at();
xPathLexer.nextToken();
Test 52: 
XPathLexer xPathLexer = new XPathLexer("Re`lCkMjCqyEd ");
xPathLexer.nextToken();
Test 53: 
XPathLexer xPathLexer = new XPathLexer("SmoY~H'7-Hef\"x)");
xPathLexer.nextToken();
Test 54: 
XPathLexer xPathLexer = new XPathLexer();
xPathLexer.setXPath("Tzns0k_f");
xPathLexer.nextToken();
Test 55: 
XPathLexer xPathLexer = new XPathLexer();
xPathLexer.setXPath("U<},@");
xPathLexer.nextToken();
Test 56: 
XPathLexer xPathLexer = new XPathLexer("VU$yO");
xPathLexer.nextToken();
Test 57: 
XPathLexer xPathLexer = new XPathLexer("WA6");
xPathLexer.nextToken();
Test 58: 
XPathLexer xPathLexer = new XPathLexer("Xr[AS6do");
xPathLexer.nextToken();
Test 59: 
XPathLexer xPathLexer = new XPathLexer("q=^j{MY7l.g29;'1q");
xPathLexer.dots();
xPathLexer.equals();
xPathLexer.comma();
xPathLexer.leftBracket();
xPathLexer.rightParen();
xPathLexer.colon();
xPathLexer.nextToken();
Test 60: 
XPathLexer xPathLexer = new XPathLexer("Z:{:;y[\"");
xPathLexer.nextToken();
Test 61: 
XPathLexer xPathLexer = new XPathLexer("q=^j{MY7l.g29;'1q");
xPathLexer.leftBracket();
xPathLexer.rightParen();
xPathLexer.nextToken();
Test 62: 
XPathLexer xPathLexer = new XPathLexer("20/u`95");
xPathLexer.not();
xPathLexer.whitespace();
xPathLexer.colon();
xPathLexer.rightBracket();
xPathLexer.nextToken();
Test 63: 
XPathLexer xPathLexer = new XPathLexer("eS?Ea'qz");
xPathLexer.rightParen();
xPathLexer.colon();
xPathLexer.equals();
xPathLexer.equals();
xPathLexer.nextToken();
Test 64: 
XPathLexer xPathLexer = new XPathLexer();
xPathLexer.setXPath("/book/title");
xPathLexer.star();
xPathLexer.nextToken();
Test 65: 
XPathLexer xPathLexer = new XPathLexer("e<LUNO0D|");
xPathLexer.nextToken();
Test 66: 
XPathLexer xPathLexer = new XPathLexer("f]l.']LBO-7");
xPathLexer.nextToken();
Test 67: 
XPathLexer xPathLexer = new XPathLexer("|h'rQVn*qV)@!5H>J");
xPathLexer.nextToken();
xPathLexer.nextToken();
Test 68: 
XPathLexer xPathLexer = new XPathLexer("k7qG>Br4");
xPathLexer.nextToken();
Test 69: 
XPathLexer xPathLexer = new XPathLexer("q=^j{MY7l.g29;'1q");
xPathLexer.comma();
xPathLexer.dots();
xPathLexer.equals();
xPathLexer.comma();
xPathLexer.leftBracket();
xPathLexer.comma();
xPathLexer.rightParen();
xPathLexer.colon();
xPathLexer.nextToken();
Test 70: 
XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.Token");
xPathLexer.leftBracket();
xPathLexer.not();
xPathLexer.nextToken();
Test 71: 
XPathLexer xPathLexer = new XPathLexer("n!J");
xPathLexer.nextToken();
Test 72: 
XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.XPathLexer");
xPathLexer.leftBracket();
xPathLexer.nextToken();
Test 73: 
XPathLexer xPathLexer = new XPathLexer("q=^j{MY7l.g29;'1q");
xPathLexer.nextToken();
Test 74: 
XPathLexer xPathLexer = new XPathLexer("s2");
xPathLexer.nextToken();
Test 75: 
XPathLexer xPathLexer = new XPathLexer("tLgWN@XN<'");
xPathLexer.nextToken();
Test 76: 
XPathLexer xPathLexer = new XPathLexer("u&HSr1");
xPathLexer.nextToken();
Test 77: 
XPathLexer xPathLexer = new XPathLexer("v\"R-PGkiC LT=*iTw");
xPathLexer.nextToken();
Test 78: 
XPathLexer xPathLexer = new XPathLexer("wK3WT4j");
xPathLexer.nextToken();
Test 79: 
XPathLexer xPathLexer = new XPathLexer("Nx|H'l\u0001th=<c^B1S]");
xPathLexer.not();
xPathLexer.nextToken();
Test 80: 
XPathLexer xPathLexer = new XPathLexer("yS>TKm>&ZvN;Z]BY(");
xPathLexer.nextToken();
Test 81: 
XPathLexer xPathLexer = new XPathLexer();
xPathLexer.setXPath("Tzns0k_f");
xPathLexer.star();
xPathLexer.nextToken();
Test 82: 
XPathLexer xPathLexer = new XPathLexer("q=^j{MY7l.g29;'1q");
xPathLexer.leftBracket();
xPathLexer.dots();
xPathLexer.rightBracket();
xPathLexer.at();
xPathLexer.nextToken();
xPathLexer.identifierOrOperatorName();
Test 83: 
XPathLexer xPathLexer = new XPathLexer("K.!=D");
xPathLexer.rightParen();
xPathLexer.comma();
xPathLexer.nextToken();
Test 84: 
XPathLexer xPathLexer = new XPathLexer("q=^j{MY7l.g29;'1q");
Token leftBracket = xPathLexer.leftBracket();
xPathLexer.setPreviousToken(leftBracket);
xPathLexer.identifierOrOperatorName();
Test 85: 
XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.Token");
Token minus = xPathLexer.minus();
xPathLexer.setPreviousToken(minus);
xPathLexer.identifierOrOperatorName();
Test 86: 
XPathLexer xPathLexer = new XPathLexer("GpE:'Fi?");
Token at = xPathLexer.at();
xPathLexer.setPreviousToken(at);
xPathLexer.identifierOrOperatorName();
Test 87: 
XPathLexer xPathLexer = new XPathLexer("/iD<K -Ba2IVWS");
Token doubleColon = xPathLexer.doubleColon();
xPathLexer.setPreviousToken(doubleColon);
xPathLexer.nextToken();
Test 88: 
XPathLexer xPathLexer = new XPathLexer("BaU");
xPathLexer.slashes();
xPathLexer.operatorName();
Test 89: 
XPathLexer xPathLexer = new XPathLexer("-d-,db.xE:|?{#");
xPathLexer.dots();
xPathLexer.operatorName();
Test 90: 
XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.XPathLexer");
xPathLexer.star();
xPathLexer.leftParen();
xPathLexer.operatorName();
Test 91: 
XPathLexer xPathLexer = new XPathLexer("o%LSPo_nwNhA}F2SHk");
xPathLexer.operatorName();
Test 92: 
XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.Token");
xPathLexer.mod();
Test 93: 
XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.Token");
xPathLexer.div();
Test 94: 
XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.Token");
xPathLexer.and();
Test 95: 
XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.Token");
xPathLexer.leftBracket();
xPathLexer.not();
xPathLexer.or();
Test 96: 
XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.XPathLexer");
xPathLexer.notEquals();
xPathLexer.slashes();
xPathLexer.number();
Test 97: 
XPathLexer xPathLexer = new XPathLexer("/iD<K -Ba2IVWS");
xPathLexer.number();
Test 98: 
XPathLexer xPathLexer = new XPathLexer();
xPathLexer.whitespace();
Test 99: 
XPathLexer xPathLexer = new XPathLexer();
xPathLexer.setXPath(") (");
xPathLexer.whitespace();
Test 100: 
XPathLexer xPathLexer = new XPathLexer("q=^j{MY7l.g29;'1q");
xPathLexer.relationalOperator();
Test 101: 
XPathLexer xPathLexer = new XPathLexer("/.D<K -Ba2IVWS");
xPathLexer.dots();
Test 102: 
XPathLexer xPathLexer = new XPathLexer("2/#y");
xPathLexer.slashes();
Test 103: 
XPathLexer xPathLexer = new XPathLexer("q=^j{MY7l.g29;'1q");
xPathLexer.setXPath("}h26-V)RL");
xPathLexer.at();
xPathLexer.nextToken();
Test 104: 
XPathLexer xPathLexer = new XPathLexer();
xPathLexer.getXPath();
Test 105: 
XPathLexer xPathLexer = new XPathLexer();
xPathLexer.setXPath("3nA=\"qo4jzE%rc");
xPathLexer.at();
xPathLexer.LA(5);
Test 106: 
XPathLexer xPathLexer = new XPathLexer();
xPathLexer.setXPath("4#?p,~P9!");
xPathLexer.doubleColon();
xPathLexer.LA((-1));
Test 107: 
XPathLexer xPathLexer = new XPathLexer();
xPathLexer.currentPosition();
Test 108: 
XPathLexer xPathLexer = new XPathLexer("K.!=D");
xPathLexer.endPosition();
Test 109: 
XPathLexer xPathLexer = new XPathLexer();
xPathLexer.endPosition();
Test 110: 
XPathLexer xPathLexer = new XPathLexer("9:BNn,");
xPathLexer.identifierOrOperatorName();
xPathLexer.nextToken();
xPathLexer.leftBracket();
xPathLexer.comma();
xPathLexer.rightParen();
xPathLexer.colon();
xPathLexer.nextToken();
xPathLexer.getPreviousToken();
Test 111: 
XPathLexer xPathLexer = new XPathLexer();
Token dots = xPathLexer.dots();
xPathLexer.setPreviousToken(dots);
xPathLexer.getPreviousToken();
Test 112: 
XPathLexer xPathLexer = new XPathLexer("/iD<K -Ba2IVWS");
xPathLexer.getPreviousToken();
Test 113: 
XPathLexer xPathLexer = new XPathLexer();
xPathLexer.setXPath("");
xPathLexer.getXPath();
Test 114: 
XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.Token");
xPathLexer.getXPath();
Test 115: 
XPathLexer xPathLexer = new XPathLexer("Bfl&[*+1Fa~'C&hz");
xPathLexer.literal();
xPathLexer.hasMoreChars();
Test 116: 
XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.XPathLexer");
xPathLexer.hasMoreChars();
Test 117: 
XPathLexer xPathLexer = new XPathLexer("q=^j{MY7l.g29;'1q");
xPathLexer.isIdentifierChar('>');
Test 118: 
XPathLexer xPathLexer = new XPathLexer();
xPathLexer.isIdentifierChar('W');
Test 119: 
XPathLexer xPathLexer = new XPathLexer("q=^j{MY7l.g29;'1q");
xPathLexer.isIdentifierStartChar('9');
Test 120: 
XPathLexer xPathLexer = new XPathLexer();
xPathLexer.isIdentifierStartChar('I');
Test 121: 
XPathLexer xPathLexer = new XPathLexer("q=^j{MY7l.g29;'1q");
xPathLexer.literal();
Test 122: 
XPathLexer xPathLexer = new XPathLexer("N7`P<l1{`vcA");
xPathLexer.nextToken();
xPathLexer.at();
xPathLexer.rightBracket();
xPathLexer.relationalOperator();

* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 86%
* Total number of goals: 484
* Number of covered goals: 415
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 91%
* Total number of goals: 250
* Number of covered goals: 228
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 37%
* Total number of goals: 142
* Number of covered goals: 53
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 44
* Number of covered goals: 44
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 86%
* Total number of goals: 484
* Number of covered goals: 415
* Generated 123 tests with total length 405
* Resulting test suite's coverage: 80% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 55%
* Compiling and checking tests
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XPathLexer xPathLexer = new XPathLexer();
Token arg0 = xPathLexer.notEquals();
xPathLexer.setPreviousToken(arg0);
assertEquals(22, arg0.getTokenType());

Token identifierOrOperatorName = xPathLexer.identifierOrOperatorName();
assertEquals(15, identifierOrOperatorName.getTokenType());


** It was a parseable test case! 
refined test name is: testLexerNotEquals
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XPathLexer xPathLexer = new XPathLexer("X2?31yh2Tg*5v/P");
Token pipe = xPathLexer.pipe();
assertEquals("X", pipe.getTokenText());
assertEquals(17, pipe.getTokenType());

Token nextToken = xPathLexer.nextToken();
assertEquals("2", nextToken.getTokenText());
assertEquals(30, nextToken.getTokenType());


** It was a parseable test case! 
refined test name is: testPipeMethodreturnsValidTokenTextAndType
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XPathLexer xPathLexer = new XPathLexer("9:BNn,");
Token minus = xPathLexer.minus();
assertEquals("9", minus.getTokenText());
assertEquals(6, minus.getTokenType());

Token nextToken = xPathLexer.nextToken();
assertEquals(18, nextToken.getTokenType());
assertEquals(":", nextToken.getTokenText());

Token identifierOrOperatorName = xPathLexer.identifierOrOperatorName();
assertEquals("BNn", identifierOrOperatorName.getTokenText());
assertEquals(15, identifierOrOperatorName.getTokenType());


** It was a parseable test case! 
refined test name is: testLexerCreationAndNextToken
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XPathLexer xPathLexer = new XPathLexer("]b88g[)2*\"M`?#");
xPathLexer.nextToken();
Token identifierOrOperatorName = xPathLexer.identifierOrOperatorName();
assertNull(identifierOrOperatorName);


** It was a parseable test case! 
refined test name is: testInvalidCharactersInIdentifierOrOperatorName
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XPathLexer xPathLexer = new XPathLexer("!)JT");
xPathLexer.nextToken();
Token identifierOrOperatorName = xPathLexer.identifierOrOperatorName();
assertNull(identifierOrOperatorName);


** It was a parseable test case! 
refined test name is: testNextTokenReturnsNullWhenGivenInvalidInput
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XPathLexer xPathLexer = new XPathLexer(".'E2T'");
xPathLexer.dollar();
xPathLexer.nextToken();
Token identifierOrOperatorName = xPathLexer.identifierOrOperatorName();
assertNull(identifierOrOperatorName);


** It was a parseable test case! 
refined test name is: testDollarSignInXPathQuery
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XPathLexer xPathLexer = new XPathLexer("{_y[\"F");
Token equals = xPathLexer.equals();
assertEquals(21, equals.getTokenType());
assertEquals("{", equals.getTokenText());

Token nextToken = xPathLexer.nextToken();
assertEquals(15, nextToken.getTokenType());
assertEquals("_y", nextToken.getTokenText());


** It was a parseable test case! 
refined test name is: testXPathLexerShouldReturnExpectedTokens
source code formatter error: 39:2: error: class, interface, or enum expected testCode is: /*
 * This file was automatically generated by UTestGen and EvoSuite
 * Mon Mar 11 23:00:57 GMT 2024
 */

package com.werken.saxpath;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Timeout;
import java.util.concurrent.TimeUnit;
import com.werken.saxpath.Token;
import com.werken.saxpath.XPathLexer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class XPathLexer_15_tmp__ESTest extends XPathLexer_15_tmp__ESTest_scaffolding {

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testXPathLexerShouldReturnExpectedTokens() throws Throwable  {
      // Given an XPath expression with a single quoted string
      String xpathExpr = "{_y[\"F";
      
      // When the lexer is created with the expression
      XPathLexer lexer = new XPathLexer(xpathExpr);
      
      // Then the lexer should return the expected tokens
      Token equals = lexer.equals();
      assertEquals(21, equals.getTokenType());
      assertEquals("{", equals.getTokenText());
      
      Token nextToken = lexer.nextToken();
      assertEquals(15, nextToken.getTokenType());
      assertEquals("_y", nextToken.getTokenText());}
  }
}

* Compiling Tests
refined test name is: testLexerWithSingleQuotedString
source code formatter error: 39:2: error: class, interface, or enum expected testCode is: /*
 * This file was automatically generated by UTestGen and EvoSuite
 * Mon Mar 11 23:01:40 GMT 2024
 */

package com.werken.saxpath;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Timeout;
import java.util.concurrent.TimeUnit;
import com.werken.saxpath.Token;
import com.werken.saxpath.XPathLexer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class XPathLexer_16_tmp__ESTest extends XPathLexer_16_tmp__ESTest_scaffolding {

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testLexerWithSingleQuotedString() throws Throwable  {
      // Given an XPath expression with a single quoted string
      String xpathExpr = "{_y[\"F";
      
      // When the lexer is created with the expression
      XPathLexer lexer = new XPathLexer(xpathExpr);
      
      // Then the lexer should return the expected tokens
      Token equals = lexer.equals();
      assertEquals(21, equals.getTokenType());
      assertEquals("{", equals.getTokenText());
      
      Token nextToken = lexer.nextToken();
      assertEquals(15, nextToken.getTokenType());
      assertEquals("_y", nextToken.getTokenText());}
  }
}

* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XPathLexer xPathLexer = new XPathLexer();
Token star = xPathLexer.star();
assertEquals(20, star.getTokenType());

char LA = xPathLexer.LA(0);
assertEquals('\uFFFF', LA);


** It was a parseable test case! 
refined test name is: testLexerStar
* Compiling Tests
refined test name is: testStarToken
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XPathLexer xPathLexer = new XPathLexer();
Token plus = xPathLexer.plus();
assertEquals(5, plus.getTokenType());

int currentPosition = xPathLexer.currentPosition();
assertEquals(1, currentPosition);


** It was a parseable test case! 
refined test name is: testPlusOperator
* Compiling Tests
refined test name is: testTokenizingMathExpression
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.XPathLexer");
xPathLexer.consume(1);
assertEquals("com.werken.saxpath.XPathLexer", xPathLexer.getXPath());


** It was a parseable test case! 
refined test name is: testConsumeShouldAdvanceThePositionOfTheLexer
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XPathLexer xPathLexer = new XPathLexer(" <@w%@+");
Token nextToken = xPathLexer.nextToken();
assertEquals(7, nextToken.getTokenType());
assertEquals("<", nextToken.getTokenText());

Token identifierOrOperatorName = xPathLexer.identifierOrOperatorName();
assertEquals(15, identifierOrOperatorName.getTokenType());
assertEquals("", identifierOrOperatorName.getTokenText());


** It was a parseable test case! 
refined test name is: TestLexerNextToken
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XPathLexer xPathLexer = new XPathLexer("\"<=:zyOvGFl.H@)");
Token nextToken = xPathLexer.nextToken();
assertEquals("", nextToken.getTokenText());
assertEquals((-1), nextToken.getTokenType());


** It was a parseable test case! 
refined test name is: testNextTokenWithEmptyString
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XPathLexer xPathLexer = new XPathLexer("q=^j{MY7l.g29;'1q");
xPathLexer.setXPath("4#?p,~P9!");
Token at = xPathLexer.at();
assertEquals(16, at.getTokenType());
assertEquals("4", at.getTokenText());

Token nextToken = xPathLexer.nextToken();
assertEquals((-1), nextToken.getTokenType());
assertEquals("#?p,~P9!", nextToken.getTokenText());


** It was a parseable test case! 
refined test name is: testLexerWithValidXPath
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XPathLexer xPathLexer = new XPathLexer("VU$yO");
Token doubleColon = xPathLexer.doubleColon();
assertEquals(19, doubleColon.getTokenType());
assertEquals("VU", doubleColon.getTokenText());

Token nextToken = xPathLexer.nextToken();
assertEquals("$", nextToken.getTokenText());
assertEquals(26, nextToken.getTokenType());

Token identifierOrOperatorName = xPathLexer.identifierOrOperatorName();
assertEquals(15, identifierOrOperatorName.getTokenType());
assertEquals("yO", identifierOrOperatorName.getTokenText());


** It was a parseable test case! 
refined test name is: testLexer
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XPathLexer xPathLexer = new XPathLexer("3nA=\"qo4jzE%rc");
Token identifier = xPathLexer.identifier();
assertEquals("3nA", identifier.getTokenText());

Token doubleColon = xPathLexer.doubleColon();
assertEquals(19, doubleColon.getTokenType());
assertEquals("=\"", doubleColon.getTokenText());

Token identifierOrOperatorName = xPathLexer.identifierOrOperatorName();
assertEquals("qo4jzE", identifierOrOperatorName.getTokenText());
assertEquals(15, identifierOrOperatorName.getTokenType());
assertNotNull(identifierOrOperatorName);

Token nextToken = xPathLexer.nextToken();
assertEquals("%rc", nextToken.getTokenText());


** It was a parseable test case! 
refined test name is: testIdentifierOrOperatorNameToken
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XPathLexer xPathLexer = new XPathLexer("&p5u3TD`y@p-^d|&:.");
Token nextToken = xPathLexer.nextToken();
assertEquals("&p5u3TD`y@p-^d|&:.", nextToken.getTokenText());


** It was a parseable test case! 
refined test name is: testNextTokenShouldReturnOriginalXPathExpression
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XPathLexer xPathLexer = new XPathLexer("$*1L8@xjb");
Token star = xPathLexer.star();
assertEquals("$", star.getTokenText());

Token nextToken = xPathLexer.nextToken();
assertEquals(20, nextToken.getTokenType());

Token identifierOrOperatorName = xPathLexer.identifierOrOperatorName();
assertEquals("1L8", identifierOrOperatorName.getTokenText());
assertEquals(15, identifierOrOperatorName.getTokenType());


** It was a parseable test case! 
refined test name is: testLexerTokens
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XPathLexer xPathLexer = new XPathLexer("q=^j{MYl.g29;'1q");
xPathLexer.leftBracket();
xPathLexer.whitespace();
xPathLexer.dots();
xPathLexer.comma();
xPathLexer.leftBracket();
xPathLexer.comma();
xPathLexer.rightParen();
xPathLexer.colon();
xPathLexer.nextToken();
Token identifierOrOperatorName = xPathLexer.identifierOrOperatorName();
assertNull(identifierOrOperatorName);


** It was a parseable test case! 
refined test name is: testXPathLexerLeftBracketAndComma
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XPathLexer xPathLexer = new XPathLexer("/iD<K -Ba2IVWS");
Token nextToken = xPathLexer.nextToken();
assertEquals("/", nextToken.getTokenText());
assertEquals(11, nextToken.getTokenType());

Token identifierOrOperatorName = xPathLexer.identifierOrOperatorName();
assertEquals("iD", identifierOrOperatorName.getTokenText());
assertEquals(15, identifierOrOperatorName.getTokenType());


** It was a parseable test case! 
refined test name is: testXPathLexerforwardSlashAndIdentifiersuccessful
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XPathLexer xPathLexer = new XPathLexer("0;");
Token nextToken = xPathLexer.nextToken();
assertEquals("0", nextToken.getTokenText());
assertEquals(30, nextToken.getTokenType());


** It was a parseable test case! 
refined test name is: testNextTokenReturnsCorrectTokenForNumber
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XPathLexer xPathLexer = new XPathLexer("3Y{mms7WR.");
Token nextToken = xPathLexer.nextToken();
assertEquals("3", nextToken.getTokenText());
assertEquals(30, nextToken.getTokenType());


** It was a parseable test case! 
refined test name is: testXPathLexernumberToken
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XPathLexer xPathLexer = new XPathLexer("5nqXpW;P=D_/k");
Token nextToken = xPathLexer.nextToken();
assertEquals(30, nextToken.getTokenType());
assertEquals("5", nextToken.getTokenText());


** It was a parseable test case! 
refined test name is: testNextTokenReturnsNumberToken
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XPathLexer xPathLexer = new XPathLexer("6T.");
Token nextToken = xPathLexer.nextToken();
assertEquals("6", nextToken.getTokenText());
assertEquals(30, nextToken.getTokenType());


** It was a parseable test case! 
refined test name is: testXPathLexernextTokenwithInputStringDot
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XPathLexer xPathLexer = new XPathLexer("8F");
Token nextToken = xPathLexer.nextToken();
assertEquals(30, nextToken.getTokenType());
assertEquals("8", nextToken.getTokenText());


** It was a parseable test case! 
refined test name is: testNextTokenTypeAndText
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XPathLexer xPathLexer = new XPathLexer("q=^j{MY7l.g29;'1q");
Token comma = xPathLexer.comma();
assertEquals("q", comma.getTokenText());
assertEquals(32, comma.getTokenType());

Token nextToken = xPathLexer.nextToken();
assertEquals("=", nextToken.getTokenText());
assertEquals(21, nextToken.getTokenType());

Token identifierOrOperatorName = xPathLexer.identifierOrOperatorName();
assertEquals(15, identifierOrOperatorName.getTokenType());
assertEquals("", identifierOrOperatorName.getTokenText());


** It was a parseable test case! 
refined test name is: testXPathLexerShouldReturnExpectedTokens
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XPathLexer xPathLexer = new XPathLexer("Bu[V?%EN4&_wLeV_:W");
Token doubleColon = xPathLexer.doubleColon();
assertEquals("Bu", doubleColon.getTokenText());
assertEquals(19, doubleColon.getTokenType());

xPathLexer.consume();
Token identifierOrOperatorName = xPathLexer.identifierOrOperatorName();
assertEquals(15, identifierOrOperatorName.getTokenType());
assertEquals("V", identifierOrOperatorName.getTokenText());
assertNotNull(identifierOrOperatorName);

Token nextToken = xPathLexer.nextToken();
assertEquals("?%EN4&_wLeV_:W", nextToken.getTokenText());


** It was a parseable test case! 
refined test name is: testDoubleColonAndIdentifierOrOperatorName
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XPathLexer xPathLexer = new XPathLexer("@b)eb2\"h7\nDuE*cIi");
Token nextToken = xPathLexer.nextToken();
assertEquals("@", nextToken.getTokenText());
assertEquals(16, nextToken.getTokenType());


** It was a parseable test case! 
refined test name is: testNextToken
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XPathLexer xPathLexer = new XPathLexer("BuV?%EN4n&_wLeV:W");
Token nextToken = xPathLexer.nextToken();
assertEquals("BuV", nextToken.getTokenText());
assertEquals(15, nextToken.getTokenType());


** It was a parseable test case! 
refined test name is: testNextTokenWithValidXPathExpression
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XPathLexer xPathLexer = new XPathLexer("CJi");
Token nextToken = xPathLexer.nextToken();
assertEquals("CJi", nextToken.getTokenText());
assertEquals(15, nextToken.getTokenType());


** It was a parseable test case! 
refined test name is: testNextTokenreturnsExpectedTokenTextAndType
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XPathLexer xPathLexer = new XPathLexer("F|'~");
Token nextToken = xPathLexer.nextToken();
assertEquals(15, nextToken.getTokenType());
assertEquals("F", nextToken.getTokenText());


** It was a parseable test case! 
refined test name is: testNextTokenreturnsCorrectTokenTypeAndText
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XPathLexer xPathLexer = new XPathLexer("GI\"8u5");
Token nextToken = xPathLexer.nextToken();
assertEquals(15, nextToken.getTokenType());
assertEquals("GI", nextToken.getTokenText());


** It was a parseable test case! 
refined test name is: testNextTokenWithInvalidXPathQuery
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XPathLexer xPathLexer = new XPathLexer("Ib.4N");
Token nextToken = xPathLexer.nextToken();
assertEquals("Ib.4N", nextToken.getTokenText());
assertEquals(15, nextToken.getTokenType());


** It was a parseable test case! 
refined test name is: testNextTokenForValidXPathInput
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XPathLexer xPathLexer = new XPathLexer("K.=D`");
Token nextToken = xPathLexer.nextToken();
assertEquals("K.", nextToken.getTokenText());
assertEquals(15, nextToken.getTokenType());


** It was a parseable test case! 
refined test name is: testLexerCanReturnNextTokenForComparisonOperator
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XPathLexer xPathLexer = new XPathLexer("Ly?A+VtQ]+$wtQ");
Token nextToken = xPathLexer.nextToken();
assertEquals("Ly", nextToken.getTokenText());
assertEquals(15, nextToken.getTokenType());


** It was a parseable test case! 
refined test name is: testXPathLexerTokenization
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XPathLexer xPathLexer = new XPathLexer("M%=");
Token nextToken = xPathLexer.nextToken();
assertEquals("M", nextToken.getTokenText());
assertEquals(15, nextToken.getTokenType());


** It was a parseable test case! 
refined test name is: testValidXPathExpressionStartingWithM
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XPathLexer xPathLexer = new XPathLexer("OB`0RtoR)E~zfca%?$");
Token nextToken = xPathLexer.nextToken();
assertEquals("OB", nextToken.getTokenText());
assertEquals(15, nextToken.getTokenType());


** It was a parseable test case! 
refined test name is: testNextTokenValidInputStringReturnsOperatorToken
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XPathLexer xPathLexer = new XPathLexer("FnQ$|&9");
Token equals = xPathLexer.equals();
assertEquals("F", equals.getTokenText());
assertEquals(21, equals.getTokenType());

Token at = xPathLexer.at();
assertEquals(16, at.getTokenType());
assertEquals("n", at.getTokenText());

Token nextToken = xPathLexer.nextToken();
assertEquals(15, nextToken.getTokenType());
assertEquals("Q", nextToken.getTokenText());


** It was a parseable test case! 
refined test name is: testInvalidCharactersInXPath
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XPathLexer xPathLexer = new XPathLexer("Re`lCkMjCqyEd ");
Token nextToken = xPathLexer.nextToken();
assertEquals("Re", nextToken.getTokenText());
assertEquals(15, nextToken.getTokenType());


** It was a parseable test case! 
refined test name is: testRelationalOperator
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XPathLexer xPathLexer = new XPathLexer("SmoY~H'7-Hef\"x)");
Token nextToken = xPathLexer.nextToken();
assertEquals("SmoY", nextToken.getTokenText());
assertEquals(15, nextToken.getTokenType());


** It was a parseable test case! 
refined test name is: testNextTokenreturnsTokenWithCorrectTextAndType
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XPathLexer xPathLexer = new XPathLexer();
xPathLexer.setXPath("Tzns0k_f");
Token nextToken = xPathLexer.nextToken();
assertEquals("Tzns0k_f", nextToken.getTokenText());
assertEquals(15, nextToken.getTokenType());


** It was a parseable test case! 
refined test name is: testValidXPathNextToken
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XPathLexer xPathLexer = new XPathLexer();
xPathLexer.setXPath("U<},@");
Token nextToken = xPathLexer.nextToken();
assertEquals("U", nextToken.getTokenText());
assertEquals(15, nextToken.getTokenType());


** It was a parseable test case! 
refined test name is: testLexerReturnsNextToken
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XPathLexer xPathLexer = new XPathLexer("VU$yO");
Token nextToken = xPathLexer.nextToken();
assertEquals(15, nextToken.getTokenType());
assertEquals("VU", nextToken.getTokenText());


** It was a parseable test case! 
refined test name is: testLexerNextTokenWithXPathExpression
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XPathLexer xPathLexer = new XPathLexer("WA6");
Token nextToken = xPathLexer.nextToken();
assertEquals("WA6", nextToken.getTokenText());
assertEquals(15, nextToken.getTokenType());


** It was a parseable test case! 
refined test name is: testXPathLexerTokenizesMultipleWordsCorrectly
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XPathLexer xPathLexer = new XPathLexer("Xr[AS6do");
Token nextToken = xPathLexer.nextToken();
assertEquals(15, nextToken.getTokenType());
assertEquals("Xr", nextToken.getTokenText());


** It was a parseable test case! 
refined test name is: testLexerNextToken
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XPathLexer xPathLexer = new XPathLexer("q=^j{MY7l.g29;'1q");
Token dots = xPathLexer.dots();
assertEquals("q", dots.getTokenText());
assertEquals(13, dots.getTokenType());

Token equals = xPathLexer.equals();
assertEquals(21, equals.getTokenType());
assertEquals("=", equals.getTokenText());

Token comma = xPathLexer.comma();
assertEquals(32, comma.getTokenType());
assertEquals("^", comma.getTokenText());

Token leftBracket = xPathLexer.leftBracket();
assertEquals("j", leftBracket.getTokenText());
assertEquals(3, leftBracket.getTokenType());

Token rightParen = xPathLexer.rightParen();
assertEquals(2, rightParen.getTokenType());
assertEquals("{", rightParen.getTokenText());

Token colon = xPathLexer.colon();
assertEquals(18, colon.getTokenType());

Token nextToken = xPathLexer.nextToken();
assertEquals("Y7l.g29", nextToken.getTokenText());
assertEquals(15, nextToken.getTokenType());


** It was a parseable test case! 
refined test name is: testXPathLexerwithValidInput
* Compiling Tests
refined test name is: testXPathLexergivenInputStringreturnsTokenStream
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XPathLexer xPathLexer = new XPathLexer("Z:{:;y[\"");
Token nextToken = xPathLexer.nextToken();
assertEquals(15, nextToken.getTokenType());
assertEquals("Z", nextToken.getTokenText());


** It was a parseable test case! 
refined test name is: testNextTokenreturnsColonToken
* Compiling Tests
refined test name is: testNextTokenReturnsCorrectTokenTypeAndText
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XPathLexer xPathLexer = new XPathLexer("q=^j{MY7l.g29;'1q");
Token leftBracket = xPathLexer.leftBracket();
assertEquals(3, leftBracket.getTokenType());
assertEquals("q", leftBracket.getTokenText());

Token rightParen = xPathLexer.rightParen();
assertEquals(2, rightParen.getTokenType());
assertEquals("=", rightParen.getTokenText());

Token nextToken = xPathLexer.nextToken();
assertEquals((-1), nextToken.getTokenType());
assertEquals("^j{MY7l.g29;'1q", nextToken.getTokenText());


** It was a parseable test case! 
refined test name is: testLeftBracketAndRightParen
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XPathLexer xPathLexer = new XPathLexer("20/u`95");
Token not = xPathLexer.not();
assertEquals("2", not.getTokenText());
assertEquals(23, not.getTokenType());

Token whitespace = xPathLexer.whitespace();
assertEquals((-2), whitespace.getTokenType());
assertEquals("", whitespace.getTokenText());

Token colon = xPathLexer.colon();
assertEquals(18, colon.getTokenType());
assertEquals("/", colon.getTokenText());

Token rightBracket = xPathLexer.rightBracket();
assertEquals(4, rightBracket.getTokenType());
assertEquals("u", rightBracket.getTokenText());

Token nextToken = xPathLexer.nextToken();
assertEquals((-1), nextToken.getTokenType());
assertEquals("`95", nextToken.getTokenText());


** It was a parseable test case! 
refined test name is: testXPathNotOperator
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XPathLexer xPathLexer = new XPathLexer("eS?Ea'qz");
Token rightParen = xPathLexer.rightParen();
assertEquals("e", rightParen.getTokenText());
assertEquals(2, rightParen.getTokenType());

Token colon = xPathLexer.colon();
assertEquals(18, colon.getTokenType());
assertEquals("S", colon.getTokenText());

xPathLexer.equals();
Token equals = xPathLexer.equals();
assertEquals("E", equals.getTokenText());
assertEquals(21, equals.getTokenType());

Token nextToken = xPathLexer.nextToken();
assertEquals("a", nextToken.getTokenText());
assertEquals(15, nextToken.getTokenType());


** It was a parseable test case! 
refined test name is: testExtractTokensWithValidInput
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XPathLexer xPathLexer = new XPathLexer();
xPathLexer.setXPath("/book/title");
Token star = xPathLexer.star();
assertEquals(20, star.getTokenType());
assertEquals("/", star.getTokenText());

Token nextToken = xPathLexer.nextToken();
assertEquals(15, nextToken.getTokenType());
assertEquals("book", nextToken.getTokenText());


** It was a parseable test case! 
refined test name is: testStarNextToken
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XPathLexer xPathLexer = new XPathLexer("e<LUNO0D|");
Token nextToken = xPathLexer.nextToken();
assertEquals("e", nextToken.getTokenText());
assertEquals(15, nextToken.getTokenType());


** It was a parseable test case! 
refined test name is: testLessThanOperator
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XPathLexer xPathLexer = new XPathLexer("f]l.']LBO-7");
Token nextToken = xPathLexer.nextToken();
assertEquals("f", nextToken.getTokenText());
assertEquals(15, nextToken.getTokenType());


** It was a parseable test case! 
refined test name is: testXPathLexeridentifier
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XPathLexer xPathLexer = new XPathLexer("k7qG>Br4");
Token nextToken = xPathLexer.nextToken();
assertEquals("k7qG", nextToken.getTokenText());
assertEquals(15, nextToken.getTokenType());


** It was a parseable test case! 
refined test name is: testNextTokenExtractsCorrectToken
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XPathLexer xPathLexer = new XPathLexer("q=^j{MY7l.g29;'1q");
xPathLexer.comma();
Token dots = xPathLexer.dots();
assertEquals(13, dots.getTokenType());
assertEquals("=", dots.getTokenText());

Token equals = xPathLexer.equals();
assertEquals(21, equals.getTokenType());
assertEquals("^", equals.getTokenText());

xPathLexer.comma();
Token leftBracket = xPathLexer.leftBracket();
assertEquals(3, leftBracket.getTokenType());
assertEquals("{", leftBracket.getTokenText());

Token comma = xPathLexer.comma();
assertEquals(32, comma.getTokenType());
assertEquals("M", comma.getTokenText());

Token rightParen = xPathLexer.rightParen();
assertEquals("Y", rightParen.getTokenText());
assertEquals(2, rightParen.getTokenType());

Token colon = xPathLexer.colon();
assertEquals(18, colon.getTokenType());
assertEquals("7", colon.getTokenText());

Token nextToken = xPathLexer.nextToken();
assertEquals(15, nextToken.getTokenType());
assertEquals("l.g29", nextToken.getTokenText());


** It was a parseable test case! 
refined test name is: analyzeXPathLexer
* Compiling Tests
refined test name is: testCommaDotsEqualsColonString
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.Token");
Token leftBracket = xPathLexer.leftBracket();
assertEquals("c", leftBracket.getTokenText());
assertEquals(3, leftBracket.getTokenType());

Token not = xPathLexer.not();
assertEquals(23, not.getTokenType());
assertEquals("o", not.getTokenText());

Token nextToken = xPathLexer.nextToken();
assertEquals("m.werken.saxpath.Token", nextToken.getTokenText());
assertEquals(15, nextToken.getTokenType());


** It was a parseable test case! 
refined test name is: testLexerlexExpression
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XPathLexer xPathLexer = new XPathLexer("n!J");
Token nextToken = xPathLexer.nextToken();
assertEquals("n", nextToken.getTokenText());
assertEquals(15, nextToken.getTokenType());


** It was a parseable test case! 
refined test name is: testLexerNextTokenreturnsCorrectTokenForOperator
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.XPathLexer");
Token leftBracket = xPathLexer.leftBracket();
assertEquals(3, leftBracket.getTokenType());
assertEquals("c", leftBracket.getTokenText());

Token nextToken = xPathLexer.nextToken();
assertEquals("om.werken.saxpath.XPathLexer", nextToken.getTokenText());
assertEquals(15, nextToken.getTokenType());


** It was a parseable test case! 
refined test name is: testLeftBracketShouldBeReturnedAsATokenObject
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XPathLexer xPathLexer = new XPathLexer("q=^j{MY7l.g29;'1q");
Token nextToken = xPathLexer.nextToken();
assertEquals(15, nextToken.getTokenType());
assertEquals("q", nextToken.getTokenText());


** It was a parseable test case! 
refined test name is: testNextTokenWithValidInputString
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XPathLexer xPathLexer = new XPathLexer("s2");
Token nextToken = xPathLexer.nextToken();
assertEquals("s2", nextToken.getTokenText());
assertEquals(15, nextToken.getTokenType());


** It was a parseable test case! 
refined test name is: testEscapedCharacterTokenization
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XPathLexer xPathLexer = new XPathLexer("tLgWN@XN<'");
Token nextToken = xPathLexer.nextToken();
assertEquals(15, nextToken.getTokenType());
assertEquals("tLgWN", nextToken.getTokenText());


** It was a parseable test case! 
refined test name is: testNextTokenIdentifier
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XPathLexer xPathLexer = new XPathLexer("u&HSr1");
Token nextToken = xPathLexer.nextToken();
assertEquals("u", nextToken.getTokenText());
assertEquals(15, nextToken.getTokenType());


** It was a parseable test case! 
refined test name is: testNextTokenReturnsCorrectIdentifierToken
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XPathLexer xPathLexer = new XPathLexer("v\"R-PGkiC LT=*iTw");
Token nextToken = xPathLexer.nextToken();
assertEquals("v", nextToken.getTokenText());
assertEquals(15, nextToken.getTokenType());


** It was a parseable test case! 
refined test name is: testXPathLexerWithValidInput
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XPathLexer xPathLexer = new XPathLexer("wK3WT4j");
Token nextToken = xPathLexer.nextToken();
assertEquals("wK3WT4j", nextToken.getTokenText());
assertEquals(15, nextToken.getTokenType());


** It was a parseable test case! 
refined test name is: testXPathLexerNextToken
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XPathLexer xPathLexer = new XPathLexer("Nx|H'l\u0001th=<c^B1S]");
Token not = xPathLexer.not();
assertEquals("N", not.getTokenText());
assertEquals(23, not.getTokenType());

Token nextToken = xPathLexer.nextToken();
assertEquals("x", nextToken.getTokenText());
assertEquals(15, nextToken.getTokenType());


** It was a parseable test case! 
refined test name is: testNotMethodReturnsCorrectToken
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XPathLexer xPathLexer = new XPathLexer("yS>TKm>&ZvN;Z]BY(");
Token nextToken = xPathLexer.nextToken();
assertEquals(15, nextToken.getTokenType());
assertEquals("yS", nextToken.getTokenText());


** It was a parseable test case! 
refined test name is: testNextToken
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XPathLexer xPathLexer = new XPathLexer();
xPathLexer.setXPath("Tzns0k_f");
Token star = xPathLexer.star();
assertEquals(20, star.getTokenType());
assertEquals("T", star.getTokenText());

Token nextToken = xPathLexer.nextToken();
assertEquals(15, nextToken.getTokenType());
assertEquals("zns0k_f", nextToken.getTokenText());


** It was a parseable test case! 
refined test name is: testStarAndNextToken
* Compiling Tests
refined test name is: testStarNextToken
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XPathLexer xPathLexer = new XPathLexer("q=^j{MY7l.g29;'1q");
xPathLexer.leftBracket();
xPathLexer.dots();
xPathLexer.rightBracket();
xPathLexer.at();
xPathLexer.nextToken();
Token identifierOrOperatorName = xPathLexer.identifierOrOperatorName();
assertNull(identifierOrOperatorName);


** It was a parseable test case! 
refined test name is: testLexerConsumesAllInput
* Compiling Tests
refined test name is: shouldConsumeInputString
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XPathLexer xPathLexer = new XPathLexer("K.!=D");
Token rightParen = xPathLexer.rightParen();
assertEquals("K", rightParen.getTokenText());
assertEquals(2, rightParen.getTokenType());

Token comma = xPathLexer.comma();
assertEquals(".", comma.getTokenText());
assertEquals(32, comma.getTokenType());

Token nextToken = xPathLexer.nextToken();
assertEquals(22, nextToken.getTokenType());
assertEquals("!=", nextToken.getTokenText());


** It was a parseable test case! 
refined test name is: testRightParenAndCommaAndNextToken
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XPathLexer xPathLexer = new XPathLexer("q=^j{MY7l.g29;'1q");
Token arg0 = xPathLexer.leftBracket();
xPathLexer.setPreviousToken(arg0);
assertEquals(3, arg0.getTokenType());
assertEquals("q", arg0.getTokenText());

Token identifierOrOperatorName = xPathLexer.identifierOrOperatorName();
assertEquals(15, identifierOrOperatorName.getTokenType());
assertEquals("", identifierOrOperatorName.getTokenText());


** It was a parseable test case! 
refined test name is: testLeftBracket
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.Token");
Token arg0 = xPathLexer.minus();
xPathLexer.setPreviousToken(arg0);
assertEquals(6, arg0.getTokenType());
assertEquals("c", arg0.getTokenText());

Token identifierOrOperatorName = xPathLexer.identifierOrOperatorName();
assertEquals("om.werken.saxpath.Token", identifierOrOperatorName.getTokenText());
assertEquals(15, identifierOrOperatorName.getTokenType());


** It was a parseable test case! 
refined test name is: testLexerShouldReturnMinusToken
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XPathLexer xPathLexer = new XPathLexer("GpE:'Fi?");
Token arg0 = xPathLexer.at();
xPathLexer.setPreviousToken(arg0);
assertEquals(16, arg0.getTokenType());
assertEquals("G", arg0.getTokenText());

Token identifierOrOperatorName = xPathLexer.identifierOrOperatorName();
assertEquals(15, identifierOrOperatorName.getTokenType());
assertEquals("pE", identifierOrOperatorName.getTokenText());


** It was a parseable test case! 
refined test name is: testXPathLexerValidExpression
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XPathLexer xPathLexer = new XPathLexer("/iD<K -Ba2IVWS");
Token arg0 = xPathLexer.doubleColon();
xPathLexer.setPreviousToken(arg0);
assertEquals("/i", arg0.getTokenText());
assertEquals(19, arg0.getTokenType());

Token nextToken = xPathLexer.nextToken();
assertEquals("D", nextToken.getTokenText());
assertEquals(15, nextToken.getTokenType());


** It was a parseable test case! 
refined test name is: testDoubleColonValidExpression
* Compiling Tests
refined test name is: testValidXPathExpressionWithDoubleColon
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XPathLexer xPathLexer = new XPathLexer("BaU");
xPathLexer.slashes();
Token operatorName = xPathLexer.operatorName();
assertNull(operatorName);


** It was a parseable test case! 
refined test name is: testXPathLexerSlashesNoSlashes
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XPathLexer xPathLexer = new XPathLexer("-d-,db.xE:|?{#");
xPathLexer.dots();
Token operatorName = xPathLexer.operatorName();
assertNull(operatorName);


** It was a parseable test case! 
refined test name is: testInvalidOperatorNameWithDots
* Compiling Tests
refined test name is: testInvalidOperatorName
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.XPathLexer");
xPathLexer.star();
xPathLexer.leftParen();
Token operatorName = xPathLexer.operatorName();
assertNull(operatorName);


** It was a parseable test case! 
refined test name is: testXPathLexerStarLeftParenOperatorNameIsNull
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XPathLexer xPathLexer = new XPathLexer("o%LSPo_nwNhA}F2SHk");
Token operatorName = xPathLexer.operatorName();
assertNull(operatorName);


** It was a parseable test case! 
refined test name is: testOperatorNameForNoOperators
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.Token");
Token mod = xPathLexer.mod();
assertNull(mod);


** It was a parseable test case! 
refined test name is: testLexerModReturnsNull
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.Token");
Token div = xPathLexer.div();
assertNull(div);


** It was a parseable test case! 
refined test name is: testExtractTokenFromEmptyStringShouldReturnNull
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.Token");
Token and = xPathLexer.and();
assertNull(and);


** It was a parseable test case! 
refined test name is: testXPathLexerAndOperatorTokenization
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.Token");
xPathLexer.leftBracket();
xPathLexer.not();
Token or = xPathLexer.or();
assertNull(or);


** It was a parseable test case! 
refined test name is: testNegatedPathTokenDoesNotExistshouldReturnNullOr
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.XPathLexer");
Token notEquals = xPathLexer.notEquals();
assertEquals("co", notEquals.getTokenText());
assertEquals(22, notEquals.getTokenType());

Token slashes = xPathLexer.slashes();
assertEquals("m", slashes.getTokenText());
assertEquals(11, slashes.getTokenType());

Token number = xPathLexer.number();
assertEquals(".", number.getTokenText());
assertEquals(31, number.getTokenType());


** It was a parseable test case! 
refined test name is: testLexer
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XPathLexer xPathLexer = new XPathLexer("/iD<K -Ba2IVWS");
Token number = xPathLexer.number();
assertEquals(30, number.getTokenType());


** It was a parseable test case! 
refined test name is: testNumberTokenType
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XPathLexer xPathLexer = new XPathLexer();
Token whitespace = xPathLexer.whitespace();
assertEquals((-2), whitespace.getTokenType());


** It was a parseable test case! 
refined test name is: testWhitespaceTokenizersingleSpaceCharacter
* Compiling Tests
refined test name is: testWhitespaceTokenizerWithSingleSpaceCharacter
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XPathLexer xPathLexer = new XPathLexer();
xPathLexer.setXPath(") (");
Token whitespace = xPathLexer.whitespace();
assertEquals("", whitespace.getTokenText());
assertEquals((-2), whitespace.getTokenType());


** It was a parseable test case! 
refined test name is: testWhitespaceToken
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XPathLexer xPathLexer = new XPathLexer("q=^j{MY7l.g29;'1q");
Token relationalOperator = xPathLexer.relationalOperator();
assertNull(relationalOperator);


** It was a parseable test case! 
refined test name is: parseRelationalOperatorReturnsTokenForEqualSign
* Compiling Tests
refined test name is: testLexerReturnsRelationalOperatorToken
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XPathLexer xPathLexer = new XPathLexer("/.D<K -Ba2IVWS");
Token dots = xPathLexer.dots();
assertEquals("/.", dots.getTokenText());
assertEquals(14, dots.getTokenType());


** It was a parseable test case! 
refined test name is: testTokenizeInputString
* Compiling Tests
refined test name is: testDotSeparatorToken
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XPathLexer xPathLexer = new XPathLexer("2/#y");
Token slashes = xPathLexer.slashes();
assertEquals("2/", slashes.getTokenText());
assertEquals(12, slashes.getTokenType());


** It was a parseable test case! 
refined test name is: testGetSlashes
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XPathLexer xPathLexer = new XPathLexer("q=^j{MY7l.g29;'1q");
xPathLexer.setXPath("}h26-V)RL");
Token at = xPathLexer.at();
assertEquals("}", at.getTokenText());
assertEquals(16, at.getTokenType());

Token nextToken = xPathLexer.nextToken();
assertEquals("h26-V", nextToken.getTokenText());
assertEquals(15, nextToken.getTokenType());


** It was a parseable test case! 
refined test name is: testLexerWithSpecialCharactersAndEscapeSequences
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XPathLexer xPathLexer = new XPathLexer();
String xPath = xPathLexer.getXPath();
assertNull(xPath);


** It was a parseable test case! 
refined test name is: testGetEmptyXPathStringWhenNoExpressionSpecified
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XPathLexer xPathLexer = new XPathLexer();
xPathLexer.setXPath("3nA=\"qo4jzE%rc");
Token at = xPathLexer.at();
assertEquals(16, at.getTokenType());
assertEquals("3", at.getTokenText());

char LA = xPathLexer.LA(5);
assertEquals('q', LA);


** It was a parseable test case! 
refined test name is: testXPathTokenization
* Compiling Tests
refined test name is: testXPathTokenizationValidExpression
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XPathLexer xPathLexer = new XPathLexer();
xPathLexer.setXPath("4#?p,~P9!");
Token doubleColon = xPathLexer.doubleColon();
assertEquals("4#", doubleColon.getTokenText());
assertEquals(19, doubleColon.getTokenType());

char LA = xPathLexer.LA((-1));
assertEquals('4', LA);


** It was a parseable test case! 
refined test name is: testDoubleColonTokenTypeAndText
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XPathLexer xPathLexer = new XPathLexer();
int currentPosition = xPathLexer.currentPosition();
assertEquals(0, currentPosition);


** It was a parseable test case! 
refined test name is: testCurrentPositionAtBeginningOfInputString
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XPathLexer xPathLexer = new XPathLexer("K.!=D");
int endPosition = xPathLexer.endPosition();
assertEquals(5, endPosition);


** It was a parseable test case! 
refined test name is: testXPathLexerEndPosition
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XPathLexer xPathLexer = new XPathLexer();
int endPosition = xPathLexer.endPosition();
assertEquals(0, endPosition);


** It was a parseable test case! 
refined test name is: testEndPositionDefaultValue
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XPathLexer xPathLexer = new XPathLexer("9:BNn,");
Token identifierOrOperatorName = xPathLexer.identifierOrOperatorName();
assertNotNull(identifierOrOperatorName);
assertEquals(15, identifierOrOperatorName.getTokenType());
assertEquals("9", identifierOrOperatorName.getTokenText());

Token nextToken = xPathLexer.nextToken();
assertEquals(18, nextToken.getTokenType());

Token leftBracket = xPathLexer.leftBracket();
assertEquals(3, leftBracket.getTokenType());
assertEquals("B", leftBracket.getTokenText());

Token comma = xPathLexer.comma();
assertEquals(32, comma.getTokenType());
assertEquals("N", comma.getTokenText());

Token rightParen = xPathLexer.rightParen();
assertEquals(2, rightParen.getTokenType());
assertEquals("n", rightParen.getTokenText());

Token colon = xPathLexer.colon();
assertEquals(",", colon.getTokenText());

xPathLexer.nextToken();
Token previousToken = xPathLexer.getPreviousToken();
assertEquals((-1), previousToken.getTokenType());


** It was a parseable test case! 
refined test name is: testLexerRecognizesValidXPathExpression
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XPathLexer xPathLexer = new XPathLexer();
Token arg0 = xPathLexer.dots();
xPathLexer.setPreviousToken(arg0);
Token previousToken = xPathLexer.getPreviousToken();
assertEquals(13, previousToken.getTokenType());


** It was a parseable test case! 
refined test name is: testGetPreviousTokenReturnsCorrectTokenType
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XPathLexer xPathLexer = new XPathLexer("/iD<K -Ba2IVWS");
Token previousToken = xPathLexer.getPreviousToken();
assertNull(previousToken);


** It was a parseable test case! 
refined test name is: testInitializationWithInputString
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XPathLexer xPathLexer = new XPathLexer();
xPathLexer.setXPath("");
String xPath = xPathLexer.getXPath();
assertEquals("", xPath);


** It was a parseable test case! 
refined test name is: testEmptyXPathParsing
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.Token");
String xPath = xPathLexer.getXPath();
assertEquals("com.werken.saxpath.Token", xPath);


** It was a parseable test case! 
refined test name is: testGetXPath
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XPathLexer xPathLexer = new XPathLexer("Bfl&[*+1Fa~'C&hz");
xPathLexer.literal();
boolean moreChars = xPathLexer.hasMoreChars();
assertFalse(moreChars);


** It was a parseable test case! 
refined test name is: testLiteralHasMoreCharsShouldReturnFalse
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.XPathLexer");
boolean moreChars = xPathLexer.hasMoreChars();
assertTrue(moreChars);


** It was a parseable test case! 
refined test name is: testXPathLexerHasMoreCharsWhenMoreCharsAvailable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XPathLexer xPathLexer = new XPathLexer("q=^j{MY7l.g29;'1q");
boolean identifierChar = xPathLexer.isIdentifierChar('>');
assertFalse(identifierChar);


** It was a parseable test case! 
refined test name is: testIsIdentifierCharForGreaterThan
* Compiling Tests
refined test name is: testIsNotIdentifierCharForGreaterThanSymbol
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XPathLexer xPathLexer = new XPathLexer();
boolean identifierChar = xPathLexer.isIdentifierChar('W');
assertTrue(identifierChar);


** It was a parseable test case! 
refined test name is: testIsIdentifierCharWithValidCharacterReturnsTrue
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XPathLexer xPathLexer = new XPathLexer("q=^j{MY7l.g29;'1q");
boolean identifierStartChar = xPathLexer.isIdentifierStartChar('9');
assertFalse(identifierStartChar);


** It was a parseable test case! 
refined test name is: testIsIdentifierStartCharNonIdentifierStartChar
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XPathLexer xPathLexer = new XPathLexer();
boolean identifierStartChar = xPathLexer.isIdentifierStartChar('I');
assertTrue(identifierStartChar);


** It was a parseable test case! 
refined test name is: testIsIdentifierStartChar
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XPathLexer xPathLexer = new XPathLexer("q=^j{MY7l.g29;'1q");
Token literal = xPathLexer.literal();
assertNotNull(literal);
assertEquals(27, literal.getTokenType());
assertEquals("=^j{MY7l.g29;'1", literal.getTokenText());


** It was a parseable test case! 
refined test name is: testLiteral
* Compiling Tests
refined test name is: testLiteralToken
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: XPathLexer xPathLexer = new XPathLexer("N7`P<l1{`vcA");
Token nextToken = xPathLexer.nextToken();
assertEquals(15, nextToken.getTokenType());

Token at = xPathLexer.at();
assertEquals("`", at.getTokenText());
assertEquals(16, at.getTokenType());

Token rightBracket = xPathLexer.rightBracket();
assertEquals("P", rightBracket.getTokenText());
assertEquals(4, rightBracket.getTokenType());

Token relationalOperator = xPathLexer.relationalOperator();
assertEquals("<", relationalOperator.getTokenText());
assertEquals(7, relationalOperator.getTokenType());


** It was a parseable test case! 
refined test name is: testXPathLexerBasic
* Compiling Tests
refined test name is: testNextTokenReturnsNumber
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 00:01:15.458 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:01:15.486 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 00:01:15.546 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 00:01:15.547 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
[MASTER] 00:01:15.608 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 00:01:15.610 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
[MASTER] 00:01:15.669 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 00:01:15.670 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
[MASTER] 00:01:15.967 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:01:15.969 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 00:01:16.037 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:01:16.038 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 00:01:16.068 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 00:01:16.069 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
[MASTER] 00:01:16.099 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:01:16.099 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 00:01:16.134 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:01:16.135 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
[MASTER] 00:01:16.162 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:01:16.162 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 00:01:16.197 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:01:16.198 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 00:01:16.232 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:01:16.232 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 00:01:16.259 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:01:16.260 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 00:01:16.290 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:01:16.291 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 00:01:16.334 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:01:16.335 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 00:01:16.370 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:01:16.371 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 00:01:16.407 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:01:16.408 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 00:01:16.448 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:01:16.449 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 00:01:16.486 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:01:16.487 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 00:01:16.526 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:01:16.528 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 00:01:16.566 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:01:16.567 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 00:01:16.597 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:01:16.598 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 00:01:16.635 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:01:16.636 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 00:01:16.672 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:01:16.673 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 00:01:16.708 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:01:16.709 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 00:01:16.742 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:01:16.743 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 00:01:16.774 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:01:16.775 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 00:01:16.805 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:01:16.806 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 00:01:16.838 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:01:16.839 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 00:01:16.870 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:01:16.871 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 00:01:16.902 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:01:16.903 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 00:01:16.942 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:01:16.943 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 00:01:16.992 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:01:16.993 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 00:01:17.030 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:01:17.031 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 00:01:17.077 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:01:17.078 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 00:01:17.119 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:01:17.120 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 00:01:17.157 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:01:17.157 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
Going to execute: handleTestsThatAreUnstable
[MASTER] 00:01:17.203 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:01:17.204 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
* Compiling Tests
[MASTER] 00:01:17.290 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:01:17.291 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 00:01:17.341 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:01:17.344 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 00:01:17.394 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:01:17.395 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 00:01:17.444 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:01:17.445 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 00:01:17.493 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:01:17.494 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 00:01:17.543 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:01:17.544 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 00:01:17.597 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 00:01:17.598 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 00:01:17.642 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:01:17.643 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 00:01:17.692 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:01:17.693 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 00:01:17.739 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:01:17.740 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 00:01:17.788 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:01:17.789 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 00:01:17.840 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:01:17.843 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 00:01:17.888 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:01:17.889 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 00:01:17.930 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:01:17.932 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 00:01:17.978 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:01:17.979 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 00:01:18.031 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:01:18.032 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 00:01:18.090 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:01:18.091 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 00:01:18.139 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:01:18.140 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 00:01:18.201 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:01:18.201 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
Going to execute: handleTestsThatAreUnstable
[MASTER] 00:01:18.251 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:01:18.252 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
* Compiling Tests
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 00:01:18.300 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:01:18.301 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
[MASTER] 00:01:18.349 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:01:18.350 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 00:01:18.396 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:01:18.396 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
Going to execute: handleTestsThatAreUnstable
[MASTER] 00:01:18.441 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:01:18.442 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
* Compiling Tests
[MASTER] 00:01:18.491 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:01:18.491 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 00:01:18.537 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:01:18.538 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 00:01:18.586 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:01:18.587 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 00:01:18.640 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:01:18.641 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 00:01:18.695 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:01:18.696 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
[MASTER] 00:01:18.755 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:01:18.756 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 00:01:18.810 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:01:18.810 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 00:01:18.863 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:01:18.863 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
Going to execute: handleTestsThatAreUnstable
[MASTER] 00:01:18.910 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:01:18.911 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 00:01:18.959 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:01:18.960 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 00:01:19.003 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:01:19.004 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 00:01:19.051 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:01:19.051 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
[MASTER] 00:01:19.099 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:01:19.100 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
* Compiling Tests
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 00:01:19.150 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:01:19.151 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
[MASTER] 00:01:19.201 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
[MASTER] 00:01:19.202 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
* Compiling Tests
[MASTER] 00:01:19.256 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:01:19.257 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
Going to execute: handleTestsThatAreUnstable
[MASTER] 00:01:19.302 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:01:19.303 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
* Compiling Tests
[MASTER] 00:01:19.352 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 00:01:19.353 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 00:01:19.401 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:01:19.402 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
[MASTER] 00:01:19.450 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:01:19.450 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
[MASTER] 00:01:19.499 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:01:19.500 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
* Compiling Tests
[MASTER] 00:01:19.571 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:01:19.571 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 00:01:19.622 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:01:19.623 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 00:01:19.677 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:01:19.678 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
[MASTER] 00:01:19.732 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:01:19.733 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 00:01:19.798 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:01:19.799 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
[MASTER] 00:01:19.857 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:01:19.858 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 00:01:19.927 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:01:19.927 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 00:01:19.989 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:01:19.989 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 00:01:20.039 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:01:20.040 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
[MASTER] 00:01:20.110 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:01:20.110 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
* Compiling Tests
[MASTER] 00:01:20.180 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 00:01:20.181 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
[MASTER] 00:01:20.247 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:01:20.248 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 00:01:20.294 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:01:20.295 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 00:01:20.335 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:01:20.335 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 00:01:20.373 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:01:20.374 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 00:01:20.412 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:01:20.413 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 00:01:20.456 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:01:20.456 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 00:01:20.497 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:01:20.497 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 00:01:20.539 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:01:20.540 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 00:01:20.582 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
[MASTER] 00:01:20.582 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
* Compiling Tests
[MASTER] 00:01:20.624 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:01:20.625 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 00:01:20.666 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:01:20.667 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 00:01:20.709 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:01:20.710 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 00:01:20.756 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
[MASTER] 00:01:20.757 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
* Compiling Tests
** Write a test suite: 6 called: 0 to improve: false
** Write a test suite: 7 called: 1 to improve: false
** Write a test suite: 8 called: 2 to improve: false
** Write a test suite: 44 called: 3 to improve: false
** Write a test suite: 45 called: 4 to improve: false
** Write a test suite: 53 called: 5 to improve: false
** Write a test suite: 65 called: 6 to improve: false
** Write a test suite: 66 called: 7 to improve: false
** Write a test suite: 71 called: 8 to improve: false
** Write a test suite: 73 called: 9 to improve: false
** Write a test suite: 82 called: 10 to improve: false
** Write a test suite: 84 called: 11 to improve: false
** Write a test suite: 85 called: 12 to improve: false
** Write a test suite: 89 called: 13 to improve: false
** Write a test suite: 101 called: 14 to improve: false
** Write a test suite: 105 called: 15 to improve: false
** Write a test suite: 106 called: 16 to improve: false
[MASTER] 00:01:23.309 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:01:23.310 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 5 called: 2 to improve: false
** Write a test suite: 17 called: 3 to improve: false
** Write a test suite: 21 called: 4 to improve: false
** Write a test suite: 22 called: 5 to improve: false
** Write a test suite: 24 called: 6 to improve: false
** Write a test suite: 33 called: 7 to improve: false
** Write a test suite: 35 called: 8 to improve: false
** Write a test suite: 40 called: 9 to improve: false
** Write a test suite: 41 called: 10 to improve: false
** Write a test suite: 53 called: 11 to improve: false
** Write a test suite: 61 called: 12 to improve: false
** Write a test suite: 62 called: 13 to improve: false
** Write a test suite: 98 called: 14 to improve: false
** Write a test suite: 99 called: 15 to improve: false
** Write a test suite: 100 called: 16 to improve: false
[MASTER] 00:01:23.759 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:01:23.760 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
[MASTER] 00:01:24.643 [logback-1] WARN  TimeController - Already entered in phase: INLINING. This will mess up the timing calculations.
* test suite isTestSuite: 126
Test 0: 
XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.Token");
xPathLexer.nextToken();
Test 1: 
XPathLexer xPathLexer = new XPathLexer(") (");
xPathLexer.equals();
xPathLexer.nextToken();
xPathLexer.setXPath("Tzns0k_f");
xPathLexer.nextToken();
Test 2: 
XPathLexer xPathLexer = new XPathLexer("|h'rQVn*qV)@!5H>J");
xPathLexer.nextToken();
xPathLexer.nextToken();
Test 3: 
XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.Token");
xPathLexer.leftBracket();
xPathLexer.not();
xPathLexer.nextToken();
Test 4: 
XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.Token");
Token minus = xPathLexer.minus();
xPathLexer.setPreviousToken(minus);
xPathLexer.identifierOrOperatorName();
Test 5: 
XPathLexer xPathLexer = new XPathLexer();
xPathLexer.plus();
xPathLexer.currentPosition();
Test 6: 
XPathLexer xPathLexer = new XPathLexer("!)JT");
xPathLexer.nextToken();
xPathLexer.identifierOrOperatorName();
Test 7: 
XPathLexer xPathLexer = new XPathLexer("\"<=:zyOvGFl.H@)");
xPathLexer.nextToken();
Test 8: 
XPathLexer xPathLexer = new XPathLexer("q=^j{MY7l.g29;'1q");
xPathLexer.setXPath("4#?p,~P9!");
xPathLexer.at();
xPathLexer.nextToken();
Test 9: 
XPathLexer xPathLexer = new XPathLexer("3nA=\"qo4jzE%rc");
xPathLexer.identifier();
xPathLexer.doubleColon();
xPathLexer.identifierOrOperatorName();
xPathLexer.nextToken();
Test 10: 
XPathLexer xPathLexer = new XPathLexer("&p5u3TD`y@p-^d|&:.");
xPathLexer.nextToken();
Test 11: 
XPathLexer xPathLexer = new XPathLexer(") (");
xPathLexer.nextToken();
xPathLexer.setXPath("Tzns0k_f");
xPathLexer.nextToken();
Test 12: 
XPathLexer xPathLexer = new XPathLexer("$*1L8@xjb");
xPathLexer.star();
xPathLexer.nextToken();
xPathLexer.identifierOrOperatorName();
Test 13: 
XPathLexer xPathLexer = new XPathLexer("<W+rU*$bt?VbT");
xPathLexer.doubleColon();
xPathLexer.nextToken();
xPathLexer.nextToken();
Test 14: 
XPathLexer xPathLexer = new XPathLexer("9:BNn,");
xPathLexer.dots();
xPathLexer.dots();
xPathLexer.identifier();
xPathLexer.nextToken();
Test 15: 
XPathLexer xPathLexer = new XPathLexer("/iD<K -Ba2IVWS");
xPathLexer.colon();
xPathLexer.nextToken();
xPathLexer.equals();
xPathLexer.colon();
xPathLexer.nextToken();
Test 16: 
XPathLexer xPathLexer = new XPathLexer("q=^j{MYl.g29;'1q");
xPathLexer.leftBracket();
xPathLexer.whitespace();
xPathLexer.dots();
xPathLexer.comma();
xPathLexer.leftBracket();
xPathLexer.comma();
xPathLexer.rightParen();
xPathLexer.colon();
xPathLexer.nextToken();
xPathLexer.identifierOrOperatorName();
Test 17: 
XPathLexer xPathLexer = new XPathLexer("/iD<K -Ba2IVWS");
xPathLexer.nextToken();
xPathLexer.identifierOrOperatorName();
Test 18: 
XPathLexer xPathLexer = new XPathLexer("0;");
xPathLexer.nextToken();
Test 19: 
XPathLexer xPathLexer = new XPathLexer("1H0");
xPathLexer.nextToken();
xPathLexer.nextToken();
Test 20: 
XPathLexer xPathLexer = new XPathLexer("X2?31yh2Tg*5v/P");
xPathLexer.pipe();
xPathLexer.nextToken();
Test 21: 
XPathLexer xPathLexer = new XPathLexer("3Y{mms7WR.");
xPathLexer.nextToken();
Test 22: 
XPathLexer xPathLexer = new XPathLexer("4g`ENPGP(U,${~B");
xPathLexer.nextToken();
xPathLexer.nextToken();
Test 23: 
XPathLexer xPathLexer = new XPathLexer("5nqXpW;P=D_/k");
xPathLexer.nextToken();
Test 24: 
XPathLexer xPathLexer = new XPathLexer("6T.");
xPathLexer.nextToken();
Test 25: 
XPathLexer xPathLexer = new XPathLexer("q=^j{MY7l.g29;'1q");
xPathLexer.leftBracket();
xPathLexer.dots();
xPathLexer.comma();
xPathLexer.leftBracket();
xPathLexer.comma();
xPathLexer.rightParen();
xPathLexer.colon();
xPathLexer.nextToken();
Test 26: 
XPathLexer xPathLexer = new XPathLexer("8F");
xPathLexer.nextToken();
Test 27: 
XPathLexer xPathLexer = new XPathLexer("tS'9A[");
xPathLexer.identifierOrOperatorName();
xPathLexer.plus();
xPathLexer.nextToken();
xPathLexer.nextToken();
Test 28: 
XPathLexer xPathLexer = new XPathLexer("9:BNn,");
xPathLexer.identifierOrOperatorName();
xPathLexer.nextToken();
xPathLexer.leftBracket();
xPathLexer.comma();
xPathLexer.rightParen();
xPathLexer.colon();
xPathLexer.nextToken();
xPathLexer.getPreviousToken();
Test 29: 
XPathLexer xPathLexer = new XPathLexer("NoJU;J?1v");
xPathLexer.nextToken();
xPathLexer.nextToken();
Test 30: 
XPathLexer xPathLexer = new XPathLexer(" <@w%@+");
xPathLexer.nextToken();
xPathLexer.identifierOrOperatorName();
Test 31: 
XPathLexer xPathLexer = new XPathLexer("q=^j{MY7l.g29;'1q");
xPathLexer.comma();
xPathLexer.nextToken();
xPathLexer.identifierOrOperatorName();
Test 32: 
XPathLexer xPathLexer = new XPathLexer("KG>BrF");
xPathLexer.identifierOrOperatorName();
xPathLexer.nextToken();
xPathLexer.identifierOrOperatorName();
Test 33: 
XPathLexer xPathLexer = new XPathLexer("Bu[V?%EN4&_wLeV_:W");
xPathLexer.doubleColon();
xPathLexer.consume();
xPathLexer.identifierOrOperatorName();
xPathLexer.nextToken();
Test 34: 
XPathLexer xPathLexer = new XPathLexer("@b)eb2\"h7\nDuE*cIi");
xPathLexer.nextToken();
Test 35: 
XPathLexer xPathLexer = new XPathLexer("BuV?%EN4n&_wLeV:W");
xPathLexer.nextToken();
Test 36: 
XPathLexer xPathLexer = new XPathLexer("CJi");
xPathLexer.nextToken();
Test 37: 
XPathLexer xPathLexer = new XPathLexer("EK3o[vGY*bhod4,l");
xPathLexer.nextToken();
xPathLexer.nextToken();
Test 38: 
XPathLexer xPathLexer = new XPathLexer("F|'~");
xPathLexer.nextToken();
Test 39: 
XPathLexer xPathLexer = new XPathLexer("GI\"8u5");
xPathLexer.nextToken();
Test 40: 
XPathLexer xPathLexer = new XPathLexer("Ib.4N");
xPathLexer.nextToken();
Test 41: 
XPathLexer xPathLexer = new XPathLexer("!)JT");
xPathLexer.at();
xPathLexer.at();
xPathLexer.nextToken();
Test 42: 
XPathLexer xPathLexer = new XPathLexer("K.=D`");
xPathLexer.nextToken();
Test 43: 
XPathLexer xPathLexer = new XPathLexer("Ly?A+VtQ]+$wtQ");
xPathLexer.nextToken();
Test 44: 
XPathLexer xPathLexer = new XPathLexer("M%=");
xPathLexer.nextToken();
Test 45: 
XPathLexer xPathLexer = new XPathLexer("OB`0RtoR)E~zfca%?$");
xPathLexer.nextToken();
Test 46: 
XPathLexer xPathLexer = new XPathLexer();
xPathLexer.setXPath("4#?p,~P9!");
xPathLexer.notEquals();
xPathLexer.at();
xPathLexer.nextToken();
xPathLexer.at();
xPathLexer.leftBracket();
xPathLexer.nextToken();
Test 47: 
XPathLexer xPathLexer = new XPathLexer("FnQ$|&9");
xPathLexer.equals();
xPathLexer.at();
xPathLexer.nextToken();
Test 48: 
XPathLexer xPathLexer = new XPathLexer("Re`lCkMjCqyEd ");
xPathLexer.nextToken();
Test 49: 
XPathLexer xPathLexer = new XPathLexer("SmoY~H'7-Hef\"x)");
xPathLexer.nextToken();
Test 50: 
XPathLexer xPathLexer = new XPathLexer();
xPathLexer.setXPath("Tzns0k_f");
xPathLexer.nextToken();
Test 51: 
XPathLexer xPathLexer = new XPathLexer();
xPathLexer.setXPath("U<},@");
xPathLexer.nextToken();
Test 52: 
XPathLexer xPathLexer = new XPathLexer("VU$yO");
xPathLexer.nextToken();
Test 53: 
XPathLexer xPathLexer = new XPathLexer("WA6");
xPathLexer.nextToken();
Test 54: 
XPathLexer xPathLexer = new XPathLexer("Xr[AS6do");
xPathLexer.nextToken();
Test 55: 
XPathLexer xPathLexer = new XPathLexer("q=^j{MY7l.g29;'1q");
xPathLexer.dots();
xPathLexer.equals();
xPathLexer.comma();
xPathLexer.leftBracket();
xPathLexer.rightParen();
xPathLexer.colon();
xPathLexer.nextToken();
Test 56: 
XPathLexer xPathLexer = new XPathLexer("Z:{:;y[\"");
xPathLexer.nextToken();
Test 57: 
XPathLexer xPathLexer = new XPathLexer("dG!fo");
xPathLexer.nextToken();
Test 58: 
XPathLexer xPathLexer = new XPathLexer("]b88g[)2*\"M`?#");
xPathLexer.nextToken();
xPathLexer.identifierOrOperatorName();
Test 59: 
XPathLexer xPathLexer = new XPathLexer("q=^j{MY7l.g29;'1q");
xPathLexer.leftBracket();
xPathLexer.rightParen();
xPathLexer.nextToken();
Test 60: 
XPathLexer xPathLexer = new XPathLexer("{_y[\"F");
xPathLexer.equals();
xPathLexer.nextToken();
Test 61: 
XPathLexer xPathLexer = new XPathLexer("20/u`95");
xPathLexer.not();
xPathLexer.whitespace();
xPathLexer.colon();
xPathLexer.rightBracket();
xPathLexer.nextToken();
Test 62: 
XPathLexer xPathLexer = new XPathLexer("eS?Ea'qz");
xPathLexer.nextToken();
xPathLexer.dots();
xPathLexer.equals();
xPathLexer.nextToken();
Test 63: 
XPathLexer xPathLexer = new XPathLexer("|bx]PxVClD]R?A");
xPathLexer.at();
xPathLexer.nextToken();
Test 64: 
XPathLexer xPathLexer = new XPathLexer("f]l.']LBO-7");
xPathLexer.nextToken();
Test 65: 
XPathLexer xPathLexer = new XPathLexer("q=^j{MY7l.g29;'1q");
xPathLexer.setXPath("}h26-V)RL");
xPathLexer.at();
xPathLexer.nextToken();
Test 66: 
XPathLexer xPathLexer = new XPathLexer("q=^j{MY7l.g29;'1q");
xPathLexer.leftBracket();
xPathLexer.dollar();
xPathLexer.consume();
xPathLexer.nextToken();
Test 67: 
XPathLexer xPathLexer = new XPathLexer("k7qG>Br4");
xPathLexer.nextToken();
Test 68: 
XPathLexer xPathLexer = new XPathLexer("q=^j{MY7l.g29;'1q");
xPathLexer.comma();
xPathLexer.dots();
xPathLexer.equals();
xPathLexer.comma();
xPathLexer.leftBracket();
xPathLexer.comma();
xPathLexer.rightParen();
xPathLexer.colon();
xPathLexer.nextToken();
Test 69: 
XPathLexer xPathLexer = new XPathLexer("n!J");
xPathLexer.nextToken();
Test 70: 
XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.XPathLexer");
xPathLexer.leftBracket();
xPathLexer.nextToken();
Test 71: 
XPathLexer xPathLexer = new XPathLexer("q=^j{MY7l.g29;'1q");
xPathLexer.nextToken();
Test 72: 
XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.XPathLexer");
xPathLexer.leftParen();
xPathLexer.rightParen();
xPathLexer.plus();
xPathLexer.consume(1);
xPathLexer.dots();
xPathLexer.colon();
xPathLexer.nextToken();
Test 73: 
XPathLexer xPathLexer = new XPathLexer("s2");
xPathLexer.nextToken();
Test 74: 
XPathLexer xPathLexer = new XPathLexer("tLgWN@XN<'");
xPathLexer.nextToken();
Test 75: 
XPathLexer xPathLexer = new XPathLexer("u&HSr1");
xPathLexer.nextToken();
Test 76: 
XPathLexer xPathLexer = new XPathLexer("v\"R-PGkiC LT=*iTw");
xPathLexer.nextToken();
Test 77: 
XPathLexer xPathLexer = new XPathLexer("wK3WT4j");
xPathLexer.nextToken();
Test 78: 
XPathLexer xPathLexer = new XPathLexer("Nx|H'l\u0001th=<c^B1S]");
xPathLexer.not();
xPathLexer.nextToken();
Test 79: 
XPathLexer xPathLexer = new XPathLexer("yS>TKm>&ZvN;Z]BY(");
xPathLexer.nextToken();
Test 80: 
XPathLexer xPathLexer = new XPathLexer();
xPathLexer.setXPath("Tzns0k_f");
xPathLexer.star();
xPathLexer.nextToken();
Test 81: 
XPathLexer xPathLexer = new XPathLexer();
xPathLexer.nextToken();
Test 82: 
XPathLexer xPathLexer = new XPathLexer("K.!=D");
xPathLexer.rightParen();
xPathLexer.comma();
xPathLexer.nextToken();
Test 83: 
XPathLexer xPathLexer = new XPathLexer("q=^j{MY7l.g29;'1q");
Token leftBracket = xPathLexer.leftBracket();
xPathLexer.setPreviousToken(leftBracket);
xPathLexer.identifierOrOperatorName();
Test 84: 
XPathLexer xPathLexer = new XPathLexer("GpE:'Fi?");
Token at = xPathLexer.at();
xPathLexer.setPreviousToken(at);
xPathLexer.identifierOrOperatorName();
Test 85: 
XPathLexer xPathLexer = new XPathLexer("9:BNn,");
xPathLexer.minus();
xPathLexer.nextToken();
xPathLexer.identifierOrOperatorName();
Test 86: 
XPathLexer xPathLexer = new XPathLexer("/iD<K -Ba2IVWS");
Token doubleColon = xPathLexer.doubleColon();
xPathLexer.setPreviousToken(doubleColon);
xPathLexer.nextToken();
Test 87: 
XPathLexer xPathLexer = new XPathLexer();
Token notEquals = xPathLexer.notEquals();
xPathLexer.setPreviousToken(notEquals);
xPathLexer.identifierOrOperatorName();
Test 88: 
XPathLexer xPathLexer = new XPathLexer("VU$yO");
xPathLexer.doubleColon();
xPathLexer.nextToken();
xPathLexer.identifierOrOperatorName();
Test 89: 
XPathLexer xPathLexer = new XPathLexer(".'E2T'");
xPathLexer.dollar();
xPathLexer.nextToken();
xPathLexer.identifierOrOperatorName();
Test 90: 
XPathLexer xPathLexer = new XPathLexer(",j!V9");
xPathLexer.nextToken();
xPathLexer.nextToken();
Test 91: 
XPathLexer xPathLexer = new XPathLexer("q=^j{MY7l.g29;'1q");
xPathLexer.leftBracket();
xPathLexer.dots();
xPathLexer.rightBracket();
xPathLexer.at();
xPathLexer.nextToken();
xPathLexer.identifierOrOperatorName();
Test 92: 
XPathLexer xPathLexer = new XPathLexer("-d-,db.xE:|?{#");
xPathLexer.dots();
xPathLexer.operatorName();
Test 93: 
XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.XPathLexer");
xPathLexer.notEquals();
xPathLexer.operatorName();
Test 94: 
XPathLexer xPathLexer = new XPathLexer("o%LSPo_nwNhA}F2SHk");
xPathLexer.operatorName();
Test 95: 
XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.Token");
xPathLexer.mod();
Test 96: 
XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.Token");
xPathLexer.div();
Test 97: 
XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.Token");
xPathLexer.and();
Test 98: 
XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.Token");
xPathLexer.leftBracket();
xPathLexer.not();
xPathLexer.or();
Test 99: 
XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.XPathLexer");
xPathLexer.notEquals();
xPathLexer.slashes();
xPathLexer.number();
Test 100: 
XPathLexer xPathLexer = new XPathLexer("/iD<K -Ba2IVWS");
xPathLexer.number();
Test 101: 
XPathLexer xPathLexer = new XPathLexer();
xPathLexer.whitespace();
Test 102: 
XPathLexer xPathLexer = new XPathLexer();
xPathLexer.setXPath(") (");
xPathLexer.whitespace();
Test 103: 
XPathLexer xPathLexer = new XPathLexer("q=^j{MY7l.g29;'1q");
xPathLexer.relationalOperator();
Test 104: 
XPathLexer xPathLexer = new XPathLexer("/.D<K -Ba2IVWS");
xPathLexer.dots();
Test 105: 
XPathLexer xPathLexer = new XPathLexer("2/#y");
xPathLexer.slashes();
Test 106: 
XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.Token");
xPathLexer.getXPath();
Test 107: 
XPathLexer xPathLexer = new XPathLexer("eS?Ea'qz");
xPathLexer.rightParen();
xPathLexer.colon();
xPathLexer.equals();
xPathLexer.equals();
xPathLexer.nextToken();
Test 108: 
XPathLexer xPathLexer = new XPathLexer();
xPathLexer.setXPath("3nA=\"qo4jzE%rc");
xPathLexer.at();
xPathLexer.LA(5);
Test 109: 
XPathLexer xPathLexer = new XPathLexer();
xPathLexer.setXPath("4#?p,~P9!");
xPathLexer.doubleColon();
xPathLexer.LA((-1));
Test 110: 
XPathLexer xPathLexer = new XPathLexer();
xPathLexer.star();
xPathLexer.LA(0);
Test 111: 
XPathLexer xPathLexer = new XPathLexer();
xPathLexer.currentPosition();
Test 112: 
XPathLexer xPathLexer = new XPathLexer("K.!=D");
xPathLexer.endPosition();
Test 113: 
XPathLexer xPathLexer = new XPathLexer();
xPathLexer.endPosition();
Test 114: 
XPathLexer xPathLexer = new XPathLexer();
Token dots = xPathLexer.dots();
xPathLexer.setPreviousToken(dots);
xPathLexer.getPreviousToken();
Test 115: 
XPathLexer xPathLexer = new XPathLexer("/iD<K -Ba2IVWS");
xPathLexer.getPreviousToken();
Test 116: 
XPathLexer xPathLexer = new XPathLexer();
xPathLexer.setXPath("");
xPathLexer.getXPath();
Test 117: 
XPathLexer xPathLexer = new XPathLexer();
xPathLexer.getXPath();
Test 118: 
XPathLexer xPathLexer = new XPathLexer("Bfl&[*+1Fa~'C&hz");
xPathLexer.literal();
xPathLexer.hasMoreChars();
Test 119: 
XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.XPathLexer");
xPathLexer.hasMoreChars();
Test 120: 
XPathLexer xPathLexer = new XPathLexer("q=^j{MY7l.g29;'1q");
xPathLexer.isIdentifierChar('>');
Test 121: 
XPathLexer xPathLexer = new XPathLexer();
xPathLexer.isIdentifierChar('W');
Test 122: 
XPathLexer xPathLexer = new XPathLexer("q=^j{MY7l.g29;'1q");
xPathLexer.isIdentifierStartChar('9');
Test 123: 
XPathLexer xPathLexer = new XPathLexer();
xPathLexer.isIdentifierStartChar('I');
Test 124: 
XPathLexer xPathLexer = new XPathLexer("q=^j{MY7l.g29;'1q");
xPathLexer.literal();
Test 125: 
XPathLexer xPathLexer = new XPathLexer("/iD<K -Ba2IVWS");
xPathLexer.nextToken();
xPathLexer.at();
xPathLexer.rightBracket();
xPathLexer.relationalOperator();

* Minimizing test suite
[MASTER] 00:01:44.074 [logback-1] WARN  TimeController - Already entered in phase: MINIMIZATION. This will mess up the timing calculations.
* test suite isTestSuite: 123
Test 0: 
XPathLexer xPathLexer = new XPathLexer(",j!V9");
xPathLexer.nextToken();
xPathLexer.nextToken();
Test 1: 
XPathLexer xPathLexer = new XPathLexer(") (");
xPathLexer.equals();
xPathLexer.nextToken();
xPathLexer.setXPath("Tzns0k_f");
xPathLexer.nextToken();
Test 2: 
XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.XPathLexer");
xPathLexer.notEquals();
xPathLexer.operatorName();
Test 3: 
XPathLexer xPathLexer = new XPathLexer("X2?31yh2Tg*5v/P");
xPathLexer.pipe();
xPathLexer.nextToken();
Test 4: 
XPathLexer xPathLexer = new XPathLexer("9:BNn,");
xPathLexer.minus();
xPathLexer.nextToken();
xPathLexer.identifierOrOperatorName();
Test 5: 
XPathLexer xPathLexer = new XPathLexer("EK3o[vGY*bhod4,l");
xPathLexer.nextToken();
xPathLexer.nextToken();
Test 6: 
XPathLexer xPathLexer = new XPathLexer("]b88g[)2*\"M`?#");
xPathLexer.nextToken();
xPathLexer.identifierOrOperatorName();
Test 7: 
XPathLexer xPathLexer = new XPathLexer("@b)eb2\"h7\nDuE*cIi");
xPathLexer.nextToken();
Test 8: 
XPathLexer xPathLexer = new XPathLexer("!)JT");
xPathLexer.nextToken();
xPathLexer.identifierOrOperatorName();
Test 9: 
XPathLexer xPathLexer = new XPathLexer(".'E2T'");
xPathLexer.dollar();
xPathLexer.nextToken();
xPathLexer.identifierOrOperatorName();
Test 10: 
XPathLexer xPathLexer = new XPathLexer(") (");
xPathLexer.nextToken();
xPathLexer.setXPath("Tzns0k_f");
xPathLexer.nextToken();
Test 11: 
XPathLexer xPathLexer = new XPathLexer();
xPathLexer.star();
xPathLexer.LA(0);
Test 12: 
XPathLexer xPathLexer = new XPathLexer();
xPathLexer.plus();
xPathLexer.currentPosition();
Test 13: 
XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.XPathLexer");
xPathLexer.consume(1);
Test 14: 
XPathLexer xPathLexer = new XPathLexer("\"<=:zyOvGFl.H@)");
xPathLexer.nextToken();
Test 15: 
XPathLexer xPathLexer = new XPathLexer("q=^j{MY7l.g29;'1q");
xPathLexer.setXPath("4#?p,~P9!");
xPathLexer.at();
xPathLexer.nextToken();
Test 16: 
XPathLexer xPathLexer = new XPathLexer("VU$yO");
xPathLexer.doubleColon();
xPathLexer.nextToken();
xPathLexer.identifierOrOperatorName();
Test 17: 
XPathLexer xPathLexer = new XPathLexer("3nA=\"qo4jzE%rc");
xPathLexer.identifier();
xPathLexer.doubleColon();
xPathLexer.identifierOrOperatorName();
xPathLexer.nextToken();
Test 18: 
XPathLexer xPathLexer = new XPathLexer("&p5u3TD`y@p-^d|&:.");
xPathLexer.nextToken();
Test 19: 
XPathLexer xPathLexer = new XPathLexer("$*1L8@xjb");
xPathLexer.star();
xPathLexer.nextToken();
xPathLexer.identifierOrOperatorName();
Test 20: 
XPathLexer xPathLexer = new XPathLexer("<W+rU*$bt?VbT");
xPathLexer.doubleColon();
xPathLexer.nextToken();
xPathLexer.nextToken();
Test 21: 
XPathLexer xPathLexer = new XPathLexer("/iD<K -Ba2IVWS");
xPathLexer.colon();
xPathLexer.nextToken();
xPathLexer.equals();
xPathLexer.colon();
xPathLexer.nextToken();
Test 22: 
XPathLexer xPathLexer = new XPathLexer("q=^j{MYl.g29;'1q");
xPathLexer.leftBracket();
xPathLexer.whitespace();
xPathLexer.dots();
xPathLexer.comma();
xPathLexer.leftBracket();
xPathLexer.comma();
xPathLexer.rightParen();
xPathLexer.colon();
xPathLexer.nextToken();
xPathLexer.identifierOrOperatorName();
Test 23: 
XPathLexer xPathLexer = new XPathLexer("/iD<K -Ba2IVWS");
xPathLexer.nextToken();
xPathLexer.identifierOrOperatorName();
Test 24: 
XPathLexer xPathLexer = new XPathLexer("0;");
xPathLexer.nextToken();
Test 25: 
XPathLexer xPathLexer = new XPathLexer("1H0");
xPathLexer.nextToken();
xPathLexer.nextToken();
Test 26: 
XPathLexer xPathLexer = new XPathLexer("3Y{mms7WR.");
xPathLexer.nextToken();
Test 27: 
XPathLexer xPathLexer = new XPathLexer("4g`ENPGP(U,${~B");
xPathLexer.nextToken();
xPathLexer.nextToken();
Test 28: 
XPathLexer xPathLexer = new XPathLexer("5nqXpW;P=D_/k");
xPathLexer.nextToken();
Test 29: 
XPathLexer xPathLexer = new XPathLexer("6T.");
xPathLexer.nextToken();
Test 30: 
XPathLexer xPathLexer = new XPathLexer("q=^j{MY7l.g29;'1q");
xPathLexer.leftBracket();
xPathLexer.dots();
xPathLexer.comma();
xPathLexer.leftBracket();
xPathLexer.comma();
xPathLexer.rightParen();
xPathLexer.colon();
xPathLexer.nextToken();
Test 31: 
XPathLexer xPathLexer = new XPathLexer("8F");
xPathLexer.nextToken();
Test 32: 
XPathLexer xPathLexer = new XPathLexer("tS'9A[");
xPathLexer.identifierOrOperatorName();
xPathLexer.plus();
xPathLexer.nextToken();
xPathLexer.nextToken();
Test 33: 
XPathLexer xPathLexer = new XPathLexer("NoJU;J?1v");
xPathLexer.nextToken();
xPathLexer.nextToken();
Test 34: 
XPathLexer xPathLexer = new XPathLexer(" <@w%@+");
xPathLexer.nextToken();
xPathLexer.identifierOrOperatorName();
Test 35: 
XPathLexer xPathLexer = new XPathLexer("q=^j{MY7l.g29;'1q");
xPathLexer.comma();
xPathLexer.nextToken();
xPathLexer.identifierOrOperatorName();
Test 36: 
XPathLexer xPathLexer = new XPathLexer("KG>BrF");
xPathLexer.identifierOrOperatorName();
xPathLexer.nextToken();
xPathLexer.identifierOrOperatorName();
Test 37: 
XPathLexer xPathLexer = new XPathLexer("Bu[V?%EN4&_wLeV_:W");
xPathLexer.doubleColon();
xPathLexer.consume();
xPathLexer.identifierOrOperatorName();
xPathLexer.nextToken();
Test 38: 
XPathLexer xPathLexer = new XPathLexer("BuV?%EN4n&_wLeV:W");
xPathLexer.nextToken();
Test 39: 
XPathLexer xPathLexer = new XPathLexer("CJi");
xPathLexer.nextToken();
Test 40: 
XPathLexer xPathLexer = new XPathLexer("F|'~");
xPathLexer.nextToken();
Test 41: 
XPathLexer xPathLexer = new XPathLexer("GI\"8u5");
xPathLexer.nextToken();
Test 42: 
XPathLexer xPathLexer = new XPathLexer("Ib.4N");
xPathLexer.nextToken();
Test 43: 
XPathLexer xPathLexer = new XPathLexer("!)JT");
xPathLexer.at();
xPathLexer.at();
xPathLexer.nextToken();
Test 44: 
XPathLexer xPathLexer = new XPathLexer("K.=D`");
xPathLexer.nextToken();
Test 45: 
XPathLexer xPathLexer = new XPathLexer("Ly?A+VtQ]+$wtQ");
xPathLexer.nextToken();
Test 46: 
XPathLexer xPathLexer = new XPathLexer("M%=");
xPathLexer.nextToken();
Test 47: 
XPathLexer xPathLexer = new XPathLexer("OB`0RtoR)E~zfca%?$");
xPathLexer.nextToken();
Test 48: 
XPathLexer xPathLexer = new XPathLexer();
xPathLexer.setXPath("4#?p,~P9!");
xPathLexer.notEquals();
xPathLexer.at();
xPathLexer.nextToken();
xPathLexer.at();
xPathLexer.leftBracket();
xPathLexer.nextToken();
Test 49: 
XPathLexer xPathLexer = new XPathLexer("FnQ$|&9");
xPathLexer.equals();
xPathLexer.at();
xPathLexer.nextToken();
Test 50: 
XPathLexer xPathLexer = new XPathLexer("Re`lCkMjCqyEd ");
xPathLexer.nextToken();
Test 51: 
XPathLexer xPathLexer = new XPathLexer("SmoY~H'7-Hef\"x)");
xPathLexer.nextToken();
Test 52: 
XPathLexer xPathLexer = new XPathLexer();
xPathLexer.setXPath("Tzns0k_f");
xPathLexer.nextToken();
Test 53: 
XPathLexer xPathLexer = new XPathLexer();
xPathLexer.setXPath("U<},@");
xPathLexer.nextToken();
Test 54: 
XPathLexer xPathLexer = new XPathLexer("VU$yO");
xPathLexer.nextToken();
Test 55: 
XPathLexer xPathLexer = new XPathLexer("WA6");
xPathLexer.nextToken();
Test 56: 
XPathLexer xPathLexer = new XPathLexer("Xr[AS6do");
xPathLexer.nextToken();
Test 57: 
XPathLexer xPathLexer = new XPathLexer("q=^j{MY7l.g29;'1q");
xPathLexer.dots();
xPathLexer.equals();
xPathLexer.comma();
xPathLexer.leftBracket();
xPathLexer.rightParen();
xPathLexer.colon();
xPathLexer.nextToken();
Test 58: 
XPathLexer xPathLexer = new XPathLexer("Z:{:;y[\"");
xPathLexer.nextToken();
Test 59: 
XPathLexer xPathLexer = new XPathLexer("q=^j{MY7l.g29;'1q");
xPathLexer.leftBracket();
xPathLexer.rightParen();
xPathLexer.nextToken();
Test 60: 
XPathLexer xPathLexer = new XPathLexer("{_y[\"F");
xPathLexer.equals();
xPathLexer.nextToken();
Test 61: 
XPathLexer xPathLexer = new XPathLexer("20/u`95");
xPathLexer.not();
xPathLexer.whitespace();
xPathLexer.colon();
xPathLexer.rightBracket();
xPathLexer.nextToken();
Test 62: 
XPathLexer xPathLexer = new XPathLexer("eS?Ea'qz");
xPathLexer.nextToken();
xPathLexer.dots();
xPathLexer.equals();
xPathLexer.nextToken();
Test 63: 
XPathLexer xPathLexer = new XPathLexer("|bx]PxVClD]R?A");
xPathLexer.at();
xPathLexer.nextToken();
Test 64: 
XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.Token");
xPathLexer.nextToken();
Test 65: 
XPathLexer xPathLexer = new XPathLexer("dG!fo");
xPathLexer.nextToken();
Test 66: 
XPathLexer xPathLexer = new XPathLexer("f]l.']LBO-7");
xPathLexer.nextToken();
Test 67: 
XPathLexer xPathLexer = new XPathLexer("|h'rQVn*qV)@!5H>J");
xPathLexer.nextToken();
xPathLexer.nextToken();
Test 68: 
XPathLexer xPathLexer = new XPathLexer("k7qG>Br4");
xPathLexer.nextToken();
Test 69: 
XPathLexer xPathLexer = new XPathLexer("q=^j{MY7l.g29;'1q");
xPathLexer.comma();
xPathLexer.dots();
xPathLexer.equals();
xPathLexer.comma();
xPathLexer.leftBracket();
xPathLexer.comma();
xPathLexer.rightParen();
xPathLexer.colon();
xPathLexer.nextToken();
Test 70: 
XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.Token");
xPathLexer.leftBracket();
xPathLexer.not();
xPathLexer.nextToken();
Test 71: 
XPathLexer xPathLexer = new XPathLexer("n!J");
xPathLexer.nextToken();
Test 72: 
XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.XPathLexer");
xPathLexer.leftBracket();
xPathLexer.nextToken();
Test 73: 
XPathLexer xPathLexer = new XPathLexer("q=^j{MY7l.g29;'1q");
xPathLexer.nextToken();
Test 74: 
XPathLexer xPathLexer = new XPathLexer("s2");
xPathLexer.nextToken();
Test 75: 
XPathLexer xPathLexer = new XPathLexer("tLgWN@XN<'");
xPathLexer.nextToken();
Test 76: 
XPathLexer xPathLexer = new XPathLexer("u&HSr1");
xPathLexer.nextToken();
Test 77: 
XPathLexer xPathLexer = new XPathLexer("v\"R-PGkiC LT=*iTw");
xPathLexer.nextToken();
Test 78: 
XPathLexer xPathLexer = new XPathLexer("wK3WT4j");
xPathLexer.nextToken();
Test 79: 
XPathLexer xPathLexer = new XPathLexer("Nx|H'l\u0001th=<c^B1S]");
xPathLexer.not();
xPathLexer.nextToken();
Test 80: 
XPathLexer xPathLexer = new XPathLexer("yS>TKm>&ZvN;Z]BY(");
xPathLexer.nextToken();
Test 81: 
XPathLexer xPathLexer = new XPathLexer();
xPathLexer.setXPath("Tzns0k_f");
xPathLexer.star();
xPathLexer.nextToken();
Test 82: 
XPathLexer xPathLexer = new XPathLexer("q=^j{MY7l.g29;'1q");
xPathLexer.leftBracket();
xPathLexer.dots();
xPathLexer.rightBracket();
xPathLexer.at();
xPathLexer.nextToken();
xPathLexer.identifierOrOperatorName();
Test 83: 
XPathLexer xPathLexer = new XPathLexer("K.!=D");
xPathLexer.rightParen();
xPathLexer.comma();
xPathLexer.nextToken();
Test 84: 
XPathLexer xPathLexer = new XPathLexer("q=^j{MY7l.g29;'1q");
Token leftBracket = xPathLexer.leftBracket();
xPathLexer.setPreviousToken(leftBracket);
xPathLexer.identifierOrOperatorName();
Test 85: 
XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.Token");
Token minus = xPathLexer.minus();
xPathLexer.setPreviousToken(minus);
xPathLexer.identifierOrOperatorName();
Test 86: 
XPathLexer xPathLexer = new XPathLexer("GpE:'Fi?");
Token at = xPathLexer.at();
xPathLexer.setPreviousToken(at);
xPathLexer.identifierOrOperatorName();
Test 87: 
XPathLexer xPathLexer = new XPathLexer("/iD<K -Ba2IVWS");
Token doubleColon = xPathLexer.doubleColon();
xPathLexer.setPreviousToken(doubleColon);
xPathLexer.nextToken();
Test 88: 
XPathLexer xPathLexer = new XPathLexer();
Token notEquals = xPathLexer.notEquals();
xPathLexer.setPreviousToken(notEquals);
xPathLexer.identifierOrOperatorName();
Test 89: 
XPathLexer xPathLexer = new XPathLexer("-d-,db.xE:|?{#");
xPathLexer.dots();
xPathLexer.operatorName();
Test 90: 
XPathLexer xPathLexer = new XPathLexer("o%LSPo_nwNhA}F2SHk");
xPathLexer.operatorName();
Test 91: 
XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.Token");
xPathLexer.mod();
Test 92: 
XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.Token");
xPathLexer.div();
Test 93: 
XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.Token");
xPathLexer.and();
Test 94: 
XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.Token");
xPathLexer.leftBracket();
xPathLexer.not();
xPathLexer.or();
Test 95: 
XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.XPathLexer");
xPathLexer.notEquals();
xPathLexer.slashes();
xPathLexer.number();
Test 96: 
XPathLexer xPathLexer = new XPathLexer("/iD<K -Ba2IVWS");
xPathLexer.number();
Test 97: 
XPathLexer xPathLexer = new XPathLexer();
xPathLexer.whitespace();
Test 98: 
XPathLexer xPathLexer = new XPathLexer();
xPathLexer.setXPath(") (");
xPathLexer.whitespace();
Test 99: 
XPathLexer xPathLexer = new XPathLexer("q=^j{MY7l.g29;'1q");
xPathLexer.relationalOperator();
Test 100: 
XPathLexer xPathLexer = new XPathLexer("/.D<K -Ba2IVWS");
xPathLexer.dots();
Test 101: 
XPathLexer xPathLexer = new XPathLexer("2/#y");
xPathLexer.slashes();
Test 102: 
XPathLexer xPathLexer = new XPathLexer("q=^j{MY7l.g29;'1q");
xPathLexer.setXPath("}h26-V)RL");
xPathLexer.at();
xPathLexer.nextToken();
Test 103: 
XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.Token");
xPathLexer.getXPath();
Test 104: 
XPathLexer xPathLexer = new XPathLexer();
xPathLexer.setXPath("3nA=\"qo4jzE%rc");
xPathLexer.at();
xPathLexer.LA(5);
Test 105: 
XPathLexer xPathLexer = new XPathLexer();
xPathLexer.setXPath("4#?p,~P9!");
xPathLexer.doubleColon();
xPathLexer.LA((-1));
Test 106: 
XPathLexer xPathLexer = new XPathLexer();
xPathLexer.currentPosition();
Test 107: 
XPathLexer xPathLexer = new XPathLexer("K.!=D");
xPathLexer.endPosition();
Test 108: 
XPathLexer xPathLexer = new XPathLexer();
xPathLexer.endPosition();
Test 109: 
XPathLexer xPathLexer = new XPathLexer("9:BNn,");
xPathLexer.identifierOrOperatorName();
xPathLexer.nextToken();
xPathLexer.leftBracket();
xPathLexer.comma();
xPathLexer.rightParen();
xPathLexer.colon();
xPathLexer.nextToken();
xPathLexer.getPreviousToken();
Test 110: 
XPathLexer xPathLexer = new XPathLexer();
Token dots = xPathLexer.dots();
xPathLexer.setPreviousToken(dots);
xPathLexer.getPreviousToken();
Test 111: 
XPathLexer xPathLexer = new XPathLexer("/iD<K -Ba2IVWS");
xPathLexer.getPreviousToken();
Test 112: 
XPathLexer xPathLexer = new XPathLexer();
xPathLexer.setXPath("");
xPathLexer.getXPath();
Test 113: 
XPathLexer xPathLexer = new XPathLexer();
xPathLexer.getXPath();
Test 114: 
XPathLexer xPathLexer = new XPathLexer("Bfl&[*+1Fa~'C&hz");
xPathLexer.literal();
xPathLexer.hasMoreChars();
Test 115: 
XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.XPathLexer");
xPathLexer.hasMoreChars();
Test 116: 
XPathLexer xPathLexer = new XPathLexer("q=^j{MY7l.g29;'1q");
xPathLexer.isIdentifierChar('>');
Test 117: 
XPathLexer xPathLexer = new XPathLexer();
xPathLexer.isIdentifierChar('W');
Test 118: 
XPathLexer xPathLexer = new XPathLexer("q=^j{MY7l.g29;'1q");
xPathLexer.isIdentifierStartChar('9');
Test 119: 
XPathLexer xPathLexer = new XPathLexer();
xPathLexer.isIdentifierStartChar('I');
Test 120: 
XPathLexer xPathLexer = new XPathLexer("com.werken.saxpath.XPathLexer");
xPathLexer.leftParen();
Test 121: 
XPathLexer xPathLexer = new XPathLexer("q=^j{MY7l.g29;'1q");
xPathLexer.literal();
Test 122: 
XPathLexer xPathLexer = new XPathLexer("/iD<K -Ba2IVWS");
xPathLexer.nextToken();
xPathLexer.at();
xPathLexer.rightBracket();
xPathLexer.relationalOperator();

* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 86%
* Total number of goals: 484
* Number of covered goals: 415
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 91%
* Total number of goals: 250
* Number of covered goals: 228
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 37%
* Total number of goals: 142
* Number of covered goals: 53
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 44
* Number of covered goals: 44
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 86%
* Total number of goals: 484
* Number of covered goals: 415
* Generated 123 tests with total length 396
* Resulting test suite's coverage: 80% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 00:01:44.530 [logback-1] WARN  TimeController - Already entered in phase: COVERAGE_ANALYSIS. This will mess up the timing calculations.
* Resulting test suite's mutation score: 55%
* Compiling and checking tests
[MASTER] 00:01:57.873 [logback-1] WARN  TimeController - Already entered in phase: ASSERTION_GENERATION. This will mess up the timing calculations.
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 00:02:02.561 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:02:02.562 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 00:02:02.636 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:02:02.637 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 00:02:02.712 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:02:02.713 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 00:02:02.783 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:02:02.784 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 00:02:02.853 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:02:02.854 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 00:02:02.924 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:02:02.925 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 00:02:02.997 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:02:02.998 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 00:02:03.066 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:02:03.067 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 00:02:03.142 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
[MASTER] 00:02:03.143 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 00:02:03.204 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:02:03.205 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 00:02:03.271 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:02:03.272 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 00:02:03.336 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:02:03.336 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 00:02:03.392 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:02:03.393 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 00:02:03.452 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:02:03.453 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 00:02:03.667 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:02:03.668 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 00:02:03.814 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:02:03.814 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 00:02:03.862 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:02:03.863 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 00:02:03.895 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:02:03.896 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 00:02:03.927 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:02:03.928 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 00:02:03.957 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:02:03.958 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 00:02:03.984 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:02:03.985 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 00:02:04.011 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:02:04.012 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 00:02:04.041 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:02:04.041 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 00:02:04.070 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:02:04.070 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 00:02:04.099 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:02:04.099 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 00:02:04.130 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:02:04.130 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 00:02:04.158 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:02:04.159 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 00:02:04.186 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:02:04.187 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 00:02:04.217 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:02:04.218 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 00:02:04.250 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:02:04.251 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 00:02:04.281 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:02:04.281 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 00:02:04.314 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:02:04.314 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 00:02:04.355 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:02:04.355 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 00:02:04.389 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:02:04.390 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 00:02:04.421 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:02:04.421 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 00:02:04.454 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:02:04.454 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 00:02:04.484 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:02:04.484 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 00:02:04.515 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:02:04.516 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 00:02:04.552 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:02:04.553 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 00:02:04.583 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 00:02:04.583 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 00:02:04.618 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:02:04.619 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 00:02:04.648 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:02:04.649 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 00:02:04.682 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:02:04.683 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 00:02:04.719 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:02:04.720 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 00:02:04.752 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:02:04.752 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 00:02:04.786 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:02:04.786 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 00:02:04.820 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:02:04.821 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 00:02:04.855 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:02:04.855 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 00:02:04.894 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:02:04.895 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 00:02:04.935 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:02:04.936 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 00:02:04.969 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:02:04.970 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 00:02:05.005 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:02:05.006 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 00:02:05.040 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:02:05.041 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 00:02:05.076 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:02:05.076 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 00:02:05.112 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:02:05.113 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 00:02:05.145 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:02:05.146 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 00:02:05.182 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:02:05.182 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 00:02:05.215 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:02:05.215 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 00:02:05.248 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:02:05.249 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 00:02:05.284 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:02:05.284 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 00:02:05.320 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:02:05.321 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 00:02:05.360 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:02:05.361 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 00:02:05.397 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:02:05.398 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 00:02:05.437 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:02:05.437 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 00:02:05.477 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:02:05.478 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 00:02:05.515 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:02:05.515 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 00:02:05.552 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:02:05.553 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 00:02:05.590 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:02:05.591 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 00:02:05.625 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:02:05.625 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 00:02:05.661 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:02:05.662 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 00:02:05.696 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:02:05.697 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 00:02:05.734 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:02:05.735 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 00:02:05.770 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:02:05.770 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 00:02:05.805 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:02:05.806 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 00:02:05.864 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:02:05.865 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 00:02:05.908 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:02:05.909 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
[MASTER] 00:02:05.953 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:02:05.953 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 00:02:05.990 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:02:05.990 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 00:02:06.027 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:02:06.027 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 00:02:06.081 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:02:06.082 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 00:02:06.141 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:02:06.142 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 00:02:06.186 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:02:06.186 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 00:02:06.227 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:02:06.228 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 00:02:06.296 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:02:06.297 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 00:02:06.353 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:02:06.354 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 00:02:06.418 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:02:06.419 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 00:02:06.477 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:02:06.479 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 00:02:06.525 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:02:06.526 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 00:02:06.581 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:02:06.581 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 00:02:06.632 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:02:06.633 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 00:02:06.684 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:02:06.684 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 00:02:06.734 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:02:06.735 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 00:02:06.796 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:02:06.797 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 00:02:06.865 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:02:06.866 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 00:02:06.929 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:02:06.930 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 00:02:06.990 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:02:06.991 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 00:02:07.047 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:02:07.047 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 00:02:07.097 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:02:07.098 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 00:02:07.147 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:02:07.148 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 00:02:07.191 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:02:07.191 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 00:02:07.238 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:02:07.239 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 00:02:07.294 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:02:07.295 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 00:02:07.346 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:02:07.347 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 00:02:07.407 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:02:07.408 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 00:02:07.466 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:02:07.474 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 00:02:07.529 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:02:07.530 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 00:02:07.589 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:02:07.590 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
** Write a test suite: 4 called: 4 to improve: false
** Write a test suite: 5 called: 5 to improve: false
** Write a test suite: 6 called: 6 to improve: false
** Write a test suite: 7 called: 7 to improve: false
** Write a test suite: 8 called: 8 to improve: false
** Write a test suite: 9 called: 9 to improve: false
** Write a test suite: 10 called: 10 to improve: false
** Write a test suite: 11 called: 11 to improve: false
** Write a test suite: 12 called: 12 to improve: false
** Write a test suite: 13 called: 13 to improve: false
** Write a test suite: 14 called: 14 to improve: false
** Write a test suite: 15 called: 15 to improve: false
** Write a test suite: 16 called: 16 to improve: false
** Write a test suite: 17 called: 17 to improve: false
** Write a test suite: 18 called: 18 to improve: false
** Write a test suite: 19 called: 19 to improve: false
** Write a test suite: 20 called: 20 to improve: false
** Write a test suite: 21 called: 21 to improve: false
** Write a test suite: 22 called: 22 to improve: false
** Write a test suite: 23 called: 23 to improve: false
** Write a test suite: 24 called: 24 to improve: false
** Write a test suite: 25 called: 25 to improve: false
** Write a test suite: 26 called: 26 to improve: false
** Write a test suite: 27 called: 27 to improve: false
** Write a test suite: 28 called: 28 to improve: false
** Write a test suite: 29 called: 29 to improve: false
** Write a test suite: 30 called: 30 to improve: false
** Write a test suite: 31 called: 31 to improve: false
** Write a test suite: 32 called: 32 to improve: false
** Write a test suite: 33 called: 33 to improve: false
** Write a test suite: 34 called: 34 to improve: false
** Write a test suite: 35 called: 35 to improve: false
** Write a test suite: 36 called: 36 to improve: false
** Write a test suite: 37 called: 37 to improve: false
** Write a test suite: 38 called: 38 to improve: false
** Write a test suite: 39 called: 39 to improve: false
** Write a test suite: 40 called: 40 to improve: false
** Write a test suite: 41 called: 41 to improve: false
** Write a test suite: 42 called: 42 to improve: false
** Write a test suite: 43 called: 43 to improve: false
** Write a test suite: 44 called: 44 to improve: false
** Write a test suite: 45 called: 45 to improve: false
** Write a test suite: 46 called: 46 to improve: false
** Write a test suite: 47 called: 47 to improve: false
** Write a test suite: 48 called: 48 to improve: false
** Write a test suite: 49 called: 49 to improve: false
** Write a test suite: 50 called: 50 to improve: false
** Write a test suite: 51 called: 51 to improve: false
** Write a test suite: 52 called: 52 to improve: false
** Write a test suite: 53 called: 53 to improve: false
** Write a test suite: 54 called: 54 to improve: false
** Write a test suite: 55 called: 55 to improve: false
** Write a test suite: 56 called: 56 to improve: false
** Write a test suite: 57 called: 57 to improve: false
** Write a test suite: 58 called: 58 to improve: false
** Write a test suite: 59 called: 59 to improve: false
** Write a test suite: 60 called: 60 to improve: false
** Write a test suite: 61 called: 61 to improve: false
** Write a test suite: 62 called: 62 to improve: false
** Write a test suite: 63 called: 63 to improve: false
** Write a test suite: 64 called: 64 to improve: false
** Write a test suite: 65 called: 65 to improve: false
** Write a test suite: 66 called: 66 to improve: false
** Write a test suite: 67 called: 67 to improve: false
** Write a test suite: 68 called: 68 to improve: false
** Write a test suite: 69 called: 69 to improve: false
** Write a test suite: 70 called: 70 to improve: false
** Write a test suite: 71 called: 71 to improve: false
** Write a test suite: 72 called: 72 to improve: false
** Write a test suite: 73 called: 73 to improve: false
** Write a test suite: 74 called: 74 to improve: false
** Write a test suite: 75 called: 75 to improve: false
** Write a test suite: 76 called: 76 to improve: false
** Write a test suite: 77 called: 77 to improve: false
** Write a test suite: 78 called: 78 to improve: false
** Write a test suite: 79 called: 79 to improve: false
** Write a test suite: 80 called: 80 to improve: false
** Write a test suite: 81 called: 81 to improve: false
** Write a test suite: 82 called: 82 to improve: false
** Write a test suite: 83 called: 83 to improve: false
** Write a test suite: 84 called: 84 to improve: false
** Write a test suite: 85 called: 85 to improve: false
** Write a test suite: 86 called: 86 to improve: false
** Write a test suite: 87 called: 87 to improve: false
** Write a test suite: 88 called: 88 to improve: false
** Write a test suite: 89 called: 89 to improve: false
** Write a test suite: 90 called: 90 to improve: false
** Write a test suite: 91 called: 91 to improve: false
** Write a test suite: 92 called: 92 to improve: false
** Write a test suite: 93 called: 93 to improve: false
** Write a test suite: 94 called: 94 to improve: false
** Write a test suite: 95 called: 95 to improve: false
** Write a test suite: 96 called: 96 to improve: false
** Write a test suite: 97 called: 97 to improve: false
** Write a test suite: 98 called: 98 to improve: false
** Write a test suite: 99 called: 99 to improve: false
** Write a test suite: 100 called: 100 to improve: false
** Write a test suite: 101 called: 101 to improve: false
** Write a test suite: 102 called: 102 to improve: false
** Write a test suite: 103 called: 103 to improve: false
** Write a test suite: 104 called: 104 to improve: false
** Write a test suite: 105 called: 105 to improve: false
** Write a test suite: 106 called: 106 to improve: false
[MASTER] 00:02:10.094 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:02:10.094 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
** Write a test suite: 4 called: 4 to improve: false
** Write a test suite: 5 called: 5 to improve: false
** Write a test suite: 6 called: 6 to improve: false
** Write a test suite: 7 called: 7 to improve: false
** Write a test suite: 8 called: 8 to improve: false
** Write a test suite: 9 called: 9 to improve: false
** Write a test suite: 10 called: 10 to improve: false
** Write a test suite: 11 called: 11 to improve: false
** Write a test suite: 12 called: 12 to improve: false
** Write a test suite: 13 called: 13 to improve: false
** Write a test suite: 14 called: 14 to improve: false
** Write a test suite: 15 called: 15 to improve: false
** Write a test suite: 16 called: 16 to improve: false
** Write a test suite: 17 called: 17 to improve: false
** Write a test suite: 18 called: 18 to improve: false
** Write a test suite: 19 called: 19 to improve: false
** Write a test suite: 20 called: 20 to improve: false
** Write a test suite: 21 called: 21 to improve: false
** Write a test suite: 22 called: 22 to improve: false
** Write a test suite: 23 called: 23 to improve: false
** Write a test suite: 24 called: 24 to improve: false
** Write a test suite: 25 called: 25 to improve: false
** Write a test suite: 26 called: 26 to improve: false
** Write a test suite: 27 called: 27 to improve: false
** Write a test suite: 28 called: 28 to improve: false
** Write a test suite: 29 called: 29 to improve: false
** Write a test suite: 30 called: 30 to improve: false
** Write a test suite: 31 called: 31 to improve: false
** Write a test suite: 32 called: 32 to improve: false
** Write a test suite: 33 called: 33 to improve: false
** Write a test suite: 34 called: 34 to improve: false
** Write a test suite: 35 called: 35 to improve: false
** Write a test suite: 36 called: 36 to improve: false
** Write a test suite: 37 called: 37 to improve: false
** Write a test suite: 38 called: 38 to improve: false
** Write a test suite: 39 called: 39 to improve: false
** Write a test suite: 40 called: 40 to improve: false
** Write a test suite: 41 called: 41 to improve: false
** Write a test suite: 42 called: 42 to improve: false
** Write a test suite: 43 called: 43 to improve: false
** Write a test suite: 44 called: 44 to improve: false
** Write a test suite: 45 called: 45 to improve: false
** Write a test suite: 46 called: 46 to improve: false
** Write a test suite: 47 called: 47 to improve: false
** Write a test suite: 48 called: 48 to improve: false
** Write a test suite: 49 called: 49 to improve: false
** Write a test suite: 50 called: 50 to improve: false
** Write a test suite: 51 called: 51 to improve: false
** Write a test suite: 52 called: 52 to improve: false
** Write a test suite: 53 called: 53 to improve: false
** Write a test suite: 54 called: 54 to improve: false
** Write a test suite: 55 called: 55 to improve: false
** Write a test suite: 56 called: 56 to improve: false
** Write a test suite: 57 called: 57 to improve: false
** Write a test suite: 58 called: 58 to improve: false
** Write a test suite: 59 called: 59 to improve: false
** Write a test suite: 60 called: 60 to improve: false
** Write a test suite: 61 called: 61 to improve: false
** Write a test suite: 62 called: 62 to improve: false
** Write a test suite: 63 called: 63 to improve: false
** Write a test suite: 64 called: 64 to improve: false
** Write a test suite: 65 called: 65 to improve: false
** Write a test suite: 66 called: 66 to improve: false
** Write a test suite: 67 called: 67 to improve: false
** Write a test suite: 68 called: 68 to improve: false
** Write a test suite: 69 called: 69 to improve: false
** Write a test suite: 70 called: 70 to improve: false
** Write a test suite: 71 called: 71 to improve: false
** Write a test suite: 72 called: 72 to improve: false
** Write a test suite: 73 called: 73 to improve: false
** Write a test suite: 74 called: 74 to improve: false
** Write a test suite: 75 called: 75 to improve: false
** Write a test suite: 76 called: 76 to improve: false
** Write a test suite: 77 called: 77 to improve: false
** Write a test suite: 78 called: 78 to improve: false
** Write a test suite: 79 called: 79 to improve: false
** Write a test suite: 80 called: 80 to improve: false
** Write a test suite: 81 called: 81 to improve: false
** Write a test suite: 82 called: 82 to improve: false
** Write a test suite: 83 called: 83 to improve: false
** Write a test suite: 84 called: 84 to improve: false
** Write a test suite: 85 called: 85 to improve: false
** Write a test suite: 86 called: 86 to improve: false
** Write a test suite: 87 called: 87 to improve: false
** Write a test suite: 88 called: 88 to improve: false
** Write a test suite: 89 called: 89 to improve: false
** Write a test suite: 90 called: 90 to improve: false
** Write a test suite: 91 called: 91 to improve: false
** Write a test suite: 92 called: 92 to improve: false
** Write a test suite: 93 called: 93 to improve: false
** Write a test suite: 94 called: 94 to improve: false
** Write a test suite: 95 called: 95 to improve: false
** Write a test suite: 96 called: 96 to improve: false
** Write a test suite: 97 called: 97 to improve: false
** Write a test suite: 98 called: 98 to improve: false
** Write a test suite: 99 called: 99 to improve: false
** Write a test suite: 100 called: 100 to improve: false
** Write a test suite: 101 called: 101 to improve: false
** Write a test suite: 102 called: 102 to improve: false
** Write a test suite: 103 called: 103 to improve: false
** Write a test suite: 104 called: 104 to improve: false
** Write a test suite: 105 called: 105 to improve: false
** Write a test suite: 106 called: 106 to improve: false
[MASTER] 00:02:10.573 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/tmp/EvoSuite_pathingJar8938792048086349365.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 00:02:10.574 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8938792048086349365.jar
* Writing tests to file
[MASTER] 00:02:10.576 [logback-1] WARN  TimeController - Already entered in phase: JUNIT_CHECK. This will mess up the timing calculations.
* Writing JUnit test case 'XPathLexer_ESTest' to evosuite-tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 5 called: 2 to improve: false
** Write a test suite: 17 called: 3 to improve: false
** Write a test suite: 21 called: 4 to improve: false
** Write a test suite: 22 called: 5 to improve: false
** Write a test suite: 24 called: 6 to improve: false
** Write a test suite: 33 called: 7 to improve: false
** Write a test suite: 35 called: 8 to improve: false
** Write a test suite: 40 called: 9 to improve: false
** Write a test suite: 41 called: 10 to improve: false
** Write a test suite: 53 called: 11 to improve: false
** Write a test suite: 61 called: 12 to improve: false
** Write a test suite: 62 called: 13 to improve: false
** Write a test suite: 98 called: 14 to improve: false
** Write a test suite: 99 called: 15 to improve: false
** Write a test suite: 100 called: 16 to improve: false
* Writing JUnit test case 'XPathLexer_Original_ESTest' to evosuite-tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
** Write a test suite: 4 called: 4 to improve: false
** Write a test suite: 5 called: 5 to improve: false
** Write a test suite: 6 called: 6 to improve: false
** Write a test suite: 7 called: 7 to improve: false
** Write a test suite: 8 called: 8 to improve: false
** Write a test suite: 9 called: 9 to improve: false
** Write a test suite: 10 called: 10 to improve: false
** Write a test suite: 11 called: 11 to improve: false
** Write a test suite: 12 called: 12 to improve: false
** Write a test suite: 13 called: 13 to improve: false
** Write a test suite: 14 called: 14 to improve: false
** Write a test suite: 15 called: 15 to improve: false
** Write a test suite: 16 called: 16 to improve: false
** Write a test suite: 17 called: 17 to improve: false
** Write a test suite: 18 called: 18 to improve: false
** Write a test suite: 19 called: 19 to improve: false
** Write a test suite: 20 called: 20 to improve: false
** Write a test suite: 21 called: 21 to improve: false
** Write a test suite: 22 called: 22 to improve: false
** Write a test suite: 23 called: 23 to improve: false
** Write a test suite: 24 called: 24 to improve: false
** Write a test suite: 25 called: 25 to improve: false
** Write a test suite: 26 called: 26 to improve: false
** Write a test suite: 27 called: 27 to improve: false
** Write a test suite: 28 called: 28 to improve: false
** Write a test suite: 29 called: 29 to improve: false
** Write a test suite: 30 called: 30 to improve: false
** Write a test suite: 31 called: 31 to improve: false
** Write a test suite: 32 called: 32 to improve: false
** Write a test suite: 33 called: 33 to improve: false
** Write a test suite: 34 called: 34 to improve: false
** Write a test suite: 35 called: 35 to improve: false
** Write a test suite: 36 called: 36 to improve: false
** Write a test suite: 37 called: 37 to improve: false
** Write a test suite: 38 called: 38 to improve: false
** Write a test suite: 39 called: 39 to improve: false
** Write a test suite: 40 called: 40 to improve: false
** Write a test suite: 41 called: 41 to improve: false
** Write a test suite: 42 called: 42 to improve: false
** Write a test suite: 43 called: 43 to improve: false
** Write a test suite: 44 called: 44 to improve: false
** Write a test suite: 45 called: 45 to improve: false
** Write a test suite: 46 called: 46 to improve: false
** Write a test suite: 47 called: 47 to improve: false
** Write a test suite: 48 called: 48 to improve: false
** Write a test suite: 49 called: 49 to improve: false
** Write a test suite: 50 called: 50 to improve: false
** Write a test suite: 51 called: 51 to improve: false
** Write a test suite: 52 called: 52 to improve: false
** Write a test suite: 53 called: 53 to improve: false
** Write a test suite: 54 called: 54 to improve: false
** Write a test suite: 55 called: 55 to improve: false
** Write a test suite: 56 called: 56 to improve: false
** Write a test suite: 57 called: 57 to improve: false
** Write a test suite: 58 called: 58 to improve: false
** Write a test suite: 59 called: 59 to improve: false
** Write a test suite: 60 called: 60 to improve: false
** Write a test suite: 61 called: 61 to improve: false
** Write a test suite: 62 called: 62 to improve: false
** Write a test suite: 63 called: 63 to improve: false
** Write a test suite: 64 called: 64 to improve: false
** Write a test suite: 65 called: 65 to improve: false
** Write a test suite: 66 called: 66 to improve: false
** Write a test suite: 67 called: 67 to improve: false
** Write a test suite: 68 called: 68 to improve: false
** Write a test suite: 69 called: 69 to improve: false
** Write a test suite: 70 called: 70 to improve: false
** Write a test suite: 71 called: 71 to improve: false
** Write a test suite: 72 called: 72 to improve: false
** Write a test suite: 73 called: 73 to improve: false
** Write a test suite: 74 called: 74 to improve: false
** Write a test suite: 75 called: 75 to improve: false
** Write a test suite: 76 called: 76 to improve: false
** Write a test suite: 77 called: 77 to improve: false
** Write a test suite: 78 called: 78 to improve: false
** Write a test suite: 79 called: 79 to improve: false
** Write a test suite: 80 called: 80 to improve: false
** Write a test suite: 81 called: 81 to improve: false
** Write a test suite: 82 called: 82 to improve: false
** Write a test suite: 83 called: 83 to improve: false
** Write a test suite: 84 called: 84 to improve: false
** Write a test suite: 85 called: 85 to improve: false
** Write a test suite: 86 called: 86 to improve: false
** Write a test suite: 87 called: 87 to improve: false
** Write a test suite: 88 called: 88 to improve: false
** Write a test suite: 89 called: 89 to improve: false
** Write a test suite: 90 called: 90 to improve: false
** Write a test suite: 91 called: 91 to improve: false
** Write a test suite: 92 called: 92 to improve: false
** Write a test suite: 93 called: 93 to improve: false
** Write a test suite: 94 called: 94 to improve: false
** Write a test suite: 95 called: 95 to improve: false
** Write a test suite: 96 called: 96 to improve: false
** Write a test suite: 97 called: 97 to improve: false
** Write a test suite: 98 called: 98 to improve: false
** Write a test suite: 99 called: 99 to improve: false
** Write a test suite: 100 called: 100 to improve: false
** Write a test suite: 101 called: 101 to improve: false
** Write a test suite: 102 called: 102 to improve: false
** Write a test suite: 103 called: 103 to improve: false
** Write a test suite: 104 called: 104 to improve: false
** Write a test suite: 105 called: 105 to improve: false
** Write a test suite: 106 called: 106 to improve: false
* Done!

* Computation finished
