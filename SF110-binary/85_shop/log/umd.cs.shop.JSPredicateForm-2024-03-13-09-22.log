* EvoSuite 1.0.0-SNAPSHOT
* Going to generate test cases for class: umd.cs.shop.JSPredicateForm
* Starting Client-0
* Properties loaded from /home/roham/Results-Utestgen/dataset/SF110-new-res/85_shop/evosuite-files/evosuite.properties
* Connecting to master process on port 13670
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 09:22:48.036 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 09:22:48.049 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 09:22:48.049 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 09:22:48.110 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class umd.cs.shop.JSPredicateForm
* Test criteria:
  - Branch Coverage
  - Line Coverage
  - Method-Output Coverage
  - Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 406
* Using seed 1710321765876
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%]* Initial Number of Goals in DynaMOSA = 103 / 406
[Progress:>                             0%] [Cov:====>                              14%][Progress:>                             1%] [Cov:========>                          25%][Progress:>                             1%] [Cov:========>                          25%][Progress:>                             2%] [Cov:===========>                       32%][Progress:>                             2%] [Cov:============>                      35%][Progress:>                             2%] [Cov:============>                      37%][Progress:>                             2%] [Cov:==============>                    41%][Progress:>                             2%] [Cov:=================>                 49%][Progress:>                             3%] [Cov:==================>                53%][Progress:>                             3%] [Cov:==================>                54%][Progress:>                             3%] [Cov:==================>                54%][Progress:>                             3%] [Cov:===================>               55%][Progress:>                             3%] [Cov:===================>               55%][Progress:=>                            4%] [Cov:===================>               56%][Progress:=>                            4%] [Cov:===================>               56%][Progress:=>                            4%] [Cov:===================>               57%][Progress:=>                            4%] [Cov:===================>               57%][Progress:=>                            4%] [Cov:===================>               57%][Progress:=>                            4%] [Cov:===================>               57%][Progress:=>                            4%] [Cov:===================>               57%][Progress:=>                            5%] [Cov:===================>               57%][Progress:=>                            5%] [Cov:===================>               57%][Progress:=>                            5%] [Cov:====================>              58%][Progress:=>                            5%] [Cov:====================>              59%][Progress:=>                            5%] [Cov:====================>              59%][Progress:=>                            5%] [Cov:====================>              59%][Progress:=>                            5%] [Cov:====================>              59%][Progress:=>                            6%] [Cov:====================>              59%][Progress:=>                            6%] [Cov:====================>              59%][Progress:=>                            6%] [Cov:====================>              59%][Progress:=>                            6%] [Cov:====================>              59%][Progress:=>                            6%] [Cov:====================>              59%][Progress:=>                            6%] [Cov:====================>              59%][Progress:=>                            6%] [Cov:====================>              59%][Progress:=>                            6%] [Cov:====================>              59%][Progress:=>                            6%] [Cov:====================>              59%][Progress:==>                           7%] [Cov:====================>              59%][Progress:==>                           7%] [Cov:=====================>             61%][Progress:==>                           7%] [Cov:=====================>             61%][Progress:==>                           7%] [Cov:=====================>             61%][Progress:==>                           7%] [Cov:=====================>             61%][Progress:==>                           7%] [Cov:=====================>             61%][Progress:==>                           7%] [Cov:=====================>             61%][Progress:==>                           7%] [Cov:=====================>             61%][Progress:==>                           7%] [Cov:=====================>             61%][Progress:==>                           8%] [Cov:=====================>             61%][Progress:==>                           8%] [Cov:=====================>             62%][Progress:==>                           8%] [Cov:=====================>             62%][Progress:==>                           8%] [Cov:=====================>             62%][Progress:==>                           8%] [Cov:=====================>             62%][Progress:==>                           8%] [Cov:=====================>             62%][Progress:==>                           8%] [Cov:=====================>             62%][Progress:==>                           8%] [Cov:=====================>             62%][Progress:==>                           8%] [Cov:=====================>             62%][Progress:==>                           8%] [Cov:=====================>             62%][Progress:==>                           9%] [Cov:=====================>             62%][Progress:==>                           9%] [Cov:=====================>             62%][Progress:==>                           9%] [Cov:=====================>             62%][Progress:==>                           9%] [Cov:=====================>             62%][Progress:==>                           9%] [Cov:=====================>             62%][Progress:==>                           9%] [Cov:=====================>             62%][Progress:==>                           9%] [Cov:=====================>             62%][Progress:==>                           9%] [Cov:=====================>             62%][Progress:===>                          10%] [Cov:=====================>             62%][MASTER] 09:22:58.626 [logback-1] WARN  TestCluster - Failed to check cache for java.util.function.Predicate<T> : Type points to itself
[Progress:===>                          10%] [Cov:=====================>             62%][Progress:===>                          10%] [Cov:=====================>             62%][Progress:===>                          10%] [Cov:=====================>             62%][Progress:===>                          10%] [Cov:=====================>             62%][Progress:===>                          10%] [Cov:=====================>             62%][Progress:===>                          10%] [Cov:=====================>             62%][Progress:===>                          10%] [Cov:=====================>             62%][Progress:===>                          10%] [Cov:=====================>             62%][Progress:===>                          10%] [Cov:=====================>             62%][Progress:===>                          10%] [Cov:=====================>             62%][Progress:===>                          10%] [Cov:=====================>             62%][Progress:===>                          11%] [Cov:=====================>             62%][Progress:===>                          11%] [Cov:=====================>             62%][Progress:===>                          11%] [Cov:=====================>             62%][Progress:===>                          11%] [Cov:=====================>             62%][Progress:===>                          11%] [Cov:=====================>             62%][Progress:===>                          11%] [Cov:=====================>             62%][Progress:===>                          11%] [Cov:=====================>             62%][Progress:===>                          11%] [Cov:=====================>             62%][Progress:===>                          11%] [Cov:=====================>             62%][Progress:===>                          11%] [Cov:=====================>             62%][Progress:===>                          11%] [Cov:=====================>             62%][Progress:===>                          12%] [Cov:=====================>             62%][Progress:===>                          12%] [Cov:=====================>             62%][Progress:===>                          12%] [Cov:=====================>             62%][Progress:===>                          12%] [Cov:=====================>             62%][Progress:===>                          12%] [Cov:=====================>             62%][Progress:===>                          12%] [Cov:=====================>             62%][Progress:===>                          12%] [Cov:=====================>             62%][Progress:===>                          12%] [Cov:=====================>             62%][Progress:===>                          12%] [Cov:=====================>             62%][Progress:===>                          12%] [Cov:=====================>             62%][Progress:===>                          12%] [Cov:=====================>             62%][Progress:===>                          12%] [Cov:=====================>             62%][Progress:===>                          13%] [Cov:=====================>             62%][Progress:===>                          13%] [Cov:=====================>             62%][Progress:===>                          13%] [Cov:=====================>             62%][Progress:===>                          13%] [Cov:=====================>             62%][Progress:===>                          13%] [Cov:=====================>             62%][Progress:===>                          13%] [Cov:=====================>             62%][Progress:===>                          13%] [Cov:=====================>             62%][Progress:===>                          13%] [Cov:=====================>             62%][Progress:===>                          13%] [Cov:=====================>             62%][Progress:====>                         14%] [Cov:=====================>             62%][Progress:====>                         14%] [Cov:=====================>             62%][Progress:====>                         14%] [Cov:=====================>             62%][Progress:====>                         14%] [Cov:=====================>             62%][Progress:====>                         14%] [Cov:=====================>             62%][Progress:====>                         14%] [Cov:=====================>             62%][Progress:====>                         14%] [Cov:=====================>             62%][Progress:====>                         14%] [Cov:=====================>             62%][Progress:====>                         14%] [Cov:=====================>             62%][Progress:====>                         14%] [Cov:=====================>             62%][Progress:====>                         14%] [Cov:=====================>             62%][Progress:====>                         14%] [Cov:=====================>             62%][Progress:====>                         14%] [Cov:=====================>             62%][Progress:====>                         14%] [Cov:=====================>             62%][Progress:====>                         15%] [Cov:=====================>             62%][Progress:====>                         15%] [Cov:=====================>             62%][Progress:====>                         15%] [Cov:=====================>             62%][Progress:====>                         15%] [Cov:=====================>             62%][Progress:====>                         15%] [Cov:=====================>             62%][Progress:====>                         15%] [Cov:=====================>             62%][Progress:====>                         15%] [Cov:=====================>             62%][Progress:====>                         15%] [Cov:=====================>             62%][MASTER] 09:23:04.056 [logback-1] WARN  TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
[Progress:====>                         15%] [Cov:=====================>             62%][Progress:====>                         15%] [Cov:=====================>             62%][Progress:====>                         15%] [Cov:=====================>             62%][Progress:====>                         15%] [Cov:=====================>             62%][Progress:====>                         16%] [Cov:=====================>             62%][Progress:====>                         16%] [Cov:=====================>             62%][Progress:====>                         16%] [Cov:=====================>             62%][Progress:====>                         16%] [Cov:=====================>             62%][Progress:====>                         16%] [Cov:=====================>             62%][Progress:====>                         16%] [Cov:=====================>             62%][Progress:====>                         16%] [Cov:=====================>             62%][Progress:====>                         16%] [Cov:=====================>             62%][Progress:====>                         16%] [Cov:=====================>             62%][Progress:====>                         16%] [Cov:=====================>             62%][Progress:====>                         16%] [Cov:=====================>             62%][Progress:====>                         16%] [Cov:=====================>             62%][Progress:====>                         16%] [Cov:=====================>             62%][Progress:====>                         16%] [Cov:=====================>             62%][Progress:====>                         16%] [Cov:=====================>             62%][Progress:=====>                        17%] [Cov:=====================>             62%][Progress:=====>                        17%] [Cov:=====================>             62%][Progress:=====>                        17%] [Cov:=====================>             62%][Progress:=====>                        17%] [Cov:=====================>             62%][Progress:=====>                        17%] [Cov:=====================>             62%][Progress:=====>                        17%] [Cov:=====================>             62%][Progress:=====>                        17%] [Cov:=====================>             62%][Progress:=====>                        17%] [Cov:=====================>             62%][Progress:=====>                        17%] [Cov:=====================>             62%][Progress:=====>                        17%] [Cov:=====================>             62%][Progress:=====>                        17%] [Cov:=====================>             62%][Progress:=====>                        18%] [Cov:=====================>             62%][Progress:=====>                        18%] [Cov:=====================>             62%][Progress:=====>                        18%] [Cov:=====================>             62%][Progress:=====>                        18%] [Cov:=====================>             62%][Progress:=====>                        18%] [Cov:=====================>             62%][Progress:=====>                        18%] [Cov:=====================>             62%][Progress:=====>                        18%] [Cov:=====================>             62%][Progress:=====>                        18%] [Cov:=====================>             62%][Progress:=====>                        18%] [Cov:=====================>             62%][Progress:=====>                        18%] [Cov:=====================>             62%][Progress:=====>                        18%] [Cov:=====================>             62%][Progress:=====>                        19%] [Cov:=====================>             62%][Progress:=====>                        19%] [Cov:=====================>             62%][Progress:=====>                        19%] [Cov:=====================>             62%][Progress:=====>                        19%] [Cov:=====================>             62%][Progress:=====>                        19%] [Cov:=====================>             62%][Progress:=====>                        19%] [Cov:=====================>             62%][Progress:=====>                        19%] [Cov:=====================>             62%][Progress:=====>                        19%] [Cov:=====================>             62%][Progress:=====>                        19%] [Cov:=====================>             62%][Progress:=====>                        19%] [Cov:=====================>             62%][Progress:=====>                        19%] [Cov:=====================>             62%][Progress:=====>                        19%] [Cov:=====================>             62%][Progress:=====>                        19%] [Cov:=====================>             62%][Progress:======>                       20%] [Cov:=====================>             62%][Progress:======>                       20%] [Cov:=====================>             62%][Progress:======>                       20%] [Cov:=====================>             62%][Progress:======>                       20%] [Cov:=====================>             62%][Progress:======>                       20%] [Cov:=====================>             62%][Progress:======>                       20%] [Cov:=====================>             62%][Progress:======>                       20%] [Cov:=====================>             62%][Progress:======>                       20%] [Cov:=====================>             62%][Progress:======>                       20%] [Cov:=====================>             62%][Progress:======>                       20%] [Cov:=====================>             62%][Progress:======>                       20%] [Cov:=====================>             62%][Progress:======>                       20%] [Cov:=====================>             62%][Progress:======>                       20%] [Cov:=====================>             62%][Progress:======>                       21%] [Cov:=====================>             62%][Progress:======>                       21%] [Cov:=====================>             62%][Progress:======>                       21%] [Cov:=====================>             62%][Progress:======>                       21%] [Cov:=====================>             62%][Progress:======>                       21%] [Cov:=====================>             62%][Progress:======>                       21%] [Cov:=====================>             62%][Progress:======>                       21%] [Cov:=====================>             62%][Progress:======>                       21%] [Cov:=====================>             62%][Progress:======>                       21%] [Cov:=====================>             62%][Progress:======>                       21%] [Cov:=====================>             62%][Progress:======>                       21%] [Cov:=====================>             62%][Progress:======>                       21%] [Cov:=====================>             62%][Progress:======>                       22%] [Cov:=====================>             62%][Progress:======>                       22%] [Cov:=====================>             62%][Progress:======>                       22%] [Cov:=====================>             62%][Progress:======>                       22%] [Cov:=====================>             62%][Progress:======>                       22%] [Cov:=====================>             62%][Progress:======>                       22%] [Cov:=====================>             62%][Progress:======>                       22%] [Cov:=====================>             62%][Progress:======>                       22%] [Cov:=====================>             62%][Progress:======>                       22%] [Cov:=====================>             62%][Progress:======>                       22%] [Cov:=====================>             62%][Progress:======>                       22%] [Cov:=====================>             62%][Progress:======>                       22%] [Cov:=====================>             62%][Progress:======>                       22%] [Cov:=====================>             62%][Progress:======>                       23%] [Cov:=====================>             62%][Progress:======>                       23%] [Cov:=====================>             62%][Progress:======>                       23%] [Cov:=====================>             62%][Progress:======>                       23%] [Cov:=====================>             62%][Progress:======>                       23%] [Cov:=====================>             62%][Progress:======>                       23%] [Cov:=====================>             62%][Progress:======>                       23%] [Cov:=====================>             62%][Progress:======>                       23%] [Cov:=====================>             62%][Progress:======>                       23%] [Cov:=====================>             62%][Progress:======>                       23%] [Cov:=====================>             62%][Progress:======>                       23%] [Cov:=====================>             62%][Progress:======>                       23%] [Cov:=====================>             62%][Progress:======>                       23%] [Cov:=====================>             62%][Progress:=======>                      24%] [Cov:=====================>             62%][Progress:=======>                      24%] [Cov:=====================>             62%][Progress:=======>                      24%] [Cov:=====================>             62%][Progress:=======>                      24%] [Cov:=====================>             62%][Progress:=======>                      24%] [Cov:=======================>           68%][Progress:=======>                      24%] [Cov:=======================>           68%][Progress:=======>                      24%] [Cov:=======================>           68%][Progress:=======>                      24%] [Cov:=======================>           68%][Progress:=======>                      24%] [Cov:=======================>           68%][Progress:=======>                      24%] [Cov:=======================>           68%][Progress:=======>                      24%] [Cov:=======================>           68%][Progress:=======>                      24%] [Cov:=======================>           68%][Progress:=======>                      24%] [Cov:=======================>           68%][Progress:=======>                      24%] [Cov:=======================>           68%][Progress:=======>                      25%] [Cov:=======================>           68%][Progress:=======>                      25%] [Cov:=======================>           68%][Progress:=======>                      25%] [Cov:=======================>           68%][Progress:=======>                      25%] [Cov:=======================>           68%][Progress:=======>                      25%] [Cov:=======================>           68%][Progress:=======>                      25%] [Cov:=======================>           68%][Progress:=======>                      25%] [Cov:=======================>           68%][Progress:=======>                      25%] [Cov:=======================>           68%][Progress:=======>                      25%] [Cov:=======================>           68%][Progress:=======>                      25%] [Cov:=======================>           68%][Progress:=======>                      25%] [Cov:=======================>           68%][Progress:=======>                      26%] [Cov:=======================>           68%][Progress:=======>                      26%] [Cov:=======================>           68%][Progress:=======>                      26%] [Cov:=======================>           68%][Progress:=======>                      26%] [Cov:=======================>           68%][Progress:=======>                      26%] [Cov:=======================>           68%][Progress:=======>                      26%] [Cov:=======================>           68%][Progress:=======>                      26%] [Cov:=======================>           68%][Progress:=======>                      26%] [Cov:=======================>           68%][Progress:=======>                      26%] [Cov:=======================>           68%][Progress:=======>                      26%] [Cov:=======================>           68%][Progress:=======>                      26%] [Cov:=======================>           68%][Progress:=======>                      26%] [Cov:=======================>           68%][Progress:=======>                      26%] [Cov:=======================>           68%][Progress:========>                     27%] [Cov:=======================>           68%][Progress:========>                     27%] [Cov:=======================>           68%][Progress:========>                     27%] [Cov:=======================>           68%][Progress:========>                     27%] [Cov:=======================>           68%][Progress:========>                     27%] [Cov:=======================>           68%][Progress:========>                     27%] [Cov:=======================>           68%][Progress:========>                     27%] [Cov:=======================>           68%][Progress:========>                     27%] [Cov:=======================>           68%][Progress:========>                     27%] [Cov:=======================>           68%][Progress:========>                     27%] [Cov:=======================>           68%][Progress:========>                     27%] [Cov:=======================>           68%][Progress:========>                     27%] [Cov:=======================>           68%][Progress:========>                     27%] [Cov:=======================>           68%][Progress:========>                     27%] [Cov:=======================>           68%][Progress:========>                     28%] [Cov:=======================>           68%][Progress:========>                     28%] [Cov:=======================>           68%][Progress:========>                     28%] [Cov:=======================>           68%][Progress:========>                     28%] [Cov:=======================>           68%][Progress:========>                     28%] [Cov:=======================>           68%][Progress:========>                     28%] [Cov:=======================>           68%][Progress:========>                     28%] [Cov:=======================>           68%][Progress:========>                     28%] [Cov:=======================>           68%][Progress:========>                     28%] [Cov:=======================>           68%][Progress:========>                     28%] [Cov:=======================>           68%][Progress:========>                     28%] [Cov:=======================>           68%][Progress:========>                     28%] [Cov:=======================>           68%][Progress:========>                     29%] [Cov:=======================>           68%][Progress:========>                     29%] [Cov:=======================>           68%][Progress:========>                     29%] [Cov:=======================>           68%][Progress:========>                     29%] [Cov:=======================>           68%][Progress:========>                     29%] [Cov:=======================>           68%][Progress:========>                     29%] [Cov:=======================>           68%][Progress:========>                     29%] [Cov:=======================>           68%][Progress:========>                     29%] [Cov:========================>          70%][Progress:========>                     29%] [Cov:========================>          70%][Progress:========>                     29%] [Cov:========================>          70%][Progress:========>                     29%] [Cov:========================>          70%][Progress:========>                     29%] [Cov:========================>          70%][Progress:=========>                    30%] [Cov:========================>          70%][Progress:=========>                    30%] [Cov:========================>          70%][Progress:=========>                    30%] [Cov:========================>          70%][Progress:=========>                    30%] [Cov:========================>          70%][Progress:=========>                    30%] [Cov:========================>          70%][Progress:=========>                    30%] [Cov:========================>          70%][Progress:=========>                    30%] [Cov:========================>          70%][Progress:=========>                    30%] [Cov:========================>          70%][Progress:=========>                    30%] [Cov:========================>          70%][Progress:=========>                    30%] [Cov:========================>          70%][Progress:=========>                    30%] [Cov:========================>          70%][Progress:=========>                    30%] [Cov:========================>          70%][Progress:=========>                    30%] [Cov:========================>          70%][Progress:=========>                    31%] [Cov:========================>          70%][Progress:=========>                    31%] [Cov:========================>          70%][Progress:=========>                    31%] [Cov:========================>          70%][Progress:=========>                    31%] [Cov:========================>          70%][Progress:=========>                    31%] [Cov:========================>          70%][Progress:=========>                    31%] [Cov:========================>          70%][Progress:=========>                    31%] [Cov:========================>          70%][Progress:=========>                    31%] [Cov:========================>          70%][Progress:=========>                    31%] [Cov:========================>          70%][Progress:=========>                    31%] [Cov:========================>          70%][Progress:=========>                    31%] [Cov:========================>          70%][Progress:=========>                    31%] [Cov:========================>          70%][Progress:=========>                    32%] [Cov:========================>          70%][Progress:=========>                    32%] [Cov:========================>          70%][Progress:=========>                    32%] [Cov:========================>          70%][Progress:=========>                    32%] [Cov:========================>          70%][Progress:=========>                    32%] [Cov:========================>          70%][Progress:=========>                    32%] [Cov:========================>          70%][Progress:=========>                    32%] [Cov:========================>          70%][Progress:=========>                    32%] [Cov:========================>          70%][Progress:=========>                    32%] [Cov:========================>          70%][Progress:=========>                    32%] [Cov:========================>          70%][Progress:=========>                    32%] [Cov:========================>          70%][Progress:=========>                    32%] [Cov:========================>          70%][Progress:=========>                    32%] [Cov:========================>          70%][Progress:=========>                    32%] [Cov:========================>          70%][Progress:=========>                    32%] [Cov:========================>          70%][Progress:=========>                    33%] [Cov:========================>          70%][Progress:=========>                    33%] [Cov:========================>          70%][Progress:=========>                    33%] [Cov:========================>          70%][Progress:=========>                    33%] [Cov:========================>          70%][Progress:=========>                    33%] [Cov:========================>          70%][Progress:=========>                    33%] [Cov:========================>          70%][Progress:=========>                    33%] [Cov:========================>          70%][Progress:=========>                    33%] [Cov:========================>          70%][Progress:=========>                    33%] [Cov:========================>          70%][Progress:=========>                    33%] [Cov:========================>          70%][Progress:==========>                   34%] [Cov:========================>          70%][Progress:==========>                   34%] [Cov:========================>          70%][Progress:==========>                   34%] [Cov:========================>          70%][Progress:==========>                   34%] [Cov:========================>          70%][Progress:==========>                   34%] [Cov:========================>          70%][Progress:==========>                   34%] [Cov:========================>          70%][Progress:==========>                   34%] [Cov:========================>          70%][Progress:==========>                   34%] [Cov:========================>          70%][Progress:==========>                   34%] [Cov:========================>          70%][Progress:==========>                   34%] [Cov:========================>          70%][Progress:==========>                   34%] [Cov:=========================>         73%][Progress:==========>                   34%] [Cov:=========================>         73%][Progress:==========>                   34%] [Cov:=========================>         73%][Progress:==========>                   34%] [Cov:=========================>         73%][Progress:==========>                   35%] [Cov:=========================>         73%][Progress:==========>                   35%] [Cov:=========================>         73%][Progress:==========>                   35%] [Cov:=========================>         73%][Progress:==========>                   35%] [Cov:=========================>         73%][Progress:==========>                   35%] [Cov:=========================>         73%][Progress:==========>                   35%] [Cov:=========================>         73%][Progress:==========>                   35%] [Cov:=========================>         73%][Progress:==========>                   35%] [Cov:=========================>         73%][Progress:==========>                   35%] [Cov:=========================>         73%][Progress:==========>                   35%] [Cov:=========================>         73%][Progress:==========>                   35%] [Cov:=========================>         73%][Progress:==========>                   35%] [Cov:=========================>         73%][Progress:==========>                   35%] [Cov:=========================>         73%][Progress:==========>                   36%] [Cov:=========================>         73%][Progress:==========>                   36%] [Cov:=========================>         73%][Progress:==========>                   36%] [Cov:=========================>         73%][Progress:==========>                   36%] [Cov:=========================>         73%][Progress:==========>                   36%] [Cov:=========================>         73%][Progress:==========>                   36%] [Cov:=========================>         73%][Progress:==========>                   36%] [Cov:=========================>         73%][Progress:==========>                   36%] [Cov:=========================>         73%][Progress:==========>                   36%] [Cov:=========================>         73%][Progress:==========>                   36%] [Cov:=========================>         73%][Progress:==========>                   36%] [Cov:=========================>         73%][Progress:==========>                   36%] [Cov:=========================>         73%][Progress:==========>                   36%] [Cov:=========================>         73%][Progress:==========>                   36%] [Cov:=========================>         73%][Progress:===========>                  37%] [Cov:=========================>         73%][Progress:===========>                  37%] [Cov:=========================>         73%][Progress:===========>                  37%] [Cov:=========================>         73%][Progress:===========>                  37%] [Cov:=========================>         73%][Progress:===========>                  37%] [Cov:=========================>         73%][Progress:===========>                  37%] [Cov:=========================>         73%][Progress:===========>                  37%] [Cov:=========================>         73%][Progress:===========>                  37%] [Cov:=========================>         73%][Progress:===========>                  37%] [Cov:=========================>         73%][Progress:===========>                  37%] [Cov:=========================>         73%][Progress:===========>                  37%] [Cov:=========================>         73%][Progress:===========>                  37%] [Cov:=========================>         73%][Progress:===========>                  37%] [Cov:=========================>         73%][Progress:===========>                  38%] [Cov:=========================>         73%][Progress:===========>                  38%] [Cov:=========================>         73%][Progress:===========>                  38%] [Cov:=========================>         73%][Progress:===========>                  38%] [Cov:=========================>         73%][Progress:===========>                  38%] [Cov:=========================>         73%][Progress:===========>                  38%] [Cov:=========================>         73%][Progress:===========>                  38%] [Cov:=========================>         73%][Progress:===========>                  38%] [Cov:=========================>         73%][Progress:===========>                  38%] [Cov:=========================>         73%][Progress:===========>                  38%] [Cov:=========================>         73%][Progress:===========>                  38%] [Cov:=========================>         73%][Progress:===========>                  38%] [Cov:=========================>         73%][Progress:===========>                  38%] [Cov:=========================>         73%][Progress:===========>                  38%] [Cov:=========================>         73%][Progress:===========>                  39%] [Cov:=========================>         73%][Progress:===========>                  39%] [Cov:=========================>         73%][Progress:===========>                  39%] [Cov:=========================>         73%][Progress:===========>                  39%] [Cov:=========================>         73%][Progress:===========>                  39%] [Cov:=========================>         73%][Progress:===========>                  39%] [Cov:=========================>         73%][Progress:===========>                  39%] [Cov:=========================>         73%][Progress:===========>                  39%] [Cov:=========================>         73%][Progress:===========>                  39%] [Cov:=========================>         73%][Progress:===========>                  39%] [Cov:=========================>         73%][Progress:===========>                  39%] [Cov:=========================>         73%][Progress:===========>                  39%] [Cov:=========================>         73%][Progress:===========>                  39%] [Cov:=========================>         73%][Progress:===========>                  39%] [Cov:=========================>         73%][Progress:============>                 40%] [Cov:=========================>         73%][Progress:============>                 40%] [Cov:=========================>         73%][Progress:============>                 40%] [Cov:=========================>         73%][Progress:============>                 40%] [Cov:=========================>         73%][Progress:============>                 40%] [Cov:=========================>         73%][Progress:============>                 40%] [Cov:=========================>         73%][Progress:============>                 40%] [Cov:=========================>         73%][Progress:============>                 40%] [Cov:=========================>         73%][Progress:============>                 40%] [Cov:=========================>         73%][Progress:============>                 40%] [Cov:=========================>         73%][Progress:============>                 40%] [Cov:=========================>         73%][Progress:============>                 40%] [Cov:=========================>         73%][Progress:============>                 40%] [Cov:=========================>         73%][Progress:============>                 41%] [Cov:=========================>         73%][Progress:============>                 41%] [Cov:=========================>         73%][Progress:============>                 41%] [Cov:=========================>         73%][Progress:============>                 41%] [Cov:=========================>         73%][Progress:============>                 41%] [Cov:=========================>         73%][Progress:============>                 41%] [Cov:=========================>         73%][Progress:============>                 41%] [Cov:=========================>         73%][Progress:============>                 41%] [Cov:=========================>         73%][Progress:============>                 41%] [Cov:=========================>         73%][Progress:============>                 41%] [Cov:=========================>         73%][Progress:============>                 41%] [Cov:=========================>         73%][Progress:============>                 41%] [Cov:=========================>         73%][Progress:============>                 41%] [Cov:=========================>         73%][Progress:============>                 41%] [Cov:=========================>         73%][Progress:============>                 42%] [Cov:=========================>         73%][Progress:============>                 42%] [Cov:=========================>         73%][Progress:============>                 42%] [Cov:=========================>         73%][Progress:============>                 42%] [Cov:=========================>         73%][Progress:============>                 42%] [Cov:=========================>         73%][Progress:============>                 43%] [Cov:=========================>         73%][Progress:============>                 43%] [Cov:=========================>         73%][Progress:============>                 43%] [Cov:=========================>         73%][Progress:============>                 43%] [Cov:=========================>         73%][Progress:============>                 43%] [Cov:=========================>         73%][Progress:============>                 43%] [Cov:=========================>         73%][Progress:============>                 43%] [Cov:=========================>         73%][Progress:============>                 43%] [Cov:=========================>         73%][Progress:============>                 43%] [Cov:=========================>         73%][Progress:============>                 43%] [Cov:=========================>         73%][Progress:============>                 43%] [Cov:=========================>         73%][Progress:============>                 43%] [Cov:=========================>         73%][Progress:============>                 43%] [Cov:=========================>         73%][Progress:=============>                44%] [Cov:=========================>         73%][Progress:=============>                44%] [Cov:=========================>         73%][Progress:=============>                44%] [Cov:=========================>         73%][Progress:=============>                44%] [Cov:=========================>         73%][Progress:=============>                44%] [Cov:=========================>         73%][Progress:=============>                44%] [Cov:=========================>         73%][Progress:=============>                44%] [Cov:=========================>         73%][Progress:=============>                44%] [Cov:=========================>         73%][Progress:=============>                44%] [Cov:=========================>         73%][Progress:=============>                44%] [Cov:=========================>         73%][Progress:=============>                44%] [Cov:=========================>         73%][Progress:=============>                44%] [Cov:=========================>         73%][Progress:=============>                44%] [Cov:=========================>         73%][Progress:=============>                44%] [Cov:=========================>         73%][Progress:=============>                45%] [Cov:=========================>         73%][Progress:=============>                45%] [Cov:=========================>         73%][Progress:=============>                45%] [Cov:=========================>         73%][Progress:=============>                45%] [Cov:=========================>         73%][Progress:=============>                45%] [Cov:=========================>         73%][Progress:=============>                45%] [Cov:=========================>         73%][Progress:=============>                45%] [Cov:=========================>         73%][Progress:=============>                45%] [Cov:=========================>         73%][Progress:=============>                45%] [Cov:=========================>         73%][Progress:=============>                45%] [Cov:=========================>         73%][Progress:=============>                45%] [Cov:=========================>         73%][Progress:=============>                45%] [Cov:=========================>         73%][Progress:=============>                45%] [Cov:=========================>         73%][Progress:=============>                45%] [Cov:=========================>         73%][Progress:=============>                45%] [Cov:=========================>         73%][Progress:=============>                45%] [Cov:=========================>         73%][Progress:=============>                46%] [Cov:=========================>         73%][Progress:=============>                46%] [Cov:=========================>         73%][Progress:=============>                46%] [Cov:=========================>         73%][Progress:=============>                46%] [Cov:=========================>         73%][Progress:=============>                46%] [Cov:=========================>         73%][Progress:=============>                46%] [Cov:=========================>         73%][Progress:=============>                46%] [Cov:=========================>         73%][Progress:=============>                46%] [Cov:=========================>         73%][Progress:=============>                46%] [Cov:=========================>         73%][Progress:=============>                46%] [Cov:=========================>         73%][Progress:=============>                46%] [Cov:=========================>         73%][Progress:=============>                46%] [Cov:=========================>         73%][Progress:=============>                46%] [Cov:=========================>         73%][Progress:==============>               47%] [Cov:=========================>         73%][Progress:==============>               47%] [Cov:=========================>         73%][Progress:==============>               47%] [Cov:=========================>         73%][Progress:==============>               47%] [Cov:=========================>         73%][Progress:==============>               47%] [Cov:=========================>         73%][Progress:==============>               47%] [Cov:=========================>         73%][Progress:==============>               47%] [Cov:=========================>         73%][Progress:==============>               47%] [Cov:=========================>         73%][Progress:==============>               47%] [Cov:=========================>         73%][Progress:==============>               47%] [Cov:=========================>         73%][Progress:==============>               47%] [Cov:=========================>         73%][Progress:==============>               47%] [Cov:=========================>         73%][Progress:==============>               48%] [Cov:=========================>         73%][Progress:==============>               48%] [Cov:=========================>         73%][Progress:==============>               48%] [Cov:=========================>         73%][Progress:==============>               48%] [Cov:=========================>         73%][Progress:==============>               48%] [Cov:=========================>         73%][Progress:==============>               48%] [Cov:=========================>         73%][Progress:==============>               48%] [Cov:=========================>         73%][Progress:==============>               48%] [Cov:=========================>         73%][Progress:==============>               48%] [Cov:=========================>         73%][Progress:==============>               48%] [Cov:=========================>         73%][Progress:==============>               48%] [Cov:=========================>         73%][Progress:==============>               48%] [Cov:=========================>         73%][Progress:==============>               48%] [Cov:=========================>         73%][Progress:==============>               49%] [Cov:=========================>         73%][Progress:==============>               49%] [Cov:=========================>         73%][Progress:==============>               49%] [Cov:=========================>         73%][Progress:==============>               49%] [Cov:=========================>         73%][Progress:==============>               49%] [Cov:=========================>         73%][Progress:==============>               49%] [Cov:=========================>         73%][Progress:==============>               49%] [Cov:=========================>         73%][Progress:==============>               49%] [Cov:=========================>         73%][Progress:==============>               49%] [Cov:=========================>         73%][Progress:==============>               49%] [Cov:=========================>         73%][Progress:==============>               49%] [Cov:=========================>         73%][Progress:==============>               49%] [Cov:=========================>         73%][Progress:==============>               49%] [Cov:=========================>         73%][Progress:==============>               49%] [Cov:=========================>         73%][Progress:===============>              50%] [Cov:=========================>         73%][Progress:===============>              50%] [Cov:=========================>         73%][Progress:===============>              50%] [Cov:=========================>         73%][Progress:===============>              50%] [Cov:=========================>         73%][Progress:===============>              50%] [Cov:=========================>         73%][Progress:===============>              50%] [Cov:=========================>         73%][Progress:===============>              50%] [Cov:=========================>         73%][Progress:===============>              50%] [Cov:=========================>         73%][Progress:===============>              50%] [Cov:=========================>         73%][Progress:===============>              50%] [Cov:=========================>         73%][Progress:===============>              50%] [Cov:=========================>         73%][Progress:===============>              50%] [Cov:=========================>         73%][Progress:===============>              50%] [Cov:=========================>         73%][Progress:===============>              50%] [Cov:=========================>         73%][Progress:===============>              51%] [Cov:=========================>         73%][Progress:===============>              51%] [Cov:=========================>         73%][Progress:===============>              51%] [Cov:=========================>         73%][Progress:===============>              51%] [Cov:=========================>         73%][Progress:===============>              51%] [Cov:=========================>         73%][Progress:===============>              51%] [Cov:=========================>         73%][Progress:===============>              51%] [Cov:=========================>         73%][Progress:===============>              51%] [Cov:=========================>         73%][Progress:===============>              51%] [Cov:=========================>         73%][Progress:===============>              51%] [Cov:=========================>         73%][Progress:===============>              51%] [Cov:=========================>         73%][Progress:===============>              51%] [Cov:=========================>         73%][Progress:===============>              51%] [Cov:=========================>         73%][Progress:===============>              52%] [Cov:=========================>         73%][Progress:===============>              52%] [Cov:=========================>         73%][Progress:===============>              52%] [Cov:=========================>         73%][Progress:===============>              52%] [Cov:=========================>         73%][Progress:===============>              52%] [Cov:=========================>         73%][Progress:===============>              52%] [Cov:=========================>         73%][Progress:===============>              52%] [Cov:=========================>         73%][Progress:===============>              52%] [Cov:=========================>         73%][Progress:===============>              52%] [Cov:=========================>         73%][Progress:===============>              52%] [Cov:=========================>         73%][Progress:===============>              52%] [Cov:=========================>         73%][Progress:===============>              52%] [Cov:=========================>         73%][Progress:===============>              52%] [Cov:=========================>         73%][Progress:===============>              52%] [Cov:=========================>         73%][Progress:===============>              52%] [Cov:=========================>         73%][Progress:===============>              52%] [Cov:=========================>         73%][Progress:===============>              53%] [Cov:=========================>         73%][Progress:===============>              53%] [Cov:=========================>         73%][Progress:===============>              53%] [Cov:=========================>         73%][Progress:===============>              53%] [Cov:=========================>         73%][Progress:===============>              53%] [Cov:=========================>         73%][Progress:===============>              53%] [Cov:=========================>         73%][Progress:===============>              53%] [Cov:=========================>         73%][Progress:===============>              53%] [Cov:=========================>         73%][Progress:===============>              53%] [Cov:=========================>         73%][Progress:===============>              53%] [Cov:=========================>         73%][Progress:===============>              53%] [Cov:=========================>         73%][Progress:===============>              53%] [Cov:=========================>         73%][Progress:===============>              53%] [Cov:=========================>         73%][Progress:===============>              53%] [Cov:=========================>         73%][Progress:===============>              53%] [Cov:=========================>         73%][Progress:================>             54%] [Cov:=========================>         73%][Progress:================>             54%] [Cov:=========================>         73%][Progress:================>             54%] [Cov:=========================>         73%][Progress:================>             54%] [Cov:=========================>         73%][Progress:================>             54%] [Cov:=========================>         73%][Progress:================>             54%] [Cov:=========================>         73%][Progress:================>             54%] [Cov:=========================>         73%][Progress:================>             54%] [Cov:=========================>         73%][Progress:================>             54%] [Cov:=========================>         73%][Progress:================>             54%] [Cov:=========================>         73%][Progress:================>             54%] [Cov:=========================>         73%][Progress:================>             54%] [Cov:=========================>         73%][Progress:================>             55%] [Cov:=========================>         73%][Progress:================>             55%] [Cov:=========================>         73%][Progress:================>             55%] [Cov:=========================>         73%][Progress:================>             55%] [Cov:=========================>         73%][Progress:================>             55%] [Cov:=========================>         73%][Progress:================>             55%] [Cov:=========================>         73%][Progress:================>             55%] [Cov:=========================>         73%][Progress:================>             55%] [Cov:=========================>         73%][Progress:================>             55%] [Cov:=========================>         73%][Progress:================>             55%] [Cov:=========================>         73%][Progress:================>             56%] [Cov:=========================>         73%][Progress:================>             56%] [Cov:=========================>         73%][Progress:================>             56%] [Cov:=========================>         73%][Progress:================>             56%] [Cov:=========================>         73%][Progress:================>             56%] [Cov:=========================>         73%][Progress:================>             56%] [Cov:=========================>         73%][Progress:================>             56%] [Cov:=========================>         73%][Progress:================>             56%] [Cov:=========================>         73%][Progress:================>             56%] [Cov:=========================>         73%][Progress:================>             56%] [Cov:=========================>         73%][Progress:================>             56%] [Cov:=========================>         73%][Progress:=================>            57%] [Cov:=========================>         73%][Progress:=================>            57%] [Cov:=========================>         73%][Progress:=================>            57%] [Cov:=========================>         73%][Progress:=================>            57%] [Cov:=========================>         73%][Progress:=================>            57%] [Cov:=========================>         73%][Progress:=================>            57%] [Cov:=========================>         73%][Progress:=================>            57%] [Cov:=========================>         73%][Progress:=================>            57%] [Cov:=========================>         73%][Progress:=================>            57%] [Cov:=========================>         73%][Progress:=================>            57%] [Cov:=========================>         73%][Progress:=================>            58%] [Cov:=========================>         73%][Progress:=================>            58%] [Cov:=========================>         73%][Progress:=================>            58%] [Cov:=========================>         73%][Progress:=================>            58%] [Cov:=========================>         73%][Progress:=================>            58%] [Cov:=========================>         73%][Progress:=================>            58%] [Cov:=========================>         73%][Progress:=================>            58%] [Cov:=========================>         73%][Progress:=================>            58%] [Cov:=========================>         73%][Progress:=================>            58%] [Cov:=========================>         73%][Progress:=================>            58%] [Cov:=========================>         73%][Progress:=================>            58%] [Cov:=========================>         73%][Progress:=================>            58%] [Cov:=========================>         73%][Progress:=================>            58%] [Cov:=========================>         73%][Progress:=================>            58%] [Cov:=========================>         73%][Progress:=================>            59%] [Cov:=========================>         73%][Progress:=================>            59%] [Cov:=========================>         73%][Progress:=================>            59%] [Cov:=========================>         73%][Progress:=================>            59%] [Cov:=========================>         73%][Progress:=================>            59%] [Cov:=========================>         73%][Progress:=================>            59%] [Cov:=========================>         73%][Progress:=================>            59%] [Cov:=========================>         73%][Progress:=================>            59%] [Cov:=========================>         73%][Progress:=================>            59%] [Cov:=========================>         73%][Progress:=================>            59%] [Cov:=========================>         73%][Progress:=================>            59%] [Cov:=========================>         73%][Progress:=================>            59%] [Cov:=========================>         73%][Progress:=================>            59%] [Cov:=========================>         73%][Progress:==================>           60%] [Cov:=========================>         73%][Progress:==================>           60%] [Cov:=========================>         73%][Progress:==================>           60%] [Cov:=========================>         73%][Progress:==================>           60%] [Cov:=========================>         73%][Progress:==================>           60%] [Cov:=========================>         73%][Progress:==================>           60%] [Cov:=========================>         73%][Progress:==================>           60%] [Cov:=========================>         73%][Progress:==================>           60%] [Cov:=========================>         73%][Progress:==================>           60%] [Cov:=========================>         73%][Progress:==================>           60%] [Cov:=========================>         73%][Progress:==================>           60%] [Cov:=========================>         73%][Progress:==================>           60%] [Cov:=========================>         73%][Progress:==================>           61%] [Cov:=========================>         73%][Progress:==================>           61%] [Cov:=========================>         73%][Progress:==================>           61%] [Cov:=========================>         73%][Progress:==================>           61%] [Cov:=========================>         73%][Progress:==================>           61%] [Cov:=========================>         73%][Progress:==================>           61%] [Cov:=========================>         73%][Progress:==================>           61%] [Cov:=========================>         73%][Progress:==================>           61%] [Cov:=========================>         73%][Progress:==================>           61%] [Cov:=========================>         73%][Progress:==================>           61%] [Cov:=========================>         73%][Progress:==================>           61%] [Cov:=========================>         73%][Progress:==================>           61%] [Cov:=========================>         73%][Progress:==================>           61%] [Cov:=========================>         73%][Progress:==================>           62%] [Cov:=========================>         73%][Progress:==================>           62%] [Cov:=========================>         73%][Progress:==================>           62%] [Cov:=========================>         73%][Progress:==================>           62%] [Cov:=========================>         73%][Progress:==================>           62%] [Cov:=========================>         73%][Progress:==================>           62%] [Cov:=========================>         73%][Progress:==================>           62%] [Cov:=========================>         73%][Progress:==================>           62%] [Cov:=========================>         73%][Progress:==================>           62%] [Cov:=========================>         73%][Progress:==================>           63%] [Cov:=========================>         73%][Progress:==================>           63%] [Cov:=========================>         73%][Progress:==================>           63%] [Cov:=========================>         73%][Progress:==================>           63%] [Cov:=========================>         73%][Progress:==================>           63%] [Cov:=========================>         73%][Progress:==================>           63%] [Cov:=========================>         73%][Progress:==================>           63%] [Cov:=========================>         73%][Progress:==================>           63%] [Cov:=========================>         73%][Progress:==================>           63%] [Cov:=========================>         73%][Progress:==================>           63%] [Cov:=========================>         73%][Progress:==================>           63%] [Cov:=========================>         73%][Progress:==================>           63%] [Cov:=========================>         73%][Progress:==================>           63%] [Cov:=========================>         73%][Progress:==================>           63%] [Cov:=========================>         73%][Progress:===================>          64%] [Cov:=========================>         73%][Progress:===================>          64%] [Cov:=========================>         73%][Progress:===================>          64%] [Cov:=========================>         73%][Progress:===================>          64%] [Cov:=========================>         73%][Progress:===================>          64%] [Cov:=========================>         73%][Progress:===================>          64%] [Cov:=========================>         73%][Progress:===================>          64%] [Cov:=========================>         73%][Progress:===================>          64%] [Cov:=========================>         73%][Progress:===================>          64%] [Cov:=========================>         73%][Progress:===================>          64%] [Cov:=========================>         73%][Progress:===================>          64%] [Cov:=========================>         73%][Progress:===================>          64%] [Cov:=========================>         73%][Progress:===================>          64%] [Cov:=========================>         73%][Progress:===================>          65%] [Cov:=========================>         73%][Progress:===================>          65%] [Cov:=========================>         73%][Progress:===================>          65%] [Cov:=========================>         73%][Progress:===================>          65%] [Cov:=========================>         73%][Progress:===================>          65%] [Cov:=========================>         73%][Progress:===================>          65%] [Cov:=========================>         73%][Progress:===================>          65%] [Cov:=========================>         73%][Progress:===================>          65%] [Cov:=========================>         73%][Progress:===================>          65%] [Cov:=========================>         73%][Progress:===================>          65%] [Cov:=========================>         73%][Progress:===================>          65%] [Cov:=========================>         73%][Progress:===================>          65%] [Cov:=========================>         73%][Progress:===================>          65%] [Cov:=========================>         73%][Progress:===================>          65%] [Cov:=========================>         73%][Progress:===================>          65%] [Cov:=========================>         73%][Progress:===================>          65%] [Cov:=========================>         73%][Progress:===================>          65%] [Cov:=========================>         73%][Progress:===================>          66%] [Cov:=========================>         73%][Progress:===================>          66%] [Cov:=========================>         73%][Progress:===================>          66%] [Cov:=========================>         73%][Progress:===================>          66%] [Cov:=========================>         73%][Progress:===================>          66%] [Cov:=========================>         73%][Progress:===================>          66%] [Cov:=========================>         73%][Progress:===================>          66%] [Cov:=========================>         73%][Progress:===================>          66%] [Cov:=========================>         73%][Progress:===================>          66%] [Cov:=========================>         74%][Progress:===================>          66%] [Cov:=========================>         74%][Progress:===================>          66%] [Cov:=========================>         74%][Progress:===================>          66%] [Cov:=========================>         74%][Progress:===================>          66%] [Cov:=========================>         74%][Progress:===================>          66%] [Cov:=========================>         74%][Progress:====================>         67%] [Cov:=========================>         74%][Progress:====================>         67%] [Cov:=========================>         74%][Progress:====================>         67%] [Cov:=========================>         74%][Progress:====================>         67%] [Cov:=========================>         74%][Progress:====================>         67%] [Cov:=========================>         74%][Progress:====================>         67%] [Cov:=========================>         74%][Progress:====================>         67%] [Cov:=========================>         74%][Progress:====================>         67%] [Cov:=========================>         74%][Progress:====================>         67%] [Cov:=========================>         74%][Progress:====================>         67%] [Cov:=========================>         74%][Progress:====================>         67%] [Cov:=========================>         74%][Progress:====================>         67%] [Cov:=========================>         74%][Progress:====================>         67%] [Cov:=========================>         74%][Progress:====================>         67%] [Cov:=========================>         74%][Progress:====================>         67%] [Cov:=========================>         74%][Progress:====================>         67%] [Cov:=========================>         74%][Progress:====================>         68%] [Cov:=========================>         74%][Progress:====================>         68%] [Cov:=========================>         74%][Progress:====================>         68%] [Cov:=========================>         74%][Progress:====================>         68%] [Cov:=========================>         74%][Progress:====================>         68%] [Cov:=========================>         74%][Progress:====================>         68%] [Cov:=========================>         74%][Progress:====================>         68%] [Cov:=========================>         74%][Progress:====================>         68%] [Cov:=========================>         74%][Progress:====================>         68%] [Cov:=========================>         74%][Progress:====================>         68%] [Cov:=========================>         74%][Progress:====================>         68%] [Cov:=========================>         74%][Progress:====================>         68%] [Cov:=========================>         74%][Progress:====================>         68%] [Cov:=========================>         74%][Progress:====================>         68%] [Cov:=========================>         74%][Progress:====================>         68%] [Cov:=========================>         74%][Progress:====================>         69%] [Cov:=========================>         74%][Progress:====================>         69%] [Cov:=========================>         74%][Progress:====================>         69%] [Cov:=========================>         74%][Progress:====================>         69%] [Cov:=========================>         74%][Progress:====================>         69%] [Cov:=========================>         74%][Progress:====================>         69%] [Cov:=========================>         74%][Progress:====================>         69%] [Cov:=========================>         74%][Progress:====================>         69%] [Cov:=========================>         74%][Progress:====================>         69%] [Cov:=========================>         74%][Progress:====================>         69%] [Cov:=========================>         74%][Progress:====================>         69%] [Cov:=========================>         74%][Progress:====================>         69%] [Cov:=========================>         74%][Progress:====================>         69%] [Cov:=========================>         74%][Progress:====================>         69%] [Cov:=========================>         74%][Progress:=====================>        70%] [Cov:=========================>         74%][Progress:=====================>        70%] [Cov:=========================>         74%][Progress:=====================>        70%] [Cov:=========================>         74%][Progress:=====================>        70%] [Cov:=========================>         74%][Progress:=====================>        70%] [Cov:=========================>         74%][Progress:=====================>        70%] [Cov:=========================>         74%][Progress:=====================>        70%] [Cov:=========================>         74%][Progress:=====================>        70%] [Cov:=========================>         74%][Progress:=====================>        70%] [Cov:=========================>         74%][Progress:=====================>        70%] [Cov:=========================>         74%][Progress:=====================>        70%] [Cov:=========================>         74%][Progress:=====================>        70%] [Cov:=========================>         74%][Progress:=====================>        70%] [Cov:=========================>         74%][Progress:=====================>        71%] [Cov:=========================>         74%][Progress:=====================>        71%] [Cov:=========================>         74%][Progress:=====================>        71%] [Cov:=========================>         74%][Progress:=====================>        71%] [Cov:=========================>         74%][Progress:=====================>        71%] [Cov:=========================>         74%][Progress:=====================>        71%] [Cov:=========================>         74%][Progress:=====================>        71%] [Cov:=========================>         74%][Progress:=====================>        71%] [Cov:=========================>         74%][Progress:=====================>        71%] [Cov:=========================>         74%][Progress:=====================>        71%] [Cov:=========================>         74%][Progress:=====================>        71%] [Cov:=========================>         74%][Progress:=====================>        71%] [Cov:=========================>         74%][Progress:=====================>        71%] [Cov:=========================>         74%][Progress:=====================>        72%] [Cov:=========================>         74%][Progress:=====================>        72%] [Cov:=========================>         74%][Progress:=====================>        72%] [Cov:=========================>         74%][Progress:=====================>        72%] [Cov:=========================>         74%][Progress:=====================>        72%] [Cov:=========================>         74%][Progress:=====================>        72%] [Cov:=========================>         74%][Progress:=====================>        72%] [Cov:=========================>         74%][Progress:=====================>        72%] [Cov:=========================>         74%][Progress:=====================>        72%] [Cov:=========================>         74%][Progress:=====================>        72%] [Cov:=========================>         74%][Progress:=====================>        72%] [Cov:=========================>         74%][Progress:=====================>        73%] [Cov:=========================>         74%][Progress:=====================>        73%] [Cov:=========================>         74%][Progress:=====================>        73%] [Cov:=========================>         74%][Progress:=====================>        73%] [Cov:=========================>         74%][Progress:=====================>        73%] [Cov:=========================>         74%][Progress:=====================>        73%] [Cov:=========================>         74%][Progress:=====================>        73%] [Cov:=========================>         74%][Progress:=====================>        73%] [Cov:=========================>         74%][Progress:=====================>        73%] [Cov:=========================>         74%][Progress:=====================>        73%] [Cov:=========================>         74%][Progress:=====================>        73%] [Cov:=========================>         74%][Progress:=====================>        73%] [Cov:=========================>         74%][Progress:======================>       74%] [Cov:=========================>         74%][Progress:======================>       74%] [Cov:=========================>         74%][Progress:======================>       74%] [Cov:=========================>         74%][Progress:======================>       74%] [Cov:=========================>         74%][Progress:======================>       74%] [Cov:=========================>         74%][Progress:======================>       74%] [Cov:=========================>         74%][Progress:======================>       74%] [Cov:=========================>         74%][Progress:======================>       74%] [Cov:=========================>         74%][Progress:======================>       74%] [Cov:=========================>         74%][Progress:======================>       74%] [Cov:=========================>         74%][Progress:======================>       74%] [Cov:=========================>         74%][Progress:======================>       74%] [Cov:=========================>         74%][Progress:======================>       75%] [Cov:=========================>         74%][Progress:======================>       75%] [Cov:=========================>         74%][Progress:======================>       75%] [Cov:=========================>         74%][Progress:======================>       75%] [Cov:=========================>         74%][Progress:======================>       75%] [Cov:=========================>         74%][Progress:======================>       75%] [Cov:=========================>         74%][Progress:======================>       75%] [Cov:=========================>         74%][Progress:======================>       75%] [Cov:=========================>         74%][Progress:======================>       75%] [Cov:=========================>         74%][Progress:======================>       75%] [Cov:=========================>         74%][Progress:======================>       75%] [Cov:=========================>         74%][Progress:======================>       75%] [Cov:=========================>         74%][Progress:======================>       75%] [Cov:=========================>         74%][Progress:======================>       75%] [Cov:=========================>         74%][Progress:======================>       75%] [Cov:=========================>         74%][Progress:======================>       76%] [Cov:=========================>         74%][Progress:======================>       76%] [Cov:=========================>         74%][Progress:======================>       76%] [Cov:=========================>         74%][Progress:======================>       76%] [Cov:=========================>         74%][Progress:======================>       76%] [Cov:=========================>         74%][Progress:======================>       76%] [Cov:=========================>         74%][Progress:======================>       76%] [Cov:=========================>         74%][Progress:======================>       76%] [Cov:=========================>         74%][Progress:======================>       76%] [Cov:=========================>         74%][Progress:======================>       76%] [Cov:=========================>         74%][Progress:======================>       76%] [Cov:=========================>         74%][Progress:======================>       76%] [Cov:=========================>         74%][Progress:======================>       76%] [Cov:=========================>         74%][Progress:=======================>      77%] [Cov:=========================>         74%][Progress:=======================>      77%] [Cov:=========================>         74%][Progress:=======================>      77%] [Cov:=========================>         74%][Progress:=======================>      77%] [Cov:=========================>         74%][Progress:=======================>      77%] [Cov:=========================>         74%][Progress:=======================>      77%] [Cov:=========================>         74%][Progress:=======================>      77%] [Cov:=========================>         74%][Progress:=======================>      77%] [Cov:=========================>         74%][Progress:=======================>      77%] [Cov:=========================>         74%][Progress:=======================>      77%] [Cov:=========================>         74%][Progress:=======================>      77%] [Cov:=========================>         74%][Progress:=======================>      77%] [Cov:=========================>         74%][Progress:=======================>      77%] [Cov:=========================>         74%][Progress:=======================>      77%] [Cov:=========================>         74%][Progress:=======================>      77%] [Cov:=========================>         74%][Progress:=======================>      78%] [Cov:=========================>         74%][Progress:=======================>      78%] [Cov:=========================>         74%][Progress:=======================>      78%] [Cov:=========================>         74%][Progress:=======================>      78%] [Cov:=========================>         74%][Progress:=======================>      78%] [Cov:=========================>         74%][Progress:=======================>      78%] [Cov:=========================>         74%][Progress:=======================>      78%] [Cov:=========================>         74%][Progress:=======================>      78%] [Cov:=========================>         74%][Progress:=======================>      78%] [Cov:=========================>         74%][Progress:=======================>      78%] [Cov:=========================>         74%][Progress:=======================>      78%] [Cov:=========================>         74%][Progress:=======================>      78%] [Cov:=========================>         74%][Progress:=======================>      79%] [Cov:=========================>         74%][Progress:=======================>      79%] [Cov:=========================>         74%][Progress:=======================>      79%] [Cov:=========================>         74%][Progress:=======================>      79%] [Cov:=========================>         74%][Progress:=======================>      79%] [Cov:=========================>         74%][Progress:=======================>      79%] [Cov:=========================>         74%][Progress:=======================>      79%] [Cov:=========================>         74%][Progress:=======================>      79%] [Cov:=========================>         74%][Progress:=======================>      79%] [Cov:=========================>         74%][Progress:=======================>      79%] [Cov:=========================>         74%][Progress:=======================>      79%] [Cov:=========================>         74%][Progress:=======================>      79%] [Cov:=========================>         74%][Progress:=======================>      79%] [Cov:=========================>         74%][Progress:=======================>      79%] [Cov:=========================>         74%][Progress:=======================>      79%] [Cov:=========================>         74%][Progress:=======================>      79%] [Cov:=========================>         74%][Progress:=======================>      79%] [Cov:=========================>         74%][Progress:=======================>      79%] [Cov:=========================>         74%][Progress:=======================>      79%] [Cov:=========================>         74%][Progress:========================>     80%] [Cov:=========================>         74%][Progress:========================>     80%] [Cov:=========================>         74%][Progress:========================>     80%] [Cov:=========================>         74%][Progress:========================>     80%] [Cov:=========================>         74%][Progress:========================>     80%] [Cov:=========================>         74%][Progress:========================>     80%] [Cov:=========================>         74%][Progress:========================>     80%] [Cov:=========================>         74%][Progress:========================>     80%] [Cov:=========================>         74%][Progress:========================>     80%] [Cov:=========================>         74%][Progress:========================>     80%] [Cov:=========================>         74%][Progress:========================>     80%] [Cov:=========================>         74%][Progress:========================>     80%] [Cov:=========================>         74%][Progress:========================>     80%] [Cov:=========================>         74%][Progress:========================>     80%] [Cov:=========================>         74%][Progress:========================>     80%] [Cov:=========================>         74%][Progress:========================>     80%] [Cov:=========================>         74%][Progress:========================>     80%] [Cov:=========================>         74%][Progress:========================>     80%] [Cov:=========================>         74%][Progress:========================>     80%] [Cov:=========================>         74%][Progress:========================>     80%] [Cov:=========================>         74%][Progress:========================>     80%] [Cov:=========================>         74%][Progress:========================>     80%] [Cov:=========================>         74%][Progress:========================>     81%] [Cov:=========================>         74%][Progress:========================>     81%] [Cov:=========================>         74%][Progress:========================>     81%] [Cov:=========================>         74%][Progress:========================>     81%] [Cov:=========================>         74%][Progress:========================>     81%] [Cov:=========================>         74%][Progress:========================>     81%] [Cov:=========================>         74%][Progress:========================>     81%] [Cov:=========================>         74%][Progress:========================>     81%] [Cov:=========================>         74%][Progress:========================>     81%] [Cov:=========================>         74%][Progress:========================>     81%] [Cov:=========================>         74%][Progress:========================>     81%] [Cov:=========================>         74%][Progress:========================>     81%] [Cov:=========================>         74%][Progress:========================>     81%] [Cov:=========================>         74%][Progress:========================>     81%] [Cov:=========================>         74%][Progress:========================>     81%] [Cov:=========================>         74%][Progress:========================>     81%] [Cov:=========================>         74%][Progress:========================>     81%] [Cov:=========================>         74%][Progress:========================>     81%] [Cov:=========================>         74%][Progress:========================>     81%] [Cov:=========================>         74%][Progress:========================>     81%] [Cov:=========================>         74%][Progress:========================>     82%] [Cov:=========================>         74%][Progress:========================>     82%] [Cov:=========================>         74%][Progress:========================>     82%] [Cov:=========================>         74%][Progress:========================>     82%] [Cov:=========================>         74%][Progress:========================>     82%] [Cov:=========================>         74%][Progress:========================>     82%] [Cov:=========================>         74%][Progress:========================>     82%] [Cov:=========================>         74%][Progress:========================>     82%] [Cov:=========================>         74%][Progress:========================>     82%] [Cov:=========================>         74%][Progress:========================>     82%] [Cov:=========================>         74%][Progress:========================>     82%] [Cov:=========================>         74%][Progress:========================>     82%] [Cov:=========================>         74%][Progress:========================>     82%] [Cov:=========================>         74%][Progress:========================>     82%] [Cov:=========================>         74%][Progress:========================>     82%] [Cov:=========================>         74%][Progress:========================>     83%] [Cov:=========================>         74%][Progress:========================>     83%] [Cov:=========================>         74%][Progress:========================>     83%] [Cov:=========================>         74%][Progress:========================>     83%] [Cov:=========================>         74%][Progress:========================>     83%] [Cov:=========================>         74%][Progress:========================>     83%] [Cov:=========================>         74%][Progress:========================>     83%] [Cov:=========================>         74%][Progress:========================>     83%] [Cov:=========================>         74%][Progress:========================>     83%] [Cov:=========================>         74%][Progress:========================>     83%] [Cov:=========================>         74%][Progress:========================>     83%] [Cov:=========================>         74%][Progress:========================>     83%] [Cov:=========================>         74%][Progress:========================>     83%] [Cov:=========================>         74%][Progress:========================>     83%] [Cov:=========================>         74%][Progress:=========================>    84%] [Cov:=========================>         74%][Progress:=========================>    84%] [Cov:=========================>         74%][Progress:=========================>    84%] [Cov:=========================>         74%][Progress:=========================>    84%] [Cov:=========================>         74%][Progress:=========================>    84%] [Cov:=========================>         74%][Progress:=========================>    84%] [Cov:=========================>         74%][Progress:=========================>    84%] [Cov:=========================>         74%][Progress:=========================>    84%] [Cov:=========================>         74%][Progress:=========================>    84%] [Cov:=========================>         74%][Progress:=========================>    84%] [Cov:=========================>         74%][Progress:=========================>    84%] [Cov:=========================>         74%][Progress:=========================>    84%] [Cov:=========================>         74%][Progress:=========================>    84%] [Cov:=========================>         74%][Progress:=========================>    84%] [Cov:=========================>         74%][Progress:=========================>    85%] [Cov:=========================>         74%][Progress:=========================>    85%] [Cov:=========================>         74%][Progress:=========================>    85%] [Cov:=========================>         74%][Progress:=========================>    85%] [Cov:=========================>         74%][Progress:=========================>    85%] [Cov:=========================>         74%][Progress:=========================>    85%] [Cov:=========================>         74%][Progress:=========================>    85%] [Cov:=========================>         74%][Progress:=========================>    85%] [Cov:=========================>         74%][Progress:=========================>    85%] [Cov:=========================>         74%][Progress:=========================>    85%] [Cov:=========================>         74%][Progress:=========================>    85%] [Cov:=========================>         74%][Progress:=========================>    85%] [Cov:=========================>         74%][Progress:=========================>    85%] [Cov:=========================>         74%][Progress:=========================>    85%] [Cov:=========================>         74%][Progress:=========================>    85%] [Cov:=========================>         74%][Progress:=========================>    86%] [Cov:=========================>         74%][Progress:=========================>    86%] [Cov:=========================>         74%][Progress:=========================>    86%] [Cov:=========================>         74%][Progress:=========================>    86%] [Cov:=========================>         74%][Progress:=========================>    86%] [Cov:=========================>         74%][Progress:=========================>    86%] [Cov:=========================>         74%][Progress:=========================>    86%] [Cov:=========================>         74%][Progress:=========================>    86%] [Cov:=========================>         74%][Progress:=========================>    86%] [Cov:=========================>         74%][Progress:=========================>    86%] [Cov:=========================>         74%][Progress:=========================>    86%] [Cov:=========================>         74%][Progress:=========================>    86%] [Cov:=========================>         74%][Progress:=========================>    86%] [Cov:=========================>         74%][Progress:=========================>    86%] [Cov:=========================>         74%][Progress:==========================>   87%] [Cov:=========================>         74%][Progress:==========================>   87%] [Cov:=========================>         74%][Progress:==========================>   87%] [Cov:=========================>         74%][Progress:==========================>   87%] [Cov:=========================>         74%][Progress:==========================>   87%] [Cov:=========================>         74%][Progress:==========================>   87%] [Cov:=========================>         74%][Progress:==========================>   87%] [Cov:=========================>         74%][Progress:==========================>   87%] [Cov:=========================>         74%][Progress:==========================>   87%] [Cov:=========================>         74%][Progress:==========================>   87%] [Cov:=========================>         74%][Progress:==========================>   87%] [Cov:=========================>         74%][Progress:==========================>   87%] [Cov:=========================>         74%][Progress:==========================>   87%] [Cov:=========================>         74%][Progress:==========================>   87%] [Cov:=========================>         74%][Progress:==========================>   88%] [Cov:=========================>         74%][Progress:==========================>   88%] [Cov:=========================>         74%][Progress:==========================>   88%] [Cov:=========================>         74%][Progress:==========================>   88%] [Cov:=========================>         74%][Progress:==========================>   88%] [Cov:=========================>         74%][Progress:==========================>   88%] [Cov:=========================>         74%][Progress:==========================>   88%] [Cov:=========================>         74%][Progress:==========================>   88%] [Cov:=========================>         74%][Progress:==========================>   88%] [Cov:=========================>         74%][Progress:==========================>   88%] [Cov:=========================>         74%][Progress:==========================>   88%] [Cov:=========================>         74%][Progress:==========================>   88%] [Cov:=========================>         74%][Progress:==========================>   88%] [Cov:=========================>         74%][Progress:==========================>   88%] [Cov:=========================>         74%][Progress:==========================>   88%] [Cov:=========================>         74%][Progress:==========================>   88%] [Cov:=========================>         74%][Progress:==========================>   89%] [Cov:=========================>         74%][Progress:==========================>   89%] [Cov:=========================>         74%][Progress:==========================>   89%] [Cov:=========================>         74%][Progress:==========================>   89%] [Cov:=========================>         74%][Progress:==========================>   89%] [Cov:=========================>         74%][Progress:==========================>   89%] [Cov:=========================>         74%][Progress:==========================>   89%] [Cov:=========================>         74%][Progress:==========================>   89%] [Cov:=========================>         74%][Progress:==========================>   89%] [Cov:=========================>         74%][Progress:==========================>   89%] [Cov:=========================>         74%][Progress:==========================>   89%] [Cov:=========================>         74%][Progress:==========================>   89%] [Cov:=========================>         74%][Progress:==========================>   89%] [Cov:=========================>         74%][Progress:==========================>   89%] [Cov:=========================>         74%][Progress:==========================>   89%] [Cov:=========================>         74%][Progress:===========================>  90%] [Cov:=========================>         74%][Progress:===========================>  90%] [Cov:=========================>         74%][Progress:===========================>  90%] [Cov:=========================>         74%][Progress:===========================>  90%] [Cov:=========================>         74%][Progress:===========================>  90%] [Cov:=========================>         74%][Progress:===========================>  90%] [Cov:=========================>         74%][Progress:===========================>  90%] [Cov:=========================>         74%][Progress:===========================>  90%] [Cov:=========================>         74%][Progress:===========================>  90%] [Cov:=========================>         74%][Progress:===========================>  90%] [Cov:=========================>         74%][Progress:===========================>  90%] [Cov:=========================>         74%][Progress:===========================>  90%] [Cov:=========================>         74%][Progress:===========================>  90%] [Cov:=========================>         74%][Progress:===========================>  90%] [Cov:=========================>         74%][Progress:===========================>  90%] [Cov:=========================>         74%][Progress:===========================>  90%] [Cov:=========================>         74%][Progress:===========================>  90%] [Cov:=========================>         74%][Progress:===========================>  90%] [Cov:=========================>         74%][Progress:===========================>  90%] [Cov:=========================>         74%][Progress:===========================>  90%] [Cov:=========================>         74%][Progress:===========================>  91%] [Cov:=========================>         74%][Progress:===========================>  91%] [Cov:=========================>         74%][Progress:===========================>  91%] [Cov:=========================>         74%][Progress:===========================>  91%] [Cov:=========================>         74%][Progress:===========================>  91%] [Cov:=========================>         74%][Progress:===========================>  91%] [Cov:=========================>         74%][Progress:===========================>  91%] [Cov:=========================>         74%][Progress:===========================>  91%] [Cov:=========================>         74%][Progress:===========================>  91%] [Cov:=========================>         74%][Progress:===========================>  91%] [Cov:=========================>         74%][Progress:===========================>  91%] [Cov:=========================>         74%][Progress:===========================>  91%] [Cov:=========================>         74%][Progress:===========================>  91%] [Cov:=========================>         74%][Progress:===========================>  91%] [Cov:=========================>         74%][Progress:===========================>  91%] [Cov:=========================>         74%][Progress:===========================>  91%] [Cov:=========================>         74%][Progress:===========================>  91%] [Cov:=========================>         74%][Progress:===========================>  91%] [Cov:=========================>         74%][Progress:===========================>  91%] [Cov:=========================>         74%][Progress:===========================>  91%] [Cov:=========================>         74%][Progress:===========================>  92%] [Cov:=========================>         74%][Progress:===========================>  92%] [Cov:=========================>         74%][Progress:===========================>  92%] [Cov:=========================>         74%][Progress:===========================>  92%] [Cov:=========================>         74%][Progress:===========================>  92%] [Cov:=========================>         74%][Progress:===========================>  92%] [Cov:=========================>         74%][Progress:===========================>  92%] [Cov:=========================>         74%][Progress:===========================>  92%] [Cov:=========================>         74%][Progress:===========================>  92%] [Cov:=========================>         74%][Progress:===========================>  92%] [Cov:=========================>         74%][Progress:===========================>  92%] [Cov:=========================>         74%][Progress:===========================>  92%] [Cov:=========================>         74%][Progress:===========================>  92%] [Cov:=========================>         74%][Progress:===========================>  92%] [Cov:=========================>         74%][Progress:===========================>  92%] [Cov:=========================>         74%][Progress:===========================>  92%] [Cov:=========================>         74%][Progress:===========================>  92%] [Cov:=========================>         74%][Progress:===========================>  92%] [Cov:=========================>         74%][Progress:===========================>  92%] [Cov:=========================>         74%][Progress:===========================>  92%] [Cov:=========================>         74%][Progress:===========================>  93%] [Cov:=========================>         74%][Progress:===========================>  93%] [Cov:=========================>         74%][Progress:===========================>  93%] [Cov:=========================>         74%][Progress:===========================>  93%] [Cov:=========================>         74%][Progress:===========================>  93%] [Cov:=========================>         74%][Progress:===========================>  93%] [Cov:=========================>         74%][Progress:===========================>  93%] [Cov:=========================>         74%][Progress:===========================>  93%] [Cov:=========================>         74%][Progress:===========================>  93%] [Cov:=========================>         74%][Progress:===========================>  93%] [Cov:=========================>         74%][Progress:===========================>  93%] [Cov:=========================>         74%][Progress:===========================>  93%] [Cov:=========================>         74%][Progress:===========================>  93%] [Cov:=========================>         74%][Progress:===========================>  93%] [Cov:=========================>         74%][Progress:===========================>  93%] [Cov:=========================>         74%][Progress:===========================>  93%] [Cov:=========================>         74%][Progress:===========================>  93%] [Cov:=========================>         74%][Progress:===========================>  93%] [Cov:=========================>         74%][Progress:===========================>  93%] [Cov:=========================>         74%][Progress:===========================>  93%] [Cov:=========================>         74%][Progress:============================> 94%] [Cov:=========================>         74%][Progress:============================> 94%] [Cov:=========================>         74%][Progress:============================> 94%] [Cov:=========================>         74%][Progress:============================> 94%] [Cov:=========================>         74%][Progress:============================> 94%] [Cov:=========================>         74%][Progress:============================> 94%] [Cov:=========================>         74%][Progress:============================> 94%] [Cov:=========================>         74%][Progress:============================> 94%] [Cov:=========================>         74%][Progress:============================> 94%] [Cov:=========================>         74%][Progress:============================> 94%] [Cov:=========================>         74%][Progress:============================> 94%] [Cov:=========================>         74%][Progress:============================> 94%] [Cov:=========================>         74%][Progress:============================> 94%] [Cov:=========================>         74%][Progress:============================> 94%] [Cov:=========================>         74%][Progress:============================> 94%] [Cov:=========================>         74%][Progress:============================> 94%] [Cov:=========================>         74%][Progress:============================> 94%] [Cov:=========================>         74%][Progress:============================> 94%] [Cov:=========================>         74%][Progress:============================> 95%] [Cov:=========================>         74%][Progress:============================> 95%] [Cov:=========================>         74%][Progress:============================> 95%] [Cov:=========================>         74%][Progress:============================> 95%] [Cov:=========================>         74%][Progress:============================> 95%] [Cov:=========================>         74%][Progress:============================> 95%] [Cov:=========================>         74%][Progress:============================> 95%] [Cov:=========================>         74%][Progress:============================> 95%] [Cov:=========================>         74%][Progress:============================> 95%] [Cov:=========================>         74%][Progress:============================> 95%] [Cov:=========================>         74%][Progress:============================> 95%] [Cov:=========================>         74%][Progress:============================> 95%] [Cov:=========================>         74%][Progress:============================> 95%] [Cov:=========================>         74%][Progress:============================> 95%] [Cov:=========================>         74%][Progress:============================> 95%] [Cov:=========================>         74%][Progress:============================> 95%] [Cov:=========================>         74%][Progress:============================> 95%] [Cov:=========================>         74%][Progress:============================> 95%] [Cov:==========================>        76%][Progress:============================> 95%] [Cov:==========================>        76%][Progress:============================> 95%] [Cov:==========================>        76%][Progress:============================> 96%] [Cov:==========================>        76%][Progress:============================> 96%] [Cov:==========================>        76%][Progress:============================> 96%] [Cov:==========================>        76%][Progress:============================> 96%] [Cov:==========================>        76%][Progress:============================> 96%] [Cov:==========================>        76%][Progress:============================> 96%] [Cov:==========================>        76%][Progress:============================> 96%] [Cov:==========================>        76%][Progress:============================> 96%] [Cov:==========================>        76%][Progress:============================> 96%] [Cov:==========================>        76%][Progress:============================> 96%] [Cov:==========================>        76%][Progress:============================> 96%] [Cov:==========================>        76%][Progress:============================> 96%] [Cov:==========================>        76%][Progress:============================> 96%] [Cov:==========================>        76%][Progress:============================> 96%] [Cov:==========================>        76%][Progress:============================> 96%] [Cov:==========================>        76%][Progress:============================> 96%] [Cov:==========================>        76%][Progress:============================> 96%] [Cov:==========================>        76%][Progress:=============================>97%] [Cov:==========================>        76%][Progress:=============================>97%] [Cov:==========================>        76%][Progress:=============================>97%] [Cov:==========================>        76%][Progress:=============================>97%] [Cov:==========================>        76%][Progress:=============================>97%] [Cov:==========================>        76%][Progress:=============================>97%] [Cov:==========================>        76%][Progress:=============================>97%] [Cov:==========================>        76%][Progress:=============================>97%] [Cov:==========================>        76%][Progress:=============================>97%] [Cov:==========================>        76%][Progress:=============================>97%] [Cov:==========================>        76%][Progress:=============================>97%] [Cov:==========================>        76%][Progress:=============================>97%] [Cov:==========================>        76%][Progress:=============================>97%] [Cov:==========================>        76%][Progress:=============================>97%] [Cov:==========================>        76%][Progress:=============================>97%] [Cov:==========================>        76%][Progress:=============================>97%] [Cov:==========================>        76%][Progress:=============================>97%] [Cov:==========================>        76%][Progress:=============================>97%] [Cov:==========================>        76%][Progress:=============================>98%] [Cov:==========================>        76%][Progress:=============================>98%] [Cov:==========================>        76%][Progress:=============================>98%] [Cov:==========================>        76%][Progress:=============================>98%] [Cov:==========================>        76%][Progress:=============================>98%] [Cov:==========================>        76%][Progress:=============================>98%] [Cov:==========================>        76%][Progress:=============================>98%] [Cov:==========================>        76%][Progress:=============================>98%] [Cov:==========================>        76%][Progress:=============================>98%] [Cov:==========================>        76%][Progress:=============================>98%] [Cov:==========================>        76%][Progress:=============================>98%] [Cov:==========================>        76%][Progress:=============================>98%] [Cov:==========================>        76%][Progress:=============================>98%] [Cov:==========================>        76%][Progress:=============================>98%] [Cov:==========================>        76%][Progress:=============================>98%] [Cov:==========================>        76%][Progress:=============================>98%] [Cov:==========================>        76%][Progress:=============================>98%] [Cov:==========================>        76%][Progress:=============================>98%] [Cov:==========================>        76%][Progress:=============================>98%] [Cov:==========================>        76%][Progress:=============================>98%] [Cov:==========================>        76%][Progress:=============================>99%] [Cov:==========================>        76%][Progress:=============================>99%] [Cov:==========================>        76%][Progress:=============================>99%] [Cov:==========================>        76%][Progress:=============================>99%] [Cov:==========================>        76%][Progress:=============================>99%] [Cov:==========================>        76%][Progress:=============================>99%] [Cov:==========================>        76%][Progress:=============================>99%] [Cov:==========================>        76%][Progress:=============================>99%] [Cov:==========================>        76%][Progress:=============================>99%] [Cov:==========================>        76%][Progress:=============================>99%] [Cov:==========================>        76%][Progress:=============================>99%] [Cov:==========================>        76%][Progress:=============================>99%] [Cov:==========================>        76%][Progress:=============================>99%] [Cov:==========================>        76%][Progress:=============================>99%] [Cov:==========================>        76%][Progress:=============================>99%] [Cov:==========================>        76%][Progress:=============================>99%] [Cov:==========================>        76%][Progress:=============================>99%] [Cov:==========================>        76%][Progress:=============================>99%] [Cov:==========================>        76%][Progress:==============================100%] [Cov:==========================>        76%][Progress:==============================100%] [Cov:==========================>        76%][Progress:==============================100%] [Cov:==========================>        76%][Progress:==============================100%] [Cov:==========================>        76%][Progress:==============================100%] [Cov:==========================>        76%][Progress:==============================100%] [Cov:==========================>        76%][Progress:==============================100%] [Cov:==========================>        76%][Progress:==============================100%] [Cov:==========================>        76%][Progress:==============================100%] [Cov:==========================>        76%][Progress:==============================100%] [Cov:==========================>        76%][Progress:==============================100%] [Cov:==========================>        76%][Progress:==============================100%] [Cov:==========================>        76%][Progress:==============================100%] [Cov:==========================>        76%][Progress:==============================100%] [Cov:==========================>        76%]
* Search finished after 101s and 1332 generations, 320301 statements, best individual has fitness: 106.0
* Generated before the refinement 24 tests with total length 91
statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("(!Ajp^t<Ok")
statement is: java.io.StreamTokenizer(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StreamTokenizer
statement code is: StreamTokenizer streamTokenizer = new StreamTokenizer(arg0)
statement is: umd.cs.shop.JSPredicateForm(Ljava/io/StreamTokenizer;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class umd.cs.shop.JSPredicateForm
statement code is: JSPredicateForm jSPredicateForm = new JSPredicateForm(arg0)
test data is: StringReader stringReader = new StringReader("(!Ajp^t<Ok");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSPredicateForm jSPredicateForm = new JSPredicateForm(streamTokenizer);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("(Ajp^t<Ok");
        StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
        JSPredicateForm jSPredicateForm = new JSPredicateForm(streamTokenizer);
        int intValue = 1234;
        double doubleValue = 12.34;
        String stringValue = "Hello World";
        char charValue = 'H';
    }
}
statement is: StringReader stringReader = new StringReader("(Ajp^t<Ok"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JSPredicateForm jSPredicateForm = new JSPredicateForm(streamTokenizer), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: int intValue = 1234, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: double doubleValue = 12.34, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String stringValue = "Hello World", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: char charValue = 'H', class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
* this is vulnerable: int _int = 1234
* this is vulnerable: double _double = 12.34
* this is vulnerable: String string = "Hello World"
* this is vulnerable: char _char = 'H'
TestCase is: String string = "(Ajp^t<Ok";
StringReader stringReader = new StringReader(string);
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSPredicateForm jSPredicateForm = new JSPredicateForm(streamTokenizer);
int _int = 1234;
double _double = 12.34;
String string = "Hello World";
char _char = 'H';

statement is: umd.cs.shop.JSPredicateForm(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class umd.cs.shop.JSPredicateForm
statement code is: JSPredicateForm jSPredicateForm = new JSPredicateForm((String) null)
statement is: print()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: jSPredicateForm.print()
test data is: JSPredicateForm jSPredicateForm = new JSPredicateForm((String) null);
jSPredicateForm.print();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        JSPredicateForm jSPredicateForm = new JSPredicateForm("John Doe");
        jSPredicateForm.print();
    }
}
statement is: JSPredicateForm jSPredicateForm = new JSPredicateForm("John Doe"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: jSPredicateForm.print(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: jSPredicateForm.print() target is: jSPredicateForm method is: print()
source statement: umd.cs.shop.JSPredicateForm(Ljava/lang/String;)V callee: VariableReference: Statement 0, type umd.cs.shop.JSPredicateFormindex is: 1
Matched Method is: print()V
TestCase is: String string = "John Doe";
JSPredicateForm jSPredicateForm = new JSPredicateForm(string);
((JSPredicateForm) string).print();

statement is: umd.cs.shop.JSPredicateForm(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class umd.cs.shop.JSPredicateForm
statement code is: JSPredicateForm jSPredicateForm = new JSPredicateForm("(")
test data is: JSPredicateForm jSPredicateForm = new JSPredicateForm("(");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        JSPredicateForm jSPredicateForm = new JSPredicateForm("(not (and (= 'apple' 'banana') (= 'orange' 'mango')))");
    }
}
statement is: JSPredicateForm jSPredicateForm = new JSPredicateForm("(not (and (= 'apple' 'banana') (= 'orange' 'mango')))"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase is: String string = "(not (and (= 'apple' 'banana') (= 'orange' 'mango')))";
JSPredicateForm jSPredicateForm = new JSPredicateForm(string);

statement is: umd.cs.shop.JSPredicateForm(Ljava/io/StreamTokenizer;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class umd.cs.shop.JSPredicateForm
statement code is: JSPredicateForm jSPredicateForm = new JSPredicateForm((StreamTokenizer) null)
test data is: JSPredicateForm jSPredicateForm = new JSPredicateForm((StreamTokenizer) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        JSPredicateForm jSPredicateForm = new JSPredicateForm("(name == 'John Doe' && age >= 18) || (name == 'Jane Smith' && age >= 21)");
    }
}
statement is: JSPredicateForm jSPredicateForm = new JSPredicateForm("(name == 'John Doe' && age >= 18) || (name == 'Jane Smith' && age >= 21)"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase is: String string = "(name == 'John Doe' && age >= 18) || (name == 'Jane Smith' && age >= 21)";
JSPredicateForm jSPredicateForm = new JSPredicateForm((StreamTokenizer) string);

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("the tokenizer is SPACE!")
statement is: java.io.StreamTokenizer(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StreamTokenizer
statement code is: StreamTokenizer streamTokenizer = new StreamTokenizer(arg0)
statement is: umd.cs.shop.JSTerm(Ljava/io/StreamTokenizer;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class umd.cs.shop.JSTerm
statement code is: JSTerm jSTerm = new JSTerm(arg0)
statement is: JSPredicateFormInit(Ljava/io/StreamTokenizer;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: jSTerm.JSPredicateFormInit(arg0)
test data is: StringReader stringReader = new StringReader("the tokenizer is SPACE!");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
jSTerm.JSPredicateFormInit(streamTokenizer);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("the tokenizer is SPACE!");
        StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
        JSTerm jSTerm = new JSTerm(streamTokenizer);
        jSTerm.JSPredicateFormInit(streamTokenizer);
    }
}
statement is: StringReader stringReader = new StringReader("the tokenizer is SPACE!"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JSTerm jSTerm = new JSTerm(streamTokenizer), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: jSTerm.JSPredicateFormInit(streamTokenizer), class spoon.support.reflect.code.CtInvocationImpl
invocation is: jSTerm.JSPredicateFormInit(streamTokenizer) target is: jSTerm method is: JSPredicateFormInit(StreamTokenizer)
source statement: umd.cs.shop.JSTerm(Ljava/io/StreamTokenizer;)V callee: VariableReference: Statement 2, type umd.cs.shop.JSTermindex is: 3
Matched Method is: JSPredicateFormInit(Ljava/io/StreamTokenizer;)V
TestCase is: String string = "the tokenizer is SPACE!";
StringReader stringReader = new StringReader(string);
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
((JSPredicateForm) streamTokenizer).JSPredicateFormInit(streamTokenizer);

statement is: umd.cs.shop.JSPredicateForm(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class umd.cs.shop.JSPredicateForm
statement code is: JSPredicateForm jSPredicateForm = new JSPredicateForm("()rAj[^t<OP")
test data is: JSPredicateForm jSPredicateForm = new JSPredicateForm("()rAj[^t<OP");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        JSPredicateForm jSPredicateForm = new JSPredicateForm("((12.5, 3.7), (4.3, 8.9))");
    }
}
statement is: JSPredicateForm jSPredicateForm = new JSPredicateForm("((12.5, 3.7), (4.3, 8.9))"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase is: String string = "((12.5, 3.7), (4.3, 8.9))";
JSPredicateForm jSPredicateForm = new JSPredicateForm(string);

statement is: umd.cs.shop.JSPredicateForm(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class umd.cs.shop.JSPredicateForm
statement code is: JSPredicateForm jSPredicateForm = new JSPredicateForm("(qM@ 2\"\"\"VkYj")
test data is: JSPredicateForm jSPredicateForm = new JSPredicateForm("(qM@ 2\"\"\"VkYj");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        JSPredicateForm jSPredicateForm = new JSPredicateForm("(qM@ 2\"\"\"VkYj");
        // Improved test data
        JSPredicateForm jSPredicateForm = new JSPredicateForm("(p @ 5\"\"\"bBcD");
    }
}
statement is: JSPredicateForm jSPredicateForm = new JSPredicateForm("(qM@ 2\"\"\"VkYj"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: // Improved test data
JSPredicateForm jSPredicateForm = new JSPredicateForm("(p @ 5\"\"\"bBcD"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase is: String string = "(qM@ 2\"\"\"VkYj";
JSPredicateForm jSPredicateForm = new JSPredicateForm(string);
String string = "(p @ 5\"\"\"bBcD";
JSPredicateForm jSPredicateForm = new JSPredicateForm(string);

statement is: umd.cs.shop.JSPredicateForm(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class umd.cs.shop.JSPredicateForm
statement code is: JSPredicateForm jSPredicateForm = new JSPredicateForm("(%Ajp^t<Ol")
test data is: JSPredicateForm jSPredicateForm = new JSPredicateForm("(%Ajp^t<Ol");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        JSPredicateForm jSPredicateForm = new JSPredicateForm("(1234567890)");
    }
}
statement is: JSPredicateForm jSPredicateForm = new JSPredicateForm("(1234567890)"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase is: String string = "(1234567890)";
JSPredicateForm jSPredicateForm = new JSPredicateForm(string);

statement is: umd.cs.shop.JSPredicateForm(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class umd.cs.shop.JSPredicateForm
statement code is: JSPredicateForm jSPredicateForm = new JSPredicateForm("(Xj%^t<OP")
test data is: JSPredicateForm jSPredicateForm = new JSPredicateForm("(Xj%^t<OP");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        JSPredicateForm jSPredicateForm = new JSPredicateForm("John Smith");
    }
}
statement is: JSPredicateForm jSPredicateForm = new JSPredicateForm("John Smith"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase is: String string = "John Smith";
JSPredicateForm jSPredicateForm = new JSPredicateForm(string);

statement is: umd.cs.shop.JSPredicateForm(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class umd.cs.shop.JSPredicateForm
statement code is: JSPredicateForm jSPredicateForm = new JSPredicateForm("(KzD$R<]k38Cs g,5")
test data is: JSPredicateForm jSPredicateForm = new JSPredicateForm("(KzD$R<]k38Cs g,5");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        JSPredicateForm jSPredicateForm = new JSPredicateForm("(KzD$R<]k38Cs g,5)");
        // Improved test data:
        // * Changed the primitive values and Strings to more illustrative examples.
        // * Added a few more possible combinations of values to increase coverage. }}
    }
}
statement is: JSPredicateForm jSPredicateForm = new JSPredicateForm("(KzD$R<]k38Cs g,5)"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: // Improved test data:, class spoon.support.reflect.code.CtCommentImpl
statement is: // * Changed the primitive values and Strings to more illustrative examples., class spoon.support.reflect.code.CtCommentImpl
statement is: // * Added a few more possible combinations of values to increase coverage. }}, class spoon.support.reflect.code.CtCommentImpl
TestCase is: String string = "(KzD$R<]k38Cs g,5)";
JSPredicateForm jSPredicateForm = new JSPredicateForm(string);

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("Hieoz!OHh+UR8q<`()")
statement is: java.io.StreamTokenizer(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StreamTokenizer
statement code is: StreamTokenizer streamTokenizer = new StreamTokenizer(arg0)
statement is: umd.cs.shop.JSTerm(Ljava/io/StreamTokenizer;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class umd.cs.shop.JSTerm
statement code is: JSTerm jSTerm = new JSTerm(arg0)
statement is: add(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean add = arg0.add((Object) arg0)
statement is: standarizerPredicateForm()Lumd/cs/shop/JSPredicateForm; type is: class org.evosuite.testcase.statements.MethodStatement return type class umd.cs.shop.JSPredicateForm
statement code is: JSPredicateForm standarizerPredicateForm = jSTerm.standarizerPredicateForm()
statement is: print()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: jSPredicateForm.print()
test data is: StringReader stringReader = new StringReader("Hieoz!OHh+UR8q<`()");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
jSTerm.add((Object) jSTerm);
JSPredicateForm standarizerPredicateForm = jSTerm.standarizerPredicateForm();
standarizerPredicateForm.print();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        stringReader = new StringReader("This is a test string that contains a lot of characters");
        streamTokenizer = new StreamTokenizer(stringReader);
        jSTerm = new JSTerm(streamTokenizer);
        jSTerm.add(((Object) (jSTerm)));
        standarizerPredicateForm = jSTerm.standarizerPredicateForm();
    }
}
statement is: stringReader = new StringReader("This is a test string that contains a lot of characters"), class spoon.support.reflect.code.CtAssignmentImpl
statement is: streamTokenizer = new StreamTokenizer(stringReader), class spoon.support.reflect.code.CtAssignmentImpl
statement is: jSTerm = new JSTerm(streamTokenizer), class spoon.support.reflect.code.CtAssignmentImpl
statement is: jSTerm.add(((Object) (jSTerm))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: jSTerm.add(((Object) (jSTerm))) target is: jSTerm method is: add(java.lang.Object)
statement is: standarizerPredicateForm = jSTerm.standarizerPredicateForm(), class spoon.support.reflect.code.CtAssignmentImpl
statement is: umd.cs.shop.JSPredicateForm()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class umd.cs.shop.JSPredicateForm
statement code is: JSPredicateForm jSPredicateForm = new JSPredicateForm()
statement is: toStr()Ljava/lang/StringBuffer; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.StringBuffer
statement code is: StringBuffer str = jSPredicateForm.toStr()
test data is: JSPredicateForm jSPredicateForm = new JSPredicateForm();
jSPredicateForm.toStr();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        JSPredicateForm jSPredicateForm = new JSPredicateForm();
        // Improved test data
        jSPredicateForm.setPredicate("contains");
        jSPredicateForm.setOperand1(new String[]{ "John", "Doe" });
        jSPredicateForm.setOperand2(new String[]{ "Smith" });
    }
}
statement is: JSPredicateForm jSPredicateForm = new JSPredicateForm(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: // Improved test data
jSPredicateForm.setPredicate("contains"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Improved test data
jSPredicateForm.setPredicate("contains") target is: jSPredicateForm method is: setPredicate(java.lang.String)
statement is: jSPredicateForm.setOperand1(new String[]{ "John", "Doe" }), class spoon.support.reflect.code.CtInvocationImpl
invocation is: jSPredicateForm.setOperand1(new String[]{ "John", "Doe" }) target is: jSPredicateForm method is: setOperand1(java.lang.String[])
statement is: jSPredicateForm.setOperand2(new String[]{ "Smith" }), class spoon.support.reflect.code.CtInvocationImpl
invocation is: jSPredicateForm.setOperand2(new String[]{ "Smith" }) target is: jSPredicateForm method is: setOperand2(java.lang.String[])
TestCase is: JSPredicateForm jSPredicateForm = new JSPredicateForm();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("Hieoz!OHh+UR8q<`()")
statement is: java.io.StreamTokenizer(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StreamTokenizer
statement code is: StreamTokenizer streamTokenizer = new StreamTokenizer(arg0)
statement is: umd.cs.shop.JSTerm(Ljava/io/StreamTokenizer;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class umd.cs.shop.JSTerm
statement code is: JSTerm jSTerm = new JSTerm(arg0)
statement is: add(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean add = arg0.add((Object) arg0)
statement is: clonePF()Lumd/cs/shop/JSPredicateForm; type is: class org.evosuite.testcase.statements.MethodStatement return type class umd.cs.shop.JSPredicateForm
statement code is: JSPredicateForm clonePF = jSTerm.clonePF()
statement is: toStr()Ljava/lang/StringBuffer; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.StringBuffer
statement code is: StringBuffer str = jSPredicateForm.toStr()
test data is: StringReader stringReader = new StringReader("Hieoz!OHh+UR8q<`()");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
jSTerm.add((Object) jSTerm);
JSPredicateForm clonePF = jSTerm.clonePF();
clonePF.toStr();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("Hello, World! How are you today?");
        StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
        JSTerm jSTerm = new JSTerm(streamTokenizer);
        jSTerm.add(((Object) (jSTerm)));
        JSPredicateForm clonePF = jSTerm.clonePF();
        clonePF.toStr();
    }
}
statement is: StringReader stringReader = new StringReader("Hello, World! How are you today?"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JSTerm jSTerm = new JSTerm(streamTokenizer), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: jSTerm.add(((Object) (jSTerm))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: jSTerm.add(((Object) (jSTerm))) target is: jSTerm method is: add(java.lang.Object)
source statement: umd.cs.shop.JSTerm(Ljava/io/StreamTokenizer;)V callee: VariableReference: Statement 2, type umd.cs.shop.JSTermindex is: 3
Matched Method is: add(Ljava/lang/Object;)Z
statement is: JSPredicateForm clonePF = jSTerm.clonePF(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: jSTerm.clonePF() target is: jSTerm method is: clonePF()
source statement: umd.cs.shop.JSTerm(Ljava/io/StreamTokenizer;)V callee: VariableReference: Statement 2, type umd.cs.shop.JSTermindex is: 3
Matched Method is: clonePF()Lumd/cs/shop/JSPredicateForm;
statement is: clonePF.toStr(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: clonePF.toStr() target is: clonePF method is: toStr()
source statement: clonePF()Lumd/cs/shop/JSPredicateForm; callee: VariableReference: Statement 4, type umd.cs.shop.JSPredicateFormindex is: 5
Matched Method is: toStr()Ljava/lang/StringBuffer;
TestCase is: String string = "Hello, World! How are you today?";
StringReader stringReader = new StringReader(string);
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
boolean add = ((Vector) streamTokenizer).add((Object) jSTerm);
((JSPredicateForm) streamTokenizer).clonePF();
((JSPredicateForm) add).toStr();

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("the tokenizer is SPACE!")
statement is: java.io.StreamTokenizer(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StreamTokenizer
statement code is: StreamTokenizer streamTokenizer = new StreamTokenizer(arg0)
statement is: umd.cs.shop.JSTerm(Ljava/io/StreamTokenizer;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class umd.cs.shop.JSTerm
statement code is: JSTerm jSTerm = new JSTerm(arg0)
statement is: add(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean add = arg0.add((Object) arg0)
statement is: umd.cs.shop.JSSubstitution()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class umd.cs.shop.JSSubstitution
statement code is: JSSubstitution jSSubstitution = new JSSubstitution()
statement is: applySubstitutionPF(Lumd/cs/shop/JSSubstitution;)Lumd/cs/shop/JSPredicateForm; type is: class org.evosuite.testcase.statements.MethodStatement return type class umd.cs.shop.JSPredicateForm
statement code is: JSPredicateForm applySubstitutionPF = jSTerm.applySubstitutionPF(arg0)
statement is: matches(Lumd/cs/shop/JSPredicateForm;Lumd/cs/shop/JSSubstitution;)Lumd/cs/shop/JSSubstitution; type is: class org.evosuite.testcase.statements.MethodStatement return type class umd.cs.shop.JSSubstitution
statement code is: JSSubstitution matches = jSTerm.matches(arg0, arg1)
test data is: StringReader stringReader = new StringReader("the tokenizer is SPACE!");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
jSTerm.add((Object) jSTerm);
JSSubstitution jSSubstitution = new JSSubstitution();
JSPredicateForm applySubstitutionPF = jSTerm.applySubstitutionPF(jSSubstitution);
jSTerm.matches(applySubstitutionPF, jSSubstitution);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("the tokenizer is SPACE!");
        StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
        JSTerm jSTerm = new JSTerm(streamTokenizer);
        jSTerm.add(((Object) (jSTerm)));
        JSSubstitution jSSubstitution = new JSSubstitution();
        JSPredicateForm applySubstitutionPF = jSTerm.applySubstitutionPF(jSSubstitution);
        jSTerm.matches(applySubstitutionPF, jSSubstitution);
    }
}
statement is: StringReader stringReader = new StringReader("the tokenizer is SPACE!"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JSTerm jSTerm = new JSTerm(streamTokenizer), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: jSTerm.add(((Object) (jSTerm))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: jSTerm.add(((Object) (jSTerm))) target is: jSTerm method is: add(java.lang.Object)
source statement: umd.cs.shop.JSTerm(Ljava/io/StreamTokenizer;)V callee: VariableReference: Statement 2, type umd.cs.shop.JSTermindex is: 3
Matched Method is: add(Ljava/lang/Object;)Z
statement is: JSSubstitution jSSubstitution = new JSSubstitution(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JSPredicateForm applySubstitutionPF = jSTerm.applySubstitutionPF(jSSubstitution), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: jSTerm.applySubstitutionPF(jSSubstitution) target is: jSTerm method is: applySubstitutionPF(JSSubstitution)
source statement: umd.cs.shop.JSTerm(Ljava/io/StreamTokenizer;)V callee: VariableReference: Statement 2, type umd.cs.shop.JSTermindex is: 3
Matched Method is: applySubstitutionPF(Lumd/cs/shop/JSSubstitution;)Lumd/cs/shop/JSPredicateForm;
statement is: jSTerm.matches(applySubstitutionPF, jSSubstitution), class spoon.support.reflect.code.CtInvocationImpl
invocation is: jSTerm.matches(applySubstitutionPF, jSSubstitution) target is: jSTerm method is: matches(JSPredicateForm,JSSubstitution)
source statement: umd.cs.shop.JSTerm(Ljava/io/StreamTokenizer;)V callee: VariableReference: Statement 2, type umd.cs.shop.JSTermindex is: 3
Matched Method is: matches(Lumd/cs/shop/JSPredicateForm;Lumd/cs/shop/JSSubstitution;)Lumd/cs/shop/JSSubstitution;
TestCase is: String string = "the tokenizer is SPACE!";
StringReader stringReader = new StringReader(string);
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
((Vector) streamTokenizer).add((Object) jSTerm);
JSSubstitution jSSubstitution = new JSSubstitution();
JSPredicateForm applySubstitutionPF = ((JSPredicateForm) streamTokenizer).applySubstitutionPF(jSSubstitution);
((JSPredicateForm) streamTokenizer).matches(applySubstitutionPF, jSSubstitution);

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("6Wpyln-H4rHW")
statement is: java.io.StreamTokenizer(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StreamTokenizer
statement code is: StreamTokenizer streamTokenizer = new StreamTokenizer(arg0)
statement is: umd.cs.shop.JSTerm(Ljava/io/StreamTokenizer;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class umd.cs.shop.JSTerm
statement code is: JSTerm jSTerm = new JSTerm(arg0)
statement is: umd.cs.shop.JSTerm(Ljava/io/StreamTokenizer;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class umd.cs.shop.JSTerm
statement code is: JSTerm jSTerm = new JSTerm(arg0)
statement is: matches(Lumd/cs/shop/JSPredicateForm;)Lumd/cs/shop/JSSubstitution; type is: class org.evosuite.testcase.statements.MethodStatement return type class umd.cs.shop.JSSubstitution
statement code is: JSSubstitution matches = jSTerm.matches((JSPredicateForm) arg0)
test data is: StringReader stringReader = new StringReader("6Wpyln-H4rHW");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
JSTerm jSTerm = new JSTerm(streamTokenizer);
jSTerm.matches((JSPredicateForm) jSTerm);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("6Wpyln-H4rHW");
        StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
        JSTerm jSTerm = new JSTerm(streamTokenizer);
        jSTerm.matches(((JSPredicateForm) (jSTerm)));
    }
}
statement is: StringReader stringReader = new StringReader("6Wpyln-H4rHW"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JSTerm jSTerm = new JSTerm(streamTokenizer), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: jSTerm.matches(((JSPredicateForm) (jSTerm))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: jSTerm.matches(((JSPredicateForm) (jSTerm))) target is: jSTerm method is: matches(JSPredicateForm)
source statement: umd.cs.shop.JSTerm(Ljava/io/StreamTokenizer;)V callee: VariableReference: Statement 2, type umd.cs.shop.JSTermindex is: 3
Matched Method is: matches(Lumd/cs/shop/JSPredicateForm;)Lumd/cs/shop/JSSubstitution;
TestCase is: String string = "6Wpyln-H4rHW";
StringReader stringReader = new StringReader(string);
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
((JSPredicateForm) streamTokenizer).matches((JSPredicateForm) jSTerm);

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("the tokenizer is SPACE!")
statement is: java.io.StreamTokenizer(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StreamTokenizer
statement code is: StreamTokenizer streamTokenizer = new StreamTokenizer(arg0)
statement is: umd.cs.shop.JSTerm(Ljava/io/StreamTokenizer;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class umd.cs.shop.JSTerm
statement code is: JSTerm jSTerm = new JSTerm(arg0)
statement is: add(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean add = arg0.add((Object) arg0)
statement is: umd.cs.shop.JSSubstitution()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class umd.cs.shop.JSSubstitution
statement code is: JSSubstitution jSSubstitution = new JSSubstitution()
statement is: matches(Lumd/cs/shop/JSPredicateForm;Lumd/cs/shop/JSSubstitution;)Lumd/cs/shop/JSSubstitution; type is: class org.evosuite.testcase.statements.MethodStatement return type class umd.cs.shop.JSSubstitution
statement code is: JSSubstitution matches = arg0.matches((JSPredicateForm) arg0, arg1)
test data is: StringReader stringReader = new StringReader("the tokenizer is SPACE!");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
jSTerm.add((Object) jSTerm);
JSSubstitution jSSubstitution = new JSSubstitution();
jSTerm.matches((JSPredicateForm) jSTerm, jSSubstitution);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("the tokenizer is SPACE!");
        StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
        JSTerm jSTerm = new JSTerm(streamTokenizer);
        jSTerm.add(((Object) (jSTerm)));
        JSSubstitution jSSubstitution = new JSSubstitution();
        jSTerm.matches(((JSPredicateForm) (jSTerm)), jSSubstitution);
    }
}
statement is: StringReader stringReader = new StringReader("the tokenizer is SPACE!"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JSTerm jSTerm = new JSTerm(streamTokenizer), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: jSTerm.add(((Object) (jSTerm))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: jSTerm.add(((Object) (jSTerm))) target is: jSTerm method is: add(java.lang.Object)
source statement: umd.cs.shop.JSTerm(Ljava/io/StreamTokenizer;)V callee: VariableReference: Statement 2, type umd.cs.shop.JSTermindex is: 3
Matched Method is: add(Ljava/lang/Object;)Z
statement is: JSSubstitution jSSubstitution = new JSSubstitution(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: jSTerm.matches(((JSPredicateForm) (jSTerm)), jSSubstitution), class spoon.support.reflect.code.CtInvocationImpl
invocation is: jSTerm.matches(((JSPredicateForm) (jSTerm)), jSSubstitution) target is: jSTerm method is: matches(JSPredicateForm,JSSubstitution)
source statement: umd.cs.shop.JSTerm(Ljava/io/StreamTokenizer;)V callee: VariableReference: Statement 2, type umd.cs.shop.JSTermindex is: 3
Matched Method is: matches(Lumd/cs/shop/JSPredicateForm;Lumd/cs/shop/JSSubstitution;)Lumd/cs/shop/JSSubstitution;
TestCase is: String string = "the tokenizer is SPACE!";
StringReader stringReader = new StringReader(string);
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
((Vector) streamTokenizer).add((Object) jSTerm);
JSSubstitution jSSubstitution = new JSSubstitution();
((JSPredicateForm) streamTokenizer).matches((JSPredicateForm) jSTerm, jSSubstitution);

statement is: umd.cs.shop.JSTerm()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class umd.cs.shop.JSTerm
statement code is: JSTerm jSTerm = new JSTerm()
statement is: equals(Lumd/cs/shop/JSPredicateForm;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = jSTerm.equals((JSPredicateForm) null)
test data is: JSTerm jSTerm = new JSTerm();
jSTerm.equals((JSPredicateForm) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        jSTerm.equals(((JSPredicateForm) ("John Doe")));// String

        jSTerm.equals(((JSPredicateForm) (42)));// Integer

        jSTerm.equals(((JSPredicateForm) (3.14)));// Double

        jSTerm.equals(((JSPredicateForm) (true)));// Boolean }}

    }
}
statement is: jSTerm.equals(((JSPredicateForm) ("John Doe")))// String
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: jSTerm.equals(((JSPredicateForm) ("John Doe")))// String
 target is: jSTerm method is: equals(JSPredicateForm)
statement is: jSTerm.equals(((JSPredicateForm) (42)))// Integer
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: jSTerm.equals(((JSPredicateForm) (42)))// Integer
 target is: jSTerm method is: equals(JSPredicateForm)
statement is: jSTerm.equals(((JSPredicateForm) (3.14)))// Double
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: jSTerm.equals(((JSPredicateForm) (3.14)))// Double
 target is: jSTerm method is: equals(JSPredicateForm)
statement is: jSTerm.equals(((JSPredicateForm) (true)))// Boolean }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: jSTerm.equals(((JSPredicateForm) (true)))// Boolean }}
 target is: jSTerm method is: equals(JSPredicateForm)
statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("the tokenizer is SPACE!")
statement is: java.io.StreamTokenizer(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StreamTokenizer
statement code is: StreamTokenizer streamTokenizer = new StreamTokenizer(arg0)
statement is: umd.cs.shop.JSTerm(Ljava/io/StreamTokenizer;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class umd.cs.shop.JSTerm
statement code is: JSTerm jSTerm = new JSTerm(arg0)
statement is: umd.cs.shop.JSPredicateForm()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class umd.cs.shop.JSPredicateForm
statement code is: JSPredicateForm jSPredicateForm = new JSPredicateForm()
statement is: equals(Lumd/cs/shop/JSPredicateForm;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = jSTerm.equals(arg0)
test data is: StringReader stringReader = new StringReader("the tokenizer is SPACE!");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
JSPredicateForm jSPredicateForm = new JSPredicateForm();
jSTerm.equals(jSPredicateForm);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("The tokenizer is a space-delimited text reader.");
        StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
        JSTerm jSTerm = new JSTerm(streamTokenizer);
        JSPredicateForm jSPredicateForm = new JSPredicateForm();
        jSTerm.equals(jSPredicateForm);
    }
}
statement is: StringReader stringReader = new StringReader("The tokenizer is a space-delimited text reader."), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JSTerm jSTerm = new JSTerm(streamTokenizer), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JSPredicateForm jSPredicateForm = new JSPredicateForm(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: jSTerm.equals(jSPredicateForm), class spoon.support.reflect.code.CtInvocationImpl
invocation is: jSTerm.equals(jSPredicateForm) target is: jSTerm method is: equals(JSPredicateForm)
source statement: umd.cs.shop.JSTerm(Ljava/io/StreamTokenizer;)V callee: VariableReference: Statement 2, type umd.cs.shop.JSTermindex is: 3
Matched Method is: equals(Lumd/cs/shop/JSPredicateForm;)Z
TestCase is: String string = "The tokenizer is a space-delimited text reader.";
StringReader stringReader = new StringReader(string);
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
JSPredicateForm jSPredicateForm = new JSPredicateForm();
((JSPredicateForm) streamTokenizer).equals(jSPredicateForm);

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("Expecting constant symbol as term")
statement is: java.io.StreamTokenizer(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StreamTokenizer
statement code is: StreamTokenizer streamTokenizer = new StreamTokenizer(arg0)
statement is: umd.cs.shop.JSTerm(Ljava/io/StreamTokenizer;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class umd.cs.shop.JSTerm
statement code is: JSTerm jSTerm = new JSTerm(arg0)
statement is: umd.cs.shop.JSTerm(Ljava/io/StreamTokenizer;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class umd.cs.shop.JSTerm
statement code is: JSTerm jSTerm = new JSTerm(arg0)
statement is: equals(Lumd/cs/shop/JSPredicateForm;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = jSTerm.equals((JSPredicateForm) arg0)
test data is: StringReader stringReader = new StringReader("Expecting constant symbol as term");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
JSTerm jSTerm = new JSTerm(streamTokenizer);
jSTerm.equals((JSPredicateForm) jSTerm);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("Expecting constant symbol as term");
        StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
        JSTerm jSTerm1 = new JSTerm(streamTokenizer);// Create two instances of the JSTerm class with the same term

        JSTerm jSTerm2 = new JSTerm(streamTokenizer);
        jSTerm1.equals(((JSPredicateForm) (jSTerm2)));// Test if both instances are equal }}

    }
}
statement is: StringReader stringReader = new StringReader("Expecting constant symbol as term"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JSTerm jSTerm1 = new JSTerm(streamTokenizer)// Create two instances of the JSTerm class with the same term
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JSTerm jSTerm2 = new JSTerm(streamTokenizer), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: jSTerm1.equals(((JSPredicateForm) (jSTerm2)))// Test if both instances are equal }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: jSTerm1.equals(((JSPredicateForm) (jSTerm2)))// Test if both instances are equal }}
 target is: jSTerm1 method is: equals(JSPredicateForm)
source statement: umd.cs.shop.JSTerm(Ljava/io/StreamTokenizer;)V callee: VariableReference: Statement 2, type umd.cs.shop.JSTermindex is: 4
Matched Method is: equals(Lumd/cs/shop/JSPredicateForm;)Z
TestCase is: String string = "Expecting constant symbol as term";
StringReader stringReader = new StringReader(string);
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
JSTerm jSTerm = new JSTerm(streamTokenizer);
((JSPredicateForm) streamTokenizer).equals((JSPredicateForm) jSTerm);

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("the tokenizer is SPACE!")
statement is: java.io.StreamTokenizer(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StreamTokenizer
statement code is: StreamTokenizer streamTokenizer = new StreamTokenizer(arg0)
statement is: umd.cs.shop.JSTerm(Ljava/io/StreamTokenizer;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class umd.cs.shop.JSTerm
statement code is: JSTerm jSTerm = new JSTerm(arg0)
statement is: add(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean add = arg0.add((Object) arg0)
statement is: equals(Lumd/cs/shop/JSPredicateForm;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = arg0.equals((JSPredicateForm) arg0)
test data is: StringReader stringReader = new StringReader("the tokenizer is SPACE!");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
jSTerm.add((Object) jSTerm);
jSTerm.equals((JSPredicateForm) jSTerm);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        and = $missing$;
    }
}
statement is: and = $missing$, class spoon.support.reflect.code.CtAssignmentImpl
statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("thU tkenizer isCSPACE!")
statement is: java.io.StreamTokenizer(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StreamTokenizer
statement code is: StreamTokenizer streamTokenizer = new StreamTokenizer(arg0)
statement is: umd.cs.shop.JSTerm(Ljava/io/StreamTokenizer;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class umd.cs.shop.JSTerm
statement code is: JSTerm jSTerm = new JSTerm(arg0)
statement is: umd.cs.shop.JSTerm()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class umd.cs.shop.JSTerm
statement code is: JSTerm jSTerm = new JSTerm()
statement is: add(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean add = jSTerm.add((Object) arg0)
statement is: equals(Lumd/cs/shop/JSPredicateForm;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = arg0.equals((JSPredicateForm) arg0)
test data is: StringReader stringReader = new StringReader("thU tkenizer isCSPACE!");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
JSTerm jSTerm = new JSTerm();
jSTerm.add((Object) jSTerm);
jSTerm.equals((JSPredicateForm) jSTerm);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("This tokenizer isCSPACE!");
        StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
        JSTerm jSTerm = new JSTerm(streamTokenizer);
        JSTerm jSTerm = new JSTerm();
        jSTerm.add(((Object) ("This")));
        jSTerm.equals(((JSPredicateForm) ("tokenizer")));
    }
}
statement is: StringReader stringReader = new StringReader("This tokenizer isCSPACE!"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JSTerm jSTerm = new JSTerm(streamTokenizer), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JSTerm jSTerm = new JSTerm(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: jSTerm.add(((Object) ("This"))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: jSTerm.add(((Object) ("This"))) target is: jSTerm method is: add(java.lang.Object)
source statement: umd.cs.shop.JSTerm(Ljava/io/StreamTokenizer;)V callee: VariableReference: Statement 2, type umd.cs.shop.JSTermindex is: 3
Matched Method is: add(Ljava/lang/Object;)Z
statement is: jSTerm.equals(((JSPredicateForm) ("tokenizer"))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: jSTerm.equals(((JSPredicateForm) ("tokenizer"))) target is: jSTerm method is: equals(JSPredicateForm)
source statement: umd.cs.shop.JSTerm(Ljava/io/StreamTokenizer;)V callee: VariableReference: Statement 2, type umd.cs.shop.JSTermindex is: 3
Matched Method is: equals(Lumd/cs/shop/JSPredicateForm;)Z
TestCase is: String string = "This tokenizer isCSPACE!";
StringReader stringReader = new StringReader(string);
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
JSTerm jSTerm = new JSTerm();
String string = "This";
((Vector) streamTokenizer).add((Object) string);
String string = "tokenizer";
((JSPredicateForm) streamTokenizer).equals((JSPredicateForm) string);

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("Expecting constant symbol as term")
statement is: java.io.StreamTokenizer(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StreamTokenizer
statement code is: StreamTokenizer streamTokenizer = new StreamTokenizer(arg0)
statement is: umd.cs.shop.JSTerm(Ljava/io/StreamTokenizer;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class umd.cs.shop.JSTerm
statement code is: JSTerm jSTerm = new JSTerm(arg0)
statement is: matches(Lumd/cs/shop/JSPredicateForm;)Lumd/cs/shop/JSSubstitution; type is: class org.evosuite.testcase.statements.MethodStatement return type class umd.cs.shop.JSSubstitution
statement code is: JSSubstitution matches = arg0.matches((JSPredicateForm) arg0)
statement is: umd.cs.shop.JSPredicateForm()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class umd.cs.shop.JSPredicateForm
statement code is: JSPredicateForm jSPredicateForm = new JSPredicateForm()
statement is: matches(Lumd/cs/shop/JSPredicateForm;Lumd/cs/shop/JSSubstitution;)Lumd/cs/shop/JSSubstitution; type is: class org.evosuite.testcase.statements.MethodStatement return type class umd.cs.shop.JSSubstitution
statement code is: JSSubstitution matches = jSTerm.matches(arg0, arg1)
test data is: StringReader stringReader = new StringReader("Expecting constant symbol as term");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
JSSubstitution matches = jSTerm.matches((JSPredicateForm) jSTerm);
JSPredicateForm jSPredicateForm = new JSPredicateForm();
jSTerm.matches(jSPredicateForm, matches);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("Expecting constant symbol as term");
        StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
        JSTerm jSTerm = new JSTerm(streamTokenizer);
        // Changed the primitive value from 1 to "X", indicating that the term is a variable with the name X.
        JSSubstitution matches = jSTerm.matches(((JSPredicateForm) (jSTerm)), "X");
        JSPredicateForm jSPredicateForm = new JSPredicateForm();
        jSTerm.matches(jSPredicateForm, matches);
    }
}
statement is: StringReader stringReader = new StringReader("Expecting constant symbol as term"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JSTerm jSTerm = new JSTerm(streamTokenizer), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: // Changed the primitive value from 1 to "X", indicating that the term is a variable with the name X.
JSSubstitution matches = jSTerm.matches(((JSPredicateForm) (jSTerm)), "X"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: jSTerm.matches(((JSPredicateForm) (jSTerm)), "X") target is: jSTerm method is: matches(JSPredicateForm,java.lang.String)
source statement: umd.cs.shop.JSTerm(Ljava/io/StreamTokenizer;)V callee: VariableReference: Statement 2, type umd.cs.shop.JSTermindex is: 3
Matched Method is: matches(Lumd/cs/shop/JSPredicateForm;Lumd/cs/shop/JSSubstitution;)Lumd/cs/shop/JSSubstitution;
statement is: JSPredicateForm jSPredicateForm = new JSPredicateForm(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: jSTerm.matches(jSPredicateForm, matches), class spoon.support.reflect.code.CtInvocationImpl
invocation is: jSTerm.matches(jSPredicateForm, matches) target is: jSTerm method is: matches(JSPredicateForm,JSSubstitution)
source statement: umd.cs.shop.JSTerm(Ljava/io/StreamTokenizer;)V callee: VariableReference: Statement 2, type umd.cs.shop.JSTermindex is: 3
Matched Method is: matches(Lumd/cs/shop/JSPredicateForm;Lumd/cs/shop/JSSubstitution;)Lumd/cs/shop/JSSubstitution;
TestCase is: String string = "Expecting constant symbol as term";
StringReader stringReader = new StringReader(string);
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
String string = "X";
JSSubstitution matches = ((JSPredicateForm) streamTokenizer).matches((JSPredicateForm) jSTerm, (JSSubstitution) string);
JSPredicateForm jSPredicateForm = new JSPredicateForm();
((JSPredicateForm) streamTokenizer).matches(jSPredicateForm, matches);

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("Expecting constant symbol as term")
statement is: java.io.StreamTokenizer(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StreamTokenizer
statement code is: StreamTokenizer streamTokenizer = new StreamTokenizer(arg0)
statement is: umd.cs.shop.JSTerm(Ljava/io/StreamTokenizer;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class umd.cs.shop.JSTerm
statement code is: JSTerm jSTerm = new JSTerm(arg0)
statement is: umd.cs.shop.JSTerm(Ljava/io/StreamTokenizer;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class umd.cs.shop.JSTerm
statement code is: JSTerm jSTerm = new JSTerm(arg0)
statement is: umd.cs.shop.JSSubstitution()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class umd.cs.shop.JSSubstitution
statement code is: JSSubstitution jSSubstitution = new JSSubstitution()
statement is: matches(Lumd/cs/shop/JSPredicateForm;Lumd/cs/shop/JSSubstitution;)Lumd/cs/shop/JSSubstitution; type is: class org.evosuite.testcase.statements.MethodStatement return type class umd.cs.shop.JSSubstitution
statement code is: JSSubstitution matches = jSTerm.matches((JSPredicateForm) arg0, arg1)
test data is: StringReader stringReader = new StringReader("Expecting constant symbol as term");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
JSTerm jSTerm = new JSTerm(streamTokenizer);
JSSubstitution jSSubstitution = new JSSubstitution();
jSTerm.matches((JSPredicateForm) jSTerm, jSSubstitution);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("Expecting constant symbol as term");
        StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
        JSTerm jSTerm = new JSTerm(streamTokenizer);
        JSTerm expectedTerm = new JSTerm(streamTokenizer);
        expectedTerm.setConstant("A_CONSTANT_SYMBOL");
        JSSubstitution jSSubstitution = new JSSubstitution();
        jSTerm.matches(((JSPredicateForm) (jSTerm)), jSSubstitution);
    }
}
statement is: StringReader stringReader = new StringReader("Expecting constant symbol as term"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JSTerm jSTerm = new JSTerm(streamTokenizer), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JSTerm expectedTerm = new JSTerm(streamTokenizer), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: expectedTerm.setConstant("A_CONSTANT_SYMBOL"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: expectedTerm.setConstant("A_CONSTANT_SYMBOL") target is: expectedTerm method is: setConstant(java.lang.String)
statement is: JSSubstitution jSSubstitution = new JSSubstitution(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: jSTerm.matches(((JSPredicateForm) (jSTerm)), jSSubstitution), class spoon.support.reflect.code.CtInvocationImpl
invocation is: jSTerm.matches(((JSPredicateForm) (jSTerm)), jSSubstitution) target is: jSTerm method is: matches(JSPredicateForm,JSSubstitution)
source statement: umd.cs.shop.JSTerm(Ljava/io/StreamTokenizer;)V callee: VariableReference: Statement 2, type umd.cs.shop.JSTermindex is: 4
Matched Method is: matches(Lumd/cs/shop/JSPredicateForm;Lumd/cs/shop/JSSubstitution;)Lumd/cs/shop/JSSubstitution;
TestCase is: String string = "Expecting constant symbol as term";
StringReader stringReader = new StringReader(string);
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
JSTerm jSTerm = new JSTerm(streamTokenizer);
JSSubstitution jSSubstitution = new JSSubstitution();
((JSPredicateForm) streamTokenizer).matches((JSPredicateForm) jSTerm, jSSubstitution);

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("Hieoz!OHh+UR8q<`()")
statement is: java.io.StreamTokenizer(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StreamTokenizer
statement code is: StreamTokenizer streamTokenizer = new StreamTokenizer(arg0)
statement is: umd.cs.shop.JSTerm(Ljava/io/StreamTokenizer;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class umd.cs.shop.JSTerm
statement code is: JSTerm jSTerm = new JSTerm(arg0)
statement is: add(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean add = arg0.add((Object) arg0)
statement is: umd.cs.shop.JSSubstitution()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class umd.cs.shop.JSSubstitution
statement code is: JSSubstitution jSSubstitution = new JSSubstitution()
statement is: makeVariable()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: jSTerm.makeVariable()
statement is: applySubstitutionPF(Lumd/cs/shop/JSSubstitution;)Lumd/cs/shop/JSPredicateForm; type is: class org.evosuite.testcase.statements.MethodStatement return type class umd.cs.shop.JSPredicateForm
statement code is: JSPredicateForm applySubstitutionPF = jSTerm.applySubstitutionPF(arg0)
statement is: matches(Lumd/cs/shop/JSPredicateForm;)Lumd/cs/shop/JSSubstitution; type is: class org.evosuite.testcase.statements.MethodStatement return type class umd.cs.shop.JSSubstitution
statement code is: JSSubstitution matches = jSTerm.matches(arg0)
test data is: StringReader stringReader = new StringReader("Hieoz!OHh+UR8q<`()");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
jSTerm.add((Object) jSTerm);
JSSubstitution jSSubstitution = new JSSubstitution();
jSTerm.makeVariable();
JSPredicateForm applySubstitutionPF = jSTerm.applySubstitutionPF(jSSubstitution);
jSTerm.matches(applySubstitutionPF);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("Hieoz!OHh+UR8q<`()");
        StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
        JSTerm jSTerm = new JSTerm(streamTokenizer);
        jSTerm.add(((Object) (jSTerm)));
        JSSubstitution jSSubstitution = new JSSubstitution();
        jSTerm.makeVariable();
        JSPredicateForm applySubstitutionPF = jSTerm.applySubstitutionPF(jSSubstitution);
        jSTerm.matches(applySubstitutionPF);
    }
}
statement is: StringReader stringReader = new StringReader("Hieoz!OHh+UR8q<`()"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JSTerm jSTerm = new JSTerm(streamTokenizer), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: jSTerm.add(((Object) (jSTerm))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: jSTerm.add(((Object) (jSTerm))) target is: jSTerm method is: add(java.lang.Object)
source statement: umd.cs.shop.JSTerm(Ljava/io/StreamTokenizer;)V callee: VariableReference: Statement 2, type umd.cs.shop.JSTermindex is: 3
Matched Method is: add(Ljava/lang/Object;)Z
statement is: JSSubstitution jSSubstitution = new JSSubstitution(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: jSTerm.makeVariable(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: jSTerm.makeVariable() target is: jSTerm method is: makeVariable()
source statement: umd.cs.shop.JSTerm(Ljava/io/StreamTokenizer;)V callee: VariableReference: Statement 2, type umd.cs.shop.JSTermindex is: 3
Matched Method is: makeVariable()V
statement is: JSPredicateForm applySubstitutionPF = jSTerm.applySubstitutionPF(jSSubstitution), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: jSTerm.applySubstitutionPF(jSSubstitution) target is: jSTerm method is: applySubstitutionPF(JSSubstitution)
source statement: umd.cs.shop.JSTerm(Ljava/io/StreamTokenizer;)V callee: VariableReference: Statement 2, type umd.cs.shop.JSTermindex is: 3
Matched Method is: applySubstitutionPF(Lumd/cs/shop/JSSubstitution;)Lumd/cs/shop/JSPredicateForm;
statement is: jSTerm.matches(applySubstitutionPF), class spoon.support.reflect.code.CtInvocationImpl
invocation is: jSTerm.matches(applySubstitutionPF) target is: jSTerm method is: matches(JSPredicateForm)
source statement: umd.cs.shop.JSTerm(Ljava/io/StreamTokenizer;)V callee: VariableReference: Statement 2, type umd.cs.shop.JSTermindex is: 3
Matched Method is: matches(Lumd/cs/shop/JSPredicateForm;)Lumd/cs/shop/JSSubstitution;
TestCase is: String string = "Hieoz!OHh+UR8q<`()";
StringReader stringReader = new StringReader(string);
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
((Vector) streamTokenizer).add((Object) jSTerm);
JSSubstitution jSSubstitution = new JSSubstitution();
((JSTerm) streamTokenizer).makeVariable();
JSPredicateForm applySubstitutionPF = ((JSPredicateForm) streamTokenizer).applySubstitutionPF(jSSubstitution);
((JSPredicateForm) streamTokenizer).matches(applySubstitutionPF);

* test suite isTestSuite: 45
Test 0: 
StringReader stringReader = new StringReader("(!Ajp^t<Ok");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSPredicateForm jSPredicateForm = null;
try {
  jSPredicateForm = new JSPredicateForm(streamTokenizer);
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("umd.cs.shop.JSPredicateForm", e);
}

Test 1: 
JSPredicateForm jSPredicateForm = new JSPredicateForm((String) null);
jSPredicateForm.print();
Test 2: 
JSPredicateForm jSPredicateForm = null;
try {
  jSPredicateForm = new JSPredicateForm("(");
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("umd.cs.shop.JSPredicateForm", e);
}

Test 3: 
JSPredicateForm jSPredicateForm = null;
try {
  jSPredicateForm = new JSPredicateForm((StreamTokenizer) null);
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("umd.cs.shop.JSPredicateForm", e);
}

Test 4: 
StringReader stringReader = new StringReader("the tokenizer is SPACE!");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
// Undeclared exception!
try { 
  jSTerm.JSPredicateFormInit(streamTokenizer);
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("umd.cs.shop.JSPredicateForm", e);
}

Test 5: 
JSPredicateForm jSPredicateForm = null;
try {
  jSPredicateForm = new JSPredicateForm("()rAj[^t<OP");
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("umd.cs.shop.JSPredicateForm", e);
}

Test 6: 
JSPredicateForm jSPredicateForm = null;
try {
  jSPredicateForm = new JSPredicateForm("(qM@ 2\"\"\"VkYj");
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("umd.cs.shop.JSTerm", e);
}

Test 7: 
JSPredicateForm jSPredicateForm = null;
try {
  jSPredicateForm = new JSPredicateForm("(%Ajp^t<Ol");
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("umd.cs.shop.JSPredicateForm", e);
}

Test 8: 
JSPredicateForm jSPredicateForm = null;
try {
  jSPredicateForm = new JSPredicateForm("(Xj%^t<OP");
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("umd.cs.shop.JSPredicateForm", e);
}

Test 9: 
JSPredicateForm jSPredicateForm = null;
try {
  jSPredicateForm = new JSPredicateForm("(KzD$R<]k38Cs g,5");
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("umd.cs.shop.JSPredicateForm", e);
}

Test 10: 
StringReader stringReader = new StringReader("Hieoz!OHh+UR8q<`()");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
jSTerm.add((Object) jSTerm);
JSPredicateForm standarizerPredicateForm = jSTerm.standarizerPredicateForm();
standarizerPredicateForm.print();
Test 11: 
JSPredicateForm jSPredicateForm = new JSPredicateForm();
jSPredicateForm.toStr();
Test 12: 
StringReader stringReader = new StringReader("Hieoz!OHh+UR8q<`()");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
jSTerm.add((Object) jSTerm);
JSPredicateForm clonePF = jSTerm.clonePF();
clonePF.toStr();
Test 13: 
StringReader stringReader = new StringReader("the tokenizer is SPACE!");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
jSTerm.add((Object) jSTerm);
JSSubstitution jSSubstitution = new JSSubstitution();
JSPredicateForm applySubstitutionPF = jSTerm.applySubstitutionPF(jSSubstitution);
jSTerm.matches(applySubstitutionPF, jSSubstitution);
Test 14: 
StringReader stringReader = new StringReader("6Wpyln-H4rHW");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
JSTerm jSTerm = new JSTerm(streamTokenizer);
jSTerm.matches((JSPredicateForm) jSTerm);
Test 15: 
StringReader stringReader = new StringReader("the tokenizer is SPACE!");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
jSTerm.add((Object) jSTerm);
JSSubstitution jSSubstitution = new JSSubstitution();
jSTerm.matches((JSPredicateForm) jSTerm, jSSubstitution);
Test 16: 
JSTerm jSTerm = new JSTerm();
jSTerm.equals((JSPredicateForm) null);
Test 17: 
StringReader stringReader = new StringReader("the tokenizer is SPACE!");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
JSPredicateForm jSPredicateForm = new JSPredicateForm();
jSTerm.equals(jSPredicateForm);
Test 18: 
StringReader stringReader = new StringReader("Expecting constant symbol as term");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
JSTerm jSTerm = new JSTerm(streamTokenizer);
jSTerm.equals((JSPredicateForm) jSTerm);
Test 19: 
StringReader stringReader = new StringReader("the tokenizer is SPACE!");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
jSTerm.add((Object) jSTerm);
jSTerm.equals((JSPredicateForm) jSTerm);
Test 20: 
StringReader stringReader = new StringReader("thU tkenizer isCSPACE!");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
JSTerm jSTerm = new JSTerm();
jSTerm.add((Object) jSTerm);
jSTerm.equals((JSPredicateForm) jSTerm);
Test 21: 
StringReader stringReader = new StringReader("Expecting constant symbol as term");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
JSSubstitution matches = jSTerm.matches((JSPredicateForm) jSTerm);
JSPredicateForm jSPredicateForm = new JSPredicateForm();
jSTerm.matches(jSPredicateForm, matches);
Test 22: 
StringReader stringReader = new StringReader("Expecting constant symbol as term");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
JSTerm jSTerm = new JSTerm(streamTokenizer);
JSSubstitution jSSubstitution = new JSSubstitution();
jSTerm.matches((JSPredicateForm) jSTerm, jSSubstitution);
Test 23: 
StringReader stringReader = new StringReader("Hieoz!OHh+UR8q<`()");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
jSTerm.add((Object) jSTerm);
JSSubstitution jSSubstitution = new JSSubstitution();
jSTerm.makeVariable();
JSPredicateForm applySubstitutionPF = jSTerm.applySubstitutionPF(jSSubstitution);
jSTerm.matches(applySubstitutionPF);
Test 24: 
StringReader stringReader = new StringReader("(Ajp^t<Ok");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSPredicateForm jSPredicateForm = new JSPredicateForm(streamTokenizer);

Test 25: 
String string = "John Doe";
JSPredicateForm jSPredicateForm = new JSPredicateForm("John Doe");
((JSPredicateForm) string).print();

Test 26: 
JSPredicateForm jSPredicateForm = new JSPredicateForm("(not (and (= 'apple' 'banana') (= 'orange' 'mango')))");

Test 27: 
JSPredicateForm jSPredicateForm = new JSPredicateForm((StreamTokenizer) "(name == 'John Doe' && age >= 18) || (name == 'Jane Smith' && age >= 21)");

Test 28: 
StringReader stringReader = new StringReader("the tokenizer is SPACE!");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
((JSPredicateForm) streamTokenizer).JSPredicateFormInit(streamTokenizer);

Test 29: 
JSPredicateForm jSPredicateForm = new JSPredicateForm("((12.5, 3.7), (4.3, 8.9))");

Test 30: 
JSPredicateForm jSPredicateForm = new JSPredicateForm("(qM@ 2\"\"\"VkYj");
String string = "(p @ 5\"\"\"bBcD";
JSPredicateForm jSPredicateForm = new JSPredicateForm(string);

Test 31: 
JSPredicateForm jSPredicateForm = new JSPredicateForm("(1234567890)");

Test 32: 
JSPredicateForm jSPredicateForm = new JSPredicateForm("John Smith");

Test 33: 
JSPredicateForm jSPredicateForm = new JSPredicateForm("(KzD$R<]k38Cs g,5)");

Test 34: 
JSPredicateForm jSPredicateForm = new JSPredicateForm();

Test 35: 
StringReader stringReader = new StringReader("Hello, World! How are you today?");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
boolean add = ((Vector) streamTokenizer).add((Object) jSTerm);
((JSPredicateForm) streamTokenizer).clonePF();
((JSPredicateForm) add).toStr();

Test 36: 
StringReader stringReader = new StringReader("the tokenizer is SPACE!");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
((Vector) streamTokenizer).add((Object) jSTerm);
JSSubstitution jSSubstitution = new JSSubstitution();
JSPredicateForm applySubstitutionPF = ((JSPredicateForm) streamTokenizer).applySubstitutionPF(jSSubstitution);
((JSPredicateForm) streamTokenizer).matches(applySubstitutionPF, jSSubstitution);

Test 37: 
StringReader stringReader = new StringReader("6Wpyln-H4rHW");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
((JSPredicateForm) streamTokenizer).matches((JSPredicateForm) jSTerm);

Test 38: 
StringReader stringReader = new StringReader("the tokenizer is SPACE!");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
((Vector) streamTokenizer).add((Object) jSTerm);
JSSubstitution jSSubstitution = new JSSubstitution();
((JSPredicateForm) streamTokenizer).matches((JSPredicateForm) jSTerm, jSSubstitution);

Test 39: 
StringReader stringReader = new StringReader("The tokenizer is a space-delimited text reader.");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
JSPredicateForm jSPredicateForm = new JSPredicateForm();
((JSPredicateForm) streamTokenizer).equals(jSPredicateForm);

Test 40: 
StringReader stringReader = new StringReader("Expecting constant symbol as term");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
JSTerm jSTerm = new JSTerm(streamTokenizer);
((JSPredicateForm) streamTokenizer).equals((JSPredicateForm) jSTerm);

Test 41: 
StringReader stringReader = new StringReader("This tokenizer isCSPACE!");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
JSTerm jSTerm = new JSTerm();
((Vector) streamTokenizer).add((Object) "This");
String string = "tokenizer";
((JSPredicateForm) streamTokenizer).equals((JSPredicateForm) string);

Test 42: 
StringReader stringReader = new StringReader("Expecting constant symbol as term");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
JSSubstitution matches = ((JSPredicateForm) streamTokenizer).matches((JSPredicateForm) jSTerm, (JSSubstitution) "X");
JSPredicateForm jSPredicateForm = new JSPredicateForm();
((JSPredicateForm) streamTokenizer).matches(jSPredicateForm, matches);

Test 43: 
StringReader stringReader = new StringReader("Expecting constant symbol as term");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
JSTerm jSTerm = new JSTerm(streamTokenizer);
JSSubstitution jSSubstitution = new JSSubstitution();
((JSPredicateForm) streamTokenizer).matches((JSPredicateForm) jSTerm, jSSubstitution);

Test 44: 
StringReader stringReader = new StringReader("Hieoz!OHh+UR8q<`()");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
((Vector) streamTokenizer).add((Object) jSTerm);
JSSubstitution jSSubstitution = new JSSubstitution();
((JSTerm) streamTokenizer).makeVariable();
JSPredicateForm applySubstitutionPF = ((JSPredicateForm) streamTokenizer).applySubstitutionPF(jSSubstitution);
((JSPredicateForm) streamTokenizer).matches(applySubstitutionPF);


* Generated after the refinement and before minimization 45 tests with total length 171
* test suite isTestSuite: 45
Test 0: 
StringReader stringReader = new StringReader("(!Ajp^t<Ok");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSPredicateForm jSPredicateForm = null;
try {
  jSPredicateForm = new JSPredicateForm(streamTokenizer);
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("umd.cs.shop.JSPredicateForm", e);
}

Test 1: 
JSPredicateForm jSPredicateForm = new JSPredicateForm((String) null);
jSPredicateForm.print();
Test 2: 
JSPredicateForm jSPredicateForm = null;
try {
  jSPredicateForm = new JSPredicateForm("(");
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("umd.cs.shop.JSPredicateForm", e);
}

Test 3: 
JSPredicateForm jSPredicateForm = null;
try {
  jSPredicateForm = new JSPredicateForm((StreamTokenizer) null);
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("umd.cs.shop.JSPredicateForm", e);
}

Test 4: 
StringReader stringReader = new StringReader("the tokenizer is SPACE!");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
// Undeclared exception!
try { 
  jSTerm.JSPredicateFormInit(streamTokenizer);
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("umd.cs.shop.JSPredicateForm", e);
}

Test 5: 
JSPredicateForm jSPredicateForm = null;
try {
  jSPredicateForm = new JSPredicateForm("()rAj[^t<OP");
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("umd.cs.shop.JSPredicateForm", e);
}

Test 6: 
JSPredicateForm jSPredicateForm = null;
try {
  jSPredicateForm = new JSPredicateForm("(qM@ 2\"\"\"VkYj");
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("umd.cs.shop.JSTerm", e);
}

Test 7: 
JSPredicateForm jSPredicateForm = null;
try {
  jSPredicateForm = new JSPredicateForm("(%Ajp^t<Ol");
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("umd.cs.shop.JSPredicateForm", e);
}

Test 8: 
JSPredicateForm jSPredicateForm = null;
try {
  jSPredicateForm = new JSPredicateForm("(Xj%^t<OP");
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("umd.cs.shop.JSPredicateForm", e);
}

Test 9: 
JSPredicateForm jSPredicateForm = null;
try {
  jSPredicateForm = new JSPredicateForm("(KzD$R<]k38Cs g,5");
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("umd.cs.shop.JSPredicateForm", e);
}

Test 10: 
StringReader stringReader = new StringReader("Hieoz!OHh+UR8q<`()");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
jSTerm.add((Object) jSTerm);
JSPredicateForm standarizerPredicateForm = jSTerm.standarizerPredicateForm();
standarizerPredicateForm.print();
Test 11: 
JSPredicateForm jSPredicateForm = new JSPredicateForm();
jSPredicateForm.toStr();
Test 12: 
StringReader stringReader = new StringReader("Hieoz!OHh+UR8q<`()");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
jSTerm.add((Object) jSTerm);
JSPredicateForm clonePF = jSTerm.clonePF();
clonePF.toStr();
Test 13: 
StringReader stringReader = new StringReader("the tokenizer is SPACE!");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
jSTerm.add((Object) jSTerm);
JSSubstitution jSSubstitution = new JSSubstitution();
JSPredicateForm applySubstitutionPF = jSTerm.applySubstitutionPF(jSSubstitution);
jSTerm.matches(applySubstitutionPF, jSSubstitution);
Test 14: 
StringReader stringReader = new StringReader("6Wpyln-H4rHW");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
JSTerm jSTerm = new JSTerm(streamTokenizer);
jSTerm.matches((JSPredicateForm) jSTerm);
Test 15: 
StringReader stringReader = new StringReader("the tokenizer is SPACE!");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
jSTerm.add((Object) jSTerm);
JSSubstitution jSSubstitution = new JSSubstitution();
jSTerm.matches((JSPredicateForm) jSTerm, jSSubstitution);
Test 16: 
JSTerm jSTerm = new JSTerm();
jSTerm.equals((JSPredicateForm) null);
Test 17: 
StringReader stringReader = new StringReader("the tokenizer is SPACE!");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
JSPredicateForm jSPredicateForm = new JSPredicateForm();
jSTerm.equals(jSPredicateForm);
Test 18: 
StringReader stringReader = new StringReader("Expecting constant symbol as term");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
JSTerm jSTerm = new JSTerm(streamTokenizer);
jSTerm.equals((JSPredicateForm) jSTerm);
Test 19: 
StringReader stringReader = new StringReader("the tokenizer is SPACE!");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
jSTerm.add((Object) jSTerm);
jSTerm.equals((JSPredicateForm) jSTerm);
Test 20: 
StringReader stringReader = new StringReader("thU tkenizer isCSPACE!");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
JSTerm jSTerm = new JSTerm();
jSTerm.add((Object) jSTerm);
jSTerm.equals((JSPredicateForm) jSTerm);
Test 21: 
StringReader stringReader = new StringReader("Expecting constant symbol as term");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
JSSubstitution matches = jSTerm.matches((JSPredicateForm) jSTerm);
JSPredicateForm jSPredicateForm = new JSPredicateForm();
jSTerm.matches(jSPredicateForm, matches);
Test 22: 
StringReader stringReader = new StringReader("Expecting constant symbol as term");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
JSTerm jSTerm = new JSTerm(streamTokenizer);
JSSubstitution jSSubstitution = new JSSubstitution();
jSTerm.matches((JSPredicateForm) jSTerm, jSSubstitution);
Test 23: 
StringReader stringReader = new StringReader("Hieoz!OHh+UR8q<`()");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
jSTerm.add((Object) jSTerm);
JSSubstitution jSSubstitution = new JSSubstitution();
jSTerm.makeVariable();
JSPredicateForm applySubstitutionPF = jSTerm.applySubstitutionPF(jSSubstitution);
jSTerm.matches(applySubstitutionPF);
Test 24: 
StringReader stringReader = new StringReader("(Ajp^t<Ok");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSPredicateForm jSPredicateForm = new JSPredicateForm(streamTokenizer);

Test 25: 
String string = "John Doe";
JSPredicateForm jSPredicateForm = new JSPredicateForm("John Doe");
((JSPredicateForm) string).print();

Test 26: 
JSPredicateForm jSPredicateForm = new JSPredicateForm("(not (and (= 'apple' 'banana') (= 'orange' 'mango')))");

Test 27: 
JSPredicateForm jSPredicateForm = new JSPredicateForm((StreamTokenizer) "(name == 'John Doe' && age >= 18) || (name == 'Jane Smith' && age >= 21)");

Test 28: 
StringReader stringReader = new StringReader("the tokenizer is SPACE!");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
((JSPredicateForm) streamTokenizer).JSPredicateFormInit(streamTokenizer);

Test 29: 
JSPredicateForm jSPredicateForm = new JSPredicateForm("((12.5, 3.7), (4.3, 8.9))");

Test 30: 
JSPredicateForm jSPredicateForm = new JSPredicateForm("(qM@ 2\"\"\"VkYj");
String string = "(p @ 5\"\"\"bBcD";
JSPredicateForm jSPredicateForm = new JSPredicateForm(string);

Test 31: 
JSPredicateForm jSPredicateForm = new JSPredicateForm("(1234567890)");

Test 32: 
JSPredicateForm jSPredicateForm = new JSPredicateForm("John Smith");

Test 33: 
JSPredicateForm jSPredicateForm = new JSPredicateForm("(KzD$R<]k38Cs g,5)");

Test 34: 
JSPredicateForm jSPredicateForm = new JSPredicateForm();

Test 35: 
StringReader stringReader = new StringReader("Hello, World! How are you today?");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
boolean add = ((Vector) streamTokenizer).add((Object) jSTerm);
((JSPredicateForm) streamTokenizer).clonePF();
((JSPredicateForm) add).toStr();

Test 36: 
StringReader stringReader = new StringReader("the tokenizer is SPACE!");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
((Vector) streamTokenizer).add((Object) jSTerm);
JSSubstitution jSSubstitution = new JSSubstitution();
JSPredicateForm applySubstitutionPF = ((JSPredicateForm) streamTokenizer).applySubstitutionPF(jSSubstitution);
((JSPredicateForm) streamTokenizer).matches(applySubstitutionPF, jSSubstitution);

Test 37: 
StringReader stringReader = new StringReader("6Wpyln-H4rHW");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
((JSPredicateForm) streamTokenizer).matches((JSPredicateForm) jSTerm);

Test 38: 
StringReader stringReader = new StringReader("the tokenizer is SPACE!");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
((Vector) streamTokenizer).add((Object) jSTerm);
JSSubstitution jSSubstitution = new JSSubstitution();
((JSPredicateForm) streamTokenizer).matches((JSPredicateForm) jSTerm, jSSubstitution);

Test 39: 
StringReader stringReader = new StringReader("The tokenizer is a space-delimited text reader.");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
JSPredicateForm jSPredicateForm = new JSPredicateForm();
((JSPredicateForm) streamTokenizer).equals(jSPredicateForm);

Test 40: 
StringReader stringReader = new StringReader("Expecting constant symbol as term");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
JSTerm jSTerm = new JSTerm(streamTokenizer);
((JSPredicateForm) streamTokenizer).equals((JSPredicateForm) jSTerm);

Test 41: 
StringReader stringReader = new StringReader("This tokenizer isCSPACE!");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
JSTerm jSTerm = new JSTerm();
((Vector) streamTokenizer).add((Object) "This");
String string = "tokenizer";
((JSPredicateForm) streamTokenizer).equals((JSPredicateForm) string);

Test 42: 
StringReader stringReader = new StringReader("Expecting constant symbol as term");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
JSSubstitution matches = ((JSPredicateForm) streamTokenizer).matches((JSPredicateForm) jSTerm, (JSSubstitution) "X");
JSPredicateForm jSPredicateForm = new JSPredicateForm();
((JSPredicateForm) streamTokenizer).matches(jSPredicateForm, matches);

Test 43: 
StringReader stringReader = new StringReader("Expecting constant symbol as term");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
JSTerm jSTerm = new JSTerm(streamTokenizer);
JSSubstitution jSSubstitution = new JSSubstitution();
((JSPredicateForm) streamTokenizer).matches((JSPredicateForm) jSTerm, jSSubstitution);

Test 44: 
StringReader stringReader = new StringReader("Hieoz!OHh+UR8q<`()");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
((Vector) streamTokenizer).add((Object) jSTerm);
JSSubstitution jSSubstitution = new JSSubstitution();
((JSTerm) streamTokenizer).makeVariable();
JSPredicateForm applySubstitutionPF = ((JSPredicateForm) streamTokenizer).applySubstitutionPF(jSSubstitution);
((JSPredicateForm) streamTokenizer).matches(applySubstitutionPF);


* Minimizing test suite
* test suite isTestSuite: 26
Test 0: 
JSPredicateForm jSPredicateForm = null;
try {
  jSPredicateForm = new JSPredicateForm("(not (and (= 'apple' 'banana') (= 'orange' 'mango')))");
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("umd.cs.shop.JSTerm", e);
}

Test 1: 
JSPredicateForm jSPredicateForm = new JSPredicateForm((String) null);
jSPredicateForm.print();
Test 2: 
JSPredicateForm jSPredicateForm = null;
try {
  jSPredicateForm = new JSPredicateForm((StreamTokenizer) null);
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("umd.cs.shop.JSPredicateForm", e);
}

Test 3: 
JSPredicateForm jSPredicateForm = null;
try {
  jSPredicateForm = new JSPredicateForm("John Smith");
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("umd.cs.shop.JSPredicateForm", e);
}

Test 4: 
JSPredicateForm jSPredicateForm = null;
try {
  jSPredicateForm = new JSPredicateForm("(");
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("umd.cs.shop.JSPredicateForm", e);
}

Test 5: 
JSPredicateForm jSPredicateForm = null;
try {
  jSPredicateForm = new JSPredicateForm("()rAj[^t<OP");
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("umd.cs.shop.JSPredicateForm", e);
}

Test 6: 
StringReader stringReader = new StringReader("(!Ajp^t<Ok");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSPredicateForm jSPredicateForm = null;
try {
  jSPredicateForm = new JSPredicateForm(streamTokenizer);
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("umd.cs.shop.JSPredicateForm", e);
}

Test 7: 
JSPredicateForm jSPredicateForm = null;
try {
  jSPredicateForm = new JSPredicateForm("((12.5, 3.7), (4.3, 8.9))");
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("umd.cs.shop.JSPredicateForm", e);
}

Test 8: 
StringReader stringReader = new StringReader("(Ajp^t<Ok");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSPredicateForm jSPredicateForm = null;
try {
  jSPredicateForm = new JSPredicateForm(streamTokenizer);
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("umd.cs.shop.JSPredicateForm", e);
}

Test 9: 
JSPredicateForm jSPredicateForm = new JSPredicateForm("(KzD$R<]k38Cs g,5)");
Test 10: 
JSPredicateForm jSPredicateForm = null;
try {
  jSPredicateForm = new JSPredicateForm("(KzD$R<]k38Cs g,5");
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("umd.cs.shop.JSPredicateForm", e);
}

Test 11: 
StringReader stringReader = new StringReader("Hieoz!OHh+UR8q<`()");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
jSTerm.add((Object) jSTerm);
JSPredicateForm standarizerPredicateForm = jSTerm.standarizerPredicateForm();
standarizerPredicateForm.print();
Test 12: 
JSPredicateForm jSPredicateForm = new JSPredicateForm();
jSPredicateForm.toStr();
Test 13: 
StringReader stringReader = new StringReader("Hieoz!OHh+UR8q<`()");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
jSTerm.add((Object) jSTerm);
JSPredicateForm clonePF = jSTerm.clonePF();
clonePF.toStr();
Test 14: 
StringReader stringReader = new StringReader("the tokenizer is SPACE!");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
jSTerm.add((Object) jSTerm);
JSSubstitution jSSubstitution = new JSSubstitution();
JSPredicateForm applySubstitutionPF = jSTerm.applySubstitutionPF(jSSubstitution);
jSTerm.matches(applySubstitutionPF, jSSubstitution);
Test 15: 
StringReader stringReader = new StringReader("Expecting constant symbol as term");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
JSSubstitution matches = jSTerm.matches((JSPredicateForm) jSTerm);
JSPredicateForm jSPredicateForm = new JSPredicateForm();
jSTerm.matches(jSPredicateForm, matches);
Test 16: 
StringReader stringReader = new StringReader("6Wpyln-H4rHW");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
JSTerm jSTerm = new JSTerm(streamTokenizer);
jSTerm.matches((JSPredicateForm) jSTerm);
Test 17: 
StringReader stringReader = new StringReader("the tokenizer is SPACE!");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
jSTerm.add((Object) jSTerm);
JSSubstitution jSSubstitution = new JSSubstitution();
jSTerm.matches((JSPredicateForm) jSTerm, jSSubstitution);
Test 18: 
JSTerm jSTerm = new JSTerm();
jSTerm.equals((JSPredicateForm) null);
Test 19: 
StringReader stringReader = new StringReader("the tokenizer is SPACE!");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
JSPredicateForm jSPredicateForm = new JSPredicateForm();
jSTerm.equals(jSPredicateForm);
Test 20: 
StringReader stringReader = new StringReader("Expecting constant symbol as term");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
JSTerm jSTerm = new JSTerm(streamTokenizer);
jSTerm.equals((JSPredicateForm) jSTerm);
Test 21: 
StringReader stringReader = new StringReader("the tokenizer is SPACE!");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
jSTerm.add((Object) jSTerm);
jSTerm.equals((JSPredicateForm) jSTerm);
Test 22: 
StringReader stringReader = new StringReader("thU tkenizer isCSPACE!");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
JSTerm jSTerm = new JSTerm();
jSTerm.add((Object) jSTerm);
jSTerm.equals((JSPredicateForm) jSTerm);
Test 23: 
StringReader stringReader = new StringReader("Expecting constant symbol as term");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
JSTerm jSTerm = new JSTerm(streamTokenizer);
JSSubstitution jSSubstitution = new JSSubstitution();
jSTerm.matches((JSPredicateForm) jSTerm, jSSubstitution);
Test 24: 
StringReader stringReader = new StringReader("Hieoz!OHh+UR8q<`()");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
jSTerm.add((Object) jSTerm);
JSSubstitution jSSubstitution = new JSSubstitution();
jSTerm.makeVariable();
JSPredicateForm applySubstitutionPF = jSTerm.applySubstitutionPF(jSSubstitution);
jSTerm.matches(applySubstitutionPF);
Test 25: 
StringReader stringReader = new StringReader("the tokenizer is SPACE!");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
// Undeclared exception!
try { 
  ((JSPredicateForm) streamTokenizer).JSPredicateFormInit(streamTokenizer);
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
}


* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 84%
* Total number of goals: 87
* Number of covered goals: 73
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 75%
* Total number of goals: 165
* Number of covered goals: 124
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 45%
* Total number of goals: 55
* Number of covered goals: 25
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 12
* Number of covered goals: 12
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 84%
* Total number of goals: 87
* Number of covered goals: 73
* Generated 26 tests with total length 94
* Resulting test suite's coverage: 76% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 55%
* Compiling and checking tests
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: JSPredicateForm jSPredicateForm = null;
try {
  jSPredicateForm = new JSPredicateForm("(not (and (= 'apple' 'banana') (= 'orange' 'mango')))");
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("umd.cs.shop.JSTerm", e);
}


** It was a parseable test case! 
refined test name is: testConstructorThrowsExceptionForMalformedFormula
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: JSPredicateForm jSPredicateForm = new JSPredicateForm((String) null);
jSPredicateForm.print();
assertTrue(jSPredicateForm.isEmpty());


** It was a parseable test case! 
refined test name is: testNullInputStringIsEmpty
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: JSPredicateForm jSPredicateForm = null;
try {
  jSPredicateForm = new JSPredicateForm((StreamTokenizer) null);
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("umd.cs.shop.JSPredicateForm", e);
}


** It was a parseable test case! 
refined test name is: testNullStreamTokenizerConstructorThrowsError
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: JSPredicateForm jSPredicateForm = null;
try {
  jSPredicateForm = new JSPredicateForm("John Smith");
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("umd.cs.shop.JSPredicateForm", e);
}


** It was a parseable test case! 
refined test name is: testConstructorThrowsErrorWhenNameIsNull
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: JSPredicateForm jSPredicateForm = null;
try {
  jSPredicateForm = new JSPredicateForm("(");
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("umd.cs.shop.JSPredicateForm", e);
}


** It was a parseable test case! 
refined test name is: testInvalidArgumentThrowsException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: JSPredicateForm jSPredicateForm = null;
try {
  jSPredicateForm = new JSPredicateForm("()rAj[^t<OP");
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("umd.cs.shop.JSPredicateForm", e);
}


** It was a parseable test case! 
refined test name is: testParsePredicateStringWithInvalidInput
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: JSPredicateForm jSPredicateForm = null;
try {
  jSPredicateForm = new JSPredicateForm("((12.5, 3.7), (4.3, 8.9))");
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("umd.cs.shop.JSPredicateForm", e);
}


** It was a parseable test case! 
refined test name is: testInvalidArgumentThrowsExceptionWithNoMessage
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: JSPredicateForm jSPredicateForm = new JSPredicateForm("(KzD$R<]k38Cs g,5)");
assertEquals(2, jSPredicateForm.size());


** It was a parseable test case! 
refined test name is: testSizeOfJSPredicateFormIsProperlyCalculated
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: JSPredicateForm jSPredicateForm = null;
try {
  jSPredicateForm = new JSPredicateForm("(KzD$R<]k38Cs g,5");
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("umd.cs.shop.JSPredicateForm", e);
}


** It was a parseable test case! 
refined test name is: testFormulaIsValid
* Compiling Tests
refined test name is: testParseFormulaWithInvalidCharacters
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: JSPredicateForm jSPredicateForm = new JSPredicateForm();
StringBuffer str = jSPredicateForm.toStr();
assertEquals(0, str.length());


** It was a parseable test case! 
refined test name is: testJSPredicateFormToStrEmptyObject
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: JSTerm jSTerm = new JSTerm();
boolean equals = jSTerm.equals((JSPredicateForm) null);
assertFalse(equals);


** It was a parseable test case! 
refined test name is: testEqualswithNullArgumentreturnsFalse
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 09:50:36.632 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7090576536978270568.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 09:50:36.656 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7090576536978270568.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 09:50:36.712 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7090576536978270568.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 09:50:36.712 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7090576536978270568.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 09:50:36.770 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7090576536978270568.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 09:50:36.771 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7090576536978270568.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 09:50:36.824 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7090576536978270568.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 09:50:36.825 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7090576536978270568.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 09:50:36.877 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7090576536978270568.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 09:50:36.878 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7090576536978270568.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 09:50:36.934 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7090576536978270568.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 09:50:36.935 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7090576536978270568.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 09:50:36.990 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7090576536978270568.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 09:50:36.991 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7090576536978270568.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 09:50:37.036 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7090576536978270568.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 09:50:37.037 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7090576536978270568.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 09:50:37.087 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7090576536978270568.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 09:50:37.088 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7090576536978270568.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 09:50:37.145 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7090576536978270568.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 09:50:37.146 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7090576536978270568.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 09:50:37.202 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7090576536978270568.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 09:50:37.202 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7090576536978270568.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 8 called: 0 to improve: false
[MASTER] 09:50:37.424 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7090576536978270568.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 09:50:37.425 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7090576536978270568.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 2 called: 0 to improve: false
[MASTER] 09:50:37.511 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7090576536978270568.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 09:50:37.512 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7090576536978270568.jar
[MASTER] 09:50:37.688 [logback-1] WARN  TimeController - Already entered in phase: INLINING. This will mess up the timing calculations.
* test suite isTestSuite: 24
Test 0: 
StringReader stringReader = new StringReader("(!Ajp^t<Ok");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSPredicateForm jSPredicateForm = null;
try {
  jSPredicateForm = new JSPredicateForm(streamTokenizer);
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("umd.cs.shop.JSPredicateForm", e);
}

Test 1: 
JSPredicateForm jSPredicateForm = new JSPredicateForm((String) null);
jSPredicateForm.print();
Test 2: 
JSPredicateForm jSPredicateForm = null;
try {
  jSPredicateForm = new JSPredicateForm("(");
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("umd.cs.shop.JSPredicateForm", e);
}

Test 3: 
JSPredicateForm jSPredicateForm = null;
try {
  jSPredicateForm = new JSPredicateForm((StreamTokenizer) null);
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("umd.cs.shop.JSPredicateForm", e);
}

Test 4: 
StringReader stringReader = new StringReader("the tokenizer is SPACE!");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
// Undeclared exception!
try { 
  jSTerm.JSPredicateFormInit(streamTokenizer);
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("umd.cs.shop.JSPredicateForm", e);
}

Test 5: 
JSPredicateForm jSPredicateForm = null;
try {
  jSPredicateForm = new JSPredicateForm("()rAj[^t<OP");
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("umd.cs.shop.JSPredicateForm", e);
}

Test 6: 
JSPredicateForm jSPredicateForm = null;
try {
  jSPredicateForm = new JSPredicateForm("(qM@ 2\"\"\"VkYj");
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("umd.cs.shop.JSTerm", e);
}

Test 7: 
JSPredicateForm jSPredicateForm = null;
try {
  jSPredicateForm = new JSPredicateForm("(%Ajp^t<Ol");
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("umd.cs.shop.JSPredicateForm", e);
}

Test 8: 
JSPredicateForm jSPredicateForm = null;
try {
  jSPredicateForm = new JSPredicateForm("(Xj%^t<OP");
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("umd.cs.shop.JSPredicateForm", e);
}

Test 9: 
JSPredicateForm jSPredicateForm = null;
try {
  jSPredicateForm = new JSPredicateForm("(KzD$R<]k38Cs g,5");
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("umd.cs.shop.JSPredicateForm", e);
}

Test 10: 
StringReader stringReader = new StringReader("Hieoz!OHh+UR8q<`()");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
jSTerm.add((Object) jSTerm);
JSPredicateForm standarizerPredicateForm = jSTerm.standarizerPredicateForm();
standarizerPredicateForm.print();
Test 11: 
JSPredicateForm jSPredicateForm = new JSPredicateForm();
jSPredicateForm.toStr();
Test 12: 
StringReader stringReader = new StringReader("Hieoz!OHh+UR8q<`()");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
jSTerm.add((Object) jSTerm);
JSPredicateForm clonePF = jSTerm.clonePF();
clonePF.toStr();
Test 13: 
StringReader stringReader = new StringReader("the tokenizer is SPACE!");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
jSTerm.add((Object) jSTerm);
JSSubstitution jSSubstitution = new JSSubstitution();
JSPredicateForm applySubstitutionPF = jSTerm.applySubstitutionPF(jSSubstitution);
jSTerm.matches(applySubstitutionPF, jSSubstitution);
Test 14: 
StringReader stringReader = new StringReader("6Wpyln-H4rHW");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
JSTerm jSTerm = new JSTerm(streamTokenizer);
jSTerm.matches((JSPredicateForm) jSTerm);
Test 15: 
StringReader stringReader = new StringReader("the tokenizer is SPACE!");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
jSTerm.add((Object) jSTerm);
JSSubstitution jSSubstitution = new JSSubstitution();
jSTerm.matches((JSPredicateForm) jSTerm, jSSubstitution);
Test 16: 
JSTerm jSTerm = new JSTerm();
jSTerm.equals((JSPredicateForm) null);
Test 17: 
StringReader stringReader = new StringReader("the tokenizer is SPACE!");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
JSPredicateForm jSPredicateForm = new JSPredicateForm();
jSTerm.equals(jSPredicateForm);
Test 18: 
StringReader stringReader = new StringReader("Expecting constant symbol as term");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
JSTerm jSTerm = new JSTerm(streamTokenizer);
jSTerm.equals((JSPredicateForm) jSTerm);
Test 19: 
StringReader stringReader = new StringReader("the tokenizer is SPACE!");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
jSTerm.add((Object) jSTerm);
jSTerm.equals((JSPredicateForm) jSTerm);
Test 20: 
StringReader stringReader = new StringReader("thU tkenizer isCSPACE!");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
JSTerm jSTerm = new JSTerm();
jSTerm.add((Object) jSTerm);
jSTerm.equals((JSPredicateForm) jSTerm);
Test 21: 
StringReader stringReader = new StringReader("Expecting constant symbol as term");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
JSSubstitution matches = jSTerm.matches((JSPredicateForm) jSTerm);
JSPredicateForm jSPredicateForm = new JSPredicateForm();
jSTerm.matches(jSPredicateForm, matches);
Test 22: 
StringReader stringReader = new StringReader("Expecting constant symbol as term");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
JSTerm jSTerm = new JSTerm(streamTokenizer);
JSSubstitution jSSubstitution = new JSSubstitution();
jSTerm.matches((JSPredicateForm) jSTerm, jSSubstitution);
Test 23: 
StringReader stringReader = new StringReader("Hieoz!OHh+UR8q<`()");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
jSTerm.add((Object) jSTerm);
JSSubstitution jSSubstitution = new JSSubstitution();
jSTerm.makeVariable();
JSPredicateForm applySubstitutionPF = jSTerm.applySubstitutionPF(jSSubstitution);
jSTerm.matches(applySubstitutionPF);

* Minimizing test suite
* test suite isTestSuite: 24
Test 0: 
JSPredicateForm jSPredicateForm = null;
try {
  jSPredicateForm = new JSPredicateForm((StreamTokenizer) null);
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("umd.cs.shop.JSPredicateForm", e);
}

Test 1: 
JSPredicateForm jSPredicateForm = new JSPredicateForm((String) null);
jSPredicateForm.print();
Test 2: 
JSPredicateForm jSPredicateForm = null;
try {
  jSPredicateForm = new JSPredicateForm("(");
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("umd.cs.shop.JSPredicateForm", e);
}

Test 3: 
StringReader stringReader = new StringReader("the tokenizer is SPACE!");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
// Undeclared exception!
try { 
  jSTerm.JSPredicateFormInit(streamTokenizer);
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("umd.cs.shop.JSPredicateForm", e);
}

Test 4: 
JSPredicateForm jSPredicateForm = null;
try {
  jSPredicateForm = new JSPredicateForm("(%Ajp^t<Ol");
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("umd.cs.shop.JSPredicateForm", e);
}

Test 5: 
JSPredicateForm jSPredicateForm = null;
try {
  jSPredicateForm = new JSPredicateForm("()rAj[^t<OP");
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("umd.cs.shop.JSPredicateForm", e);
}

Test 6: 
StringReader stringReader = new StringReader("(!Ajp^t<Ok");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSPredicateForm jSPredicateForm = null;
try {
  jSPredicateForm = new JSPredicateForm(streamTokenizer);
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("umd.cs.shop.JSPredicateForm", e);
}

Test 7: 
JSPredicateForm jSPredicateForm = null;
try {
  jSPredicateForm = new JSPredicateForm("(KzD$R<]k38Cs g,5");
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("umd.cs.shop.JSPredicateForm", e);
}

Test 8: 
JSPredicateForm jSPredicateForm = null;
try {
  jSPredicateForm = new JSPredicateForm("(Xj%^t<OP");
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("umd.cs.shop.JSPredicateForm", e);
}

Test 9: 
JSPredicateForm jSPredicateForm = null;
try {
  jSPredicateForm = new JSPredicateForm("(qM@ 2\"\"\"VkYj");
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("umd.cs.shop.JSTerm", e);
}

Test 10: 
StringReader stringReader = new StringReader("Hieoz!OHh+UR8q<`()");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
jSTerm.add((Object) jSTerm);
JSPredicateForm standarizerPredicateForm = jSTerm.standarizerPredicateForm();
standarizerPredicateForm.print();
Test 11: 
JSPredicateForm jSPredicateForm = new JSPredicateForm();
jSPredicateForm.toStr();
Test 12: 
StringReader stringReader = new StringReader("Hieoz!OHh+UR8q<`()");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
jSTerm.add((Object) jSTerm);
JSPredicateForm clonePF = jSTerm.clonePF();
clonePF.toStr();
Test 13: 
StringReader stringReader = new StringReader("the tokenizer is SPACE!");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
jSTerm.add((Object) jSTerm);
JSSubstitution jSSubstitution = new JSSubstitution();
JSPredicateForm applySubstitutionPF = jSTerm.applySubstitutionPF(jSSubstitution);
jSTerm.matches(applySubstitutionPF, jSSubstitution);
Test 14: 
StringReader stringReader = new StringReader("Expecting constant symbol as term");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
JSSubstitution matches = jSTerm.matches((JSPredicateForm) jSTerm);
JSPredicateForm jSPredicateForm = new JSPredicateForm();
jSTerm.matches(jSPredicateForm, matches);
Test 15: 
StringReader stringReader = new StringReader("6Wpyln-H4rHW");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
JSTerm jSTerm = new JSTerm(streamTokenizer);
jSTerm.matches((JSPredicateForm) jSTerm);
Test 16: 
StringReader stringReader = new StringReader("the tokenizer is SPACE!");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
jSTerm.add((Object) jSTerm);
JSSubstitution jSSubstitution = new JSSubstitution();
jSTerm.matches((JSPredicateForm) jSTerm, jSSubstitution);
Test 17: 
JSTerm jSTerm = new JSTerm();
jSTerm.equals((JSPredicateForm) null);
Test 18: 
StringReader stringReader = new StringReader("the tokenizer is SPACE!");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
JSPredicateForm jSPredicateForm = new JSPredicateForm();
jSTerm.equals(jSPredicateForm);
Test 19: 
StringReader stringReader = new StringReader("Expecting constant symbol as term");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
JSTerm jSTerm = new JSTerm(streamTokenizer);
jSTerm.equals((JSPredicateForm) jSTerm);
Test 20: 
StringReader stringReader = new StringReader("the tokenizer is SPACE!");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
jSTerm.add((Object) jSTerm);
jSTerm.equals((JSPredicateForm) jSTerm);
Test 21: 
StringReader stringReader = new StringReader("thU tkenizer isCSPACE!");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
JSTerm jSTerm = new JSTerm();
jSTerm.add((Object) jSTerm);
jSTerm.equals((JSPredicateForm) jSTerm);
Test 22: 
StringReader stringReader = new StringReader("Expecting constant symbol as term");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
JSTerm jSTerm = new JSTerm(streamTokenizer);
JSSubstitution jSSubstitution = new JSSubstitution();
jSTerm.matches((JSPredicateForm) jSTerm, jSSubstitution);
Test 23: 
StringReader stringReader = new StringReader("Hieoz!OHh+UR8q<`()");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
jSTerm.add((Object) jSTerm);
JSSubstitution jSSubstitution = new JSSubstitution();
jSTerm.makeVariable();
JSPredicateForm applySubstitutionPF = jSTerm.applySubstitutionPF(jSSubstitution);
jSTerm.matches(applySubstitutionPF);

[MASTER] 09:50:39.083 [logback-1] WARN  TimeController - Already entered in phase: MINIMIZATION. This will mess up the timing calculations.
* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 82%
* Total number of goals: 87
* Number of covered goals: 71
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 73%
* Total number of goals: 165
* Number of covered goals: 121
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 45%
* Total number of goals: 55
* Number of covered goals: 25
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 12
* Number of covered goals: 12
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 82%
* Total number of goals: 87
* Number of covered goals: 71
[MASTER] 09:50:39.143 [logback-1] WARN  TimeController - Already entered in phase: COVERAGE_ANALYSIS. This will mess up the timing calculations.
* Generated 24 tests with total length 91
* Resulting test suite's coverage: 76% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 52%
[MASTER] 09:51:23.479 [logback-1] WARN  TimeController - Already entered in phase: ASSERTION_GENERATION. This will mess up the timing calculations.
* Compiling and checking tests
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 09:51:24.493 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7090576536978270568.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 09:51:24.494 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7090576536978270568.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 09:51:24.551 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7090576536978270568.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 09:51:24.551 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7090576536978270568.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 09:51:24.594 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7090576536978270568.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 09:51:24.595 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7090576536978270568.jar
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 09:51:24.638 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7090576536978270568.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 09:51:24.639 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7090576536978270568.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 09:51:24.681 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7090576536978270568.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 09:51:24.682 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7090576536978270568.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 09:51:24.724 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7090576536978270568.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 09:51:24.725 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7090576536978270568.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 09:51:24.770 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7090576536978270568.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 09:51:24.772 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7090576536978270568.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 09:51:24.849 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7090576536978270568.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 09:51:24.850 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7090576536978270568.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 09:51:24.898 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7090576536978270568.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 09:51:24.899 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7090576536978270568.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 09:51:24.937 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7090576536978270568.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 09:51:24.938 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7090576536978270568.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
** Write a test suite: 4 called: 4 to improve: false
** Write a test suite: 5 called: 5 to improve: false
** Write a test suite: 6 called: 6 to improve: false
** Write a test suite: 7 called: 7 to improve: false
** Write a test suite: 8 called: 8 to improve: false
** Write a test suite: 9 called: 9 to improve: false
[MASTER] 09:51:25.139 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7090576536978270568.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 09:51:25.141 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7090576536978270568.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
** Write a test suite: 4 called: 4 to improve: false
** Write a test suite: 5 called: 5 to improve: false
** Write a test suite: 6 called: 6 to improve: false
** Write a test suite: 7 called: 7 to improve: false
** Write a test suite: 8 called: 8 to improve: false
** Write a test suite: 9 called: 9 to improve: false
[MASTER] 09:51:25.321 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7090576536978270568.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 09:51:25.323 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7090576536978270568.jar
* Writing tests to file
[MASTER] 09:51:25.328 [logback-1] WARN  TimeController - Already entered in phase: JUNIT_CHECK. This will mess up the timing calculations.
* Writing JUnit test case 'JSPredicateForm_ESTest' to evosuite-tests
** Write a test suite: 2 called: 0 to improve: false
* Writing JUnit test case 'JSPredicateForm_Original_ESTest' to evosuite-tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
** Write a test suite: 4 called: 4 to improve: false
** Write a test suite: 5 called: 5 to improve: false
** Write a test suite: 6 called: 6 to improve: false
** Write a test suite: 7 called: 7 to improve: false
** Write a test suite: 8 called: 8 to improve: false
** Write a test suite: 9 called: 9 to improve: false
* Done!

* Computation finished
