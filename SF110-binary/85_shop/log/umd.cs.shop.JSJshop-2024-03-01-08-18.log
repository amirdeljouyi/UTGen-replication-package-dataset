* EvoSuite 1.2.1-SNAPSHOT
* Going to generate test cases for class: umd.cs.shop.JSJshop
* Starting Client-0
* Properties loaded from /home/ubuntu/UTestGen/Evaluation/getting_results/dataset/SF110/85_shop/evosuite-files/evosuite.properties
* Connecting to master process on port 16629
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 08:18:45.649 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 08:18:45.658 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 08:18:45.659 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 08:18:45.893 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 08:18:46.247 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 08:18:46.248 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 08:18:47.322 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 08:18:47.362 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 08:18:47.363 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 08:18:47.363 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 08:18:47.363 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 08:18:47.363 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 08:18:47.363 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 08:18:47.364 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 08:18:47.364 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 08:18:47.373 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 08:18:47.378 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
* Finished analyzing classpath
* Generating tests for class umd.cs.shop.JSJshop
* Test criteria:
  - Branch Coverage
  - Line Coverage
  - Method-Output Coverage
  - Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 528
* Using seed 1709281123996
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%]* Initial Number of Goals in DynaMOSA = 132 / 528
[Progress:==>                           9%] [Cov:=======>                           22%][Progress:==>                           9%] [Cov:=======>                           22%][Progress:===>                          10%] [Cov:==========>                        29%][Progress:===>                          13%] [Cov:===========>                       32%][Progress:=====>                        19%] [Cov:===========>                       32%][Progress:=====>                        19%] [Cov:===========>                       32%][Progress:=======>                      26%] [Cov:===========>                       34%][Progress:=======>                      26%] [Cov:===========>                       34%][Progress:=======>                      26%] [Cov:===========>                       34%][Progress:========>                     29%] [Cov:===========>                       34%][Progress:========>                     29%] [Cov:===========>                       34%][Progress:=========>                    32%] [Cov:===========>                       34%][Progress:=========>                    32%] [Cov:===========>                       34%][Progress:==========>                   36%] [Cov:===========>                       34%][Progress:==========>                   36%] [Cov:===========>                       34%][Progress:==========>                   36%] [Cov:===========>                       34%][Progress:===========>                  39%] [Cov:===========>                       34%][Progress:===========>                  39%] [Cov:===========>                       34%][Progress:===========>                  39%] [Cov:===========>                       34%][Progress:===========>                  39%] [Cov:===========>                       34%][Progress:=============>                46%] [Cov:===========>                       34%][Progress:==============>               49%] [Cov:===========>                       34%][Progress:==============>               49%] [Cov:===========>                       34%][Progress:==============>               49%] [Cov:===========>                       34%][Progress:================>             55%] [Cov:===========>                       34%][Progress:================>             55%] [Cov:===========>                       34%][Progress:=================>            58%] [Cov:===========>                       34%][Progress:=================>            59%] [Cov:===========>                       34%][Progress:==================>           62%] [Cov:===========>                       34%][Progress:==================>           62%] [Cov:============>                      35%][Progress:====================>         68%] [Cov:============>                      37%][Progress:=====================>        73%] [Cov:=============>                     38%][Progress:======================>       76%] [Cov:=============>                     38%][Progress:======================>       76%] [Cov:=============>                     38%][Progress:======================>       76%] [Cov:=============>                     38%][Progress:=======================>      79%] [Cov:=============>                     38%][Progress:===========================>  91%] [Cov:=============>                     38%][Progress:============================> 95%] [Cov:=============>                     38%][Progress:==============================100%] [Cov:=============>                     38%]
* Search finished after 102s and 38 generations, 13026 statements, best individual has fitness: 362.0
* Generated before the refinement 22 tests with total length 57
statement is: umd.cs.shop.JSJshop()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class umd.cs.shop.JSJshop
statement code is: JSJshop jSJshop = new JSJshop()
statement is: getTree()Lumd/cs/shop/JSJshopNode; type is: class org.evosuite.testcase.statements.MethodStatement return type class umd.cs.shop.JSJshopNode
statement code is: JSJshopNode tree = jSJshop.getTree()
test data is: JSJshop jSJshop = new JSJshop();
jSJshop.getTree();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data:
        int numItems = 10;// Changed from a hardcoded value of 5 to a more descriptive variable name

        String itemName = "Shoe";// Changed from a hardcoded string to a more specific and representative value

        double price = 99.99;// Changed from a hardcoded value to a more representative price range

        int quantity = 2;// Changed from a hardcoded value to a more descriptive variable name

        String description = "A stylish and comfortable shoe for running";// Changed from a hardcoded string to a more specific and representative value

        jSJshop.addItem(numItems, itemName, price, quantity, description);
    }
}
statement is: // Improved test data:
int numItems = 10// Changed from a hardcoded value of 5 to a more descriptive variable name
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String itemName = "Shoe"// Changed from a hardcoded string to a more specific and representative value
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: double price = 99.99// Changed from a hardcoded value to a more representative price range
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: int quantity = 2// Changed from a hardcoded value to a more descriptive variable name
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String description = "A stylish and comfortable shoe for running"// Changed from a hardcoded string to a more specific and representative value
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: jSJshop.addItem(numItems, itemName, price, quantity, description), class spoon.support.reflect.code.CtInvocationImpl
invocation is: jSJshop.addItem(numItems, itemName, price, quantity, description) target is: jSJshop method is: addItem(int,java.lang.String,double,int,java.lang.String)
* this is vulnerable: int _int = 10
* this is vulnerable: String string = "Shoe"
* this is vulnerable: double _double = 99.99
* this is vulnerable: int _int = 2
* this is vulnerable: String string = "A stylish and comfortable shoe for running"
TestCase is: int _int = 10;
String string = "Shoe";
double _double = 99.99;
int _int = 2;
String string = "A stylish and comfortable shoe for running";

statement is: umd.cs.shop.JSJshop()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class umd.cs.shop.JSJshop
statement code is: JSJshop jSJshop = new JSJshop()
statement is: getAppletURL(Ljava/lang/String;Ljavax/swing/JApplet;)Ljava/net/URL; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.net.URL
statement code is: URL appletURL = jSJshop.getAppletURL("Ioo!c>ZTn35c_", (JApplet) null)
test data is: JSJshop jSJshop = new JSJshop();
jSJshop.getAppletURL("Ioo!c>ZTn35c_", (JApplet) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        JSJshop jSJshop = new JSJshop();
        jSJshop.getAppletURL("https://www.example.com", ((JApplet) (null)));
    }
}
statement is: JSJshop jSJshop = new JSJshop(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: jSJshop.getAppletURL("https://www.example.com", ((JApplet) (null))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: jSJshop.getAppletURL("https://www.example.com", ((JApplet) (null))) target is: jSJshop method is: getAppletURL(java.lang.String,JApplet)
source statement: umd.cs.shop.JSJshop()V callee: VariableReference: Statement 0, type umd.cs.shop.JSJshopindex is: 0
Matched Method is: getAppletURL(Ljava/lang/String;Ljavax/swing/JApplet;)Ljava/net/URL;
i 1 Parameters size() 1 Num of Method Parameters: 2
TestCase is: JSJshop jSJshop = new JSJshop();
String string = "https://www.example.com";
JApplet jApplet = null;
jSJshop.getAppletURL(string, jApplet);

statement is: umd.cs.shop.JSJshop()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class umd.cs.shop.JSJshop
statement code is: JSJshop jSJshop = new JSJshop()
statement is: getSolution()Lumd/cs/shop/JSPairPlanTSListNodes; type is: class org.evosuite.testcase.statements.MethodStatement return type class umd.cs.shop.JSPairPlanTSListNodes
statement code is: JSPairPlanTSListNodes solution = jSJshop.getSolution()
test data is: JSJshop jSJshop = new JSJshop();
jSJshop.getSolution();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        JSJshop jSJshop = new JSJshop();
        jSJshop.getSolution(10, "Hello", 3.5, 'A');
    }
}
statement is: JSJshop jSJshop = new JSJshop(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: jSJshop.getSolution(10, "Hello", 3.5, 'A'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: jSJshop.getSolution(10, "Hello", 3.5, 'A') target is: jSJshop method is: getSolution(int,java.lang.String,double,char)
TestCase is: JSJshop jSJshop = new JSJshop();

statement is: umd.cs.shop.JSJshop()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class umd.cs.shop.JSJshop
statement code is: JSJshop jSJshop = new JSJshop()
statement is: sol()Lumd/cs/shop/JSPlan; type is: class org.evosuite.testcase.statements.MethodStatement return type class umd.cs.shop.JSPlan
statement code is: JSPlan sol = jSJshop.sol()
test data is: JSJshop jSJshop = new JSJshop();
jSJshop.sol();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        int num = -5;
        String str = "Hola World";
        boolean bool = false;
        char ch = 'Z';
        double d = -3.14;
        float f = ((float) (d));
        long l = -10000000000L;
    }
}
statement is: int num = -5, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtUnaryOperatorImpl
IT HAS NOT BEEN SUPPORTED YET: -5
statement is: String str = "Hola World", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: boolean bool = false, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: char ch = 'Z', class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: double d = -3.14, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtUnaryOperatorImpl
IT HAS NOT BEEN SUPPORTED YET: -3.14
statement is: float f = ((float) (d)), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtVariableReadImpl
IT HAS NOT BEEN SUPPORTED YET: ((float) (d))
statement is: long l = -10000000000L, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtUnaryOperatorImpl
IT HAS NOT BEEN SUPPORTED YET: -10000000000L
* this is vulnerable: String string = "Hola World"
* this is vulnerable: boolean _boolean = false
* this is vulnerable: char _char = 'Z'
TestCase is: String string = "Hola World";
boolean _boolean = false;
char _char = 'Z';

statement is: umd.cs.shop.JSJshop()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class umd.cs.shop.JSJshop
statement code is: JSJshop jSJshop = new JSJshop()
statement is: tree()Lumd/cs/shop/JSJshopNode; type is: class org.evosuite.testcase.statements.MethodStatement return type class umd.cs.shop.JSJshopNode
statement code is: JSJshopNode tree = jSJshop.tree()
test data is: JSJshop jSJshop = new JSJshop();
jSJshop.tree();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        int customerId = 1357;
        String productName = "Google Pixel 4";
        double totalPrice = 499.0;
    }
}
statement is: int customerId = 1357, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String productName = "Google Pixel 4", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: double totalPrice = 499.0, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
* this is vulnerable: int _int = 1357
* this is vulnerable: String string = "Google Pixel 4"
* this is vulnerable: double _double = 499.0
TestCase is: int _int = 1357;
String string = "Google Pixel 4";
double _double = 499.0;

statement is: umd.cs.shop.JSJshop()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class umd.cs.shop.JSJshop
statement code is: JSJshop jSJshop = new JSJshop()
statement is: prob()Lumd/cs/shop/JSPlanningProblem; type is: class org.evosuite.testcase.statements.MethodStatement return type class umd.cs.shop.JSPlanningProblem
statement code is: JSPlanningProblem prob = jSJshop.prob()
test data is: JSJshop jSJshop = new JSJshop();
jSJshop.prob();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        int a = 10;
        double b = 2.71828;
        String c = "Good Morning!";
        char d = 'Z';
        System.out.println(a);
        System.out.println(b);
        System.out.println(c);
        System.out.println(d);
    }
}
statement is: int a = 10, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: double b = 2.71828, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String c = "Good Morning!", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: char d = 'Z', class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: System.out.println(a), class spoon.support.reflect.code.CtInvocationImpl
invocation is: System.out.println(a) target is: System.out method is: println(int)
statement is: System.out.println(b), class spoon.support.reflect.code.CtInvocationImpl
invocation is: System.out.println(b) target is: System.out method is: println(double)
statement is: System.out.println(c), class spoon.support.reflect.code.CtInvocationImpl
invocation is: System.out.println(c) target is: System.out method is: println(java.lang.String)
statement is: System.out.println(d), class spoon.support.reflect.code.CtInvocationImpl
invocation is: System.out.println(d) target is: System.out method is: println(char)
* this is vulnerable: int _int = 10
* this is vulnerable: double _double = 2.71828
* this is vulnerable: String string = "Good Morning!"
* this is vulnerable: char _char = 'Z'
TestCase is: int _int = 10;
double _double = 2.71828;
String string = "Good Morning!";
char _char = 'Z';

statement is: umd.cs.shop.JSJshop()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class umd.cs.shop.JSJshop
statement code is: JSJshop jSJshop = new JSJshop()
statement is: dom()Lumd/cs/shop/JSPlanningDomain; type is: class org.evosuite.testcase.statements.MethodStatement return type class umd.cs.shop.JSPlanningDomain
statement code is: JSPlanningDomain dom = jSJshop.dom()
test data is: JSJshop jSJshop = new JSJshop();
jSJshop.dom();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        JSJshop jSJshop = new JSJshop();
        jSJshop.dom();
        assertEquals(jSJshop.getId(), 123);
        assertEquals(jSJshop.getName(), "John's Shop");
        assertEquals(jSJshop.getCategory(), ELECTRONICS);
    }
}
statement is: JSJshop jSJshop = new JSJshop(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: jSJshop.dom(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: jSJshop.dom() target is: jSJshop method is: dom()
source statement: umd.cs.shop.JSJshop()V callee: VariableReference: Statement 0, type umd.cs.shop.JSJshopindex is: 0
Matched Method is: dom()Lumd/cs/shop/JSPlanningDomain;
statement is: assertEquals(jSJshop.getId(), 123), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(jSJshop.getId(), 123) target is:  method is: assertEquals(<unknown>,int)
statement is: assertEquals(jSJshop.getName(), "John's Shop"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(jSJshop.getName(), "John's Shop") target is:  method is: assertEquals(<unknown>,java.lang.String)
statement is: assertEquals(jSJshop.getCategory(), ELECTRONICS), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(jSJshop.getCategory(), ELECTRONICS) target is:  method is: assertEquals(<unknown>,<unknown>)
TestCase is: JSJshop jSJshop = new JSJshop();
jSJshop.dom();

statement is: org.evosuite.testcase.statements.ArrayStatement@7c7d4b16 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[1]
statement is: main([Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: JSJshop.main(arg0)
test data is: String[] stringArray = new String[1];
JSJshop.main(stringArray);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data
        String[] stringArray = new String[]{ "--help" };
        JSJshop.main(stringArray);
    }
}
statement is: // Improved test data
String[] stringArray = new String[]{ "--help" }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: String[] stringArray = new String[1] isAssignment: false Array: new String[]{ "--help" } Elements: ["--help"]
lengths: [1] []
statement is: JSJshop.main(stringArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: JSJshop.main(stringArray) target is: JSJshop method is: main(java.lang.String[])
Matched Method is: main([Ljava/lang/String;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
TestCase is: String[] stringArray = null;
JSJshop.main(stringArray);

statement is: org.evosuite.testcase.statements.ArrayStatement@20b49b3e type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[5]
statement is: main([Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: JSJshop.main(arg0)
test data is: String[] stringArray = new String[5];
JSJshop.main(stringArray);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data for the code snippet
        String[] stringArray = new String[]{ "Apple", "Banana", "Orange", "Grapefruit", "Lemon" };
        JSJshop.main(stringArray);
    }
}
statement is: // Improved test data for the code snippet
String[] stringArray = new String[]{ "Apple", "Banana", "Orange", "Grapefruit", "Lemon" }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: String[] stringArray = new String[5] isAssignment: false Array: new String[]{ "Apple", "Banana", "Orange", "Grapefruit", "Lemon" } Elements: ["Apple", "Banana", "Orange", "Grapefruit", "Lemon"]
lengths: [5] []
statement is: JSJshop.main(stringArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: JSJshop.main(stringArray) target is: JSJshop method is: main(java.lang.String[])
Matched Method is: main([Ljava/lang/String;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
TestCase is: String[] stringArray = null;
JSJshop.main(stringArray);

statement is: org.evosuite.testcase.statements.ArrayStatement@8f5a3238 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[3]
statement is: org.evosuite.testcase.statements.AssignmentStatement@18f5ec4d type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[2] = "one"
statement is: main([Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: JSJshop.main(arg0)
test data is: String[] stringArray = new String[3];
stringArray[2] = "one";
JSJshop.main(stringArray);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        String[] stringArray = new String[3];
        stringArray[0] = "apple";
        stringArray[1] = "banana";
        stringArray[2] = "cherry";
        JSJshop.main(stringArray);
    }
}
statement is: String[] stringArray = new String[3], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [3] Ct is: String[] stringArray = new String[3] isAssignment: false Array: new String[3] Elements: []
lengths: [3] [3]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "apple", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"apple" Ct is: stringArray[0] = "apple"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[1] = "banana", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"banana" Ct is: stringArray[1] = "banana"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[2] = "cherry", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"cherry" Ct is: stringArray[2] = "cherry"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: JSJshop.main(stringArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: JSJshop.main(stringArray) target is: JSJshop method is: main(java.lang.String[])
Matched Method is: main([Ljava/lang/String;)V
TestCase is: String[] stringArray = new String[3];
String string = "apple";
stringArray[2] = string;
String string = "banana";
stringArray[2] = string;
String string = "cherry";
stringArray[2] = string;
JSJshop.main(stringArray);

statement is: org.evosuite.testcase.statements.ArrayStatement@65b65b75 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[4]
statement is: org.evosuite.testcase.statements.AssignmentStatement@6c249e18 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[2] = "all"
statement is: main([Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: JSJshop.main(arg0)
test data is: String[] stringArray = new String[4];
stringArray[2] = "all";
JSJshop.main(stringArray);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        String[] stringArray = new String[4];
        stringArray[0] = "-c";
        stringArray[1] = "./test.jsj";
        stringArray[2] = "all";
        JSJshop.main(stringArray);
    }
}
statement is: String[] stringArray = new String[4], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [4] Ct is: String[] stringArray = new String[4] isAssignment: false Array: new String[4] Elements: []
lengths: [4] [4]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "-c", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"-c" Ct is: stringArray[0] = "-c"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[1] = "./test.jsj", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"./test.jsj" Ct is: stringArray[1] = "./test.jsj"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[2] = "all", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"all" Ct is: stringArray[2] = "all"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: JSJshop.main(stringArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: JSJshop.main(stringArray) target is: JSJshop method is: main(java.lang.String[])
Matched Method is: main([Ljava/lang/String;)V
TestCase is: String[] stringArray = new String[4];
String string = "-c";
stringArray[2] = string;
String string = "./test.jsj";
stringArray[2] = string;
String string = "all";
stringArray[2] = string;
JSJshop.main(stringArray);

statement is: umd.cs.shop.JSJshop(Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class umd.cs.shop.JSJshop
statement code is: JSJshop jSJshop = new JSJshop("Here starts the tree", "")
test data is: JSJshop jSJshop = new JSJshop("Here starts the tree", "");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data
        int numberOfItems = 10;
        String itemName = "Widget";
        double itemPrice = 19.99;
        char itemCategory = 'E';
        JSJshop jSJshop = new JSJshop("Here starts the tree", "");
        jSJshop.addItem(numberOfItems, itemName, itemPrice, itemCategory);
    }
}
statement is: // Improved test data
int numberOfItems = 10, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String itemName = "Widget", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: double itemPrice = 19.99, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: char itemCategory = 'E', class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: JSJshop jSJshop = new JSJshop("Here starts the tree", ""), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: jSJshop.addItem(numberOfItems, itemName, itemPrice, itemCategory), class spoon.support.reflect.code.CtInvocationImpl
invocation is: jSJshop.addItem(numberOfItems, itemName, itemPrice, itemCategory) target is: jSJshop method is: addItem(int,java.lang.String,double,char)
* this is vulnerable: int _int = 10
* this is vulnerable: String string = "Widget"
* this is vulnerable: double _double = 19.99
* this is vulnerable: char _char = 'E'
TestCase is: int _int = 10;
String string = "Widget";
double _double = 19.99;
char _char = 'E';
String string = "Here starts the tree";
String string = "";
JSJshop jSJshop = new JSJshop(string, string);

statement is: umd.cs.shop.JSJshop()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class umd.cs.shop.JSJshop
statement code is: JSJshop jSJshop = new JSJshop()
statement is: getAddList()Lumd/cs/shop/JSListLogicalAtoms; type is: class org.evosuite.testcase.statements.MethodStatement return type class umd.cs.shop.JSListLogicalAtoms
statement code is: JSListLogicalAtoms addList = jSJshop.getAddList()
test data is: JSJshop jSJshop = new JSJshop();
jSJshop.getAddList();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        JSJshop jSJshop = new JSJshop();
        jSJshop.getAddList("ABC123", "John Doe", 35, "john.doe@example.com");
    }
}
statement is: JSJshop jSJshop = new JSJshop(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: jSJshop.getAddList("ABC123", "John Doe", 35, "john.doe@example.com"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: jSJshop.getAddList("ABC123", "John Doe", 35, "john.doe@example.com") target is: jSJshop method is: getAddList(java.lang.String,java.lang.String,int,java.lang.String)
TestCase is: JSJshop jSJshop = new JSJshop();

statement is: umd.cs.shop.JSJshop()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class umd.cs.shop.JSJshop
statement code is: JSJshop jSJshop = new JSJshop()
statement is: getDeleteList()Lumd/cs/shop/JSListLogicalAtoms; type is: class org.evosuite.testcase.statements.MethodStatement return type class umd.cs.shop.JSListLogicalAtoms
statement code is: JSListLogicalAtoms deleteList = jSJshop.getDeleteList()
test data is: JSJshop jSJshop = new JSJshop();
jSJshop.getDeleteList();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        @Change
        the primitive;
        and Strings;
        such(integers, doubles, strings, chars);
        more illustrative;
        For example;
        For instead;
        the value;
    }
}
statement is: @Change
the primitive, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: and Strings, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: such(integers, doubles, strings, chars), class spoon.support.reflect.code.CtInvocationImpl
invocation is: such(integers, doubles, strings, chars) target is:  method is: such(<unknown>,<unknown>,<unknown>,<unknown>)
statement is: more illustrative, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: For example, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: For instead, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: the value, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("weq<Yu7])#") type is: class org.evosuite.testcase.statements.environment.FileNamePrimitiveStatement return type class org.evosuite.runtime.testdata.EvoSuiteFile
statement code is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("weq<Yu7])#")
statement is: org.evosuite.testcase.statements.ArrayStatement@42babe36 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[7]
statement is: appendDataToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;[B)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean appendDataToFile = FileSystemHandling.appendDataToFile(arg0, arg1)
statement is: umd.cs.shop.JSTaskAtom()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class umd.cs.shop.JSTaskAtom
statement code is: JSTaskAtom jSTaskAtom = new JSTaskAtom()
statement is: umd.cs.shop.JSJshop(Ljava/lang/String;Lumd/cs/shop/JSTaskAtom;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class umd.cs.shop.JSJshop
statement code is: JSJshop jSJshop = new JSJshop("weq<Yu7])#", arg1)
test data is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("weq<Yu7])#");
byte[] byteArray = new byte[7];
FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
JSTaskAtom jSTaskAtom = new JSTaskAtom();
JSJshop jSJshop = new JSJshop("weq<Yu7])#", jSTaskAtom);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        EvoSuiteFile evoSuiteFile = new EvoSuiteFile("test.txt");
        byte[] byteArray = new byte[]{ 0, 1, 2, 3, 4, 5, 6 };
        FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
        JSTaskAtom jSTaskAtom = new JSTaskAtom();
        JSJshop jSJshop = new JSJshop("test.txt", jSTaskAtom);
    }
}
statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("test.txt"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: byte[] byteArray = new byte[]{ 0, 1, 2, 3, 4, 5, 6 }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: byte[] byteArray = new byte[7] isAssignment: false Array: new byte[]{ 0, 1, 2, 3, 4, 5, 6 } Elements: [0, 1, 2, 3, 4, 5, 6]
lengths: [7] []
statement is: FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray) target is: FileSystemHandling method is: appendDataToFile(EvoSuiteFile,byte[])
Matched Method is: appendDataToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;[B)Z
i 0 Parameters size() 0 Num of Method Parameters: 2
i 1 Parameters size() 0 Num of Method Parameters: 2
statement is: JSTaskAtom jSTaskAtom = new JSTaskAtom(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JSJshop jSJshop = new JSJshop("test.txt", jSTaskAtom), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase is: EvoSuiteFile evoSuiteFile = null;
byte[] byteArray = null;
FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
JSTaskAtom jSTaskAtom = new JSTaskAtom();
String string = "test.txt";
JSJshop jSJshop = new JSJshop(string, jSTaskAtom);

statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("weq<Yu7])#") type is: class org.evosuite.testcase.statements.environment.FileNamePrimitiveStatement return type class org.evosuite.runtime.testdata.EvoSuiteFile
statement code is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("weq<Yu7])#")
statement is: org.evosuite.testcase.statements.ArrayStatement@b6c4252 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[7]
statement is: org.evosuite.testcase.statements.AssignmentStatement@a3baf644 type is: class org.evosuite.testcase.statements.AssignmentStatement return type byte
statement code is: byteArray[0] = (byte)60
statement is: appendDataToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;[B)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean appendDataToFile = FileSystemHandling.appendDataToFile(arg0, arg1)
statement is: umd.cs.shop.JSTaskAtom()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class umd.cs.shop.JSTaskAtom
statement code is: JSTaskAtom jSTaskAtom = new JSTaskAtom()
statement is: umd.cs.shop.JSJshop(Ljava/lang/String;Lumd/cs/shop/JSTaskAtom;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class umd.cs.shop.JSJshop
statement code is: JSJshop jSJshop = new JSJshop("weq<Yu7])#", arg1)
test data is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("weq<Yu7])#");
byte[] byteArray = new byte[7];
byteArray[0] = (byte)60;
FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
JSTaskAtom jSTaskAtom = new JSTaskAtom();
JSJshop jSJshop = new JSJshop("weq<Yu7])#", jSTaskAtom);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        EvoSuiteFile evoSuiteFile = new EvoSuiteFile("testdata.txt");
        byte[] byteArray = new byte[7];
        for (int i = 0; i < byteArray.length; i++) {
            byteArray[i] = ((byte) (i));
        }
        FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
        JSTaskAtom jSTaskAtom = new JSTaskAtom();
        JSJshop jSJshop = new JSJshop("testdata.txt", jSTaskAtom);
    }
}
statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("testdata.txt"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: byte[] byteArray = new byte[7], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [7] Ct is: byte[] byteArray = new byte[7] isAssignment: false Array: new byte[7] Elements: []
lengths: [7] [7]
Their type are: class [B byte[]
statement is: for (int i = 0; i < byteArray.length; i++) {
    byteArray[i] = ((byte) (i));
}, class spoon.support.reflect.code.CtForImpl
statement is: FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray) target is: FileSystemHandling method is: appendDataToFile(EvoSuiteFile,byte[])
Matched Method is: appendDataToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;[B)Z
i 1 Parameters size() 1 Num of Method Parameters: 2
statement is: JSTaskAtom jSTaskAtom = new JSTaskAtom(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JSJshop jSJshop = new JSJshop("testdata.txt", jSTaskAtom), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase is: byte[] byteArray = new byte[7];
byte[] byteArray = null;
FileSystemHandling.appendDataToFile((EvoSuiteFile) byteArray, byteArray);
JSTaskAtom jSTaskAtom = new JSTaskAtom();
String string = "testdata.txt";
JSJshop jSJshop = new JSJshop(string, jSTaskAtom);

statement is: umd.cs.shop.JSJshop()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class umd.cs.shop.JSJshop
statement code is: JSJshop jSJshop = new JSJshop()
statement is: getBufferedReader(Ljava/lang/String;Ljava/lang/String;Ljavax/swing/JApplet;)Ljava/io/BufferedReader; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.io.BufferedReader
statement code is: BufferedReader bufferedReader = jSJshop.getBufferedReader("umd.cs.shop.JSTasks", "all", (JApplet) null)
test data is: JSJshop jSJshop = new JSJshop();
jSJshop.getBufferedReader("umd.cs.shop.JSTasks", "all", (JApplet) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        JSJshop jSJshop = new JSJshop();
        jSJshop.getBufferedReader("umd.cs.shop.JSTasks", "all", ((JApplet) (null)));
    }
}
statement is: JSJshop jSJshop = new JSJshop(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: jSJshop.getBufferedReader("umd.cs.shop.JSTasks", "all", ((JApplet) (null))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: jSJshop.getBufferedReader("umd.cs.shop.JSTasks", "all", ((JApplet) (null))) target is: jSJshop method is: getBufferedReader(java.lang.String,java.lang.String,JApplet)
source statement: umd.cs.shop.JSJshop()V callee: VariableReference: Statement 0, type umd.cs.shop.JSJshopindex is: 0
Matched Method is: getBufferedReader(Ljava/lang/String;Ljava/lang/String;Ljavax/swing/JApplet;)Ljava/io/BufferedReader;
i 2 Parameters size() 2 Num of Method Parameters: 3
TestCase is: JSJshop jSJshop = new JSJshop();
String string = "umd.cs.shop.JSTasks";
String string = "all";
JApplet jApplet = null;
jSJshop.getBufferedReader(string, string, jApplet);

statement is: umd.cs.shop.JSJshop()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class umd.cs.shop.JSJshop
statement code is: JSJshop jSJshop = new JSJshop()
statement is: getBufferedReader(Ljava/lang/String;Ljava/lang/String;Ljavax/swing/JApplet;)Ljava/io/BufferedReader; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.io.BufferedReader
statement code is: BufferedReader bufferedReader = jSJshop.getBufferedReader((String) null, (String) null, (JApplet) null)
test data is: JSJshop jSJshop = new JSJshop();
jSJshop.getBufferedReader((String) null, (String) null, (JApplet) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        jSJshop.getBufferedReader("inputData.csv", "UTF-16", new JApplet());
    }
}
statement is: jSJshop.getBufferedReader("inputData.csv", "UTF-16", new JApplet()), class spoon.support.reflect.code.CtInvocationImpl
invocation is: jSJshop.getBufferedReader("inputData.csv", "UTF-16", new JApplet()) target is: jSJshop method is: getBufferedReader(java.lang.String,java.lang.String,JApplet)
statement is: umd.cs.shop.JSJshop()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class umd.cs.shop.JSJshop
statement code is: JSJshop jSJshop = new JSJshop()
statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("umd.cs.shop.JSTasks/all") type is: class org.evosuite.testcase.statements.environment.FileNamePrimitiveStatement return type class org.evosuite.runtime.testdata.EvoSuiteFile
statement code is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("umd.cs.shop.JSTasks/all")
statement is: org.evosuite.testcase.statements.ArrayStatement@546ca51a type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[5]
statement is: appendDataToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;[B)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean appendDataToFile = FileSystemHandling.appendDataToFile(arg0, arg1)
statement is: getBufferedReader(Ljava/lang/String;Ljava/lang/String;Ljavax/swing/JApplet;)Ljava/io/BufferedReader; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.io.BufferedReader
statement code is: BufferedReader bufferedReader = jSJshop.getBufferedReader("umd.cs.shop.JSTasks", "all", (JApplet) null)
test data is: JSJshop jSJshop = new JSJshop();
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("umd.cs.shop.JSTasks/all");
byte[] byteArray = new byte[5];
FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
jSJshop.getBufferedReader("umd.cs.shop.JSTasks", "all", (JApplet) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        JSJshop jSJshop = new JSJshop();
        EvoSuiteFile evoSuiteFile = new EvoSuiteFile("umd.cs.shop.JSTasks/all");
        byte[] byteArray = new byte[]{ 1, 2, 3, 4, 5 };
        FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
        jSJshop.getBufferedReader("umd.cs.shop.JSTasks", "all", ((JApplet) (null)));
    }
}
statement is: JSJshop jSJshop = new JSJshop(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("umd.cs.shop.JSTasks/all"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: byte[] byteArray = new byte[]{ 1, 2, 3, 4, 5 }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: byte[] byteArray = new byte[5] isAssignment: false Array: new byte[]{ 1, 2, 3, 4, 5 } Elements: [1, 2, 3, 4, 5]
lengths: [5] []
statement is: FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray) target is: FileSystemHandling method is: appendDataToFile(EvoSuiteFile,byte[])
Matched Method is: appendDataToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;[B)Z
i 0 Parameters size() 0 Num of Method Parameters: 2
i 1 Parameters size() 0 Num of Method Parameters: 2
statement is: jSJshop.getBufferedReader("umd.cs.shop.JSTasks", "all", ((JApplet) (null))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: jSJshop.getBufferedReader("umd.cs.shop.JSTasks", "all", ((JApplet) (null))) target is: jSJshop method is: getBufferedReader(java.lang.String,java.lang.String,JApplet)
source statement: umd.cs.shop.JSJshop()V callee: VariableReference: Statement 0, type umd.cs.shop.JSJshopindex is: 0
Matched Method is: getBufferedReader(Ljava/lang/String;Ljava/lang/String;Ljavax/swing/JApplet;)Ljava/io/BufferedReader;
i 2 Parameters size() 2 Num of Method Parameters: 3
TestCase is: JSJshop jSJshop = new JSJshop();
EvoSuiteFile evoSuiteFile = null;
byte[] byteArray = null;
FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
String string = "umd.cs.shop.JSTasks";
String string = "all";
JApplet jApplet = null;
jSJshop.getBufferedReader(string, string, jApplet);

statement is: umd.cs.shop.JSJshop()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class umd.cs.shop.JSJshop
statement code is: JSJshop jSJshop = new JSJshop()
statement is: java.io.PipedReader()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.PipedReader
statement code is: PipedReader pipedReader = new PipedReader()
statement is: java.io.StreamTokenizer(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StreamTokenizer
statement code is: StreamTokenizer streamTokenizer = new StreamTokenizer(arg0)
statement is: processToken(Ljava/io/StreamTokenizer;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: jSJshop.processToken(arg0)
test data is: JSJshop jSJshop = new JSJshop();
PipedReader pipedReader = new PipedReader();
StreamTokenizer streamTokenizer = new StreamTokenizer(pipedReader);
jSJshop.processToken(streamTokenizer);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        JSJshop jSJshop = new JSJshop();
        PipedReader pipedReader = new PipedReader("This is a sample input for the processToken method.");
        StreamTokenizer streamTokenizer = new StreamTokenizer(pipedReader);
        jSJshop.processToken(streamTokenizer);
    }
}
statement is: JSJshop jSJshop = new JSJshop(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: PipedReader pipedReader = new PipedReader("This is a sample input for the processToken method."), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: StreamTokenizer streamTokenizer = new StreamTokenizer(pipedReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: java.io.StreamTokenizer(Ljava/io/Reader;)V
statement is: jSJshop.processToken(streamTokenizer), class spoon.support.reflect.code.CtInvocationImpl
invocation is: jSJshop.processToken(streamTokenizer) target is: jSJshop method is: processToken(StreamTokenizer)
source statement: umd.cs.shop.JSJshop()V callee: VariableReference: Statement 0, type umd.cs.shop.JSJshopindex is: 0
Matched Method is: processToken(Ljava/io/StreamTokenizer;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
TestCase is: JSJshop jSJshop = new JSJshop();
StreamTokenizer streamTokenizer = null;
jSJshop.processToken(streamTokenizer);

statement is: umd.cs.shop.JSJshop()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class umd.cs.shop.JSJshop
statement code is: JSJshop jSJshop = new JSJshop()
statement is: parserFile(Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean parserFile = jSJshop.parserFile("< ")
test data is: JSJshop jSJshop = new JSJshop();
jSJshop.parserFile("< ");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        try (final Scanner scanner = new Scanner(new File(VALID_FILE_PATH))) {
            while (scanner.hasNextLine()) {
                String line = scanner.nextLine();
                // parsing logic here
            } 
        } catch (IOException e) {
            System.out.println("Error reading file: " + e.getMessage());
        }
    }
}
statement is: try (final Scanner scanner = new Scanner(new File(VALID_FILE_PATH))) {
    while (scanner.hasNextLine()) {
        String line = scanner.nextLine();
        // parsing logic here
    } 
} catch (IOException e) {
    System.out.println("Error reading file: " + e.getMessage());
}, class spoon.support.reflect.code.CtTryWithResourceImpl
statement is: umd.cs.shop.JSJshop()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class umd.cs.shop.JSJshop
statement code is: JSJshop jSJshop = new JSJshop()
statement is: testParser()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: jSJshop.testParser()
test data is: JSJshop jSJshop = new JSJshop();
jSJshop.testParser();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        int id = 12345;
        String name = "John Doe";
        double salary = 50000.0;
        char gender = 'M';
    }
}
statement is: int id = 12345, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String name = "John Doe", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: double salary = 50000.0, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: char gender = 'M', class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
* this is vulnerable: int _int = 12345
* this is vulnerable: String string = "John Doe"
* this is vulnerable: double _double = 50000.0
* this is vulnerable: char _char = 'M'
TestCase is: int _int = 12345;
String string = "John Doe";
double _double = 50000.0;
char _char = 'M';

* test suite isTestSuite: 41
Test 0: 
JSJshop jSJshop = new JSJshop();
jSJshop.getTree();
Test 1: 
JSJshop jSJshop = new JSJshop();
// Undeclared exception!
try { 
  jSJshop.getAppletURL("Ioo!c>ZTn35c_", (JApplet) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("umd.cs.shop.JSJshop", e);
}

Test 2: 
JSJshop jSJshop = new JSJshop();
jSJshop.getSolution();
Test 3: 
JSJshop jSJshop = new JSJshop();
jSJshop.sol();
Test 4: 
JSJshop jSJshop = new JSJshop();
jSJshop.tree();
Test 5: 
JSJshop jSJshop = new JSJshop();
jSJshop.prob();
Test 6: 
JSJshop jSJshop = new JSJshop();
jSJshop.dom();
Test 7: 
String[] stringArray = new String[1];
JSJshop.main(stringArray);
Test 8: 
String[] stringArray = new String[5];
JSJshop.main(stringArray);
Test 9: 
String[] stringArray = new String[3];
stringArray[2] = "one";
// Undeclared exception!
try { 
  JSJshop.main(stringArray);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
}

Test 10: 
String[] stringArray = new String[4];
stringArray[2] = "all";
JSJshop.main(stringArray);
Test 11: 
JSJshop jSJshop = null;
try {
  jSJshop = new JSJshop("Here starts the tree", "");
  fail("Expecting exception: System.SystemExitException");

} catch(System.SystemExitException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.evosuite.runtime.System", e);
}

Test 12: 
JSJshop jSJshop = new JSJshop();
jSJshop.getAddList();
Test 13: 
JSJshop jSJshop = new JSJshop();
jSJshop.getDeleteList();
Test 14: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("weq<Yu7])#");
byte[] byteArray = new byte[7];
FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
JSTaskAtom jSTaskAtom = new JSTaskAtom();
JSJshop jSJshop = null;
try {
  jSJshop = new JSJshop("weq<Yu7])#", jSTaskAtom);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("umd.cs.shop.JSJshop", e);
}

Test 15: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("weq<Yu7])#");
byte[] byteArray = new byte[7];
byteArray[0] = (byte)60;
FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
JSTaskAtom jSTaskAtom = new JSTaskAtom();
JSJshop jSJshop = null;
try {
  jSJshop = new JSJshop("weq<Yu7])#", jSTaskAtom);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("umd.cs.shop.JSJshop", e);
}

Test 16: 
JSJshop jSJshop = new JSJshop();
jSJshop.getBufferedReader("umd.cs.shop.JSTasks", "all", (JApplet) null);
Test 17: 
JSJshop jSJshop = new JSJshop();
jSJshop.getBufferedReader((String) null, (String) null, (JApplet) null);
Test 18: 
JSJshop jSJshop = new JSJshop();
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("umd.cs.shop.JSTasks/all");
byte[] byteArray = new byte[5];
FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
jSJshop.getBufferedReader("umd.cs.shop.JSTasks", "all", (JApplet) null);
Test 19: 
JSJshop jSJshop = new JSJshop();
PipedReader pipedReader = new PipedReader();
StreamTokenizer streamTokenizer = new StreamTokenizer(pipedReader);
// Undeclared exception!
try { 
  jSJshop.processToken(streamTokenizer);
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("umd.cs.shop.JSJshop", e);
}

Test 20: 
JSJshop jSJshop = new JSJshop();
jSJshop.parserFile("< ");
Test 21: 
JSJshop jSJshop = new JSJshop();
// Undeclared exception!
try { 
  jSJshop.testParser();
  fail("Expecting exception: System.SystemExitException");

} catch(System.SystemExitException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.evosuite.runtime.System", e);
}

Test 22: 

Test 23: 
JSJshop jSJshop = new JSJshop();
jSJshop.getAppletURL("https://www.example.com", (JApplet) null);

Test 24: 
JSJshop jSJshop = new JSJshop();

Test 25: 

Test 26: 

Test 27: 

Test 28: 
JSJshop jSJshop = new JSJshop();
jSJshop.dom();

Test 29: 
JSJshop.main((String[]) null);

Test 30: 
JSJshop.main((String[]) null);

Test 31: 
String[] stringArray = new String[3];
stringArray[2] = "apple";
stringArray[2] = "banana";
stringArray[2] = "cherry";
JSJshop.main(stringArray);

Test 32: 
String[] stringArray = new String[4];
stringArray[2] = "-c";
stringArray[2] = "./test.jsj";
stringArray[2] = "all";
JSJshop.main(stringArray);

Test 33: 
JSJshop jSJshop = new JSJshop("Here starts the tree", "");

Test 34: 
JSJshop jSJshop = new JSJshop();

Test 35: 
FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
JSTaskAtom jSTaskAtom = new JSTaskAtom();
JSJshop jSJshop = new JSJshop("test.txt", jSTaskAtom);

Test 36: 
byte[] byteArray = new byte[7];
FileSystemHandling.appendDataToFile((EvoSuiteFile) byteArray, (byte[]) null);
JSTaskAtom jSTaskAtom = new JSTaskAtom();
String string = "testdata.txt";
JSJshop jSJshop = new JSJshop(string, jSTaskAtom);

Test 37: 
JSJshop jSJshop = new JSJshop();
jSJshop.getBufferedReader("umd.cs.shop.JSTasks", "all", (JApplet) null);

Test 38: 
JSJshop jSJshop = new JSJshop();
FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
jSJshop.getBufferedReader("umd.cs.shop.JSTasks", "all", (JApplet) null);

Test 39: 
JSJshop jSJshop = new JSJshop();
jSJshop.processToken((StreamTokenizer) null);

Test 40: 


* Generated after the refinement and before minimization 41 tests with total length 91
* test suite isTestSuite: 41
Test 0: 
JSJshop jSJshop = new JSJshop();
jSJshop.getTree();
Test 1: 
JSJshop jSJshop = new JSJshop();
// Undeclared exception!
try { 
  jSJshop.getAppletURL("Ioo!c>ZTn35c_", (JApplet) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("umd.cs.shop.JSJshop", e);
}

Test 2: 
JSJshop jSJshop = new JSJshop();
jSJshop.getSolution();
Test 3: 
JSJshop jSJshop = new JSJshop();
jSJshop.sol();
Test 4: 
JSJshop jSJshop = new JSJshop();
jSJshop.tree();
Test 5: 
JSJshop jSJshop = new JSJshop();
jSJshop.prob();
Test 6: 
JSJshop jSJshop = new JSJshop();
jSJshop.dom();
Test 7: 
String[] stringArray = new String[1];
JSJshop.main(stringArray);
Test 8: 
String[] stringArray = new String[5];
JSJshop.main(stringArray);
Test 9: 
String[] stringArray = new String[3];
stringArray[2] = "one";
// Undeclared exception!
try { 
  JSJshop.main(stringArray);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
}

Test 10: 
String[] stringArray = new String[4];
stringArray[2] = "all";
JSJshop.main(stringArray);
Test 11: 
JSJshop jSJshop = null;
try {
  jSJshop = new JSJshop("Here starts the tree", "");
  fail("Expecting exception: System.SystemExitException");

} catch(System.SystemExitException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.evosuite.runtime.System", e);
}

Test 12: 
JSJshop jSJshop = new JSJshop();
jSJshop.getAddList();
Test 13: 
JSJshop jSJshop = new JSJshop();
jSJshop.getDeleteList();
Test 14: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("weq<Yu7])#");
byte[] byteArray = new byte[7];
FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
JSTaskAtom jSTaskAtom = new JSTaskAtom();
JSJshop jSJshop = null;
try {
  jSJshop = new JSJshop("weq<Yu7])#", jSTaskAtom);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("umd.cs.shop.JSJshop", e);
}

Test 15: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("weq<Yu7])#");
byte[] byteArray = new byte[7];
byteArray[0] = (byte)60;
FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
JSTaskAtom jSTaskAtom = new JSTaskAtom();
JSJshop jSJshop = null;
try {
  jSJshop = new JSJshop("weq<Yu7])#", jSTaskAtom);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("umd.cs.shop.JSJshop", e);
}

Test 16: 
JSJshop jSJshop = new JSJshop();
jSJshop.getBufferedReader("umd.cs.shop.JSTasks", "all", (JApplet) null);
Test 17: 
JSJshop jSJshop = new JSJshop();
jSJshop.getBufferedReader((String) null, (String) null, (JApplet) null);
Test 18: 
JSJshop jSJshop = new JSJshop();
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("umd.cs.shop.JSTasks/all");
byte[] byteArray = new byte[5];
FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
jSJshop.getBufferedReader("umd.cs.shop.JSTasks", "all", (JApplet) null);
Test 19: 
JSJshop jSJshop = new JSJshop();
PipedReader pipedReader = new PipedReader();
StreamTokenizer streamTokenizer = new StreamTokenizer(pipedReader);
// Undeclared exception!
try { 
  jSJshop.processToken(streamTokenizer);
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("umd.cs.shop.JSJshop", e);
}

Test 20: 
JSJshop jSJshop = new JSJshop();
jSJshop.parserFile("< ");
Test 21: 
JSJshop jSJshop = new JSJshop();
// Undeclared exception!
try { 
  jSJshop.testParser();
  fail("Expecting exception: System.SystemExitException");

} catch(System.SystemExitException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.evosuite.runtime.System", e);
}

Test 22: 

Test 23: 
JSJshop jSJshop = new JSJshop();
jSJshop.getAppletURL("https://www.example.com", (JApplet) null);

Test 24: 
JSJshop jSJshop = new JSJshop();

Test 25: 

Test 26: 

Test 27: 

Test 28: 
JSJshop jSJshop = new JSJshop();
jSJshop.dom();

Test 29: 
JSJshop.main((String[]) null);

Test 30: 
JSJshop.main((String[]) null);

Test 31: 
String[] stringArray = new String[3];
stringArray[2] = "apple";
stringArray[2] = "banana";
stringArray[2] = "cherry";
JSJshop.main(stringArray);

Test 32: 
String[] stringArray = new String[4];
stringArray[2] = "-c";
stringArray[2] = "./test.jsj";
stringArray[2] = "all";
JSJshop.main(stringArray);

Test 33: 
JSJshop jSJshop = new JSJshop("Here starts the tree", "");

Test 34: 
JSJshop jSJshop = new JSJshop();

Test 35: 
FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
JSTaskAtom jSTaskAtom = new JSTaskAtom();
JSJshop jSJshop = new JSJshop("test.txt", jSTaskAtom);

Test 36: 
byte[] byteArray = new byte[7];
FileSystemHandling.appendDataToFile((EvoSuiteFile) byteArray, (byte[]) null);
JSTaskAtom jSTaskAtom = new JSTaskAtom();
String string = "testdata.txt";
JSJshop jSJshop = new JSJshop(string, jSTaskAtom);

Test 37: 
JSJshop jSJshop = new JSJshop();
jSJshop.getBufferedReader("umd.cs.shop.JSTasks", "all", (JApplet) null);

Test 38: 
JSJshop jSJshop = new JSJshop();
FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
jSJshop.getBufferedReader("umd.cs.shop.JSTasks", "all", (JApplet) null);

Test 39: 
JSJshop jSJshop = new JSJshop();
jSJshop.processToken((StreamTokenizer) null);

Test 40: 


* Minimizing test suite
* test suite isTestSuite: 22
Test 0: 
JSJshop jSJshop = new JSJshop();
jSJshop.getTree();
Test 1: 
JSJshop jSJshop = new JSJshop();
// Undeclared exception!
try { 
  jSJshop.getAppletURL("https://www.example.com", (JApplet) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("umd.cs.shop.JSJshop", e);
}

Test 2: 
JSJshop jSJshop = new JSJshop();
jSJshop.getSolution();
Test 3: 
JSJshop jSJshop = new JSJshop();
jSJshop.sol();
Test 4: 
JSJshop jSJshop = new JSJshop();
jSJshop.tree();
Test 5: 
JSJshop jSJshop = new JSJshop();
jSJshop.prob();
Test 6: 
JSJshop jSJshop = new JSJshop();
jSJshop.dom();
Test 7: 
String[] stringArray = new String[1];
JSJshop.main(stringArray);
Test 8: 
String[] stringArray = new String[5];
JSJshop.main(stringArray);
Test 9: 
String[] stringArray = new String[3];
stringArray[2] = "one";
// Undeclared exception!
try { 
  JSJshop.main(stringArray);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
}

Test 10: 
String[] stringArray = new String[4];
stringArray[2] = "all";
JSJshop.main(stringArray);
Test 11: 
JSJshop jSJshop = null;
try {
  jSJshop = new JSJshop("Here starts the tree", "");
  fail("Expecting exception: System.SystemExitException");

} catch(System.SystemExitException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.evosuite.runtime.System", e);
}

Test 12: 
JSJshop jSJshop = new JSJshop();
jSJshop.getAddList();
Test 13: 
JSJshop jSJshop = new JSJshop();
jSJshop.getDeleteList();
Test 14: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("weq<Yu7])#");
byte[] byteArray = new byte[7];
FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
JSTaskAtom jSTaskAtom = new JSTaskAtom();
JSJshop jSJshop = null;
try {
  jSJshop = new JSJshop("weq<Yu7])#", jSTaskAtom);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("umd.cs.shop.JSJshop", e);
}

Test 15: 
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("weq<Yu7])#");
byte[] byteArray = new byte[7];
byteArray[0] = (byte)60;
FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
JSTaskAtom jSTaskAtom = new JSTaskAtom();
JSJshop jSJshop = null;
try {
  jSJshop = new JSJshop("weq<Yu7])#", jSTaskAtom);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("umd.cs.shop.JSJshop", e);
}

Test 16: 
JSJshop jSJshop = new JSJshop();
jSJshop.getBufferedReader("umd.cs.shop.JSTasks", "all", (JApplet) null);
Test 17: 
JSJshop jSJshop = new JSJshop();
jSJshop.getBufferedReader((String) null, (String) null, (JApplet) null);
Test 18: 
JSJshop jSJshop = new JSJshop();
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("umd.cs.shop.JSTasks/all");
byte[] byteArray = new byte[5];
FileSystemHandling.appendDataToFile(evoSuiteFile, byteArray);
jSJshop.getBufferedReader("umd.cs.shop.JSTasks", "all", (JApplet) null);
Test 19: 
JSJshop jSJshop = new JSJshop();
PipedReader pipedReader = new PipedReader();
StreamTokenizer streamTokenizer = new StreamTokenizer(pipedReader);
// Undeclared exception!
try { 
  jSJshop.processToken(streamTokenizer);
  fail("Expecting exception: Error");

} catch(Error e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("umd.cs.shop.JSJshop", e);
}

Test 20: 
JSJshop jSJshop = new JSJshop();
jSJshop.parserFile("< ");
Test 21: 
JSJshop jSJshop = new JSJshop();
// Undeclared exception!
try { 
  jSJshop.testParser();
  fail("Expecting exception: System.SystemExitException");

} catch(System.SystemExitException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.evosuite.runtime.System", e);
}


* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 27%
* Total number of goals: 114
* Number of covered goals: 31
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 37%
* Total number of goals: 225
* Number of covered goals: 84
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 20%
* Total number of goals: 56
* Number of covered goals: 11
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 89%
* Total number of goals: 19
* Number of covered goals: 17
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 25%
* Total number of goals: 114
* Number of covered goals: 28
* Generated 22 tests with total length 57
* Resulting test suite's coverage: 38% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 8%
* Compiling and checking tests
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: JSJshop jSJshop = new JSJshop();
JSJshopNode tree = jSJshop.getTree();
assertNull(tree);


** It was a parseable test case! 
refined test name is: testGetTreeReturnsNullWhenNoTreePresent
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: JSJshop jSJshop = new JSJshop();
// Undeclared exception!
try { 
  jSJshop.getAppletURL("https://www.example.com", (JApplet) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("umd.cs.shop.JSJshop", e);
}


** It was a parseable test case! 
refined test name is: testGetAppletURLNullSecondArgumentThrowsNPE
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: JSJshop jSJshop = new JSJshop();
JSPairPlanTSListNodes solution = jSJshop.getSolution();
assertNull(solution);


** It was a parseable test case! 
refined test name is: testGetSolutionReturnsNullWhenNoSolutionExists
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: JSJshop jSJshop = new JSJshop();
JSPlan sol = jSJshop.sol();
assertNull(sol);


** It was a parseable test case! 
refined test name is: testSolutionIsNull
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: JSJshop jSJshop = new JSJshop();
JSJshopNode tree = jSJshop.tree();
assertNull(tree);


** It was a parseable test case! 
refined test name is: testJSJshopTreeReturnsNull
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: JSJshop jSJshop = new JSJshop();
JSPlanningProblem prob = jSJshop.prob();
assertNull(prob);


** It was a parseable test case! 
refined test name is: testJSJshopProbReturnsNull
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: JSJshop jSJshop = new JSJshop();
JSPlanningDomain dom = jSJshop.dom();
assertNull(dom);


** It was a parseable test case! 
refined test name is: testJSJshopDomIsNull
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: String[] arg0 = new String[1];
JSJshop.main(arg0);
assertEquals(1, arg0.length);


** It was a parseable test case! 
refined test name is: testMainMethodInitializesJSJshopObjectCorrectly
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: String[] arg0 = new String[5];
JSJshop.main(arg0);
assertEquals(5, arg0.length);


** It was a parseable test case! 
refined test name is: testMainMethodWithFiveArguments
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: String[] arg0 = new String[3];
arg0[2] = "one";
// Undeclared exception!
try { 
  JSJshop.main(arg0);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
}


** It was a parseable test case! 
refined test name is: testInvalidInputPathThrowsNullPointerException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: String[] arg0 = new String[4];
arg0[2] = "all";
JSJshop.main(arg0);
assertEquals(4, arg0.length);


** It was a parseable test case! 
refined test name is: testMainMethodWithFourArgs
* Compiling Tests
refined test name is: testMainMethodWithArgsShouldSetLengthOfArrayToFour
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: JSJshop jSJshop = null;
try {
  jSJshop = new JSJshop("Here starts the tree", "");
  fail("Expecting exception: System.SystemExitException");

} catch(System.SystemExitException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.evosuite.runtime.System", e);
}


** It was a parseable test case! 
refined test name is: testInvalidArgumentsThrowsSystemExitException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: JSJshop jSJshop = new JSJshop();
JSListLogicalAtoms addList = jSJshop.getAddList();
assertNull(addList);


** It was a parseable test case! 
refined test name is: testGetAddListReturnsNullWhenNoItemsInAddList
* Compiling Tests
refined test name is: testGetAddListnoItems
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: JSJshop jSJshop = new JSJshop();
JSListLogicalAtoms deleteList = jSJshop.getDeleteList();
assertNull(deleteList);


** It was a parseable test case! 
refined test name is: testGetDeleteListReturnsNull
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: JSJshop jSJshop = new JSJshop();
BufferedReader bufferedReader = jSJshop.getBufferedReader("umd.cs.shop.JSTasks", "all", (JApplet) null);
assertNull(bufferedReader);


** It was a parseable test case! 
refined test name is: testGetBufferedReaderWithInvalidArguments
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: JSJshop jSJshop = new JSJshop();
BufferedReader bufferedReader = jSJshop.getBufferedReader((String) null, (String) null, (JApplet) null);
assertNull(bufferedReader);


** It was a parseable test case! 
refined test name is: testGetBufferedReaderWithNoParametersReturnsNull
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: JSJshop jSJshop = new JSJshop();
EvoSuiteFile arg0 = new EvoSuiteFile("umd.cs.shop.JSTasks/all");
byte[] arg1 = new byte[5];
FileSystemHandling.appendDataToFile(arg0, arg1);
BufferedReader bufferedReader = jSJshop.getBufferedReader("umd.cs.shop.JSTasks", "all", (JApplet) null);
assertNotNull(bufferedReader);


** It was a parseable test case! 
refined test name is: testAppendDataToFileAppendsDataToFile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: JSJshop jSJshop = new JSJshop();
boolean parserFile = jSJshop.parserFile("< ");
assertFalse(parserFile);


** It was a parseable test case! 
refined test name is: testParserFileReturnsFalseForInvalidFilePath
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: JSJshop jSJshop = new JSJshop();
// Undeclared exception!
try { 
  jSJshop.testParser();
  fail("Expecting exception: System.SystemExitException");

} catch(System.SystemExitException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.evosuite.runtime.System", e);
}


** It was a parseable test case! 
refined test name is: testParserShouldThrowSystemExitException
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 08:23:19.157 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
file:/tmp/EvoSuite_pathingJar5717302322632559880.jar
[MASTER] 08:23:19.190 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5717302322632559880.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 08:23:19.275 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
file:/tmp/EvoSuite_pathingJar5717302322632559880.jar
[MASTER] 08:23:19.277 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5717302322632559880.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 08:23:19.353 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
file:/tmp/EvoSuite_pathingJar5717302322632559880.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 08:23:19.355 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5717302322632559880.jar
[MASTER] 08:23:19.436 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
file:/tmp/EvoSuite_pathingJar5717302322632559880.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 08:23:19.438 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5717302322632559880.jar
[MASTER] 08:23:19.515 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
file:/tmp/EvoSuite_pathingJar5717302322632559880.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 08:23:19.517 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5717302322632559880.jar
[MASTER] 08:23:19.594 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
file:/tmp/EvoSuite_pathingJar5717302322632559880.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 08:23:19.596 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5717302322632559880.jar
[MASTER] 08:23:19.672 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
file:/tmp/EvoSuite_pathingJar5717302322632559880.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 08:23:19.674 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5717302322632559880.jar
[MASTER] 08:23:19.758 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
file:/tmp/EvoSuite_pathingJar5717302322632559880.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 08:23:19.760 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5717302322632559880.jar
[MASTER] 08:23:19.828 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
file:/tmp/EvoSuite_pathingJar5717302322632559880.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 08:23:19.830 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5717302322632559880.jar
[MASTER] 08:23:19.900 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
file:/tmp/EvoSuite_pathingJar5717302322632559880.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 08:23:19.902 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5717302322632559880.jar
[MASTER] 08:23:19.972 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
file:/tmp/EvoSuite_pathingJar5717302322632559880.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 08:23:19.974 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5717302322632559880.jar
[MASTER] 08:23:20.061 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
file:/tmp/EvoSuite_pathingJar5717302322632559880.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 08:23:20.063 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5717302322632559880.jar
[MASTER] 08:23:20.132 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
file:/tmp/EvoSuite_pathingJar5717302322632559880.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 08:23:20.133 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5717302322632559880.jar
[MASTER] 08:23:20.203 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
file:/tmp/EvoSuite_pathingJar5717302322632559880.jar
[MASTER] 08:23:20.204 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5717302322632559880.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 08:23:20.273 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
file:/tmp/EvoSuite_pathingJar5717302322632559880.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 08:23:20.275 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5717302322632559880.jar
[MASTER] 08:23:20.343 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
file:/tmp/EvoSuite_pathingJar5717302322632559880.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 08:23:20.345 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5717302322632559880.jar
[MASTER] 08:23:20.418 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
file:/tmp/EvoSuite_pathingJar5717302322632559880.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 08:23:20.420 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5717302322632559880.jar
[MASTER] 08:23:20.491 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
file:/tmp/EvoSuite_pathingJar5717302322632559880.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 08:23:20.493 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5717302322632559880.jar
[MASTER] 08:23:20.565 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
file:/tmp/EvoSuite_pathingJar5717302322632559880.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 08:23:20.567 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5717302322632559880.jar
** Write a test suite: 10 called: 0 to improve: false
** Write a test suite: 12 called: 1 to improve: false
[MASTER] 08:23:20.891 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
file:/tmp/EvoSuite_pathingJar5717302322632559880.jar
[MASTER] 08:23:20.895 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5717302322632559880.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 6 called: 0 to improve: false
** Write a test suite: 8 called: 1 to improve: false
[MASTER] 08:23:21.147 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
file:/tmp/EvoSuite_pathingJar5717302322632559880.jar
[MASTER] 08:23:21.149 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5717302322632559880.jar
* Writing tests to file
* Writing JUnit test case 'JSJshop_ESTest' to evosuite-tests
** Write a test suite: 6 called: 0 to improve: false
** Write a test suite: 8 called: 1 to improve: false
* Done!

* Computation finished
