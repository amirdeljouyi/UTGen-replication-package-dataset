* EvoSuite 1.0.0-SNAPSHOT
* Going to generate test cases for class: umd.cs.shop.JSState
* Starting Client-0
* Properties loaded from /home/roham/Results-Utestgen/dataset/SF110-new-res/85_shop/evosuite-files/evosuite.properties
* Connecting to master process on port 15161
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 09:09:58.927 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 09:09:58.937 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 09:09:58.938 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 09:09:59.033 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
* Finished analyzing classpath
* Generating tests for class umd.cs.shop.JSState
* Test criteria:
  - Branch Coverage
  - Line Coverage
  - Method-Output Coverage
  - Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 210
* Using seed 1710320997371
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%]* Initial Number of Goals in DynaMOSA = 97 / 210
[Progress:>                             0%] [Cov:============>                      35%][Progress:>                             0%] [Cov:==============>                    41%][Progress:>                             1%] [Cov:==============>                    41%][Progress:>                             2%] [Cov:==============>                    41%][Progress:>                             2%] [Cov:==============>                    41%][Progress:>                             2%] [Cov:==============>                    41%][Progress:>                             2%] [Cov:==============>                    41%][Progress:>                             2%] [Cov:===============>                   43%][Progress:>                             2%] [Cov:===============>                   43%][Progress:>                             2%] [Cov:===============>                   43%][Progress:>                             3%] [Cov:===============>                   45%][Progress:>                             3%] [Cov:===============>                   45%][Progress:>                             3%] [Cov:===============>                   45%][Progress:>                             3%] [Cov:===============>                   45%][Progress:>                             3%] [Cov:===============>                   45%][Progress:>                             3%] [Cov:===============>                   45%][Progress:>                             3%] [Cov:===============>                   45%][Progress:>                             3%] [Cov:===============>                   45%][Progress:>                             3%] [Cov:===============>                   45%][Progress:>                             3%] [Cov:===============>                   45%][Progress:>                             3%] [Cov:===============>                   45%][Progress:=>                            4%] [Cov:===============>                   45%][Progress:=>                            4%] [Cov:===============>                   45%][Progress:=>                            4%] [Cov:===============>                   45%][Progress:=>                            4%] [Cov:===============>                   45%][Progress:=>                            4%] [Cov:===============>                   45%][Progress:=>                            4%] [Cov:================>                  47%][Progress:=>                            4%] [Cov:================>                  47%][Progress:=>                            4%] [Cov:================>                  47%][Progress:=>                            4%] [Cov:================>                  47%][Progress:=>                            4%] [Cov:================>                  47%][Progress:=>                            4%] [Cov:================>                  47%][Progress:=>                            4%] [Cov:================>                  47%][Progress:=>                            4%] [Cov:================>                  47%][Progress:=>                            5%] [Cov:================>                  47%][Progress:=>                            5%] [Cov:================>                  47%][Progress:=>                            5%] [Cov:================>                  47%][Progress:=>                            5%] [Cov:================>                  47%][Progress:=>                            5%] [Cov:================>                  47%][Progress:=>                            5%] [Cov:================>                  47%][Progress:=>                            5%] [Cov:================>                  47%][Progress:=>                            5%] [Cov:================>                  47%][Progress:=>                            5%] [Cov:================>                  47%][Progress:=>                            5%] [Cov:================>                  47%][Progress:=>                            5%] [Cov:================>                  47%][Progress:=>                            5%] [Cov:================>                  47%][Progress:=>                            6%] [Cov:================>                  47%][Progress:=>                            6%] [Cov:================>                  47%][Progress:=>                            6%] [Cov:================>                  47%][Progress:=>                            6%] [Cov:================>                  47%][Progress:=>                            6%] [Cov:================>                  47%][Progress:=>                            6%] [Cov:================>                  47%][Progress:=>                            6%] [Cov:================>                  47%][Progress:=>                            6%] [Cov:================>                  47%][Progress:=>                            6%] [Cov:================>                  47%][Progress:=>                            6%] [Cov:================>                  47%][Progress:=>                            6%] [Cov:================>                  47%][Progress:==>                           7%] [Cov:================>                  47%][Progress:==>                           7%] [Cov:================>                  47%][Progress:==>                           7%] [Cov:================>                  47%][Progress:==>                           7%] [Cov:================>                  47%][Progress:==>                           7%] [Cov:================>                  47%][Progress:==>                           7%] [Cov:================>                  47%][Progress:==>                           7%] [Cov:================>                  47%][Progress:==>                           7%] [Cov:=================>                 49%][Progress:==>                           7%] [Cov:=================>                 49%][Progress:==>                           7%] [Cov:=================>                 49%][Progress:==>                           8%] [Cov:=================>                 49%][Progress:==>                           8%] [Cov:=================>                 49%][Progress:==>                           8%] [Cov:=================>                 49%][Progress:==>                           8%] [Cov:=================>                 49%][Progress:==>                           8%] [Cov:==================>                52%][Progress:==>                           8%] [Cov:==================>                52%][Progress:==>                           8%] [Cov:==================>                52%][Progress:==>                           8%] [Cov:==================>                52%][Progress:==>                           8%] [Cov:==================>                52%][Progress:==>                           9%] [Cov:==================>                52%][Progress:==>                           9%] [Cov:==================>                52%][Progress:==>                           9%] [Cov:==================>                52%][Progress:==>                           9%] [Cov:==================>                52%][Progress:==>                           9%] [Cov:==================>                52%][Progress:==>                           9%] [Cov:==================>                52%][Progress:==>                           9%] [Cov:==================>                52%][Progress:==>                           9%] [Cov:==================>                52%][Progress:==>                           9%] [Cov:==================>                52%][Progress:==>                           9%] [Cov:==================>                52%][Progress:===>                          10%] [Cov:==================>                52%][Progress:===>                          10%] [Cov:==================>                52%][Progress:===>                          10%] [Cov:==================>                52%][Progress:===>                          10%] [Cov:==================>                52%][Progress:===>                          10%] [Cov:==================>                52%][Progress:===>                          10%] [Cov:==================>                52%][Progress:===>                          10%] [Cov:==================>                52%][Progress:===>                          10%] [Cov:==================>                52%][Progress:===>                          10%] [Cov:==================>                52%][Progress:===>                          10%] [Cov:==================>                52%][Progress:===>                          10%] [Cov:==================>                52%][Progress:===>                          10%] [Cov:==================>                52%][Progress:===>                          11%] [Cov:==================>                52%][Progress:===>                          11%] [Cov:==================>                52%][Progress:===>                          11%] [Cov:==================>                52%][Progress:===>                          11%] [Cov:==================>                52%][Progress:===>                          11%] [Cov:==================>                52%][Progress:===>                          11%] [Cov:==================>                52%][Progress:===>                          11%] [Cov:==================>                53%][Progress:===>                          11%] [Cov:==================>                53%][Progress:===>                          11%] [Cov:==================>                53%][Progress:===>                          11%] [Cov:==================>                53%][Progress:===>                          12%] [Cov:==================>                53%][Progress:===>                          12%] [Cov:==================>                53%][Progress:===>                          12%] [Cov:==================>                53%][Progress:===>                          12%] [Cov:==================>                53%][Progress:===>                          12%] [Cov:==================>                53%][Progress:===>                          12%] [Cov:==================>                53%][Progress:===>                          12%] [Cov:==================>                53%][Progress:===>                          12%] [Cov:==================>                53%][Progress:===>                          12%] [Cov:==================>                53%][Progress:===>                          12%] [Cov:==================>                53%][Progress:===>                          12%] [Cov:==================>                53%][Progress:===>                          12%] [Cov:==================>                53%][Progress:===>                          12%] [Cov:==================>                53%][Progress:===>                          12%] [Cov:==================>                53%][Progress:===>                          12%] [Cov:==================>                53%][Progress:===>                          13%] [Cov:==================>                53%][Progress:===>                          13%] [Cov:==================>                53%][Progress:===>                          13%] [Cov:==================>                53%][Progress:===>                          13%] [Cov:==================>                53%][Progress:===>                          13%] [Cov:==================>                53%][Progress:===>                          13%] [Cov:==================>                53%][Progress:===>                          13%] [Cov:==================>                53%][Progress:===>                          13%] [Cov:==================>                53%][Progress:===>                          13%] [Cov:==================>                53%][Progress:===>                          13%] [Cov:==================>                53%][MASTER] 09:10:12.986 [logback-1] WARN  TestCluster - Failed to check cache for java.util.function.Predicate<T> : Type points to itself
[Progress:===>                          13%] [Cov:==================>                53%][Progress:===>                          13%] [Cov:==================>                53%][Progress:===>                          13%] [Cov:==================>                53%][Progress:===>                          13%] [Cov:==================>                53%][Progress:====>                         14%] [Cov:==================>                53%][Progress:====>                         14%] [Cov:==================>                53%][Progress:====>                         14%] [Cov:==================>                53%][Progress:====>                         14%] [Cov:==================>                53%][Progress:====>                         14%] [Cov:==================>                53%][Progress:====>                         14%] [Cov:==================>                53%][Progress:====>                         14%] [Cov:==================>                53%][Progress:====>                         14%] [Cov:==================>                53%][Progress:====>                         14%] [Cov:==================>                53%][Progress:====>                         14%] [Cov:==================>                53%][Progress:====>                         14%] [Cov:==================>                53%][Progress:====>                         14%] [Cov:==================>                53%][Progress:====>                         15%] [Cov:==================>                53%][Progress:====>                         15%] [Cov:==================>                53%][Progress:====>                         15%] [Cov:==================>                53%][Progress:====>                         15%] [Cov:==================>                53%][Progress:====>                         15%] [Cov:==================>                53%][Progress:====>                         15%] [Cov:==================>                53%][Progress:====>                         15%] [Cov:==================>                53%][Progress:====>                         15%] [Cov:==================>                53%][Progress:====>                         15%] [Cov:==================>                53%][Progress:====>                         15%] [Cov:==================>                53%][Progress:====>                         16%] [Cov:==================>                53%][Progress:====>                         16%] [Cov:==================>                53%][Progress:====>                         16%] [Cov:==================>                53%][Progress:====>                         16%] [Cov:==================>                53%][Progress:====>                         16%] [Cov:==================>                54%][Progress:====>                         16%] [Cov:==================>                54%][Progress:====>                         16%] [Cov:==================>                54%][Progress:====>                         16%] [Cov:==================>                54%][Progress:====>                         16%] [Cov:==================>                54%][Progress:====>                         16%] [Cov:==================>                54%][Progress:====>                         16%] [Cov:==================>                54%][Progress:====>                         16%] [Cov:==================>                54%][Progress:====>                         16%] [Cov:==================>                54%][Progress:====>                         16%] [Cov:==================>                54%][Progress:=====>                        17%] [Cov:==================>                54%][Progress:=====>                        17%] [Cov:==================>                54%][Progress:=====>                        17%] [Cov:==================>                54%][Progress:=====>                        17%] [Cov:==================>                54%][Progress:=====>                        17%] [Cov:==================>                54%][Progress:=====>                        17%] [Cov:==================>                54%][Progress:=====>                        17%] [Cov:==================>                54%][MASTER] 09:10:17.009 [logback-1] WARN  TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
[Progress:=====>                        17%] [Cov:==================>                54%][Progress:=====>                        17%] [Cov:==================>                54%][Progress:=====>                        17%] [Cov:==================>                54%][Progress:=====>                        18%] [Cov:==================>                54%][Progress:=====>                        18%] [Cov:==================>                54%][Progress:=====>                        18%] [Cov:==================>                54%][Progress:=====>                        18%] [Cov:==================>                54%][Progress:=====>                        18%] [Cov:==================>                54%][Progress:=====>                        18%] [Cov:==================>                54%][Progress:=====>                        18%] [Cov:==================>                54%][Progress:=====>                        18%] [Cov:==================>                54%][Progress:=====>                        18%] [Cov:==================>                54%][Progress:=====>                        18%] [Cov:==================>                54%][Progress:=====>                        18%] [Cov:==================>                54%][Progress:=====>                        18%] [Cov:==================>                54%][Progress:=====>                        18%] [Cov:==================>                54%][Progress:=====>                        19%] [Cov:==================>                54%][Progress:=====>                        19%] [Cov:==================>                54%][Progress:=====>                        19%] [Cov:==================>                54%][Progress:=====>                        19%] [Cov:==================>                54%][Progress:=====>                        19%] [Cov:==================>                54%][Progress:=====>                        19%] [Cov:==================>                54%][Progress:=====>                        19%] [Cov:==================>                54%][Progress:=====>                        19%] [Cov:==================>                54%][Progress:=====>                        19%] [Cov:==================>                54%][Progress:=====>                        19%] [Cov:==================>                54%][Progress:=====>                        19%] [Cov:==================>                54%][Progress:=====>                        19%] [Cov:==================>                54%][Progress:=====>                        19%] [Cov:==================>                54%][Progress:======>                       20%] [Cov:==================>                54%][Progress:======>                       20%] [Cov:==================>                54%][Progress:======>                       20%] [Cov:==================>                54%][Progress:======>                       20%] [Cov:==================>                54%][Progress:======>                       20%] [Cov:==================>                54%][Progress:======>                       20%] [Cov:==================>                54%][Progress:======>                       20%] [Cov:==================>                54%][Progress:======>                       20%] [Cov:==================>                54%][Progress:======>                       20%] [Cov:==================>                54%][Progress:======>                       20%] [Cov:==================>                54%][Progress:======>                       20%] [Cov:==================>                54%][Progress:======>                       20%] [Cov:==================>                54%][Progress:======>                       20%] [Cov:==================>                54%][Progress:======>                       21%] [Cov:==================>                54%][Progress:======>                       21%] [Cov:==================>                54%][Progress:======>                       21%] [Cov:==================>                54%][Progress:======>                       21%] [Cov:==================>                54%][Progress:======>                       21%] [Cov:==================>                54%][Progress:======>                       21%] [Cov:==================>                54%][Progress:======>                       21%] [Cov:==================>                54%][Progress:======>                       21%] [Cov:==================>                54%][Progress:======>                       21%] [Cov:==================>                54%][Progress:======>                       21%] [Cov:==================>                54%][Progress:======>                       21%] [Cov:==================>                54%][Progress:======>                       21%] [Cov:==================>                54%][Progress:======>                       21%] [Cov:==================>                54%][Progress:======>                       21%] [Cov:==================>                54%][Progress:======>                       22%] [Cov:==================>                54%][Progress:======>                       22%] [Cov:==================>                54%][Progress:======>                       22%] [Cov:==================>                54%][Progress:======>                       22%] [Cov:==================>                54%][Progress:======>                       22%] [Cov:==================>                54%][Progress:======>                       22%] [Cov:==================>                54%][Progress:======>                       22%] [Cov:==================>                54%][Progress:======>                       22%] [Cov:==================>                54%][Progress:======>                       22%] [Cov:==================>                54%][Progress:======>                       22%] [Cov:==================>                54%][Progress:======>                       22%] [Cov:==================>                54%][Progress:======>                       22%] [Cov:==================>                54%][Progress:======>                       22%] [Cov:==================>                54%][Progress:======>                       22%] [Cov:==================>                54%][Progress:======>                       23%] [Cov:==================>                54%][Progress:======>                       23%] [Cov:==================>                54%][Progress:======>                       23%] [Cov:==================>                54%][Progress:======>                       23%] [Cov:==================>                54%][Progress:======>                       23%] [Cov:==================>                54%][Progress:======>                       23%] [Cov:==================>                54%][Progress:======>                       23%] [Cov:==================>                54%][Progress:======>                       23%] [Cov:==================>                54%][Progress:======>                       23%] [Cov:==================>                54%][Progress:======>                       23%] [Cov:==================>                54%][Progress:======>                       23%] [Cov:==================>                54%][Progress:======>                       23%] [Cov:==================>                54%][Progress:======>                       23%] [Cov:==================>                54%][Progress:======>                       23%] [Cov:==================>                54%][Progress:======>                       23%] [Cov:==================>                54%][Progress:=======>                      24%] [Cov:==================>                54%][Progress:=======>                      24%] [Cov:==================>                54%][Progress:=======>                      24%] [Cov:==================>                54%][Progress:=======>                      24%] [Cov:==================>                54%][Progress:=======>                      24%] [Cov:==================>                54%][Progress:=======>                      24%] [Cov:==================>                54%][Progress:=======>                      24%] [Cov:==================>                54%][Progress:=======>                      24%] [Cov:==================>                54%][Progress:=======>                      24%] [Cov:==================>                54%][Progress:=======>                      24%] [Cov:==================>                54%][Progress:=======>                      24%] [Cov:==================>                54%][Progress:=======>                      24%] [Cov:==================>                54%][Progress:=======>                      24%] [Cov:==================>                54%][Progress:=======>                      25%] [Cov:==================>                54%][Progress:=======>                      25%] [Cov:==================>                54%][Progress:=======>                      25%] [Cov:==================>                54%][Progress:=======>                      25%] [Cov:==================>                54%][Progress:=======>                      25%] [Cov:==================>                54%][Progress:=======>                      25%] [Cov:==================>                54%][Progress:=======>                      25%] [Cov:==================>                54%][Progress:=======>                      25%] [Cov:==================>                54%][Progress:=======>                      25%] [Cov:==================>                54%][Progress:=======>                      25%] [Cov:==================>                54%][Progress:=======>                      25%] [Cov:==================>                54%][Progress:=======>                      25%] [Cov:==================>                54%][Progress:=======>                      25%] [Cov:==================>                54%][Progress:=======>                      25%] [Cov:==================>                54%][Progress:=======>                      26%] [Cov:==================>                54%][Progress:=======>                      26%] [Cov:==================>                54%][Progress:=======>                      26%] [Cov:==================>                54%][Progress:=======>                      26%] [Cov:==================>                54%][Progress:=======>                      26%] [Cov:==================>                54%][Progress:=======>                      26%] [Cov:==================>                54%][Progress:=======>                      26%] [Cov:==================>                54%][Progress:=======>                      26%] [Cov:==================>                54%][Progress:=======>                      26%] [Cov:==================>                54%][Progress:=======>                      26%] [Cov:==================>                54%][Progress:=======>                      26%] [Cov:==================>                54%][Progress:=======>                      26%] [Cov:==================>                54%][Progress:=======>                      26%] [Cov:==================>                54%][Progress:=======>                      26%] [Cov:==================>                54%][Progress:=======>                      26%] [Cov:==================>                54%][Progress:========>                     27%] [Cov:==================>                54%][Progress:========>                     27%] [Cov:==================>                54%][Progress:========>                     27%] [Cov:==================>                54%][Progress:========>                     27%] [Cov:==================>                54%][Progress:========>                     27%] [Cov:==================>                54%][Progress:========>                     27%] [Cov:==================>                54%][Progress:========>                     27%] [Cov:==================>                54%][Progress:========>                     27%] [Cov:==================>                54%][Progress:========>                     27%] [Cov:==================>                54%][Progress:========>                     27%] [Cov:==================>                54%][Progress:========>                     27%] [Cov:==================>                54%][Progress:========>                     27%] [Cov:==================>                54%][Progress:========>                     27%] [Cov:==================>                54%][Progress:========>                     28%] [Cov:==================>                54%][Progress:========>                     28%] [Cov:==================>                54%][Progress:========>                     28%] [Cov:==================>                54%][Progress:========>                     28%] [Cov:==================>                54%][Progress:========>                     28%] [Cov:==================>                54%][Progress:========>                     28%] [Cov:==================>                54%][Progress:========>                     28%] [Cov:==================>                54%][Progress:========>                     28%] [Cov:==================>                54%][Progress:========>                     28%] [Cov:==================>                54%][Progress:========>                     28%] [Cov:==================>                54%][Progress:========>                     28%] [Cov:==================>                54%][Progress:========>                     28%] [Cov:==================>                54%][Progress:========>                     28%] [Cov:==================>                54%][Progress:========>                     28%] [Cov:==================>                54%][Progress:========>                     29%] [Cov:==================>                54%][Progress:========>                     29%] [Cov:==================>                54%][Progress:========>                     29%] [Cov:==================>                54%][Progress:========>                     29%] [Cov:==================>                54%][Progress:========>                     29%] [Cov:==================>                54%][Progress:========>                     29%] [Cov:==================>                54%][Progress:========>                     29%] [Cov:==================>                54%][Progress:========>                     29%] [Cov:==================>                54%][Progress:========>                     29%] [Cov:==================>                54%][Progress:========>                     29%] [Cov:==================>                54%][Progress:========>                     29%] [Cov:==================>                54%][Progress:========>                     29%] [Cov:==================>                54%][Progress:========>                     29%] [Cov:==================>                54%][Progress:========>                     29%] [Cov:==================>                54%][Progress:========>                     29%] [Cov:==================>                54%][Progress:========>                     29%] [Cov:==================>                54%][Progress:=========>                    30%] [Cov:==================>                54%][Progress:=========>                    30%] [Cov:==================>                54%][Progress:=========>                    30%] [Cov:==================>                54%][Progress:=========>                    30%] [Cov:==================>                54%][Progress:=========>                    30%] [Cov:==================>                54%][Progress:=========>                    30%] [Cov:==================>                54%][Progress:=========>                    30%] [Cov:==================>                54%][Progress:=========>                    30%] [Cov:==================>                54%][Progress:=========>                    30%] [Cov:==================>                54%][Progress:=========>                    30%] [Cov:==================>                54%][Progress:=========>                    30%] [Cov:==================>                54%][Progress:=========>                    30%] [Cov:==================>                54%][Progress:=========>                    30%] [Cov:==================>                54%][Progress:=========>                    30%] [Cov:==================>                54%][Progress:=========>                    30%] [Cov:==================>                54%][Progress:=========>                    31%] [Cov:==================>                54%][Progress:=========>                    31%] [Cov:==================>                54%][Progress:=========>                    31%] [Cov:==================>                54%][Progress:=========>                    31%] [Cov:==================>                54%][Progress:=========>                    31%] [Cov:==================>                54%][Progress:=========>                    31%] [Cov:==================>                54%][Progress:=========>                    31%] [Cov:==================>                54%][Progress:=========>                    31%] [Cov:==================>                54%][Progress:=========>                    31%] [Cov:==================>                54%][Progress:=========>                    31%] [Cov:==================>                54%][Progress:=========>                    31%] [Cov:==================>                54%][Progress:=========>                    31%] [Cov:==================>                54%][Progress:=========>                    31%] [Cov:==================>                54%][Progress:=========>                    31%] [Cov:==================>                54%][Progress:=========>                    31%] [Cov:==================>                54%][Progress:=========>                    31%] [Cov:==================>                54%][Progress:=========>                    31%] [Cov:==================>                54%][Progress:=========>                    32%] [Cov:==================>                54%][Progress:=========>                    32%] [Cov:==================>                54%][Progress:=========>                    32%] [Cov:==================>                54%][Progress:=========>                    32%] [Cov:==================>                54%][Progress:=========>                    32%] [Cov:==================>                54%][Progress:=========>                    32%] [Cov:==================>                54%][Progress:=========>                    32%] [Cov:==================>                54%][Progress:=========>                    32%] [Cov:==================>                54%][Progress:=========>                    32%] [Cov:==================>                54%][Progress:=========>                    32%] [Cov:==================>                54%][Progress:=========>                    32%] [Cov:==================>                54%][Progress:=========>                    32%] [Cov:==================>                54%][Progress:=========>                    32%] [Cov:==================>                54%][Progress:=========>                    32%] [Cov:==================>                54%][Progress:=========>                    32%] [Cov:==================>                54%][Progress:=========>                    32%] [Cov:==================>                54%][Progress:=========>                    32%] [Cov:==================>                54%][Progress:=========>                    32%] [Cov:==================>                54%][Progress:=========>                    32%] [Cov:==================>                54%][Progress:=========>                    33%] [Cov:==================>                54%][Progress:=========>                    33%] [Cov:==================>                54%][Progress:=========>                    33%] [Cov:==================>                54%][Progress:=========>                    33%] [Cov:==================>                54%][Progress:=========>                    33%] [Cov:==================>                54%][Progress:=========>                    33%] [Cov:==================>                54%][Progress:=========>                    33%] [Cov:==================>                54%][Progress:=========>                    33%] [Cov:==================>                54%][Progress:=========>                    33%] [Cov:==================>                54%][Progress:=========>                    33%] [Cov:==================>                54%][Progress:=========>                    33%] [Cov:==================>                54%][Progress:=========>                    33%] [Cov:==================>                54%][Progress:=========>                    33%] [Cov:==================>                54%][Progress:=========>                    33%] [Cov:==================>                54%][Progress:=========>                    33%] [Cov:==================>                54%][Progress:=========>                    33%] [Cov:==================>                54%][Progress:=========>                    33%] [Cov:==================>                54%][Progress:=========>                    33%] [Cov:==================>                54%][Progress:==========>                   34%] [Cov:==================>                54%][Progress:==========>                   34%] [Cov:==================>                54%][Progress:==========>                   34%] [Cov:==================>                54%][Progress:==========>                   34%] [Cov:==================>                54%][Progress:==========>                   34%] [Cov:==================>                54%][Progress:==========>                   34%] [Cov:==================>                54%][Progress:==========>                   34%] [Cov:==================>                54%][Progress:==========>                   34%] [Cov:==================>                54%][Progress:==========>                   34%] [Cov:==================>                54%][Progress:==========>                   34%] [Cov:==================>                54%][Progress:==========>                   34%] [Cov:==================>                54%][Progress:==========>                   34%] [Cov:==================>                54%][Progress:==========>                   34%] [Cov:==================>                54%][Progress:==========>                   34%] [Cov:==================>                54%][Progress:==========>                   34%] [Cov:==================>                54%][Progress:==========>                   34%] [Cov:==================>                54%][Progress:==========>                   34%] [Cov:==================>                54%][Progress:==========>                   34%] [Cov:==================>                54%][Progress:==========>                   34%] [Cov:==================>                54%][Progress:==========>                   34%] [Cov:==================>                54%][Progress:==========>                   34%] [Cov:==================>                54%][Progress:==========>                   35%] [Cov:==================>                54%][Progress:==========>                   35%] [Cov:==================>                54%][Progress:==========>                   35%] [Cov:==================>                54%][Progress:==========>                   35%] [Cov:==================>                54%][Progress:==========>                   35%] [Cov:==================>                54%][Progress:==========>                   35%] [Cov:==================>                54%][Progress:==========>                   35%] [Cov:==================>                54%][Progress:==========>                   35%] [Cov:==================>                54%][Progress:==========>                   35%] [Cov:==================>                54%][Progress:==========>                   35%] [Cov:==================>                54%][Progress:==========>                   35%] [Cov:==================>                54%][Progress:==========>                   35%] [Cov:==================>                54%][Progress:==========>                   35%] [Cov:==================>                54%][Progress:==========>                   35%] [Cov:==================>                54%][Progress:==========>                   35%] [Cov:==================>                54%][Progress:==========>                   35%] [Cov:==================>                54%][Progress:==========>                   35%] [Cov:==================>                54%][Progress:==========>                   35%] [Cov:==================>                54%][Progress:==========>                   36%] [Cov:==================>                54%][Progress:==========>                   36%] [Cov:==================>                54%][Progress:==========>                   36%] [Cov:==================>                54%][Progress:==========>                   36%] [Cov:==================>                54%][Progress:==========>                   36%] [Cov:==================>                54%][Progress:==========>                   36%] [Cov:==================>                54%][Progress:==========>                   36%] [Cov:==================>                54%][Progress:==========>                   36%] [Cov:==================>                54%][Progress:==========>                   36%] [Cov:==================>                54%][Progress:==========>                   36%] [Cov:==================>                54%][Progress:==========>                   36%] [Cov:==================>                54%][Progress:==========>                   36%] [Cov:==================>                54%][Progress:==========>                   36%] [Cov:==================>                54%][Progress:==========>                   36%] [Cov:==================>                54%][Progress:==========>                   36%] [Cov:==================>                54%][Progress:==========>                   36%] [Cov:==================>                54%][Progress:==========>                   36%] [Cov:==================>                54%][Progress:==========>                   36%] [Cov:==================>                54%][Progress:==========>                   36%] [Cov:==================>                54%][Progress:==========>                   36%] [Cov:==================>                54%][Progress:===========>                  37%] [Cov:==================>                54%][Progress:===========>                  37%] [Cov:==================>                54%][Progress:===========>                  37%] [Cov:==================>                54%][Progress:===========>                  37%] [Cov:==================>                54%][Progress:===========>                  37%] [Cov:==================>                54%][Progress:===========>                  37%] [Cov:==================>                54%][Progress:===========>                  37%] [Cov:==================>                54%][Progress:===========>                  37%] [Cov:==================>                54%][Progress:===========>                  37%] [Cov:==================>                54%][Progress:===========>                  37%] [Cov:==================>                54%][Progress:===========>                  37%] [Cov:==================>                54%][Progress:===========>                  37%] [Cov:==================>                54%][Progress:===========>                  37%] [Cov:==================>                54%][Progress:===========>                  37%] [Cov:==================>                54%][Progress:===========>                  37%] [Cov:==================>                54%][Progress:===========>                  37%] [Cov:==================>                54%][Progress:===========>                  37%] [Cov:==================>                54%][Progress:===========>                  37%] [Cov:==================>                54%][Progress:===========>                  38%] [Cov:==================>                54%][Progress:===========>                  38%] [Cov:==================>                54%][Progress:===========>                  38%] [Cov:==================>                54%][Progress:===========>                  38%] [Cov:==================>                54%][Progress:===========>                  38%] [Cov:==================>                54%][Progress:===========>                  38%] [Cov:==================>                54%][Progress:===========>                  38%] [Cov:==================>                54%][Progress:===========>                  38%] [Cov:==================>                54%][Progress:===========>                  38%] [Cov:==================>                54%][Progress:===========>                  38%] [Cov:==================>                54%][Progress:===========>                  38%] [Cov:==================>                54%][Progress:===========>                  38%] [Cov:==================>                54%][Progress:===========>                  38%] [Cov:==================>                54%][Progress:===========>                  38%] [Cov:==================>                54%][Progress:===========>                  38%] [Cov:==================>                54%][Progress:===========>                  38%] [Cov:==================>                54%][Progress:===========>                  39%] [Cov:==================>                54%][Progress:===========>                  39%] [Cov:==================>                54%][Progress:===========>                  39%] [Cov:==================>                54%][Progress:===========>                  39%] [Cov:==================>                54%][Progress:===========>                  39%] [Cov:==================>                54%][Progress:===========>                  39%] [Cov:==================>                54%][Progress:===========>                  39%] [Cov:==================>                54%][Progress:===========>                  39%] [Cov:==================>                54%][Progress:===========>                  39%] [Cov:==================>                54%][Progress:===========>                  39%] [Cov:==================>                54%][Progress:===========>                  39%] [Cov:==================>                54%][Progress:===========>                  39%] [Cov:==================>                54%][Progress:===========>                  39%] [Cov:==================>                54%][Progress:===========>                  39%] [Cov:==================>                54%][Progress:===========>                  39%] [Cov:==================>                54%][Progress:===========>                  39%] [Cov:==================>                54%][Progress:===========>                  39%] [Cov:==================>                54%][Progress:===========>                  39%] [Cov:==================>                54%][Progress:============>                 40%] [Cov:==================>                54%][Progress:============>                 40%] [Cov:==================>                54%][Progress:============>                 40%] [Cov:==================>                54%][Progress:============>                 40%] [Cov:==================>                54%][Progress:============>                 40%] [Cov:==================>                54%][Progress:============>                 40%] [Cov:==================>                54%][Progress:============>                 40%] [Cov:==================>                54%][Progress:============>                 40%] [Cov:==================>                54%][Progress:============>                 40%] [Cov:==================>                54%][Progress:============>                 40%] [Cov:==================>                54%][Progress:============>                 40%] [Cov:==================>                54%][Progress:============>                 40%] [Cov:==================>                54%][Progress:============>                 40%] [Cov:==================>                54%][Progress:============>                 40%] [Cov:==================>                54%][Progress:============>                 40%] [Cov:==================>                54%][Progress:============>                 40%] [Cov:==================>                54%][Progress:============>                 40%] [Cov:==================>                54%][Progress:============>                 41%] [Cov:==================>                54%][Progress:============>                 41%] [Cov:==================>                54%][Progress:============>                 41%] [Cov:==================>                54%][Progress:============>                 41%] [Cov:==================>                54%][Progress:============>                 41%] [Cov:==================>                54%][Progress:============>                 41%] [Cov:==================>                54%][Progress:============>                 41%] [Cov:==================>                54%][Progress:============>                 41%] [Cov:==================>                54%][Progress:============>                 41%] [Cov:==================>                54%][Progress:============>                 41%] [Cov:==================>                54%][Progress:============>                 41%] [Cov:==================>                54%][Progress:============>                 41%] [Cov:==================>                54%][Progress:============>                 41%] [Cov:==================>                54%][Progress:============>                 41%] [Cov:==================>                54%][Progress:============>                 41%] [Cov:==================>                54%][Progress:============>                 41%] [Cov:==================>                54%][Progress:============>                 41%] [Cov:==================>                54%][Progress:============>                 41%] [Cov:==================>                54%][Progress:============>                 42%] [Cov:==================>                54%][Progress:============>                 42%] [Cov:==================>                54%][Progress:============>                 42%] [Cov:==================>                54%][Progress:============>                 42%] [Cov:==================>                54%][Progress:============>                 42%] [Cov:==================>                54%][Progress:============>                 42%] [Cov:==================>                54%][Progress:============>                 42%] [Cov:==================>                54%][Progress:============>                 42%] [Cov:==================>                54%][Progress:============>                 42%] [Cov:==================>                54%][Progress:============>                 42%] [Cov:==================>                54%][Progress:============>                 42%] [Cov:==================>                54%][Progress:============>                 42%] [Cov:==================>                54%][Progress:============>                 42%] [Cov:==================>                54%][Progress:============>                 42%] [Cov:==================>                54%][Progress:============>                 42%] [Cov:==================>                54%][Progress:============>                 42%] [Cov:==================>                54%][Progress:============>                 42%] [Cov:==================>                54%][Progress:============>                 43%] [Cov:==================>                54%][Progress:============>                 43%] [Cov:==================>                54%][Progress:============>                 43%] [Cov:==================>                54%][Progress:============>                 43%] [Cov:==================>                54%][Progress:============>                 43%] [Cov:==================>                54%][Progress:============>                 43%] [Cov:==================>                54%][Progress:============>                 43%] [Cov:==================>                54%][Progress:============>                 43%] [Cov:==================>                54%][Progress:============>                 43%] [Cov:==================>                54%][Progress:============>                 43%] [Cov:==================>                54%][Progress:============>                 43%] [Cov:==================>                54%][Progress:============>                 43%] [Cov:==================>                54%][Progress:============>                 43%] [Cov:==================>                54%][Progress:============>                 43%] [Cov:==================>                54%][Progress:============>                 43%] [Cov:==================>                54%][Progress:============>                 43%] [Cov:==================>                54%][Progress:============>                 43%] [Cov:==================>                54%][Progress:============>                 43%] [Cov:==================>                54%][Progress:=============>                44%] [Cov:==================>                54%][Progress:=============>                44%] [Cov:==================>                54%][Progress:=============>                44%] [Cov:==================>                54%][Progress:=============>                44%] [Cov:==================>                54%][Progress:=============>                44%] [Cov:==================>                54%][Progress:=============>                44%] [Cov:==================>                54%][Progress:=============>                44%] [Cov:==================>                54%][Progress:=============>                44%] [Cov:==================>                54%][Progress:=============>                44%] [Cov:==================>                54%][Progress:=============>                44%] [Cov:==================>                54%][Progress:=============>                44%] [Cov:==================>                54%][Progress:=============>                44%] [Cov:==================>                54%][Progress:=============>                44%] [Cov:==================>                54%][Progress:=============>                44%] [Cov:==================>                54%][Progress:=============>                44%] [Cov:==================>                54%][Progress:=============>                44%] [Cov:==================>                54%][Progress:=============>                44%] [Cov:==================>                54%][Progress:=============>                45%] [Cov:==================>                54%][Progress:=============>                45%] [Cov:==================>                54%][Progress:=============>                45%] [Cov:==================>                54%][Progress:=============>                45%] [Cov:==================>                54%][Progress:=============>                45%] [Cov:==================>                54%][Progress:=============>                45%] [Cov:==================>                54%][Progress:=============>                45%] [Cov:==================>                54%][Progress:=============>                45%] [Cov:==================>                54%][Progress:=============>                45%] [Cov:==================>                54%][Progress:=============>                45%] [Cov:==================>                54%][Progress:=============>                45%] [Cov:==================>                54%][Progress:=============>                45%] [Cov:==================>                54%][Progress:=============>                45%] [Cov:==================>                54%][Progress:=============>                45%] [Cov:==================>                54%][Progress:=============>                45%] [Cov:==================>                54%][Progress:=============>                45%] [Cov:==================>                54%][Progress:=============>                45%] [Cov:==================>                54%][Progress:=============>                45%] [Cov:==================>                54%][Progress:=============>                45%] [Cov:==================>                54%][Progress:=============>                46%] [Cov:==================>                54%][Progress:=============>                46%] [Cov:==================>                54%][Progress:=============>                46%] [Cov:==================>                54%][Progress:=============>                46%] [Cov:==================>                54%][Progress:=============>                46%] [Cov:==================>                54%][Progress:=============>                46%] [Cov:==================>                54%][Progress:=============>                46%] [Cov:==================>                54%][Progress:=============>                46%] [Cov:==================>                54%][Progress:=============>                46%] [Cov:==================>                54%][Progress:=============>                46%] [Cov:==================>                54%][Progress:=============>                46%] [Cov:==================>                54%][Progress:=============>                46%] [Cov:==================>                54%][Progress:=============>                46%] [Cov:==================>                54%][Progress:=============>                46%] [Cov:==================>                54%][Progress:=============>                46%] [Cov:==================>                54%][Progress:=============>                46%] [Cov:==================>                54%][Progress:=============>                46%] [Cov:==================>                54%][Progress:=============>                46%] [Cov:==================>                54%][Progress:==============>               47%] [Cov:==================>                54%][Progress:==============>               47%] [Cov:==================>                54%][Progress:==============>               47%] [Cov:==================>                54%][Progress:==============>               47%] [Cov:==================>                54%][Progress:==============>               47%] [Cov:==================>                54%][Progress:==============>               47%] [Cov:==================>                54%][Progress:==============>               47%] [Cov:==================>                54%][Progress:==============>               47%] [Cov:==================>                54%][Progress:==============>               47%] [Cov:==================>                54%][Progress:==============>               47%] [Cov:==================>                54%][Progress:==============>               47%] [Cov:==================>                54%][Progress:==============>               47%] [Cov:==================>                54%][Progress:==============>               47%] [Cov:==================>                54%][Progress:==============>               47%] [Cov:==================>                54%][Progress:==============>               47%] [Cov:==================>                54%][Progress:==============>               47%] [Cov:==================>                54%][Progress:==============>               47%] [Cov:==================>                54%][Progress:==============>               47%] [Cov:==================>                54%][Progress:==============>               47%] [Cov:==================>                54%][Progress:==============>               48%] [Cov:==================>                54%][Progress:==============>               48%] [Cov:==================>                54%][Progress:==============>               48%] [Cov:==================>                54%][Progress:==============>               48%] [Cov:==================>                54%][Progress:==============>               48%] [Cov:==================>                54%][Progress:==============>               48%] [Cov:==================>                54%][Progress:==============>               48%] [Cov:==================>                54%][Progress:==============>               48%] [Cov:==================>                54%][Progress:==============>               48%] [Cov:==================>                54%][Progress:==============>               48%] [Cov:==================>                54%][Progress:==============>               48%] [Cov:==================>                54%][Progress:==============>               48%] [Cov:==================>                54%][Progress:==============>               48%] [Cov:==================>                54%][Progress:==============>               48%] [Cov:==================>                54%][Progress:==============>               48%] [Cov:==================>                54%][Progress:==============>               48%] [Cov:==================>                54%][Progress:==============>               48%] [Cov:==================>                54%][Progress:==============>               49%] [Cov:==================>                54%][Progress:==============>               49%] [Cov:==================>                54%][Progress:==============>               49%] [Cov:==================>                54%][Progress:==============>               49%] [Cov:==================>                54%][Progress:==============>               49%] [Cov:==================>                54%][Progress:==============>               49%] [Cov:==================>                54%][Progress:==============>               49%] [Cov:==================>                54%][Progress:==============>               49%] [Cov:==================>                54%][Progress:==============>               49%] [Cov:==================>                54%][Progress:==============>               49%] [Cov:==================>                54%][Progress:==============>               49%] [Cov:==================>                54%][Progress:==============>               49%] [Cov:==================>                54%][Progress:==============>               49%] [Cov:==================>                54%][Progress:==============>               49%] [Cov:==================>                54%][Progress:==============>               49%] [Cov:==================>                54%][Progress:==============>               49%] [Cov:==================>                54%][Progress:==============>               49%] [Cov:==================>                54%][Progress:==============>               49%] [Cov:==================>                54%][Progress:==============>               49%] [Cov:==================>                54%][Progress:===============>              50%] [Cov:==================>                54%][Progress:===============>              50%] [Cov:==================>                54%][Progress:===============>              50%] [Cov:==================>                54%][Progress:===============>              50%] [Cov:==================>                54%][Progress:===============>              50%] [Cov:==================>                54%][Progress:===============>              50%] [Cov:==================>                54%][Progress:===============>              50%] [Cov:==================>                54%][Progress:===============>              50%] [Cov:==================>                54%][Progress:===============>              50%] [Cov:==================>                54%][Progress:===============>              50%] [Cov:==================>                54%][Progress:===============>              50%] [Cov:==================>                54%][Progress:===============>              50%] [Cov:==================>                54%][Progress:===============>              50%] [Cov:==================>                54%][Progress:===============>              50%] [Cov:==================>                54%][Progress:===============>              50%] [Cov:==================>                54%][Progress:===============>              50%] [Cov:==================>                54%][Progress:===============>              50%] [Cov:==================>                54%][Progress:===============>              50%] [Cov:==================>                54%][Progress:===============>              50%] [Cov:==================>                54%][Progress:===============>              50%] [Cov:==================>                54%][Progress:===============>              51%] [Cov:==================>                54%][Progress:===============>              51%] [Cov:==================>                54%][Progress:===============>              51%] [Cov:==================>                54%][Progress:===============>              51%] [Cov:==================>                54%][Progress:===============>              51%] [Cov:==================>                54%][Progress:===============>              51%] [Cov:==================>                54%][Progress:===============>              51%] [Cov:==================>                54%][Progress:===============>              51%] [Cov:==================>                54%][Progress:===============>              51%] [Cov:==================>                54%][Progress:===============>              51%] [Cov:==================>                54%][Progress:===============>              51%] [Cov:==================>                54%][Progress:===============>              51%] [Cov:==================>                54%][Progress:===============>              51%] [Cov:==================>                54%][Progress:===============>              51%] [Cov:==================>                54%][Progress:===============>              51%] [Cov:==================>                54%][Progress:===============>              51%] [Cov:==================>                54%][Progress:===============>              51%] [Cov:==================>                54%][Progress:===============>              51%] [Cov:==================>                54%][Progress:===============>              52%] [Cov:==================>                54%][Progress:===============>              52%] [Cov:==================>                54%][Progress:===============>              52%] [Cov:==================>                54%][Progress:===============>              52%] [Cov:==================>                54%][Progress:===============>              52%] [Cov:==================>                54%][Progress:===============>              52%] [Cov:==================>                54%][Progress:===============>              52%] [Cov:==================>                54%][Progress:===============>              52%] [Cov:==================>                54%][Progress:===============>              52%] [Cov:==================>                54%][Progress:===============>              52%] [Cov:==================>                54%][Progress:===============>              52%] [Cov:==================>                54%][Progress:===============>              52%] [Cov:==================>                54%][Progress:===============>              52%] [Cov:==================>                54%][Progress:===============>              52%] [Cov:==================>                54%][Progress:===============>              52%] [Cov:==================>                54%][Progress:===============>              52%] [Cov:===================>               57%][Progress:===============>              52%] [Cov:===================>               57%][Progress:===============>              52%] [Cov:===================>               57%][Progress:===============>              52%] [Cov:===================>               57%][Progress:===============>              52%] [Cov:===================>               57%][Progress:===============>              53%] [Cov:===================>               57%][Progress:===============>              53%] [Cov:===================>               57%][Progress:===============>              53%] [Cov:===================>               57%][Progress:===============>              53%] [Cov:===================>               57%][Progress:===============>              53%] [Cov:===================>               57%][Progress:===============>              53%] [Cov:===================>               57%][Progress:===============>              53%] [Cov:===================>               57%][Progress:===============>              53%] [Cov:===================>               57%][Progress:===============>              53%] [Cov:===================>               57%][Progress:===============>              53%] [Cov:===================>               57%][Progress:===============>              53%] [Cov:===================>               57%][Progress:===============>              53%] [Cov:===================>               57%][Progress:===============>              53%] [Cov:===================>               57%][Progress:===============>              53%] [Cov:===================>               57%][Progress:===============>              53%] [Cov:===================>               57%][Progress:===============>              53%] [Cov:===================>               57%][Progress:===============>              53%] [Cov:===================>               57%][Progress:===============>              53%] [Cov:===================>               57%][Progress:===============>              53%] [Cov:===================>               57%][Progress:================>             54%] [Cov:===================>               57%][Progress:================>             54%] [Cov:===================>               57%][Progress:================>             54%] [Cov:===================>               57%][Progress:================>             54%] [Cov:===================>               57%][Progress:================>             54%] [Cov:===================>               57%][Progress:================>             54%] [Cov:===================>               57%][Progress:================>             54%] [Cov:===================>               57%][Progress:================>             54%] [Cov:===================>               57%][Progress:================>             54%] [Cov:===================>               57%][Progress:================>             54%] [Cov:===================>               57%][Progress:================>             54%] [Cov:===================>               57%][Progress:================>             54%] [Cov:===================>               57%][Progress:================>             54%] [Cov:===================>               57%][Progress:================>             54%] [Cov:===================>               57%][Progress:================>             54%] [Cov:===================>               57%][Progress:================>             54%] [Cov:====================>              59%][Progress:================>             54%] [Cov:====================>              59%][Progress:================>             54%] [Cov:====================>              59%][Progress:================>             54%] [Cov:====================>              59%][Progress:================>             55%] [Cov:====================>              59%][Progress:================>             55%] [Cov:====================>              59%][Progress:================>             55%] [Cov:====================>              59%][Progress:================>             55%] [Cov:====================>              59%][Progress:================>             55%] [Cov:====================>              59%][Progress:================>             55%] [Cov:====================>              59%][Progress:================>             55%] [Cov:====================>              59%][Progress:================>             55%] [Cov:====================>              59%][Progress:================>             55%] [Cov:====================>              59%][Progress:================>             55%] [Cov:====================>              59%][Progress:================>             55%] [Cov:====================>              59%][Progress:================>             55%] [Cov:====================>              59%][Progress:================>             55%] [Cov:====================>              59%][Progress:================>             55%] [Cov:====================>              59%][Progress:================>             55%] [Cov:====================>              59%][Progress:================>             55%] [Cov:====================>              59%][Progress:================>             55%] [Cov:====================>              59%][Progress:================>             56%] [Cov:====================>              59%][Progress:================>             56%] [Cov:====================>              59%][Progress:================>             56%] [Cov:====================>              59%][Progress:================>             56%] [Cov:====================>              59%][Progress:================>             56%] [Cov:====================>              59%][Progress:================>             56%] [Cov:====================>              59%][Progress:================>             56%] [Cov:====================>              59%][Progress:================>             56%] [Cov:====================>              59%][Progress:================>             56%] [Cov:====================>              59%][Progress:================>             56%] [Cov:====================>              59%][Progress:================>             56%] [Cov:====================>              59%][Progress:================>             56%] [Cov:====================>              59%][Progress:================>             56%] [Cov:====================>              59%][Progress:================>             56%] [Cov:====================>              59%][Progress:================>             56%] [Cov:====================>              59%][Progress:================>             56%] [Cov:====================>              59%][Progress:================>             56%] [Cov:====================>              59%][Progress:================>             56%] [Cov:====================>              59%][Progress:=================>            57%] [Cov:====================>              59%][Progress:=================>            57%] [Cov:====================>              59%][Progress:=================>            57%] [Cov:====================>              59%][Progress:=================>            57%] [Cov:====================>              59%][Progress:=================>            57%] [Cov:====================>              59%][Progress:=================>            57%] [Cov:====================>              59%][Progress:=================>            57%] [Cov:====================>              59%][Progress:=================>            57%] [Cov:====================>              59%][Progress:=================>            57%] [Cov:====================>              59%][Progress:=================>            57%] [Cov:====================>              59%][Progress:=================>            57%] [Cov:====================>              59%][Progress:=================>            57%] [Cov:====================>              59%][Progress:=================>            57%] [Cov:====================>              59%][Progress:=================>            57%] [Cov:====================>              59%][Progress:=================>            57%] [Cov:====================>              59%][Progress:=================>            57%] [Cov:====================>              59%][Progress:=================>            57%] [Cov:====================>              59%][Progress:=================>            57%] [Cov:====================>              59%][Progress:=================>            57%] [Cov:====================>              59%][Progress:=================>            57%] [Cov:====================>              59%][Progress:=================>            58%] [Cov:====================>              59%][Progress:=================>            58%] [Cov:====================>              59%][Progress:=================>            58%] [Cov:====================>              59%][Progress:=================>            58%] [Cov:====================>              59%][Progress:=================>            58%] [Cov:====================>              59%][Progress:=================>            58%] [Cov:====================>              59%][Progress:=================>            58%] [Cov:====================>              59%][Progress:=================>            58%] [Cov:====================>              59%][Progress:=================>            58%] [Cov:====================>              59%][Progress:=================>            58%] [Cov:====================>              59%][Progress:=================>            58%] [Cov:====================>              59%][Progress:=================>            58%] [Cov:====================>              59%][Progress:=================>            58%] [Cov:====================>              59%][Progress:=================>            58%] [Cov:====================>              59%][Progress:=================>            58%] [Cov:====================>              59%][Progress:=================>            58%] [Cov:====================>              59%][Progress:=================>            58%] [Cov:====================>              59%][Progress:=================>            58%] [Cov:====================>              59%][Progress:=================>            58%] [Cov:====================>              59%][Progress:=================>            59%] [Cov:====================>              59%][Progress:=================>            59%] [Cov:====================>              59%][Progress:=================>            59%] [Cov:====================>              59%][Progress:=================>            59%] [Cov:====================>              59%][Progress:=================>            59%] [Cov:====================>              59%][Progress:=================>            59%] [Cov:====================>              59%][Progress:=================>            59%] [Cov:====================>              59%][Progress:=================>            59%] [Cov:====================>              59%][Progress:=================>            59%] [Cov:====================>              59%][Progress:=================>            59%] [Cov:====================>              59%][Progress:=================>            59%] [Cov:====================>              59%][Progress:=================>            59%] [Cov:====================>              59%][Progress:=================>            59%] [Cov:====================>              59%][Progress:=================>            59%] [Cov:====================>              59%][Progress:=================>            59%] [Cov:====================>              59%][Progress:=================>            59%] [Cov:====================>              59%][Progress:=================>            59%] [Cov:====================>              59%][Progress:==================>           60%] [Cov:====================>              59%][Progress:==================>           60%] [Cov:====================>              59%][Progress:==================>           60%] [Cov:====================>              59%][Progress:==================>           60%] [Cov:====================>              59%][Progress:==================>           60%] [Cov:====================>              59%][Progress:==================>           60%] [Cov:====================>              59%][Progress:==================>           60%] [Cov:====================>              59%][Progress:==================>           60%] [Cov:====================>              59%][Progress:==================>           60%] [Cov:====================>              59%][Progress:==================>           60%] [Cov:====================>              59%][Progress:==================>           60%] [Cov:====================>              59%][Progress:==================>           60%] [Cov:====================>              59%][Progress:==================>           60%] [Cov:====================>              59%][Progress:==================>           60%] [Cov:====================>              59%][Progress:==================>           60%] [Cov:====================>              59%][Progress:==================>           60%] [Cov:====================>              59%][Progress:==================>           60%] [Cov:====================>              59%][Progress:==================>           61%] [Cov:====================>              59%][Progress:==================>           61%] [Cov:====================>              59%][Progress:==================>           61%] [Cov:====================>              59%][Progress:==================>           61%] [Cov:====================>              59%][Progress:==================>           61%] [Cov:====================>              59%][Progress:==================>           61%] [Cov:====================>              59%][Progress:==================>           61%] [Cov:====================>              59%][Progress:==================>           61%] [Cov:====================>              59%][Progress:==================>           61%] [Cov:====================>              59%][Progress:==================>           61%] [Cov:====================>              59%][Progress:==================>           61%] [Cov:====================>              59%][Progress:==================>           61%] [Cov:====================>              59%][Progress:==================>           61%] [Cov:====================>              59%][Progress:==================>           61%] [Cov:====================>              59%][Progress:==================>           61%] [Cov:====================>              59%][Progress:==================>           62%] [Cov:====================>              59%][Progress:==================>           62%] [Cov:====================>              59%][Progress:==================>           62%] [Cov:====================>              59%][Progress:==================>           62%] [Cov:====================>              59%][Progress:==================>           62%] [Cov:====================>              59%][Progress:==================>           62%] [Cov:====================>              59%][Progress:==================>           62%] [Cov:====================>              59%][Progress:==================>           62%] [Cov:====================>              59%][Progress:==================>           62%] [Cov:====================>              59%][Progress:==================>           62%] [Cov:====================>              59%][Progress:==================>           62%] [Cov:====================>              59%][Progress:==================>           62%] [Cov:====================>              59%][Progress:==================>           62%] [Cov:====================>              59%][Progress:==================>           62%] [Cov:====================>              59%][Progress:==================>           62%] [Cov:====================>              59%][Progress:==================>           62%] [Cov:====================>              59%][Progress:==================>           62%] [Cov:====================>              59%][Progress:==================>           63%] [Cov:====================>              59%][Progress:==================>           63%] [Cov:====================>              59%][Progress:==================>           63%] [Cov:====================>              59%][Progress:==================>           63%] [Cov:====================>              59%][Progress:==================>           63%] [Cov:====================>              59%][Progress:==================>           63%] [Cov:====================>              59%][Progress:==================>           63%] [Cov:====================>              59%][Progress:==================>           63%] [Cov:====================>              59%][Progress:==================>           63%] [Cov:====================>              59%][Progress:==================>           63%] [Cov:====================>              59%][Progress:==================>           63%] [Cov:====================>              59%][Progress:==================>           63%] [Cov:====================>              59%][Progress:==================>           63%] [Cov:====================>              59%][Progress:==================>           63%] [Cov:====================>              59%][Progress:==================>           63%] [Cov:====================>              59%][Progress:==================>           63%] [Cov:====================>              59%][Progress:==================>           63%] [Cov:====================>              59%][Progress:==================>           63%] [Cov:====================>              59%][Progress:==================>           63%] [Cov:====================>              59%][Progress:===================>          64%] [Cov:====================>              59%][Progress:===================>          64%] [Cov:====================>              59%][Progress:===================>          64%] [Cov:====================>              59%][Progress:===================>          64%] [Cov:====================>              59%][Progress:===================>          64%] [Cov:====================>              59%][Progress:===================>          64%] [Cov:====================>              59%][Progress:===================>          64%] [Cov:====================>              59%][Progress:===================>          64%] [Cov:====================>              59%][Progress:===================>          64%] [Cov:====================>              59%][Progress:===================>          64%] [Cov:====================>              59%][Progress:===================>          64%] [Cov:====================>              59%][Progress:===================>          64%] [Cov:====================>              59%][Progress:===================>          64%] [Cov:====================>              59%][Progress:===================>          64%] [Cov:====================>              59%][Progress:===================>          64%] [Cov:====================>              59%][Progress:===================>          64%] [Cov:====================>              59%][Progress:===================>          64%] [Cov:====================>              59%][Progress:===================>          64%] [Cov:====================>              59%][Progress:===================>          64%] [Cov:====================>              59%][Progress:===================>          65%] [Cov:====================>              59%][Progress:===================>          65%] [Cov:====================>              59%][Progress:===================>          65%] [Cov:====================>              59%][Progress:===================>          65%] [Cov:====================>              59%][Progress:===================>          65%] [Cov:====================>              59%][Progress:===================>          65%] [Cov:====================>              59%][Progress:===================>          65%] [Cov:====================>              59%][Progress:===================>          65%] [Cov:====================>              59%][Progress:===================>          65%] [Cov:====================>              59%][Progress:===================>          65%] [Cov:====================>              59%][Progress:===================>          65%] [Cov:====================>              59%][Progress:===================>          65%] [Cov:====================>              59%][Progress:===================>          65%] [Cov:====================>              59%][Progress:===================>          65%] [Cov:====================>              59%][Progress:===================>          65%] [Cov:====================>              59%][Progress:===================>          65%] [Cov:====================>              59%][Progress:===================>          65%] [Cov:====================>              59%][Progress:===================>          65%] [Cov:====================>              59%][Progress:===================>          65%] [Cov:====================>              59%][Progress:===================>          66%] [Cov:====================>              59%][Progress:===================>          66%] [Cov:====================>              59%][Progress:===================>          66%] [Cov:====================>              59%][Progress:===================>          66%] [Cov:====================>              59%][Progress:===================>          66%] [Cov:====================>              59%][Progress:===================>          66%] [Cov:====================>              59%][Progress:===================>          66%] [Cov:====================>              59%][Progress:===================>          66%] [Cov:====================>              59%][Progress:===================>          66%] [Cov:====================>              59%][Progress:===================>          66%] [Cov:====================>              59%][Progress:===================>          66%] [Cov:====================>              59%][Progress:===================>          66%] [Cov:====================>              59%][Progress:===================>          66%] [Cov:====================>              59%][Progress:===================>          66%] [Cov:====================>              59%][Progress:===================>          66%] [Cov:====================>              59%][Progress:===================>          66%] [Cov:====================>              59%][Progress:===================>          66%] [Cov:====================>              59%][Progress:====================>         67%] [Cov:====================>              59%][Progress:====================>         67%] [Cov:====================>              59%][Progress:====================>         67%] [Cov:====================>              59%][Progress:====================>         67%] [Cov:====================>              59%][Progress:====================>         67%] [Cov:====================>              59%][Progress:====================>         67%] [Cov:====================>              59%][Progress:====================>         67%] [Cov:====================>              59%][Progress:====================>         67%] [Cov:====================>              59%][Progress:====================>         67%] [Cov:====================>              59%][Progress:====================>         67%] [Cov:====================>              59%][Progress:====================>         67%] [Cov:====================>              59%][Progress:====================>         67%] [Cov:====================>              59%][Progress:====================>         67%] [Cov:====================>              59%][Progress:====================>         67%] [Cov:====================>              59%][Progress:====================>         67%] [Cov:====================>              59%][Progress:====================>         67%] [Cov:====================>              59%][Progress:====================>         67%] [Cov:====================>              59%][Progress:====================>         67%] [Cov:====================>              59%][Progress:====================>         68%] [Cov:====================>              59%][Progress:====================>         68%] [Cov:====================>              59%][Progress:====================>         68%] [Cov:====================>              59%][Progress:====================>         68%] [Cov:====================>              59%][Progress:====================>         68%] [Cov:====================>              59%][Progress:====================>         68%] [Cov:====================>              59%][Progress:====================>         68%] [Cov:====================>              59%][Progress:====================>         68%] [Cov:====================>              59%][Progress:====================>         68%] [Cov:====================>              59%][Progress:====================>         68%] [Cov:====================>              59%][Progress:====================>         68%] [Cov:====================>              59%][Progress:====================>         68%] [Cov:====================>              59%][Progress:====================>         68%] [Cov:====================>              59%][Progress:====================>         68%] [Cov:====================>              59%][Progress:====================>         68%] [Cov:====================>              59%][Progress:====================>         68%] [Cov:====================>              59%][Progress:====================>         68%] [Cov:====================>              59%][Progress:====================>         68%] [Cov:====================>              59%][Progress:====================>         68%] [Cov:====================>              59%][Progress:====================>         68%] [Cov:====================>              59%][Progress:====================>         69%] [Cov:====================>              59%][Progress:====================>         69%] [Cov:====================>              59%][Progress:====================>         69%] [Cov:====================>              59%][Progress:====================>         69%] [Cov:====================>              59%][Progress:====================>         69%] [Cov:====================>              59%][Progress:====================>         69%] [Cov:====================>              59%][Progress:====================>         69%] [Cov:====================>              59%][Progress:====================>         69%] [Cov:====================>              59%][Progress:====================>         69%] [Cov:====================>              59%][Progress:====================>         69%] [Cov:====================>              59%][Progress:====================>         69%] [Cov:====================>              59%][Progress:====================>         69%] [Cov:====================>              59%][Progress:====================>         69%] [Cov:====================>              59%][Progress:====================>         69%] [Cov:====================>              59%][Progress:====================>         69%] [Cov:====================>              59%][Progress:====================>         69%] [Cov:====================>              59%][Progress:====================>         69%] [Cov:====================>              59%][Progress:====================>         69%] [Cov:====================>              59%][Progress:=====================>        70%] [Cov:====================>              59%][Progress:=====================>        70%] [Cov:====================>              59%][Progress:=====================>        70%] [Cov:====================>              59%][Progress:=====================>        70%] [Cov:====================>              59%][Progress:=====================>        70%] [Cov:====================>              59%][Progress:=====================>        70%] [Cov:====================>              59%][Progress:=====================>        70%] [Cov:====================>              59%][Progress:=====================>        70%] [Cov:====================>              59%][Progress:=====================>        70%] [Cov:====================>              59%][Progress:=====================>        70%] [Cov:====================>              59%][Progress:=====================>        70%] [Cov:====================>              59%][Progress:=====================>        70%] [Cov:====================>              59%][Progress:=====================>        70%] [Cov:====================>              59%][Progress:=====================>        70%] [Cov:====================>              59%][Progress:=====================>        70%] [Cov:====================>              59%][Progress:=====================>        70%] [Cov:====================>              59%][Progress:=====================>        70%] [Cov:====================>              59%][Progress:=====================>        70%] [Cov:====================>              59%][Progress:=====================>        71%] [Cov:====================>              59%][Progress:=====================>        71%] [Cov:====================>              59%][Progress:=====================>        71%] [Cov:====================>              59%][Progress:=====================>        71%] [Cov:====================>              59%][Progress:=====================>        71%] [Cov:====================>              59%][Progress:=====================>        71%] [Cov:====================>              59%][Progress:=====================>        71%] [Cov:====================>              59%][Progress:=====================>        71%] [Cov:====================>              59%][Progress:=====================>        71%] [Cov:====================>              59%][Progress:=====================>        71%] [Cov:====================>              59%][Progress:=====================>        71%] [Cov:====================>              59%][Progress:=====================>        71%] [Cov:====================>              59%][Progress:=====================>        71%] [Cov:====================>              59%][Progress:=====================>        71%] [Cov:====================>              59%][Progress:=====================>        71%] [Cov:====================>              59%][Progress:=====================>        71%] [Cov:====================>              59%][Progress:=====================>        71%] [Cov:====================>              59%][Progress:=====================>        71%] [Cov:====================>              59%][Progress:=====================>        71%] [Cov:====================>              59%][Progress:=====================>        72%] [Cov:====================>              59%][Progress:=====================>        72%] [Cov:====================>              59%][Progress:=====================>        72%] [Cov:====================>              59%][Progress:=====================>        72%] [Cov:====================>              59%][Progress:=====================>        72%] [Cov:====================>              59%][Progress:=====================>        72%] [Cov:====================>              59%][Progress:=====================>        72%] [Cov:====================>              59%][Progress:=====================>        72%] [Cov:====================>              59%][Progress:=====================>        72%] [Cov:====================>              59%][Progress:=====================>        72%] [Cov:====================>              59%][Progress:=====================>        72%] [Cov:====================>              59%][Progress:=====================>        72%] [Cov:====================>              59%][Progress:=====================>        72%] [Cov:====================>              59%][Progress:=====================>        72%] [Cov:====================>              59%][Progress:=====================>        72%] [Cov:====================>              59%][Progress:=====================>        72%] [Cov:====================>              59%][Progress:=====================>        72%] [Cov:====================>              59%][Progress:=====================>        72%] [Cov:====================>              59%][Progress:=====================>        73%] [Cov:====================>              59%][Progress:=====================>        73%] [Cov:====================>              59%][Progress:=====================>        73%] [Cov:====================>              59%][Progress:=====================>        73%] [Cov:====================>              59%][Progress:=====================>        73%] [Cov:====================>              59%][Progress:=====================>        73%] [Cov:====================>              59%][Progress:=====================>        73%] [Cov:====================>              59%][Progress:=====================>        73%] [Cov:====================>              59%][Progress:=====================>        73%] [Cov:====================>              59%][Progress:=====================>        73%] [Cov:====================>              59%][Progress:=====================>        73%] [Cov:====================>              59%][Progress:=====================>        73%] [Cov:====================>              59%][Progress:=====================>        73%] [Cov:====================>              59%][Progress:=====================>        73%] [Cov:====================>              59%][Progress:=====================>        73%] [Cov:====================>              59%][Progress:=====================>        73%] [Cov:====================>              59%][Progress:=====================>        73%] [Cov:====================>              59%][Progress:======================>       74%] [Cov:====================>              59%][Progress:======================>       74%] [Cov:====================>              59%][Progress:======================>       74%] [Cov:====================>              59%][Progress:======================>       74%] [Cov:====================>              59%][Progress:======================>       74%] [Cov:====================>              59%][Progress:======================>       74%] [Cov:====================>              59%][Progress:======================>       74%] [Cov:====================>              59%][Progress:======================>       74%] [Cov:====================>              59%][Progress:======================>       74%] [Cov:====================>              59%][Progress:======================>       74%] [Cov:====================>              59%][Progress:======================>       74%] [Cov:====================>              59%][Progress:======================>       74%] [Cov:====================>              59%][Progress:======================>       74%] [Cov:====================>              59%][Progress:======================>       74%] [Cov:====================>              59%][Progress:======================>       74%] [Cov:====================>              59%][Progress:======================>       74%] [Cov:====================>              59%][Progress:======================>       74%] [Cov:====================>              59%][Progress:======================>       74%] [Cov:====================>              59%][Progress:======================>       75%] [Cov:====================>              59%][Progress:======================>       75%] [Cov:====================>              59%][Progress:======================>       75%] [Cov:====================>              59%][Progress:======================>       75%] [Cov:====================>              59%][Progress:======================>       75%] [Cov:====================>              59%][Progress:======================>       75%] [Cov:====================>              59%][Progress:======================>       75%] [Cov:====================>              59%][Progress:======================>       75%] [Cov:====================>              59%][Progress:======================>       75%] [Cov:====================>              59%][Progress:======================>       75%] [Cov:====================>              59%][Progress:======================>       75%] [Cov:====================>              59%][Progress:======================>       75%] [Cov:====================>              59%][Progress:======================>       75%] [Cov:====================>              59%][Progress:======================>       75%] [Cov:====================>              59%][Progress:======================>       75%] [Cov:====================>              59%][Progress:======================>       75%] [Cov:====================>              59%][Progress:======================>       75%] [Cov:====================>              59%][Progress:======================>       75%] [Cov:====================>              59%][Progress:======================>       76%] [Cov:====================>              59%][Progress:======================>       76%] [Cov:====================>              59%][Progress:======================>       76%] [Cov:====================>              59%][Progress:======================>       76%] [Cov:====================>              59%][Progress:======================>       76%] [Cov:====================>              59%][Progress:======================>       76%] [Cov:====================>              59%][Progress:======================>       76%] [Cov:====================>              59%][Progress:======================>       76%] [Cov:====================>              59%][Progress:======================>       76%] [Cov:====================>              59%][Progress:======================>       76%] [Cov:====================>              59%][Progress:======================>       76%] [Cov:====================>              59%][Progress:======================>       76%] [Cov:====================>              59%][Progress:======================>       76%] [Cov:====================>              59%][Progress:======================>       76%] [Cov:====================>              59%][Progress:======================>       76%] [Cov:====================>              59%][Progress:======================>       76%] [Cov:====================>              59%][Progress:======================>       76%] [Cov:====================>              59%][Progress:======================>       76%] [Cov:====================>              59%][Progress:======================>       76%] [Cov:====================>              59%][Progress:=======================>      77%] [Cov:====================>              59%][Progress:=======================>      77%] [Cov:====================>              59%][Progress:=======================>      77%] [Cov:====================>              59%][Progress:=======================>      77%] [Cov:====================>              59%][Progress:=======================>      77%] [Cov:====================>              59%][Progress:=======================>      77%] [Cov:====================>              59%][Progress:=======================>      77%] [Cov:====================>              59%][Progress:=======================>      77%] [Cov:====================>              59%][Progress:=======================>      77%] [Cov:====================>              59%][Progress:=======================>      77%] [Cov:====================>              59%][Progress:=======================>      77%] [Cov:====================>              59%][Progress:=======================>      77%] [Cov:====================>              59%][Progress:=======================>      77%] [Cov:====================>              59%][Progress:=======================>      77%] [Cov:====================>              59%][Progress:=======================>      77%] [Cov:====================>              59%][Progress:=======================>      77%] [Cov:====================>              59%][Progress:=======================>      77%] [Cov:====================>              59%][Progress:=======================>      78%] [Cov:====================>              59%][Progress:=======================>      78%] [Cov:====================>              59%][Progress:=======================>      78%] [Cov:====================>              59%][Progress:=======================>      78%] [Cov:====================>              59%][Progress:=======================>      78%] [Cov:====================>              59%][Progress:=======================>      78%] [Cov:====================>              59%][Progress:=======================>      78%] [Cov:====================>              59%][Progress:=======================>      78%] [Cov:====================>              59%][Progress:=======================>      78%] [Cov:====================>              59%][Progress:=======================>      78%] [Cov:====================>              59%][Progress:=======================>      78%] [Cov:====================>              59%][Progress:=======================>      78%] [Cov:====================>              59%][Progress:=======================>      78%] [Cov:====================>              59%][Progress:=======================>      78%] [Cov:====================>              59%][Progress:=======================>      78%] [Cov:====================>              59%][Progress:=======================>      78%] [Cov:====================>              59%][Progress:=======================>      79%] [Cov:====================>              59%][Progress:=======================>      79%] [Cov:====================>              59%][Progress:=======================>      79%] [Cov:====================>              59%][Progress:=======================>      79%] [Cov:====================>              59%][Progress:=======================>      79%] [Cov:====================>              59%][Progress:=======================>      79%] [Cov:====================>              59%][Progress:=======================>      79%] [Cov:====================>              59%][Progress:=======================>      79%] [Cov:====================>              59%][Progress:=======================>      79%] [Cov:====================>              59%][Progress:=======================>      79%] [Cov:====================>              59%][Progress:=======================>      79%] [Cov:====================>              59%][Progress:=======================>      79%] [Cov:====================>              59%][Progress:========================>     80%] [Cov:====================>              59%][Progress:========================>     80%] [Cov:====================>              59%][Progress:========================>     80%] [Cov:====================>              59%][Progress:========================>     80%] [Cov:====================>              59%][Progress:========================>     80%] [Cov:====================>              59%][Progress:========================>     80%] [Cov:====================>              59%][Progress:========================>     80%] [Cov:====================>              59%][Progress:========================>     80%] [Cov:====================>              59%][Progress:========================>     80%] [Cov:====================>              59%][Progress:========================>     80%] [Cov:====================>              59%][Progress:========================>     80%] [Cov:====================>              59%][Progress:========================>     80%] [Cov:====================>              59%][Progress:========================>     81%] [Cov:====================>              59%][Progress:========================>     81%] [Cov:====================>              59%][Progress:========================>     81%] [Cov:====================>              59%][Progress:========================>     81%] [Cov:====================>              59%][Progress:========================>     81%] [Cov:====================>              59%][Progress:========================>     81%] [Cov:====================>              59%][Progress:========================>     81%] [Cov:====================>              59%][Progress:========================>     81%] [Cov:====================>              59%][Progress:========================>     81%] [Cov:====================>              59%][Progress:========================>     81%] [Cov:====================>              59%][Progress:========================>     81%] [Cov:====================>              59%][Progress:========================>     82%] [Cov:====================>              59%][Progress:========================>     82%] [Cov:====================>              59%][Progress:========================>     82%] [Cov:====================>              59%][Progress:========================>     82%] [Cov:====================>              59%][Progress:========================>     82%] [Cov:====================>              59%][Progress:========================>     82%] [Cov:====================>              59%][Progress:========================>     82%] [Cov:====================>              59%][Progress:========================>     82%] [Cov:====================>              59%][Progress:========================>     82%] [Cov:====================>              59%][Progress:========================>     82%] [Cov:====================>              59%][Progress:========================>     82%] [Cov:====================>              59%][Progress:========================>     82%] [Cov:====================>              59%][Progress:========================>     82%] [Cov:====================>              59%][Progress:========================>     83%] [Cov:====================>              59%][Progress:========================>     83%] [Cov:====================>              59%][Progress:========================>     83%] [Cov:====================>              59%][Progress:========================>     83%] [Cov:====================>              59%][Progress:========================>     83%] [Cov:====================>              59%][Progress:========================>     83%] [Cov:====================>              59%][Progress:========================>     83%] [Cov:====================>              59%][Progress:========================>     83%] [Cov:====================>              59%][Progress:========================>     83%] [Cov:====================>              59%][Progress:========================>     83%] [Cov:====================>              59%][Progress:========================>     83%] [Cov:====================>              59%][Progress:========================>     83%] [Cov:====================>              59%][Progress:========================>     83%] [Cov:====================>              59%][Progress:========================>     83%] [Cov:====================>              59%][Progress:========================>     83%] [Cov:====================>              59%][Progress:========================>     83%] [Cov:====================>              59%][Progress:========================>     83%] [Cov:====================>              59%][Progress:========================>     83%] [Cov:====================>              59%][Progress:========================>     83%] [Cov:====================>              59%][Progress:=========================>    84%] [Cov:====================>              59%][Progress:=========================>    84%] [Cov:====================>              59%][Progress:=========================>    84%] [Cov:====================>              59%][Progress:=========================>    84%] [Cov:====================>              59%][Progress:=========================>    84%] [Cov:====================>              59%][Progress:=========================>    84%] [Cov:====================>              59%][Progress:=========================>    84%] [Cov:====================>              59%][Progress:=========================>    84%] [Cov:====================>              59%][Progress:=========================>    84%] [Cov:====================>              59%][Progress:=========================>    84%] [Cov:====================>              59%][Progress:=========================>    84%] [Cov:====================>              59%][Progress:=========================>    84%] [Cov:====================>              59%][Progress:=========================>    84%] [Cov:====================>              59%][Progress:=========================>    84%] [Cov:====================>              59%][Progress:=========================>    84%] [Cov:====================>              59%][Progress:=========================>    84%] [Cov:====================>              59%][Progress:=========================>    85%] [Cov:====================>              59%][Progress:=========================>    85%] [Cov:====================>              59%][Progress:=========================>    85%] [Cov:====================>              59%][Progress:=========================>    85%] [Cov:====================>              59%][Progress:=========================>    85%] [Cov:====================>              59%][Progress:=========================>    85%] [Cov:====================>              59%][Progress:=========================>    85%] [Cov:====================>              59%][Progress:=========================>    85%] [Cov:====================>              59%][Progress:=========================>    85%] [Cov:====================>              59%][Progress:=========================>    85%] [Cov:====================>              59%][Progress:=========================>    85%] [Cov:====================>              59%][Progress:=========================>    85%] [Cov:====================>              59%][Progress:=========================>    85%] [Cov:====================>              59%][Progress:=========================>    85%] [Cov:====================>              59%][Progress:=========================>    85%] [Cov:====================>              59%][Progress:=========================>    85%] [Cov:====================>              59%][Progress:=========================>    86%] [Cov:====================>              59%][Progress:=========================>    86%] [Cov:====================>              59%][Progress:=========================>    86%] [Cov:====================>              59%][Progress:=========================>    86%] [Cov:====================>              59%][Progress:=========================>    86%] [Cov:====================>              59%][Progress:=========================>    86%] [Cov:====================>              59%][Progress:=========================>    86%] [Cov:====================>              59%][Progress:=========================>    86%] [Cov:====================>              59%][Progress:=========================>    86%] [Cov:====================>              59%][Progress:=========================>    86%] [Cov:====================>              59%][Progress:=========================>    86%] [Cov:====================>              59%][Progress:=========================>    86%] [Cov:====================>              59%][Progress:=========================>    86%] [Cov:====================>              59%][Progress:=========================>    86%] [Cov:====================>              59%][Progress:==========================>   87%] [Cov:====================>              59%][Progress:==========================>   87%] [Cov:====================>              59%][Progress:==========================>   87%] [Cov:====================>              59%][Progress:==========================>   87%] [Cov:====================>              59%][Progress:==========================>   87%] [Cov:====================>              59%][Progress:==========================>   87%] [Cov:====================>              59%][Progress:==========================>   87%] [Cov:====================>              59%][Progress:==========================>   87%] [Cov:====================>              59%][Progress:==========================>   87%] [Cov:====================>              59%][Progress:==========================>   87%] [Cov:====================>              59%][Progress:==========================>   87%] [Cov:====================>              59%][Progress:==========================>   87%] [Cov:====================>              59%][Progress:==========================>   87%] [Cov:====================>              59%][Progress:==========================>   87%] [Cov:====================>              59%][Progress:==========================>   88%] [Cov:====================>              59%][Progress:==========================>   88%] [Cov:====================>              59%][Progress:==========================>   88%] [Cov:====================>              59%][Progress:==========================>   88%] [Cov:====================>              59%][Progress:==========================>   88%] [Cov:====================>              59%][Progress:==========================>   88%] [Cov:====================>              59%][Progress:==========================>   88%] [Cov:====================>              59%][Progress:==========================>   88%] [Cov:====================>              59%][Progress:==========================>   88%] [Cov:====================>              59%][Progress:==========================>   88%] [Cov:====================>              59%][Progress:==========================>   88%] [Cov:====================>              59%][Progress:==========================>   88%] [Cov:====================>              59%][Progress:==========================>   89%] [Cov:====================>              59%][Progress:==========================>   89%] [Cov:====================>              59%][Progress:==========================>   89%] [Cov:====================>              59%][Progress:==========================>   89%] [Cov:====================>              59%][Progress:==========================>   89%] [Cov:====================>              59%][Progress:==========================>   89%] [Cov:====================>              59%][Progress:==========================>   89%] [Cov:====================>              59%][Progress:==========================>   89%] [Cov:====================>              59%][Progress:==========================>   89%] [Cov:====================>              59%][Progress:==========================>   89%] [Cov:====================>              59%][Progress:==========================>   89%] [Cov:====================>              59%][Progress:===========================>  90%] [Cov:====================>              59%][Progress:===========================>  90%] [Cov:====================>              59%][Progress:===========================>  90%] [Cov:====================>              59%][Progress:===========================>  90%] [Cov:====================>              59%][Progress:===========================>  90%] [Cov:====================>              59%][Progress:===========================>  90%] [Cov:====================>              59%][Progress:===========================>  90%] [Cov:====================>              59%][Progress:===========================>  90%] [Cov:====================>              59%][Progress:===========================>  90%] [Cov:=====================>             62%][Progress:===========================>  90%] [Cov:=====================>             62%][Progress:===========================>  90%] [Cov:=====================>             62%][Progress:===========================>  90%] [Cov:=====================>             62%][Progress:===========================>  90%] [Cov:=====================>             62%][Progress:===========================>  90%] [Cov:=====================>             62%][Progress:===========================>  90%] [Cov:=====================>             62%][Progress:===========================>  91%] [Cov:=====================>             62%][Progress:===========================>  91%] [Cov:=====================>             62%][Progress:===========================>  91%] [Cov:=====================>             62%][Progress:===========================>  91%] [Cov:=====================>             62%][Progress:===========================>  91%] [Cov:=====================>             62%][Progress:===========================>  91%] [Cov:=====================>             62%][Progress:===========================>  91%] [Cov:=====================>             62%][Progress:===========================>  91%] [Cov:=====================>             62%][Progress:===========================>  91%] [Cov:=====================>             62%][Progress:===========================>  91%] [Cov:=====================>             62%][Progress:===========================>  91%] [Cov:=====================>             62%][Progress:===========================>  91%] [Cov:=====================>             62%][Progress:===========================>  91%] [Cov:=====================>             62%][Progress:===========================>  91%] [Cov:=====================>             62%][Progress:===========================>  91%] [Cov:=====================>             62%][Progress:===========================>  91%] [Cov:=====================>             62%][Progress:===========================>  92%] [Cov:=====================>             62%][Progress:===========================>  92%] [Cov:=====================>             62%][Progress:===========================>  92%] [Cov:=====================>             62%][Progress:===========================>  92%] [Cov:=====================>             62%][Progress:===========================>  92%] [Cov:=====================>             62%][Progress:===========================>  92%] [Cov:=====================>             62%][Progress:===========================>  92%] [Cov:=====================>             62%][Progress:===========================>  92%] [Cov:=====================>             62%][Progress:===========================>  92%] [Cov:=====================>             62%][Progress:===========================>  92%] [Cov:=====================>             62%][Progress:===========================>  92%] [Cov:=====================>             62%][Progress:===========================>  92%] [Cov:=====================>             62%][Progress:===========================>  92%] [Cov:=====================>             62%][Progress:===========================>  92%] [Cov:=====================>             62%][Progress:===========================>  92%] [Cov:=====================>             62%][Progress:===========================>  92%] [Cov:=====================>             62%][Progress:===========================>  92%] [Cov:=====================>             62%][Progress:===========================>  92%] [Cov:=====================>             62%][Progress:===========================>  93%] [Cov:=====================>             62%][Progress:===========================>  93%] [Cov:=====================>             62%][Progress:===========================>  93%] [Cov:=====================>             62%][Progress:===========================>  93%] [Cov:=====================>             62%][Progress:===========================>  93%] [Cov:=====================>             62%][Progress:===========================>  93%] [Cov:=====================>             62%][Progress:===========================>  93%] [Cov:=====================>             62%][Progress:===========================>  93%] [Cov:=====================>             62%][Progress:===========================>  93%] [Cov:=====================>             62%][Progress:===========================>  93%] [Cov:=====================>             62%][Progress:===========================>  93%] [Cov:=====================>             62%][Progress:===========================>  93%] [Cov:=====================>             62%][Progress:===========================>  93%] [Cov:=====================>             62%][Progress:===========================>  93%] [Cov:=====================>             62%][Progress:===========================>  93%] [Cov:=====================>             62%][Progress:===========================>  93%] [Cov:=====================>             62%][Progress:===========================>  93%] [Cov:=====================>             62%][Progress:===========================>  93%] [Cov:=====================>             62%][Progress:============================> 94%] [Cov:=====================>             62%][Progress:============================> 94%] [Cov:=====================>             62%][Progress:============================> 94%] [Cov:=====================>             62%][Progress:============================> 94%] [Cov:=====================>             62%][Progress:============================> 94%] [Cov:=====================>             62%][Progress:============================> 94%] [Cov:=====================>             62%][Progress:============================> 94%] [Cov:=====================>             62%][Progress:============================> 94%] [Cov:=====================>             62%][Progress:============================> 94%] [Cov:=====================>             62%][Progress:============================> 94%] [Cov:=====================>             62%][Progress:============================> 94%] [Cov:=====================>             62%][Progress:============================> 94%] [Cov:=====================>             62%][Progress:============================> 94%] [Cov:=====================>             62%][Progress:============================> 94%] [Cov:=====================>             62%][Progress:============================> 94%] [Cov:=====================>             62%][Progress:============================> 94%] [Cov:=====================>             62%][Progress:============================> 94%] [Cov:=====================>             62%][Progress:============================> 94%] [Cov:=====================>             62%][Progress:============================> 95%] [Cov:=====================>             62%][Progress:============================> 95%] [Cov:=====================>             62%][Progress:============================> 95%] [Cov:=====================>             62%][Progress:============================> 95%] [Cov:=====================>             62%][Progress:============================> 95%] [Cov:=====================>             62%][Progress:============================> 95%] [Cov:=====================>             62%][Progress:============================> 95%] [Cov:=====================>             62%][Progress:============================> 95%] [Cov:=====================>             62%][Progress:============================> 95%] [Cov:=====================>             62%][Progress:============================> 95%] [Cov:=====================>             62%][Progress:============================> 95%] [Cov:=====================>             62%][Progress:============================> 95%] [Cov:=====================>             62%][Progress:============================> 95%] [Cov:=====================>             62%][Progress:============================> 95%] [Cov:=====================>             62%][Progress:============================> 95%] [Cov:=====================>             62%][Progress:============================> 95%] [Cov:=====================>             62%][Progress:============================> 95%] [Cov:=====================>             62%][Progress:============================> 96%] [Cov:=====================>             62%][Progress:============================> 96%] [Cov:=====================>             62%][Progress:============================> 96%] [Cov:=====================>             62%][Progress:============================> 96%] [Cov:=====================>             62%][Progress:============================> 96%] [Cov:=====================>             62%][Progress:============================> 96%] [Cov:=====================>             62%][Progress:============================> 96%] [Cov:=====================>             62%][Progress:============================> 96%] [Cov:=====================>             62%][Progress:============================> 96%] [Cov:=====================>             62%][Progress:============================> 96%] [Cov:=====================>             62%][Progress:============================> 96%] [Cov:=====================>             62%][Progress:============================> 96%] [Cov:=====================>             62%][Progress:============================> 96%] [Cov:=====================>             62%][Progress:============================> 96%] [Cov:=====================>             62%][Progress:============================> 96%] [Cov:=====================>             62%][Progress:============================> 96%] [Cov:=====================>             62%][Progress:============================> 96%] [Cov:=====================>             62%][Progress:=============================>97%] [Cov:=====================>             62%][Progress:=============================>97%] [Cov:=====================>             62%][Progress:=============================>97%] [Cov:=====================>             62%][Progress:=============================>97%] [Cov:=====================>             62%][Progress:=============================>97%] [Cov:=====================>             62%][Progress:=============================>97%] [Cov:=====================>             62%][Progress:=============================>97%] [Cov:=====================>             62%][Progress:=============================>97%] [Cov:=====================>             62%][Progress:=============================>97%] [Cov:=====================>             62%][Progress:=============================>97%] [Cov:=====================>             62%][Progress:=============================>97%] [Cov:=====================>             62%][Progress:=============================>97%] [Cov:=====================>             62%][Progress:=============================>97%] [Cov:=====================>             62%][Progress:=============================>97%] [Cov:=====================>             62%][Progress:=============================>97%] [Cov:=====================>             62%][Progress:=============================>97%] [Cov:=====================>             62%][Progress:=============================>97%] [Cov:=====================>             62%][Progress:=============================>98%] [Cov:=====================>             62%][Progress:=============================>98%] [Cov:=====================>             62%][Progress:=============================>98%] [Cov:=====================>             62%][Progress:=============================>98%] [Cov:=====================>             62%][Progress:=============================>98%] [Cov:=====================>             62%][Progress:=============================>98%] [Cov:=====================>             62%][Progress:=============================>98%] [Cov:=====================>             62%][Progress:=============================>98%] [Cov:=====================>             62%][Progress:=============================>98%] [Cov:=====================>             62%][Progress:=============================>98%] [Cov:=====================>             62%][Progress:=============================>98%] [Cov:=====================>             62%][Progress:=============================>98%] [Cov:=====================>             62%][Progress:=============================>98%] [Cov:=====================>             62%][Progress:=============================>98%] [Cov:=====================>             62%][Progress:=============================>98%] [Cov:=====================>             62%][Progress:=============================>98%] [Cov:=====================>             62%][Progress:=============================>99%] [Cov:=====================>             62%][Progress:=============================>99%] [Cov:=====================>             62%][Progress:=============================>99%] [Cov:=====================>             62%][Progress:=============================>99%] [Cov:=====================>             62%][Progress:=============================>99%] [Cov:=====================>             62%][Progress:=============================>99%] [Cov:=====================>             62%][Progress:=============================>99%] [Cov:=====================>             62%][Progress:=============================>99%] [Cov:=====================>             62%][Progress:=============================>99%] [Cov:=====================>             62%][Progress:=============================>99%] [Cov:=====================>             62%][Progress:=============================>99%] [Cov:=====================>             62%][Progress:=============================>99%] [Cov:=====================>             62%][Progress:=============================>99%] [Cov:=====================>             62%][Progress:=============================>99%] [Cov:=====================>             62%][Progress:=============================>99%] [Cov:=====================>             62%][Progress:=============================>99%] [Cov:=====================>             62%][Progress:=============================>99%] [Cov:=====================>             62%][Progress:==============================100%] [Cov:=====================>             62%][Progress:==============================100%] [Cov:=====================>             62%][Progress:==============================100%] [Cov:=====================>             62%][Progress:==============================100%] [Cov:=====================>             62%][Progress:==============================100%] [Cov:=====================>             62%][Progress:==============================100%] [Cov:=====================>             62%][Progress:==============================100%] [Cov:=====================>             62%][Progress:==============================100%] [Cov:=====================>             62%][Progress:==============================100%] [Cov:=====================>             62%][Progress:==============================100%] [Cov:=====================>             62%][Progress:==============================100%] [Cov:=====================>             62%][Progress:==============================100%] [Cov:=====================>             62%][Progress:==============================100%] [Cov:=====================>             62%][Progress:==============================100%] [Cov:=====================>             62%][Progress:==============================100%] [Cov:=====================>             62%][Progress:==============================100%] [Cov:=====================>             62%][Progress:==============================100%] [Cov:=====================>             62%][Progress:==============================100%] [Cov:=====================>             62%][Progress:==============================100%] [Cov:=====================>             62%]
* Search finished after 101s and 1572 generations, 500462 statements, best individual has fitness: 89.0
* Generated before the refinement 10 tests with total length 73
statement is: umd.cs.shop.JSState()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class umd.cs.shop.JSState
statement code is: JSState jSState = new JSState()
statement is: umd.cs.shop.JSPlan()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class umd.cs.shop.JSPlan
statement code is: JSPlan jSPlan = new JSPlan()
statement is: add(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean add = jSPlan.add((Object) arg0)
statement is: addElementsToState(Lumd/cs/shop/JSListLogicalAtoms;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: jSState.addElementsToState(arg0)
statement is: addElementsToState(Lumd/cs/shop/JSListLogicalAtoms;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: jSState.addElementsToState(arg0)
test data is: JSState jSState = new JSState();
JSPlan jSPlan = new JSPlan();
jSPlan.add((Object) jSState);
jSState.addElementsToState(jSPlan);
jSState.addElementsToState(jSPlan);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        JSState jSState = new JSState();
        jSState.setState("Running");
        JSPlan jSPlan = new JSPlan();
        jSPlan.setName("JUnit5 Test Plan");
        jSPlan.add(jSState);
        jSState.addElementsToState(jSPlan);
        jSState.addElementsToState(jSPlan);
    }
}
statement is: JSState jSState = new JSState(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: jSState.setState("Running"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: jSState.setState("Running") target is: jSState method is: setState(java.lang.String)
statement is: JSPlan jSPlan = new JSPlan(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: jSPlan.setName("JUnit5 Test Plan"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: jSPlan.setName("JUnit5 Test Plan") target is: jSPlan method is: setName(java.lang.String)
statement is: jSPlan.add(jSState), class spoon.support.reflect.code.CtInvocationImpl
invocation is: jSPlan.add(jSState) target is: jSPlan method is: add(JSState)
source statement: umd.cs.shop.JSPlan()V callee: VariableReference: Statement 1, type umd.cs.shop.JSPlanindex is: 1
Matched Method is: add(Ljava/lang/Object;)Z
statement is: jSState.addElementsToState(jSPlan), class spoon.support.reflect.code.CtInvocationImpl
invocation is: jSState.addElementsToState(jSPlan) target is: jSState method is: addElementsToState(JSPlan)
source statement: umd.cs.shop.JSState()V callee: VariableReference: Statement 0, type umd.cs.shop.JSStateindex is: 0
source statement: umd.cs.shop.JSState()V callee: VariableReference: Statement 0, type umd.cs.shop.JSStateindex is: 0
Matched Method is: addElementsToState(Lumd/cs/shop/JSListLogicalAtoms;)V
statement is: jSState.addElementsToState(jSPlan), class spoon.support.reflect.code.CtInvocationImpl
invocation is: jSState.addElementsToState(jSPlan) target is: jSState method is: addElementsToState(JSPlan)
source statement: umd.cs.shop.JSState()V callee: VariableReference: Statement 0, type umd.cs.shop.JSStateindex is: 0
source statement: umd.cs.shop.JSState()V callee: VariableReference: Statement 0, type umd.cs.shop.JSStateindex is: 0
Matched Method is: addElementsToState(Lumd/cs/shop/JSListLogicalAtoms;)V
TestCase is: JSState jSState = new JSState();
JSPlan jSPlan = new JSPlan();
jSPlan.add((Object) jSState);
jSState.addElementsToState(jSPlan);
jSState.addElementsToState(jSPlan);

statement is: umd.cs.shop.JSState()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class umd.cs.shop.JSState
statement code is: JSState jSState = new JSState()
statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("first")
statement is: java.io.StreamTokenizer(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StreamTokenizer
statement code is: StreamTokenizer streamTokenizer = new StreamTokenizer(arg0)
statement is: umd.cs.shop.JSTerm(Ljava/io/StreamTokenizer;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class umd.cs.shop.JSTerm
statement code is: JSTerm jSTerm = new JSTerm(arg0)
statement is: add(ILjava/lang/Object;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: jSState.add(0, (Object) arg1)
statement is: umd.cs.shop.JSSubstitution()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class umd.cs.shop.JSSubstitution
statement code is: JSSubstitution jSSubstitution = new JSSubstitution()
statement is: umd.cs.shop.JSListAxioms()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class umd.cs.shop.JSListAxioms
statement code is: JSListAxioms jSListAxioms = new JSListAxioms()
statement is: umd.cs.shop.JSListLogicalAtoms()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class umd.cs.shop.JSListLogicalAtoms
statement code is: JSListLogicalAtoms jSListLogicalAtoms = new JSListLogicalAtoms()
statement is: addElements(Lumd/cs/shop/JSListLogicalAtoms;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: jSListLogicalAtoms.addElements(arg0)
statement is: umd.cs.shop.JSPlan()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class umd.cs.shop.JSPlan
statement code is: JSPlan jSPlan = new JSPlan()
statement is: apply(Lumd/cs/shop/JSPlan;)Lumd/cs/shop/JSState; type is: class org.evosuite.testcase.statements.MethodStatement return type class umd.cs.shop.JSState
statement code is: JSState apply = jSState.apply(arg0)
statement is: satisfies(Lumd/cs/shop/JSListLogicalAtoms;Lumd/cs/shop/JSSubstitution;Lumd/cs/shop/JSListAxioms;)Lumd/cs/shop/JSSubstitution; type is: class org.evosuite.testcase.statements.MethodStatement return type class umd.cs.shop.JSSubstitution
statement code is: JSSubstitution satisfies = jSState.satisfies(arg0, arg1, arg2)
test data is: JSState jSState = new JSState();
StringReader stringReader = new StringReader("first");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
jSState.add(0, (Object) jSTerm);
JSSubstitution jSSubstitution = new JSSubstitution();
JSListAxioms jSListAxioms = new JSListAxioms();
JSListLogicalAtoms jSListLogicalAtoms = new JSListLogicalAtoms();
jSListLogicalAtoms.addElements(jSState);
JSPlan jSPlan = new JSPlan();
JSState apply = jSState.apply(jSPlan);
apply.satisfies(jSListLogicalAtoms, jSSubstitution, jSListAxioms);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        JSState jSState = new JSState();
        StringReader stringReader = new StringReader("first");
        StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
        JSTerm jSTerm = new JSTerm(streamTokenizer);
        jSState.add(0, ((Object) (jSTerm)));
        JSSubstitution jSSubstitution = new JSSubstitution();
        JSListAxioms jSListAxioms = new JSListAxioms();
        JSListLogicalAtoms jSListLogicalAtoms = new JSListLogicalAtoms();
        jSListLogicalAtoms.addElements(jSState);
        JSPlan jSPlan = new JSPlan();
        JSState apply = jSState.apply(jSPlan);
        apply.satisfies(jSListLogicalAtoms, jSSubstitution, jSListAxioms);
    }
}
statement is: JSState jSState = new JSState(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: StringReader stringReader = new StringReader("first"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JSTerm jSTerm = new JSTerm(streamTokenizer), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: jSState.add(0, ((Object) (jSTerm))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: jSState.add(0, ((Object) (jSTerm))) target is: jSState method is: add(int,java.lang.Object)
source statement: umd.cs.shop.JSState()V callee: VariableReference: Statement 0, type umd.cs.shop.JSStateindex is: 0
Matched Method is: add(ILjava/lang/Object;)V
statement is: JSSubstitution jSSubstitution = new JSSubstitution(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JSListAxioms jSListAxioms = new JSListAxioms(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JSListLogicalAtoms jSListLogicalAtoms = new JSListLogicalAtoms(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: jSListLogicalAtoms.addElements(jSState), class spoon.support.reflect.code.CtInvocationImpl
invocation is: jSListLogicalAtoms.addElements(jSState) target is: jSListLogicalAtoms method is: addElements(JSState)
source statement: umd.cs.shop.JSListLogicalAtoms()V callee: VariableReference: Statement 7, type umd.cs.shop.JSListLogicalAtomsindex is: 9
Matched Method is: addElements(Lumd/cs/shop/JSListLogicalAtoms;)V
statement is: JSPlan jSPlan = new JSPlan(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JSState apply = jSState.apply(jSPlan), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: jSState.apply(jSPlan) target is: jSState method is: apply(JSPlan)
source statement: umd.cs.shop.JSState()V callee: VariableReference: Statement 0, type umd.cs.shop.JSStateindex is: 0
Matched Method is: apply(Lumd/cs/shop/JSPlan;)Lumd/cs/shop/JSState;
statement is: apply.satisfies(jSListLogicalAtoms, jSSubstitution, jSListAxioms), class spoon.support.reflect.code.CtInvocationImpl
invocation is: apply.satisfies(jSListLogicalAtoms, jSSubstitution, jSListAxioms) target is: apply method is: satisfies(JSListLogicalAtoms,JSSubstitution,JSListAxioms)
source statement: apply(Lumd/cs/shop/JSPlan;)Lumd/cs/shop/JSState; callee: VariableReference: Statement 10, type umd.cs.shop.JSStateindex is: 12
Matched Method is: satisfies(Lumd/cs/shop/JSListLogicalAtoms;Lumd/cs/shop/JSSubstitution;Lumd/cs/shop/JSListAxioms;)Lumd/cs/shop/JSSubstitution;
TestCase is: JSState jSState = new JSState();
String string = "first";
StringReader stringReader = new StringReader(string);
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
int _int = 0;
jSState.add(_int, (Object) jSTerm);
JSSubstitution jSSubstitution = new JSSubstitution();
JSListAxioms jSListAxioms = new JSListAxioms();
JSListLogicalAtoms jSListLogicalAtoms = new JSListLogicalAtoms();
((JSListLogicalAtoms) jSSubstitution).addElements(jSState);
JSPlan jSPlan = new JSPlan();
jSState.apply(jSPlan);
((JSState) _void).satisfies(jSListLogicalAtoms, jSSubstitution, jSListAxioms);

statement is: umd.cs.shop.JSState()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class umd.cs.shop.JSState
statement code is: JSState jSState = new JSState()
statement is: umd.cs.shop.JSSubstitution()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class umd.cs.shop.JSSubstitution
statement code is: JSSubstitution jSSubstitution = new JSSubstitution()
statement is: umd.cs.shop.JSListAxioms()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class umd.cs.shop.JSListAxioms
statement code is: JSListAxioms jSListAxioms = new JSListAxioms()
statement is: umd.cs.shop.JSPlan()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class umd.cs.shop.JSPlan
statement code is: JSPlan jSPlan = new JSPlan()
statement is: satisfiesAll(Lumd/cs/shop/JSListLogicalAtoms;Lumd/cs/shop/JSSubstitution;Lumd/cs/shop/JSListAxioms;)Lumd/cs/shop/JSListSubstitution; type is: class org.evosuite.testcase.statements.MethodStatement return type class umd.cs.shop.JSListSubstitution
statement code is: JSListSubstitution satisfiesAll = jSState.satisfiesAll(arg0, arg1, arg2)
test data is: JSState jSState = new JSState();
JSSubstitution jSSubstitution = new JSSubstitution();
JSListAxioms jSListAxioms = new JSListAxioms();
JSPlan jSPlan = new JSPlan();
jSState.satisfiesAll(jSPlan, jSSubstitution, jSListAxioms);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        jSState.satisfiesAll(jSPlan, jSSubstitution, jSListAxioms);
        // Improved test data:
        // 1. Use more descriptive and representative values for the variables
        JSState state = new JSState();
        JSSubstitution substitution = new JSSubstitution();
        JSListAxioms listAxioms = new JSListAxioms();
        JSPlan plan = new JSPlan();
        state.satisfiesAll(plan, substitution, listAxioms);
        // 2. Use more representative examples for the primitive values
        int number1 = 5;
        double double1 = 3.14;
        String string1 = "Hello";
        char character1 = 'a';
        boolean boolean1 = true;
        // 3. Use more representative examples for the String values
        String string2 = "World";
        String string3 = "Goodbye";
    }
}
statement is: jSState.satisfiesAll(jSPlan, jSSubstitution, jSListAxioms), class spoon.support.reflect.code.CtInvocationImpl
invocation is: jSState.satisfiesAll(jSPlan, jSSubstitution, jSListAxioms) target is: jSState method is: satisfiesAll()
statement is: // Improved test data:
// 1. Use more descriptive and representative values for the variables
JSState state = new JSState(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JSSubstitution substitution = new JSSubstitution(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JSListAxioms listAxioms = new JSListAxioms(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JSPlan plan = new JSPlan(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: state.satisfiesAll(plan, substitution, listAxioms), class spoon.support.reflect.code.CtInvocationImpl
invocation is: state.satisfiesAll(plan, substitution, listAxioms) target is: state method is: satisfiesAll(JSPlan,JSSubstitution,JSListAxioms)
source statement: umd.cs.shop.JSState()V callee: VariableReference: Statement 0, type umd.cs.shop.JSStateindex is: 0
Matched Method is: satisfiesAll(Lumd/cs/shop/JSListLogicalAtoms;Lumd/cs/shop/JSSubstitution;Lumd/cs/shop/JSListAxioms;)Lumd/cs/shop/JSListSubstitution;
statement is: // 2. Use more representative examples for the primitive values
int number1 = 5, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: double double1 = 3.14, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String string1 = "Hello", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: char character1 = 'a', class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: boolean boolean1 = true, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: // 3. Use more representative examples for the String values
String string2 = "World", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String string3 = "Goodbye", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
* this is vulnerable: int _int = 5
* this is vulnerable: double _double = 3.14
* this is vulnerable: String string = "Hello"
* this is vulnerable: char _char = 'a'
* this is vulnerable: boolean _boolean = true
* this is vulnerable: String string = "World"
* this is vulnerable: String string = "Goodbye"
TestCase is: JSState jSState = new JSState();
JSSubstitution jSSubstitution = new JSSubstitution();
JSListAxioms jSListAxioms = new JSListAxioms();
JSPlan jSPlan = new JSPlan();
jSState.satisfiesAll(jSPlan, jSSubstitution, jSListAxioms);
int _int = 5;
double _double = 3.14;
String string = "Hello";
char _char = 'a';
boolean _boolean = true;
String string = "World";
String string = "Goodbye";

statement is: umd.cs.shop.JSState()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class umd.cs.shop.JSState
statement code is: JSState jSState = new JSState()
statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("umd/cs;.sho.SatL%")
statement is: java.io.StreamTokenizer(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StreamTokenizer
statement code is: StreamTokenizer streamTokenizer = new StreamTokenizer(arg0)
statement is: umd.cs.shop.JSTerm(Ljava/io/StreamTokenizer;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class umd.cs.shop.JSTerm
statement code is: JSTerm jSTerm = new JSTerm(arg0)
statement is: org.evosuite.testcase.statements.AssignmentStatement@41c40703 type is: class org.evosuite.testcase.statements.AssignmentStatement return type int
statement code is: JSJshopVars.flagLevel = 2757
statement is: umd.cs.shop.JSSubstitution()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class umd.cs.shop.JSSubstitution
statement code is: JSSubstitution jSSubstitution = new JSSubstitution()
statement is: satisfiesTAm(Lumd/cs/shop/JSPredicateForm;Lumd/cs/shop/JSSubstitution;)Lumd/cs/shop/JSListSubstitution; type is: class org.evosuite.testcase.statements.MethodStatement return type class umd.cs.shop.JSListSubstitution
statement code is: JSListSubstitution satisfiesTAm = jSState.satisfiesTAm(arg0, arg1)
test data is: JSState jSState = new JSState();
StringReader stringReader = new StringReader("umd/cs;.sho.SatL%");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
JSJshopVars.flagLevel = 2757;
JSSubstitution jSSubstitution = new JSSubstitution();
jSState.satisfiesTAm(jSTerm, jSSubstitution);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        JSState jSState = new JSState();
        StringReader stringReader = new StringReader("umd/cs;.sho.SatL%");
        StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
        JSTerm jSTerm = new JSTerm(streamTokenizer);
        JSJshopVars.flagLevel = 1024;
        JSSubstitution jSSubstitution = new JSSubstitution();
        jSState.satisfiesTAm(jSTerm, jSSubstitution);
    }
}
statement is: JSState jSState = new JSState(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: StringReader stringReader = new StringReader("umd/cs;.sho.SatL%"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JSTerm jSTerm = new JSTerm(streamTokenizer), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JSJshopVars.flagLevel = 1024, class spoon.support.reflect.code.CtAssignmentImpl
statement is: JSSubstitution jSSubstitution = new JSSubstitution(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: jSState.satisfiesTAm(jSTerm, jSSubstitution), class spoon.support.reflect.code.CtInvocationImpl
invocation is: jSState.satisfiesTAm(jSTerm, jSSubstitution) target is: jSState method is: satisfiesTAm(JSTerm,JSSubstitution)
source statement: umd.cs.shop.JSState()V callee: VariableReference: Statement 0, type umd.cs.shop.JSStateindex is: 0
Matched Method is: satisfiesTAm(Lumd/cs/shop/JSPredicateForm;Lumd/cs/shop/JSSubstitution;)Lumd/cs/shop/JSListSubstitution;
TestCase is: JSState jSState = new JSState();
String string = "umd/cs;.sho.SatL%";
StringReader stringReader = new StringReader(string);
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
JSSubstitution jSSubstitution = new JSSubstitution();
jSState.satisfiesTAm(jSTerm, jSSubstitution);

statement is: umd.cs.shop.JSState()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class umd.cs.shop.JSState
statement code is: JSState jSState = new JSState()
statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("first")
statement is: java.io.StreamTokenizer(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StreamTokenizer
statement code is: StreamTokenizer streamTokenizer = new StreamTokenizer(arg0)
statement is: umd.cs.shop.JSTerm(Ljava/io/StreamTokenizer;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class umd.cs.shop.JSTerm
statement code is: JSTerm jSTerm = new JSTerm(arg0)
statement is: add(ILjava/lang/Object;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: jSState.add(0, (Object) arg1)
statement is: umd.cs.shop.JSSubstitution()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class umd.cs.shop.JSSubstitution
statement code is: JSSubstitution jSSubstitution = new JSSubstitution()
statement is: umd.cs.shop.JSListAxioms()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class umd.cs.shop.JSListAxioms
statement code is: JSListAxioms jSListAxioms = new JSListAxioms()
statement is: umd.cs.shop.JSListLogicalAtoms()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class umd.cs.shop.JSListLogicalAtoms
statement code is: JSListLogicalAtoms jSListLogicalAtoms = new JSListLogicalAtoms()
statement is: addElements(Lumd/cs/shop/JSListLogicalAtoms;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: jSListLogicalAtoms.addElements(arg0)
statement is: satisfies(Lumd/cs/shop/JSListLogicalAtoms;Lumd/cs/shop/JSSubstitution;Lumd/cs/shop/JSListAxioms;)Lumd/cs/shop/JSSubstitution; type is: class org.evosuite.testcase.statements.MethodStatement return type class umd.cs.shop.JSSubstitution
statement code is: JSSubstitution satisfies = jSState.satisfies(arg0, arg1, arg2)
test data is: JSState jSState = new JSState();
StringReader stringReader = new StringReader("first");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
jSState.add(0, (Object) jSTerm);
JSSubstitution jSSubstitution = new JSSubstitution();
JSListAxioms jSListAxioms = new JSListAxioms();
JSListLogicalAtoms jSListLogicalAtoms = new JSListLogicalAtoms();
jSListLogicalAtoms.addElements(jSState);
jSState.satisfies(jSListLogicalAtoms, jSSubstitution, jSListAxioms);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        JSState jSState = new JSState();
        StringReader stringReader = new StringReader("John");
        StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
        JSTerm jSTerm = new JSTerm(streamTokenizer);
        jSState.add(0, ((Object) (jSTerm)));
        JSSubstitution jSSubstitution = new JSSubstitution();
        JSListAxioms jSListAxioms = new JSListAxioms();
        JSListLogicalAtoms jSListLogicalAtoms = new JSListLogicalAtoms();
        jSListLogicalAtoms.addElements(jSState);
        jSState.satisfies(jSListLogicalAtoms, jSSubstitution, jSListAxioms);
    }
}
statement is: JSState jSState = new JSState(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: StringReader stringReader = new StringReader("John"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JSTerm jSTerm = new JSTerm(streamTokenizer), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: jSState.add(0, ((Object) (jSTerm))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: jSState.add(0, ((Object) (jSTerm))) target is: jSState method is: add(int,java.lang.Object)
source statement: umd.cs.shop.JSState()V callee: VariableReference: Statement 0, type umd.cs.shop.JSStateindex is: 0
Matched Method is: add(ILjava/lang/Object;)V
statement is: JSSubstitution jSSubstitution = new JSSubstitution(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JSListAxioms jSListAxioms = new JSListAxioms(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JSListLogicalAtoms jSListLogicalAtoms = new JSListLogicalAtoms(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: jSListLogicalAtoms.addElements(jSState), class spoon.support.reflect.code.CtInvocationImpl
invocation is: jSListLogicalAtoms.addElements(jSState) target is: jSListLogicalAtoms method is: addElements(JSState)
source statement: umd.cs.shop.JSListLogicalAtoms()V callee: VariableReference: Statement 7, type umd.cs.shop.JSListLogicalAtomsindex is: 9
Matched Method is: addElements(Lumd/cs/shop/JSListLogicalAtoms;)V
statement is: jSState.satisfies(jSListLogicalAtoms, jSSubstitution, jSListAxioms), class spoon.support.reflect.code.CtInvocationImpl
invocation is: jSState.satisfies(jSListLogicalAtoms, jSSubstitution, jSListAxioms) target is: jSState method is: satisfies(JSListLogicalAtoms,JSSubstitution,JSListAxioms)
source statement: umd.cs.shop.JSState()V callee: VariableReference: Statement 0, type umd.cs.shop.JSStateindex is: 0
Matched Method is: satisfies(Lumd/cs/shop/JSListLogicalAtoms;Lumd/cs/shop/JSSubstitution;Lumd/cs/shop/JSListAxioms;)Lumd/cs/shop/JSSubstitution;
TestCase is: JSState jSState = new JSState();
String string = "John";
StringReader stringReader = new StringReader(string);
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
int _int = 0;
jSState.add(_int, (Object) jSTerm);
JSSubstitution jSSubstitution = new JSSubstitution();
JSListAxioms jSListAxioms = new JSListAxioms();
JSListLogicalAtoms jSListLogicalAtoms = new JSListLogicalAtoms();
((JSListLogicalAtoms) jSSubstitution).addElements(jSState);
jSState.satisfies(jSListLogicalAtoms, jSSubstitution, jSListAxioms);

statement is: umd.cs.shop.JSState()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class umd.cs.shop.JSState
statement code is: JSState jSState = new JSState()
statement is: umd.cs.shop.JSTerm()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class umd.cs.shop.JSTerm
statement code is: JSTerm jSTerm = new JSTerm()
statement is: add(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean add = jSTerm.add((Object) arg0)
statement is: add(ILjava/lang/Object;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: jSState.add(0, (Object) arg1)
statement is: umd.cs.shop.JSSubstitution()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class umd.cs.shop.JSSubstitution
statement code is: JSSubstitution jSSubstitution = new JSSubstitution()
statement is: umd.cs.shop.JSTerm()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class umd.cs.shop.JSTerm
statement code is: JSTerm jSTerm = new JSTerm()
statement is: satisfiesTAm(Lumd/cs/shop/JSPredicateForm;Lumd/cs/shop/JSSubstitution;)Lumd/cs/shop/JSListSubstitution; type is: class org.evosuite.testcase.statements.MethodStatement return type class umd.cs.shop.JSListSubstitution
statement code is: JSListSubstitution satisfiesTAm = jSState.satisfiesTAm(arg0, arg1)
test data is: JSState jSState = new JSState();
JSTerm jSTerm = new JSTerm();
jSTerm.add((Object) jSState);
jSState.add(0, (Object) jSTerm);
JSSubstitution jSSubstitution = new JSSubstitution();
JSTerm jSTerm = new JSTerm();
jSState.satisfiesTAm(jSTerm, jSSubstitution);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        JSState jSState = new JSState();
        JSTerm jSTerm = new JSTerm();
        // Add a term with a variable value to the state
        jSTerm.add(((Object) ("x")));
        jSState.add(0, ((Object) (jSTerm)));
        // Add a substitution that maps a variable to a constant value
        JSSubstitution jSSubstitution = new JSSubstitution();
        JSTerm jSTerm = new JSTerm();
        jSTerm.add(((Object) ("x")));
        jSSubstitution.put("x", ((Object) (5)));
        jSState.satisfiesTAm(jSTerm, jSSubstitution);
    }
}
statement is: JSState jSState = new JSState(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JSTerm jSTerm = new JSTerm(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: // Add a term with a variable value to the state
jSTerm.add(((Object) ("x"))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Add a term with a variable value to the state
jSTerm.add(((Object) ("x"))) target is: jSTerm method is: add(java.lang.Object)
source statement: umd.cs.shop.JSTerm()V callee: VariableReference: Statement 1, type umd.cs.shop.JSTermindex is: 1
Matched Method is: add(Ljava/lang/Object;)Z
statement is: jSState.add(0, ((Object) (jSTerm))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: jSState.add(0, ((Object) (jSTerm))) target is: jSState method is: add(int,java.lang.Object)
source statement: umd.cs.shop.JSState()V callee: VariableReference: Statement 0, type umd.cs.shop.JSStateindex is: 0
Matched Method is: add(ILjava/lang/Object;)V
statement is: // Add a substitution that maps a variable to a constant value
JSSubstitution jSSubstitution = new JSSubstitution(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JSTerm jSTerm = new JSTerm(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: jSTerm.add(((Object) ("x"))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: jSTerm.add(((Object) ("x"))) target is: jSTerm method is: add(java.lang.Object)
source statement: umd.cs.shop.JSTerm()V callee: VariableReference: Statement 1, type umd.cs.shop.JSTermindex is: 7
Matched Method is: add(Ljava/lang/Object;)Z
statement is: jSSubstitution.put("x", ((Object) (5))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: jSSubstitution.put("x", ((Object) (5))) target is: jSSubstitution method is: put(java.lang.String,java.lang.Object)
statement is: jSState.satisfiesTAm(jSTerm, jSSubstitution), class spoon.support.reflect.code.CtInvocationImpl
invocation is: jSState.satisfiesTAm(jSTerm, jSSubstitution) target is: jSState method is: satisfiesTAm(JSTerm,JSSubstitution)
source statement: umd.cs.shop.JSState()V callee: VariableReference: Statement 0, type umd.cs.shop.JSStateindex is: 0
Matched Method is: satisfiesTAm(Lumd/cs/shop/JSPredicateForm;Lumd/cs/shop/JSSubstitution;)Lumd/cs/shop/JSListSubstitution;
TestCase is: JSState jSState = new JSState();
JSTerm jSTerm = new JSTerm();
String string = "x";
jSTerm.add((Object) string);
int _int = 0;
jSState.add(_int, (Object) jSTerm);
JSSubstitution jSSubstitution = new JSSubstitution();
JSTerm jSTerm = new JSTerm();
String string = "x";
jSTerm.add((Object) string);
jSState.satisfiesTAm(jSTerm, jSSubstitution);

statement is: umd.cs.shop.JSState()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class umd.cs.shop.JSState
statement code is: JSState jSState = new JSState()
statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("umd/cs;.sho.SatL%")
statement is: java.io.StreamTokenizer(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StreamTokenizer
statement code is: StreamTokenizer streamTokenizer = new StreamTokenizer(arg0)
statement is: umd.cs.shop.JSTerm(Ljava/io/StreamTokenizer;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class umd.cs.shop.JSTerm
statement code is: JSTerm jSTerm = new JSTerm(arg0)
statement is: org.evosuite.testcase.statements.AssignmentStatement@afa09f9d type is: class org.evosuite.testcase.statements.AssignmentStatement return type int
statement code is: JSJshopVars.flagLevel = 2757
statement is: add(ILjava/lang/Object;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: jSState.add(0, (Object) arg1)
statement is: umd.cs.shop.JSSubstitution()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class umd.cs.shop.JSSubstitution
statement code is: JSSubstitution jSSubstitution = new JSSubstitution()
statement is: satisfiesTAm(Lumd/cs/shop/JSPredicateForm;Lumd/cs/shop/JSSubstitution;)Lumd/cs/shop/JSListSubstitution; type is: class org.evosuite.testcase.statements.MethodStatement return type class umd.cs.shop.JSListSubstitution
statement code is: JSListSubstitution satisfiesTAm = jSState.satisfiesTAm(arg0, arg1)
test data is: JSState jSState = new JSState();
StringReader stringReader = new StringReader("umd/cs;.sho.SatL%");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
JSJshopVars.flagLevel = 2757;
jSState.add(0, (Object) jSTerm);
JSSubstitution jSSubstitution = new JSSubstitution();
jSState.satisfiesTAm(jSTerm, jSSubstitution);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        JSState jSState = new JSState();
        StringReader stringReader = new StringReader("umd/cs;.sho.SatL%");
        StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
        JSTerm jSTerm = new JSTerm(streamTokenizer);
        JSJshopVars.flagLevel = 2757;
        jSState.add(0, ((Object) (jSTerm)));
        JSSubstitution jSSubstitution = new JSSubstitution();
        jSState.satisfiesTAm(jSTerm, jSSubstitution);
    }
}
statement is: JSState jSState = new JSState(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: StringReader stringReader = new StringReader("umd/cs;.sho.SatL%"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JSTerm jSTerm = new JSTerm(streamTokenizer), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JSJshopVars.flagLevel = 2757, class spoon.support.reflect.code.CtAssignmentImpl
statement is: jSState.add(0, ((Object) (jSTerm))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: jSState.add(0, ((Object) (jSTerm))) target is: jSState method is: add(int,java.lang.Object)
source statement: umd.cs.shop.JSState()V callee: VariableReference: Statement 0, type umd.cs.shop.JSStateindex is: 0
Matched Method is: add(ILjava/lang/Object;)V
statement is: JSSubstitution jSSubstitution = new JSSubstitution(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: jSState.satisfiesTAm(jSTerm, jSSubstitution), class spoon.support.reflect.code.CtInvocationImpl
invocation is: jSState.satisfiesTAm(jSTerm, jSSubstitution) target is: jSState method is: satisfiesTAm(JSTerm,JSSubstitution)
source statement: umd.cs.shop.JSState()V callee: VariableReference: Statement 0, type umd.cs.shop.JSStateindex is: 0
Matched Method is: satisfiesTAm(Lumd/cs/shop/JSPredicateForm;Lumd/cs/shop/JSSubstitution;)Lumd/cs/shop/JSListSubstitution;
TestCase is: JSState jSState = new JSState();
String string = "umd/cs;.sho.SatL%";
StringReader stringReader = new StringReader(string);
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
int _int = 0;
jSState.add(_int, (Object) jSTerm);
JSSubstitution jSSubstitution = new JSSubstitution();
jSState.satisfiesTAm(jSTerm, jSSubstitution);

statement is: umd.cs.shop.JSState()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class umd.cs.shop.JSState
statement code is: JSState jSState = new JSState()
statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("first")
statement is: java.io.StreamTokenizer(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StreamTokenizer
statement code is: StreamTokenizer streamTokenizer = new StreamTokenizer(arg0)
statement is: umd.cs.shop.JSTerm(Ljava/io/StreamTokenizer;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class umd.cs.shop.JSTerm
statement code is: JSTerm jSTerm = new JSTerm(arg0)
statement is: add(ILjava/lang/Object;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: jSState.add(0, (Object) arg1)
statement is: umd.cs.shop.JSSubstitution()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class umd.cs.shop.JSSubstitution
statement code is: JSSubstitution jSSubstitution = new JSSubstitution()
statement is: satisfiesTAm(Lumd/cs/shop/JSPredicateForm;Lumd/cs/shop/JSSubstitution;)Lumd/cs/shop/JSListSubstitution; type is: class org.evosuite.testcase.statements.MethodStatement return type class umd.cs.shop.JSListSubstitution
statement code is: JSListSubstitution satisfiesTAm = jSState.satisfiesTAm(arg0, arg1)
test data is: JSState jSState = new JSState();
StringReader stringReader = new StringReader("first");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
jSState.add(0, (Object) jSTerm);
JSSubstitution jSSubstitution = new JSSubstitution();
jSState.satisfiesTAm(jSTerm, jSSubstitution);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        JSState jSState = new JSState();
        StringReader stringReader = new StringReader("5 + 2 * 3");
        StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
        JSTerm jSTerm = new JSTerm(streamTokenizer);
        jSState.add(0, ((Object) (jSTerm)));
        JSSubstitution jSSubstitution = new JSSubstitution();
        jSState.satisfiesTAm(jSTerm, jSSubstitution);
    }
}
statement is: JSState jSState = new JSState(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: StringReader stringReader = new StringReader("5 + 2 * 3"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JSTerm jSTerm = new JSTerm(streamTokenizer), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: jSState.add(0, ((Object) (jSTerm))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: jSState.add(0, ((Object) (jSTerm))) target is: jSState method is: add(int,java.lang.Object)
source statement: umd.cs.shop.JSState()V callee: VariableReference: Statement 0, type umd.cs.shop.JSStateindex is: 0
Matched Method is: add(ILjava/lang/Object;)V
statement is: JSSubstitution jSSubstitution = new JSSubstitution(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: jSState.satisfiesTAm(jSTerm, jSSubstitution), class spoon.support.reflect.code.CtInvocationImpl
invocation is: jSState.satisfiesTAm(jSTerm, jSSubstitution) target is: jSState method is: satisfiesTAm(JSTerm,JSSubstitution)
source statement: umd.cs.shop.JSState()V callee: VariableReference: Statement 0, type umd.cs.shop.JSStateindex is: 0
Matched Method is: satisfiesTAm(Lumd/cs/shop/JSPredicateForm;Lumd/cs/shop/JSSubstitution;)Lumd/cs/shop/JSListSubstitution;
TestCase is: JSState jSState = new JSState();
String string = "5 + 2 * 3";
StringReader stringReader = new StringReader(string);
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
int _int = 0;
jSState.add(_int, (Object) jSTerm);
JSSubstitution jSSubstitution = new JSSubstitution();
jSState.satisfiesTAm(jSTerm, jSSubstitution);

statement is: umd.cs.shop.JSState()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class umd.cs.shop.JSState
statement code is: JSState jSState = new JSState()
statement is: umd.cs.shop.JSListAxioms()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class umd.cs.shop.JSListAxioms
statement code is: JSListAxioms jSListAxioms = new JSListAxioms()
statement is: umd.cs.shop.JSSubstitution()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class umd.cs.shop.JSSubstitution
statement code is: JSSubstitution jSSubstitution = new JSSubstitution()
statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("?`NQwcd}kY`c87+{")
statement is: java.io.StreamTokenizer(Ljava/io/Reader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StreamTokenizer
statement code is: StreamTokenizer streamTokenizer = new StreamTokenizer(arg0)
statement is: umd.cs.shop.JSState(Ljava/io/StreamTokenizer;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class umd.cs.shop.JSState
statement code is: JSState jSState = new JSState(arg0)
statement is: satisfiesAll(Lumd/cs/shop/JSListLogicalAtoms;Lumd/cs/shop/JSSubstitution;Lumd/cs/shop/JSListAxioms;)Lumd/cs/shop/JSListSubstitution; type is: class org.evosuite.testcase.statements.MethodStatement return type class umd.cs.shop.JSListSubstitution
statement code is: JSListSubstitution satisfiesAll = jSState.satisfiesAll(arg0, arg1, arg2)
test data is: JSState jSState = new JSState();
JSListAxioms jSListAxioms = new JSListAxioms();
JSSubstitution jSSubstitution = new JSSubstitution();
StringReader stringReader = new StringReader("?`NQwcd}kY`c87+{");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSState jSState = new JSState(streamTokenizer);
jSState.satisfiesAll(jSState, jSSubstitution, jSListAxioms);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        JSState jSState = new JSState();
        JSListAxioms jSListAxioms = new JSListAxioms();
        JSSubstitution jSSubstitution = new JSSubstitution();
        StringReader stringReader = new StringReader("Hello World");
        StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
        JSState jSState = new JSState(streamTokenizer);
        jSState.satisfiesAll(jSState, jSSubstitution, jSListAxioms);
    }
}
statement is: JSState jSState = new JSState(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JSListAxioms jSListAxioms = new JSListAxioms(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JSSubstitution jSSubstitution = new JSSubstitution(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: StringReader stringReader = new StringReader("Hello World"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JSState jSState = new JSState(streamTokenizer), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: jSState.satisfiesAll(jSState, jSSubstitution, jSListAxioms), class spoon.support.reflect.code.CtInvocationImpl
invocation is: jSState.satisfiesAll(jSState, jSSubstitution, jSListAxioms) target is: jSState method is: satisfiesAll(JSState,JSSubstitution,JSListAxioms)
source statement: umd.cs.shop.JSState()V callee: VariableReference: Statement 0, type umd.cs.shop.JSStateindex is: 0
Matched Method is: satisfiesAll(Lumd/cs/shop/JSListLogicalAtoms;Lumd/cs/shop/JSSubstitution;Lumd/cs/shop/JSListAxioms;)Lumd/cs/shop/JSListSubstitution;
TestCase is: JSState jSState = new JSState();
JSListAxioms jSListAxioms = new JSListAxioms();
JSSubstitution jSSubstitution = new JSSubstitution();
String string = "Hello World";
StringReader stringReader = new StringReader(string);
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSState jSState = new JSState(streamTokenizer);
jSState.satisfiesAll(jSState, jSSubstitution, jSListAxioms);

statement is: umd.cs.shop.JSState()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class umd.cs.shop.JSState
statement code is: JSState jSState = new JSState()
statement is: umd.cs.shop.JSPlan()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class umd.cs.shop.JSPlan
statement code is: JSPlan jSPlan = new JSPlan()
statement is: umd.cs.shop.JSOperator()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class umd.cs.shop.JSOperator
statement code is: JSOperator jSOperator = new JSOperator()
statement is: umd.cs.shop.JSSubstitution()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class umd.cs.shop.JSSubstitution
statement code is: JSSubstitution jSSubstitution = new JSSubstitution()
statement is: applyOp(Lumd/cs/shop/JSOperator;Lumd/cs/shop/JSSubstitution;Lumd/cs/shop/JSListLogicalAtoms;Lumd/cs/shop/JSListLogicalAtoms;)Lumd/cs/shop/JSTState; type is: class org.evosuite.testcase.statements.MethodStatement return type class umd.cs.shop.JSTState
statement code is: JSTState applyOp = arg2.applyOp(arg0, arg1, arg2, arg3)
test data is: JSState jSState = new JSState();
JSPlan jSPlan = new JSPlan();
JSOperator jSOperator = new JSOperator();
JSSubstitution jSSubstitution = new JSSubstitution();
jSState.applyOp(jSOperator, jSSubstitution, jSState, jSPlan);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        int x = 5;// Original primitive value

        double y = 3.14;// Original primitive value

        String z = "Hello World";// Original string

        char c = 'A';// Original character

        // Improved test data
        x = 10;// Descriptive and representative of the situation being tested

        y = 2.718;// Descriptive and representative of the situation being tested

        z = "Goodbye World";// Descriptive and representative of the situation being tested

        c = 'a';// Descriptive and representative of the situation being tested }}

    }
}
statement is: int x = 5// Original primitive value
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: double y = 3.14// Original primitive value
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String z = "Hello World"// Original string
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: char c = 'A'// Original character
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: // Improved test data
x = 10// Descriptive and representative of the situation being tested
, class spoon.support.reflect.code.CtAssignmentImpl
statement is: y = 2.718// Descriptive and representative of the situation being tested
, class spoon.support.reflect.code.CtAssignmentImpl
statement is: z = "Goodbye World"// Descriptive and representative of the situation being tested
, class spoon.support.reflect.code.CtAssignmentImpl
statement is: c = 'a'// Descriptive and representative of the situation being tested }}
, class spoon.support.reflect.code.CtAssignmentImpl
* this is vulnerable: int _int = 5
* this is vulnerable: double _double = 3.14
* this is vulnerable: String string = "Hello World"
* this is vulnerable: char _char = 'A'
TestCase is: int _int = 5;
double _double = 3.14;
String string = "Hello World";
char _char = 'A';

* test suite isTestSuite: 20
Test 0: 
JSState jSState = new JSState();
JSPlan jSPlan = new JSPlan();
jSPlan.add((Object) jSState);
jSState.addElementsToState(jSPlan);
jSState.addElementsToState(jSPlan);
Test 1: 
JSState jSState = new JSState();
StringReader stringReader = new StringReader("first");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
jSState.add(0, (Object) jSTerm);
JSSubstitution jSSubstitution = new JSSubstitution();
JSListAxioms jSListAxioms = new JSListAxioms();
JSListLogicalAtoms jSListLogicalAtoms = new JSListLogicalAtoms();
jSListLogicalAtoms.addElements(jSState);
JSPlan jSPlan = new JSPlan();
JSState apply = jSState.apply(jSPlan);
apply.satisfies(jSListLogicalAtoms, jSSubstitution, jSListAxioms);
Test 2: 
JSState jSState = new JSState();
JSSubstitution jSSubstitution = new JSSubstitution();
JSListAxioms jSListAxioms = new JSListAxioms();
JSPlan jSPlan = new JSPlan();
jSState.satisfiesAll(jSPlan, jSSubstitution, jSListAxioms);
Test 3: 
JSState jSState = new JSState();
StringReader stringReader = new StringReader("umd/cs;.sho.SatL%");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
JSJshopVars.flagLevel = 2757;
JSSubstitution jSSubstitution = new JSSubstitution();
jSState.satisfiesTAm(jSTerm, jSSubstitution);
Test 4: 
JSState jSState = new JSState();
StringReader stringReader = new StringReader("first");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
jSState.add(0, (Object) jSTerm);
JSSubstitution jSSubstitution = new JSSubstitution();
JSListAxioms jSListAxioms = new JSListAxioms();
JSListLogicalAtoms jSListLogicalAtoms = new JSListLogicalAtoms();
jSListLogicalAtoms.addElements(jSState);
jSState.satisfies(jSListLogicalAtoms, jSSubstitution, jSListAxioms);
Test 5: 
JSState jSState = new JSState();
JSTerm jSTerm = new JSTerm();
jSTerm.add((Object) jSState);
jSState.add(0, (Object) jSTerm);
JSSubstitution jSSubstitution = new JSSubstitution();
JSTerm jSTerm = new JSTerm();
jSState.satisfiesTAm(jSTerm, jSSubstitution);
Test 6: 
JSState jSState = new JSState();
StringReader stringReader = new StringReader("umd/cs;.sho.SatL%");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
JSJshopVars.flagLevel = 2757;
jSState.add(0, (Object) jSTerm);
JSSubstitution jSSubstitution = new JSSubstitution();
jSState.satisfiesTAm(jSTerm, jSSubstitution);
Test 7: 
JSState jSState = new JSState();
StringReader stringReader = new StringReader("first");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
jSState.add(0, (Object) jSTerm);
JSSubstitution jSSubstitution = new JSSubstitution();
jSState.satisfiesTAm(jSTerm, jSSubstitution);
Test 8: 
JSState jSState = new JSState();
JSListAxioms jSListAxioms = new JSListAxioms();
JSSubstitution jSSubstitution = new JSSubstitution();
StringReader stringReader = new StringReader("?`NQwcd}kY`c87+{");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSState jSState = new JSState(streamTokenizer);
jSState.satisfiesAll(jSState, jSSubstitution, jSListAxioms);
Test 9: 
JSState jSState = new JSState();
JSPlan jSPlan = new JSPlan();
JSOperator jSOperator = new JSOperator();
JSSubstitution jSSubstitution = new JSSubstitution();
// Undeclared exception!
try { 
  jSState.applyOp(jSOperator, jSSubstitution, jSState, jSPlan);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 10: 
JSState jSState = new JSState();
JSPlan jSPlan = new JSPlan();
jSPlan.add((Object) jSState);
jSState.addElementsToState(jSPlan);
jSState.addElementsToState(jSPlan);

Test 11: 
JSState jSState = new JSState();
StringReader stringReader = new StringReader("first");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
jSState.add(0, (Object) jSTerm);
JSSubstitution jSSubstitution = new JSSubstitution();
JSListAxioms jSListAxioms = new JSListAxioms();
JSListLogicalAtoms jSListLogicalAtoms = new JSListLogicalAtoms();
((JSListLogicalAtoms) jSSubstitution).addElements(jSState);
JSPlan jSPlan = new JSPlan();
jSState.apply(jSPlan);
((JSState) _void).satisfies(jSListLogicalAtoms, jSSubstitution, jSListAxioms);

Test 12: 
JSState jSState = new JSState();
JSSubstitution jSSubstitution = new JSSubstitution();
JSListAxioms jSListAxioms = new JSListAxioms();
JSPlan jSPlan = new JSPlan();
jSState.satisfiesAll(jSPlan, jSSubstitution, jSListAxioms);

Test 13: 
JSState jSState = new JSState();
StringReader stringReader = new StringReader("umd/cs;.sho.SatL%");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
JSSubstitution jSSubstitution = new JSSubstitution();
jSState.satisfiesTAm(jSTerm, jSSubstitution);

Test 14: 
JSState jSState = new JSState();
StringReader stringReader = new StringReader("John");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
jSState.add(0, (Object) jSTerm);
JSSubstitution jSSubstitution = new JSSubstitution();
JSListAxioms jSListAxioms = new JSListAxioms();
JSListLogicalAtoms jSListLogicalAtoms = new JSListLogicalAtoms();
((JSListLogicalAtoms) jSSubstitution).addElements(jSState);
jSState.satisfies(jSListLogicalAtoms, jSSubstitution, jSListAxioms);

Test 15: 
JSState jSState = new JSState();
JSTerm jSTerm = new JSTerm();
jSTerm.add((Object) "x");
jSState.add(0, (Object) jSTerm);
JSSubstitution jSSubstitution = new JSSubstitution();
JSTerm jSTerm = new JSTerm();
jSTerm.add((Object) "x");
jSState.satisfiesTAm(jSTerm, jSSubstitution);

Test 16: 
JSState jSState = new JSState();
StringReader stringReader = new StringReader("umd/cs;.sho.SatL%");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
jSState.add(0, (Object) jSTerm);
JSSubstitution jSSubstitution = new JSSubstitution();
jSState.satisfiesTAm(jSTerm, jSSubstitution);

Test 17: 
JSState jSState = new JSState();
StringReader stringReader = new StringReader("5 + 2 * 3");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
jSState.add(0, (Object) jSTerm);
JSSubstitution jSSubstitution = new JSSubstitution();
jSState.satisfiesTAm(jSTerm, jSSubstitution);

Test 18: 
JSState jSState = new JSState();
JSListAxioms jSListAxioms = new JSListAxioms();
JSSubstitution jSSubstitution = new JSSubstitution();
StringReader stringReader = new StringReader("Hello World");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSState jSState = new JSState(streamTokenizer);
jSState.satisfiesAll(jSState, jSSubstitution, jSListAxioms);

Test 19: 


* Generated after the refinement and before minimization 20 tests with total length 140
* test suite isTestSuite: 20
Test 0: 
JSState jSState = new JSState();
JSPlan jSPlan = new JSPlan();
jSPlan.add((Object) jSState);
jSState.addElementsToState(jSPlan);
jSState.addElementsToState(jSPlan);
Test 1: 
JSState jSState = new JSState();
StringReader stringReader = new StringReader("first");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
jSState.add(0, (Object) jSTerm);
JSSubstitution jSSubstitution = new JSSubstitution();
JSListAxioms jSListAxioms = new JSListAxioms();
JSListLogicalAtoms jSListLogicalAtoms = new JSListLogicalAtoms();
jSListLogicalAtoms.addElements(jSState);
JSPlan jSPlan = new JSPlan();
JSState apply = jSState.apply(jSPlan);
apply.satisfies(jSListLogicalAtoms, jSSubstitution, jSListAxioms);
Test 2: 
JSState jSState = new JSState();
JSSubstitution jSSubstitution = new JSSubstitution();
JSListAxioms jSListAxioms = new JSListAxioms();
JSPlan jSPlan = new JSPlan();
jSState.satisfiesAll(jSPlan, jSSubstitution, jSListAxioms);
Test 3: 
JSState jSState = new JSState();
StringReader stringReader = new StringReader("umd/cs;.sho.SatL%");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
JSJshopVars.flagLevel = 2757;
JSSubstitution jSSubstitution = new JSSubstitution();
jSState.satisfiesTAm(jSTerm, jSSubstitution);
Test 4: 
JSState jSState = new JSState();
StringReader stringReader = new StringReader("first");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
jSState.add(0, (Object) jSTerm);
JSSubstitution jSSubstitution = new JSSubstitution();
JSListAxioms jSListAxioms = new JSListAxioms();
JSListLogicalAtoms jSListLogicalAtoms = new JSListLogicalAtoms();
jSListLogicalAtoms.addElements(jSState);
jSState.satisfies(jSListLogicalAtoms, jSSubstitution, jSListAxioms);
Test 5: 
JSState jSState = new JSState();
JSTerm jSTerm = new JSTerm();
jSTerm.add((Object) jSState);
jSState.add(0, (Object) jSTerm);
JSSubstitution jSSubstitution = new JSSubstitution();
JSTerm jSTerm = new JSTerm();
jSState.satisfiesTAm(jSTerm, jSSubstitution);
Test 6: 
JSState jSState = new JSState();
StringReader stringReader = new StringReader("umd/cs;.sho.SatL%");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
JSJshopVars.flagLevel = 2757;
jSState.add(0, (Object) jSTerm);
JSSubstitution jSSubstitution = new JSSubstitution();
jSState.satisfiesTAm(jSTerm, jSSubstitution);
Test 7: 
JSState jSState = new JSState();
StringReader stringReader = new StringReader("first");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
jSState.add(0, (Object) jSTerm);
JSSubstitution jSSubstitution = new JSSubstitution();
jSState.satisfiesTAm(jSTerm, jSSubstitution);
Test 8: 
JSState jSState = new JSState();
JSListAxioms jSListAxioms = new JSListAxioms();
JSSubstitution jSSubstitution = new JSSubstitution();
StringReader stringReader = new StringReader("?`NQwcd}kY`c87+{");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSState jSState = new JSState(streamTokenizer);
jSState.satisfiesAll(jSState, jSSubstitution, jSListAxioms);
Test 9: 
JSState jSState = new JSState();
JSPlan jSPlan = new JSPlan();
JSOperator jSOperator = new JSOperator();
JSSubstitution jSSubstitution = new JSSubstitution();
// Undeclared exception!
try { 
  jSState.applyOp(jSOperator, jSSubstitution, jSState, jSPlan);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 10: 
JSState jSState = new JSState();
JSPlan jSPlan = new JSPlan();
jSPlan.add((Object) jSState);
jSState.addElementsToState(jSPlan);
jSState.addElementsToState(jSPlan);

Test 11: 
JSState jSState = new JSState();
StringReader stringReader = new StringReader("first");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
jSState.add(0, (Object) jSTerm);
JSSubstitution jSSubstitution = new JSSubstitution();
JSListAxioms jSListAxioms = new JSListAxioms();
JSListLogicalAtoms jSListLogicalAtoms = new JSListLogicalAtoms();
((JSListLogicalAtoms) jSSubstitution).addElements(jSState);
JSPlan jSPlan = new JSPlan();
jSState.apply(jSPlan);
((JSState) _void).satisfies(jSListLogicalAtoms, jSSubstitution, jSListAxioms);

Test 12: 
JSState jSState = new JSState();
JSSubstitution jSSubstitution = new JSSubstitution();
JSListAxioms jSListAxioms = new JSListAxioms();
JSPlan jSPlan = new JSPlan();
jSState.satisfiesAll(jSPlan, jSSubstitution, jSListAxioms);

Test 13: 
JSState jSState = new JSState();
StringReader stringReader = new StringReader("umd/cs;.sho.SatL%");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
JSSubstitution jSSubstitution = new JSSubstitution();
jSState.satisfiesTAm(jSTerm, jSSubstitution);

Test 14: 
JSState jSState = new JSState();
StringReader stringReader = new StringReader("John");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
jSState.add(0, (Object) jSTerm);
JSSubstitution jSSubstitution = new JSSubstitution();
JSListAxioms jSListAxioms = new JSListAxioms();
JSListLogicalAtoms jSListLogicalAtoms = new JSListLogicalAtoms();
((JSListLogicalAtoms) jSSubstitution).addElements(jSState);
jSState.satisfies(jSListLogicalAtoms, jSSubstitution, jSListAxioms);

Test 15: 
JSState jSState = new JSState();
JSTerm jSTerm = new JSTerm();
jSTerm.add((Object) "x");
jSState.add(0, (Object) jSTerm);
JSSubstitution jSSubstitution = new JSSubstitution();
JSTerm jSTerm = new JSTerm();
jSTerm.add((Object) "x");
jSState.satisfiesTAm(jSTerm, jSSubstitution);

Test 16: 
JSState jSState = new JSState();
StringReader stringReader = new StringReader("umd/cs;.sho.SatL%");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
jSState.add(0, (Object) jSTerm);
JSSubstitution jSSubstitution = new JSSubstitution();
jSState.satisfiesTAm(jSTerm, jSSubstitution);

Test 17: 
JSState jSState = new JSState();
StringReader stringReader = new StringReader("5 + 2 * 3");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
jSState.add(0, (Object) jSTerm);
JSSubstitution jSSubstitution = new JSSubstitution();
jSState.satisfiesTAm(jSTerm, jSSubstitution);

Test 18: 
JSState jSState = new JSState();
JSListAxioms jSListAxioms = new JSListAxioms();
JSSubstitution jSSubstitution = new JSSubstitution();
StringReader stringReader = new StringReader("Hello World");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSState jSState = new JSState(streamTokenizer);
jSState.satisfiesAll(jSState, jSSubstitution, jSListAxioms);

Test 19: 


* Minimizing test suite
* test suite isTestSuite: 10
Test 0: 
JSState jSState = new JSState();
JSPlan jSPlan = new JSPlan();
jSPlan.add((Object) jSState);
jSState.addElementsToState(jSPlan);
jSState.addElementsToState(jSPlan);
Test 1: 
JSState jSState = new JSState();
JSSubstitution jSSubstitution = new JSSubstitution();
JSListAxioms jSListAxioms = new JSListAxioms();
jSState.satisfies(jSState, jSSubstitution, jSListAxioms);
Test 2: 
JSState jSState = new JSState();
StringReader stringReader = new StringReader("first");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
jSState.add(0, (Object) jSTerm);
JSSubstitution jSSubstitution = new JSSubstitution();
JSListAxioms jSListAxioms = new JSListAxioms();
JSListLogicalAtoms jSListLogicalAtoms = new JSListLogicalAtoms();
jSListLogicalAtoms.addElements(jSState);
JSPlan jSPlan = new JSPlan();
JSState apply = jSState.apply(jSPlan);
apply.satisfies(jSListLogicalAtoms, jSSubstitution, jSListAxioms);
Test 3: 
JSState jSState = new JSState();
JSSubstitution jSSubstitution = new JSSubstitution();
JSListAxioms jSListAxioms = new JSListAxioms();
JSPlan jSPlan = new JSPlan();
jSState.satisfiesAll(jSPlan, jSSubstitution, jSListAxioms);
Test 4: 
JSState jSState = new JSState();
StringReader stringReader = new StringReader("umd/cs;.sho.SatL%");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
JSJshopVars.flagLevel = 2757;
JSSubstitution jSSubstitution = new JSSubstitution();
jSState.satisfiesTAm(jSTerm, jSSubstitution);
Test 5: 
JSState jSState = new JSState();
StringReader stringReader = new StringReader("5 + 2 * 3");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
jSState.add(0, (Object) jSTerm);
JSSubstitution jSSubstitution = new JSSubstitution();
jSState.satisfiesTAm(jSTerm, jSSubstitution);
Test 6: 
JSState jSState = new JSState();
JSTerm jSTerm = new JSTerm();
jSTerm.add((Object) "x");
jSState.add(0, (Object) jSTerm);
JSSubstitution jSSubstitution = new JSSubstitution();
JSTerm jSTerm = new JSTerm();
jSState.satisfiesTAm(jSTerm, jSSubstitution);
Test 7: 
JSState jSState = new JSState();
StringReader stringReader = new StringReader("umd/cs;.sho.SatL%");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
JSJshopVars.flagLevel = 2757;
jSState.add(0, (Object) jSTerm);
JSSubstitution jSSubstitution = new JSSubstitution();
jSState.satisfiesTAm(jSTerm, jSSubstitution);
Test 8: 
JSState jSState = new JSState();
JSListAxioms jSListAxioms = new JSListAxioms();
JSSubstitution jSSubstitution = new JSSubstitution();
StringReader stringReader = new StringReader("?`NQwcd}kY`c87+{");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSState jSState = new JSState(streamTokenizer);
jSState.satisfiesAll(jSState, jSSubstitution, jSListAxioms);
Test 9: 
JSState jSState = new JSState();
JSPlan jSPlan = new JSPlan();
JSOperator jSOperator = new JSOperator();
JSSubstitution jSSubstitution = new JSSubstitution();
// Undeclared exception!
try { 
  jSState.applyOp(jSOperator, jSSubstitution, jSState, jSPlan);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}


* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 59%
* Total number of goals: 41
* Number of covered goals: 24
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 59%
* Total number of goals: 80
* Number of covered goals: 47
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 48%
* Total number of goals: 40
* Number of covered goals: 19
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 59%
* Total number of goals: 41
* Number of covered goals: 24
* Generated 10 tests with total length 67
* Resulting test suite's coverage: 62% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 25%
* Compiling and checking tests
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: JSState arg0 = new JSState();
JSSubstitution arg1 = new JSSubstitution();
JSListAxioms arg2 = new JSListAxioms();
JSSubstitution satisfies = arg0.satisfies(arg0, arg1, arg2);
assertEquals(0, satisfies.capacity());


** It was a parseable test case! 
refined test name is: testSatisfiesWithUnsatisfiedState
* Compiling Tests
refined test name is: testSatisfiesReturnsZeroWhenStateIsUnsatisfied
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: JSState jSState = new JSState();
JSSubstitution arg1 = new JSSubstitution();
JSListAxioms arg2 = new JSListAxioms();
JSPlan arg0 = new JSPlan();
JSListSubstitution satisfiesAll = jSState.satisfiesAll(arg0, arg1, arg2);
assertEquals("[[]]", satisfiesAll.toString());


** It was a parseable test case! 
refined test name is: testSatisfiesAll
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: JSState arg2 = new JSState();
JSPlan arg3 = new JSPlan();
JSOperator arg0 = new JSOperator();
JSSubstitution arg1 = new JSSubstitution();
// Undeclared exception!
try { 
  arg2.applyOp(arg0, arg1, arg2, arg3);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("umd.cs.shop.JSState", e);
}


** It was a parseable test case! 
refined test name is: testApplyOpWithNullParametersThrowsNPE
* Compiling Tests
refined test name is: testApplyOpWithNullParameters
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 09:22:37.371 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar1474604799891619368.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 09:22:37.394 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1474604799891619368.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 09:22:37.453 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar1474604799891619368.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 09:22:37.455 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1474604799891619368.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 09:22:37.525 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar1474604799891619368.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 09:22:37.526 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1474604799891619368.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 2 called: 1 to improve: false
[MASTER] 09:22:37.597 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar1474604799891619368.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 09:22:37.598 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1474604799891619368.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 2 called: 1 to improve: false
[MASTER] 09:22:37.667 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar1474604799891619368.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 09:22:37.668 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1474604799891619368.jar
[MASTER] 09:22:37.789 [logback-1] WARN  TimeController - Already entered in phase: INLINING. This will mess up the timing calculations.
* test suite isTestSuite: 9
Test 0: 
JSState jSState = new JSState();
JSPlan jSPlan = new JSPlan();
jSPlan.add((Object) jSState);
jSState.addElementsToState(jSPlan);
jSState.addElementsToState(jSPlan);
Test 1: 
JSState jSState = new JSState();
StringReader stringReader = new StringReader("first");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
jSState.add(0, (Object) jSTerm);
JSSubstitution jSSubstitution = new JSSubstitution();
JSListAxioms jSListAxioms = new JSListAxioms();
JSListLogicalAtoms jSListLogicalAtoms = new JSListLogicalAtoms();
jSListLogicalAtoms.addElements(jSState);
JSPlan jSPlan = new JSPlan();
JSState apply = jSState.apply(jSPlan);
apply.satisfies(jSListLogicalAtoms, jSSubstitution, jSListAxioms);
Test 2: 
JSState jSState = new JSState();
StringReader stringReader = new StringReader("umd/cs.shop.SStat%");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
jSState.add(0, (Object) jSTerm);
JSSubstitution jSSubstitution = new JSSubstitution();
JSState jSState = new JSState();
JSListAxioms jSListAxioms = new JSListAxioms();
JSSubstitution satisfies = jSState.satisfies(jSState, jSSubstitution, jSListAxioms);
jSState.satisfiesAll(jSState, satisfies, jSListAxioms);
Test 3: 
JSState jSState = new JSState();
StringReader stringReader = new StringReader("first");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
jSState.add(0, (Object) jSTerm);
JSSubstitution jSSubstitution = new JSSubstitution();
JSListAxioms jSListAxioms = new JSListAxioms();
JSListLogicalAtoms jSListLogicalAtoms = new JSListLogicalAtoms();
jSListLogicalAtoms.addElements(jSState);
jSState.satisfies(jSListLogicalAtoms, jSSubstitution, jSListAxioms);
Test 4: 
JSState jSState = new JSState();
JSTerm jSTerm = new JSTerm();
jSTerm.add((Object) jSState);
jSState.add(0, (Object) jSTerm);
JSSubstitution jSSubstitution = new JSSubstitution();
JSTerm jSTerm = new JSTerm();
jSState.satisfiesTAm(jSTerm, jSSubstitution);
Test 5: 
JSState jSState = new JSState();
StringReader stringReader = new StringReader("first");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
jSState.add(0, (Object) jSTerm);
JSSubstitution jSSubstitution = new JSSubstitution();
jSState.satisfiesTAm(jSTerm, jSSubstitution);
Test 6: 
JSState jSState = new JSState();
JSTerm jSTerm = new JSTerm();
JSSubstitution jSSubstitution = new JSSubstitution();
jSState.satisfiesTAm(jSTerm, jSSubstitution);
Test 7: 
JSState jSState = new JSState();
JSListAxioms jSListAxioms = new JSListAxioms();
JSSubstitution jSSubstitution = new JSSubstitution();
StringReader stringReader = new StringReader("?`NQwcd}kY`c87+{");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSState jSState = new JSState(streamTokenizer);
jSState.satisfiesAll(jSState, jSSubstitution, jSListAxioms);
Test 8: 
JSState jSState = new JSState();
JSPlan jSPlan = new JSPlan();
JSOperator jSOperator = new JSOperator();
JSSubstitution jSSubstitution = new JSSubstitution();
// Undeclared exception!
try { 
  jSState.applyOp(jSOperator, jSSubstitution, jSState, jSPlan);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}


* Minimizing test suite
* test suite isTestSuite: 10
Test 0: 
JSState jSState = new JSState();
JSPlan jSPlan = new JSPlan();
jSState.apply(jSPlan);
Test 1: 
JSState jSState = new JSState();
JSPlan jSPlan = new JSPlan();
jSPlan.add((Object) jSState);
jSState.addElementsToState(jSPlan);
jSState.addElementsToState(jSPlan);
Test 2: 
JSState jSState = new JSState();
JSSubstitution jSSubstitution = new JSSubstitution();
JSListAxioms jSListAxioms = new JSListAxioms();
jSState.satisfies(jSState, jSSubstitution, jSListAxioms);
Test 3: 
JSState jSState = new JSState();
StringReader stringReader = new StringReader("umd/cs.shop.SStat%");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
jSState.add(0, (Object) jSTerm);
JSSubstitution jSSubstitution = new JSSubstitution();
JSState jSState = new JSState();
JSListAxioms jSListAxioms = new JSListAxioms();
jSState.satisfies(jSState, jSSubstitution, jSListAxioms);
Test 4: 
JSState jSState = new JSState();
JSListAxioms jSListAxioms = new JSListAxioms();
JSSubstitution jSSubstitution = new JSSubstitution();
jSState.satisfiesAll(jSState, jSSubstitution, jSListAxioms);
Test 5: 
JSState jSState = new JSState();
JSTerm jSTerm = new JSTerm();
jSTerm.add((Object) jSState);
jSState.add(0, (Object) jSTerm);
JSSubstitution jSSubstitution = new JSSubstitution();
JSTerm jSTerm = new JSTerm();
jSState.satisfiesTAm(jSTerm, jSSubstitution);
Test 6: 
JSState jSState = new JSState();
StringReader stringReader = new StringReader("first");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
jSState.add(0, (Object) jSTerm);
JSSubstitution jSSubstitution = new JSSubstitution();
jSState.satisfiesTAm(jSTerm, jSSubstitution);
Test 7: 
JSState jSState = new JSState();
StringReader stringReader = new StringReader("first");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSTerm jSTerm = new JSTerm(streamTokenizer);
JSSubstitution jSSubstitution = new JSSubstitution();
jSState.satisfiesTAm(jSTerm, jSSubstitution);
Test 8: 
JSState jSState = new JSState();
JSListAxioms jSListAxioms = new JSListAxioms();
JSSubstitution jSSubstitution = new JSSubstitution();
StringReader stringReader = new StringReader("?`NQwcd}kY`c87+{");
StreamTokenizer streamTokenizer = new StreamTokenizer(stringReader);
JSState jSState = new JSState(streamTokenizer);
jSState.satisfiesAll(jSState, jSSubstitution, jSListAxioms);
Test 9: 
JSState jSState = new JSState();
JSPlan jSPlan = new JSPlan();
JSOperator jSOperator = new JSOperator();
JSSubstitution jSSubstitution = new JSSubstitution();
// Undeclared exception!
try { 
  jSState.applyOp(jSOperator, jSSubstitution, jSState, jSPlan);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}


[MASTER] 09:22:41.125 [logback-1] WARN  TimeController - Already entered in phase: MINIMIZATION. This will mess up the timing calculations.
* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 46%
* Total number of goals: 41
* Number of covered goals: 19
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 54%
* Total number of goals: 80
* Number of covered goals: 43
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 48%
* Total number of goals: 40
* Number of covered goals: 19
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 46%
* Total number of goals: 41
* Number of covered goals: 19
* Generated 10 tests with total length 57
* Resulting test suite's coverage: 62% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 09:22:41.174 [logback-1] WARN  TimeController - Already entered in phase: COVERAGE_ANALYSIS. This will mess up the timing calculations.
* Resulting test suite's mutation score: 25%
* Compiling and checking tests
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
[MASTER] 09:22:43.139 [logback-1] WARN  TimeController - Already entered in phase: ASSERTION_GENERATION. This will mess up the timing calculations.
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 09:22:43.806 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar1474604799891619368.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 09:22:43.806 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1474604799891619368.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 09:22:43.855 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar1474604799891619368.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 09:22:43.856 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1474604799891619368.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 09:22:43.937 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar1474604799891619368.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 09:22:43.938 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1474604799891619368.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 09:22:44.034 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar1474604799891619368.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 09:22:44.035 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1474604799891619368.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
[MASTER] 09:22:44.203 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar1474604799891619368.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 09:22:44.204 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1474604799891619368.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
[MASTER] 09:22:44.326 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar1474604799891619368.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 09:22:44.327 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1474604799891619368.jar
* Writing tests to file
[MASTER] 09:22:44.329 [logback-1] WARN  TimeController - Already entered in phase: JUNIT_CHECK. This will mess up the timing calculations.
* Writing JUnit test case 'JSState_ESTest' to evosuite-tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 2 called: 1 to improve: false
* Writing JUnit test case 'JSState_Original_ESTest' to evosuite-tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
* Done!

* Computation finished
