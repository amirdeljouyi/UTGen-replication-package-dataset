* EvoSuite 1.0.0-SNAPSHOT
* Going to generate test cases for class: ghm.follow.search.SearchableTextPane
* Starting Client-0
* Properties loaded from /home/roham/Results-Utestgen/dataset/SF110-new-res/41_follow/evosuite-files/evosuite.properties
* Connecting to master process on port 15926
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 04:04:32.959 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 04:04:32.960 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 04:04:33.002 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 04:04:33.003 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 04:04:33.003 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 04:04:33.027 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 04:04:34.429 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 04:04:34.505 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 04:04:34.506 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 04:04:34.507 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 04:04:34.507 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 04:04:34.508 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 04:04:34.508 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 04:04:34.509 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 04:04:34.510 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 04:04:34.562 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 04:04:34.571 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
* Finished analyzing classpath
* Generating tests for class ghm.follow.search.SearchableTextPane
* Test criteria:
  - Branch Coverage
  - Line Coverage
  - Method-Output Coverage
  - Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 171
* Using seed 1710216270370
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%]* Initial Number of Goals in DynaMOSA = 73 / 171
[Progress:>                             1%] [Cov:===================>               57%][Progress:>                             2%] [Cov:===================>               57%][Progress:>                             2%] [Cov:===================>               57%][Progress:>                             2%] [Cov:===================>               57%][Progress:>                             3%] [Cov:===================>               57%][Progress:>                             3%] [Cov:===================>               57%][Progress:>                             3%] [Cov:===================>               57%][Progress:>                             3%] [Cov:===================>               57%][Progress:=>                            4%] [Cov:===================>               57%][Progress:=>                            4%] [Cov:===================>               57%][Progress:=>                            4%] [Cov:===================>               57%][Progress:=>                            4%] [Cov:===================>               57%][Progress:=>                            5%] [Cov:==========================>        76%][Progress:===>                          10%] [Cov:==========================>        76%][Progress:===>                          10%] [Cov:==========================>        76%][Progress:===>                          10%] [Cov:==========================>        76%][Progress:===>                          11%] [Cov:==========================>        76%][Progress:===>                          11%] [Cov:==========================>        76%][Progress:===>                          11%] [Cov:==========================>        76%][Progress:===>                          11%] [Cov:==========================>        76%][Progress:===>                          11%] [Cov:==========================>        76%][Progress:===>                          11%] [Cov:==========================>        76%][Progress:===>                          11%] [Cov:==========================>        76%][Progress:===>                          12%] [Cov:==========================>        76%][Progress:===>                          12%] [Cov:==========================>        76%][Progress:===>                          12%] [Cov:==========================>        76%][Progress:===>                          12%] [Cov:===========================>       79%][Progress:===>                          12%] [Cov:===========================>       79%][Progress:===>                          12%] [Cov:===========================>       79%][Progress:===>                          13%] [Cov:===========================>       79%][Progress:===>                          13%] [Cov:===========================>       79%][Progress:===>                          13%] [Cov:===========================>       79%][Progress:===>                          13%] [Cov:===========================>       79%][Progress:===>                          13%] [Cov:===========================>       79%][Progress:===>                          13%] [Cov:===========================>       79%][Progress:===>                          13%] [Cov:===========================>       79%][Progress:====>                         14%] [Cov:===========================>       79%][Progress:====>                         14%] [Cov:===========================>       79%][Progress:====>                         14%] [Cov:===========================>       79%][Progress:====>                         14%] [Cov:===========================>       79%][Progress:====>                         14%] [Cov:===========================>       79%][Progress:====>                         14%] [Cov:===========================>       79%][Progress:====>                         14%] [Cov:===========================>       79%][Progress:====>                         15%] [Cov:===========================>       79%][Progress:====>                         15%] [Cov:===========================>       79%][Progress:====>                         15%] [Cov:===========================>       79%][Progress:====>                         15%] [Cov:===========================>       79%][Progress:====>                         15%] [Cov:===========================>       79%][Progress:====>                         15%] [Cov:===========================>       79%][Progress:====>                         15%] [Cov:===========================>       79%][Progress:====>                         16%] [Cov:===========================>       79%][Progress:====>                         16%] [Cov:===========================>       79%][Progress:====>                         16%] [Cov:===========================>       79%][MASTER] 04:04:51.547 [logback-1] WARN  TestCluster - Failed to check cache for java.util.Enumeration<E> : Type points to itself
[Progress:====>                         16%] [Cov:===========================>       79%][Progress:====>                         16%] [Cov:===========================>       79%][Progress:====>                         16%] [Cov:===========================>       79%][Progress:====>                         16%] [Cov:===========================>       79%][Progress:=====>                        17%] [Cov:===========================>       79%][Progress:=====>                        17%] [Cov:===========================>       79%][Progress:=====>                        17%] [Cov:===========================>       79%][Progress:=====>                        17%] [Cov:===========================>       79%][Progress:=====>                        17%] [Cov:===========================>       79%][Progress:=====>                        17%] [Cov:===========================>       79%][Progress:=====>                        17%] [Cov:===========================>       79%][Progress:=====>                        18%] [Cov:===========================>       79%][Progress:=====>                        18%] [Cov:===========================>       79%][Progress:=====>                        18%] [Cov:===========================>       79%][Progress:=====>                        18%] [Cov:===========================>       79%][Progress:=====>                        18%] [Cov:===========================>       79%][Progress:=====>                        18%] [Cov:===========================>       79%][Progress:=====>                        18%] [Cov:===========================>       79%][Progress:=====>                        18%] [Cov:===========================>       79%][Progress:=====>                        19%] [Cov:===========================>       79%][Progress:=====>                        19%] [Cov:===========================>       79%][Progress:=====>                        19%] [Cov:===========================>       79%][Progress:=====>                        19%] [Cov:===========================>       79%][Progress:=====>                        19%] [Cov:===========================>       79%][Progress:=====>                        19%] [Cov:===========================>       79%][Progress:=====>                        19%] [Cov:===========================>       79%][Progress:=====>                        19%] [Cov:===========================>       79%][Progress:======>                       20%] [Cov:===========================>       79%][Progress:======>                       20%] [Cov:===========================>       79%][Progress:======>                       20%] [Cov:===========================>       79%][Progress:======>                       20%] [Cov:===========================>       79%][Progress:======>                       20%] [Cov:===========================>       79%][Progress:======>                       20%] [Cov:===========================>       79%][Progress:======>                       20%] [Cov:===========================>       79%][Progress:======>                       20%] [Cov:===========================>       79%][Progress:======>                       20%] [Cov:===========================>       79%][Progress:======>                       21%] [Cov:===========================>       79%][Progress:======>                       21%] [Cov:===========================>       79%][Progress:======>                       21%] [Cov:===========================>       79%][Progress:======>                       21%] [Cov:===========================>       79%][Progress:======>                       21%] [Cov:===========================>       79%][Progress:======>                       21%] [Cov:===========================>       79%][Progress:======>                       21%] [Cov:===========================>       79%][Progress:======>                       21%] [Cov:===========================>       79%][Progress:======>                       21%] [Cov:===========================>       79%][Progress:======>                       22%] [Cov:===========================>       79%][Progress:======>                       22%] [Cov:===========================>       79%][Progress:======>                       22%] [Cov:===========================>       79%][Progress:======>                       22%] [Cov:===========================>       79%][Progress:======>                       22%] [Cov:===========================>       79%][Progress:======>                       22%] [Cov:===========================>       79%][Progress:======>                       22%] [Cov:===========================>       79%][Progress:======>                       22%] [Cov:===========================>       79%][Progress:======>                       22%] [Cov:===========================>       79%][Progress:======>                       23%] [Cov:===========================>       79%][Progress:======>                       23%] [Cov:===========================>       79%][Progress:======>                       23%] [Cov:===========================>       79%][Progress:======>                       23%] [Cov:===========================>       79%][Progress:======>                       23%] [Cov:===========================>       79%][Progress:======>                       23%] [Cov:===========================>       79%][Progress:======>                       23%] [Cov:===========================>       79%][Progress:======>                       23%] [Cov:===========================>       79%][Progress:======>                       23%] [Cov:===========================>       79%][Progress:=======>                      24%] [Cov:===========================>       79%][Progress:=======>                      24%] [Cov:===========================>       79%][Progress:=======>                      24%] [Cov:===========================>       79%][Progress:=======>                      24%] [Cov:===========================>       79%][Progress:=======>                      24%] [Cov:===========================>       79%][Progress:=======>                      24%] [Cov:===========================>       79%][Progress:=======>                      24%] [Cov:===========================>       79%][Progress:=======>                      24%] [Cov:===========================>       79%][Progress:=======>                      24%] [Cov:===========================>       79%][Progress:=======>                      25%] [Cov:===========================>       79%][Progress:=======>                      25%] [Cov:===========================>       79%][Progress:=======>                      25%] [Cov:===========================>       79%][Progress:=======>                      25%] [Cov:===========================>       79%][Progress:=======>                      25%] [Cov:===========================>       79%][Progress:=======>                      25%] [Cov:===========================>       79%][Progress:=======>                      25%] [Cov:===========================>       79%][Progress:=======>                      25%] [Cov:===========================>       79%][Progress:=======>                      26%] [Cov:===========================>       79%][Progress:=======>                      26%] [Cov:===========================>       79%][Progress:=======>                      26%] [Cov:===========================>       79%][Progress:=======>                      26%] [Cov:===========================>       79%][Progress:=======>                      26%] [Cov:===========================>       79%][Progress:=======>                      26%] [Cov:===========================>       79%][Progress:=======>                      26%] [Cov:===========================>       79%][Progress:=======>                      26%] [Cov:===========================>       79%][Progress:=======>                      26%] [Cov:===========================>       79%][Progress:=======>                      26%] [Cov:===========================>       79%][Progress:========>                     27%] [Cov:===========================>       79%][Progress:========>                     27%] [Cov:===========================>       79%][Progress:========>                     27%] [Cov:===========================>       79%][Progress:========>                     27%] [Cov:===========================>       79%][Progress:========>                     27%] [Cov:===========================>       79%][Progress:========>                     27%] [Cov:===========================>       79%][Progress:========>                     27%] [Cov:===========================>       79%][Progress:========>                     27%] [Cov:===========================>       79%][Progress:========>                     28%] [Cov:===========================>       79%][Progress:========>                     28%] [Cov:===========================>       79%][Progress:========>                     28%] [Cov:===========================>       79%][Progress:========>                     28%] [Cov:===========================>       79%][Progress:========>                     28%] [Cov:===========================>       79%][Progress:========>                     28%] [Cov:===========================>       79%][Progress:========>                     28%] [Cov:===========================>       79%][Progress:========>                     28%] [Cov:===========================>       79%][Progress:========>                     28%] [Cov:===========================>       79%][Progress:========>                     28%] [Cov:===========================>       79%][Progress:========>                     28%] [Cov:===========================>       79%][Progress:========>                     29%] [Cov:===========================>       79%][Progress:========>                     29%] [Cov:===========================>       79%][Progress:========>                     29%] [Cov:===========================>       79%][Progress:========>                     29%] [Cov:===========================>       79%][Progress:========>                     29%] [Cov:===========================>       79%][Progress:========>                     29%] [Cov:===========================>       79%][Progress:========>                     29%] [Cov:===========================>       79%][Progress:========>                     29%] [Cov:===========================>       79%][Progress:=========>                    30%] [Cov:===========================>       79%][Progress:=========>                    30%] [Cov:===========================>       79%][Progress:=========>                    30%] [Cov:===========================>       79%][Progress:=========>                    30%] [Cov:===========================>       79%][Progress:=========>                    30%] [Cov:===========================>       79%][Progress:=========>                    30%] [Cov:===========================>       79%][Progress:=========>                    30%] [Cov:===========================>       79%][Progress:=========>                    30%] [Cov:===========================>       79%][Progress:=========>                    30%] [Cov:===========================>       79%][Progress:=========>                    31%] [Cov:===========================>       79%][Progress:=========>                    31%] [Cov:===========================>       79%][Progress:=========>                    31%] [Cov:===========================>       79%][Progress:=========>                    31%] [Cov:===========================>       79%][Progress:=========>                    31%] [Cov:===========================>       79%][Progress:==========>                   36%] [Cov:===========================>       79%][Progress:==========>                   36%] [Cov:===========================>       79%][Progress:==========>                   36%] [Cov:===========================>       79%][Progress:==========>                   36%] [Cov:===========================>       79%][Progress:==========>                   36%] [Cov:===========================>       79%][Progress:==========>                   36%] [Cov:===========================>       79%][Progress:===========>                  37%] [Cov:===========================>       79%][Progress:===========>                  37%] [Cov:===========================>       79%][Progress:===========>                  37%] [Cov:===========================>       79%][Progress:===========>                  37%] [Cov:===========================>       79%][Progress:===========>                  37%] [Cov:===========================>       79%][Progress:===========>                  37%] [Cov:===========================>       79%][Progress:===========>                  37%] [Cov:===========================>       79%][Progress:===========>                  37%] [Cov:===========================>       79%][Progress:===========>                  37%] [Cov:===========================>       79%][Progress:===========>                  37%] [Cov:===========================>       79%][Progress:===========>                  37%] [Cov:===========================>       79%][Progress:===========>                  38%] [Cov:===========================>       79%][Progress:===========>                  38%] [Cov:===========================>       79%][Progress:===========>                  38%] [Cov:===========================>       79%][Progress:===========>                  38%] [Cov:===========================>       79%][Progress:===========>                  38%] [Cov:===========================>       79%][Progress:===========>                  38%] [Cov:===========================>       79%][Progress:===========>                  38%] [Cov:===========================>       79%][Progress:===========>                  38%] [Cov:===========================>       79%][Progress:===========>                  38%] [Cov:===========================>       79%][Progress:===========>                  38%] [Cov:===========================>       79%][Progress:===========>                  38%] [Cov:===========================>       79%][Progress:===========>                  39%] [Cov:===========================>       79%][Progress:===========>                  39%] [Cov:===========================>       79%][Progress:===========>                  39%] [Cov:===========================>       79%][Progress:===========>                  39%] [Cov:===========================>       79%][Progress:===========>                  39%] [Cov:===========================>       79%][Progress:===========>                  39%] [Cov:===========================>       79%][Progress:===========>                  39%] [Cov:===========================>       79%][Progress:===========>                  39%] [Cov:===========================>       79%][Progress:===========>                  39%] [Cov:===========================>       79%][Progress:===========>                  39%] [Cov:===========================>       79%][Progress:===========>                  39%] [Cov:===========================>       79%][Progress:===========>                  39%] [Cov:===========================>       79%][Progress:============>                 40%] [Cov:===========================>       79%][Progress:============>                 40%] [Cov:===========================>       79%][Progress:============>                 40%] [Cov:===========================>       79%][Progress:============>                 40%] [Cov:===========================>       79%][Progress:============>                 40%] [Cov:===========================>       79%][Progress:============>                 40%] [Cov:===========================>       79%][Progress:============>                 40%] [Cov:===========================>       79%][Progress:============>                 40%] [Cov:===========================>       79%][Progress:============>                 40%] [Cov:===========================>       79%][Progress:============>                 40%] [Cov:===========================>       79%][Progress:============>                 40%] [Cov:===========================>       79%][Progress:============>                 41%] [Cov:===========================>       79%][Progress:============>                 41%] [Cov:===========================>       79%][Progress:============>                 41%] [Cov:===========================>       79%][Progress:============>                 41%] [Cov:===========================>       79%][Progress:============>                 41%] [Cov:===========================>       79%][Progress:============>                 41%] [Cov:===========================>       79%][Progress:============>                 41%] [Cov:===========================>       79%][Progress:============>                 41%] [Cov:===========================>       79%][Progress:============>                 41%] [Cov:===========================>       79%][Progress:============>                 41%] [Cov:===========================>       79%][Progress:============>                 41%] [Cov:===========================>       79%][Progress:============>                 41%] [Cov:===========================>       79%][Progress:============>                 42%] [Cov:===========================>       79%][Progress:============>                 42%] [Cov:===========================>       79%][Progress:============>                 42%] [Cov:===========================>       79%][Progress:============>                 42%] [Cov:===========================>       79%][Progress:============>                 42%] [Cov:===========================>       79%][Progress:============>                 42%] [Cov:===========================>       79%][Progress:============>                 42%] [Cov:===========================>       79%][Progress:============>                 42%] [Cov:===========================>       79%][Progress:============>                 42%] [Cov:===========================>       79%][MASTER] 04:05:17.885 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.ChronoLocalDate
[MASTER] 04:05:17.901 [logback-1] WARN  TestCluster - Failed to check cache for java.lang.Comparable<T> : Type points to itself
[Progress:============>                 42%] [Cov:===========================>       79%][Progress:============>                 42%] [Cov:===========================>       79%][Progress:============>                 42%] [Cov:===========================>       79%][Progress:============>                 43%] [Cov:===========================>       79%][Progress:============>                 43%] [Cov:===========================>       79%][Progress:============>                 43%] [Cov:===========================>       79%][Progress:============>                 43%] [Cov:===========================>       79%][Progress:============>                 43%] [Cov:===========================>       79%][Progress:============>                 43%] [Cov:===========================>       79%][Progress:============>                 43%] [Cov:===========================>       79%][Progress:============>                 43%] [Cov:===========================>       79%][Progress:============>                 43%] [Cov:===========================>       79%][Progress:============>                 43%] [Cov:===========================>       79%][Progress:============>                 43%] [Cov:===========================>       79%][Progress:============>                 43%] [Cov:===========================>       79%][Progress:=============>                44%] [Cov:===========================>       79%][Progress:=============>                44%] [Cov:===========================>       79%][Progress:=============>                44%] [Cov:===========================>       79%][Progress:=============>                44%] [Cov:===========================>       79%][Progress:=============>                44%] [Cov:===========================>       79%][Progress:=============>                44%] [Cov:===========================>       79%][Progress:=============>                44%] [Cov:===========================>       79%][Progress:=============>                44%] [Cov:===========================>       79%][Progress:=============>                44%] [Cov:===========================>       79%][Progress:=============>                44%] [Cov:===========================>       79%][Progress:=============>                44%] [Cov:===========================>       79%][Progress:=============>                44%] [Cov:===========================>       79%][Progress:=============>                45%] [Cov:===========================>       79%][Progress:=============>                45%] [Cov:===========================>       79%][Progress:=============>                45%] [Cov:===========================>       79%][Progress:=============>                45%] [Cov:===========================>       79%][Progress:=============>                45%] [Cov:===========================>       79%][Progress:=============>                45%] [Cov:===========================>       79%][Progress:=============>                45%] [Cov:===========================>       79%][Progress:=============>                45%] [Cov:===========================>       79%][Progress:=============>                45%] [Cov:===========================>       79%][Progress:=============>                45%] [Cov:===========================>       79%][Progress:=============>                45%] [Cov:===========================>       79%][Progress:=============>                45%] [Cov:===========================>       79%][Progress:=============>                45%] [Cov:===========================>       79%][Progress:=============>                45%] [Cov:===========================>       79%][Progress:=============>                46%] [Cov:===========================>       79%][Progress:=============>                46%] [Cov:===========================>       79%][Progress:=============>                46%] [Cov:===========================>       79%][Progress:=============>                46%] [Cov:===========================>       79%][Progress:=============>                46%] [Cov:===========================>       79%][Progress:=============>                46%] [Cov:===========================>       79%][Progress:=============>                46%] [Cov:===========================>       79%][Progress:=============>                46%] [Cov:===========================>       79%][Progress:=============>                46%] [Cov:===========================>       79%][Progress:=============>                46%] [Cov:===========================>       79%][Progress:=============>                46%] [Cov:===========================>       79%][Progress:=============>                46%] [Cov:===========================>       79%][Progress:=============>                46%] [Cov:===========================>       79%][Progress:===============>              52%] [Cov:===========================>       79%][Progress:===============>              52%] [Cov:===========================>       79%][Progress:===============>              52%] [Cov:===========================>       79%][Progress:===============>              52%] [Cov:===========================>       79%][Progress:===============>              52%] [Cov:===========================>       79%][Progress:===============>              52%] [Cov:===========================>       79%][Progress:===============>              52%] [Cov:===========================>       79%][Progress:===============>              52%] [Cov:===========================>       79%][Progress:===============>              52%] [Cov:===========================>       79%][Progress:===============>              52%] [Cov:===========================>       79%][Progress:===============>              52%] [Cov:===========================>       79%][Progress:===============>              53%] [Cov:===========================>       79%][Progress:===============>              53%] [Cov:===========================>       79%][Progress:===============>              53%] [Cov:===========================>       79%][Progress:===============>              53%] [Cov:===========================>       79%][Progress:===============>              53%] [Cov:===========================>       79%][Progress:===============>              53%] [Cov:===========================>       79%][Progress:===============>              53%] [Cov:===========================>       79%][Progress:===============>              53%] [Cov:===========================>       79%][Progress:===============>              53%] [Cov:===========================>       79%][Progress:===============>              53%] [Cov:===========================>       79%][Progress:===============>              53%] [Cov:===========================>       79%][Progress:===============>              53%] [Cov:===========================>       79%][Progress:================>             54%] [Cov:===========================>       79%][Progress:================>             54%] [Cov:===========================>       79%][Progress:================>             54%] [Cov:===========================>       79%][Progress:================>             54%] [Cov:===========================>       79%][Progress:================>             54%] [Cov:===========================>       79%][Progress:================>             54%] [Cov:===========================>       79%][Progress:================>             54%] [Cov:===========================>       79%][Progress:================>             54%] [Cov:===========================>       79%][Progress:================>             54%] [Cov:===========================>       79%][Progress:================>             54%] [Cov:===========================>       79%][Progress:================>             54%] [Cov:===========================>       79%][Progress:================>             54%] [Cov:===========================>       79%][Progress:================>             54%] [Cov:===========================>       79%][Progress:================>             54%] [Cov:===========================>       79%][Progress:================>             55%] [Cov:===========================>       79%][Progress:================>             55%] [Cov:===========================>       79%][Progress:================>             55%] [Cov:===========================>       79%][Progress:================>             55%] [Cov:===========================>       79%][Progress:================>             55%] [Cov:===========================>       79%][Progress:================>             55%] [Cov:===========================>       79%][Progress:================>             55%] [Cov:===========================>       79%][Progress:================>             55%] [Cov:===========================>       79%][Progress:================>             55%] [Cov:===========================>       79%][Progress:================>             55%] [Cov:===========================>       79%][Progress:================>             55%] [Cov:===========================>       79%][Progress:================>             55%] [Cov:===========================>       79%][Progress:================>             55%] [Cov:===========================>       79%][Progress:================>             56%] [Cov:===========================>       79%][Progress:================>             56%] [Cov:===========================>       79%][Progress:================>             56%] [Cov:===========================>       79%][Progress:================>             56%] [Cov:===========================>       79%][Progress:================>             56%] [Cov:===========================>       79%][Progress:================>             56%] [Cov:===========================>       79%][Progress:================>             56%] [Cov:===========================>       79%][Progress:================>             56%] [Cov:===========================>       79%][Progress:================>             56%] [Cov:===========================>       79%][Progress:================>             56%] [Cov:===========================>       79%][Progress:================>             56%] [Cov:===========================>       79%][Progress:================>             56%] [Cov:===========================>       79%][Progress:=================>            57%] [Cov:===========================>       79%][Progress:=================>            57%] [Cov:===========================>       79%][Progress:=================>            57%] [Cov:===========================>       79%][Progress:=================>            57%] [Cov:===========================>       79%][Progress:=================>            57%] [Cov:===========================>       79%][Progress:=================>            57%] [Cov:===========================>       79%][Progress:=================>            57%] [Cov:===========================>       79%][Progress:=================>            57%] [Cov:===========================>       79%][Progress:=================>            57%] [Cov:===========================>       79%][Progress:=================>            57%] [Cov:===========================>       79%][Progress:=================>            57%] [Cov:===========================>       79%][Progress:=================>            57%] [Cov:===========================>       79%][Progress:=================>            57%] [Cov:===========================>       79%][Progress:=================>            58%] [Cov:===========================>       79%][Progress:=================>            58%] [Cov:===========================>       79%][Progress:=================>            58%] [Cov:===========================>       79%][Progress:=================>            58%] [Cov:===========================>       79%][Progress:=================>            58%] [Cov:===========================>       79%][Progress:=================>            58%] [Cov:===========================>       79%][Progress:=================>            58%] [Cov:===========================>       79%][Progress:=================>            58%] [Cov:===========================>       79%][Progress:=================>            58%] [Cov:===========================>       79%][Progress:=================>            58%] [Cov:===========================>       79%][Progress:=================>            58%] [Cov:===========================>       79%][Progress:=================>            58%] [Cov:===========================>       79%][Progress:=================>            58%] [Cov:===========================>       79%][Progress:=================>            58%] [Cov:===========================>       79%][Progress:=================>            59%] [Cov:===========================>       79%][Progress:=================>            59%] [Cov:===========================>       79%][Progress:=================>            59%] [Cov:===========================>       79%][Progress:=================>            59%] [Cov:===========================>       79%][Progress:=================>            59%] [Cov:===========================>       79%][Progress:=================>            59%] [Cov:===========================>       79%][Progress:=================>            59%] [Cov:===========================>       79%][Progress:=================>            59%] [Cov:===========================>       79%][Progress:=================>            59%] [Cov:===========================>       79%][Progress:=================>            59%] [Cov:===========================>       79%][Progress:=================>            59%] [Cov:===========================>       79%][Progress:=================>            59%] [Cov:===========================>       79%][Progress:=================>            59%] [Cov:===========================>       79%][Progress:=================>            59%] [Cov:===========================>       79%][Progress:==================>           60%] [Cov:===========================>       79%][Progress:==================>           60%] [Cov:===========================>       79%][Progress:==================>           60%] [Cov:===========================>       79%][Progress:==================>           60%] [Cov:===========================>       79%][Progress:==================>           60%] [Cov:===========================>       79%][Progress:==================>           60%] [Cov:===========================>       79%][Progress:==================>           60%] [Cov:===========================>       79%][Progress:==================>           60%] [Cov:===========================>       79%][Progress:==================>           60%] [Cov:===========================>       79%][MASTER] 04:05:35.945 [logback-1] WARN  TestCluster - Failed to check cache for javax.swing.JComboBox<E> : Type points to itself
[Progress:==================>           60%] [Cov:===========================>       79%][Progress:==================>           60%] [Cov:===========================>       79%][Progress:==================>           60%] [Cov:===========================>       79%][Progress:==================>           61%] [Cov:===========================>       79%][Progress:==================>           61%] [Cov:===========================>       79%][Progress:==================>           61%] [Cov:===========================>       79%][Progress:==================>           61%] [Cov:===========================>       79%][Progress:===================>          66%] [Cov:===========================>       79%][Progress:===================>          66%] [Cov:===========================>       79%][Progress:===================>          66%] [Cov:===========================>       79%][Progress:===================>          66%] [Cov:===========================>       79%][Progress:===================>          66%] [Cov:===========================>       79%][Progress:===================>          66%] [Cov:===========================>       79%][Progress:====================>         67%] [Cov:===========================>       79%][Progress:====================>         67%] [Cov:===========================>       79%][Progress:====================>         67%] [Cov:===========================>       79%][Progress:====================>         67%] [Cov:===========================>       79%][Progress:====================>         67%] [Cov:===========================>       79%][Progress:====================>         68%] [Cov:===========================>       79%][Progress:====================>         68%] [Cov:===========================>       79%][Progress:====================>         68%] [Cov:===========================>       79%][Progress:====================>         68%] [Cov:===========================>       79%][Progress:====================>         68%] [Cov:===========================>       79%][Progress:====================>         68%] [Cov:===========================>       79%][Progress:====================>         68%] [Cov:===========================>       79%][Progress:====================>         69%] [Cov:===========================>       79%][Progress:====================>         69%] [Cov:===========================>       79%][Progress:====================>         69%] [Cov:===========================>       79%][Progress:====================>         69%] [Cov:===========================>       79%][Progress:====================>         69%] [Cov:===========================>       79%][Progress:====================>         69%] [Cov:===========================>       79%][Progress:====================>         69%] [Cov:===========================>       79%][Progress:====================>         69%] [Cov:===========================>       79%][Progress:=====================>        70%] [Cov:===========================>       79%][Progress:=====================>        70%] [Cov:===========================>       79%][Progress:=====================>        70%] [Cov:===========================>       79%][Progress:=====================>        70%] [Cov:===========================>       79%][Progress:=====================>        70%] [Cov:===========================>       79%][Progress:=====================>        70%] [Cov:===========================>       79%][Progress:=====================>        70%] [Cov:===========================>       79%][Progress:=====================>        70%] [Cov:===========================>       79%][Progress:=====================>        70%] [Cov:===========================>       79%][Progress:=====================>        70%] [Cov:===========================>       79%][Progress:=====================>        71%] [Cov:===========================>       79%][Progress:=====================>        71%] [Cov:===========================>       79%][Progress:=====================>        71%] [Cov:===========================>       79%][Progress:=====================>        71%] [Cov:===========================>       79%][Progress:=====================>        71%] [Cov:===========================>       79%][Progress:=====================>        71%] [Cov:===========================>       79%][Progress:=====================>        71%] [Cov:===========================>       79%][Progress:=====================>        71%] [Cov:===========================>       79%][Progress:=====================>        71%] [Cov:===========================>       79%][Progress:=====================>        71%] [Cov:===========================>       79%][Progress:=====================>        72%] [Cov:===========================>       79%][Progress:=====================>        72%] [Cov:===========================>       79%][Progress:=====================>        72%] [Cov:===========================>       79%][Progress:=====================>        72%] [Cov:===========================>       79%][Progress:=====================>        72%] [Cov:===========================>       79%][Progress:=====================>        72%] [Cov:===========================>       79%][Progress:=====================>        72%] [Cov:===========================>       79%][Progress:=====================>        72%] [Cov:===========================>       79%][Progress:=====================>        72%] [Cov:===========================>       79%][Progress:=====================>        73%] [Cov:===========================>       79%][Progress:=====================>        73%] [Cov:===========================>       79%][Progress:=====================>        73%] [Cov:===========================>       79%][Progress:=====================>        73%] [Cov:===========================>       79%][Progress:=====================>        73%] [Cov:===========================>       79%][Progress:=====================>        73%] [Cov:===========================>       79%][Progress:=====================>        73%] [Cov:===========================>       79%][Progress:=====================>        73%] [Cov:===========================>       79%][Progress:=====================>        73%] [Cov:===========================>       79%][Progress:======================>       74%] [Cov:===========================>       79%][Progress:======================>       74%] [Cov:===========================>       79%][Progress:======================>       74%] [Cov:===========================>       79%][Progress:======================>       74%] [Cov:===========================>       79%][Progress:======================>       74%] [Cov:===========================>       79%][Progress:======================>       74%] [Cov:===========================>       79%][Progress:======================>       74%] [Cov:===========================>       79%][Progress:======================>       74%] [Cov:============================>      81%][Progress:======================>       74%] [Cov:============================>      81%][Progress:======================>       75%] [Cov:============================>      81%][Progress:======================>       75%] [Cov:============================>      81%][Progress:======================>       75%] [Cov:============================>      81%][Progress:======================>       75%] [Cov:============================>      81%][Progress:======================>       75%] [Cov:============================>      81%][Progress:======================>       75%] [Cov:============================>      81%][Progress:======================>       75%] [Cov:============================>      81%][Progress:======================>       75%] [Cov:============================>      81%][Progress:======================>       75%] [Cov:============================>      81%][Progress:======================>       75%] [Cov:============================>      81%][Progress:======================>       76%] [Cov:============================>      81%][Progress:======================>       76%] [Cov:============================>      81%][Progress:======================>       76%] [Cov:============================>      81%][Progress:======================>       76%] [Cov:============================>      81%][Progress:======================>       76%] [Cov:============================>      81%][Progress:======================>       76%] [Cov:============================>      81%][Progress:======================>       76%] [Cov:============================>      81%][Progress:======================>       76%] [Cov:============================>      81%][Progress:======================>       76%] [Cov:============================>      81%][Progress:======================>       76%] [Cov:============================>      81%][Progress:=======================>      77%] [Cov:============================>      81%][Progress:=======================>      77%] [Cov:============================>      81%][Progress:=======================>      77%] [Cov:============================>      81%][Progress:=======================>      77%] [Cov:============================>      81%][Progress:=======================>      77%] [Cov:============================>      81%][Progress:=======================>      77%] [Cov:============================>      81%][Progress:=======================>      77%] [Cov:============================>      81%][Progress:=======================>      77%] [Cov:============================>      81%][Progress:=======================>      77%] [Cov:============================>      81%][Progress:=======================>      77%] [Cov:============================>      81%][Progress:=======================>      77%] [Cov:============================>      81%][Progress:=======================>      78%] [Cov:============================>      81%][Progress:=======================>      78%] [Cov:============================>      81%][Progress:=======================>      78%] [Cov:============================>      81%][Progress:=======================>      78%] [Cov:============================>      81%][Progress:=======================>      78%] [Cov:============================>      81%][Progress:=======================>      78%] [Cov:============================>      81%][Progress:=======================>      78%] [Cov:============================>      81%][Progress:=======================>      78%] [Cov:============================>      81%][Progress:=======================>      78%] [Cov:============================>      81%][Progress:=======================>      79%] [Cov:============================>      81%][Progress:=======================>      79%] [Cov:============================>      81%][Progress:=======================>      79%] [Cov:============================>      81%][Progress:=======================>      79%] [Cov:============================>      81%][Progress:=======================>      79%] [Cov:============================>      81%][Progress:=======================>      79%] [Cov:============================>      81%][Progress:=======================>      79%] [Cov:============================>      81%][Progress:=======================>      79%] [Cov:============================>      81%][Progress:=======================>      79%] [Cov:============================>      81%][Progress:=======================>      79%] [Cov:============================>      81%][Progress:=======================>      79%] [Cov:============================>      81%][Progress:=======================>      79%] [Cov:============================>      81%][Progress:=======================>      79%] [Cov:============================>      81%][Progress:========================>     80%] [Cov:============================>      81%][Progress:========================>     80%] [Cov:============================>      81%][Progress:========================>     80%] [Cov:============================>      81%][Progress:========================>     80%] [Cov:============================>      81%][Progress:========================>     81%] [Cov:============================>      81%][Progress:========================>     81%] [Cov:============================>      81%][Progress:========================>     81%] [Cov:============================>      81%][Progress:========================>     81%] [Cov:============================>      81%][Progress:========================>     81%] [Cov:============================>      81%][Progress:========================>     81%] [Cov:============================>      81%][Progress:========================>     81%] [Cov:============================>      81%][Progress:========================>     81%] [Cov:============================>      81%][Progress:========================>     81%] [Cov:============================>      81%][Progress:========================>     81%] [Cov:============================>      81%][Progress:========================>     82%] [Cov:============================>      81%][Progress:========================>     82%] [Cov:============================>      81%][Progress:========================>     82%] [Cov:============================>      81%][Progress:========================>     82%] [Cov:============================>      81%][Progress:========================>     82%] [Cov:============================>      81%][Progress:========================>     82%] [Cov:============================>      81%][Progress:========================>     82%] [Cov:============================>      81%][Progress:========================>     82%] [Cov:============================>      81%][Progress:========================>     82%] [Cov:============================>      81%][Progress:========================>     82%] [Cov:============================>      81%][Progress:========================>     83%] [Cov:============================>      81%][Progress:========================>     83%] [Cov:============================>      81%][Progress:========================>     83%] [Cov:============================>      81%][Progress:========================>     83%] [Cov:============================>      81%][Progress:========================>     83%] [Cov:============================>      81%][Progress:========================>     83%] [Cov:============================>      81%][Progress:========================>     83%] [Cov:============================>      81%][Progress:========================>     83%] [Cov:============================>      81%][Progress:========================>     83%] [Cov:============================>      81%][Progress:========================>     83%] [Cov:============================>      81%][Progress:========================>     83%] [Cov:============================>      81%][Progress:========================>     83%] [Cov:============================>      81%][Progress:========================>     83%] [Cov:============================>      81%][Progress:========================>     83%] [Cov:============================>      81%][Progress:=========================>    84%] [Cov:============================>      81%][Progress:=========================>    84%] [Cov:============================>      81%][Progress:=========================>    84%] [Cov:============================>      81%][Progress:=========================>    84%] [Cov:============================>      81%][Progress:=========================>    84%] [Cov:============================>      81%][Progress:=========================>    84%] [Cov:============================>      81%][Progress:=========================>    84%] [Cov:============================>      81%][Progress:=========================>    84%] [Cov:============================>      81%][Progress:=========================>    84%] [Cov:============================>      81%][Progress:=========================>    84%] [Cov:============================>      81%][Progress:=========================>    85%] [Cov:============================>      81%][Progress:=========================>    85%] [Cov:============================>      81%][Progress:=========================>    85%] [Cov:============================>      81%][Progress:=========================>    85%] [Cov:============================>      81%][Progress:=========================>    85%] [Cov:============================>      81%][Progress:=========================>    85%] [Cov:============================>      81%][Progress:=========================>    85%] [Cov:============================>      81%][Progress:=========================>    85%] [Cov:============================>      81%][Progress:=========================>    85%] [Cov:============================>      81%][Progress:=========================>    85%] [Cov:============================>      81%][Progress:=========================>    85%] [Cov:============================>      81%][Progress:=========================>    86%] [Cov:============================>      81%][Progress:=========================>    86%] [Cov:============================>      81%][Progress:=========================>    86%] [Cov:============================>      81%][Progress:=========================>    86%] [Cov:============================>      81%][Progress:=========================>    86%] [Cov:============================>      81%][Progress:=========================>    86%] [Cov:============================>      81%][Progress:=========================>    86%] [Cov:============================>      81%][Progress:=========================>    86%] [Cov:============================>      81%][Progress:=========================>    86%] [Cov:============================>      81%][Progress:=========================>    86%] [Cov:============================>      81%][Progress:==========================>   87%] [Cov:============================>      81%][Progress:==========================>   87%] [Cov:============================>      81%][Progress:==========================>   87%] [Cov:============================>      81%][Progress:==========================>   87%] [Cov:============================>      81%][Progress:==========================>   87%] [Cov:============================>      81%][Progress:==========================>   87%] [Cov:============================>      81%][Progress:==========================>   87%] [Cov:============================>      81%][Progress:==========================>   88%] [Cov:============================>      81%][Progress:==========================>   88%] [Cov:============================>      81%][Progress:==========================>   88%] [Cov:============================>      81%][Progress:==========================>   88%] [Cov:============================>      81%][Progress:==========================>   88%] [Cov:============================>      81%][Progress:==========================>   88%] [Cov:============================>      81%][Progress:==========================>   88%] [Cov:============================>      81%][Progress:==========================>   88%] [Cov:============================>      81%][Progress:==========================>   88%] [Cov:============================>      81%][Progress:==========================>   88%] [Cov:============================>      81%][Progress:==========================>   88%] [Cov:============================>      81%][Progress:==========================>   88%] [Cov:============================>      81%][Progress:==========================>   89%] [Cov:============================>      81%][Progress:==========================>   89%] [Cov:============================>      81%][Progress:==========================>   89%] [Cov:============================>      81%][Progress:==========================>   89%] [Cov:============================>      81%][Progress:==========================>   89%] [Cov:============================>      81%][Progress:==========================>   89%] [Cov:============================>      81%][Progress:==========================>   89%] [Cov:============================>      81%][Progress:==========================>   89%] [Cov:============================>      81%][Progress:==========================>   89%] [Cov:============================>      81%][Progress:==========================>   89%] [Cov:============================>      81%][Progress:==========================>   89%] [Cov:============================>      81%][Progress:===========================>  90%] [Cov:============================>      81%][Progress:===========================>  90%] [Cov:============================>      81%][Progress:===========================>  90%] [Cov:============================>      81%][Progress:===========================>  90%] [Cov:============================>      81%][Progress:===========================>  90%] [Cov:============================>      81%][Progress:===========================>  90%] [Cov:============================>      81%][Progress:===========================>  90%] [Cov:============================>      81%][Progress:===========================>  90%] [Cov:============================>      81%][Progress:===========================>  90%] [Cov:============================>      81%][Progress:===========================>  90%] [Cov:============================>      81%][Progress:===========================>  90%] [Cov:============================>      81%][Progress:===========================>  90%] [Cov:============================>      81%][Progress:===========================>  91%] [Cov:============================>      81%][Progress:===========================>  91%] [Cov:============================>      81%][Progress:===========================>  91%] [Cov:============================>      81%][Progress:===========================>  91%] [Cov:============================>      81%][Progress:===========================>  91%] [Cov:============================>      81%][Progress:===========================>  91%] [Cov:============================>      81%][Progress:===========================>  91%] [Cov:============================>      81%][Progress:===========================>  91%] [Cov:============================>      81%][Progress:===========================>  91%] [Cov:============================>      81%][Progress:===========================>  91%] [Cov:============================>      81%][Progress:===========================>  91%] [Cov:============================>      81%][Progress:===========================>  91%] [Cov:============================>      81%][Progress:===========================>  91%] [Cov:============================>      81%][Progress:===========================>  91%] [Cov:============================>      81%][Progress:===========================>  92%] [Cov:============================>      81%][Progress:===========================>  92%] [Cov:============================>      81%][Progress:===========================>  92%] [Cov:============================>      81%][Progress:===========================>  92%] [Cov:============================>      81%][Progress:===========================>  92%] [Cov:============================>      81%][Progress:===========================>  92%] [Cov:============================>      81%][Progress:===========================>  92%] [Cov:============================>      81%][Progress:===========================>  92%] [Cov:============================>      81%][Progress:===========================>  93%] [Cov:============================>      81%][Progress:===========================>  93%] [Cov:============================>      81%][Progress:===========================>  93%] [Cov:============================>      81%][Progress:===========================>  93%] [Cov:============================>      81%][Progress:===========================>  93%] [Cov:============================>      81%][Progress:===========================>  93%] [Cov:============================>      81%][Progress:===========================>  93%] [Cov:============================>      81%][Progress:===========================>  93%] [Cov:============================>      81%][Progress:===========================>  93%] [Cov:============================>      81%][Progress:===========================>  93%] [Cov:============================>      81%][Progress:============================> 94%] [Cov:============================>      81%][Progress:============================> 94%] [Cov:============================>      81%][Progress:============================> 94%] [Cov:============================>      81%][Progress:============================> 94%] [Cov:============================>      81%][Progress:============================> 94%] [Cov:============================>      81%][Progress:============================> 94%] [Cov:============================>      81%][Progress:============================> 94%] [Cov:============================>      81%][Progress:============================> 94%] [Cov:============================>      81%][Progress:============================> 94%] [Cov:============================>      81%][Progress:============================> 95%] [Cov:============================>      81%][Progress:============================> 95%] [Cov:============================>      81%][Progress:============================> 95%] [Cov:============================>      81%][Progress:============================> 95%] [Cov:============================>      81%][Progress:============================> 95%] [Cov:============================>      81%][Progress:============================> 95%] [Cov:============================>      81%][Progress:============================> 95%] [Cov:============================>      81%][Progress:============================> 95%] [Cov:============================>      81%][Progress:============================> 96%] [Cov:============================>      81%][Progress:============================> 96%] [Cov:============================>      81%][Progress:============================> 96%] [Cov:============================>      81%][Progress:============================> 96%] [Cov:============================>      81%][Progress:============================> 96%] [Cov:============================>      81%][Progress:============================> 96%] [Cov:============================>      81%][Progress:============================> 96%] [Cov:============================>      81%][Progress:============================> 96%] [Cov:============================>      81%][Progress:============================> 96%] [Cov:============================>      81%][Progress:============================> 96%] [Cov:============================>      81%][Progress:=============================>97%] [Cov:============================>      81%][Progress:=============================>97%] [Cov:============================>      81%][Progress:=============================>97%] [Cov:============================>      81%][Progress:=============================>97%] [Cov:============================>      81%][Progress:=============================>97%] [Cov:============================>      81%][Progress:=============================>97%] [Cov:============================>      81%][Progress:=============================>97%] [Cov:============================>      81%][Progress:=============================>97%] [Cov:============================>      81%][Progress:=============================>97%] [Cov:============================>      81%][Progress:=============================>98%] [Cov:============================>      81%][Progress:=============================>98%] [Cov:============================>      81%][Progress:=============================>98%] [Cov:============================>      81%][Progress:=============================>98%] [Cov:============================>      81%][Progress:=============================>98%] [Cov:============================>      81%][Progress:=============================>98%] [Cov:============================>      81%][Progress:=============================>98%] [Cov:============================>      81%][Progress:=============================>98%] [Cov:============================>      81%][Progress:=============================>98%] [Cov:============================>      81%][Progress:=============================>98%] [Cov:============================>      81%][Progress:=============================>98%] [Cov:============================>      81%][Progress:=============================>98%] [Cov:============================>      81%][Progress:=============================>98%] [Cov:============================>      81%][Progress:=============================>99%] [Cov:============================>      81%][Progress:=============================>99%] [Cov:============================>      81%][Progress:=============================>99%] [Cov:============================>      81%][Progress:=============================>99%] [Cov:============================>      81%][Progress:=============================>99%] [Cov:============================>      81%][Progress:=============================>99%] [Cov:============================>      81%][Progress:=============================>99%] [Cov:============================>      81%][Progress:=============================>99%] [Cov:============================>      81%][Progress:=============================>99%] [Cov:============================>      81%][Progress:=============================>99%] [Cov:============================>      81%][Progress:==============================100%] [Cov:============================>      81%][Progress:==============================100%] [Cov:============================>      81%][Progress:==============================100%] [Cov:============================>      81%][Progress:==============================100%] [Cov:============================>      81%][Progress:==============================100%] [Cov:============================>      81%][Progress:==============================100%] [Cov:============================>      81%][Progress:==============================100%] [Cov:============================>      81%][Progress:==============================100%] [Cov:============================>      81%][Progress:==============================100%] [Cov:============================>      81%][Progress:==============================100%] [Cov:============================>      81%]
* Search finished after 101s and 766 generations, 328892 statements, best individual has fitness: 34.0
* Generated before the refinement 13 tests with total length 44
statement is: java.util.HashMap()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type java.util.HashMap<java.text.AttributedCharacterIterator$Attribute, java.lang.Object>
statement code is: HashMap<AttributedCharacterIterator.Attribute, Object> hashMap = new HashMap<AttributedCharacterIterator.Attribute, Object>()
statement is: java.awt.Font(Ljava/util/Map;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.awt.Font
statement code is: Font font = new Font(arg0)
statement is: ghm.follow.search.SearchableTextPane(Ljava/awt/Font;I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class ghm.follow.search.SearchableTextPane
statement code is: SearchableTextPane searchableTextPane = new SearchableTextPane(arg0, 1)
statement is: search(Ljava/lang/String;I)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int search = searchableTextPane.search("NdR_Q>8Rz5:VwD}mL*", 0)
test data is: HashMap<AttributedCharacterIterator.Attribute, Object> hashMap = new HashMap<AttributedCharacterIterator.Attribute, Object>();
Font font = new Font(hashMap);
SearchableTextPane searchableTextPane = new SearchableTextPane(font, 1);
searchableTextPane.search("NdR_Q>8Rz5:VwD}mL*", 0);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        HashMap<AttributedCharacterIterator.Attribute, Object> hashMap = new HashMap<AttributedCharacterIterator.Attribute, Object>();
        hashMap.put(LANGUAGE, "en");
        hashMap.put(FAMILY, "Helvetica");
        hashMap.put(SIZE, 12);
        Font font = new Font(hashMap);
        SearchableTextPane searchableTextPane = new SearchableTextPane(font, 1);
        searchableTextPane.search("This is a test string for searching", 0);
    }
}
statement is: HashMap<AttributedCharacterIterator.Attribute, Object> hashMap = new HashMap<AttributedCharacterIterator.Attribute, Object>(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: hashMap.put(LANGUAGE, "en"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: hashMap.put(LANGUAGE, "en") target is: hashMap method is: put(java.lang.String)
statement is: hashMap.put(FAMILY, "Helvetica"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: hashMap.put(FAMILY, "Helvetica") target is: hashMap method is: put(java.lang.String)
statement is: hashMap.put(SIZE, 12), class spoon.support.reflect.code.CtInvocationImpl
invocation is: hashMap.put(SIZE, 12) target is: hashMap method is: put(int)
statement is: Font font = new Font(hashMap), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: SearchableTextPane searchableTextPane = new SearchableTextPane(font, 1), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: searchableTextPane.search("This is a test string for searching", 0), class spoon.support.reflect.code.CtInvocationImpl
invocation is: searchableTextPane.search("This is a test string for searching", 0) target is: searchableTextPane method is: search(java.lang.String,int)
source statement: ghm.follow.search.SearchableTextPane(Ljava/awt/Font;I)V callee: VariableReference: Statement 2, type ghm.follow.search.SearchableTextPaneindex is: 3
Matched Method is: search(Ljava/lang/String;I)I
TestCase is: HashMap<AttributedCharacterIterator.Attribute, Object> hashMap = new HashMap<AttributedCharacterIterator.Attribute, Object>();
Font font = new Font(hashMap);
int _int = 1;
SearchableTextPane searchableTextPane = new SearchableTextPane(font, _int);
String string = "This is a test string for searching";
int _int = 0;
((SearchableTextPane) _int).search(string, _int);

statement is: ghm.follow.search.SearchableTextPane(Ljava/awt/Font;I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class ghm.follow.search.SearchableTextPane
statement code is: SearchableTextPane searchableTextPane = new SearchableTextPane((Font) null, (-473))
statement is: highlight(Ljava/lang/String;I)Ljava/util/List; type is: class org.evosuite.testcase.statements.MethodStatement return type java.util.List<ghm.follow.search.LineResult>
statement code is: List<LineResult> highlight = searchableTextPane.highlight("|whdRvB:-B\"Z8K%r", (-473))
test data is: SearchableTextPane searchableTextPane = new SearchableTextPane((Font) null, (-473));
searchableTextPane.highlight("|whdRvB:-B\"Z8K%r", (-473));

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        SearchableTextPane searchableTextPane = new SearchableTextPane(new Font("Arial", Font.PLAIN, 12), 50);
        searchableTextPane.highlight("This is a sample text to be searched.", 50);
    }
}
statement is: SearchableTextPane searchableTextPane = new SearchableTextPane(new Font("Arial", Font.PLAIN, 12), 50), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: searchableTextPane.highlight("This is a sample text to be searched.", 50), class spoon.support.reflect.code.CtInvocationImpl
invocation is: searchableTextPane.highlight("This is a sample text to be searched.", 50) target is: searchableTextPane method is: highlight(java.lang.String,int)
source statement: ghm.follow.search.SearchableTextPane(Ljava/awt/Font;I)V callee: VariableReference: Statement 0, type ghm.follow.search.SearchableTextPaneindex is: 1
Matched Method is: highlight(Ljava/lang/String;I)Ljava/util/List;
TestCase is: int _int = 50;
SearchableTextPane searchableTextPane = new SearchableTextPane((Font) _int, (-473));
String string = "This is a sample text to be searched.";
int _int = 50;
((SearchableTextPane) _int).highlight(string, _int);

statement is: java.util.HashMap()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type java.util.HashMap<java.text.Format$Field, java.lang.Object>
statement code is: HashMap<Format.Field, Object> hashMap = new HashMap<Format.Field, Object>()
statement is: java.awt.Font(Ljava/util/Map;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.awt.Font
statement code is: Font font = new Font(arg0)
statement is: ghm.follow.search.SearchableTextPane(Ljava/awt/Font;I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class ghm.follow.search.SearchableTextPane
statement code is: SearchableTextPane searchableTextPane = new SearchableTextPane(arg0, 1)
statement is: getScrollableTracksViewportWidth()Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean scrollableTracksViewportWidth = searchableTextPane.getScrollableTracksViewportWidth()
test data is: HashMap<Format.Field, Object> hashMap = new HashMap<Format.Field, Object>();
Font font = new Font(hashMap);
SearchableTextPane searchableTextPane = new SearchableTextPane(font, 1);
searchableTextPane.getScrollableTracksViewportWidth();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        HashMap<Format.Field, Object> hashMap = new HashMap<Format.Field, Object>();
        hashMap.put(FONT_NAME, "Times New Roman");
        hashMap.put(FONT_SIZE, 14);
        Font font = new Font(hashMap);
        SearchableTextPane searchableTextPane = new SearchableTextPane(font, 1);
        searchableTextPane.getScrollableTracksViewportWidth();
    }
}
statement is: HashMap<Format.Field, Object> hashMap = new HashMap<Format.Field, Object>(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: hashMap.put(FONT_NAME, "Times New Roman"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: hashMap.put(FONT_NAME, "Times New Roman") target is: hashMap method is: put(java.lang.String)
statement is: hashMap.put(FONT_SIZE, 14), class spoon.support.reflect.code.CtInvocationImpl
invocation is: hashMap.put(FONT_SIZE, 14) target is: hashMap method is: put(int)
statement is: Font font = new Font(hashMap), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: SearchableTextPane searchableTextPane = new SearchableTextPane(font, 1), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: searchableTextPane.getScrollableTracksViewportWidth(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: searchableTextPane.getScrollableTracksViewportWidth() target is: searchableTextPane method is: getScrollableTracksViewportWidth()
source statement: ghm.follow.search.SearchableTextPane(Ljava/awt/Font;I)V callee: VariableReference: Statement 2, type ghm.follow.search.SearchableTextPaneindex is: 3
Matched Method is: getScrollableTracksViewportWidth()Z
TestCase is: HashMap<Format.Field, Object> hashMap = new HashMap<Format.Field, Object>();
Font font = new Font(hashMap);
int _int = 1;
SearchableTextPane searchableTextPane = new SearchableTextPane(font, _int);
((SearchableTextPane) _int).getScrollableTracksViewportWidth();

statement is: ghm.follow.search.SearchableTextPane(Ljava/awt/Font;I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class ghm.follow.search.SearchableTextPane
statement code is: SearchableTextPane searchableTextPane = new SearchableTextPane((Font) null, (-4875))
statement is: javax.swing.JScrollPane(Ljava/awt/Component;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class javax.swing.JScrollPane
statement code is: JScrollPane jScrollPane = new JScrollPane(arg0)
statement is: getScrollableTracksViewportWidth()Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean scrollableTracksViewportWidth = searchableTextPane.getScrollableTracksViewportWidth()
test data is: SearchableTextPane searchableTextPane = new SearchableTextPane((Font) null, (-4875));
JScrollPane jScrollPane = new JScrollPane(searchableTextPane);
searchableTextPane.getScrollableTracksViewportWidth();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        SearchableTextPane searchableTextPane = new SearchableTextPane(new Font("Arial", Font.BOLD, 16), "The quick brown fox jumps over the lazy dog.");
        JScrollPane jScrollPane = new JScrollPane(searchableTextPane);
        searchableTextPane.getScrollableTracksViewportWidth();
    }
}
statement is: SearchableTextPane searchableTextPane = new SearchableTextPane(new Font("Arial", Font.BOLD, 16), "The quick brown fox jumps over the lazy dog."), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JScrollPane jScrollPane = new JScrollPane(searchableTextPane), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: searchableTextPane.getScrollableTracksViewportWidth(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: searchableTextPane.getScrollableTracksViewportWidth() target is: searchableTextPane method is: getScrollableTracksViewportWidth()
source statement: ghm.follow.search.SearchableTextPane(Ljava/awt/Font;I)V callee: VariableReference: Statement 0, type ghm.follow.search.SearchableTextPaneindex is: 1
Matched Method is: getScrollableTracksViewportWidth()Z
TestCase is: String string = "The quick brown fox jumps over the lazy dog.";
SearchableTextPane searchableTextPane = new SearchableTextPane((Font) string, (-4875));
JScrollPane jScrollPane = new JScrollPane(searchableTextPane);
((SearchableTextPane) string).getScrollableTracksViewportWidth();

statement is: ghm.follow.search.SearchableTextPane(Ljava/awt/Font;I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class ghm.follow.search.SearchableTextPane
statement code is: SearchableTextPane searchableTextPane = new SearchableTextPane((Font) null, (-4875))
statement is: setBorder(Ljavax/swing/border/Border;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: searchableTextPane.setBorder((Border) null)
statement is: setLineWrap(Z)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: searchableTextPane.setLineWrap(true)
statement is: javax.swing.JScrollPane(Ljava/awt/Component;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class javax.swing.JScrollPane
statement code is: JScrollPane jScrollPane = new JScrollPane(arg0)
statement is: getScrollableTracksViewportWidth()Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean scrollableTracksViewportWidth = searchableTextPane.getScrollableTracksViewportWidth()
test data is: SearchableTextPane searchableTextPane = new SearchableTextPane((Font) null, (-4875));
searchableTextPane.setBorder((Border) null);
searchableTextPane.setLineWrap(true);
JScrollPane jScrollPane = new JScrollPane(searchableTextPane);
searchableTextPane.getScrollableTracksViewportWidth();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        SearchableTextPane searchableTextPane = new SearchableTextPane(new Font("Times New Roman", Font.PLAIN, 12), "This is a long piece of text that will be used to test the search functionality.");
        searchableTextPane.setBorder(null);
        searchableTextPane.setLineWrap(true);
        JScrollPane jScrollPane = new JScrollPane(searchableTextPane);
        searchableTextPane.getScrollableTracksViewportWidth();
    }
}
statement is: SearchableTextPane searchableTextPane = new SearchableTextPane(new Font("Times New Roman", Font.PLAIN, 12), "This is a long piece of text that will be used to test the search functionality."), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: searchableTextPane.setBorder(null), class spoon.support.reflect.code.CtInvocationImpl
invocation is: searchableTextPane.setBorder(null) target is: searchableTextPane method is: setBorder(<unknown>)
source statement: ghm.follow.search.SearchableTextPane(Ljava/awt/Font;I)V callee: VariableReference: Statement 0, type ghm.follow.search.SearchableTextPaneindex is: 1
Matched Method is: setBorder(Ljavax/swing/border/Border;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: searchableTextPane.setLineWrap(true), class spoon.support.reflect.code.CtInvocationImpl
invocation is: searchableTextPane.setLineWrap(true) target is: searchableTextPane method is: setLineWrap(boolean)
source statement: ghm.follow.search.SearchableTextPane(Ljava/awt/Font;I)V callee: VariableReference: Statement 0, type ghm.follow.search.SearchableTextPaneindex is: 1
Matched Method is: setLineWrap(Z)V
statement is: JScrollPane jScrollPane = new JScrollPane(searchableTextPane), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: searchableTextPane.getScrollableTracksViewportWidth(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: searchableTextPane.getScrollableTracksViewportWidth() target is: searchableTextPane method is: getScrollableTracksViewportWidth()
source statement: ghm.follow.search.SearchableTextPane(Ljava/awt/Font;I)V callee: VariableReference: Statement 0, type ghm.follow.search.SearchableTextPaneindex is: 1
Matched Method is: getScrollableTracksViewportWidth()Z
TestCase is: String string = "This is a long piece of text that will be used to test the search functionality.";
SearchableTextPane searchableTextPane = new SearchableTextPane((Font) string, (-4875));
Border border = null;
((JComponent) string).setBorder(border);
boolean _boolean = true;
((JTextArea) string).setLineWrap(_boolean);
JScrollPane jScrollPane = new JScrollPane(searchableTextPane);
((SearchableTextPane) string).getScrollableTracksViewportWidth();

statement is: ghm.follow.search.SearchableTextPane(Ljava/awt/Font;I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class ghm.follow.search.SearchableTextPane
statement code is: SearchableTextPane searchableTextPane = new SearchableTextPane((Font) null, 1679)
statement is: highlight(Ljava/lang/String;I)Ljava/util/List; type is: class org.evosuite.testcase.statements.MethodStatement return type java.util.List<ghm.follow.search.LineResult>
statement code is: List<LineResult> highlight = searchableTextPane.highlight((String) null, 1679)
test data is: SearchableTextPane searchableTextPane = new SearchableTextPane((Font) null, 1679);
searchableTextPane.highlight((String) null, 1679);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        SearchableTextPane searchableTextPane = new SearchableTextPane(new Font("Arial", Font.PLAIN, 12), "This is a test string for the SearchableTextPane");
        searchableTextPane.highlight("test", 500);
    }
}
statement is: SearchableTextPane searchableTextPane = new SearchableTextPane(new Font("Arial", Font.PLAIN, 12), "This is a test string for the SearchableTextPane"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: searchableTextPane.highlight("test", 500), class spoon.support.reflect.code.CtInvocationImpl
invocation is: searchableTextPane.highlight("test", 500) target is: searchableTextPane method is: highlight(java.lang.String,int)
source statement: ghm.follow.search.SearchableTextPane(Ljava/awt/Font;I)V callee: VariableReference: Statement 0, type ghm.follow.search.SearchableTextPaneindex is: 1
Matched Method is: highlight(Ljava/lang/String;I)Ljava/util/List;
TestCase is: String string = "This is a test string for the SearchableTextPane";
SearchableTextPane searchableTextPane = new SearchableTextPane((Font) string, 1679);
String string = "test";
int _int = 500;
((SearchableTextPane) string).highlight(string, _int);

statement is: java.util.HashMap()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type java.util.HashMap<java.text.AttributedCharacterIterator$Attribute, ghm.follow.search.LineResult>
statement code is: HashMap<AttributedCharacterIterator.Attribute, LineResult> hashMap = new HashMap<AttributedCharacterIterator.Attribute, LineResult>()
statement is: java.awt.Font(Ljava/util/Map;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.awt.Font
statement code is: Font font = new Font(arg0)
statement is: ghm.follow.search.SearchableTextPane(Ljava/awt/Font;I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class ghm.follow.search.SearchableTextPane
statement code is: SearchableTextPane searchableTextPane = new SearchableTextPane(arg0, 5223)
statement is: highlight(Ljava/lang/String;I)Ljava/util/List; type is: class org.evosuite.testcase.statements.MethodStatement return type java.util.List<ghm.follow.search.LineResult>
statement code is: List<LineResult> highlight = searchableTextPane.highlight("", 5223)
test data is: HashMap<AttributedCharacterIterator.Attribute, LineResult> hashMap = new HashMap<AttributedCharacterIterator.Attribute, LineResult>();
Font font = new Font(hashMap);
SearchableTextPane searchableTextPane = new SearchableTextPane(font, 5223);
searchableTextPane.highlight("", 5223);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        HashMap<AttributedCharacterIterator.Attribute, LineResult> hashMap = new HashMap<AttributedCharacterIterator.Attribute, LineResult>();
        Font font = new Font(hashMap);
        SearchableTextPane searchableTextPane = new SearchableTextPane(font, 10000);
        searchableTextPane.highlight("Sample text", 10000);
    }
}
statement is: HashMap<AttributedCharacterIterator.Attribute, LineResult> hashMap = new HashMap<AttributedCharacterIterator.Attribute, LineResult>(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Font font = new Font(hashMap), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: SearchableTextPane searchableTextPane = new SearchableTextPane(font, 10000), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: searchableTextPane.highlight("Sample text", 10000), class spoon.support.reflect.code.CtInvocationImpl
invocation is: searchableTextPane.highlight("Sample text", 10000) target is: searchableTextPane method is: highlight(java.lang.String,int)
source statement: ghm.follow.search.SearchableTextPane(Ljava/awt/Font;I)V callee: VariableReference: Statement 2, type ghm.follow.search.SearchableTextPaneindex is: 3
Matched Method is: highlight(Ljava/lang/String;I)Ljava/util/List;
TestCase is: HashMap<AttributedCharacterIterator.Attribute, LineResult> hashMap = new HashMap<AttributedCharacterIterator.Attribute, LineResult>();
Font font = new Font(hashMap);
int _int = 10000;
SearchableTextPane searchableTextPane = new SearchableTextPane(font, _int);
String string = "Sample text";
int _int = 10000;
((SearchableTextPane) _int).highlight(string, _int);

statement is: decode(Ljava/lang/String;)Ljava/awt/Font; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.awt.Font
statement code is: Font decode = Font.decode((String) null)
statement is: ghm.follow.search.SearchableTextPane(Ljava/awt/Font;I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class ghm.follow.search.SearchableTextPane
statement code is: SearchableTextPane searchableTextPane = new SearchableTextPane(arg0, 4859)
statement is: search(Ljava/lang/String;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int search = searchableTextPane.search((String) null)
test data is: Font decode = Font.decode((String) null);
SearchableTextPane searchableTextPane = new SearchableTextPane(decode, 4859);
searchableTextPane.search((String) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Font decode = Font.decode("Arial");
        SearchableTextPane searchableTextPane = new SearchableTextPane(decode, "John Doe is a great developer.");
        searchableTextPane.search("developer");
    }
}
statement is: Font decode = Font.decode("Arial"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: Font.decode("Arial") target is: Font method is: decode(java.lang.String)
Matched Method is: decode(Ljava/lang/String;)Ljava/awt/Font;
statement is: SearchableTextPane searchableTextPane = new SearchableTextPane(decode, "John Doe is a great developer."), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: searchableTextPane.search("developer"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: searchableTextPane.search("developer") target is: searchableTextPane method is: search(java.lang.String)
source statement: ghm.follow.search.SearchableTextPane(Ljava/awt/Font;I)V callee: VariableReference: Statement 1, type ghm.follow.search.SearchableTextPaneindex is: 3
Matched Method is: search(Ljava/lang/String;)I
TestCase is: String string = "Arial";
Font decode = Font.decode(string);
String string = "John Doe is a great developer.";
SearchableTextPane searchableTextPane = new SearchableTextPane(decode, (int) string);
String string = "developer";
((SearchableTextPane) decode).search(string);

statement is: java.util.HashMap()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type java.util.HashMap<java.text.AttributedCharacterIterator$Attribute, java.lang.Object>
statement code is: HashMap<AttributedCharacterIterator.Attribute, Object> hashMap = new HashMap<AttributedCharacterIterator.Attribute, Object>()
statement is: java.awt.Font(Ljava/util/Map;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.awt.Font
statement code is: Font font = new Font(arg0)
statement is: ghm.follow.search.SearchableTextPane(Ljava/awt/Font;I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class ghm.follow.search.SearchableTextPane
statement code is: SearchableTextPane searchableTextPane = new SearchableTextPane(arg0, 1)
statement is: search(Ljava/lang/String;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int search = searchableTextPane.search(".e5.--k%r[R]*JO!Jwa")
test data is: HashMap<AttributedCharacterIterator.Attribute, Object> hashMap = new HashMap<AttributedCharacterIterator.Attribute, Object>();
Font font = new Font(hashMap);
SearchableTextPane searchableTextPane = new SearchableTextPane(font, 1);
searchableTextPane.search(".e5.--k%r[R]*JO!Jwa");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        HashMap<AttributedCharacterIterator.Attribute, Object> hashMap = new HashMap<AttributedCharacterIterator.Attribute, Object>();
        Font font = new Font(hashMap);
        SearchableTextPane searchableTextPane = new SearchableTextPane(font, 1);
        searchableTextPane.search("This is a sample text to be searched");
    }
}
statement is: HashMap<AttributedCharacterIterator.Attribute, Object> hashMap = new HashMap<AttributedCharacterIterator.Attribute, Object>(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Font font = new Font(hashMap), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: SearchableTextPane searchableTextPane = new SearchableTextPane(font, 1), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: searchableTextPane.search("This is a sample text to be searched"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: searchableTextPane.search("This is a sample text to be searched") target is: searchableTextPane method is: search(java.lang.String)
source statement: ghm.follow.search.SearchableTextPane(Ljava/awt/Font;I)V callee: VariableReference: Statement 2, type ghm.follow.search.SearchableTextPaneindex is: 3
Matched Method is: search(Ljava/lang/String;)I
TestCase is: HashMap<AttributedCharacterIterator.Attribute, Object> hashMap = new HashMap<AttributedCharacterIterator.Attribute, Object>();
Font font = new Font(hashMap);
int _int = 1;
SearchableTextPane searchableTextPane = new SearchableTextPane(font, _int);
String string = "This is a sample text to be searched";
((SearchableTextPane) _int).search(string);

statement is: java.util.HashMap()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type java.util.HashMap<java.text.AttributedCharacterIterator$Attribute, java.lang.Object>
statement code is: HashMap<AttributedCharacterIterator.Attribute, Object> hashMap = new HashMap<AttributedCharacterIterator.Attribute, Object>()
statement is: java.awt.Font(Ljava/util/Map;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.awt.Font
statement code is: Font font = new Font(arg0)
statement is: ghm.follow.search.SearchableTextPane(Ljava/awt/Font;I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class ghm.follow.search.SearchableTextPane
statement code is: SearchableTextPane searchableTextPane = new SearchableTextPane(arg0, 1)
statement is: highlight(Ljava/lang/String;I)Ljava/util/List; type is: class org.evosuite.testcase.statements.MethodStatement return type java.util.List<ghm.follow.search.LineResult>
statement code is: List<LineResult> highlight = searchableTextPane.highlight("NdR_Q>8Rz5:VwD}mL*", 1)
test data is: HashMap<AttributedCharacterIterator.Attribute, Object> hashMap = new HashMap<AttributedCharacterIterator.Attribute, Object>();
Font font = new Font(hashMap);
SearchableTextPane searchableTextPane = new SearchableTextPane(font, 1);
searchableTextPane.highlight("NdR_Q>8Rz5:VwD}mL*", 1);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        HashMap<AttributedCharacterIterator.Attribute, Object> attrs = new HashMap<>();
        attrs.put(FAMILY, "Helvetica");
        attrs.put(SIZE, 14);
        Font font = new Font(attrs);
        SearchableTextPane searchableTextPane = new SearchableTextPane(font, 1);
        searchableTextPane.highlight("Hello World!", 1);
    }
}
statement is: HashMap<AttributedCharacterIterator.Attribute, Object> attrs = new HashMap<>(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: attrs.put(FAMILY, "Helvetica"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: attrs.put(FAMILY, "Helvetica") target is: attrs method is: put(java.lang.String)
statement is: attrs.put(SIZE, 14), class spoon.support.reflect.code.CtInvocationImpl
invocation is: attrs.put(SIZE, 14) target is: attrs method is: put(int)
statement is: Font font = new Font(attrs), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: SearchableTextPane searchableTextPane = new SearchableTextPane(font, 1), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: searchableTextPane.highlight("Hello World!", 1), class spoon.support.reflect.code.CtInvocationImpl
invocation is: searchableTextPane.highlight("Hello World!", 1) target is: searchableTextPane method is: highlight(java.lang.String,int)
source statement: ghm.follow.search.SearchableTextPane(Ljava/awt/Font;I)V callee: VariableReference: Statement 2, type ghm.follow.search.SearchableTextPaneindex is: 3
Matched Method is: highlight(Ljava/lang/String;I)Ljava/util/List;
TestCase is: HashMap<AttributedCharacterIterator.Attribute, Object> hashMap = new HashMap<AttributedCharacterIterator.Attribute, Object>();
Font font = new Font(hashMap);
int _int = 1;
SearchableTextPane searchableTextPane = new SearchableTextPane(font, _int);
String string = "Hello World!";
int _int = 1;
((SearchableTextPane) _int).highlight(string, _int);

statement is: java.util.HashMap()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type java.util.HashMap<java.text.AttributedCharacterIterator$Attribute, java.lang.Object>
statement code is: HashMap<AttributedCharacterIterator.Attribute, Object> hashMap = new HashMap<AttributedCharacterIterator.Attribute, Object>()
statement is: java.awt.Font(Ljava/util/Map;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.awt.Font
statement code is: Font font = new Font(arg0)
statement is: ghm.follow.search.SearchableTextPane(Ljava/awt/Font;I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class ghm.follow.search.SearchableTextPane
statement code is: SearchableTextPane searchableTextPane = new SearchableTextPane(arg0, 1)
statement is: removeHighlights()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: searchableTextPane.removeHighlights()
test data is: HashMap<AttributedCharacterIterator.Attribute, Object> hashMap = new HashMap<AttributedCharacterIterator.Attribute, Object>();
Font font = new Font(hashMap);
SearchableTextPane searchableTextPane = new SearchableTextPane(font, 1);
searchableTextPane.removeHighlights();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        HashMap<AttributedCharacterIterator.Attribute, Object> hashMap = new HashMap<AttributedCharacterIterator.Attribute, Object>();
        hashMap.put(FAMILY, "Arial");
        hashMap.put(SIZE, 12);
        Font font = new Font(hashMap);
        SearchableTextPane searchableTextPane = new SearchableTextPane(font, 1);
        searchableTextPane.removeHighlights();
    }
}
statement is: HashMap<AttributedCharacterIterator.Attribute, Object> hashMap = new HashMap<AttributedCharacterIterator.Attribute, Object>(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: hashMap.put(FAMILY, "Arial"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: hashMap.put(FAMILY, "Arial") target is: hashMap method is: put(java.lang.String)
statement is: hashMap.put(SIZE, 12), class spoon.support.reflect.code.CtInvocationImpl
invocation is: hashMap.put(SIZE, 12) target is: hashMap method is: put(int)
statement is: Font font = new Font(hashMap), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: SearchableTextPane searchableTextPane = new SearchableTextPane(font, 1), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: searchableTextPane.removeHighlights(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: searchableTextPane.removeHighlights() target is: searchableTextPane method is: removeHighlights()
source statement: ghm.follow.search.SearchableTextPane(Ljava/awt/Font;I)V callee: VariableReference: Statement 2, type ghm.follow.search.SearchableTextPaneindex is: 3
Matched Method is: removeHighlights()V
TestCase is: HashMap<AttributedCharacterIterator.Attribute, Object> hashMap = new HashMap<AttributedCharacterIterator.Attribute, Object>();
Font font = new Font(hashMap);
int _int = 1;
SearchableTextPane searchableTextPane = new SearchableTextPane(font, _int);
((SearchableTextPane) _int).removeHighlights();

statement is: ghm.follow.search.SearchableTextPane(Ljava/awt/Font;I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class ghm.follow.search.SearchableTextPane
statement code is: SearchableTextPane searchableTextPane = new SearchableTextPane((Font) null, 4859)
statement is: search(Ljava/lang/String;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int search = searchableTextPane.search("")
test data is: SearchableTextPane searchableTextPane = new SearchableTextPane((Font) null, 4859);
searchableTextPane.search("");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        SearchableTextPane searchableTextPane = new SearchableTextPane(new Font("Arial", Font.BOLD, 16), 4859);
        searchableTextPane.search("Hello, World!");
    }
}
statement is: SearchableTextPane searchableTextPane = new SearchableTextPane(new Font("Arial", Font.BOLD, 16), 4859), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: searchableTextPane.search("Hello, World!"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: searchableTextPane.search("Hello, World!") target is: searchableTextPane method is: search(java.lang.String)
source statement: ghm.follow.search.SearchableTextPane(Ljava/awt/Font;I)V callee: VariableReference: Statement 0, type ghm.follow.search.SearchableTextPaneindex is: 1
Matched Method is: search(Ljava/lang/String;)I
TestCase is: int _int = 4859;
SearchableTextPane searchableTextPane = new SearchableTextPane((Font) _int, 4859);
String string = "Hello, World!";
((SearchableTextPane) _int).search(string);

statement is: java.awt.Font(Ljava/lang/String;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.awt.Font
statement code is: Font font = new Font("", (-1975), 796)
statement is: ghm.follow.search.SearchableTextPane(Ljava/awt/Font;I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class ghm.follow.search.SearchableTextPane
statement code is: SearchableTextPane searchableTextPane = new SearchableTextPane(arg0, (-1))
statement is: search(Ljava/lang/String;I)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int search = searchableTextPane.search("", (-642))
test data is: Font font = new Font("", (-1975), 796);
SearchableTextPane searchableTextPane = new SearchableTextPane(font, (-1));
searchableTextPane.search("", (-642));

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Font font = new Font("Arial", 12, 796);// Arial font with a size of 12 points and line height of 796 pixels

        SearchableTextPane searchableTextPane = new SearchableTextPane(font, Color.BLACK);// Black color for the text pane background

        searchableTextPane.search("The quick brown fox jumps over the lazy dog", 12345);// The text to be searched and the starting position of the search }}

    }
}
statement is: Font font = new Font("Arial", 12, 796)// Arial font with a size of 12 points and line height of 796 pixels
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: SearchableTextPane searchableTextPane = new SearchableTextPane(font, Color.BLACK)// Black color for the text pane background
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: searchableTextPane.search("The quick brown fox jumps over the lazy dog", 12345)// The text to be searched and the starting position of the search }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: searchableTextPane.search("The quick brown fox jumps over the lazy dog", 12345)// The text to be searched and the starting position of the search }}
 target is: searchableTextPane method is: search(java.lang.String,int)
source statement: ghm.follow.search.SearchableTextPane(Ljava/awt/Font;I)V callee: VariableReference: Statement 1, type ghm.follow.search.SearchableTextPaneindex is: 4
Matched Method is: search(Ljava/lang/String;I)I
TestCase is: String string = "Arial";
int _int = 12;
int _int = 796;
Font font = new Font(string, _int, _int);
SearchableTextPane searchableTextPane = new SearchableTextPane(font, (-1));
String string = "The quick brown fox jumps over the lazy dog";
int _int = 12345;
((SearchableTextPane) _int).search(string, _int);

* test suite isTestSuite: 26
Test 0: 
HashMap<AttributedCharacterIterator.Attribute, Object> hashMap = new HashMap<AttributedCharacterIterator.Attribute, Object>();
Font font = new Font(hashMap);
SearchableTextPane searchableTextPane = new SearchableTextPane(font, 1);
searchableTextPane.search("NdR_Q>8Rz5:VwD}mL*", 0);
Test 1: 
SearchableTextPane searchableTextPane = new SearchableTextPane((Font) null, (-473));
searchableTextPane.highlight("|whdRvB:-B\"Z8K%r", (-473));
Test 2: 
HashMap<Format.Field, Object> hashMap = new HashMap<Format.Field, Object>();
Font font = new Font(hashMap);
SearchableTextPane searchableTextPane = new SearchableTextPane(font, 1);
searchableTextPane.getScrollableTracksViewportWidth();
Test 3: 
SearchableTextPane searchableTextPane = new SearchableTextPane((Font) null, (-4875));
JScrollPane jScrollPane = new JScrollPane(searchableTextPane);
searchableTextPane.getScrollableTracksViewportWidth();
Test 4: 
SearchableTextPane searchableTextPane = new SearchableTextPane((Font) null, (-4875));
searchableTextPane.setBorder((Border) null);
searchableTextPane.setLineWrap(true);
JScrollPane jScrollPane = new JScrollPane(searchableTextPane);
searchableTextPane.getScrollableTracksViewportWidth();
Test 5: 
SearchableTextPane searchableTextPane = new SearchableTextPane((Font) null, 1679);
searchableTextPane.highlight((String) null, 1679);
Test 6: 
HashMap<AttributedCharacterIterator.Attribute, LineResult> hashMap = new HashMap<AttributedCharacterIterator.Attribute, LineResult>();
Font font = new Font(hashMap);
SearchableTextPane searchableTextPane = new SearchableTextPane(font, 5223);
searchableTextPane.highlight("", 5223);
Test 7: 
Font decode = Font.decode((String) null);
SearchableTextPane searchableTextPane = new SearchableTextPane(decode, 4859);
searchableTextPane.search((String) null);
Test 8: 
HashMap<AttributedCharacterIterator.Attribute, Object> hashMap = new HashMap<AttributedCharacterIterator.Attribute, Object>();
Font font = new Font(hashMap);
SearchableTextPane searchableTextPane = new SearchableTextPane(font, 1);
searchableTextPane.search(".e5.--k%r[R]*JO!Jwa");
Test 9: 
HashMap<AttributedCharacterIterator.Attribute, Object> hashMap = new HashMap<AttributedCharacterIterator.Attribute, Object>();
Font font = new Font(hashMap);
SearchableTextPane searchableTextPane = new SearchableTextPane(font, 1);
searchableTextPane.highlight("NdR_Q>8Rz5:VwD}mL*", 1);
Test 10: 
HashMap<AttributedCharacterIterator.Attribute, Object> hashMap = new HashMap<AttributedCharacterIterator.Attribute, Object>();
Font font = new Font(hashMap);
SearchableTextPane searchableTextPane = new SearchableTextPane(font, 1);
searchableTextPane.removeHighlights();
Test 11: 
SearchableTextPane searchableTextPane = new SearchableTextPane((Font) null, 4859);
searchableTextPane.search("");
Test 12: 
Font font = new Font("", (-1975), 796);
SearchableTextPane searchableTextPane = new SearchableTextPane(font, (-1));
searchableTextPane.search("", (-642));
Test 13: 
HashMap<AttributedCharacterIterator.Attribute, Object> hashMap = new HashMap<AttributedCharacterIterator.Attribute, Object>();
Font font = new Font(hashMap);
SearchableTextPane searchableTextPane = new SearchableTextPane(font, 1);
((SearchableTextPane)1).search("This is a test string for searching", 0);

Test 14: 
int _int = 50;
SearchableTextPane searchableTextPane = new SearchableTextPane((Font) 50, (-473));
String string = "This is a sample text to be searched.";
int _int = 50;
((SearchableTextPane) _int).highlight(string, _int);

Test 15: 
HashMap<Format.Field, Object> hashMap = new HashMap<Format.Field, Object>();
Font font = new Font(hashMap);
SearchableTextPane searchableTextPane = new SearchableTextPane(font, 1);
((SearchableTextPane)1).getScrollableTracksViewportWidth();

Test 16: 
String string = "The quick brown fox jumps over the lazy dog.";
SearchableTextPane searchableTextPane = new SearchableTextPane((Font) "The quick brown fox jumps over the lazy dog.", (-4875));
JScrollPane jScrollPane = new JScrollPane(searchableTextPane);
((SearchableTextPane) string).getScrollableTracksViewportWidth();

Test 17: 
String string = "This is a long piece of text that will be used to test the search functionality.";
SearchableTextPane searchableTextPane = new SearchableTextPane((Font) "This is a long piece of text that will be used to test the search functionality.", (-4875));
Border border = null;
((JComponent) string).setBorder(border);
boolean _boolean = true;
((JTextArea) string).setLineWrap(_boolean);
JScrollPane jScrollPane = new JScrollPane(searchableTextPane);
((SearchableTextPane) string).getScrollableTracksViewportWidth();

Test 18: 
String string = "This is a test string for the SearchableTextPane";
SearchableTextPane searchableTextPane = new SearchableTextPane((Font) "This is a test string for the SearchableTextPane", 1679);
String string = "test";
int _int = 500;
((SearchableTextPane) string).highlight(string, _int);

Test 19: 
HashMap<AttributedCharacterIterator.Attribute, LineResult> hashMap = new HashMap<AttributedCharacterIterator.Attribute, LineResult>();
Font font = new Font(hashMap);
SearchableTextPane searchableTextPane = new SearchableTextPane(font, 10000);
((SearchableTextPane)10000).highlight("Sample text", 10000);

Test 20: 
Font decode = Font.decode("Arial");
SearchableTextPane searchableTextPane = new SearchableTextPane(decode, (int) "John Doe is a great developer.");
String string = "developer";
((SearchableTextPane) decode).search(string);

Test 21: 
HashMap<AttributedCharacterIterator.Attribute, Object> hashMap = new HashMap<AttributedCharacterIterator.Attribute, Object>();
Font font = new Font(hashMap);
SearchableTextPane searchableTextPane = new SearchableTextPane(font, 1);
((SearchableTextPane)1).search("This is a sample text to be searched");

Test 22: 
HashMap<AttributedCharacterIterator.Attribute, Object> hashMap = new HashMap<AttributedCharacterIterator.Attribute, Object>();
Font font = new Font(hashMap);
SearchableTextPane searchableTextPane = new SearchableTextPane(font, 1);
((SearchableTextPane)1).highlight("Hello World!", 1);

Test 23: 
HashMap<AttributedCharacterIterator.Attribute, Object> hashMap = new HashMap<AttributedCharacterIterator.Attribute, Object>();
Font font = new Font(hashMap);
SearchableTextPane searchableTextPane = new SearchableTextPane(font, 1);
((SearchableTextPane)1).removeHighlights();

Test 24: 
int _int = 4859;
SearchableTextPane searchableTextPane = new SearchableTextPane((Font) 4859, 4859);
String string = "Hello, World!";
((SearchableTextPane) _int).search(string);

Test 25: 
Font font = new Font("Arial", 12, 796);
SearchableTextPane searchableTextPane = new SearchableTextPane(font, (-1));
((SearchableTextPane)12).search("The quick brown fox jumps over the lazy dog", 12345);


* Generated after the refinement and before minimization 26 tests with total length 101
* test suite isTestSuite: 26
Test 0: 
HashMap<AttributedCharacterIterator.Attribute, Object> hashMap = new HashMap<AttributedCharacterIterator.Attribute, Object>();
Font font = new Font(hashMap);
SearchableTextPane searchableTextPane = new SearchableTextPane(font, 1);
searchableTextPane.search("NdR_Q>8Rz5:VwD}mL*", 0);
Test 1: 
SearchableTextPane searchableTextPane = new SearchableTextPane((Font) null, (-473));
searchableTextPane.highlight("|whdRvB:-B\"Z8K%r", (-473));
Test 2: 
HashMap<Format.Field, Object> hashMap = new HashMap<Format.Field, Object>();
Font font = new Font(hashMap);
SearchableTextPane searchableTextPane = new SearchableTextPane(font, 1);
searchableTextPane.getScrollableTracksViewportWidth();
Test 3: 
SearchableTextPane searchableTextPane = new SearchableTextPane((Font) null, (-4875));
JScrollPane jScrollPane = new JScrollPane(searchableTextPane);
searchableTextPane.getScrollableTracksViewportWidth();
Test 4: 
SearchableTextPane searchableTextPane = new SearchableTextPane((Font) null, (-4875));
searchableTextPane.setBorder((Border) null);
searchableTextPane.setLineWrap(true);
JScrollPane jScrollPane = new JScrollPane(searchableTextPane);
searchableTextPane.getScrollableTracksViewportWidth();
Test 5: 
SearchableTextPane searchableTextPane = new SearchableTextPane((Font) null, 1679);
searchableTextPane.highlight((String) null, 1679);
Test 6: 
HashMap<AttributedCharacterIterator.Attribute, LineResult> hashMap = new HashMap<AttributedCharacterIterator.Attribute, LineResult>();
Font font = new Font(hashMap);
SearchableTextPane searchableTextPane = new SearchableTextPane(font, 5223);
searchableTextPane.highlight("", 5223);
Test 7: 
Font decode = Font.decode((String) null);
SearchableTextPane searchableTextPane = new SearchableTextPane(decode, 4859);
searchableTextPane.search((String) null);
Test 8: 
HashMap<AttributedCharacterIterator.Attribute, Object> hashMap = new HashMap<AttributedCharacterIterator.Attribute, Object>();
Font font = new Font(hashMap);
SearchableTextPane searchableTextPane = new SearchableTextPane(font, 1);
searchableTextPane.search(".e5.--k%r[R]*JO!Jwa");
Test 9: 
HashMap<AttributedCharacterIterator.Attribute, Object> hashMap = new HashMap<AttributedCharacterIterator.Attribute, Object>();
Font font = new Font(hashMap);
SearchableTextPane searchableTextPane = new SearchableTextPane(font, 1);
searchableTextPane.highlight("NdR_Q>8Rz5:VwD}mL*", 1);
Test 10: 
HashMap<AttributedCharacterIterator.Attribute, Object> hashMap = new HashMap<AttributedCharacterIterator.Attribute, Object>();
Font font = new Font(hashMap);
SearchableTextPane searchableTextPane = new SearchableTextPane(font, 1);
searchableTextPane.removeHighlights();
Test 11: 
SearchableTextPane searchableTextPane = new SearchableTextPane((Font) null, 4859);
searchableTextPane.search("");
Test 12: 
Font font = new Font("", (-1975), 796);
SearchableTextPane searchableTextPane = new SearchableTextPane(font, (-1));
searchableTextPane.search("", (-642));
Test 13: 
HashMap<AttributedCharacterIterator.Attribute, Object> hashMap = new HashMap<AttributedCharacterIterator.Attribute, Object>();
Font font = new Font(hashMap);
SearchableTextPane searchableTextPane = new SearchableTextPane(font, 1);
((SearchableTextPane)1).search("This is a test string for searching", 0);

Test 14: 
int _int = 50;
SearchableTextPane searchableTextPane = new SearchableTextPane((Font) 50, (-473));
String string = "This is a sample text to be searched.";
int _int = 50;
((SearchableTextPane) _int).highlight(string, _int);

Test 15: 
HashMap<Format.Field, Object> hashMap = new HashMap<Format.Field, Object>();
Font font = new Font(hashMap);
SearchableTextPane searchableTextPane = new SearchableTextPane(font, 1);
((SearchableTextPane)1).getScrollableTracksViewportWidth();

Test 16: 
String string = "The quick brown fox jumps over the lazy dog.";
SearchableTextPane searchableTextPane = new SearchableTextPane((Font) "The quick brown fox jumps over the lazy dog.", (-4875));
JScrollPane jScrollPane = new JScrollPane(searchableTextPane);
((SearchableTextPane) string).getScrollableTracksViewportWidth();

Test 17: 
String string = "This is a long piece of text that will be used to test the search functionality.";
SearchableTextPane searchableTextPane = new SearchableTextPane((Font) "This is a long piece of text that will be used to test the search functionality.", (-4875));
Border border = null;
((JComponent) string).setBorder(border);
boolean _boolean = true;
((JTextArea) string).setLineWrap(_boolean);
JScrollPane jScrollPane = new JScrollPane(searchableTextPane);
((SearchableTextPane) string).getScrollableTracksViewportWidth();

Test 18: 
String string = "This is a test string for the SearchableTextPane";
SearchableTextPane searchableTextPane = new SearchableTextPane((Font) "This is a test string for the SearchableTextPane", 1679);
String string = "test";
int _int = 500;
((SearchableTextPane) string).highlight(string, _int);

Test 19: 
HashMap<AttributedCharacterIterator.Attribute, LineResult> hashMap = new HashMap<AttributedCharacterIterator.Attribute, LineResult>();
Font font = new Font(hashMap);
SearchableTextPane searchableTextPane = new SearchableTextPane(font, 10000);
((SearchableTextPane)10000).highlight("Sample text", 10000);

Test 20: 
Font decode = Font.decode("Arial");
SearchableTextPane searchableTextPane = new SearchableTextPane(decode, (int) "John Doe is a great developer.");
String string = "developer";
((SearchableTextPane) decode).search(string);

Test 21: 
HashMap<AttributedCharacterIterator.Attribute, Object> hashMap = new HashMap<AttributedCharacterIterator.Attribute, Object>();
Font font = new Font(hashMap);
SearchableTextPane searchableTextPane = new SearchableTextPane(font, 1);
((SearchableTextPane)1).search("This is a sample text to be searched");

Test 22: 
HashMap<AttributedCharacterIterator.Attribute, Object> hashMap = new HashMap<AttributedCharacterIterator.Attribute, Object>();
Font font = new Font(hashMap);
SearchableTextPane searchableTextPane = new SearchableTextPane(font, 1);
((SearchableTextPane)1).highlight("Hello World!", 1);

Test 23: 
HashMap<AttributedCharacterIterator.Attribute, Object> hashMap = new HashMap<AttributedCharacterIterator.Attribute, Object>();
Font font = new Font(hashMap);
SearchableTextPane searchableTextPane = new SearchableTextPane(font, 1);
((SearchableTextPane)1).removeHighlights();

Test 24: 
int _int = 4859;
SearchableTextPane searchableTextPane = new SearchableTextPane((Font) 4859, 4859);
String string = "Hello, World!";
((SearchableTextPane) _int).search(string);

Test 25: 
Font font = new Font("Arial", 12, 796);
SearchableTextPane searchableTextPane = new SearchableTextPane(font, (-1));
((SearchableTextPane)12).search("The quick brown fox jumps over the lazy dog", 12345);


* Minimizing test suite
* test suite isTestSuite: 13
Test 0: 
SearchableTextPane searchableTextPane = new SearchableTextPane((Font) null, (-473));
searchableTextPane.highlight("|whdRvB:-B\"Z8K%r", (-473));
Test 1: 
Font font = new Font("", (-1975), 796);
SearchableTextPane searchableTextPane = new SearchableTextPane(font, (-1));
searchableTextPane.search("", (-642));
Test 2: 
HashMap<Format.Field, Object> hashMap = new HashMap<Format.Field, Object>();
Font font = new Font(hashMap);
SearchableTextPane searchableTextPane = new SearchableTextPane(font, 1);
searchableTextPane.getScrollableTracksViewportWidth();
Test 3: 
SearchableTextPane searchableTextPane = new SearchableTextPane((Font) null, (-4875));
JScrollPane jScrollPane = new JScrollPane(searchableTextPane);
searchableTextPane.getScrollableTracksViewportWidth();
Test 4: 
SearchableTextPane searchableTextPane = new SearchableTextPane((Font) null, (-4875));
searchableTextPane.setBorder((Border) null);
searchableTextPane.setLineWrap(true);
JScrollPane jScrollPane = new JScrollPane(searchableTextPane);
searchableTextPane.getScrollableTracksViewportWidth();
Test 5: 
SearchableTextPane searchableTextPane = new SearchableTextPane((Font) null, 1679);
searchableTextPane.highlight((String) null, 1679);
Test 6: 
HashMap<AttributedCharacterIterator.Attribute, LineResult> hashMap = new HashMap<AttributedCharacterIterator.Attribute, LineResult>();
Font font = new Font(hashMap);
SearchableTextPane searchableTextPane = new SearchableTextPane(font, 5223);
searchableTextPane.highlight("", 5223);
Test 7: 
Font decode = Font.decode((String) null);
SearchableTextPane searchableTextPane = new SearchableTextPane(decode, 4859);
searchableTextPane.search((String) null);
Test 8: 
SearchableTextPane searchableTextPane = new SearchableTextPane((Font) null, 4859);
searchableTextPane.search("");
Test 9: 
HashMap<AttributedCharacterIterator.Attribute, Object> hashMap = new HashMap<AttributedCharacterIterator.Attribute, Object>();
Font font = new Font(hashMap);
SearchableTextPane searchableTextPane = new SearchableTextPane(font, 1);
searchableTextPane.search(".e5.--k%r[R]*JO!Jwa");
Test 10: 
HashMap<AttributedCharacterIterator.Attribute, Object> hashMap = new HashMap<AttributedCharacterIterator.Attribute, Object>();
Font font = new Font(hashMap);
SearchableTextPane searchableTextPane = new SearchableTextPane(font, 1);
searchableTextPane.highlight("NdR_Q>8Rz5:VwD}mL*", 1);
Test 11: 
HashMap<AttributedCharacterIterator.Attribute, Object> hashMap = new HashMap<AttributedCharacterIterator.Attribute, Object>();
Font font = new Font(hashMap);
SearchableTextPane searchableTextPane = new SearchableTextPane(font, 1);
searchableTextPane.removeHighlights();
Test 12: 
HashMap<AttributedCharacterIterator.Attribute, Object> hashMap = new HashMap<AttributedCharacterIterator.Attribute, Object>();
Font font = new Font(hashMap);
SearchableTextPane searchableTextPane = new SearchableTextPane(font, 1);
searchableTextPane.search("NdR_Q>8Rz5:VwD}mL*", 0);

* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 83%
* Total number of goals: 35
* Number of covered goals: 29
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 84%
* Total number of goals: 81
* Number of covered goals: 68
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 64%
* Total number of goals: 14
* Number of covered goals: 9
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 6
* Number of covered goals: 6
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 83%
* Total number of goals: 35
* Number of covered goals: 29
* Generated 13 tests with total length 44
* Resulting test suite's coverage: 82% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 18%
* Compiling and checking tests
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: SearchableTextPane searchableTextPane = new SearchableTextPane((Font) null, (-473));
List<LineResult> highlight = searchableTextPane.highlight("|whdRvB:-B\"Z8K%r", (-473));
assertFalse(highlight.isEmpty());


** It was a parseable test case! 
refined test name is: testHighlightWithInvalidPattern
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Font arg0 = new Font("", (-1975), 796);
SearchableTextPane searchableTextPane = new SearchableTextPane(arg0, (-1));
int search = searchableTextPane.search("", (-642));
assertEquals(0, search);


** It was a parseable test case! 
refined test name is: testSearchForEmptyStringShouldReturnZero
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: SearchableTextPane arg0 = new SearchableTextPane((Font) null, (-4875));
JScrollPane jScrollPane = new JScrollPane(arg0);
boolean scrollableTracksViewportWidth = arg0.getScrollableTracksViewportWidth();
assertTrue(scrollableTracksViewportWidth);


** It was a parseable test case! 
refined test name is: testGetScrollableTracksViewportWidth
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: SearchableTextPane arg0 = new SearchableTextPane((Font) null, (-4875));
arg0.setBorder((Border) null);
arg0.setLineWrap(true);
JScrollPane jScrollPane = new JScrollPane(arg0);
boolean scrollableTracksViewportWidth = arg0.getScrollableTracksViewportWidth();
assertFalse(scrollableTracksViewportWidth);


** It was a parseable test case! 
refined test name is: testSearchableTextPane
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: SearchableTextPane searchableTextPane = new SearchableTextPane((Font) null, 1679);
List<LineResult> highlight = searchableTextPane.highlight((String) null, 1679);
assertTrue(highlight.isEmpty());


** It was a parseable test case! 
refined test name is: testHighlightWithNonExistentTermReturnsEmptyList
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Font arg0 = Font.decode((String) null);
SearchableTextPane searchableTextPane = new SearchableTextPane(arg0, 4859);
int search = searchableTextPane.search((String) null);
assertEquals((-1), search);


** It was a parseable test case! 
refined test name is: testSearchMethodWithNullInputReturnsMinusOne
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: SearchableTextPane searchableTextPane = new SearchableTextPane((Font) null, 4859);
int search = searchableTextPane.search("");
assertEquals((-1), search);


** It was a parseable test case! 
refined test name is: testSearchForEmptyStringReturnsMinusOne
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 04:14:27.125 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar6824761332600715490.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 04:14:27.155 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6824761332600715490.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 04:14:27.212 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar6824761332600715490.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 04:14:27.213 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6824761332600715490.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 04:14:27.251 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar6824761332600715490.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 04:14:27.252 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6824761332600715490.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 04:14:27.291 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar6824761332600715490.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 04:14:27.293 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6824761332600715490.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 04:14:27.333 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar6824761332600715490.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 04:14:27.334 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6824761332600715490.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 04:14:27.372 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar6824761332600715490.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 04:14:27.373 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6824761332600715490.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 04:14:27.410 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar6824761332600715490.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 04:14:27.411 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6824761332600715490.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 04:14:27.535 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar6824761332600715490.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 04:14:27.537 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6824761332600715490.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 04:14:27.666 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar6824761332600715490.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 04:14:27.666 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6824761332600715490.jar
[MASTER] 04:14:27.810 [logback-1] WARN  TimeController - Already entered in phase: INLINING. This will mess up the timing calculations.
* test suite isTestSuite: 13
Test 0: 
HashMap<AttributedCharacterIterator.Attribute, Object> hashMap = new HashMap<AttributedCharacterIterator.Attribute, Object>();
Font font = new Font(hashMap);
SearchableTextPane searchableTextPane = new SearchableTextPane(font, 1);
searchableTextPane.search("NdR_Q>8Rz5:VwD}mL*", 0);
Test 1: 
SearchableTextPane searchableTextPane = new SearchableTextPane((Font) null, (-473));
searchableTextPane.highlight("|whdRvB:-B\"Z8K%r", (-473));
Test 2: 
HashMap<Format.Field, Object> hashMap = new HashMap<Format.Field, Object>();
Font font = new Font(hashMap);
SearchableTextPane searchableTextPane = new SearchableTextPane(font, 1);
searchableTextPane.getScrollableTracksViewportWidth();
Test 3: 
SearchableTextPane searchableTextPane = new SearchableTextPane((Font) null, (-4875));
JScrollPane jScrollPane = new JScrollPane(searchableTextPane);
searchableTextPane.getScrollableTracksViewportWidth();
Test 4: 
SearchableTextPane searchableTextPane = new SearchableTextPane((Font) null, (-4875));
searchableTextPane.setBorder((Border) null);
searchableTextPane.setLineWrap(true);
JScrollPane jScrollPane = new JScrollPane(searchableTextPane);
searchableTextPane.getScrollableTracksViewportWidth();
Test 5: 
SearchableTextPane searchableTextPane = new SearchableTextPane((Font) null, 1679);
searchableTextPane.highlight((String) null, 1679);
Test 6: 
HashMap<AttributedCharacterIterator.Attribute, LineResult> hashMap = new HashMap<AttributedCharacterIterator.Attribute, LineResult>();
Font font = new Font(hashMap);
SearchableTextPane searchableTextPane = new SearchableTextPane(font, 5223);
searchableTextPane.highlight("", 5223);
Test 7: 
Font decode = Font.decode((String) null);
SearchableTextPane searchableTextPane = new SearchableTextPane(decode, 4859);
searchableTextPane.search((String) null);
Test 8: 
HashMap<AttributedCharacterIterator.Attribute, Object> hashMap = new HashMap<AttributedCharacterIterator.Attribute, Object>();
Font font = new Font(hashMap);
SearchableTextPane searchableTextPane = new SearchableTextPane(font, 1);
searchableTextPane.search(".e5.--k%r[R]*JO!Jwa");
Test 9: 
HashMap<AttributedCharacterIterator.Attribute, Object> hashMap = new HashMap<AttributedCharacterIterator.Attribute, Object>();
Font font = new Font(hashMap);
SearchableTextPane searchableTextPane = new SearchableTextPane(font, 1);
searchableTextPane.highlight("NdR_Q>8Rz5:VwD}mL*", 1);
Test 10: 
HashMap<AttributedCharacterIterator.Attribute, Object> hashMap = new HashMap<AttributedCharacterIterator.Attribute, Object>();
Font font = new Font(hashMap);
SearchableTextPane searchableTextPane = new SearchableTextPane(font, 1);
searchableTextPane.removeHighlights();
Test 11: 
SearchableTextPane searchableTextPane = new SearchableTextPane((Font) null, 4859);
searchableTextPane.search("");
Test 12: 
Font font = new Font("", (-1975), 796);
SearchableTextPane searchableTextPane = new SearchableTextPane(font, (-1));
searchableTextPane.search("", (-642));

* Minimizing test suite
* test suite isTestSuite: 13
Test 0: 
SearchableTextPane searchableTextPane = new SearchableTextPane((Font) null, (-473));
searchableTextPane.highlight("|whdRvB:-B\"Z8K%r", (-473));
Test 1: 
Font font = new Font("", (-1975), 796);
SearchableTextPane searchableTextPane = new SearchableTextPane(font, (-1));
searchableTextPane.search("", (-642));
Test 2: 
HashMap<Format.Field, Object> hashMap = new HashMap<Format.Field, Object>();
Font font = new Font(hashMap);
SearchableTextPane searchableTextPane = new SearchableTextPane(font, 1);
searchableTextPane.getScrollableTracksViewportWidth();
Test 3: 
SearchableTextPane searchableTextPane = new SearchableTextPane((Font) null, (-4875));
JScrollPane jScrollPane = new JScrollPane(searchableTextPane);
searchableTextPane.getScrollableTracksViewportWidth();
Test 4: 
SearchableTextPane searchableTextPane = new SearchableTextPane((Font) null, (-4875));
searchableTextPane.setBorder((Border) null);
searchableTextPane.setLineWrap(true);
JScrollPane jScrollPane = new JScrollPane(searchableTextPane);
searchableTextPane.getScrollableTracksViewportWidth();
Test 5: 
SearchableTextPane searchableTextPane = new SearchableTextPane((Font) null, 1679);
searchableTextPane.highlight((String) null, 1679);
Test 6: 
HashMap<AttributedCharacterIterator.Attribute, LineResult> hashMap = new HashMap<AttributedCharacterIterator.Attribute, LineResult>();
Font font = new Font(hashMap);
SearchableTextPane searchableTextPane = new SearchableTextPane(font, 5223);
searchableTextPane.highlight("", 5223);
Test 7: 
Font decode = Font.decode((String) null);
SearchableTextPane searchableTextPane = new SearchableTextPane(decode, 4859);
searchableTextPane.search((String) null);
Test 8: 
SearchableTextPane searchableTextPane = new SearchableTextPane((Font) null, 4859);
searchableTextPane.search("");
Test 9: 
HashMap<AttributedCharacterIterator.Attribute, Object> hashMap = new HashMap<AttributedCharacterIterator.Attribute, Object>();
Font font = new Font(hashMap);
SearchableTextPane searchableTextPane = new SearchableTextPane(font, 1);
searchableTextPane.search(".e5.--k%r[R]*JO!Jwa");
Test 10: 
HashMap<AttributedCharacterIterator.Attribute, Object> hashMap = new HashMap<AttributedCharacterIterator.Attribute, Object>();
Font font = new Font(hashMap);
SearchableTextPane searchableTextPane = new SearchableTextPane(font, 1);
searchableTextPane.highlight("NdR_Q>8Rz5:VwD}mL*", 1);
Test 11: 
HashMap<AttributedCharacterIterator.Attribute, Object> hashMap = new HashMap<AttributedCharacterIterator.Attribute, Object>();
Font font = new Font(hashMap);
SearchableTextPane searchableTextPane = new SearchableTextPane(font, 1);
searchableTextPane.removeHighlights();
Test 12: 
HashMap<AttributedCharacterIterator.Attribute, Object> hashMap = new HashMap<AttributedCharacterIterator.Attribute, Object>();
Font font = new Font(hashMap);
SearchableTextPane searchableTextPane = new SearchableTextPane(font, 1);
searchableTextPane.search("NdR_Q>8Rz5:VwD}mL*", 0);

[MASTER] 04:14:29.637 [logback-1] WARN  TimeController - Already entered in phase: MINIMIZATION. This will mess up the timing calculations.
* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 83%
* Total number of goals: 35
* Number of covered goals: 29
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 84%
* Total number of goals: 81
* Number of covered goals: 68
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 64%
* Total number of goals: 14
* Number of covered goals: 9
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 6
* Number of covered goals: 6
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 83%
* Total number of goals: 35
* Number of covered goals: 29
* Generated 13 tests with total length 44
* Resulting test suite's coverage: 82% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 04:14:29.684 [logback-1] WARN  TimeController - Already entered in phase: COVERAGE_ANALYSIS. This will mess up the timing calculations.
* Resulting test suite's mutation score: 20%
* Compiling and checking tests
[MASTER] 04:14:32.113 [logback-1] WARN  TimeController - Already entered in phase: ASSERTION_GENERATION. This will mess up the timing calculations.
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 04:14:33.051 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar6824761332600715490.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 04:14:33.052 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6824761332600715490.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
[MASTER] 04:14:33.122 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar6824761332600715490.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 04:14:33.124 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6824761332600715490.jar
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 04:14:33.197 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar6824761332600715490.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 04:14:33.198 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6824761332600715490.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 04:14:33.249 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar6824761332600715490.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 04:14:33.250 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6824761332600715490.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 04:14:33.319 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar6824761332600715490.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 04:14:33.320 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6824761332600715490.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 04:14:33.375 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar6824761332600715490.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 04:14:33.376 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6824761332600715490.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 04:14:33.419 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar6824761332600715490.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 04:14:33.420 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6824761332600715490.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
** Write a test suite: 4 called: 4 to improve: false
** Write a test suite: 5 called: 5 to improve: false
** Write a test suite: 6 called: 6 to improve: false
[MASTER] 04:14:33.539 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar6824761332600715490.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 04:14:33.540 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6824761332600715490.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
** Write a test suite: 4 called: 4 to improve: false
** Write a test suite: 5 called: 5 to improve: false
** Write a test suite: 6 called: 6 to improve: false
[MASTER] 04:14:33.627 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar6824761332600715490.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 04:14:33.628 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6824761332600715490.jar
* Writing tests to file
[MASTER] 04:14:33.630 [logback-1] WARN  TimeController - Already entered in phase: JUNIT_CHECK. This will mess up the timing calculations.
* Writing JUnit test case 'SearchableTextPane_ESTest' to evosuite-tests
* Writing JUnit test case 'SearchableTextPane_Original_ESTest' to evosuite-tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
** Write a test suite: 4 called: 4 to improve: false
** Write a test suite: 5 called: 5 to improve: false
** Write a test suite: 6 called: 6 to improve: false
* Done!

* Computation finished
