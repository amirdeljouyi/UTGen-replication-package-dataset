* EvoSuite 1.2.1-SNAPSHOT
* Going to generate test cases for class: ghm.follow.search.SearchableTextPane
* Starting Client-0
* Properties loaded from /home/ubuntu/UTestGen/Evaluation/getting_results/dataset/SF110/41_follow/evosuite-files/evosuite.properties
* Connecting to master process on port 11511
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 01:24:21.713 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 01:24:21.714 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 01:24:21.754 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 01:24:21.755 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 01:24:21.755 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 01:24:21.784 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 01:24:22.785 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 01:24:22.806 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 01:24:22.806 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 01:24:22.806 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 01:24:22.806 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 01:24:22.806 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 01:24:22.807 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 01:24:22.807 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 01:24:22.807 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 01:24:22.839 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 01:24:22.847 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
* Finished analyzing classpath
* Generating tests for class ghm.follow.search.SearchableTextPane
* Test criteria:
  - Branch Coverage
  - Line Coverage
  - Method-Output Coverage
  - Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 171
* Using seed 1709256259537
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%]* Initial Number of Goals in DynaMOSA = 73 / 171
[MASTER] 01:24:23.415 [logback-1] WARN  TestCluster - Failed to check cache for javax.swing.JComboBox<E> : Type points to itself
[Progress:>                             1%] [Cov:===================>               56%][Progress:>                             1%] [Cov:===================>               57%][Progress:>                             2%] [Cov:===================>               57%][Progress:>                             2%] [Cov:===================>               57%][Progress:>                             2%] [Cov:===================>               57%][Progress:>                             3%] [Cov:===================>               57%][Progress:>                             3%] [Cov:===================>               57%][Progress:>                             3%] [Cov:===================>               57%][Progress:>                             3%] [Cov:===================>               57%][Progress:>                             3%] [Cov:===================>               57%][Progress:=>                            4%] [Cov:===================>               57%][Progress:=>                            4%] [Cov:===================>               57%][Progress:=>                            4%] [Cov:===================>               57%][Progress:=>                            4%] [Cov:===================>               57%][Progress:=>                            4%] [Cov:===================>               57%][Progress:=>                            4%] [Cov:===================>               57%][Progress:=>                            4%] [Cov:===================>               57%][Progress:=>                            5%] [Cov:===================>               57%][Progress:=>                            5%] [Cov:===================>               57%][Progress:=>                            5%] [Cov:===================>               57%][Progress:=>                            5%] [Cov:===================>               57%][Progress:=>                            5%] [Cov:===================>               57%][Progress:=>                            5%] [Cov:===================>               57%][Progress:=>                            5%] [Cov:===================>               57%][Progress:=>                            6%] [Cov:===================>               57%][Progress:=>                            6%] [Cov:===================>               57%][Progress:=>                            6%] [Cov:===================>               57%][Progress:=>                            6%] [Cov:==========================>        76%][Progress:=>                            6%] [Cov:==========================>        76%][Progress:=>                            6%] [Cov:==========================>        76%][Progress:=>                            6%] [Cov:==========================>        76%][Progress:=>                            6%] [Cov:==========================>        76%][Progress:=>                            6%] [Cov:==========================>        76%][Progress:==>                           7%] [Cov:==========================>        76%][Progress:==>                           7%] [Cov:==========================>        76%][Progress:==>                           7%] [Cov:==========================>        76%][Progress:==>                           7%] [Cov:==========================>        76%][Progress:==>                           7%] [Cov:==========================>        76%][Progress:==>                           7%] [Cov:==========================>        76%][Progress:==>                           8%] [Cov:==========================>        76%][Progress:==>                           8%] [Cov:==========================>        76%][Progress:==>                           8%] [Cov:==========================>        76%][Progress:===>                          13%] [Cov:==========================>        76%][Progress:===>                          13%] [Cov:==========================>        76%][Progress:===>                          13%] [Cov:==========================>        76%][Progress:===>                          13%] [Cov:==========================>        76%][Progress:====>                         14%] [Cov:==========================>        76%][Progress:====>                         14%] [Cov:==========================>        76%][Progress:====>                         14%] [Cov:==========================>        76%][Progress:====>                         14%] [Cov:==========================>        76%][Progress:====>                         14%] [Cov:==========================>        76%][Progress:====>                         14%] [Cov:==========================>        76%][Progress:====>                         14%] [Cov:==========================>        76%][Progress:====>                         15%] [Cov:==========================>        76%][Progress:====>                         15%] [Cov:==========================>        76%][Progress:====>                         15%] [Cov:==========================>        76%][Progress:====>                         15%] [Cov:==========================>        76%][Progress:====>                         15%] [Cov:==========================>        76%][Progress:====>                         15%] [Cov:==========================>        76%][Progress:====>                         15%] [Cov:==========================>        76%][Progress:====>                         15%] [Cov:==========================>        76%][Progress:====>                         16%] [Cov:==========================>        76%][Progress:====>                         16%] [Cov:==========================>        76%][Progress:====>                         16%] [Cov:==========================>        76%][Progress:====>                         16%] [Cov:==========================>        76%][Progress:====>                         16%] [Cov:==========================>        76%][Progress:====>                         16%] [Cov:==========================>        76%][Progress:====>                         16%] [Cov:==========================>        76%][Progress:====>                         16%] [Cov:==========================>        76%][Progress:=====>                        17%] [Cov:==========================>        76%][Progress:=====>                        17%] [Cov:==========================>        76%][Progress:=====>                        17%] [Cov:==========================>        76%][Progress:=====>                        17%] [Cov:==========================>        76%][Progress:=====>                        17%] [Cov:==========================>        76%][Progress:=====>                        17%] [Cov:==========================>        76%][Progress:=====>                        17%] [Cov:==========================>        76%][Progress:=====>                        17%] [Cov:==========================>        76%][Progress:=====>                        17%] [Cov:==========================>        76%][Progress:=====>                        18%] [Cov:==========================>        76%][Progress:=====>                        18%] [Cov:==========================>        76%][Progress:=====>                        18%] [Cov:==========================>        76%][Progress:=====>                        18%] [Cov:==========================>        76%][Progress:=====>                        18%] [Cov:==========================>        76%][Progress:=====>                        18%] [Cov:==========================>        76%][Progress:=====>                        18%] [Cov:==========================>        76%][Progress:=====>                        18%] [Cov:==========================>        76%][Progress:=====>                        19%] [Cov:==========================>        76%][Progress:=====>                        19%] [Cov:==========================>        76%][Progress:=====>                        19%] [Cov:==========================>        76%][Progress:=====>                        19%] [Cov:==========================>        76%][Progress:=====>                        19%] [Cov:==========================>        76%][Progress:=====>                        19%] [Cov:==========================>        76%][Progress:=====>                        19%] [Cov:==========================>        76%][Progress:=====>                        19%] [Cov:==========================>        76%][Progress:======>                       20%] [Cov:==========================>        76%][Progress:======>                       20%] [Cov:==========================>        76%][Progress:======>                       20%] [Cov:==========================>        76%][Progress:======>                       20%] [Cov:==========================>        76%][Progress:======>                       20%] [Cov:==========================>        76%][Progress:======>                       20%] [Cov:==========================>        76%][Progress:======>                       20%] [Cov:==========================>        76%][Progress:======>                       20%] [Cov:==========================>        76%][Progress:======>                       20%] [Cov:==========================>        76%][Progress:======>                       21%] [Cov:==========================>        76%][Progress:======>                       21%] [Cov:==========================>        76%][Progress:======>                       21%] [Cov:==========================>        76%][Progress:======>                       21%] [Cov:==========================>        76%][Progress:======>                       21%] [Cov:==========================>        76%][Progress:======>                       21%] [Cov:==========================>        76%][Progress:======>                       22%] [Cov:==========================>        76%][Progress:======>                       22%] [Cov:==========================>        76%][Progress:======>                       22%] [Cov:==========================>        76%][Progress:======>                       22%] [Cov:==========================>        76%][Progress:======>                       22%] [Cov:==========================>        76%][Progress:======>                       22%] [Cov:==========================>        76%][Progress:======>                       23%] [Cov:==========================>        76%][Progress:======>                       23%] [Cov:==========================>        76%][Progress:========>                     28%] [Cov:==========================>        76%][Progress:========>                     28%] [Cov:==========================>        76%][Progress:========>                     28%] [Cov:==========================>        76%][Progress:========>                     28%] [Cov:==========================>        76%][Progress:========>                     29%] [Cov:==========================>        76%][Progress:========>                     29%] [Cov:==========================>        76%][Progress:========>                     29%] [Cov:==========================>        76%][Progress:========>                     29%] [Cov:==========================>        76%][Progress:========>                     29%] [Cov:==========================>        76%][Progress:========>                     29%] [Cov:==========================>        76%][Progress:=========>                    30%] [Cov:==========================>        76%][Progress:=========>                    30%] [Cov:==========================>        76%][Progress:=========>                    30%] [Cov:==========================>        76%][Progress:=========>                    30%] [Cov:==========================>        76%][Progress:=========>                    30%] [Cov:==========================>        76%][Progress:=========>                    30%] [Cov:==========================>        76%][Progress:=========>                    30%] [Cov:==========================>        76%][Progress:=========>                    31%] [Cov:==========================>        76%][Progress:=========>                    31%] [Cov:==========================>        76%][Progress:=========>                    31%] [Cov:==========================>        76%][Progress:=========>                    31%] [Cov:==========================>        76%][Progress:=========>                    31%] [Cov:==========================>        76%][Progress:=========>                    32%] [Cov:==========================>        76%][Progress:=========>                    32%] [Cov:==========================>        76%][Progress:=========>                    32%] [Cov:==========================>        76%][Progress:=========>                    32%] [Cov:==========================>        76%][Progress:=========>                    32%] [Cov:==========================>        76%][Progress:=========>                    32%] [Cov:==========================>        76%][Progress:=========>                    32%] [Cov:==========================>        76%][Progress:=========>                    33%] [Cov:==========================>        76%][Progress:=========>                    33%] [Cov:==========================>        76%][Progress:=========>                    33%] [Cov:==========================>        76%][Progress:=========>                    33%] [Cov:==========================>        76%][Progress:=========>                    33%] [Cov:==========================>        76%][Progress:=========>                    33%] [Cov:==========================>        76%][Progress:==========>                   34%] [Cov:==========================>        76%][Progress:==========>                   34%] [Cov:==========================>        76%][Progress:==========>                   34%] [Cov:==========================>        76%][Progress:==========>                   34%] [Cov:==========================>        76%][Progress:==========>                   34%] [Cov:==========================>        76%][Progress:==========>                   34%] [Cov:==========================>        76%][MASTER] 01:24:58.376 [logback-1] WARN  TestCluster - Failed to check cache for java.util.Enumeration<E> : Type points to itself
[Progress:==========>                   35%] [Cov:==========================>        76%][Progress:==========>                   35%] [Cov:==========================>        76%][Progress:==========>                   35%] [Cov:==========================>        76%][Progress:==========>                   35%] [Cov:==========================>        76%][Progress:==========>                   35%] [Cov:==========================>        76%][Progress:==========>                   35%] [Cov:==========================>        76%][Progress:==========>                   36%] [Cov:==========================>        76%][Progress:==========>                   36%] [Cov:==========================>        76%][Progress:==========>                   36%] [Cov:==========================>        76%][Progress:==========>                   36%] [Cov:==========================>        76%][Progress:==========>                   36%] [Cov:==========================>        76%][Progress:==========>                   36%] [Cov:==========================>        76%][Progress:==========>                   36%] [Cov:==========================>        76%][Progress:==========>                   36%] [Cov:==========================>        76%][Progress:===========>                  37%] [Cov:==========================>        76%][Progress:===========>                  37%] [Cov:==========================>        76%][Progress:===========>                  37%] [Cov:==========================>        76%][Progress:===========>                  37%] [Cov:==========================>        76%][Progress:===========>                  37%] [Cov:==========================>        76%][Progress:===========>                  37%] [Cov:==========================>        76%][Progress:===========>                  37%] [Cov:==========================>        76%][Progress:===========>                  37%] [Cov:==========================>        76%][Progress:===========>                  37%] [Cov:==========================>        76%][Progress:===========>                  37%] [Cov:==========================>        76%][Progress:===========>                  37%] [Cov:==========================>        76%][Progress:===========>                  37%] [Cov:==========================>        76%][Progress:===========>                  38%] [Cov:==========================>        76%][Progress:===========>                  38%] [Cov:==========================>        76%][Progress:===========>                  38%] [Cov:==========================>        76%][Progress:===========>                  38%] [Cov:==========================>        76%][Progress:===========>                  38%] [Cov:==========================>        76%][Progress:===========>                  38%] [Cov:==========================>        76%][Progress:===========>                  38%] [Cov:==========================>        76%][Progress:===========>                  38%] [Cov:==========================>        76%][Progress:===========>                  38%] [Cov:==========================>        76%][Progress:===========>                  38%] [Cov:==========================>        76%][Progress:===========>                  39%] [Cov:==========================>        76%][Progress:===========>                  39%] [Cov:==========================>        76%][Progress:===========>                  39%] [Cov:==========================>        76%][Progress:===========>                  39%] [Cov:==========================>        76%][Progress:===========>                  39%] [Cov:==========================>        76%][Progress:===========>                  39%] [Cov:==========================>        76%][Progress:===========>                  39%] [Cov:==========================>        76%][Progress:===========>                  39%] [Cov:==========================>        76%][Progress:===========>                  39%] [Cov:==========================>        76%][Progress:===========>                  39%] [Cov:==========================>        76%][Progress:============>                 40%] [Cov:==========================>        76%][Progress:============>                 40%] [Cov:==========================>        76%][Progress:============>                 40%] [Cov:==========================>        76%][Progress:============>                 40%] [Cov:==========================>        76%][Progress:============>                 40%] [Cov:==========================>        76%][Progress:============>                 40%] [Cov:==========================>        76%][Progress:============>                 40%] [Cov:==========================>        76%][Progress:============>                 40%] [Cov:==========================>        76%][Progress:============>                 40%] [Cov:==========================>        76%][Progress:============>                 41%] [Cov:==========================>        76%][Progress:============>                 41%] [Cov:==========================>        76%][Progress:============>                 41%] [Cov:==========================>        76%][Progress:============>                 41%] [Cov:==========================>        76%][Progress:============>                 41%] [Cov:==========================>        76%][Progress:============>                 41%] [Cov:==========================>        76%][Progress:============>                 41%] [Cov:==========================>        76%][Progress:============>                 41%] [Cov:==========================>        76%][Progress:============>                 41%] [Cov:==========================>        76%][Progress:============>                 41%] [Cov:==========================>        76%][Progress:============>                 41%] [Cov:==========================>        76%][Progress:============>                 42%] [Cov:==========================>        76%][Progress:============>                 42%] [Cov:==========================>        76%][Progress:============>                 42%] [Cov:==========================>        76%][Progress:============>                 42%] [Cov:==========================>        76%][Progress:============>                 42%] [Cov:==========================>        76%][Progress:============>                 42%] [Cov:==========================>        76%][Progress:============>                 42%] [Cov:==========================>        76%][Progress:============>                 42%] [Cov:==========================>        76%][Progress:============>                 42%] [Cov:==========================>        76%][Progress:============>                 42%] [Cov:==========================>        76%][Progress:============>                 43%] [Cov:==========================>        76%][Progress:============>                 43%] [Cov:==========================>        76%][Progress:============>                 43%] [Cov:==========================>        76%][Progress:============>                 43%] [Cov:==========================>        76%][Progress:============>                 43%] [Cov:==========================>        76%][Progress:============>                 43%] [Cov:==========================>        76%][Progress:============>                 43%] [Cov:==========================>        76%][Progress:============>                 43%] [Cov:==========================>        76%][Progress:============>                 43%] [Cov:==========================>        76%][Progress:============>                 43%] [Cov:==========================>        76%][Progress:============>                 43%] [Cov:==========================>        76%][Progress:=============>                44%] [Cov:==========================>        76%][Progress:=============>                44%] [Cov:==========================>        76%][Progress:=============>                44%] [Cov:==========================>        76%][Progress:=============>                44%] [Cov:==========================>        76%][Progress:=============>                44%] [Cov:==========================>        76%][Progress:=============>                44%] [Cov:==========================>        76%][Progress:=============>                44%] [Cov:==========================>        76%][Progress:=============>                44%] [Cov:==========================>        76%][Progress:=============>                44%] [Cov:==========================>        76%][Progress:=============>                44%] [Cov:==========================>        76%][Progress:=============>                45%] [Cov:==========================>        76%][Progress:=============>                45%] [Cov:==========================>        76%][Progress:=============>                45%] [Cov:==========================>        76%][Progress:=============>                45%] [Cov:==========================>        76%][Progress:=============>                45%] [Cov:==========================>        76%][Progress:=============>                45%] [Cov:==========================>        76%][Progress:=============>                45%] [Cov:==========================>        76%][Progress:=============>                46%] [Cov:==========================>        76%][Progress:=============>                46%] [Cov:==========================>        76%][Progress:=============>                46%] [Cov:==========================>        76%][Progress:=============>                46%] [Cov:==========================>        76%][Progress:=============>                46%] [Cov:==========================>        76%][Progress:=============>                46%] [Cov:==========================>        76%][Progress:=============>                46%] [Cov:==========================>        76%][Progress:=============>                46%] [Cov:==========================>        76%][Progress:=============>                46%] [Cov:==========================>        76%][Progress:==============>               47%] [Cov:==========================>        76%][Progress:==============>               47%] [Cov:==========================>        76%][Progress:==============>               47%] [Cov:==========================>        76%][Progress:==============>               47%] [Cov:==========================>        76%][Progress:==============>               47%] [Cov:==========================>        76%][Progress:==============>               47%] [Cov:==========================>        76%][Progress:==============>               47%] [Cov:==========================>        76%][Progress:==============>               47%] [Cov:===========================>       79%][Progress:==============>               47%] [Cov:===========================>       79%][Progress:==============>               48%] [Cov:===========================>       79%][Progress:==============>               48%] [Cov:===========================>       79%][Progress:==============>               48%] [Cov:===========================>       79%][Progress:==============>               48%] [Cov:===========================>       79%][Progress:==============>               48%] [Cov:===========================>       79%][Progress:==============>               48%] [Cov:===========================>       79%][Progress:==============>               48%] [Cov:===========================>       79%][Progress:==============>               48%] [Cov:===========================>       79%][Progress:==============>               48%] [Cov:===========================>       79%][Progress:==============>               48%] [Cov:===========================>       79%][Progress:==============>               48%] [Cov:===========================>       79%][Progress:==============>               49%] [Cov:===========================>       79%][Progress:==============>               49%] [Cov:===========================>       79%][Progress:==============>               49%] [Cov:===========================>       79%][Progress:==============>               49%] [Cov:===========================>       79%][Progress:==============>               49%] [Cov:===========================>       79%][Progress:==============>               49%] [Cov:===========================>       79%][Progress:==============>               49%] [Cov:===========================>       79%][Progress:==============>               49%] [Cov:===========================>       79%][Progress:==============>               49%] [Cov:===========================>       79%][Progress:===============>              50%] [Cov:===========================>       79%][Progress:===============>              50%] [Cov:===========================>       79%][Progress:===============>              50%] [Cov:===========================>       79%][Progress:===============>              50%] [Cov:===========================>       79%][Progress:===============>              50%] [Cov:===========================>       79%][Progress:===============>              50%] [Cov:===========================>       79%][Progress:===============>              50%] [Cov:===========================>       79%][Progress:===============>              50%] [Cov:===========================>       79%][Progress:===============>              50%] [Cov:===========================>       79%][Progress:===============>              50%] [Cov:===========================>       79%][Progress:===============>              51%] [Cov:===========================>       79%][Progress:===============>              51%] [Cov:===========================>       79%][Progress:===============>              51%] [Cov:===========================>       79%][Progress:===============>              51%] [Cov:===========================>       79%][Progress:===============>              51%] [Cov:===========================>       79%][Progress:===============>              51%] [Cov:===========================>       79%][Progress:===============>              51%] [Cov:===========================>       79%][Progress:===============>              51%] [Cov:===========================>       79%][Progress:===============>              51%] [Cov:===========================>       79%][Progress:===============>              51%] [Cov:===========================>       79%][Progress:===============>              52%] [Cov:===========================>       79%][Progress:===============>              52%] [Cov:===========================>       79%][Progress:===============>              52%] [Cov:===========================>       79%][Progress:===============>              52%] [Cov:===========================>       79%][Progress:===============>              52%] [Cov:===========================>       79%][Progress:===============>              52%] [Cov:===========================>       79%][Progress:===============>              52%] [Cov:===========================>       79%][Progress:===============>              52%] [Cov:===========================>       79%][Progress:===============>              52%] [Cov:===========================>       79%][Progress:===============>              53%] [Cov:===========================>       79%][Progress:===============>              53%] [Cov:===========================>       79%][Progress:===============>              53%] [Cov:===========================>       79%][Progress:===============>              53%] [Cov:===========================>       79%][Progress:===============>              53%] [Cov:===========================>       79%][Progress:===============>              53%] [Cov:===========================>       79%][Progress:===============>              53%] [Cov:===========================>       79%][Progress:===============>              53%] [Cov:===========================>       79%][Progress:===============>              53%] [Cov:===========================>       79%][Progress:===============>              53%] [Cov:===========================>       79%][Progress:===============>              53%] [Cov:===========================>       79%][Progress:===============>              53%] [Cov:===========================>       79%][Progress:================>             54%] [Cov:===========================>       79%][Progress:================>             54%] [Cov:===========================>       79%][Progress:================>             54%] [Cov:===========================>       79%][Progress:================>             54%] [Cov:===========================>       79%][Progress:================>             54%] [Cov:===========================>       79%][Progress:================>             54%] [Cov:===========================>       79%][Progress:================>             54%] [Cov:===========================>       79%][Progress:================>             54%] [Cov:===========================>       79%][Progress:================>             54%] [Cov:===========================>       79%][Progress:================>             54%] [Cov:===========================>       79%][Progress:================>             54%] [Cov:===========================>       79%][Progress:================>             54%] [Cov:===========================>       79%][Progress:================>             54%] [Cov:===========================>       79%][Progress:================>             55%] [Cov:===========================>       79%][Progress:================>             55%] [Cov:===========================>       79%][Progress:================>             55%] [Cov:===========================>       79%][Progress:================>             55%] [Cov:===========================>       79%][Progress:================>             55%] [Cov:===========================>       79%][Progress:================>             55%] [Cov:===========================>       79%][Progress:==================>           60%] [Cov:===========================>       79%][MASTER] 01:25:24.156 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.ChronoLocalDate
[Progress:==================>           60%] [Cov:===========================>       79%][Progress:==================>           61%] [Cov:===========================>       79%][Progress:==================>           61%] [Cov:===========================>       79%][Progress:==================>           61%] [Cov:===========================>       79%][Progress:==================>           61%] [Cov:===========================>       79%][Progress:==================>           61%] [Cov:===========================>       79%][Progress:==================>           61%] [Cov:===========================>       79%][Progress:==================>           61%] [Cov:===========================>       79%][Progress:==================>           62%] [Cov:===========================>       79%][Progress:==================>           62%] [Cov:===========================>       79%][Progress:==================>           62%] [Cov:===========================>       79%][Progress:==================>           62%] [Cov:===========================>       79%][Progress:==================>           62%] [Cov:===========================>       79%][Progress:==================>           62%] [Cov:===========================>       79%][Progress:==================>           63%] [Cov:===========================>       79%][Progress:==================>           63%] [Cov:===========================>       79%][Progress:==================>           63%] [Cov:============================>      81%][Progress:==================>           63%] [Cov:============================>      81%][Progress:==================>           63%] [Cov:============================>      81%][Progress:==================>           63%] [Cov:============================>      81%][Progress:==================>           63%] [Cov:============================>      81%][Progress:==================>           63%] [Cov:============================>      81%][Progress:===================>          64%] [Cov:============================>      81%][Progress:===================>          64%] [Cov:============================>      81%][Progress:===================>          64%] [Cov:============================>      81%][Progress:===================>          64%] [Cov:============================>      81%][Progress:===================>          64%] [Cov:============================>      81%][Progress:===================>          64%] [Cov:============================>      81%][Progress:===================>          64%] [Cov:============================>      81%][Progress:===================>          64%] [Cov:============================>      81%][Progress:===================>          64%] [Cov:============================>      81%][Progress:===================>          64%] [Cov:============================>      81%][Progress:===================>          65%] [Cov:============================>      81%][Progress:===================>          65%] [Cov:============================>      81%][Progress:===================>          65%] [Cov:============================>      81%][Progress:===================>          65%] [Cov:============================>      81%][Progress:===================>          65%] [Cov:============================>      81%][Progress:===================>          65%] [Cov:============================>      81%][Progress:===================>          65%] [Cov:============================>      81%][Progress:===================>          65%] [Cov:============================>      81%][Progress:===================>          65%] [Cov:============================>      81%][Progress:===================>          65%] [Cov:============================>      81%][Progress:===================>          66%] [Cov:============================>      81%][Progress:===================>          66%] [Cov:============================>      81%][Progress:===================>          66%] [Cov:============================>      81%][Progress:===================>          66%] [Cov:============================>      81%][Progress:===================>          66%] [Cov:============================>      81%][Progress:===================>          66%] [Cov:============================>      81%][Progress:===================>          66%] [Cov:============================>      81%][Progress:===================>          66%] [Cov:============================>      81%][Progress:===================>          66%] [Cov:============================>      81%][Progress:====================>         67%] [Cov:============================>      81%][Progress:====================>         67%] [Cov:============================>      81%][Progress:====================>         67%] [Cov:============================>      81%][Progress:====================>         67%] [Cov:============================>      81%][Progress:====================>         67%] [Cov:============================>      81%][Progress:====================>         67%] [Cov:============================>      81%][Progress:====================>         67%] [Cov:============================>      81%][Progress:====================>         67%] [Cov:============================>      81%][Progress:====================>         67%] [Cov:============================>      81%][Progress:====================>         68%] [Cov:============================>      81%][Progress:====================>         68%] [Cov:============================>      81%][Progress:====================>         68%] [Cov:============================>      81%][Progress:====================>         68%] [Cov:============================>      81%][Progress:====================>         68%] [Cov:============================>      81%][Progress:====================>         69%] [Cov:============================>      81%][Progress:====================>         69%] [Cov:============================>      81%][Progress:====================>         69%] [Cov:============================>      81%][Progress:====================>         69%] [Cov:============================>      81%][Progress:====================>         69%] [Cov:============================>      81%][Progress:====================>         69%] [Cov:============================>      81%][Progress:=====================>        70%] [Cov:============================>      81%][Progress:=====================>        70%] [Cov:============================>      81%][Progress:=====================>        70%] [Cov:============================>      81%][Progress:=====================>        70%] [Cov:============================>      81%][Progress:=====================>        70%] [Cov:============================>      81%][Progress:=====================>        70%] [Cov:============================>      81%][Progress:=====================>        70%] [Cov:============================>      81%][Progress:=====================>        71%] [Cov:============================>      81%][Progress:=====================>        71%] [Cov:============================>      81%][Progress:=====================>        71%] [Cov:============================>      81%][Progress:=====================>        71%] [Cov:============================>      81%][Progress:=====================>        71%] [Cov:============================>      81%][Progress:=====================>        71%] [Cov:============================>      81%][Progress:=====================>        71%] [Cov:============================>      81%][Progress:=====================>        71%] [Cov:============================>      81%][Progress:=====================>        72%] [Cov:============================>      81%][Progress:=====================>        72%] [Cov:============================>      81%][Progress:=====================>        72%] [Cov:============================>      81%][Progress:=====================>        72%] [Cov:============================>      81%][Progress:=====================>        72%] [Cov:============================>      81%][Progress:=====================>        72%] [Cov:============================>      81%][Progress:=====================>        72%] [Cov:============================>      81%][Progress:=====================>        72%] [Cov:============================>      81%][Progress:=====================>        73%] [Cov:============================>      81%][Progress:=======================>      78%] [Cov:============================>      81%][Progress:=======================>      78%] [Cov:============================>      81%][Progress:=======================>      78%] [Cov:============================>      81%][Progress:=======================>      78%] [Cov:============================>      81%][Progress:=======================>      78%] [Cov:============================>      81%][Progress:=======================>      78%] [Cov:============================>      81%][Progress:=======================>      78%] [Cov:============================>      81%][Progress:=======================>      78%] [Cov:============================>      81%][Progress:=======================>      79%] [Cov:============================>      81%][Progress:=======================>      79%] [Cov:============================>      81%][Progress:=======================>      79%] [Cov:============================>      81%][Progress:=======================>      79%] [Cov:============================>      81%][Progress:=======================>      79%] [Cov:============================>      81%][Progress:=======================>      79%] [Cov:============================>      81%][Progress:=======================>      79%] [Cov:============================>      81%][Progress:=======================>      79%] [Cov:============================>      81%][Progress:=======================>      79%] [Cov:============================>      81%][Progress:========================>     80%] [Cov:============================>      81%][Progress:========================>     80%] [Cov:============================>      81%][Progress:========================>     80%] [Cov:============================>      81%][Progress:========================>     80%] [Cov:============================>      81%][Progress:========================>     80%] [Cov:============================>      81%][Progress:========================>     80%] [Cov:============================>      81%][Progress:========================>     80%] [Cov:============================>      81%][Progress:========================>     80%] [Cov:============================>      81%][Progress:========================>     80%] [Cov:============================>      81%][Progress:========================>     80%] [Cov:============================>      81%][Progress:========================>     81%] [Cov:============================>      81%][Progress:========================>     81%] [Cov:============================>      81%][Progress:========================>     81%] [Cov:============================>      81%][Progress:========================>     81%] [Cov:============================>      81%][Progress:========================>     81%] [Cov:============================>      81%][Progress:========================>     81%] [Cov:============================>      81%][Progress:========================>     81%] [Cov:============================>      81%][Progress:========================>     81%] [Cov:============================>      81%][Progress:========================>     81%] [Cov:============================>      81%][Progress:========================>     81%] [Cov:============================>      81%][Progress:========================>     82%] [Cov:============================>      81%][Progress:========================>     82%] [Cov:============================>      81%][Progress:========================>     82%] [Cov:============================>      81%][Progress:========================>     82%] [Cov:============================>      81%][Progress:========================>     82%] [Cov:============================>      81%][Progress:========================>     82%] [Cov:============================>      81%][Progress:========================>     82%] [Cov:============================>      81%][Progress:========================>     82%] [Cov:============================>      81%][Progress:========================>     82%] [Cov:============================>      81%][Progress:========================>     82%] [Cov:============================>      81%][Progress:========================>     83%] [Cov:============================>      81%][Progress:========================>     83%] [Cov:============================>      81%][Progress:========================>     83%] [Cov:============================>      81%][Progress:========================>     83%] [Cov:============================>      81%][Progress:========================>     83%] [Cov:============================>      81%][Progress:========================>     83%] [Cov:============================>      81%][Progress:========================>     83%] [Cov:============================>      81%][Progress:========================>     83%] [Cov:============================>      81%][Progress:========================>     83%] [Cov:============================>      81%][Progress:========================>     83%] [Cov:============================>      81%][Progress:========================>     83%] [Cov:============================>      81%][Progress:=========================>    84%] [Cov:============================>      81%][Progress:=========================>    84%] [Cov:============================>      81%][Progress:=========================>    84%] [Cov:============================>      81%][Progress:=========================>    84%] [Cov:============================>      81%][Progress:=========================>    84%] [Cov:============================>      81%][Progress:=========================>    84%] [Cov:============================>      81%][Progress:=========================>    84%] [Cov:============================>      81%][Progress:=========================>    84%] [Cov:============================>      81%][Progress:=========================>    84%] [Cov:============================>      81%][Progress:=========================>    84%] [Cov:============================>      81%][Progress:=========================>    84%] [Cov:============================>      81%][Progress:=========================>    85%] [Cov:============================>      81%][Progress:=========================>    85%] [Cov:============================>      81%][Progress:=========================>    85%] [Cov:============================>      81%][Progress:=========================>    85%] [Cov:============================>      81%][Progress:=========================>    85%] [Cov:============================>      81%][Progress:=========================>    85%] [Cov:============================>      81%][Progress:=========================>    85%] [Cov:============================>      81%][Progress:=========================>    85%] [Cov:============================>      81%][Progress:=========================>    85%] [Cov:============================>      81%][Progress:=========================>    85%] [Cov:============================>      81%][Progress:=========================>    86%] [Cov:============================>      81%][Progress:=========================>    86%] [Cov:============================>      81%][Progress:=========================>    86%] [Cov:============================>      81%][Progress:=========================>    86%] [Cov:============================>      81%][Progress:=========================>    86%] [Cov:============================>      81%][Progress:=========================>    86%] [Cov:============================>      81%][Progress:=========================>    86%] [Cov:============================>      81%][Progress:=========================>    86%] [Cov:============================>      81%][Progress:=========================>    86%] [Cov:============================>      81%][Progress:=========================>    86%] [Cov:============================>      81%][Progress:==========================>   87%] [Cov:============================>      81%][Progress:==========================>   87%] [Cov:============================>      81%][Progress:==========================>   87%] [Cov:============================>      81%][Progress:==========================>   87%] [Cov:============================>      81%][Progress:==========================>   87%] [Cov:============================>      81%][Progress:==========================>   87%] [Cov:============================>      81%][Progress:==========================>   87%] [Cov:============================>      81%][Progress:==========================>   87%] [Cov:============================>      81%][Progress:==========================>   87%] [Cov:============================>      81%][Progress:==========================>   87%] [Cov:============================>      81%][Progress:==========================>   87%] [Cov:============================>      81%][Progress:==========================>   88%] [Cov:============================>      81%][Progress:==========================>   88%] [Cov:============================>      81%][Progress:==========================>   88%] [Cov:============================>      81%][Progress:==========================>   88%] [Cov:============================>      81%][Progress:==========================>   88%] [Cov:============================>      81%][Progress:==========================>   88%] [Cov:============================>      81%][Progress:==========================>   88%] [Cov:============================>      81%][Progress:==========================>   88%] [Cov:============================>      81%][Progress:==========================>   88%] [Cov:============================>      81%][Progress:==========================>   88%] [Cov:============================>      81%][Progress:==========================>   88%] [Cov:============================>      81%][Progress:==========================>   89%] [Cov:============================>      81%][Progress:==========================>   89%] [Cov:============================>      81%][Progress:==========================>   89%] [Cov:============================>      81%][Progress:==========================>   89%] [Cov:============================>      81%][Progress:==========================>   89%] [Cov:============================>      81%][Progress:==========================>   89%] [Cov:============================>      81%][Progress:==========================>   89%] [Cov:============================>      81%][Progress:==========================>   89%] [Cov:============================>      81%][Progress:==========================>   89%] [Cov:============================>      81%][Progress:===========================>  90%] [Cov:============================>      81%][Progress:===========================>  90%] [Cov:============================>      81%][Progress:===========================>  90%] [Cov:============================>      81%][Progress:===========================>  90%] [Cov:============================>      81%][Progress:===========================>  90%] [Cov:============================>      81%][Progress:===========================>  90%] [Cov:============================>      81%][Progress:===========================>  90%] [Cov:============================>      81%][Progress:===========================>  90%] [Cov:============================>      81%][Progress:===========================>  90%] [Cov:============================>      81%][Progress:===========================>  90%] [Cov:============================>      81%][Progress:===========================>  91%] [Cov:============================>      81%][Progress:===========================>  91%] [Cov:============================>      81%][Progress:===========================>  91%] [Cov:============================>      81%][Progress:===========================>  91%] [Cov:============================>      81%][Progress:===========================>  91%] [Cov:============================>      81%][Progress:===========================>  91%] [Cov:============================>      81%][Progress:===========================>  91%] [Cov:============================>      81%][Progress:===========================>  91%] [Cov:============================>      81%][Progress:===========================>  91%] [Cov:============================>      81%][Progress:===========================>  91%] [Cov:============================>      81%][Progress:===========================>  92%] [Cov:============================>      81%][Progress:===========================>  92%] [Cov:============================>      81%][Progress:===========================>  92%] [Cov:============================>      81%][Progress:===========================>  92%] [Cov:============================>      81%][Progress:===========================>  92%] [Cov:============================>      81%][Progress:===========================>  92%] [Cov:============================>      81%][Progress:===========================>  92%] [Cov:============================>      81%][Progress:===========================>  92%] [Cov:============================>      81%][Progress:===========================>  92%] [Cov:============================>      81%][Progress:===========================>  93%] [Cov:============================>      81%][Progress:===========================>  93%] [Cov:============================>      81%][Progress:===========================>  93%] [Cov:============================>      81%][Progress:===========================>  93%] [Cov:============================>      81%][Progress:===========================>  93%] [Cov:============================>      81%][Progress:===========================>  93%] [Cov:============================>      81%][Progress:===========================>  93%] [Cov:============================>      81%][Progress:===========================>  93%] [Cov:============================>      81%][Progress:===========================>  93%] [Cov:============================>      81%][Progress:===========================>  93%] [Cov:============================>      81%][Progress:===========================>  93%] [Cov:============================>      81%][Progress:============================> 94%] [Cov:============================>      81%][Progress:============================> 94%] [Cov:============================>      81%][Progress:============================> 94%] [Cov:============================>      81%][Progress:============================> 94%] [Cov:============================>      81%][Progress:============================> 94%] [Cov:============================>      81%][Progress:============================> 94%] [Cov:============================>      81%][Progress:============================> 94%] [Cov:============================>      81%][Progress:============================> 94%] [Cov:============================>      81%][Progress:============================> 95%] [Cov:============================>      81%][Progress:============================> 95%] [Cov:============================>      81%][Progress:============================> 95%] [Cov:============================>      81%][Progress:============================> 95%] [Cov:============================>      81%][Progress:============================> 95%] [Cov:============================>      81%][Progress:============================> 95%] [Cov:============================>      81%][Progress:============================> 95%] [Cov:============================>      81%][Progress:============================> 96%] [Cov:============================>      81%][Progress:============================> 96%] [Cov:============================>      81%][Progress:============================> 96%] [Cov:============================>      81%][Progress:============================> 96%] [Cov:============================>      81%][Progress:============================> 96%] [Cov:============================>      81%][Progress:============================> 96%] [Cov:============================>      81%][Progress:============================> 96%] [Cov:============================>      81%][Progress:=============================>97%] [Cov:============================>      81%][Progress:=============================>97%] [Cov:============================>      81%][Progress:=============================>97%] [Cov:============================>      81%][Progress:=============================>97%] [Cov:============================>      81%][Progress:=============================>97%] [Cov:============================>      81%][Progress:=============================>97%] [Cov:============================>      81%][Progress:=============================>97%] [Cov:============================>      81%][Progress:=============================>98%] [Cov:============================>      81%][Progress:=============================>98%] [Cov:============================>      81%][Progress:=============================>98%] [Cov:============================>      81%][Progress:=============================>98%] [Cov:============================>      81%][Progress:=============================>98%] [Cov:============================>      81%][Progress:=============================>98%] [Cov:============================>      81%][Progress:=============================>98%] [Cov:============================>      81%][Progress:=============================>99%] [Cov:============================>      81%][Progress:=============================>99%] [Cov:============================>      81%][Progress:=============================>99%] [Cov:============================>      81%][Progress:=============================>99%] [Cov:============================>      81%][Progress:=============================>99%] [Cov:============================>      81%][Progress:=============================>99%] [Cov:============================>      81%][Progress:=============================>99%] [Cov:============================>      81%][Progress:=============================>99%] [Cov:============================>      81%][Progress:=============================>99%] [Cov:============================>      81%][Progress:=============================>99%] [Cov:============================>      81%][Progress:=============================>99%] [Cov:============================>      81%][Progress:=============================>99%] [Cov:============================>      81%][Progress:==============================100%] [Cov:============================>      81%][Progress:==============================100%] [Cov:============================>      81%][Progress:==============================100%] [Cov:============================>      81%][Progress:==============================100%] [Cov:============================>      81%][Progress:==============================100%] [Cov:============================>      81%][Progress:==============================100%] [Cov:============================>      81%][Progress:==============================100%] [Cov:============================>      81%][Progress:==============================100%] [Cov:============================>      81%][Progress:==============================100%] [Cov:============================>      81%][Progress:==============================100%] [Cov:============================>      81%][Progress:==============================100%] [Cov:============================>      81%]
* Search finished after 101s and 674 generations, 275310 statements, best individual has fitness: 34.0
* Generated before the refinement 12 tests with total length 35
statement is: java.util.HashMap()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type java.util.HashMap<java.text.Format$Field, ghm.follow.search.LineResult>
statement code is: HashMap<Format.Field, LineResult> hashMap = new HashMap<Format.Field, LineResult>()
statement is: java.awt.Font(Ljava/util/Map;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.awt.Font
statement code is: Font font = new Font(arg0)
statement is: ghm.follow.search.SearchableTextPane(Ljava/awt/Font;I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class ghm.follow.search.SearchableTextPane
statement code is: SearchableTextPane searchableTextPane = new SearchableTextPane(arg0, 942)
statement is: search(Ljava/lang/String;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int search = searchableTextPane.search("/Z]wm^")
test data is: HashMap<Format.Field, LineResult> hashMap = new HashMap<Format.Field, LineResult>();
Font font = new Font(hashMap);
SearchableTextPane searchableTextPane = new SearchableTextPane(font, 942);
searchableTextPane.search("/Z]wm^");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        HashMap<Format.Field, LineResult> hashMap = new HashMap<Format.Field, LineResult>();
        Font font = new Font("Serif", Font.BOLD, 14);
        SearchableTextPane searchableTextPane = new SearchableTextPane(font, "This is a sample text");
        searchableTextPane.search("/Z]wm^");
    }
}
statement is: HashMap<Format.Field, LineResult> hashMap = new HashMap<Format.Field, LineResult>(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Font font = new Font("Serif", Font.BOLD, 14), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: SearchableTextPane searchableTextPane = new SearchableTextPane(font, "This is a sample text"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: searchableTextPane.search("/Z]wm^"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: searchableTextPane.search("/Z]wm^") target is: searchableTextPane method is: search(java.lang.String)
source statement: ghm.follow.search.SearchableTextPane(Ljava/awt/Font;I)V callee: VariableReference: Statement 2, type ghm.follow.search.SearchableTextPaneindex is: 2
Matched Method is: search(Ljava/lang/String;)I
TestCase is: HashMap<Format.Field, LineResult> hashMap = new HashMap<Format.Field, LineResult>();
String string = "This is a sample text";
SearchableTextPane searchableTextPane = new SearchableTextPane((Font) string, 942);
String string = "/Z]wm^";
searchableTextPane.search(string);

statement is: ghm.follow.search.SearchableTextPane(Ljava/awt/Font;I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class ghm.follow.search.SearchableTextPane
statement code is: SearchableTextPane searchableTextPane = new SearchableTextPane((Font) null, 3931)
statement is: highlight(Ljava/lang/String;I)Ljava/util/List; type is: class org.evosuite.testcase.statements.MethodStatement return type java.util.List<ghm.follow.search.LineResult>
statement code is: List<LineResult> highlight = searchableTextPane.highlight("|-*vjj//yfXv", 3931)
test data is: SearchableTextPane searchableTextPane = new SearchableTextPane((Font) null, 3931);
searchableTextPane.highlight("|-*vjj//yfXv", 3931);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        SearchableTextPane searchableTextPane = new SearchableTextPane(new Font("Arial", Font.BOLD, 12), Color.RED);
        searchableTextPane.highlight("This is a sample text with multiple words.", font, color);
    }
}
statement is: SearchableTextPane searchableTextPane = new SearchableTextPane(new Font("Arial", Font.BOLD, 12), Color.RED), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: searchableTextPane.highlight("This is a sample text with multiple words.", font, color), class spoon.support.reflect.code.CtInvocationImpl
invocation is: searchableTextPane.highlight("This is a sample text with multiple words.", font, color) target is: searchableTextPane method is: highlight(java.lang.String)
TestCase is: SearchableTextPane searchableTextPane = new SearchableTextPane((Font) null, 3931);

statement is: javax.swing.text.StringContent(I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class javax.swing.text.StringContent
statement code is: StringContent stringContent = new StringContent(0)
statement is: javax.swing.text.StyleContext()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class javax.swing.text.StyleContext
statement code is: StyleContext styleContext = new StyleContext()
statement is: javax.swing.text.DefaultStyledDocument(Ljavax/swing/text/AbstractDocument$Content;Ljavax/swing/text/StyleContext;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class javax.swing.text.DefaultStyledDocument
statement code is: DefaultStyledDocument defaultStyledDocument = new DefaultStyledDocument(arg0, arg1)
statement is: javax.swing.text.StyleContext$NamedStyle(Ljavax/swing/text/StyleContext;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class javax.swing.text.StyleContext$NamedStyle
statement code is: StyleContext.NamedStyle styleContext_NamedStyle = arg0.new NamedStyle()
statement is: getFont(Ljavax/swing/text/AttributeSet;)Ljava/awt/Font; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.awt.Font
statement code is: Font font = defaultStyledDocument.getFont(arg0)
statement is: ghm.follow.search.SearchableTextPane(Ljava/awt/Font;I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class ghm.follow.search.SearchableTextPane
statement code is: SearchableTextPane searchableTextPane = new SearchableTextPane(arg0, 1910)
statement is: getScrollableTracksViewportWidth()Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean scrollableTracksViewportWidth = searchableTextPane.getScrollableTracksViewportWidth()
test data is: StringContent stringContent = new StringContent(0);
StyleContext styleContext = new StyleContext();
DefaultStyledDocument defaultStyledDocument = new DefaultStyledDocument(stringContent, styleContext);
StyleContext.NamedStyle styleContext_NamedStyle = styleContext.new NamedStyle();
Font font = defaultStyledDocument.getFont(styleContext_NamedStyle);
SearchableTextPane searchableTextPane = new SearchableTextPane(font, 1910);
searchableTextPane.getScrollableTracksViewportWidth();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringContent stringContent = new StringContent("This is a test string.");
        StyleContext styleContext = new StyleContext();
        DefaultStyledDocument defaultStyledDocument = new DefaultStyledDocument(stringContent, styleContext);
        StyleContext.NamedStyle styleContext_NamedStyle = styleContext.new NamedStyle();
        Font font = defaultStyledDocument.getFont(styleContext_NamedStyle);
        SearchableTextPane searchableTextPane = new SearchableTextPane(font, 1910);
        searchableTextPane.setScrollableTracksViewportWidth(true);
    }
}
statement is: StringContent stringContent = new StringContent("This is a test string."), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: StyleContext styleContext = new StyleContext(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultStyledDocument defaultStyledDocument = new DefaultStyledDocument(stringContent, styleContext), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: StyleContext.NamedStyle styleContext_NamedStyle = styleContext.new NamedStyle(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Font font = defaultStyledDocument.getFont(styleContext_NamedStyle), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: defaultStyledDocument.getFont(styleContext_NamedStyle) target is: defaultStyledDocument method is: getFont(StyleContext.NamedStyle)
source statement: javax.swing.text.DefaultStyledDocument(Ljavax/swing/text/AbstractDocument$Content;Ljavax/swing/text/StyleContext;)V callee: VariableReference: Statement 2, type javax.swing.text.DefaultStyledDocumentindex is: 3
Matched Method is: getFont(Ljavax/swing/text/AttributeSet;)Ljava/awt/Font;
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: SearchableTextPane searchableTextPane = new SearchableTextPane(font, 1910), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: searchableTextPane.setScrollableTracksViewportWidth(true), class spoon.support.reflect.code.CtInvocationImpl
invocation is: searchableTextPane.setScrollableTracksViewportWidth(true) target is: searchableTextPane method is: setScrollableTracksViewportWidth(boolean)
TestCase is: String string = "This is a test string.";
StringContent stringContent = new StringContent((int) string);
StyleContext styleContext = new StyleContext();
DefaultStyledDocument defaultStyledDocument = new DefaultStyledDocument(stringContent, styleContext);
StyleContext.NamedStyle styleContext_NamedStyle = null;
Font font = styleContext.getFont(styleContext_NamedStyle);
int _int = 1910;
SearchableTextPane searchableTextPane = new SearchableTextPane(font, _int);

statement is: ghm.follow.search.SearchableTextPane(Ljava/awt/Font;I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class ghm.follow.search.SearchableTextPane
statement code is: SearchableTextPane searchableTextPane = new SearchableTextPane((Font) null, (-2507))
statement is: highlight(Ljava/lang/String;I)Ljava/util/List; type is: class org.evosuite.testcase.statements.MethodStatement return type java.util.List<ghm.follow.search.LineResult>
statement code is: List<LineResult> highlight = searchableTextPane.highlight((String) null, (-2507))
test data is: SearchableTextPane searchableTextPane = new SearchableTextPane((Font) null, (-2507));
searchableTextPane.highlight((String) null, (-2507));

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        SearchableTextPane searchableTextPane = new SearchableTextPane(new Font("Arial", Font.PLAIN, 12), "This is a test string");
        searchableTextPane.highlight("test", 5);
    }
}
statement is: SearchableTextPane searchableTextPane = new SearchableTextPane(new Font("Arial", Font.PLAIN, 12), "This is a test string"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: searchableTextPane.highlight("test", 5), class spoon.support.reflect.code.CtInvocationImpl
invocation is: searchableTextPane.highlight("test", 5) target is: searchableTextPane method is: highlight(java.lang.String,int)
source statement: ghm.follow.search.SearchableTextPane(Ljava/awt/Font;I)V callee: VariableReference: Statement 0, type ghm.follow.search.SearchableTextPaneindex is: 1
Matched Method is: highlight(Ljava/lang/String;I)Ljava/util/List;
TestCase is: String string = "This is a test string";
SearchableTextPane searchableTextPane = new SearchableTextPane((Font) string, (-2507));
String string = "test";
int _int = 5;
((SearchableTextPane) string).highlight(string, _int);

statement is: ghm.follow.search.SearchableTextPane(Ljava/awt/Font;I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class ghm.follow.search.SearchableTextPane
statement code is: SearchableTextPane searchableTextPane = new SearchableTextPane((Font) null, 3931)
statement is: highlight(Ljava/lang/String;I)Ljava/util/List; type is: class org.evosuite.testcase.statements.MethodStatement return type java.util.List<ghm.follow.search.LineResult>
statement code is: List<LineResult> highlight = searchableTextPane.highlight("", 3931)
test data is: SearchableTextPane searchableTextPane = new SearchableTextPane((Font) null, 3931);
searchableTextPane.highlight("", 3931);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        SearchableTextPane searchableTextPane = new SearchableTextPane(new Font("Arial", Font.PLAIN, 24), "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.");
        searchableTextPane.highlight("sample", "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.");
    }
}
statement is: SearchableTextPane searchableTextPane = new SearchableTextPane(new Font("Arial", Font.PLAIN, 24), "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum."), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: searchableTextPane.highlight("sample", "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum."), class spoon.support.reflect.code.CtInvocationImpl
invocation is: searchableTextPane.highlight("sample", "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.") target is: searchableTextPane method is: highlight(java.lang.String,java.lang.String)
source statement: ghm.follow.search.SearchableTextPane(Ljava/awt/Font;I)V callee: VariableReference: Statement 0, type ghm.follow.search.SearchableTextPaneindex is: 1
Matched Method is: highlight(Ljava/lang/String;I)Ljava/util/List;
TestCase is: String string = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.";
SearchableTextPane searchableTextPane = new SearchableTextPane((Font) string, 3931);
String string = "sample";
String string = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.";
((SearchableTextPane) string).highlight(string, (int) string);

statement is: ghm.follow.search.SearchableTextPane(Ljava/awt/Font;I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class ghm.follow.search.SearchableTextPane
statement code is: SearchableTextPane searchableTextPane = new SearchableTextPane((Font) null, (-1410))
statement is: search(Ljava/lang/String;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int search = searchableTextPane.search((String) null)
test data is: SearchableTextPane searchableTextPane = new SearchableTextPane((Font) null, (-1410));
searchableTextPane.search((String) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        SearchableTextPane searchableTextPane = new SearchableTextPane(new Font("Arial", Font.BOLD, 14), Color.BLUE);
        searchableTextPane.search("Hello World");
    }
}
statement is: SearchableTextPane searchableTextPane = new SearchableTextPane(new Font("Arial", Font.BOLD, 14), Color.BLUE), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: searchableTextPane.search("Hello World"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: searchableTextPane.search("Hello World") target is: searchableTextPane method is: search(java.lang.String)
source statement: ghm.follow.search.SearchableTextPane(Ljava/awt/Font;I)V callee: VariableReference: Statement 0, type ghm.follow.search.SearchableTextPaneindex is: 0
Matched Method is: search(Ljava/lang/String;)I
TestCase is: SearchableTextPane searchableTextPane = new SearchableTextPane((Font) null, (-1410));
String string = "Hello World";
searchableTextPane.search(string);

statement is: ghm.follow.search.SearchableTextPane(Ljava/awt/Font;I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class ghm.follow.search.SearchableTextPane
statement code is: SearchableTextPane searchableTextPane = new SearchableTextPane((Font) null, (-2507))
statement is: search(Ljava/lang/String;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int search = searchableTextPane.search("")
test data is: SearchableTextPane searchableTextPane = new SearchableTextPane((Font) null, (-2507));
searchableTextPane.search("");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        SearchableTextPane searchableTextPane = new SearchableTextPane(new Font("Serif", Font.PLAIN, 12), Color.BLACK);
        searchableTextPane.search("Hello World");
    }
}
statement is: SearchableTextPane searchableTextPane = new SearchableTextPane(new Font("Serif", Font.PLAIN, 12), Color.BLACK), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: searchableTextPane.search("Hello World"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: searchableTextPane.search("Hello World") target is: searchableTextPane method is: search(java.lang.String)
source statement: ghm.follow.search.SearchableTextPane(Ljava/awt/Font;I)V callee: VariableReference: Statement 0, type ghm.follow.search.SearchableTextPaneindex is: 0
Matched Method is: search(Ljava/lang/String;)I
TestCase is: SearchableTextPane searchableTextPane = new SearchableTextPane((Font) null, (-2507));
String string = "Hello World";
searchableTextPane.search(string);

statement is: java.util.HashMap()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type java.util.HashMap<java.text.Format$Field, ghm.follow.search.LineResult>
statement code is: HashMap<Format.Field, LineResult> hashMap = new HashMap<Format.Field, LineResult>()
statement is: java.awt.Font(Ljava/util/Map;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.awt.Font
statement code is: Font font = new Font(arg0)
statement is: ghm.follow.search.SearchableTextPane(Ljava/awt/Font;I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class ghm.follow.search.SearchableTextPane
statement code is: SearchableTextPane searchableTextPane = new SearchableTextPane(arg0, 942)
statement is: highlight(Ljava/lang/String;I)Ljava/util/List; type is: class org.evosuite.testcase.statements.MethodStatement return type java.util.List<ghm.follow.search.LineResult>
statement code is: List<LineResult> highlight = searchableTextPane.highlight("ghm.follow.search.LineResult", (-1417))
test data is: HashMap<Format.Field, LineResult> hashMap = new HashMap<Format.Field, LineResult>();
Font font = new Font(hashMap);
SearchableTextPane searchableTextPane = new SearchableTextPane(font, 942);
searchableTextPane.highlight("ghm.follow.search.LineResult", (-1417));

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        HashMap<Format.Field, LineResult> hashMap = new HashMap<Format.Field, LineResult>();
        Font font = new Font(hashMap);
        SearchableTextPane searchableTextPane = new SearchableTextPane(font, 942);
        searchableTextPane.highlight("ghm.follow.search.LineResult", -1417);
    }
}
statement is: HashMap<Format.Field, LineResult> hashMap = new HashMap<Format.Field, LineResult>(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Font font = new Font(hashMap), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: SearchableTextPane searchableTextPane = new SearchableTextPane(font, 942), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: searchableTextPane.highlight("ghm.follow.search.LineResult", -1417), class spoon.support.reflect.code.CtInvocationImpl
invocation is: searchableTextPane.highlight("ghm.follow.search.LineResult", -1417) target is: searchableTextPane method is: highlight(java.lang.String,int)
source statement: ghm.follow.search.SearchableTextPane(Ljava/awt/Font;I)V callee: VariableReference: Statement 2, type ghm.follow.search.SearchableTextPaneindex is: 3
Matched Method is: highlight(Ljava/lang/String;I)Ljava/util/List;
i 1 Parameters size() 1 Num of Method Parameters: 2
TestCase is: HashMap<Format.Field, LineResult> hashMap = new HashMap<Format.Field, LineResult>();
Font font = new Font(hashMap);
int _int = 942;
SearchableTextPane searchableTextPane = new SearchableTextPane(font, _int);
String string = "ghm.follow.search.LineResult";
int _int = null;
((SearchableTextPane) _int).highlight(string, _int);

statement is: ghm.follow.search.SearchableTextPane(Ljava/awt/Font;I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class ghm.follow.search.SearchableTextPane
statement code is: SearchableTextPane searchableTextPane = new SearchableTextPane((Font) null, Integer.MAX_VALUE)
statement is: search(Ljava/lang/String;I)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int search = searchableTextPane.search("", Integer.MAX_VALUE)
test data is: SearchableTextPane searchableTextPane = new SearchableTextPane((Font) null, Integer.MAX_VALUE);
searchableTextPane.search("", Integer.MAX_VALUE);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        SearchableTextPane searchableTextPane = new SearchableTextPane(new Font(Font.SANS_SERIF, Font.PLAIN, 12), Integer.MAX_VALUE);
        searchableTextPane.search("Hello World!", Integer.MAX_VALUE);
    }
}
statement is: SearchableTextPane searchableTextPane = new SearchableTextPane(new Font(Font.SANS_SERIF, Font.PLAIN, 12), Integer.MAX_VALUE), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: searchableTextPane.search("Hello World!", Integer.MAX_VALUE), class spoon.support.reflect.code.CtInvocationImpl
invocation is: searchableTextPane.search("Hello World!", Integer.MAX_VALUE) target is: searchableTextPane method is: search(java.lang.String,int)
source statement: ghm.follow.search.SearchableTextPane(Ljava/awt/Font;I)V callee: VariableReference: Statement 0, type ghm.follow.search.SearchableTextPaneindex is: 0
Matched Method is: search(Ljava/lang/String;I)I
i 1 Parameters size() 1 Num of Method Parameters: 2
TestCase is: SearchableTextPane searchableTextPane = new SearchableTextPane((Font) null, Integer.MAX_VALUE);
String string = "Hello World!";
int _int = null;
searchableTextPane.search(string, _int);

statement is: ghm.follow.search.SearchableTextPane(Ljava/awt/Font;I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class ghm.follow.search.SearchableTextPane
statement code is: SearchableTextPane searchableTextPane = new SearchableTextPane((Font) null, Integer.MAX_VALUE)
statement is: removeHighlights()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: searchableTextPane.removeHighlights()
test data is: SearchableTextPane searchableTextPane = new SearchableTextPane((Font) null, Integer.MAX_VALUE);
searchableTextPane.removeHighlights();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        SearchableTextPane searchableTextPane = new SearchableTextPane(new Font("Times New Roman", Font.BOLD, 18), 20);
        searchableTextPane.removeHighlights();
        String text = "This is a sample text for testing the highlighting functionality of the SearchableTextPane with a bold font and limited highlights.";
        searchableTextPane.setText(text);
        searchableTextPane.highlight("sample");
    }
}
statement is: SearchableTextPane searchableTextPane = new SearchableTextPane(new Font("Times New Roman", Font.BOLD, 18), 20), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: searchableTextPane.removeHighlights(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: searchableTextPane.removeHighlights() target is: searchableTextPane method is: removeHighlights()
source statement: ghm.follow.search.SearchableTextPane(Ljava/awt/Font;I)V callee: VariableReference: Statement 0, type ghm.follow.search.SearchableTextPaneindex is: 1
Matched Method is: removeHighlights()V
statement is: String text = "This is a sample text for testing the highlighting functionality of the SearchableTextPane with a bold font and limited highlights.", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: searchableTextPane.setText(text), class spoon.support.reflect.code.CtInvocationImpl
invocation is: searchableTextPane.setText(text) target is: searchableTextPane method is: setText(java.lang.String)
statement is: searchableTextPane.highlight("sample"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: searchableTextPane.highlight("sample") target is: searchableTextPane method is: highlight(java.lang.String)
* this is vulnerable: String string = "This is a sample text for testing the highlighting functionality of the SearchableTextPane with a bold font and limited highlights."
TestCase is: int _int = 20;
SearchableTextPane searchableTextPane = new SearchableTextPane((Font) _int, Integer.MAX_VALUE);
((SearchableTextPane) _int).removeHighlights();
String string = "This is a sample text for testing the highlighting functionality of the SearchableTextPane with a bold font and limited highlights.";

statement is: ghm.follow.search.SearchableTextPane(Ljava/awt/Font;I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class ghm.follow.search.SearchableTextPane
statement code is: SearchableTextPane searchableTextPane = new SearchableTextPane((Font) null, (-809))
statement is: javax.swing.JScrollPane(Ljava/awt/Component;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class javax.swing.JScrollPane
statement code is: JScrollPane jScrollPane = new JScrollPane(arg0)
statement is: getScrollableTracksViewportWidth()Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean scrollableTracksViewportWidth = searchableTextPane.getScrollableTracksViewportWidth()
test data is: SearchableTextPane searchableTextPane = new SearchableTextPane((Font) null, (-809));
JScrollPane jScrollPane = new JScrollPane(searchableTextPane);
searchableTextPane.getScrollableTracksViewportWidth();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        SearchableTextPane searchableTextPane = new SearchableTextPane(new Font("Arial", Font.BOLD, 14), "This is a test string");
        JScrollPane jScrollPane = new JScrollPane(searchableTextPane);
        searchableTextPane.getScrollableTracksViewportWidth();
    }
}
statement is: SearchableTextPane searchableTextPane = new SearchableTextPane(new Font("Arial", Font.BOLD, 14), "This is a test string"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JScrollPane jScrollPane = new JScrollPane(searchableTextPane), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: searchableTextPane.getScrollableTracksViewportWidth(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: searchableTextPane.getScrollableTracksViewportWidth() target is: searchableTextPane method is: getScrollableTracksViewportWidth()
source statement: ghm.follow.search.SearchableTextPane(Ljava/awt/Font;I)V callee: VariableReference: Statement 0, type ghm.follow.search.SearchableTextPaneindex is: 1
Matched Method is: getScrollableTracksViewportWidth()Z
TestCase is: String string = "This is a test string";
SearchableTextPane searchableTextPane = new SearchableTextPane((Font) string, (-809));
JScrollPane jScrollPane = new JScrollPane(searchableTextPane);
((SearchableTextPane) string).getScrollableTracksViewportWidth();

statement is: decode(Ljava/lang/String;)Ljava/awt/Font; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.awt.Font
statement code is: Font decode = Font.decode("ny=6{# Avnfs")
statement is: ghm.follow.search.SearchableTextPane(Ljava/awt/Font;I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class ghm.follow.search.SearchableTextPane
statement code is: SearchableTextPane searchableTextPane = new SearchableTextPane(arg0, 0)
statement is: search(Ljava/lang/String;I)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int search = searchableTextPane.search(">~Hq1]3", (-1637))
test data is: Font decode = Font.decode("ny=6{# Avnfs");
SearchableTextPane searchableTextPane = new SearchableTextPane(decode, 0);
searchableTextPane.search(">~Hq1]3", (-1637));

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data
        Font font = Font.decode("Arial-Bold");
        SearchableTextPane searchableTextPane = new SearchableTextPane(font, 0);
        searchableTextPane.search("This is a sample text", -1637);
    }
}
statement is: // Improved test data
Font font = Font.decode("Arial-Bold"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: Font.decode("Arial-Bold") target is: Font method is: decode(java.lang.String)
Matched Method is: decode(Ljava/lang/String;)Ljava/awt/Font;
statement is: SearchableTextPane searchableTextPane = new SearchableTextPane(font, 0), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: searchableTextPane.search("This is a sample text", -1637), class spoon.support.reflect.code.CtInvocationImpl
invocation is: searchableTextPane.search("This is a sample text", -1637) target is: searchableTextPane method is: search(java.lang.String,int)
source statement: ghm.follow.search.SearchableTextPane(Ljava/awt/Font;I)V callee: VariableReference: Statement 1, type ghm.follow.search.SearchableTextPaneindex is: 3
Matched Method is: search(Ljava/lang/String;I)I
i 1 Parameters size() 1 Num of Method Parameters: 2
TestCase is: String string = "Arial-Bold";
Font decode = Font.decode(string);
int _int = 0;
SearchableTextPane searchableTextPane = new SearchableTextPane(decode, _int);
String string = "This is a sample text";
int _int = null;
((SearchableTextPane) decode).search(string, _int);

* test suite isTestSuite: 24
Test 0: 
HashMap<Format.Field, LineResult> hashMap = new HashMap<Format.Field, LineResult>();
Font font = new Font(hashMap);
SearchableTextPane searchableTextPane = new SearchableTextPane(font, 942);
searchableTextPane.search("/Z]wm^");
Test 1: 
SearchableTextPane searchableTextPane = new SearchableTextPane((Font) null, 3931);
searchableTextPane.highlight("|-*vjj//yfXv", 3931);
Test 2: 
StringContent stringContent = new StringContent(0);
StyleContext styleContext = new StyleContext();
DefaultStyledDocument defaultStyledDocument = new DefaultStyledDocument(stringContent, styleContext);
StyleContext.NamedStyle styleContext_NamedStyle = styleContext.new NamedStyle();
Font font = defaultStyledDocument.getFont(styleContext_NamedStyle);
SearchableTextPane searchableTextPane = new SearchableTextPane(font, 1910);
searchableTextPane.getScrollableTracksViewportWidth();
Test 3: 
SearchableTextPane searchableTextPane = new SearchableTextPane((Font) null, (-2507));
searchableTextPane.highlight((String) null, (-2507));
Test 4: 
SearchableTextPane searchableTextPane = new SearchableTextPane((Font) null, 3931);
searchableTextPane.highlight("", 3931);
Test 5: 
SearchableTextPane searchableTextPane = new SearchableTextPane((Font) null, (-1410));
searchableTextPane.search((String) null);
Test 6: 
SearchableTextPane searchableTextPane = new SearchableTextPane((Font) null, (-2507));
searchableTextPane.search("");
Test 7: 
HashMap<Format.Field, LineResult> hashMap = new HashMap<Format.Field, LineResult>();
Font font = new Font(hashMap);
SearchableTextPane searchableTextPane = new SearchableTextPane(font, 942);
searchableTextPane.highlight("ghm.follow.search.LineResult", (-1417));
Test 8: 
SearchableTextPane searchableTextPane = new SearchableTextPane((Font) null, Integer.MAX_VALUE);
searchableTextPane.search("", Integer.MAX_VALUE);
Test 9: 
SearchableTextPane searchableTextPane = new SearchableTextPane((Font) null, Integer.MAX_VALUE);
searchableTextPane.removeHighlights();
Test 10: 
SearchableTextPane searchableTextPane = new SearchableTextPane((Font) null, (-809));
JScrollPane jScrollPane = new JScrollPane(searchableTextPane);
searchableTextPane.getScrollableTracksViewportWidth();
Test 11: 
Font decode = Font.decode("ny=6{# Avnfs");
SearchableTextPane searchableTextPane = new SearchableTextPane(decode, 0);
searchableTextPane.search(">~Hq1]3", (-1637));
Test 12: 
HashMap<Format.Field, LineResult> hashMap = new HashMap<Format.Field, LineResult>();
SearchableTextPane searchableTextPane = new SearchableTextPane((Font) "This is a sample text", 942);
String string = "/Z]wm^";
searchableTextPane.search(string);

Test 13: 
SearchableTextPane searchableTextPane = new SearchableTextPane((Font) null, 3931);

Test 14: 
StringContent stringContent = new StringContent((int) "This is a test string.");
StyleContext styleContext = new StyleContext();
DefaultStyledDocument defaultStyledDocument = new DefaultStyledDocument(stringContent, styleContext);
StyleContext.NamedStyle styleContext_NamedStyle = null;
Font font = styleContext.getFont(styleContext_NamedStyle);
int _int = 1910;
SearchableTextPane searchableTextPane = new SearchableTextPane(font, _int);

Test 15: 
String string = "This is a test string";
SearchableTextPane searchableTextPane = new SearchableTextPane((Font) "This is a test string", (-2507));
String string = "test";
int _int = 5;
((SearchableTextPane) string).highlight(string, _int);

Test 16: 
String string = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.";
SearchableTextPane searchableTextPane = new SearchableTextPane((Font) "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.", 3931);
String string = "sample";
String string = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.";
((SearchableTextPane) string).highlight(string, (int) string);

Test 17: 
SearchableTextPane searchableTextPane = new SearchableTextPane((Font) null, (-1410));
searchableTextPane.search("Hello World");

Test 18: 
SearchableTextPane searchableTextPane = new SearchableTextPane((Font) null, (-2507));
searchableTextPane.search("Hello World");

Test 19: 
HashMap<Format.Field, LineResult> hashMap = new HashMap<Format.Field, LineResult>();
Font font = new Font(hashMap);
SearchableTextPane searchableTextPane = new SearchableTextPane(font, 942);
((SearchableTextPane)942).highlight("ghm.follow.search.LineResult", (int) (Integer) null);

Test 20: 
SearchableTextPane searchableTextPane = new SearchableTextPane((Font) null, Integer.MAX_VALUE);
searchableTextPane.search("Hello World!", (int) (Integer) null);

Test 21: 
int _int = 20;
SearchableTextPane searchableTextPane = new SearchableTextPane((Font) 20, Integer.MAX_VALUE);
((SearchableTextPane) _int).removeHighlights();

Test 22: 
String string = "This is a test string";
SearchableTextPane searchableTextPane = new SearchableTextPane((Font) "This is a test string", (-809));
JScrollPane jScrollPane = new JScrollPane(searchableTextPane);
((SearchableTextPane) string).getScrollableTracksViewportWidth();

Test 23: 
Font decode = Font.decode("Arial-Bold");
SearchableTextPane searchableTextPane = new SearchableTextPane(decode, 0);
((SearchableTextPane) decode).search("This is a sample text", (int) (Integer) null);


* Generated after the refinement and before minimization 24 tests with total length 77
* test suite isTestSuite: 24
Test 0: 
HashMap<Format.Field, LineResult> hashMap = new HashMap<Format.Field, LineResult>();
Font font = new Font(hashMap);
SearchableTextPane searchableTextPane = new SearchableTextPane(font, 942);
searchableTextPane.search("/Z]wm^");
Test 1: 
SearchableTextPane searchableTextPane = new SearchableTextPane((Font) null, 3931);
searchableTextPane.highlight("|-*vjj//yfXv", 3931);
Test 2: 
StringContent stringContent = new StringContent(0);
StyleContext styleContext = new StyleContext();
DefaultStyledDocument defaultStyledDocument = new DefaultStyledDocument(stringContent, styleContext);
StyleContext.NamedStyle styleContext_NamedStyle = styleContext.new NamedStyle();
Font font = defaultStyledDocument.getFont(styleContext_NamedStyle);
SearchableTextPane searchableTextPane = new SearchableTextPane(font, 1910);
searchableTextPane.getScrollableTracksViewportWidth();
Test 3: 
SearchableTextPane searchableTextPane = new SearchableTextPane((Font) null, (-2507));
searchableTextPane.highlight((String) null, (-2507));
Test 4: 
SearchableTextPane searchableTextPane = new SearchableTextPane((Font) null, 3931);
searchableTextPane.highlight("", 3931);
Test 5: 
SearchableTextPane searchableTextPane = new SearchableTextPane((Font) null, (-1410));
searchableTextPane.search((String) null);
Test 6: 
SearchableTextPane searchableTextPane = new SearchableTextPane((Font) null, (-2507));
searchableTextPane.search("");
Test 7: 
HashMap<Format.Field, LineResult> hashMap = new HashMap<Format.Field, LineResult>();
Font font = new Font(hashMap);
SearchableTextPane searchableTextPane = new SearchableTextPane(font, 942);
searchableTextPane.highlight("ghm.follow.search.LineResult", (-1417));
Test 8: 
SearchableTextPane searchableTextPane = new SearchableTextPane((Font) null, Integer.MAX_VALUE);
searchableTextPane.search("", Integer.MAX_VALUE);
Test 9: 
SearchableTextPane searchableTextPane = new SearchableTextPane((Font) null, Integer.MAX_VALUE);
searchableTextPane.removeHighlights();
Test 10: 
SearchableTextPane searchableTextPane = new SearchableTextPane((Font) null, (-809));
JScrollPane jScrollPane = new JScrollPane(searchableTextPane);
searchableTextPane.getScrollableTracksViewportWidth();
Test 11: 
Font decode = Font.decode("ny=6{# Avnfs");
SearchableTextPane searchableTextPane = new SearchableTextPane(decode, 0);
searchableTextPane.search(">~Hq1]3", (-1637));
Test 12: 
HashMap<Format.Field, LineResult> hashMap = new HashMap<Format.Field, LineResult>();
SearchableTextPane searchableTextPane = new SearchableTextPane((Font) "This is a sample text", 942);
String string = "/Z]wm^";
searchableTextPane.search(string);

Test 13: 
SearchableTextPane searchableTextPane = new SearchableTextPane((Font) null, 3931);

Test 14: 
StringContent stringContent = new StringContent((int) "This is a test string.");
StyleContext styleContext = new StyleContext();
DefaultStyledDocument defaultStyledDocument = new DefaultStyledDocument(stringContent, styleContext);
StyleContext.NamedStyle styleContext_NamedStyle = null;
Font font = styleContext.getFont(styleContext_NamedStyle);
int _int = 1910;
SearchableTextPane searchableTextPane = new SearchableTextPane(font, _int);

Test 15: 
String string = "This is a test string";
SearchableTextPane searchableTextPane = new SearchableTextPane((Font) "This is a test string", (-2507));
String string = "test";
int _int = 5;
((SearchableTextPane) string).highlight(string, _int);

Test 16: 
String string = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.";
SearchableTextPane searchableTextPane = new SearchableTextPane((Font) "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.", 3931);
String string = "sample";
String string = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.";
((SearchableTextPane) string).highlight(string, (int) string);

Test 17: 
SearchableTextPane searchableTextPane = new SearchableTextPane((Font) null, (-1410));
searchableTextPane.search("Hello World");

Test 18: 
SearchableTextPane searchableTextPane = new SearchableTextPane((Font) null, (-2507));
searchableTextPane.search("Hello World");

Test 19: 
HashMap<Format.Field, LineResult> hashMap = new HashMap<Format.Field, LineResult>();
Font font = new Font(hashMap);
SearchableTextPane searchableTextPane = new SearchableTextPane(font, 942);
((SearchableTextPane)942).highlight("ghm.follow.search.LineResult", (int) (Integer) null);

Test 20: 
SearchableTextPane searchableTextPane = new SearchableTextPane((Font) null, Integer.MAX_VALUE);
searchableTextPane.search("Hello World!", (int) (Integer) null);

Test 21: 
int _int = 20;
SearchableTextPane searchableTextPane = new SearchableTextPane((Font) 20, Integer.MAX_VALUE);
((SearchableTextPane) _int).removeHighlights();

Test 22: 
String string = "This is a test string";
SearchableTextPane searchableTextPane = new SearchableTextPane((Font) "This is a test string", (-809));
JScrollPane jScrollPane = new JScrollPane(searchableTextPane);
((SearchableTextPane) string).getScrollableTracksViewportWidth();

Test 23: 
Font decode = Font.decode("Arial-Bold");
SearchableTextPane searchableTextPane = new SearchableTextPane(decode, 0);
((SearchableTextPane) decode).search("This is a sample text", (int) (Integer) null);


* Minimizing test suite
* test suite isTestSuite: 12
Test 0: 
SearchableTextPane searchableTextPane = new SearchableTextPane((Font) null, 3931);
searchableTextPane.highlight("|-*vjj//yfXv", 3931);
Test 1: 
SearchableTextPane searchableTextPane = new SearchableTextPane((Font) null, (-1410));
searchableTextPane.search("Hello World");
Test 2: 
StringContent stringContent = new StringContent(0);
StyleContext styleContext = new StyleContext();
DefaultStyledDocument defaultStyledDocument = new DefaultStyledDocument(stringContent, styleContext);
StyleContext.NamedStyle styleContext_NamedStyle = styleContext.new NamedStyle();
Font font = defaultStyledDocument.getFont(styleContext_NamedStyle);
SearchableTextPane searchableTextPane = new SearchableTextPane(font, 1910);
searchableTextPane.getScrollableTracksViewportWidth();
Test 3: 
SearchableTextPane searchableTextPane = new SearchableTextPane((Font) null, (-809));
JScrollPane jScrollPane = new JScrollPane(searchableTextPane);
searchableTextPane.getScrollableTracksViewportWidth();
Test 4: 
SearchableTextPane searchableTextPane = new SearchableTextPane((Font) null, (-2507));
searchableTextPane.highlight((String) null, (-2507));
Test 5: 
SearchableTextPane searchableTextPane = new SearchableTextPane((Font) null, 3931);
searchableTextPane.highlight("", 3931);
Test 6: 
SearchableTextPane searchableTextPane = new SearchableTextPane((Font) null, (-1410));
searchableTextPane.search((String) null);
Test 7: 
SearchableTextPane searchableTextPane = new SearchableTextPane((Font) null, (-2507));
searchableTextPane.search("");
Test 8: 
HashMap<Format.Field, LineResult> hashMap = new HashMap<Format.Field, LineResult>();
Font font = new Font(hashMap);
SearchableTextPane searchableTextPane = new SearchableTextPane(font, 942);
searchableTextPane.highlight("ghm.follow.search.LineResult", (-1417));
Test 9: 
SearchableTextPane searchableTextPane = new SearchableTextPane((Font) null, Integer.MAX_VALUE);
searchableTextPane.search("", Integer.MAX_VALUE);
Test 10: 
SearchableTextPane searchableTextPane = new SearchableTextPane((Font) null, Integer.MAX_VALUE);
searchableTextPane.removeHighlights();
Test 11: 
Font decode = Font.decode("ny=6{# Avnfs");
SearchableTextPane searchableTextPane = new SearchableTextPane(decode, 0);
searchableTextPane.search(">~Hq1]3", (-1637));

* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 80%
* Total number of goals: 35
* Number of covered goals: 28
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 84%
* Total number of goals: 81
* Number of covered goals: 68
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 64%
* Total number of goals: 14
* Number of covered goals: 9
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 6
* Number of covered goals: 6
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 80%
* Total number of goals: 35
* Number of covered goals: 28
* Generated 12 tests with total length 33
* Resulting test suite's coverage: 82% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 20%
* Compiling and checking tests
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: SearchableTextPane searchableTextPane = new SearchableTextPane((Font) null, 3931);
List<LineResult> highlight = searchableTextPane.highlight("|-*vjj//yfXv", 3931);
assertEquals(1, highlight.size());


** It was a parseable test case! 
refined test name is: testHighlightMethodReturnsExpectedResults
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: SearchableTextPane searchableTextPane = new SearchableTextPane((Font) null, (-1410));
int search = searchableTextPane.search("Hello World");
assertEquals((-1), search);


** It was a parseable test case! 
refined test name is: testSearchForInvalidText
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: SearchableTextPane arg0 = new SearchableTextPane((Font) null, (-809));
JScrollPane jScrollPane = new JScrollPane(arg0);
boolean scrollableTracksViewportWidth = arg0.getScrollableTracksViewportWidth();
assertFalse(scrollableTracksViewportWidth);


** It was a parseable test case! 
refined test name is: testScrollableTracksViewportWidth
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: SearchableTextPane searchableTextPane = new SearchableTextPane((Font) null, (-2507));
List<LineResult> highlight = searchableTextPane.highlight((String) null, (-2507));
assertTrue(highlight.isEmpty());


** It was a parseable test case! 
refined test name is: testHighlightEmptyString
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: SearchableTextPane searchableTextPane = new SearchableTextPane((Font) null, 3931);
List<LineResult> highlight = searchableTextPane.highlight("", 3931);
assertEquals(0, highlight.size());


** It was a parseable test case! 
refined test name is: testHighlightEmptyQuerySameFontSize
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: SearchableTextPane searchableTextPane = new SearchableTextPane((Font) null, (-1410));
int search = searchableTextPane.search((String) null);
assertEquals((-1), search);


** It was a parseable test case! 
refined test name is: testSearchMethodWithNullStringParameter
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: SearchableTextPane searchableTextPane = new SearchableTextPane((Font) null, (-2507));
int search = searchableTextPane.search("");
assertEquals((-1), search);


** It was a parseable test case! 
refined test name is: testSearchForEmptyStringReturnsMinusOne
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: SearchableTextPane searchableTextPane = new SearchableTextPane((Font) null, Integer.MAX_VALUE);
int search = searchableTextPane.search("", Integer.MAX_VALUE);
assertEquals(0, search);


** It was a parseable test case! 
refined test name is: testSearchForEmptyString
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: SearchableTextPane searchableTextPane = new SearchableTextPane((Font) null, Integer.MAX_VALUE);
searchableTextPane.removeHighlights();
assertTrue(searchableTextPane.getFocusTraversalKeysEnabled());


** It was a parseable test case! 
refined test name is: testSearchableTextPaneFocusTraversalKeysEnabled
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Font arg0 = Font.decode("ny=6{# Avnfs");
SearchableTextPane searchableTextPane = new SearchableTextPane(arg0, 0);
int search = searchableTextPane.search(">~Hq1]3", (-1637));
assertEquals((-1), search);


** It was a parseable test case! 
refined test name is: testSearchForInvalidStringWithNegativeStartIndex
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 01:27:50.965 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar139410958997999058.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 01:27:50.991 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar139410958997999058.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 01:27:51.052 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar139410958997999058.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 01:27:51.053 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar139410958997999058.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 01:27:51.105 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar139410958997999058.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 01:27:51.106 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar139410958997999058.jar
[MASTER] 01:27:51.163 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar139410958997999058.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 01:27:51.164 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar139410958997999058.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 01:27:51.219 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar139410958997999058.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 01:27:51.220 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar139410958997999058.jar
[MASTER] 01:27:51.273 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar139410958997999058.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 01:27:51.274 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar139410958997999058.jar
[MASTER] 01:27:51.326 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar139410958997999058.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 01:27:51.327 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar139410958997999058.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 01:27:51.384 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar139410958997999058.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 01:27:51.386 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar139410958997999058.jar
[MASTER] 01:27:51.446 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar139410958997999058.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 01:27:51.447 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar139410958997999058.jar
[MASTER] 01:27:51.514 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar139410958997999058.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 01:27:51.515 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar139410958997999058.jar
[MASTER] 01:27:51.649 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar139410958997999058.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 01:27:51.650 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar139410958997999058.jar
[MASTER] 01:27:51.799 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar139410958997999058.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
* Writing tests to file
* Writing JUnit test case 'SearchableTextPane_ESTest' to evosuite-tests
[MASTER] 01:27:51.801 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar139410958997999058.jar
* Done!

* Computation finished
