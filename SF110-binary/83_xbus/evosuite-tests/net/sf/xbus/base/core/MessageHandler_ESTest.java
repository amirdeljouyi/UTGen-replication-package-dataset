/*
 * This file was automatically generated by UTestGen and EvoSuite
 * Thu Mar 14 20:11:48 GMT 2024
 */

package net.sf.xbus.base.core;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Timeout;
import java.util.concurrent.TimeUnit;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedList;
import net.sf.xbus.base.core.MessageHandler;
import net.sf.xbus.base.core.config.Configuration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class MessageHandler_ESTest extends MessageHandler_ESTest_scaffolding {

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testGetInstanceThrowsNullPointerException() throws Throwable  {
      // No Comments were added
      // Undeclared exception!
      try { 
        MessageHandler.getInstance((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testGetMessageOptional() throws Throwable  {
      // Given: An instance of MessageHandler is created with the name "Object"
      String expectedName = "Object";
      MessageHandler instance = MessageHandler.getInstance(expectedName);
      
      // When: A message is requested for the object with a list of arguments
      LinkedList<Object> arg1 = new LinkedList<Object>();
      String actualMessage = instance.getMessageOptional("Object", arg1);
      
      // Then: The returned message should be null, as there are no messages defined for this object and argument combination
      assertNull(actualMessage);
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testGetMessageThrowsSystemExitException() throws Throwable  {
      // rollbacked to evosuite
      MessageHandler instance = MessageHandler.getInstance("k");
      LinkedList<Configuration> arg1 = new LinkedList<Configuration>();
      // Undeclared exception!
      try { 
        instance.getMessage("k", arg1);
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }
}
