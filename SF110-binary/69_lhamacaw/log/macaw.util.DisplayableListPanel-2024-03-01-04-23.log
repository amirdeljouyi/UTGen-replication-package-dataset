* EvoSuite 1.2.1-SNAPSHOT
* Going to generate test cases for class: macaw.util.DisplayableListPanel
* Starting Client-0
* Properties loaded from /home/ubuntu/UTestGen/Evaluation/getting_results/dataset/SF110/69_lhamacaw/evosuite-files/evosuite.properties
* Connecting to master process on port 9257
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 04:23:53.831 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 04:23:53.834 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 04:23:53.835 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 04:23:53.905 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 04:23:55.082 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 04:23:55.082 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 04:23:55.252 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 04:23:55.252 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 04:23:55.253 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 04:23:55.253 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 04:23:55.253 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 04:23:55.253 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 04:23:55.253 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 04:23:55.254 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 04:23:55.254 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 04:23:55.435 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 04:23:55.441 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
* Finished analyzing classpath
* Generating tests for class macaw.util.DisplayableListPanel
* Test criteria:
  - Branch Coverage
  - Line Coverage
  - Method-Output Coverage
  - Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 377
* Using seed 1709267031452
[Progress:>                             0%] [Cov:>                                  0%]* Starting evolution
* Initial Number of Goals in DynaMOSA = 152 / 377
[Progress:>                             0%] [Cov:=>                                 5%][Progress:>                             0%] [Cov:=>                                 5%][Progress:>                             1%] [Cov:=>                                 5%][Progress:>                             1%] [Cov:=>                                 5%][Progress:>                             1%] [Cov:=>                                 5%][Progress:>                             2%] [Cov:=>                                 5%][Progress:>                             2%] [Cov:=>                                 5%][Progress:>                             2%] [Cov:=>                                 5%][Progress:>                             2%] [Cov:=>                                 5%][Progress:>                             3%] [Cov:=>                                 5%][Progress:>                             3%] [Cov:=>                                 5%][Progress:>                             3%] [Cov:=>                                 5%][Progress:>                             3%] [Cov:=>                                 5%][Progress:=>                            4%] [Cov:=>                                 5%][Progress:=>                            4%] [Cov:=>                                 5%][Progress:=>                            4%] [Cov:=>                                 5%][Progress:=>                            4%] [Cov:=>                                 5%][Progress:=>                            4%] [Cov:=>                                 5%][Progress:=>                            4%] [Cov:=>                                 5%][Progress:=>                            4%] [Cov:=>                                 5%][Progress:=>                            4%] [Cov:=>                                 5%][Progress:=>                            5%] [Cov:=>                                 5%][Progress:=>                            5%] [Cov:=>                                 5%][Progress:=>                            5%] [Cov:=>                                 5%][Progress:=>                            5%] [Cov:=>                                 5%][Progress:=>                            5%] [Cov:=>                                 5%][Progress:=>                            5%] [Cov:=>                                 5%][Progress:=>                            5%] [Cov:=>                                 5%][Progress:=>                            5%] [Cov:=>                                 5%][Progress:=>                            6%] [Cov:=>                                 5%][Progress:=>                            6%] [Cov:=>                                 5%][Progress:=>                            6%] [Cov:=>                                 5%][Progress:=>                            6%] [Cov:=>                                 5%][Progress:=>                            6%] [Cov:=>                                 5%][Progress:=>                            6%] [Cov:=>                                 5%][Progress:=>                            6%] [Cov:=>                                 5%][Progress:=>                            6%] [Cov:=>                                 5%][Progress:==>                           7%] [Cov:=>                                 5%][Progress:==>                           7%] [Cov:=>                                 5%][Progress:==>                           7%] [Cov:=>                                 5%][Progress:==>                           7%] [Cov:=>                                 5%][Progress:==>                           7%] [Cov:=>                                 5%][Progress:==>                           7%] [Cov:=>                                 5%][Progress:==>                           7%] [Cov:=>                                 5%][Progress:==>                           8%] [Cov:=>                                 5%][Progress:==>                           8%] [Cov:=>                                 5%][Progress:==>                           8%] [Cov:=>                                 5%][Progress:==>                           8%] [Cov:=>                                 5%][Progress:==>                           8%] [Cov:=>                                 5%][Progress:==>                           9%] [Cov:=>                                 5%][Progress:==>                           9%] [Cov:=>                                 5%][Progress:==>                           9%] [Cov:=>                                 5%][Progress:==>                           9%] [Cov:=>                                 5%][Progress:==>                           9%] [Cov:=>                                 5%][Progress:===>                          10%] [Cov:=>                                 5%][Progress:===>                          10%] [Cov:=>                                 5%][Progress:===>                          10%] [Cov:=>                                 5%][Progress:===>                          10%] [Cov:=>                                 5%][Progress:===>                          10%] [Cov:=>                                 5%][Progress:===>                          11%] [Cov:=>                                 5%][Progress:===>                          11%] [Cov:=>                                 5%][Progress:===>                          11%] [Cov:=>                                 5%][Progress:===>                          11%] [Cov:=>                                 5%][Progress:===>                          12%] [Cov:=>                                 5%][Progress:===>                          12%] [Cov:=>                                 5%][Progress:===>                          12%] [Cov:=>                                 5%][Progress:===>                          12%] [Cov:=>                                 5%][Progress:===>                          12%] [Cov:=>                                 5%][Progress:===>                          12%] [Cov:=>                                 5%][Progress:===>                          13%] [Cov:=>                                 5%][Progress:===>                          13%] [Cov:=>                                 5%][Progress:===>                          13%] [Cov:=>                                 5%][Progress:===>                          13%] [Cov:=>                                 5%][Progress:====>                         14%] [Cov:=>                                 5%][Progress:====>                         14%] [Cov:=>                                 5%][Progress:====>                         14%] [Cov:=>                                 5%][Progress:====>                         14%] [Cov:=>                                 5%][Progress:====>                         15%] [Cov:=>                                 5%][Progress:====>                         15%] [Cov:=>                                 5%][Progress:====>                         15%] [Cov:=>                                 5%][Progress:====>                         15%] [Cov:=>                                 5%][Progress:====>                         15%] [Cov:=>                                 5%][Progress:====>                         16%] [Cov:=>                                 5%][Progress:====>                         16%] [Cov:=>                                 5%][Progress:====>                         16%] [Cov:=>                                 5%][Progress:====>                         16%] [Cov:=>                                 5%][Progress:=====>                        17%] [Cov:=>                                 5%][Progress:=====>                        17%] [Cov:=>                                 5%][Progress:=====>                        17%] [Cov:=>                                 5%][Progress:=====>                        17%] [Cov:=>                                 5%][Progress:=====>                        18%] [Cov:=>                                 5%][Progress:=====>                        18%] [Cov:=>                                 5%][Progress:=====>                        18%] [Cov:=>                                 5%][Progress:=====>                        18%] [Cov:=>                                 5%][Progress:=====>                        19%] [Cov:=>                                 5%][Progress:=====>                        19%] [Cov:=>                                 5%][Progress:=====>                        19%] [Cov:=>                                 5%][Progress:=====>                        19%] [Cov:=>                                 5%][Progress:======>                       20%] [Cov:=>                                 5%][Progress:======>                       20%] [Cov:=>                                 5%][Progress:======>                       20%] [Cov:=>                                 5%][Progress:======>                       20%] [Cov:=>                                 5%][Progress:======>                       21%] [Cov:=>                                 5%][Progress:======>                       21%] [Cov:=>                                 5%][Progress:======>                       21%] [Cov:=>                                 5%][Progress:======>                       21%] [Cov:=>                                 5%][Progress:======>                       21%] [Cov:=>                                 5%][Progress:======>                       22%] [Cov:=>                                 5%][Progress:======>                       22%] [Cov:=>                                 5%][Progress:======>                       22%] [Cov:=>                                 5%][Progress:======>                       22%] [Cov:=>                                 5%][Progress:======>                       23%] [Cov:=>                                 5%][Progress:======>                       23%] [Cov:=>                                 5%][Progress:======>                       23%] [Cov:=>                                 5%][Progress:======>                       23%] [Cov:=>                                 5%][Progress:======>                       23%] [Cov:=>                                 5%][Progress:=======>                      24%] [Cov:=>                                 5%][Progress:=======>                      24%] [Cov:=>                                 5%][Progress:=======>                      24%] [Cov:=>                                 5%][Progress:=======>                      24%] [Cov:=>                                 5%][Progress:=======>                      24%] [Cov:=>                                 5%][Progress:=======>                      25%] [Cov:=>                                 5%][Progress:=======>                      25%] [Cov:=>                                 5%][Progress:=======>                      25%] [Cov:=>                                 5%][Progress:=======>                      25%] [Cov:=>                                 5%][Progress:=======>                      26%] [Cov:==>                                7%][Progress:=======>                      26%] [Cov:==>                                7%][Progress:=======>                      26%] [Cov:==>                                7%][Progress:========>                     27%] [Cov:==>                                7%][Progress:========>                     27%] [Cov:==>                                7%][Progress:========>                     27%] [Cov:==>                                7%][Progress:========>                     27%] [Cov:==>                                7%][Progress:========>                     28%] [Cov:==>                                7%][Progress:========>                     28%] [Cov:===>                               10%][Progress:========>                     28%] [Cov:====>                              12%][Progress:========>                     29%] [Cov:=====>                             16%][Progress:========>                     29%] [Cov:==========>                        31%][Progress:========>                     29%] [Cov:=============>                     38%][Progress:=========>                    30%] [Cov:===============>                   44%][Progress:=========>                    30%] [Cov:==================>                52%][Progress:=========>                    30%] [Cov:==================>                52%][Progress:=========>                    31%] [Cov:==================>                52%][Progress:=========>                    31%] [Cov:===================>               55%][Progress:=========>                    31%] [Cov:===================>               56%][Progress:=========>                    32%] [Cov:===================>               57%][Progress:=========>                    32%] [Cov:====================>              58%][Progress:=========>                    32%] [Cov:====================>              58%][Progress:=========>                    33%] [Cov:====================>              58%][Progress:=========>                    33%] [Cov:====================>              58%][Progress:=========>                    33%] [Cov:====================>              58%][Progress:==========>                   34%] [Cov:====================>              58%][Progress:==========>                   34%] [Cov:====================>              58%][Progress:==========>                   34%] [Cov:====================>              58%][Progress:==========>                   34%] [Cov:====================>              58%][Progress:==========>                   34%] [Cov:====================>              58%][Progress:==========>                   35%] [Cov:====================>              58%][Progress:==========>                   35%] [Cov:====================>              58%][Progress:==========>                   35%] [Cov:=====================>             61%][Progress:==========>                   35%] [Cov:=====================>             61%][Progress:==========>                   35%] [Cov:======================>            63%][Progress:==========>                   35%] [Cov:======================>            63%][Progress:==========>                   36%] [Cov:======================>            63%][Progress:==========>                   36%] [Cov:======================>            63%][Progress:==========>                   36%] [Cov:======================>            65%][MASTER] 04:24:32.656 [logback-1] WARN  TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[Progress:==========>                   36%] [Cov:======================>            65%][Progress:==========>                   36%] [Cov:======================>            65%][Progress:==========>                   36%] [Cov:======================>            65%][Progress:===========>                  37%] [Cov:======================>            65%][Progress:===========>                  37%] [Cov:======================>            65%][Progress:===========>                  37%] [Cov:======================>            65%][Progress:===========>                  37%] [Cov:======================>            65%][Progress:===========>                  37%] [Cov:======================>            65%][Progress:===========>                  37%] [Cov:======================>            65%][Progress:===========>                  37%] [Cov:======================>            65%][Progress:===========>                  38%] [Cov:======================>            65%][Progress:===========>                  38%] [Cov:======================>            65%][Progress:===========>                  38%] [Cov:======================>            65%][Progress:===========>                  38%] [Cov:======================>            65%][Progress:===========>                  38%] [Cov:======================>            65%][Progress:===========>                  38%] [Cov:======================>            65%][Progress:===========>                  38%] [Cov:======================>            65%][Progress:===========>                  39%] [Cov:======================>            65%][Progress:===========>                  39%] [Cov:======================>            65%][Progress:===========>                  39%] [Cov:======================>            65%][Progress:===========>                  39%] [Cov:======================>            65%][Progress:===========>                  39%] [Cov:======================>            65%][Progress:===========>                  39%] [Cov:======================>            65%][Progress:===========>                  39%] [Cov:======================>            65%][Progress:===========>                  39%] [Cov:======================>            65%][Progress:============>                 40%] [Cov:======================>            65%][Progress:============>                 40%] [Cov:======================>            65%][Progress:============>                 40%] [Cov:======================>            65%][Progress:============>                 40%] [Cov:======================>            65%][Progress:============>                 40%] [Cov:======================>            65%][Progress:============>                 40%] [Cov:======================>            65%][Progress:============>                 40%] [Cov:======================>            65%][Progress:============>                 41%] [Cov:======================>            65%][Progress:============>                 41%] [Cov:======================>            65%][Progress:============>                 41%] [Cov:======================>            65%][Progress:============>                 41%] [Cov:======================>            65%][Progress:============>                 41%] [Cov:======================>            65%][Progress:============>                 42%] [Cov:======================>            65%][Progress:============>                 42%] [Cov:======================>            65%][Progress:============>                 42%] [Cov:======================>            65%][Progress:============>                 42%] [Cov:======================>            65%][Progress:============>                 42%] [Cov:======================>            65%][Progress:============>                 42%] [Cov:======================>            65%][Progress:============>                 43%] [Cov:======================>            65%][Progress:============>                 43%] [Cov:======================>            65%][Progress:============>                 43%] [Cov:=======================>           67%][Progress:============>                 43%] [Cov:=======================>           67%][Progress:============>                 43%] [Cov:=======================>           67%][Progress:============>                 43%] [Cov:=======================>           67%][Progress:============>                 43%] [Cov:=======================>           67%][Progress:============>                 43%] [Cov:=======================>           67%][Progress:============>                 43%] [Cov:=======================>           67%][Progress:=============>                44%] [Cov:=======================>           67%][Progress:=============>                44%] [Cov:=======================>           67%][Progress:=============>                44%] [Cov:=======================>           67%][Progress:=============>                44%] [Cov:=======================>           67%][Progress:=============>                44%] [Cov:=======================>           67%][Progress:=============>                44%] [Cov:=======================>           67%][Progress:=============>                44%] [Cov:=======================>           67%][Progress:=============>                45%] [Cov:=======================>           67%][Progress:=============>                45%] [Cov:=======================>           67%][Progress:=============>                45%] [Cov:=======================>           67%][Progress:=============>                45%] [Cov:=======================>           67%][Progress:=============>                45%] [Cov:=======================>           67%][Progress:=============>                46%] [Cov:=======================>           67%][Progress:=============>                46%] [Cov:=======================>           67%][Progress:=============>                46%] [Cov:=======================>           67%][Progress:=============>                46%] [Cov:=======================>           67%][Progress:=============>                46%] [Cov:=======================>           67%][Progress:=============>                46%] [Cov:=======================>           67%][Progress:==============>               47%] [Cov:=======================>           67%][Progress:==============>               47%] [Cov:=======================>           67%][Progress:==============>               47%] [Cov:=======================>           67%][Progress:==============>               47%] [Cov:=======================>           67%][Progress:==============>               47%] [Cov:=======================>           67%][Progress:==============>               48%] [Cov:=======================>           67%][Progress:==============>               48%] [Cov:=======================>           67%][Progress:==============>               48%] [Cov:=======================>           67%][Progress:==============>               48%] [Cov:=======================>           67%][Progress:==============>               48%] [Cov:=======================>           67%][Progress:==============>               49%] [Cov:=======================>           67%][Progress:==============>               49%] [Cov:=======================>           67%][Progress:==============>               49%] [Cov:=======================>           67%][Progress:==============>               49%] [Cov:=======================>           67%][Progress:==============>               49%] [Cov:=======================>           67%][Progress:===============>              50%] [Cov:=======================>           67%][Progress:===============>              50%] [Cov:=======================>           67%][Progress:===============>              50%] [Cov:=======================>           67%][Progress:===============>              50%] [Cov:=======================>           67%][Progress:===============>              50%] [Cov:=======================>           67%][Progress:===============>              50%] [Cov:=======================>           67%][Progress:===============>              51%] [Cov:=======================>           67%][Progress:===============>              51%] [Cov:=======================>           67%][Progress:===============>              51%] [Cov:=======================>           67%][Progress:===============>              51%] [Cov:=======================>           67%][Progress:===============>              51%] [Cov:=======================>           67%][Progress:===============>              52%] [Cov:=======================>           67%][Progress:===============>              52%] [Cov:=======================>           67%][Progress:===============>              52%] [Cov:=======================>           67%][Progress:===============>              52%] [Cov:=======================>           67%][Progress:===============>              52%] [Cov:=======================>           67%][Progress:===============>              53%] [Cov:=======================>           67%][Progress:===============>              53%] [Cov:=======================>           67%][Progress:===============>              53%] [Cov:=======================>           67%][Progress:===============>              53%] [Cov:=======================>           67%][Progress:===============>              53%] [Cov:=======================>           67%][Progress:===============>              53%] [Cov:=======================>           67%][Progress:================>             54%] [Cov:=======================>           67%][Progress:================>             54%] [Cov:=======================>           67%][Progress:================>             54%] [Cov:=======================>           67%][Progress:================>             54%] [Cov:=======================>           67%][Progress:================>             54%] [Cov:=======================>           67%][Progress:================>             54%] [Cov:=======================>           67%][Progress:================>             55%] [Cov:=======================>           67%][Progress:================>             55%] [Cov:=======================>           67%][Progress:================>             55%] [Cov:=======================>           67%][Progress:================>             55%] [Cov:=======================>           67%][Progress:================>             55%] [Cov:=======================>           67%][Progress:================>             55%] [Cov:=======================>           67%][Progress:================>             56%] [Cov:=======================>           67%][Progress:================>             56%] [Cov:=======================>           67%][Progress:================>             56%] [Cov:=======================>           67%][Progress:================>             56%] [Cov:=======================>           67%][Progress:================>             56%] [Cov:=======================>           67%][Progress:=================>            57%] [Cov:=======================>           67%][Progress:=================>            57%] [Cov:=======================>           67%][Progress:=================>            57%] [Cov:=======================>           67%][Progress:=================>            57%] [Cov:=======================>           67%][Progress:=================>            57%] [Cov:=======================>           67%][Progress:=================>            58%] [Cov:=======================>           67%][Progress:=================>            58%] [Cov:=======================>           67%][Progress:=================>            58%] [Cov:=======================>           67%][Progress:=================>            58%] [Cov:=======================>           67%][Progress:=================>            58%] [Cov:=======================>           67%][Progress:=================>            59%] [Cov:=======================>           67%][Progress:=================>            59%] [Cov:=======================>           67%][Progress:=================>            59%] [Cov:=======================>           67%][Progress:=================>            59%] [Cov:=======================>           67%][Progress:=================>            59%] [Cov:=======================>           67%][Progress:=================>            59%] [Cov:=======================>           67%][Progress:==================>           60%] [Cov:=======================>           67%][Progress:==================>           60%] [Cov:=======================>           67%][Progress:==================>           60%] [Cov:=======================>           67%][Progress:==================>           60%] [Cov:=======================>           67%][Progress:==================>           60%] [Cov:=======================>           67%][Progress:==================>           61%] [Cov:=======================>           67%][Progress:==================>           61%] [Cov:=======================>           67%][Progress:==================>           61%] [Cov:=======================>           67%][Progress:==================>           61%] [Cov:=======================>           67%][Progress:==================>           61%] [Cov:=======================>           67%][Progress:==================>           62%] [Cov:=======================>           67%][Progress:==================>           62%] [Cov:=======================>           67%][Progress:==================>           62%] [Cov:=======================>           67%][Progress:==================>           62%] [Cov:=======================>           67%][Progress:==================>           63%] [Cov:=======================>           67%][Progress:==================>           63%] [Cov:=======================>           67%][Progress:==================>           63%] [Cov:=======================>           67%][Progress:==================>           63%] [Cov:=======================>           67%][Progress:==================>           63%] [Cov:=======================>           67%][Progress:==================>           63%] [Cov:=======================>           67%][Progress:==================>           63%] [Cov:=======================>           67%][Progress:===================>          64%] [Cov:=======================>           67%][Progress:===================>          64%] [Cov:=======================>           67%][Progress:===================>          64%] [Cov:=======================>           67%][Progress:===================>          64%] [Cov:=======================>           67%][Progress:===================>          65%] [Cov:=======================>           67%][Progress:===================>          65%] [Cov:=======================>           67%][Progress:===================>          65%] [Cov:=======================>           67%][Progress:===================>          65%] [Cov:=======================>           67%][Progress:===================>          66%] [Cov:=======================>           67%][Progress:===================>          66%] [Cov:=======================>           67%][Progress:===================>          66%] [Cov:=======================>           67%][Progress:===================>          66%] [Cov:=======================>           67%][Progress:===================>          66%] [Cov:=======================>           67%][Progress:===================>          66%] [Cov:=======================>           67%][Progress:===================>          66%] [Cov:=======================>           67%][Progress:====================>         67%] [Cov:=======================>           67%][Progress:====================>         67%] [Cov:=======================>           67%][Progress:====================>         67%] [Cov:=======================>           67%][Progress:====================>         67%] [Cov:=======================>           67%][Progress:====================>         67%] [Cov:=======================>           67%][Progress:====================>         67%] [Cov:=======================>           67%][Progress:====================>         67%] [Cov:=======================>           67%][Progress:====================>         67%] [Cov:=======================>           67%][Progress:====================>         68%] [Cov:=======================>           67%][Progress:====================>         68%] [Cov:=======================>           67%][Progress:====================>         68%] [Cov:=======================>           67%][Progress:====================>         68%] [Cov:=======================>           67%][Progress:====================>         68%] [Cov:=======================>           67%][Progress:====================>         68%] [Cov:=======================>           67%][Progress:====================>         68%] [Cov:=======================>           67%][Progress:====================>         68%] [Cov:=======================>           67%][Progress:====================>         68%] [Cov:=======================>           67%][Progress:====================>         69%] [Cov:=======================>           67%][Progress:====================>         69%] [Cov:=======================>           67%][Progress:====================>         69%] [Cov:=======================>           67%][Progress:====================>         69%] [Cov:=======================>           67%][Progress:====================>         69%] [Cov:=======================>           67%][Progress:====================>         69%] [Cov:=======================>           67%][Progress:====================>         69%] [Cov:=======================>           67%][Progress:====================>         69%] [Cov:=======================>           67%][Progress:=====================>        70%] [Cov:=======================>           67%][Progress:=====================>        70%] [Cov:=======================>           67%][Progress:=====================>        70%] [Cov:=======================>           67%][Progress:=====================>        70%] [Cov:=======================>           67%][Progress:=====================>        70%] [Cov:=======================>           67%][Progress:=====================>        70%] [Cov:=======================>           67%][Progress:=====================>        70%] [Cov:=======================>           67%][Progress:=====================>        70%] [Cov:=======================>           67%][Progress:=====================>        71%] [Cov:=======================>           67%][Progress:=====================>        71%] [Cov:=======================>           67%][Progress:=====================>        71%] [Cov:=======================>           67%][Progress:=====================>        71%] [Cov:=======================>           67%][Progress:=====================>        71%] [Cov:=======================>           67%][Progress:=====================>        71%] [Cov:=======================>           67%][Progress:=====================>        71%] [Cov:=======================>           67%][Progress:=====================>        71%] [Cov:=======================>           67%][Progress:=====================>        71%] [Cov:=======================>           67%][Progress:=====================>        72%] [Cov:=======================>           67%][Progress:=====================>        72%] [Cov:=======================>           67%][Progress:=====================>        72%] [Cov:=======================>           67%][Progress:=====================>        72%] [Cov:=======================>           67%][Progress:=====================>        72%] [Cov:=======================>           67%][Progress:=====================>        72%] [Cov:=======================>           67%][Progress:=====================>        72%] [Cov:=======================>           67%][Progress:=====================>        72%] [Cov:=======================>           67%][Progress:=====================>        73%] [Cov:=======================>           67%][Progress:=====================>        73%] [Cov:=======================>           67%][Progress:=====================>        73%] [Cov:=======================>           67%][Progress:=====================>        73%] [Cov:=======================>           67%][Progress:=====================>        73%] [Cov:=======================>           67%][Progress:=====================>        73%] [Cov:=======================>           67%][Progress:=====================>        73%] [Cov:=======================>           67%][Progress:=====================>        73%] [Cov:=======================>           67%][Progress:======================>       74%] [Cov:=======================>           67%][Progress:======================>       74%] [Cov:=======================>           67%][Progress:======================>       74%] [Cov:=======================>           67%][Progress:======================>       74%] [Cov:=======================>           67%][Progress:======================>       74%] [Cov:=======================>           67%][Progress:======================>       74%] [Cov:=======================>           67%][Progress:======================>       74%] [Cov:=======================>           67%][Progress:======================>       74%] [Cov:=======================>           67%][Progress:======================>       74%] [Cov:=======================>           67%][Progress:======================>       75%] [Cov:=======================>           67%][Progress:======================>       75%] [Cov:=======================>           67%][Progress:======================>       75%] [Cov:=======================>           67%][Progress:======================>       75%] [Cov:=======================>           67%][Progress:======================>       75%] [Cov:=======================>           67%][Progress:======================>       75%] [Cov:=======================>           67%][Progress:======================>       75%] [Cov:=======================>           67%][Progress:======================>       75%] [Cov:=======================>           67%][Progress:======================>       75%] [Cov:=======================>           67%][Progress:======================>       76%] [Cov:=======================>           67%][Progress:======================>       76%] [Cov:=======================>           67%][Progress:======================>       76%] [Cov:=======================>           67%][Progress:======================>       76%] [Cov:=======================>           67%][Progress:======================>       76%] [Cov:=======================>           67%][Progress:======================>       76%] [Cov:=======================>           67%][MASTER] 04:25:12.802 [logback-1] WARN  TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
[Progress:======================>       76%] [Cov:=======================>           67%][Progress:======================>       76%] [Cov:=======================>           67%][Progress:=======================>      77%] [Cov:=======================>           67%][Progress:=======================>      77%] [Cov:=======================>           67%][Progress:=======================>      77%] [Cov:=======================>           67%][Progress:=======================>      77%] [Cov:=======================>           67%][Progress:=======================>      77%] [Cov:=======================>           67%][Progress:=======================>      77%] [Cov:=======================>           67%][Progress:=======================>      77%] [Cov:=======================>           67%][Progress:=======================>      77%] [Cov:=======================>           67%][Progress:=======================>      78%] [Cov:=======================>           67%][Progress:=======================>      78%] [Cov:=======================>           67%][Progress:=======================>      78%] [Cov:=======================>           67%][Progress:=======================>      78%] [Cov:=======================>           67%][Progress:=======================>      78%] [Cov:=======================>           67%][Progress:=======================>      78%] [Cov:=======================>           67%][Progress:=======================>      78%] [Cov:=======================>           67%][Progress:=======================>      78%] [Cov:=======================>           67%][Progress:=======================>      79%] [Cov:=======================>           67%][Progress:=======================>      79%] [Cov:=======================>           67%][Progress:=======================>      79%] [Cov:=======================>           67%][Progress:=======================>      79%] [Cov:=======================>           67%][Progress:=======================>      79%] [Cov:=======================>           67%][Progress:=======================>      79%] [Cov:=======================>           67%][Progress:=======================>      79%] [Cov:=======================>           67%][Progress:=======================>      79%] [Cov:=======================>           67%][Progress:=======================>      79%] [Cov:=======================>           67%][Progress:=======================>      79%] [Cov:=======================>           67%][Progress:========================>     80%] [Cov:=======================>           67%][Progress:========================>     80%] [Cov:=======================>           67%][Progress:========================>     80%] [Cov:=======================>           67%][Progress:========================>     80%] [Cov:=======================>           67%][Progress:========================>     80%] [Cov:=======================>           67%][Progress:========================>     80%] [Cov:=======================>           67%][Progress:========================>     80%] [Cov:=======================>           67%][Progress:========================>     80%] [Cov:=======================>           67%][Progress:========================>     80%] [Cov:=======================>           67%][Progress:========================>     81%] [Cov:=======================>           67%][Progress:========================>     81%] [Cov:=======================>           67%][Progress:========================>     81%] [Cov:=======================>           67%][Progress:========================>     81%] [Cov:=======================>           67%][Progress:========================>     81%] [Cov:=======================>           67%][Progress:========================>     81%] [Cov:=======================>           67%][Progress:========================>     81%] [Cov:=======================>           67%][Progress:========================>     81%] [Cov:=======================>           67%][Progress:========================>     82%] [Cov:=======================>           67%][Progress:========================>     82%] [Cov:=======================>           67%][Progress:========================>     82%] [Cov:=======================>           67%][Progress:========================>     82%] [Cov:=======================>           67%][Progress:========================>     82%] [Cov:=======================>           67%][Progress:========================>     82%] [Cov:=======================>           67%][Progress:========================>     83%] [Cov:=======================>           67%][Progress:========================>     83%] [Cov:=======================>           67%][Progress:========================>     83%] [Cov:=======================>           67%][Progress:========================>     83%] [Cov:=======================>           67%][Progress:========================>     83%] [Cov:=======================>           67%][Progress:========================>     83%] [Cov:=======================>           67%][Progress:=========================>    84%] [Cov:=======================>           67%][Progress:=========================>    84%] [Cov:=======================>           67%][Progress:=========================>    84%] [Cov:=======================>           67%][Progress:=========================>    84%] [Cov:=======================>           67%][Progress:=========================>    84%] [Cov:=======================>           67%][Progress:=========================>    85%] [Cov:=======================>           67%][Progress:=========================>    85%] [Cov:=======================>           67%][Progress:=========================>    85%] [Cov:=======================>           67%][Progress:=========================>    85%] [Cov:=======================>           67%][Progress:=========================>    85%] [Cov:=======================>           67%][Progress:=========================>    86%] [Cov:=======================>           67%][Progress:=========================>    86%] [Cov:=======================>           67%][Progress:=========================>    86%] [Cov:=======================>           67%][Progress:=========================>    86%] [Cov:=======================>           67%][Progress:=========================>    86%] [Cov:=======================>           67%][Progress:==========================>   87%] [Cov:=======================>           67%][Progress:==========================>   87%] [Cov:=======================>           67%][Progress:==========================>   87%] [Cov:=======================>           67%][Progress:==========================>   87%] [Cov:=======================>           67%][Progress:==========================>   87%] [Cov:=======================>           67%][Progress:==========================>   88%] [Cov:=======================>           67%][Progress:==========================>   88%] [Cov:=======================>           67%][Progress:==========================>   88%] [Cov:=======================>           67%][Progress:==========================>   88%] [Cov:=======================>           67%][Progress:==========================>   88%] [Cov:=======================>           67%][Progress:==========================>   88%] [Cov:=======================>           67%][Progress:==========================>   89%] [Cov:=======================>           67%][Progress:==========================>   89%] [Cov:=======================>           67%][Progress:==========================>   89%] [Cov:=======================>           67%][Progress:==========================>   89%] [Cov:=======================>           67%][Progress:==========================>   89%] [Cov:=======================>           67%][Progress:===========================>  90%] [Cov:=======================>           67%][Progress:===========================>  90%] [Cov:=======================>           67%][Progress:===========================>  90%] [Cov:=======================>           67%][Progress:===========================>  90%] [Cov:=======================>           67%][Progress:===========================>  90%] [Cov:=======================>           67%][Progress:===========================>  90%] [Cov:=======================>           67%][Progress:===========================>  91%] [Cov:=======================>           68%][Progress:===========================>  91%] [Cov:=======================>           68%][Progress:===========================>  91%] [Cov:=======================>           68%][Progress:===========================>  91%] [Cov:=======================>           68%][Progress:===========================>  91%] [Cov:=======================>           68%][Progress:===========================>  91%] [Cov:=======================>           68%][Progress:===========================>  92%] [Cov:=======================>           68%][Progress:===========================>  92%] [Cov:=======================>           68%][Progress:===========================>  92%] [Cov:=======================>           68%][Progress:===========================>  92%] [Cov:=======================>           68%][Progress:===========================>  92%] [Cov:=======================>           68%][Progress:===========================>  92%] [Cov:=======================>           68%][Progress:===========================>  93%] [Cov:=======================>           68%][Progress:===========================>  93%] [Cov:=======================>           68%][Progress:===========================>  93%] [Cov:=======================>           68%][Progress:===========================>  93%] [Cov:=======================>           68%][Progress:===========================>  93%] [Cov:=======================>           68%][Progress:===========================>  93%] [Cov:=======================>           68%][Progress:============================> 94%] [Cov:=======================>           68%][Progress:============================> 94%] [Cov:=======================>           68%][Progress:============================> 94%] [Cov:=======================>           68%][Progress:============================> 94%] [Cov:=======================>           68%][Progress:============================> 94%] [Cov:=======================>           68%][Progress:============================> 95%] [Cov:=======================>           68%][Progress:============================> 95%] [Cov:=======================>           68%][Progress:============================> 95%] [Cov:=======================>           68%][Progress:============================> 95%] [Cov:=======================>           68%][Progress:============================> 95%] [Cov:=======================>           68%][Progress:============================> 96%] [Cov:=======================>           68%][Progress:============================> 96%] [Cov:=======================>           68%][Progress:============================> 96%] [Cov:=======================>           68%][MASTER] 04:25:32.562 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.ChronoLocalDate
[Progress:============================> 96%] [Cov:=======================>           68%][Progress:============================> 96%] [Cov:=======================>           68%][Progress:=============================>97%] [Cov:=======================>           68%][Progress:=============================>97%] [Cov:=======================>           68%][Progress:=============================>97%] [Cov:=======================>           68%][Progress:=============================>97%] [Cov:=======================>           68%][Progress:=============================>97%] [Cov:=======================>           68%][Progress:=============================>98%] [Cov:=======================>           68%][Progress:=============================>98%] [Cov:=======================>           68%][Progress:=============================>98%] [Cov:=======================>           68%][Progress:=============================>98%] [Cov:=======================>           68%][Progress:=============================>98%] [Cov:=======================>           68%][Progress:=============================>99%] [Cov:=======================>           68%][Progress:=============================>99%] [Cov:=======================>           68%][Progress:=============================>99%] [Cov:=======================>           68%][Progress:=============================>99%] [Cov:=======================>           68%][Progress:==============================100%] [Cov:=======================>           68%][Progress:==============================100%] [Cov:=======================>           68%][Progress:==============================100%] [Cov:=======================>           68%][Progress:==============================100%] [Cov:=======================>           68%][Progress:==============================100%] [Cov:=======================>           68%][Progress:==============================100%] [Cov:=======================>           68%]
* Search finished after 103s and 568 generations, 216502 statements, best individual has fitness: 138.0
* Generated before the refinement 23 tests with total length 136
statement is: macaw.system.SessionProperties()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class macaw.system.SessionProperties
statement code is: SessionProperties sessionProperties = new SessionProperties()
statement is: macaw.businessLayer.User()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class macaw.businessLayer.User
statement code is: User user = new User()
statement is: setProperty(Ljava/lang/String;Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: sessionProperties.setProperty("currentUser", arg1)
statement is: macaw.util.DisplayableListPanel(Lmacaw/system/SessionProperties;Lmacaw/util/DisplayableListParentForm;Ljava/lang/String;ZZ)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class macaw.util.DisplayableListPanel
statement code is: DisplayableListPanel displayableListPanel = new DisplayableListPanel(arg0, (DisplayableListParentForm) null, "log", true, true)
statement is: getPanel()Ljavax/swing/JPanel; type is: class org.evosuite.testcase.statements.MethodStatement return type class javax.swing.JPanel
statement code is: JPanel panel = displayableListPanel.getPanel()
test data is: SessionProperties sessionProperties = new SessionProperties();
User user = new User();
sessionProperties.setProperty("currentUser", user);
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) null, "log", true, true);
displayableListPanel.getPanel();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        SessionProperties sessionProperties = new SessionProperties();
        User user = new User("John Doe", 30, "johndoe@email.com");
        sessionProperties.setProperty("currentUser", user);
        DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, ((DisplayableListParentForm) (null)), "log", true, true);
        displayableListPanel.getPanel();
    }
}
statement is: SessionProperties sessionProperties = new SessionProperties(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: User user = new User("John Doe", 30, "johndoe@email.com"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: sessionProperties.setProperty("currentUser", user), class spoon.support.reflect.code.CtInvocationImpl
invocation is: sessionProperties.setProperty("currentUser", user) target is: sessionProperties method is: setProperty(java.lang.String,User)
source statement: macaw.system.SessionProperties()V callee: VariableReference: Statement 0, type macaw.system.SessionPropertiesindex is: 0
Matched Method is: setProperty(Ljava/lang/String;Ljava/lang/Object;)V
i 1 Parameters size() 1 Num of Method Parameters: 2
statement is: DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, ((DisplayableListParentForm) (null)), "log", true, true), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: displayableListPanel.getPanel(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: displayableListPanel.getPanel() target is: displayableListPanel method is: getPanel()
source statement: macaw.util.DisplayableListPanel(Lmacaw/system/SessionProperties;Lmacaw/util/DisplayableListParentForm;Ljava/lang/String;ZZ)V callee: VariableReference: Statement 3, type macaw.util.DisplayableListPanelindex is: 7
Matched Method is: getPanel()Ljavax/swing/JPanel;
TestCase is: SessionProperties sessionProperties = new SessionProperties();
String string = "currentUser";
User user = null;
sessionProperties.setProperty(string, user);
String string = "log";
boolean _boolean = true;
boolean _boolean = true;
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) string, (String) _boolean, _boolean, true);
((DisplayableListPanel) _void).getPanel();

statement is: macaw.system.SessionProperties()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class macaw.system.SessionProperties
statement code is: SessionProperties sessionProperties = new SessionProperties()
statement is: macaw.businessLayer.User()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class macaw.businessLayer.User
statement code is: User user = new User()
statement is: setProperty(Ljava/lang/String;Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: sessionProperties.setProperty("currentUser", arg1)
statement is: macaw.util.DisplayableListPanel(Lmacaw/system/SessionProperties;Lmacaw/util/DisplayableListParentForm;Ljava/lang/String;ZZ)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class macaw.util.DisplayableListPanel
statement code is: DisplayableListPanel displayableListPanel = new DisplayableListPanel(arg0, (DisplayableListParentForm) null, "database", true, true)
statement is: setListOwnerName(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: displayableListPanel.setListOwnerName("log")
test data is: SessionProperties sessionProperties = new SessionProperties();
User user = new User();
sessionProperties.setProperty("currentUser", user);
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) null, "database", true, true);
displayableListPanel.setListOwnerName("log");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        SessionProperties sessionProperties = new SessionProperties();
        User user = new User(12345, "John Doe", "johndoe@example.com");
        sessionProperties.setProperty("currentUser", user);
        DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, ((DisplayableListParentForm) (null)), "database", true, true);
        displayableListPanel.setListOwnerName("log");
    }
}
statement is: SessionProperties sessionProperties = new SessionProperties(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: User user = new User(12345, "John Doe", "johndoe@example.com"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: sessionProperties.setProperty("currentUser", user), class spoon.support.reflect.code.CtInvocationImpl
invocation is: sessionProperties.setProperty("currentUser", user) target is: sessionProperties method is: setProperty(java.lang.String,User)
source statement: macaw.system.SessionProperties()V callee: VariableReference: Statement 0, type macaw.system.SessionPropertiesindex is: 0
Matched Method is: setProperty(Ljava/lang/String;Ljava/lang/Object;)V
i 1 Parameters size() 1 Num of Method Parameters: 2
statement is: DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, ((DisplayableListParentForm) (null)), "database", true, true), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: displayableListPanel.setListOwnerName("log"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: displayableListPanel.setListOwnerName("log") target is: displayableListPanel method is: setListOwnerName(java.lang.String)
source statement: macaw.util.DisplayableListPanel(Lmacaw/system/SessionProperties;Lmacaw/util/DisplayableListParentForm;Ljava/lang/String;ZZ)V callee: VariableReference: Statement 3, type macaw.util.DisplayableListPanelindex is: 7
Matched Method is: setListOwnerName(Ljava/lang/String;)V
TestCase is: SessionProperties sessionProperties = new SessionProperties();
String string = "currentUser";
User user = null;
sessionProperties.setProperty(string, user);
String string = "database";
boolean _boolean = true;
boolean _boolean = true;
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) string, (String) _boolean, _boolean, true);
String string = "log";
((DisplayableListPanel) _void).setListOwnerName(string);

statement is: macaw.system.SessionProperties()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class macaw.system.SessionProperties
statement code is: SessionProperties sessionProperties = new SessionProperties()
statement is: macaw.businessLayer.User()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class macaw.businessLayer.User
statement code is: User user = new User()
statement is: setProperty(Ljava/lang/String;Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: sessionProperties.setProperty("currentUser", arg1)
statement is: macaw.util.DisplayableListPanel(Lmacaw/system/SessionProperties;Lmacaw/util/DisplayableListParentForm;Ljava/lang/String;ZZ)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class macaw.util.DisplayableListPanel
statement code is: DisplayableListPanel displayableListPanel = new DisplayableListPanel(arg0, (DisplayableListParentForm) null, "database", true, true)
statement is: setDisplayableListItemDeleter(Lmacaw/util/DisplayableListItemDeleter;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: displayableListPanel.setDisplayableListItemDeleter((DisplayableListItemDeleter) null)
test data is: SessionProperties sessionProperties = new SessionProperties();
User user = new User();
sessionProperties.setProperty("currentUser", user);
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) null, "database", true, true);
displayableListPanel.setDisplayableListItemDeleter((DisplayableListItemDeleter) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        SessionProperties sessionProperties = new SessionProperties();
        User user = new User();
        user.setUsername("johndoe");
        user.setPassword("password123");
        sessionProperties.setProperty("currentUser", user);
        DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, ((DisplayableListParentForm) (null)), "database", true, true);
        displayableListPanel.setDisplayableListItemDeleter(((DisplayableListItemDeleter) (null)));
    }
}
statement is: SessionProperties sessionProperties = new SessionProperties(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: User user = new User(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: user.setUsername("johndoe"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: user.setUsername("johndoe") target is: user method is: setUsername(java.lang.String)
statement is: user.setPassword("password123"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: user.setPassword("password123") target is: user method is: setPassword(java.lang.String)
statement is: sessionProperties.setProperty("currentUser", user), class spoon.support.reflect.code.CtInvocationImpl
invocation is: sessionProperties.setProperty("currentUser", user) target is: sessionProperties method is: setProperty(java.lang.String,User)
source statement: macaw.system.SessionProperties()V callee: VariableReference: Statement 0, type macaw.system.SessionPropertiesindex is: 0
Matched Method is: setProperty(Ljava/lang/String;Ljava/lang/Object;)V
statement is: DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, ((DisplayableListParentForm) (null)), "database", true, true), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: displayableListPanel.setDisplayableListItemDeleter(((DisplayableListItemDeleter) (null))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: displayableListPanel.setDisplayableListItemDeleter(((DisplayableListItemDeleter) (null))) target is: displayableListPanel method is: setDisplayableListItemDeleter(DisplayableListItemDeleter)
source statement: macaw.util.DisplayableListPanel(Lmacaw/system/SessionProperties;Lmacaw/util/DisplayableListParentForm;Ljava/lang/String;ZZ)V callee: VariableReference: Statement 3, type macaw.util.DisplayableListPanelindex is: 7
Matched Method is: setDisplayableListItemDeleter(Lmacaw/util/DisplayableListItemDeleter;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
TestCase is: SessionProperties sessionProperties = new SessionProperties();
User user = new User();
String string = "currentUser";
sessionProperties.setProperty(string, user);
String string = "database";
boolean _boolean = true;
boolean _boolean = true;
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) string, (String) _boolean, _boolean, true);
DisplayableListItemDeleter displayableListItemDeleter = null;
((DisplayableListPanel) _void).setDisplayableListItemDeleter(displayableListItemDeleter);

statement is: macaw.system.SessionProperties()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class macaw.system.SessionProperties
statement code is: SessionProperties sessionProperties = new SessionProperties()
statement is: macaw.businessLayer.User()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class macaw.businessLayer.User
statement code is: User user = new User()
statement is: setProperty(Ljava/lang/String;Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: sessionProperties.setProperty("currentUser", arg1)
statement is: macaw.util.DisplayableListPanel(Lmacaw/system/SessionProperties;Lmacaw/util/DisplayableListParentForm;Ljava/lang/String;ZZ)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class macaw.util.DisplayableListPanel
statement code is: DisplayableListPanel displayableListPanel = new DisplayableListPanel(arg0, (DisplayableListParentForm) null, "log", true, true)
statement is: setNewRecord(Z)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: displayableListPanel.setNewRecord(true)
statement is: updateButtonStates()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: displayableListPanel.updateButtonStates()
test data is: SessionProperties sessionProperties = new SessionProperties();
User user = new User();
sessionProperties.setProperty("currentUser", user);
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) null, "log", true, true);
displayableListPanel.setNewRecord(true);
displayableListPanel.updateButtonStates();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        SessionProperties sessionProperties = new SessionProperties();
        User user = new User();
        user.setName("John Doe");
        user.setEmail("johndoe@example.com");
        sessionProperties.setProperty("currentUser", user);
        DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, ((DisplayableListParentForm) (null)), "log", true, true);
        displayableListPanel.setNewRecord(true);
        displayableListPanel.updateButtonStates();
    }
}
statement is: SessionProperties sessionProperties = new SessionProperties(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: User user = new User(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: user.setName("John Doe"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: user.setName("John Doe") target is: user method is: setName(java.lang.String)
statement is: user.setEmail("johndoe@example.com"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: user.setEmail("johndoe@example.com") target is: user method is: setEmail(java.lang.String)
statement is: sessionProperties.setProperty("currentUser", user), class spoon.support.reflect.code.CtInvocationImpl
invocation is: sessionProperties.setProperty("currentUser", user) target is: sessionProperties method is: setProperty(java.lang.String,User)
source statement: macaw.system.SessionProperties()V callee: VariableReference: Statement 0, type macaw.system.SessionPropertiesindex is: 0
Matched Method is: setProperty(Ljava/lang/String;Ljava/lang/Object;)V
statement is: DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, ((DisplayableListParentForm) (null)), "log", true, true), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: displayableListPanel.setNewRecord(true), class spoon.support.reflect.code.CtInvocationImpl
invocation is: displayableListPanel.setNewRecord(true) target is: displayableListPanel method is: setNewRecord(boolean)
source statement: macaw.util.DisplayableListPanel(Lmacaw/system/SessionProperties;Lmacaw/util/DisplayableListParentForm;Ljava/lang/String;ZZ)V callee: VariableReference: Statement 3, type macaw.util.DisplayableListPanelindex is: 7
Matched Method is: setNewRecord(Z)V
statement is: displayableListPanel.updateButtonStates(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: displayableListPanel.updateButtonStates() target is: displayableListPanel method is: updateButtonStates()
source statement: macaw.util.DisplayableListPanel(Lmacaw/system/SessionProperties;Lmacaw/util/DisplayableListParentForm;Ljava/lang/String;ZZ)V callee: VariableReference: Statement 3, type macaw.util.DisplayableListPanelindex is: 7
Matched Method is: updateButtonStates()V
TestCase is: SessionProperties sessionProperties = new SessionProperties();
User user = new User();
String string = "currentUser";
sessionProperties.setProperty(string, user);
String string = "log";
boolean _boolean = true;
boolean _boolean = true;
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) string, (String) _boolean, _boolean, true);
boolean _boolean = true;
((DisplayableListPanel) _void).setNewRecord(_boolean);
((DisplayableListPanel) _void).updateButtonStates();

statement is: macaw.system.SessionProperties()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class macaw.system.SessionProperties
statement code is: SessionProperties sessionProperties = new SessionProperties()
statement is: macaw.businessLayer.User()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class macaw.businessLayer.User
statement code is: User user = new User()
statement is: setProperty(Ljava/lang/String;Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: sessionProperties.setProperty("currentUser", arg1)
statement is: macaw.util.DisplayableListPanel(Lmacaw/system/SessionProperties;Lmacaw/util/DisplayableListParentForm;Ljava/lang/String;ZZ)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class macaw.util.DisplayableListPanel
statement code is: DisplayableListPanel displayableListPanel = new DisplayableListPanel(arg0, (DisplayableListParentForm) null, "startupOptions", true, true)
statement is: setDisplayableListItemAdder(Lmacaw/util/DisplayableListItemAdder;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: displayableListPanel.setDisplayableListItemAdder((DisplayableListItemAdder) null)
test data is: SessionProperties sessionProperties = new SessionProperties();
User user = new User();
sessionProperties.setProperty("currentUser", user);
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) null, "startupOptions", true, true);
displayableListPanel.setDisplayableListItemAdder((DisplayableListItemAdder) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        SessionProperties sessionProperties = new SessionProperties();
        User user = new User("John Doe", "johndoe@email.com", 30, true);
        sessionProperties.setProperty("currentUser", user);
        DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, ((DisplayableListParentForm) (null)), "startupOptions", true, true);
        displayableListPanel.setDisplayableListItemAdder(((DisplayableListItemAdder) (null)));
    }
}
statement is: SessionProperties sessionProperties = new SessionProperties(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: User user = new User("John Doe", "johndoe@email.com", 30, true), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: sessionProperties.setProperty("currentUser", user), class spoon.support.reflect.code.CtInvocationImpl
invocation is: sessionProperties.setProperty("currentUser", user) target is: sessionProperties method is: setProperty(java.lang.String,User)
source statement: macaw.system.SessionProperties()V callee: VariableReference: Statement 0, type macaw.system.SessionPropertiesindex is: 0
Matched Method is: setProperty(Ljava/lang/String;Ljava/lang/Object;)V
i 1 Parameters size() 1 Num of Method Parameters: 2
statement is: DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, ((DisplayableListParentForm) (null)), "startupOptions", true, true), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: displayableListPanel.setDisplayableListItemAdder(((DisplayableListItemAdder) (null))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: displayableListPanel.setDisplayableListItemAdder(((DisplayableListItemAdder) (null))) target is: displayableListPanel method is: setDisplayableListItemAdder(DisplayableListItemAdder)
source statement: macaw.util.DisplayableListPanel(Lmacaw/system/SessionProperties;Lmacaw/util/DisplayableListParentForm;Ljava/lang/String;ZZ)V callee: VariableReference: Statement 3, type macaw.util.DisplayableListPanelindex is: 7
Matched Method is: setDisplayableListItemAdder(Lmacaw/util/DisplayableListItemAdder;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
TestCase is: SessionProperties sessionProperties = new SessionProperties();
String string = "currentUser";
User user = null;
sessionProperties.setProperty(string, user);
String string = "startupOptions";
boolean _boolean = true;
boolean _boolean = true;
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) string, (String) _boolean, _boolean, true);
DisplayableListItemAdder displayableListItemAdder = null;
((DisplayableListPanel) _void).setDisplayableListItemAdder(displayableListItemAdder);

statement is: macaw.system.SessionProperties()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class macaw.system.SessionProperties
statement code is: SessionProperties sessionProperties = new SessionProperties()
statement is: macaw.businessLayer.User()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class macaw.businessLayer.User
statement code is: User user = new User()
statement is: setProperty(Ljava/lang/String;Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: sessionProperties.setProperty("currentUser", arg1)
statement is: macaw.util.DisplayableListPanel(Lmacaw/system/SessionProperties;Lmacaw/util/DisplayableListParentForm;Ljava/lang/String;Z)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class macaw.util.DisplayableListPanel
statement code is: DisplayableListPanel displayableListPanel = new DisplayableListPanel(arg0, (DisplayableListParentForm) null, "retrievalService", true)
statement is: save()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: displayableListPanel.save()
test data is: SessionProperties sessionProperties = new SessionProperties();
User user = new User();
sessionProperties.setProperty("currentUser", user);
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) null, "retrievalService", true);
displayableListPanel.save();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        SessionProperties sessionProperties = new SessionProperties();
        User user = new User("John Doe", "johndoe@example.com", "1234567890");
        sessionProperties.setProperty("currentUser", user);
        DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, ((DisplayableListParentForm) (null)), "retrievalService", true);
        displayableListPanel.save();
    }
}
statement is: SessionProperties sessionProperties = new SessionProperties(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: User user = new User("John Doe", "johndoe@example.com", "1234567890"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: sessionProperties.setProperty("currentUser", user), class spoon.support.reflect.code.CtInvocationImpl
invocation is: sessionProperties.setProperty("currentUser", user) target is: sessionProperties method is: setProperty(java.lang.String,User)
source statement: macaw.system.SessionProperties()V callee: VariableReference: Statement 0, type macaw.system.SessionPropertiesindex is: 0
Matched Method is: setProperty(Ljava/lang/String;Ljava/lang/Object;)V
i 1 Parameters size() 1 Num of Method Parameters: 2
statement is: DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, ((DisplayableListParentForm) (null)), "retrievalService", true), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: displayableListPanel.save(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: displayableListPanel.save() target is: displayableListPanel method is: save()
source statement: macaw.util.DisplayableListPanel(Lmacaw/system/SessionProperties;Lmacaw/util/DisplayableListParentForm;Ljava/lang/String;Z)V callee: VariableReference: Statement 3, type macaw.util.DisplayableListPanelindex is: 6
Matched Method is: save()V
TestCase is: SessionProperties sessionProperties = new SessionProperties();
String string = "currentUser";
User user = null;
sessionProperties.setProperty(string, user);
String string = "retrievalService";
boolean _boolean = true;
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) string, (String) _boolean, true);
((DisplayableListPanel) _void).save();

statement is: macaw.system.SessionProperties()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class macaw.system.SessionProperties
statement code is: SessionProperties sessionProperties = new SessionProperties()
statement is: macaw.businessLayer.User()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class macaw.businessLayer.User
statement code is: User user = new User()
statement is: setProperty(Ljava/lang/String;Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: sessionProperties.setProperty("currentUser", arg1)
statement is: macaw.util.DisplayableListPanel(Lmacaw/system/SessionProperties;Lmacaw/util/DisplayableListParentForm;Ljava/lang/String;Z)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class macaw.util.DisplayableListPanel
statement code is: DisplayableListPanel displayableListPanel = new DisplayableListPanel(arg0, (DisplayableListParentForm) null, "startupOptions", true)
statement is: setDisplayableListItemEditor(Lmacaw/util/DisplayableListItemEditor;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: displayableListPanel.setDisplayableListItemEditor((DisplayableListItemEditor) null)
test data is: SessionProperties sessionProperties = new SessionProperties();
User user = new User();
sessionProperties.setProperty("currentUser", user);
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) null, "startupOptions", true);
displayableListPanel.setDisplayableListItemEditor((DisplayableListItemEditor) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        SessionProperties sessionProperties = new SessionProperties();
        User user = new User("John Doe", 35, "john.doe@email.com");
        sessionProperties.setProperty("currentUser", user);
        DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, ((DisplayableListParentForm) (null)), "startupOptions", true);
        displayableListPanel.setDisplayableListItemEditor(((DisplayableListItemEditor) (null)));
    }
}
statement is: SessionProperties sessionProperties = new SessionProperties(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: User user = new User("John Doe", 35, "john.doe@email.com"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: sessionProperties.setProperty("currentUser", user), class spoon.support.reflect.code.CtInvocationImpl
invocation is: sessionProperties.setProperty("currentUser", user) target is: sessionProperties method is: setProperty(java.lang.String,User)
source statement: macaw.system.SessionProperties()V callee: VariableReference: Statement 0, type macaw.system.SessionPropertiesindex is: 0
Matched Method is: setProperty(Ljava/lang/String;Ljava/lang/Object;)V
i 1 Parameters size() 1 Num of Method Parameters: 2
statement is: DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, ((DisplayableListParentForm) (null)), "startupOptions", true), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: displayableListPanel.setDisplayableListItemEditor(((DisplayableListItemEditor) (null))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: displayableListPanel.setDisplayableListItemEditor(((DisplayableListItemEditor) (null))) target is: displayableListPanel method is: setDisplayableListItemEditor(DisplayableListItemEditor)
source statement: macaw.util.DisplayableListPanel(Lmacaw/system/SessionProperties;Lmacaw/util/DisplayableListParentForm;Ljava/lang/String;Z)V callee: VariableReference: Statement 3, type macaw.util.DisplayableListPanelindex is: 6
Matched Method is: setDisplayableListItemEditor(Lmacaw/util/DisplayableListItemEditor;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
TestCase is: SessionProperties sessionProperties = new SessionProperties();
String string = "currentUser";
User user = null;
sessionProperties.setProperty(string, user);
String string = "startupOptions";
boolean _boolean = true;
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) string, (String) _boolean, true);
DisplayableListItemEditor displayableListItemEditor = null;
((DisplayableListPanel) _void).setDisplayableListItemEditor(displayableListItemEditor);

statement is: macaw.system.SessionProperties()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class macaw.system.SessionProperties
statement code is: SessionProperties sessionProperties = new SessionProperties()
statement is: macaw.businessLayer.User()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class macaw.businessLayer.User
statement code is: User user = new User()
statement is: setProperty(Ljava/lang/String;Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: sessionProperties.setProperty("currentUser", arg1)
statement is: macaw.util.DisplayableListPanel(Lmacaw/system/SessionProperties;Lmacaw/util/DisplayableListParentForm;Ljava/lang/String;ZZ)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class macaw.util.DisplayableListPanel
statement code is: DisplayableListPanel displayableListPanel = new DisplayableListPanel(arg0, (DisplayableListParentForm) null, "log", true, true)
statement is: getAllListItems()Ljava/util/ArrayList; type is: class org.evosuite.testcase.statements.MethodStatement return type java.util.ArrayList<macaw.util.Displayable>
statement code is: ArrayList<Displayable> allListItems = displayableListPanel.getAllListItems()
test data is: SessionProperties sessionProperties = new SessionProperties();
User user = new User();
sessionProperties.setProperty("currentUser", user);
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) null, "log", true, true);
displayableListPanel.getAllListItems();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        SessionProperties sessionProperties = new SessionProperties();
        User user = new User("John Doe", 25, "johndoe@email.com");
        sessionProperties.setProperty("currentUser", user);
        DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, ((DisplayableListParentForm) (null)), "log", true, true);
        displayableListPanel.getAllListItems();
    }
}
statement is: SessionProperties sessionProperties = new SessionProperties(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: User user = new User("John Doe", 25, "johndoe@email.com"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: sessionProperties.setProperty("currentUser", user), class spoon.support.reflect.code.CtInvocationImpl
invocation is: sessionProperties.setProperty("currentUser", user) target is: sessionProperties method is: setProperty(java.lang.String,User)
source statement: macaw.system.SessionProperties()V callee: VariableReference: Statement 0, type macaw.system.SessionPropertiesindex is: 0
Matched Method is: setProperty(Ljava/lang/String;Ljava/lang/Object;)V
i 1 Parameters size() 1 Num of Method Parameters: 2
statement is: DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, ((DisplayableListParentForm) (null)), "log", true, true), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: displayableListPanel.getAllListItems(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: displayableListPanel.getAllListItems() target is: displayableListPanel method is: getAllListItems()
source statement: macaw.util.DisplayableListPanel(Lmacaw/system/SessionProperties;Lmacaw/util/DisplayableListParentForm;Ljava/lang/String;ZZ)V callee: VariableReference: Statement 3, type macaw.util.DisplayableListPanelindex is: 7
Matched Method is: getAllListItems()Ljava/util/ArrayList;
TestCase is: SessionProperties sessionProperties = new SessionProperties();
String string = "currentUser";
User user = null;
sessionProperties.setProperty(string, user);
String string = "log";
boolean _boolean = true;
boolean _boolean = true;
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) string, (String) _boolean, _boolean, true);
((DisplayableListPanel) _void).getAllListItems();

statement is: macaw.system.SessionProperties()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class macaw.system.SessionProperties
statement code is: SessionProperties sessionProperties = new SessionProperties()
statement is: macaw.businessLayer.User(Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class macaw.businessLayer.User
statement code is: User user = new User("database", "securityService")
statement is: setProperty(Ljava/lang/String;Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: sessionProperties.setProperty("currentUser", arg1)
statement is: macaw.util.DisplayableListPanel(Lmacaw/system/SessionProperties;Lmacaw/util/DisplayableListParentForm;Ljava/lang/String;Z)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class macaw.util.DisplayableListPanel
statement code is: DisplayableListPanel displayableListPanel = new DisplayableListPanel(arg0, (DisplayableListParentForm) null, "securityService", false)
statement is: setDisplayableListItemViewer(Lmacaw/util/DisplayableListItemViewer;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: displayableListPanel.setDisplayableListItemViewer((DisplayableListItemViewer) null)
test data is: SessionProperties sessionProperties = new SessionProperties();
User user = new User("database", "securityService");
sessionProperties.setProperty("currentUser", user);
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) null, "securityService", false);
displayableListPanel.setDisplayableListItemViewer((DisplayableListItemViewer) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        SessionProperties sessionProperties = new SessionProperties();
        User user = new User("database", "securityService");
        sessionProperties.setProperty("currentUser", user);
        DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, ((DisplayableListParentForm) (null)), "securityService", false);
        displayableListPanel.setDisplayableListItemViewer(((DisplayableListItemViewer) (null)));
    }
}
statement is: SessionProperties sessionProperties = new SessionProperties(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: User user = new User("database", "securityService"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: sessionProperties.setProperty("currentUser", user), class spoon.support.reflect.code.CtInvocationImpl
invocation is: sessionProperties.setProperty("currentUser", user) target is: sessionProperties method is: setProperty(java.lang.String,User)
source statement: macaw.system.SessionProperties()V callee: VariableReference: Statement 0, type macaw.system.SessionPropertiesindex is: 0
Matched Method is: setProperty(Ljava/lang/String;Ljava/lang/Object;)V
statement is: DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, ((DisplayableListParentForm) (null)), "securityService", false), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: displayableListPanel.setDisplayableListItemViewer(((DisplayableListItemViewer) (null))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: displayableListPanel.setDisplayableListItemViewer(((DisplayableListItemViewer) (null))) target is: displayableListPanel method is: setDisplayableListItemViewer(DisplayableListItemViewer)
source statement: macaw.util.DisplayableListPanel(Lmacaw/system/SessionProperties;Lmacaw/util/DisplayableListParentForm;Ljava/lang/String;Z)V callee: VariableReference: Statement 3, type macaw.util.DisplayableListPanelindex is: 8
Matched Method is: setDisplayableListItemViewer(Lmacaw/util/DisplayableListItemViewer;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
TestCase is: SessionProperties sessionProperties = new SessionProperties();
String string = "database";
String string = "securityService";
User user = new User(string, string);
String string = "currentUser";
sessionProperties.setProperty(string, user);
String string = "securityService";
boolean _boolean = false;
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) string, (String) _boolean, false);
DisplayableListItemViewer displayableListItemViewer = null;
((DisplayableListPanel) user).setDisplayableListItemViewer(displayableListItemViewer);

statement is: macaw.system.SessionProperties()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class macaw.system.SessionProperties
statement code is: SessionProperties sessionProperties = new SessionProperties()
statement is: macaw.businessLayer.User(Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class macaw.businessLayer.User
statement code is: User user = new User("log", "startupOptions")
statement is: setProperty(Ljava/lang/String;Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: sessionProperties.setProperty("currentUser", arg1)
statement is: macaw.util.DisplayableListPanel(Lmacaw/system/SessionProperties;Lmacaw/util/DisplayableListParentForm;Ljava/lang/String;ZZ)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class macaw.util.DisplayableListPanel
statement code is: DisplayableListPanel displayableListPanel = new DisplayableListPanel(arg0, (DisplayableListParentForm) null, "currentUser", true, true)
statement is: setDisplayableListItemSelector(Lmacaw/util/DisplayableListItemSelector;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: displayableListPanel.setDisplayableListItemSelector((DisplayableListItemSelector) null)
test data is: SessionProperties sessionProperties = new SessionProperties();
User user = new User("log", "startupOptions");
sessionProperties.setProperty("currentUser", user);
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) null, "currentUser", true, true);
displayableListPanel.setDisplayableListItemSelector((DisplayableListItemSelector) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        SessionProperties sessionProperties = new SessionProperties();
        User user = new User("log", "startupOptions");
        sessionProperties.setProperty("currentUser", user);
        DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, ((DisplayableListParentForm) (null)), "currentUser", true, true);
        displayableListPanel.setDisplayableListItemSelector(((DisplayableListItemSelector) (null)));
    }
}
statement is: SessionProperties sessionProperties = new SessionProperties(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: User user = new User("log", "startupOptions"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: sessionProperties.setProperty("currentUser", user), class spoon.support.reflect.code.CtInvocationImpl
invocation is: sessionProperties.setProperty("currentUser", user) target is: sessionProperties method is: setProperty(java.lang.String,User)
source statement: macaw.system.SessionProperties()V callee: VariableReference: Statement 0, type macaw.system.SessionPropertiesindex is: 0
Matched Method is: setProperty(Ljava/lang/String;Ljava/lang/Object;)V
statement is: DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, ((DisplayableListParentForm) (null)), "currentUser", true, true), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: displayableListPanel.setDisplayableListItemSelector(((DisplayableListItemSelector) (null))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: displayableListPanel.setDisplayableListItemSelector(((DisplayableListItemSelector) (null))) target is: displayableListPanel method is: setDisplayableListItemSelector(DisplayableListItemSelector)
source statement: macaw.util.DisplayableListPanel(Lmacaw/system/SessionProperties;Lmacaw/util/DisplayableListParentForm;Ljava/lang/String;ZZ)V callee: VariableReference: Statement 3, type macaw.util.DisplayableListPanelindex is: 9
Matched Method is: setDisplayableListItemSelector(Lmacaw/util/DisplayableListItemSelector;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
TestCase is: SessionProperties sessionProperties = new SessionProperties();
String string = "log";
String string = "startupOptions";
User user = new User(string, string);
String string = "currentUser";
sessionProperties.setProperty(string, user);
String string = "currentUser";
boolean _boolean = true;
boolean _boolean = true;
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) string, (String) _boolean, _boolean, true);
DisplayableListItemSelector displayableListItemSelector = null;
((DisplayableListPanel) user).setDisplayableListItemSelector(displayableListItemSelector);

statement is: macaw.system.SessionProperties()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class macaw.system.SessionProperties
statement code is: SessionProperties sessionProperties = new SessionProperties()
statement is: macaw.businessLayer.User()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class macaw.businessLayer.User
statement code is: User user = new User()
statement is: setProperty(Ljava/lang/String;Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: sessionProperties.setProperty("currentUser", arg1)
statement is: macaw.util.DisplayableListPanel(Lmacaw/system/SessionProperties;Lmacaw/util/DisplayableListParentForm;Ljava/lang/String;ZZ)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class macaw.util.DisplayableListPanel
statement code is: DisplayableListPanel displayableListPanel = new DisplayableListPanel(arg0, (DisplayableListParentForm) null, "database", false, false)
statement is: getPanel()Ljavax/swing/JPanel; type is: class org.evosuite.testcase.statements.MethodStatement return type class javax.swing.JPanel
statement code is: JPanel panel = displayableListPanel.getPanel()
test data is: SessionProperties sessionProperties = new SessionProperties();
User user = new User();
sessionProperties.setProperty("currentUser", user);
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) null, "database", false, false);
displayableListPanel.getPanel();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        SessionProperties sessionProperties = new SessionProperties();
        User user = new User();
        user.setName("John Doe");
        user.setEmail("johndoe@example.com");
        sessionProperties.setProperty("currentUser", user);
        DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, ((DisplayableListParentForm) (null)), "database", false, false);
        displayableListPanel.getPanel();
    }
}
statement is: SessionProperties sessionProperties = new SessionProperties(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: User user = new User(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: user.setName("John Doe"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: user.setName("John Doe") target is: user method is: setName(java.lang.String)
statement is: user.setEmail("johndoe@example.com"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: user.setEmail("johndoe@example.com") target is: user method is: setEmail(java.lang.String)
statement is: sessionProperties.setProperty("currentUser", user), class spoon.support.reflect.code.CtInvocationImpl
invocation is: sessionProperties.setProperty("currentUser", user) target is: sessionProperties method is: setProperty(java.lang.String,User)
source statement: macaw.system.SessionProperties()V callee: VariableReference: Statement 0, type macaw.system.SessionPropertiesindex is: 0
Matched Method is: setProperty(Ljava/lang/String;Ljava/lang/Object;)V
statement is: DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, ((DisplayableListParentForm) (null)), "database", false, false), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: displayableListPanel.getPanel(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: displayableListPanel.getPanel() target is: displayableListPanel method is: getPanel()
source statement: macaw.util.DisplayableListPanel(Lmacaw/system/SessionProperties;Lmacaw/util/DisplayableListParentForm;Ljava/lang/String;ZZ)V callee: VariableReference: Statement 3, type macaw.util.DisplayableListPanelindex is: 7
Matched Method is: getPanel()Ljavax/swing/JPanel;
TestCase is: SessionProperties sessionProperties = new SessionProperties();
User user = new User();
String string = "currentUser";
sessionProperties.setProperty(string, user);
String string = "database";
boolean _boolean = false;
boolean _boolean = false;
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) string, (String) _boolean, _boolean, false);
((DisplayableListPanel) _void).getPanel();

statement is: macaw.system.SessionProperties()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class macaw.system.SessionProperties
statement code is: SessionProperties sessionProperties = new SessionProperties()
statement is: macaw.businessLayer.User()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class macaw.businessLayer.User
statement code is: User user = new User()
statement is: setProperty(Ljava/lang/String;Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: sessionProperties.setProperty("currentUser", arg1)
statement is: macaw.util.DisplayableListPanel(Lmacaw/system/SessionProperties;Lmacaw/util/DisplayableListParentForm;Ljava/lang/String;ZZ)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class macaw.util.DisplayableListPanel
statement code is: DisplayableListPanel displayableListPanel = new DisplayableListPanel(arg0, (DisplayableListParentForm) null, "retrievalService", false, false)
statement is: addListItem()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: displayableListPanel.addListItem()
test data is: SessionProperties sessionProperties = new SessionProperties();
User user = new User();
sessionProperties.setProperty("currentUser", user);
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) null, "retrievalService", false, false);
displayableListPanel.addListItem();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        SessionProperties sessionProperties = new SessionProperties();
        User user = new User("Jane Doe", "janedoe@example.com", 654321);
        sessionProperties.setProperty("currentUser", user);
        DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, ((DisplayableListParentForm) (null)), "retrievalService", false, false);
        displayableListPanel.addListItem();
    }
}
statement is: SessionProperties sessionProperties = new SessionProperties(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: User user = new User("Jane Doe", "janedoe@example.com", 654321), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: sessionProperties.setProperty("currentUser", user), class spoon.support.reflect.code.CtInvocationImpl
invocation is: sessionProperties.setProperty("currentUser", user) target is: sessionProperties method is: setProperty(java.lang.String,User)
source statement: macaw.system.SessionProperties()V callee: VariableReference: Statement 0, type macaw.system.SessionPropertiesindex is: 0
Matched Method is: setProperty(Ljava/lang/String;Ljava/lang/Object;)V
i 1 Parameters size() 1 Num of Method Parameters: 2
statement is: DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, ((DisplayableListParentForm) (null)), "retrievalService", false, false), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: displayableListPanel.addListItem(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: displayableListPanel.addListItem() target is: displayableListPanel method is: addListItem()
source statement: macaw.util.DisplayableListPanel(Lmacaw/system/SessionProperties;Lmacaw/util/DisplayableListParentForm;Ljava/lang/String;ZZ)V callee: VariableReference: Statement 3, type macaw.util.DisplayableListPanelindex is: 7
Matched Method is: addListItem()V
TestCase is: SessionProperties sessionProperties = new SessionProperties();
String string = "currentUser";
User user = null;
sessionProperties.setProperty(string, user);
String string = "retrievalService";
boolean _boolean = false;
boolean _boolean = false;
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) string, (String) _boolean, _boolean, false);
((DisplayableListPanel) _void).addListItem();

statement is: macaw.system.SessionProperties()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class macaw.system.SessionProperties
statement code is: SessionProperties sessionProperties = new SessionProperties()
statement is: macaw.businessLayer.User()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class macaw.businessLayer.User
statement code is: User user = new User()
statement is: setProperty(Ljava/lang/String;Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: sessionProperties.setProperty("currentUser", arg1)
statement is: java.util.ArrayList()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type java.util.ArrayList<macaw.util.Displayable>
statement code is: ArrayList<Displayable> arrayList = new ArrayList<Displayable>()
statement is: add(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean add = arrayList.add((Displayable) arg0)
statement is: macaw.util.DisplayableListPanel(Lmacaw/system/SessionProperties;Lmacaw/util/DisplayableListParentForm;Ljava/lang/String;ZZ)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class macaw.util.DisplayableListPanel
statement code is: DisplayableListPanel displayableListPanel = new DisplayableListPanel(arg0, (DisplayableListParentForm) null, "database", true, true)
statement is: setDisplayableItems(Ljava/util/ArrayList;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: displayableListPanel.setDisplayableItems(arg0)
statement is: deleteSelectedListItems()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: displayableListPanel.deleteSelectedListItems()
test data is: SessionProperties sessionProperties = new SessionProperties();
User user = new User();
sessionProperties.setProperty("currentUser", user);
ArrayList<Displayable> arrayList = new ArrayList<Displayable>();
arrayList.add((Displayable) user);
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) null, "database", true, true);
displayableListPanel.setDisplayableItems(arrayList);
displayableListPanel.deleteSelectedListItems();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        SessionProperties sessionProperties = new SessionProperties();
        User user1 = new User("John Doe", 30, "johndoe@example.com");
        User user2 = new User("Jane Smith", 25, "jane.smith@example.com");
        User user3 = new User("Bob Johnson", 40, "bobjohnson@example.com");
        ArrayList<Displayable> arrayList = new ArrayList<Displayable>();
        arrayList.add(((Displayable) (user1)));
        arrayList.add(((Displayable) (user2)));
        arrayList.add(((Displayable) (user3)));
        DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, ((DisplayableListParentForm) (null)), "database", true, true);
        displayableListPanel.setDisplayableItems(arrayList);
        displayableListPanel.deleteSelectedListItems();
    }
}
statement is: SessionProperties sessionProperties = new SessionProperties(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: User user1 = new User("John Doe", 30, "johndoe@example.com"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: User user2 = new User("Jane Smith", 25, "jane.smith@example.com"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: User user3 = new User("Bob Johnson", 40, "bobjohnson@example.com"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ArrayList<Displayable> arrayList = new ArrayList<Displayable>(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: arrayList.add(((Displayable) (user1))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: arrayList.add(((Displayable) (user1))) target is: arrayList method is: add(Displayable)
source statement: java.util.ArrayList()V callee: VariableReference: Statement 3, type java.util.ArrayList<macaw.util.Displayable>index is: 1
Matched Method is: add(Ljava/lang/Object;)Z
i 0 Parameters size() 0 Num of Method Parameters: 1
TestCase Could not be added: add(Ljava/lang/Object;)Z
statement is: arrayList.add(((Displayable) (user2))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: arrayList.add(((Displayable) (user2))) target is: arrayList method is: add(Displayable)
source statement: java.util.ArrayList()V callee: VariableReference: Statement 3, type java.util.ArrayList<macaw.util.Displayable>index is: 1
Matched Method is: add(Ljava/lang/Object;)Z
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: arrayList.add(((Displayable) (user3))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: arrayList.add(((Displayable) (user3))) target is: arrayList method is: add(Displayable)
source statement: java.util.ArrayList()V callee: VariableReference: Statement 3, type java.util.ArrayList<macaw.util.Displayable>index is: 1
Matched Method is: add(Ljava/lang/Object;)Z
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, ((DisplayableListParentForm) (null)), "database", true, true), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: displayableListPanel.setDisplayableItems(arrayList), class spoon.support.reflect.code.CtInvocationImpl
invocation is: displayableListPanel.setDisplayableItems(arrayList) target is: displayableListPanel method is: setDisplayableItems(ArrayList)
source statement: macaw.util.DisplayableListPanel(Lmacaw/system/SessionProperties;Lmacaw/util/DisplayableListParentForm;Ljava/lang/String;ZZ)V callee: VariableReference: Statement 5, type macaw.util.DisplayableListPanelindex is: 10
Matched Method is: setDisplayableItems(Ljava/util/ArrayList;)V
statement is: displayableListPanel.deleteSelectedListItems(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: displayableListPanel.deleteSelectedListItems() target is: displayableListPanel method is: deleteSelectedListItems()
source statement: macaw.util.DisplayableListPanel(Lmacaw/system/SessionProperties;Lmacaw/util/DisplayableListParentForm;Ljava/lang/String;ZZ)V callee: VariableReference: Statement 5, type macaw.util.DisplayableListPanelindex is: 10
Matched Method is: deleteSelectedListItems()V
* this is vulnerable: User user = null
TestCase is: SessionProperties sessionProperties = new SessionProperties();
ArrayList<Displayable> arrayList = new ArrayList<Displayable>();
User user = null;
User user = null;
((ArrayList) user).add((Displayable) user);
User user = null;
((ArrayList) user).add((Displayable) user);
String string = "database";
boolean _boolean = true;
boolean _boolean = true;
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) string, (String) _boolean, _boolean, true);
((DisplayableListPanel) user).setDisplayableItems(arrayList);
((DisplayableListPanel) user).deleteSelectedListItems();

statement is: macaw.system.SessionProperties()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class macaw.system.SessionProperties
statement code is: SessionProperties sessionProperties = new SessionProperties()
statement is: macaw.businessLayer.User()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class macaw.businessLayer.User
statement code is: User user = new User()
statement is: setProperty(Ljava/lang/String;Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: sessionProperties.setProperty("currentUser", arg1)
statement is: macaw.util.DisplayableListPanel(Lmacaw/system/SessionProperties;Lmacaw/util/DisplayableListParentForm;Ljava/lang/String;ZZ)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class macaw.util.DisplayableListPanel
statement code is: DisplayableListPanel displayableListPanel = new DisplayableListPanel(arg0, (DisplayableListParentForm) null, "database", true, true)
statement is: deleteSelectedListItems()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: displayableListPanel.deleteSelectedListItems()
test data is: SessionProperties sessionProperties = new SessionProperties();
User user = new User();
sessionProperties.setProperty("currentUser", user);
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) null, "database", true, true);
displayableListPanel.deleteSelectedListItems();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        SessionProperties sessionProperties = new SessionProperties();
        User user = new User("John Doe", 35, "john.doe@example.com");
        sessionProperties.setProperty("currentUser", user);
        DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, ((DisplayableListParentForm) (null)), "database", true, true);
        displayableListPanel.deleteSelectedListItems();
    }
}
statement is: SessionProperties sessionProperties = new SessionProperties(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: User user = new User("John Doe", 35, "john.doe@example.com"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: sessionProperties.setProperty("currentUser", user), class spoon.support.reflect.code.CtInvocationImpl
invocation is: sessionProperties.setProperty("currentUser", user) target is: sessionProperties method is: setProperty(java.lang.String,User)
source statement: macaw.system.SessionProperties()V callee: VariableReference: Statement 0, type macaw.system.SessionPropertiesindex is: 0
Matched Method is: setProperty(Ljava/lang/String;Ljava/lang/Object;)V
i 1 Parameters size() 1 Num of Method Parameters: 2
statement is: DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, ((DisplayableListParentForm) (null)), "database", true, true), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: displayableListPanel.deleteSelectedListItems(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: displayableListPanel.deleteSelectedListItems() target is: displayableListPanel method is: deleteSelectedListItems()
source statement: macaw.util.DisplayableListPanel(Lmacaw/system/SessionProperties;Lmacaw/util/DisplayableListParentForm;Ljava/lang/String;ZZ)V callee: VariableReference: Statement 3, type macaw.util.DisplayableListPanelindex is: 7
Matched Method is: deleteSelectedListItems()V
TestCase is: SessionProperties sessionProperties = new SessionProperties();
String string = "currentUser";
User user = null;
sessionProperties.setProperty(string, user);
String string = "database";
boolean _boolean = true;
boolean _boolean = true;
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) string, (String) _boolean, _boolean, true);
((DisplayableListPanel) _void).deleteSelectedListItems();

statement is: macaw.system.SessionProperties()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class macaw.system.SessionProperties
statement code is: SessionProperties sessionProperties = new SessionProperties()
statement is: macaw.businessLayer.User()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class macaw.businessLayer.User
statement code is: User user = new User()
statement is: setProperty(Ljava/lang/String;Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: sessionProperties.setProperty("currentUser", arg1)
statement is: macaw.util.DisplayableListPanel(Lmacaw/system/SessionProperties;Lmacaw/util/DisplayableListParentForm;Ljava/lang/String;ZZ)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class macaw.util.DisplayableListPanel
statement code is: DisplayableListPanel displayableListPanel = new DisplayableListPanel(arg0, (DisplayableListParentForm) null, "", true, false)
statement is: updateButtonStates()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: displayableListPanel.updateButtonStates()
test data is: SessionProperties sessionProperties = new SessionProperties();
User user = new User();
sessionProperties.setProperty("currentUser", user);
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) null, "", true, false);
displayableListPanel.updateButtonStates();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        SessionProperties sessionProperties = new SessionProperties();
        User user = new User("John", "Doe");
        sessionProperties.setProperty("currentUser", user);
        DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, ((DisplayableListParentForm) (null)), "", true, false);
        displayableListPanel.updateButtonStates();
    }
}
statement is: SessionProperties sessionProperties = new SessionProperties(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: User user = new User("John", "Doe"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: sessionProperties.setProperty("currentUser", user), class spoon.support.reflect.code.CtInvocationImpl
invocation is: sessionProperties.setProperty("currentUser", user) target is: sessionProperties method is: setProperty(java.lang.String,User)
source statement: macaw.system.SessionProperties()V callee: VariableReference: Statement 0, type macaw.system.SessionPropertiesindex is: 0
Matched Method is: setProperty(Ljava/lang/String;Ljava/lang/Object;)V
i 1 Parameters size() 1 Num of Method Parameters: 2
statement is: DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, ((DisplayableListParentForm) (null)), "", true, false), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: displayableListPanel.updateButtonStates(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: displayableListPanel.updateButtonStates() target is: displayableListPanel method is: updateButtonStates()
source statement: macaw.util.DisplayableListPanel(Lmacaw/system/SessionProperties;Lmacaw/util/DisplayableListParentForm;Ljava/lang/String;ZZ)V callee: VariableReference: Statement 3, type macaw.util.DisplayableListPanelindex is: 7
Matched Method is: updateButtonStates()V
TestCase is: SessionProperties sessionProperties = new SessionProperties();
String string = "currentUser";
User user = null;
sessionProperties.setProperty(string, user);
String string = "";
boolean _boolean = true;
boolean _boolean = false;
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) string, (String) _boolean, _boolean, false);
((DisplayableListPanel) _void).updateButtonStates();

statement is: macaw.system.SessionProperties()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class macaw.system.SessionProperties
statement code is: SessionProperties sessionProperties = new SessionProperties()
statement is: macaw.businessLayer.User()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class macaw.businessLayer.User
statement code is: User user = new User()
statement is: setProperty(Ljava/lang/String;Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: sessionProperties.setProperty("currentUser", arg1)
statement is: java.util.ArrayList()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type java.util.ArrayList<macaw.util.Displayable>
statement code is: ArrayList<Displayable> arrayList = new ArrayList<Displayable>()
statement is: add(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean add = arrayList.add((Displayable) arg0)
statement is: macaw.util.DisplayableListPanel(Lmacaw/system/SessionProperties;Lmacaw/util/DisplayableListParentForm;Ljava/lang/String;ZZ)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class macaw.util.DisplayableListPanel
statement code is: DisplayableListPanel displayableListPanel = new DisplayableListPanel(arg0, (DisplayableListParentForm) null, "retrievalService", false, false)
statement is: setNewRecord(Z)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: displayableListPanel.setNewRecord(true)
statement is: setDisplayableItems(Ljava/util/ArrayList;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: displayableListPanel.setDisplayableItems(arg0)
statement is: updateButtonStates()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: displayableListPanel.updateButtonStates()
test data is: SessionProperties sessionProperties = new SessionProperties();
User user = new User();
sessionProperties.setProperty("currentUser", user);
ArrayList<Displayable> arrayList = new ArrayList<Displayable>();
arrayList.add((Displayable) user);
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) null, "retrievalService", false, false);
displayableListPanel.setNewRecord(true);
displayableListPanel.setDisplayableItems(arrayList);
displayableListPanel.updateButtonStates();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        SessionProperties sessionProperties = new SessionProperties();
        User user = new User("John", "Smith", 25, "john@gmail.com", true);
        sessionProperties.setProperty("currentUser", user);
        ArrayList<Displayable> arrayList = new ArrayList<>();
        arrayList.add(((Displayable) (user)));
        DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, ((DisplayableListParentForm) (null)), "retrievalService", false, false);
        displayableListPanel.setNewRecord(true);
        displayableListPanel.setDisplayableItems(arrayList);
        displayableListPanel.updateButtonStates();
    }
}
statement is: SessionProperties sessionProperties = new SessionProperties(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: User user = new User("John", "Smith", 25, "john@gmail.com", true), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: sessionProperties.setProperty("currentUser", user), class spoon.support.reflect.code.CtInvocationImpl
invocation is: sessionProperties.setProperty("currentUser", user) target is: sessionProperties method is: setProperty(java.lang.String,User)
source statement: macaw.system.SessionProperties()V callee: VariableReference: Statement 0, type macaw.system.SessionPropertiesindex is: 0
Matched Method is: setProperty(Ljava/lang/String;Ljava/lang/Object;)V
i 1 Parameters size() 1 Num of Method Parameters: 2
statement is: ArrayList<Displayable> arrayList = new ArrayList<>(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: arrayList.add(((Displayable) (user))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: arrayList.add(((Displayable) (user))) target is: arrayList method is: add(Displayable)
source statement: java.util.ArrayList()V callee: VariableReference: Statement 3, type java.util.ArrayList<macaw.util.Displayable>index is: 4
Matched Method is: add(Ljava/lang/Object;)Z
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, ((DisplayableListParentForm) (null)), "retrievalService", false, false), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: displayableListPanel.setNewRecord(true), class spoon.support.reflect.code.CtInvocationImpl
invocation is: displayableListPanel.setNewRecord(true) target is: displayableListPanel method is: setNewRecord(boolean)
source statement: macaw.util.DisplayableListPanel(Lmacaw/system/SessionProperties;Lmacaw/util/DisplayableListParentForm;Ljava/lang/String;ZZ)V callee: VariableReference: Statement 5, type macaw.util.DisplayableListPanelindex is: 10
Matched Method is: setNewRecord(Z)V
statement is: displayableListPanel.setDisplayableItems(arrayList), class spoon.support.reflect.code.CtInvocationImpl
invocation is: displayableListPanel.setDisplayableItems(arrayList) target is: displayableListPanel method is: setDisplayableItems(ArrayList)
source statement: macaw.util.DisplayableListPanel(Lmacaw/system/SessionProperties;Lmacaw/util/DisplayableListParentForm;Ljava/lang/String;ZZ)V callee: VariableReference: Statement 5, type macaw.util.DisplayableListPanelindex is: 10
Matched Method is: setDisplayableItems(Ljava/util/ArrayList;)V
statement is: displayableListPanel.updateButtonStates(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: displayableListPanel.updateButtonStates() target is: displayableListPanel method is: updateButtonStates()
source statement: macaw.util.DisplayableListPanel(Lmacaw/system/SessionProperties;Lmacaw/util/DisplayableListParentForm;Ljava/lang/String;ZZ)V callee: VariableReference: Statement 5, type macaw.util.DisplayableListPanelindex is: 10
Matched Method is: updateButtonStates()V
TestCase is: SessionProperties sessionProperties = new SessionProperties();
String string = "currentUser";
User user = null;
sessionProperties.setProperty(string, user);
ArrayList<Displayable> arrayList = new ArrayList<Displayable>();
User user = null;
((ArrayList) _void).add((Displayable) user);
String string = "retrievalService";
boolean _boolean = false;
boolean _boolean = false;
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) string, (String) _boolean, _boolean, false);
boolean _boolean = true;
((DisplayableListPanel) user).setNewRecord(_boolean);
((DisplayableListPanel) user).setDisplayableItems(arrayList);
((DisplayableListPanel) user).updateButtonStates();

statement is: macaw.system.SessionProperties()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class macaw.system.SessionProperties
statement code is: SessionProperties sessionProperties = new SessionProperties()
statement is: macaw.businessLayer.User()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class macaw.businessLayer.User
statement code is: User user = new User()
statement is: setProperty(Ljava/lang/String;Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: sessionProperties.setProperty("currentUser", arg1)
statement is: macaw.util.DisplayableListPanel(Lmacaw/system/SessionProperties;Lmacaw/util/DisplayableListParentForm;Ljava/lang/String;Z)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class macaw.util.DisplayableListPanel
statement code is: DisplayableListPanel displayableListPanel = new DisplayableListPanel(arg0, (DisplayableListParentForm) null, "retrievalService", true)
statement is: java.awt.event.ActionEvent(Ljava/lang/Object;ILjava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.awt.event.ActionEvent
statement code is: ActionEvent actionEvent = new ActionEvent(arg0, 5408, "currentUser")
statement is: actionPerformed(Ljava/awt/event/ActionEvent;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: displayableListPanel.actionPerformed(arg0)
test data is: SessionProperties sessionProperties = new SessionProperties();
User user = new User();
sessionProperties.setProperty("currentUser", user);
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) null, "retrievalService", true);
ActionEvent actionEvent = new ActionEvent(sessionProperties, 5408, "currentUser");
displayableListPanel.actionPerformed(actionEvent);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        SessionProperties sessionProperties = new SessionProperties();
        User user = new User("John Doe", 35, "johndoe@example.com");
        sessionProperties.setProperty("currentUser", user);
        DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, ((DisplayableListParentForm) (null)), "retrievalService", true);
        ActionEvent actionEvent = new ActionEvent(sessionProperties, 5408, "currentUser");
        displayableListPanel.actionPerformed(actionEvent);
    }
}
statement is: SessionProperties sessionProperties = new SessionProperties(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: User user = new User("John Doe", 35, "johndoe@example.com"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: sessionProperties.setProperty("currentUser", user), class spoon.support.reflect.code.CtInvocationImpl
invocation is: sessionProperties.setProperty("currentUser", user) target is: sessionProperties method is: setProperty(java.lang.String,User)
source statement: macaw.system.SessionProperties()V callee: VariableReference: Statement 0, type macaw.system.SessionPropertiesindex is: 0
Matched Method is: setProperty(Ljava/lang/String;Ljava/lang/Object;)V
i 1 Parameters size() 1 Num of Method Parameters: 2
statement is: DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, ((DisplayableListParentForm) (null)), "retrievalService", true), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ActionEvent actionEvent = new ActionEvent(sessionProperties, 5408, "currentUser"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: displayableListPanel.actionPerformed(actionEvent), class spoon.support.reflect.code.CtInvocationImpl
invocation is: displayableListPanel.actionPerformed(actionEvent) target is: displayableListPanel method is: actionPerformed(ActionEvent)
source statement: macaw.util.DisplayableListPanel(Lmacaw/system/SessionProperties;Lmacaw/util/DisplayableListParentForm;Ljava/lang/String;Z)V callee: VariableReference: Statement 3, type macaw.util.DisplayableListPanelindex is: 6
Matched Method is: actionPerformed(Ljava/awt/event/ActionEvent;)V
TestCase is: SessionProperties sessionProperties = new SessionProperties();
String string = "currentUser";
User user = null;
sessionProperties.setProperty(string, user);
String string = "retrievalService";
boolean _boolean = true;
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) string, (String) _boolean, true);
int _int = 5408;
String string = "currentUser";
ActionEvent actionEvent = new ActionEvent(sessionProperties, _int, string);
((DisplayableListPanel) _void).actionPerformed(actionEvent);

statement is: macaw.system.SessionProperties()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class macaw.system.SessionProperties
statement code is: SessionProperties sessionProperties = new SessionProperties()
statement is: macaw.businessLayer.User()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class macaw.businessLayer.User
statement code is: User user = new User()
statement is: setProperty(Ljava/lang/String;Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: sessionProperties.setProperty("currentUser", arg1)
statement is: macaw.util.DisplayableListPanel(Lmacaw/system/SessionProperties;Lmacaw/util/DisplayableListParentForm;Ljava/lang/String;Z)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class macaw.util.DisplayableListPanel
statement code is: DisplayableListPanel displayableListPanel = new DisplayableListPanel(arg0, (DisplayableListParentForm) null, "database", false)
statement is: updateButtonStates()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: displayableListPanel.updateButtonStates()
test data is: SessionProperties sessionProperties = new SessionProperties();
User user = new User();
sessionProperties.setProperty("currentUser", user);
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) null, "database", false);
displayableListPanel.updateButtonStates();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        SessionProperties sessionProperties = new SessionProperties();
        User user = new User();
        user.setName("John Doe");
        user.setAge(30);
        sessionProperties.setProperty("currentUser", user);
        DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, ((DisplayableListParentForm) (null)), "database", false);
        displayableListPanel.updateButtonStates();
    }
}
statement is: SessionProperties sessionProperties = new SessionProperties(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: User user = new User(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: user.setName("John Doe"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: user.setName("John Doe") target is: user method is: setName(java.lang.String)
statement is: user.setAge(30), class spoon.support.reflect.code.CtInvocationImpl
invocation is: user.setAge(30) target is: user method is: setAge(int)
statement is: sessionProperties.setProperty("currentUser", user), class spoon.support.reflect.code.CtInvocationImpl
invocation is: sessionProperties.setProperty("currentUser", user) target is: sessionProperties method is: setProperty(java.lang.String,User)
source statement: macaw.system.SessionProperties()V callee: VariableReference: Statement 0, type macaw.system.SessionPropertiesindex is: 0
Matched Method is: setProperty(Ljava/lang/String;Ljava/lang/Object;)V
statement is: DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, ((DisplayableListParentForm) (null)), "database", false), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: displayableListPanel.updateButtonStates(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: displayableListPanel.updateButtonStates() target is: displayableListPanel method is: updateButtonStates()
source statement: macaw.util.DisplayableListPanel(Lmacaw/system/SessionProperties;Lmacaw/util/DisplayableListParentForm;Ljava/lang/String;Z)V callee: VariableReference: Statement 3, type macaw.util.DisplayableListPanelindex is: 6
Matched Method is: updateButtonStates()V
TestCase is: SessionProperties sessionProperties = new SessionProperties();
User user = new User();
String string = "currentUser";
sessionProperties.setProperty(string, user);
String string = "database";
boolean _boolean = false;
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) string, (String) _boolean, false);
((DisplayableListPanel) _void).updateButtonStates();

statement is: macaw.system.SessionProperties()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class macaw.system.SessionProperties
statement code is: SessionProperties sessionProperties = new SessionProperties()
statement is: macaw.businessLayer.User()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class macaw.businessLayer.User
statement code is: User user = new User()
statement is: setProperty(Ljava/lang/String;Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: sessionProperties.setProperty("currentUser", arg1)
statement is: java.util.ArrayList()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type java.util.ArrayList<macaw.util.Displayable>
statement code is: ArrayList<Displayable> arrayList = new ArrayList<Displayable>()
statement is: add(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean add = arrayList.add((Displayable) arg0)
statement is: macaw.util.DisplayableListPanel(Lmacaw/system/SessionProperties;Lmacaw/util/DisplayableListParentForm;Ljava/lang/String;ZZ)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class macaw.util.DisplayableListPanel
statement code is: DisplayableListPanel displayableListPanel = new DisplayableListPanel(arg0, (DisplayableListParentForm) null, "retrievalService", true, false)
statement is: setDisplayableItems(Ljava/util/ArrayList;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: displayableListPanel.setDisplayableItems(arg0)
statement is: updateButtonStates()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: displayableListPanel.updateButtonStates()
test data is: SessionProperties sessionProperties = new SessionProperties();
User user = new User();
sessionProperties.setProperty("currentUser", user);
ArrayList<Displayable> arrayList = new ArrayList<Displayable>();
arrayList.add((Displayable) user);
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) null, "retrievalService", true, false);
displayableListPanel.setDisplayableItems(arrayList);
displayableListPanel.updateButtonStates();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        SessionProperties sessionProperties = new SessionProperties();
        User user = new User("John Doe", "johndoe@email.com", "12345");
        sessionProperties.setProperty("currentUser", user);
        ArrayList<Displayable> arrayList = new ArrayList<Displayable>();
        arrayList.add(((Displayable) (user)));
        DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, ((DisplayableListParentForm) (null)), "retrievalService", true, false);
        displayableListPanel.setDisplayableItems(arrayList);
        displayableListPanel.updateButtonStates();
    }
}
statement is: SessionProperties sessionProperties = new SessionProperties(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: User user = new User("John Doe", "johndoe@email.com", "12345"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: sessionProperties.setProperty("currentUser", user), class spoon.support.reflect.code.CtInvocationImpl
invocation is: sessionProperties.setProperty("currentUser", user) target is: sessionProperties method is: setProperty(java.lang.String,User)
source statement: macaw.system.SessionProperties()V callee: VariableReference: Statement 0, type macaw.system.SessionPropertiesindex is: 0
Matched Method is: setProperty(Ljava/lang/String;Ljava/lang/Object;)V
i 1 Parameters size() 1 Num of Method Parameters: 2
statement is: ArrayList<Displayable> arrayList = new ArrayList<Displayable>(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: arrayList.add(((Displayable) (user))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: arrayList.add(((Displayable) (user))) target is: arrayList method is: add(Displayable)
source statement: java.util.ArrayList()V callee: VariableReference: Statement 3, type java.util.ArrayList<macaw.util.Displayable>index is: 4
Matched Method is: add(Ljava/lang/Object;)Z
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, ((DisplayableListParentForm) (null)), "retrievalService", true, false), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: displayableListPanel.setDisplayableItems(arrayList), class spoon.support.reflect.code.CtInvocationImpl
invocation is: displayableListPanel.setDisplayableItems(arrayList) target is: displayableListPanel method is: setDisplayableItems(ArrayList)
source statement: macaw.util.DisplayableListPanel(Lmacaw/system/SessionProperties;Lmacaw/util/DisplayableListParentForm;Ljava/lang/String;ZZ)V callee: VariableReference: Statement 5, type macaw.util.DisplayableListPanelindex is: 10
Matched Method is: setDisplayableItems(Ljava/util/ArrayList;)V
statement is: displayableListPanel.updateButtonStates(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: displayableListPanel.updateButtonStates() target is: displayableListPanel method is: updateButtonStates()
source statement: macaw.util.DisplayableListPanel(Lmacaw/system/SessionProperties;Lmacaw/util/DisplayableListParentForm;Ljava/lang/String;ZZ)V callee: VariableReference: Statement 5, type macaw.util.DisplayableListPanelindex is: 10
Matched Method is: updateButtonStates()V
TestCase is: SessionProperties sessionProperties = new SessionProperties();
String string = "currentUser";
User user = null;
sessionProperties.setProperty(string, user);
ArrayList<Displayable> arrayList = new ArrayList<Displayable>();
User user = null;
((ArrayList) _void).add((Displayable) user);
String string = "retrievalService";
boolean _boolean = true;
boolean _boolean = false;
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) string, (String) _boolean, _boolean, false);
((DisplayableListPanel) user).setDisplayableItems(arrayList);
((DisplayableListPanel) user).updateButtonStates();

statement is: macaw.system.SessionProperties()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class macaw.system.SessionProperties
statement code is: SessionProperties sessionProperties = new SessionProperties()
statement is: macaw.businessLayer.User(Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class macaw.businessLayer.User
statement code is: User user = new User("log", "userInterfaceFactory")
statement is: setProperty(Ljava/lang/String;Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: sessionProperties.setProperty("currentUser", arg1)
statement is: macaw.util.DisplayableListPanel(Lmacaw/system/SessionProperties;Lmacaw/util/DisplayableListParentForm;Ljava/lang/String;Z)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class macaw.util.DisplayableListPanel
statement code is: DisplayableListPanel displayableListPanel = new DisplayableListPanel(arg0, (DisplayableListParentForm) null, "userInterfaceFactory", true)
statement is: updateButtonStates()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: displayableListPanel.updateButtonStates()
test data is: SessionProperties sessionProperties = new SessionProperties();
User user = new User("log", "userInterfaceFactory");
sessionProperties.setProperty("currentUser", user);
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) null, "userInterfaceFactory", true);
displayableListPanel.updateButtonStates();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        SessionProperties sessionProperties = new SessionProperties();
        User user = new User("loggedInUser", "userInterfaceFactory");
        sessionProperties.setProperty("currentUser", user);
        DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, ((DisplayableListParentForm) (null)), "userInterfaceFactory", true);
        displayableListPanel.updateButtonStates();
    }
}
statement is: SessionProperties sessionProperties = new SessionProperties(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: User user = new User("loggedInUser", "userInterfaceFactory"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: sessionProperties.setProperty("currentUser", user), class spoon.support.reflect.code.CtInvocationImpl
invocation is: sessionProperties.setProperty("currentUser", user) target is: sessionProperties method is: setProperty(java.lang.String,User)
source statement: macaw.system.SessionProperties()V callee: VariableReference: Statement 0, type macaw.system.SessionPropertiesindex is: 0
Matched Method is: setProperty(Ljava/lang/String;Ljava/lang/Object;)V
statement is: DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, ((DisplayableListParentForm) (null)), "userInterfaceFactory", true), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: displayableListPanel.updateButtonStates(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: displayableListPanel.updateButtonStates() target is: displayableListPanel method is: updateButtonStates()
source statement: macaw.util.DisplayableListPanel(Lmacaw/system/SessionProperties;Lmacaw/util/DisplayableListParentForm;Ljava/lang/String;Z)V callee: VariableReference: Statement 3, type macaw.util.DisplayableListPanelindex is: 8
Matched Method is: updateButtonStates()V
TestCase is: SessionProperties sessionProperties = new SessionProperties();
String string = "loggedInUser";
String string = "userInterfaceFactory";
User user = new User(string, string);
String string = "currentUser";
sessionProperties.setProperty(string, user);
String string = "userInterfaceFactory";
boolean _boolean = true;
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) string, (String) _boolean, true);
((DisplayableListPanel) user).updateButtonStates();

statement is: macaw.system.SessionProperties()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class macaw.system.SessionProperties
statement code is: SessionProperties sessionProperties = new SessionProperties()
statement is: macaw.businessLayer.User()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class macaw.businessLayer.User
statement code is: User user = new User()
statement is: setProperty(Ljava/lang/String;Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: sessionProperties.setProperty("currentUser", arg1)
statement is: macaw.util.DisplayableListPanel(Lmacaw/system/SessionProperties;Lmacaw/util/DisplayableListParentForm;Ljava/lang/String;Z)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class macaw.util.DisplayableListPanel
statement code is: DisplayableListPanel displayableListPanel = new DisplayableListPanel(arg0, (DisplayableListParentForm) null, "startupOptions", true)
statement is: java.util.ArrayList()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type java.util.ArrayList<macaw.util.Displayable>
statement code is: ArrayList<Displayable> arrayList = new ArrayList<Displayable>()
statement is: add(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean add = arrayList.add((Displayable) arg0)
statement is: setDisplayableItems(Ljava/util/ArrayList;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: displayableListPanel.setDisplayableItems(arg0)
statement is: updateButtonStates()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: displayableListPanel.updateButtonStates()
test data is: SessionProperties sessionProperties = new SessionProperties();
User user = new User();
sessionProperties.setProperty("currentUser", user);
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) null, "startupOptions", true);
ArrayList<Displayable> arrayList = new ArrayList<Displayable>();
arrayList.add((Displayable) user);
displayableListPanel.setDisplayableItems(arrayList);
displayableListPanel.updateButtonStates();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        SessionProperties sessionProperties = new SessionProperties();
        User user = new User("John", "Doe", 30, "john.doe@example.com");
        sessionProperties.setProperty("currentUser", user);
        DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, ((DisplayableListParentForm) (null)), "startupOptions", true);
        ArrayList<Displayable> arrayList = new ArrayList<Displayable>();
        arrayList.add(((Displayable) (user)));
        displayableListPanel.setDisplayableItems(arrayList);
        displayableListPanel.updateButtonStates();
    }
}
statement is: SessionProperties sessionProperties = new SessionProperties(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: User user = new User("John", "Doe", 30, "john.doe@example.com"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: sessionProperties.setProperty("currentUser", user), class spoon.support.reflect.code.CtInvocationImpl
invocation is: sessionProperties.setProperty("currentUser", user) target is: sessionProperties method is: setProperty(java.lang.String,User)
source statement: macaw.system.SessionProperties()V callee: VariableReference: Statement 0, type macaw.system.SessionPropertiesindex is: 0
Matched Method is: setProperty(Ljava/lang/String;Ljava/lang/Object;)V
i 1 Parameters size() 1 Num of Method Parameters: 2
statement is: DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, ((DisplayableListParentForm) (null)), "startupOptions", true), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ArrayList<Displayable> arrayList = new ArrayList<Displayable>(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: arrayList.add(((Displayable) (user))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: arrayList.add(((Displayable) (user))) target is: arrayList method is: add(Displayable)
source statement: java.util.ArrayList()V callee: VariableReference: Statement 4, type java.util.ArrayList<macaw.util.Displayable>index is: 7
Matched Method is: add(Ljava/lang/Object;)Z
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: displayableListPanel.setDisplayableItems(arrayList), class spoon.support.reflect.code.CtInvocationImpl
invocation is: displayableListPanel.setDisplayableItems(arrayList) target is: displayableListPanel method is: setDisplayableItems(ArrayList)
source statement: macaw.util.DisplayableListPanel(Lmacaw/system/SessionProperties;Lmacaw/util/DisplayableListParentForm;Ljava/lang/String;Z)V callee: VariableReference: Statement 3, type macaw.util.DisplayableListPanelindex is: 6
Matched Method is: setDisplayableItems(Ljava/util/ArrayList;)V
statement is: displayableListPanel.updateButtonStates(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: displayableListPanel.updateButtonStates() target is: displayableListPanel method is: updateButtonStates()
source statement: macaw.util.DisplayableListPanel(Lmacaw/system/SessionProperties;Lmacaw/util/DisplayableListParentForm;Ljava/lang/String;Z)V callee: VariableReference: Statement 3, type macaw.util.DisplayableListPanelindex is: 6
Matched Method is: updateButtonStates()V
TestCase is: SessionProperties sessionProperties = new SessionProperties();
String string = "currentUser";
User user = null;
sessionProperties.setProperty(string, user);
String string = "startupOptions";
boolean _boolean = true;
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) string, (String) _boolean, true);
ArrayList<Displayable> arrayList = new ArrayList<Displayable>();
User user = null;
((ArrayList) string).add((Displayable) user);
((DisplayableListPanel) _void).setDisplayableItems(arrayList);
((DisplayableListPanel) _void).updateButtonStates();

statement is: macaw.system.SessionProperties()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class macaw.system.SessionProperties
statement code is: SessionProperties sessionProperties = new SessionProperties()
statement is: macaw.businessLayer.User()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class macaw.businessLayer.User
statement code is: User user = new User()
statement is: setProperty(Ljava/lang/String;Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: sessionProperties.setProperty("currentUser", arg1)
statement is: macaw.util.DisplayableListPanel(Lmacaw/system/SessionProperties;Lmacaw/util/DisplayableListParentForm;Ljava/lang/String;ZZ)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class macaw.util.DisplayableListPanel
statement code is: DisplayableListPanel displayableListPanel = new DisplayableListPanel(arg0, (DisplayableListParentForm) null, "log", false, false)
statement is: java.util.ArrayList()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type java.util.ArrayList<macaw.util.Displayable>
statement code is: ArrayList<Displayable> arrayList = new ArrayList<Displayable>()
statement is: add(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean add = arrayList.add((Displayable) arg0)
statement is: setDisplayableItems(Ljava/util/ArrayList;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: displayableListPanel.setDisplayableItems(arg0)
statement is: updateButtonStates()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: displayableListPanel.updateButtonStates()
test data is: SessionProperties sessionProperties = new SessionProperties();
User user = new User();
sessionProperties.setProperty("currentUser", user);
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) null, "log", false, false);
ArrayList<Displayable> arrayList = new ArrayList<Displayable>();
arrayList.add((Displayable) user);
displayableListPanel.setDisplayableItems(arrayList);
displayableListPanel.updateButtonStates();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        SessionProperties sessionProperties = new SessionProperties();
        User user = new User("John", "Smith", 25);
        sessionProperties.setProperty("currentUser", user);
        DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, ((DisplayableListParentForm) (null)), "log", false, false);
        ArrayList<Displayable> arrayList = new ArrayList<Displayable>();
        arrayList.add(((Displayable) (user)));
        displayableListPanel.setDisplayableItems(arrayList);
        displayableListPanel.updateButtonStates();
    }
}
statement is: SessionProperties sessionProperties = new SessionProperties(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: User user = new User("John", "Smith", 25), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: sessionProperties.setProperty("currentUser", user), class spoon.support.reflect.code.CtInvocationImpl
invocation is: sessionProperties.setProperty("currentUser", user) target is: sessionProperties method is: setProperty(java.lang.String,User)
source statement: macaw.system.SessionProperties()V callee: VariableReference: Statement 0, type macaw.system.SessionPropertiesindex is: 0
Matched Method is: setProperty(Ljava/lang/String;Ljava/lang/Object;)V
i 1 Parameters size() 1 Num of Method Parameters: 2
statement is: DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, ((DisplayableListParentForm) (null)), "log", false, false), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ArrayList<Displayable> arrayList = new ArrayList<Displayable>(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: arrayList.add(((Displayable) (user))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: arrayList.add(((Displayable) (user))) target is: arrayList method is: add(Displayable)
source statement: java.util.ArrayList()V callee: VariableReference: Statement 4, type java.util.ArrayList<macaw.util.Displayable>index is: 8
Matched Method is: add(Ljava/lang/Object;)Z
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: displayableListPanel.setDisplayableItems(arrayList), class spoon.support.reflect.code.CtInvocationImpl
invocation is: displayableListPanel.setDisplayableItems(arrayList) target is: displayableListPanel method is: setDisplayableItems(ArrayList)
source statement: macaw.util.DisplayableListPanel(Lmacaw/system/SessionProperties;Lmacaw/util/DisplayableListParentForm;Ljava/lang/String;ZZ)V callee: VariableReference: Statement 3, type macaw.util.DisplayableListPanelindex is: 7
Matched Method is: setDisplayableItems(Ljava/util/ArrayList;)V
statement is: displayableListPanel.updateButtonStates(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: displayableListPanel.updateButtonStates() target is: displayableListPanel method is: updateButtonStates()
source statement: macaw.util.DisplayableListPanel(Lmacaw/system/SessionProperties;Lmacaw/util/DisplayableListParentForm;Ljava/lang/String;ZZ)V callee: VariableReference: Statement 3, type macaw.util.DisplayableListPanelindex is: 7
Matched Method is: updateButtonStates()V
TestCase is: SessionProperties sessionProperties = new SessionProperties();
String string = "currentUser";
User user = null;
sessionProperties.setProperty(string, user);
String string = "log";
boolean _boolean = false;
boolean _boolean = false;
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) string, (String) _boolean, _boolean, false);
ArrayList<Displayable> arrayList = new ArrayList<Displayable>();
User user = null;
((ArrayList) string).add((Displayable) user);
((DisplayableListPanel) _void).setDisplayableItems(arrayList);
((DisplayableListPanel) _void).updateButtonStates();

statement is: macaw.system.SessionProperties()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class macaw.system.SessionProperties
statement code is: SessionProperties sessionProperties = new SessionProperties()
statement is: macaw.businessLayer.User()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class macaw.businessLayer.User
statement code is: User user = new User()
statement is: setProperty(Ljava/lang/String;Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: sessionProperties.setProperty("currentUser", arg1)
statement is: macaw.util.DisplayableListPanel(Lmacaw/system/SessionProperties;Lmacaw/util/DisplayableListParentForm;Ljava/lang/String;Z)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class macaw.util.DisplayableListPanel
statement code is: DisplayableListPanel displayableListPanel = new DisplayableListPanel(arg0, (DisplayableListParentForm) null, "startupOptions", false)
statement is: java.util.ArrayList()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type java.util.ArrayList<macaw.util.Displayable>
statement code is: ArrayList<Displayable> arrayList = new ArrayList<Displayable>()
statement is: add(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean add = arrayList.add((Displayable) arg0)
statement is: setDisplayableItems(Ljava/util/ArrayList;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: displayableListPanel.setDisplayableItems(arg0)
statement is: getAllListItems()Ljava/util/ArrayList; type is: class org.evosuite.testcase.statements.MethodStatement return type java.util.ArrayList<macaw.util.Displayable>
statement code is: ArrayList<Displayable> allListItems = displayableListPanel.getAllListItems()
test data is: SessionProperties sessionProperties = new SessionProperties();
User user = new User();
sessionProperties.setProperty("currentUser", user);
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) null, "startupOptions", false);
ArrayList<Displayable> arrayList = new ArrayList<Displayable>();
arrayList.add((Displayable) user);
displayableListPanel.setDisplayableItems(arrayList);
displayableListPanel.getAllListItems();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        SessionProperties sessionProperties = new SessionProperties();
        User user = new User("John Doe", 30, "johndoe@email.com");
        sessionProperties.setProperty("currentUser", user);
        DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, ((DisplayableListParentForm) (null)), "startupOptions", false);
        ArrayList<Displayable> arrayList = new ArrayList<Displayable>();
        arrayList.add(((Displayable) (user)));
        displayableListPanel.setDisplayableItems(arrayList);
        displayableListPanel.getAllListItems();
    }
}
statement is: SessionProperties sessionProperties = new SessionProperties(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: User user = new User("John Doe", 30, "johndoe@email.com"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: sessionProperties.setProperty("currentUser", user), class spoon.support.reflect.code.CtInvocationImpl
invocation is: sessionProperties.setProperty("currentUser", user) target is: sessionProperties method is: setProperty(java.lang.String,User)
source statement: macaw.system.SessionProperties()V callee: VariableReference: Statement 0, type macaw.system.SessionPropertiesindex is: 0
Matched Method is: setProperty(Ljava/lang/String;Ljava/lang/Object;)V
i 1 Parameters size() 1 Num of Method Parameters: 2
statement is: DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, ((DisplayableListParentForm) (null)), "startupOptions", false), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ArrayList<Displayable> arrayList = new ArrayList<Displayable>(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: arrayList.add(((Displayable) (user))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: arrayList.add(((Displayable) (user))) target is: arrayList method is: add(Displayable)
source statement: java.util.ArrayList()V callee: VariableReference: Statement 4, type java.util.ArrayList<macaw.util.Displayable>index is: 7
Matched Method is: add(Ljava/lang/Object;)Z
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: displayableListPanel.setDisplayableItems(arrayList), class spoon.support.reflect.code.CtInvocationImpl
invocation is: displayableListPanel.setDisplayableItems(arrayList) target is: displayableListPanel method is: setDisplayableItems(ArrayList)
source statement: macaw.util.DisplayableListPanel(Lmacaw/system/SessionProperties;Lmacaw/util/DisplayableListParentForm;Ljava/lang/String;Z)V callee: VariableReference: Statement 3, type macaw.util.DisplayableListPanelindex is: 6
Matched Method is: setDisplayableItems(Ljava/util/ArrayList;)V
statement is: displayableListPanel.getAllListItems(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: displayableListPanel.getAllListItems() target is: displayableListPanel method is: getAllListItems()
source statement: macaw.util.DisplayableListPanel(Lmacaw/system/SessionProperties;Lmacaw/util/DisplayableListParentForm;Ljava/lang/String;Z)V callee: VariableReference: Statement 3, type macaw.util.DisplayableListPanelindex is: 6
Matched Method is: getAllListItems()Ljava/util/ArrayList;
TestCase is: SessionProperties sessionProperties = new SessionProperties();
String string = "currentUser";
User user = null;
sessionProperties.setProperty(string, user);
String string = "startupOptions";
boolean _boolean = false;
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) string, (String) _boolean, false);
ArrayList<Displayable> arrayList = new ArrayList<Displayable>();
User user = null;
((ArrayList) string).add((Displayable) user);
((DisplayableListPanel) _void).setDisplayableItems(arrayList);
((DisplayableListPanel) _void).getAllListItems();

* test suite isTestSuite: 46
Test 0: 
SessionProperties sessionProperties = new SessionProperties();
User user = new User();
sessionProperties.setProperty("currentUser", user);
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) null, "log", true, true);
displayableListPanel.getPanel();
Test 1: 
SessionProperties sessionProperties = new SessionProperties();
User user = new User();
sessionProperties.setProperty("currentUser", user);
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) null, "database", true, true);
displayableListPanel.setListOwnerName("log");
Test 2: 
SessionProperties sessionProperties = new SessionProperties();
User user = new User();
sessionProperties.setProperty("currentUser", user);
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) null, "database", true, true);
displayableListPanel.setDisplayableListItemDeleter((DisplayableListItemDeleter) null);
Test 3: 
SessionProperties sessionProperties = new SessionProperties();
User user = new User();
sessionProperties.setProperty("currentUser", user);
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) null, "log", true, true);
displayableListPanel.setNewRecord(true);
displayableListPanel.updateButtonStates();
Test 4: 
SessionProperties sessionProperties = new SessionProperties();
User user = new User();
sessionProperties.setProperty("currentUser", user);
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) null, "startupOptions", true, true);
displayableListPanel.setDisplayableListItemAdder((DisplayableListItemAdder) null);
Test 5: 
SessionProperties sessionProperties = new SessionProperties();
User user = new User();
sessionProperties.setProperty("currentUser", user);
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) null, "retrievalService", true);
displayableListPanel.save();
Test 6: 
SessionProperties sessionProperties = new SessionProperties();
User user = new User();
sessionProperties.setProperty("currentUser", user);
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) null, "startupOptions", true);
displayableListPanel.setDisplayableListItemEditor((DisplayableListItemEditor) null);
Test 7: 
SessionProperties sessionProperties = new SessionProperties();
User user = new User();
sessionProperties.setProperty("currentUser", user);
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) null, "log", true, true);
displayableListPanel.getAllListItems();
Test 8: 
SessionProperties sessionProperties = new SessionProperties();
User user = new User("database", "securityService");
sessionProperties.setProperty("currentUser", user);
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) null, "securityService", false);
displayableListPanel.setDisplayableListItemViewer((DisplayableListItemViewer) null);
Test 9: 
SessionProperties sessionProperties = new SessionProperties();
User user = new User("log", "startupOptions");
sessionProperties.setProperty("currentUser", user);
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) null, "currentUser", true, true);
displayableListPanel.setDisplayableListItemSelector((DisplayableListItemSelector) null);
Test 10: 
SessionProperties sessionProperties = new SessionProperties();
User user = new User();
sessionProperties.setProperty("currentUser", user);
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) null, "database", false, false);
displayableListPanel.getPanel();
Test 11: 
SessionProperties sessionProperties = new SessionProperties();
User user = new User();
sessionProperties.setProperty("currentUser", user);
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) null, "retrievalService", false, false);
// Undeclared exception!
try { 
  displayableListPanel.addListItem();
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 12: 
SessionProperties sessionProperties = new SessionProperties();
User user = new User();
sessionProperties.setProperty("currentUser", user);
ArrayList<Displayable> arrayList = new ArrayList<Displayable>();
arrayList.add((Displayable) user);
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) null, "database", true, true);
displayableListPanel.setDisplayableItems(arrayList);
// Undeclared exception!
try { 
  displayableListPanel.deleteSelectedListItems();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("macaw.util.DisplayableListPanel", e);
}

Test 13: 
SessionProperties sessionProperties = new SessionProperties();
User user = new User();
sessionProperties.setProperty("currentUser", user);
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) null, "database", true, true);
// Undeclared exception!
try { 
  displayableListPanel.deleteSelectedListItems();
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 14: 
SessionProperties sessionProperties = new SessionProperties();
User user = new User();
sessionProperties.setProperty("currentUser", user);
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) null, "", true, false);
displayableListPanel.updateButtonStates();
Test 15: 
SessionProperties sessionProperties = new SessionProperties();
User user = new User();
sessionProperties.setProperty("currentUser", user);
ArrayList<Displayable> arrayList = new ArrayList<Displayable>();
arrayList.add((Displayable) user);
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) null, "retrievalService", false, false);
displayableListPanel.setNewRecord(true);
displayableListPanel.setDisplayableItems(arrayList);
displayableListPanel.updateButtonStates();
Test 16: 
SessionProperties sessionProperties = new SessionProperties();
User user = new User();
sessionProperties.setProperty("currentUser", user);
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) null, "retrievalService", true);
ActionEvent actionEvent = new ActionEvent(sessionProperties, 5408, "currentUser");
displayableListPanel.actionPerformed(actionEvent);
Test 17: 
SessionProperties sessionProperties = new SessionProperties();
User user = new User();
sessionProperties.setProperty("currentUser", user);
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) null, "database", false);
displayableListPanel.updateButtonStates();
Test 18: 
SessionProperties sessionProperties = new SessionProperties();
User user = new User();
sessionProperties.setProperty("currentUser", user);
ArrayList<Displayable> arrayList = new ArrayList<Displayable>();
arrayList.add((Displayable) user);
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) null, "retrievalService", true, false);
displayableListPanel.setDisplayableItems(arrayList);
displayableListPanel.updateButtonStates();
Test 19: 
SessionProperties sessionProperties = new SessionProperties();
User user = new User("log", "userInterfaceFactory");
sessionProperties.setProperty("currentUser", user);
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) null, "userInterfaceFactory", true);
displayableListPanel.updateButtonStates();
Test 20: 
SessionProperties sessionProperties = new SessionProperties();
User user = new User();
sessionProperties.setProperty("currentUser", user);
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) null, "startupOptions", true);
ArrayList<Displayable> arrayList = new ArrayList<Displayable>();
arrayList.add((Displayable) user);
displayableListPanel.setDisplayableItems(arrayList);
displayableListPanel.updateButtonStates();
Test 21: 
SessionProperties sessionProperties = new SessionProperties();
User user = new User();
sessionProperties.setProperty("currentUser", user);
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) null, "log", false, false);
ArrayList<Displayable> arrayList = new ArrayList<Displayable>();
arrayList.add((Displayable) user);
displayableListPanel.setDisplayableItems(arrayList);
displayableListPanel.updateButtonStates();
Test 22: 
SessionProperties sessionProperties = new SessionProperties();
User user = new User();
sessionProperties.setProperty("currentUser", user);
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) null, "startupOptions", false);
ArrayList<Displayable> arrayList = new ArrayList<Displayable>();
arrayList.add((Displayable) user);
displayableListPanel.setDisplayableItems(arrayList);
displayableListPanel.getAllListItems();
Test 23: 
SessionProperties sessionProperties = new SessionProperties();
sessionProperties.setProperty("currentUser", (Object) null);
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) "log", (String) true, true, true);
((DisplayableListPanel) _void).getPanel();

Test 24: 
SessionProperties sessionProperties = new SessionProperties();
sessionProperties.setProperty("currentUser", (Object) null);
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) "database", (String) true, true, true);
String string = "log";
((DisplayableListPanel) _void).setListOwnerName(string);

Test 25: 
SessionProperties sessionProperties = new SessionProperties();
User user = new User();
sessionProperties.setProperty("currentUser", user);
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) "database", (String) true, true, true);
DisplayableListItemDeleter displayableListItemDeleter = null;
((DisplayableListPanel) _void).setDisplayableListItemDeleter(displayableListItemDeleter);

Test 26: 
SessionProperties sessionProperties = new SessionProperties();
User user = new User();
sessionProperties.setProperty("currentUser", user);
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) "log", (String) true, true, true);
boolean _boolean = true;
((DisplayableListPanel) _void).setNewRecord(_boolean);
((DisplayableListPanel) _void).updateButtonStates();

Test 27: 
SessionProperties sessionProperties = new SessionProperties();
sessionProperties.setProperty("currentUser", (Object) null);
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) "startupOptions", (String) true, true, true);
DisplayableListItemAdder displayableListItemAdder = null;
((DisplayableListPanel) _void).setDisplayableListItemAdder(displayableListItemAdder);

Test 28: 
SessionProperties sessionProperties = new SessionProperties();
sessionProperties.setProperty("currentUser", (Object) null);
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) "retrievalService", (String) true, true);
((DisplayableListPanel) _void).save();

Test 29: 
SessionProperties sessionProperties = new SessionProperties();
sessionProperties.setProperty("currentUser", (Object) null);
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) "startupOptions", (String) true, true);
DisplayableListItemEditor displayableListItemEditor = null;
((DisplayableListPanel) _void).setDisplayableListItemEditor(displayableListItemEditor);

Test 30: 
SessionProperties sessionProperties = new SessionProperties();
sessionProperties.setProperty("currentUser", (Object) null);
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) "log", (String) true, true, true);
((DisplayableListPanel) _void).getAllListItems();

Test 31: 
SessionProperties sessionProperties = new SessionProperties();
User user = new User("database", "securityService");
sessionProperties.setProperty("currentUser", user);
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) "securityService", (String) false, false);
DisplayableListItemViewer displayableListItemViewer = null;
((DisplayableListPanel) user).setDisplayableListItemViewer(displayableListItemViewer);

Test 32: 
SessionProperties sessionProperties = new SessionProperties();
User user = new User("log", "startupOptions");
sessionProperties.setProperty("currentUser", user);
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) "currentUser", (String) true, true, true);
DisplayableListItemSelector displayableListItemSelector = null;
((DisplayableListPanel) user).setDisplayableListItemSelector(displayableListItemSelector);

Test 33: 
SessionProperties sessionProperties = new SessionProperties();
User user = new User();
sessionProperties.setProperty("currentUser", user);
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) "database", (String) false, false, false);
((DisplayableListPanel) _void).getPanel();

Test 34: 
SessionProperties sessionProperties = new SessionProperties();
sessionProperties.setProperty("currentUser", (Object) null);
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) "retrievalService", (String) false, false, false);
((DisplayableListPanel) _void).addListItem();

Test 35: 
SessionProperties sessionProperties = new SessionProperties();
ArrayList<Displayable> arrayList = new ArrayList<Displayable>();
User user = null;
((ArrayList) user).add((Displayable) user);
User user = null;
((ArrayList) user).add((Displayable) user);
String string = "database";
boolean _boolean = true;
boolean _boolean = true;
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) string, (String) _boolean, _boolean, true);
((DisplayableListPanel) user).setDisplayableItems(arrayList);
((DisplayableListPanel) user).deleteSelectedListItems();

Test 36: 
SessionProperties sessionProperties = new SessionProperties();
sessionProperties.setProperty("currentUser", (Object) null);
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) "database", (String) true, true, true);
((DisplayableListPanel) _void).deleteSelectedListItems();

Test 37: 
SessionProperties sessionProperties = new SessionProperties();
sessionProperties.setProperty("currentUser", (Object) null);
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) "", (String) true, false, false);
((DisplayableListPanel) _void).updateButtonStates();

Test 38: 
SessionProperties sessionProperties = new SessionProperties();
sessionProperties.setProperty("currentUser", (Object) null);
ArrayList<Displayable> arrayList = new ArrayList<Displayable>();
User user = null;
((ArrayList)null).add((Displayable) null);
String string = "retrievalService";
boolean _boolean = false;
boolean _boolean = false;
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) string, (String) _boolean, _boolean, false);
boolean _boolean = true;
((DisplayableListPanel) user).setNewRecord(_boolean);
((DisplayableListPanel) user).setDisplayableItems(arrayList);
((DisplayableListPanel) user).updateButtonStates();

Test 39: 
SessionProperties sessionProperties = new SessionProperties();
sessionProperties.setProperty("currentUser", (Object) null);
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) "retrievalService", (String) true, true);
int _int = 5408;
String string = "currentUser";
ActionEvent actionEvent = new ActionEvent(sessionProperties, _int, string);
((DisplayableListPanel) _void).actionPerformed(actionEvent);

Test 40: 
SessionProperties sessionProperties = new SessionProperties();
User user = new User();
sessionProperties.setProperty("currentUser", user);
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) "database", (String) false, false);
((DisplayableListPanel) _void).updateButtonStates();

Test 41: 
SessionProperties sessionProperties = new SessionProperties();
sessionProperties.setProperty("currentUser", (Object) null);
ArrayList<Displayable> arrayList = new ArrayList<Displayable>();
User user = null;
((ArrayList)null).add((Displayable) null);
String string = "retrievalService";
boolean _boolean = true;
boolean _boolean = false;
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) string, (String) _boolean, _boolean, false);
((DisplayableListPanel) user).setDisplayableItems(arrayList);
((DisplayableListPanel) user).updateButtonStates();

Test 42: 
SessionProperties sessionProperties = new SessionProperties();
User user = new User("loggedInUser", "userInterfaceFactory");
sessionProperties.setProperty("currentUser", user);
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) "userInterfaceFactory", (String) true, true);
((DisplayableListPanel) user).updateButtonStates();

Test 43: 
SessionProperties sessionProperties = new SessionProperties();
sessionProperties.setProperty("currentUser", (Object) null);
String string = "startupOptions";
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) "startupOptions", (String) true, true);
ArrayList<Displayable> arrayList = new ArrayList<Displayable>();
User user = null;
((ArrayList) string).add((Displayable) user);
((DisplayableListPanel) _void).setDisplayableItems(arrayList);
((DisplayableListPanel) _void).updateButtonStates();

Test 44: 
SessionProperties sessionProperties = new SessionProperties();
sessionProperties.setProperty("currentUser", (Object) null);
String string = "log";
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) "log", (String) false, false, false);
ArrayList<Displayable> arrayList = new ArrayList<Displayable>();
User user = null;
((ArrayList) string).add((Displayable) user);
((DisplayableListPanel) _void).setDisplayableItems(arrayList);
((DisplayableListPanel) _void).updateButtonStates();

Test 45: 
SessionProperties sessionProperties = new SessionProperties();
sessionProperties.setProperty("currentUser", (Object) null);
String string = "startupOptions";
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) "startupOptions", (String) false, false);
ArrayList<Displayable> arrayList = new ArrayList<Displayable>();
User user = null;
((ArrayList) string).add((Displayable) user);
((DisplayableListPanel) _void).setDisplayableItems(arrayList);
((DisplayableListPanel) _void).getAllListItems();


* Generated after the refinement and before minimization 46 tests with total length 285
* test suite isTestSuite: 46
Test 0: 
SessionProperties sessionProperties = new SessionProperties();
User user = new User();
sessionProperties.setProperty("currentUser", user);
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) null, "log", true, true);
displayableListPanel.getPanel();
Test 1: 
SessionProperties sessionProperties = new SessionProperties();
User user = new User();
sessionProperties.setProperty("currentUser", user);
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) null, "database", true, true);
displayableListPanel.setListOwnerName("log");
Test 2: 
SessionProperties sessionProperties = new SessionProperties();
User user = new User();
sessionProperties.setProperty("currentUser", user);
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) null, "database", true, true);
displayableListPanel.setDisplayableListItemDeleter((DisplayableListItemDeleter) null);
Test 3: 
SessionProperties sessionProperties = new SessionProperties();
User user = new User();
sessionProperties.setProperty("currentUser", user);
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) null, "log", true, true);
displayableListPanel.setNewRecord(true);
displayableListPanel.updateButtonStates();
Test 4: 
SessionProperties sessionProperties = new SessionProperties();
User user = new User();
sessionProperties.setProperty("currentUser", user);
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) null, "startupOptions", true, true);
displayableListPanel.setDisplayableListItemAdder((DisplayableListItemAdder) null);
Test 5: 
SessionProperties sessionProperties = new SessionProperties();
User user = new User();
sessionProperties.setProperty("currentUser", user);
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) null, "retrievalService", true);
displayableListPanel.save();
Test 6: 
SessionProperties sessionProperties = new SessionProperties();
User user = new User();
sessionProperties.setProperty("currentUser", user);
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) null, "startupOptions", true);
displayableListPanel.setDisplayableListItemEditor((DisplayableListItemEditor) null);
Test 7: 
SessionProperties sessionProperties = new SessionProperties();
User user = new User();
sessionProperties.setProperty("currentUser", user);
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) null, "log", true, true);
displayableListPanel.getAllListItems();
Test 8: 
SessionProperties sessionProperties = new SessionProperties();
User user = new User("database", "securityService");
sessionProperties.setProperty("currentUser", user);
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) null, "securityService", false);
displayableListPanel.setDisplayableListItemViewer((DisplayableListItemViewer) null);
Test 9: 
SessionProperties sessionProperties = new SessionProperties();
User user = new User("log", "startupOptions");
sessionProperties.setProperty("currentUser", user);
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) null, "currentUser", true, true);
displayableListPanel.setDisplayableListItemSelector((DisplayableListItemSelector) null);
Test 10: 
SessionProperties sessionProperties = new SessionProperties();
User user = new User();
sessionProperties.setProperty("currentUser", user);
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) null, "database", false, false);
displayableListPanel.getPanel();
Test 11: 
SessionProperties sessionProperties = new SessionProperties();
User user = new User();
sessionProperties.setProperty("currentUser", user);
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) null, "retrievalService", false, false);
// Undeclared exception!
try { 
  displayableListPanel.addListItem();
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 12: 
SessionProperties sessionProperties = new SessionProperties();
User user = new User();
sessionProperties.setProperty("currentUser", user);
ArrayList<Displayable> arrayList = new ArrayList<Displayable>();
arrayList.add((Displayable) user);
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) null, "database", true, true);
displayableListPanel.setDisplayableItems(arrayList);
// Undeclared exception!
try { 
  displayableListPanel.deleteSelectedListItems();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("macaw.util.DisplayableListPanel", e);
}

Test 13: 
SessionProperties sessionProperties = new SessionProperties();
User user = new User();
sessionProperties.setProperty("currentUser", user);
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) null, "database", true, true);
// Undeclared exception!
try { 
  displayableListPanel.deleteSelectedListItems();
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 14: 
SessionProperties sessionProperties = new SessionProperties();
User user = new User();
sessionProperties.setProperty("currentUser", user);
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) null, "", true, false);
displayableListPanel.updateButtonStates();
Test 15: 
SessionProperties sessionProperties = new SessionProperties();
User user = new User();
sessionProperties.setProperty("currentUser", user);
ArrayList<Displayable> arrayList = new ArrayList<Displayable>();
arrayList.add((Displayable) user);
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) null, "retrievalService", false, false);
displayableListPanel.setNewRecord(true);
displayableListPanel.setDisplayableItems(arrayList);
displayableListPanel.updateButtonStates();
Test 16: 
SessionProperties sessionProperties = new SessionProperties();
User user = new User();
sessionProperties.setProperty("currentUser", user);
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) null, "retrievalService", true);
ActionEvent actionEvent = new ActionEvent(sessionProperties, 5408, "currentUser");
displayableListPanel.actionPerformed(actionEvent);
Test 17: 
SessionProperties sessionProperties = new SessionProperties();
User user = new User();
sessionProperties.setProperty("currentUser", user);
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) null, "database", false);
displayableListPanel.updateButtonStates();
Test 18: 
SessionProperties sessionProperties = new SessionProperties();
User user = new User();
sessionProperties.setProperty("currentUser", user);
ArrayList<Displayable> arrayList = new ArrayList<Displayable>();
arrayList.add((Displayable) user);
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) null, "retrievalService", true, false);
displayableListPanel.setDisplayableItems(arrayList);
displayableListPanel.updateButtonStates();
Test 19: 
SessionProperties sessionProperties = new SessionProperties();
User user = new User("log", "userInterfaceFactory");
sessionProperties.setProperty("currentUser", user);
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) null, "userInterfaceFactory", true);
displayableListPanel.updateButtonStates();
Test 20: 
SessionProperties sessionProperties = new SessionProperties();
User user = new User();
sessionProperties.setProperty("currentUser", user);
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) null, "startupOptions", true);
ArrayList<Displayable> arrayList = new ArrayList<Displayable>();
arrayList.add((Displayable) user);
displayableListPanel.setDisplayableItems(arrayList);
displayableListPanel.updateButtonStates();
Test 21: 
SessionProperties sessionProperties = new SessionProperties();
User user = new User();
sessionProperties.setProperty("currentUser", user);
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) null, "log", false, false);
ArrayList<Displayable> arrayList = new ArrayList<Displayable>();
arrayList.add((Displayable) user);
displayableListPanel.setDisplayableItems(arrayList);
displayableListPanel.updateButtonStates();
Test 22: 
SessionProperties sessionProperties = new SessionProperties();
User user = new User();
sessionProperties.setProperty("currentUser", user);
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) null, "startupOptions", false);
ArrayList<Displayable> arrayList = new ArrayList<Displayable>();
arrayList.add((Displayable) user);
displayableListPanel.setDisplayableItems(arrayList);
displayableListPanel.getAllListItems();
Test 23: 
SessionProperties sessionProperties = new SessionProperties();
sessionProperties.setProperty("currentUser", (Object) null);
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) "log", (String) true, true, true);
((DisplayableListPanel) _void).getPanel();

Test 24: 
SessionProperties sessionProperties = new SessionProperties();
sessionProperties.setProperty("currentUser", (Object) null);
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) "database", (String) true, true, true);
String string = "log";
((DisplayableListPanel) _void).setListOwnerName(string);

Test 25: 
SessionProperties sessionProperties = new SessionProperties();
User user = new User();
sessionProperties.setProperty("currentUser", user);
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) "database", (String) true, true, true);
DisplayableListItemDeleter displayableListItemDeleter = null;
((DisplayableListPanel) _void).setDisplayableListItemDeleter(displayableListItemDeleter);

Test 26: 
SessionProperties sessionProperties = new SessionProperties();
User user = new User();
sessionProperties.setProperty("currentUser", user);
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) "log", (String) true, true, true);
boolean _boolean = true;
((DisplayableListPanel) _void).setNewRecord(_boolean);
((DisplayableListPanel) _void).updateButtonStates();

Test 27: 
SessionProperties sessionProperties = new SessionProperties();
sessionProperties.setProperty("currentUser", (Object) null);
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) "startupOptions", (String) true, true, true);
DisplayableListItemAdder displayableListItemAdder = null;
((DisplayableListPanel) _void).setDisplayableListItemAdder(displayableListItemAdder);

Test 28: 
SessionProperties sessionProperties = new SessionProperties();
sessionProperties.setProperty("currentUser", (Object) null);
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) "retrievalService", (String) true, true);
((DisplayableListPanel) _void).save();

Test 29: 
SessionProperties sessionProperties = new SessionProperties();
sessionProperties.setProperty("currentUser", (Object) null);
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) "startupOptions", (String) true, true);
DisplayableListItemEditor displayableListItemEditor = null;
((DisplayableListPanel) _void).setDisplayableListItemEditor(displayableListItemEditor);

Test 30: 
SessionProperties sessionProperties = new SessionProperties();
sessionProperties.setProperty("currentUser", (Object) null);
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) "log", (String) true, true, true);
((DisplayableListPanel) _void).getAllListItems();

Test 31: 
SessionProperties sessionProperties = new SessionProperties();
User user = new User("database", "securityService");
sessionProperties.setProperty("currentUser", user);
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) "securityService", (String) false, false);
DisplayableListItemViewer displayableListItemViewer = null;
((DisplayableListPanel) user).setDisplayableListItemViewer(displayableListItemViewer);

Test 32: 
SessionProperties sessionProperties = new SessionProperties();
User user = new User("log", "startupOptions");
sessionProperties.setProperty("currentUser", user);
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) "currentUser", (String) true, true, true);
DisplayableListItemSelector displayableListItemSelector = null;
((DisplayableListPanel) user).setDisplayableListItemSelector(displayableListItemSelector);

Test 33: 
SessionProperties sessionProperties = new SessionProperties();
User user = new User();
sessionProperties.setProperty("currentUser", user);
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) "database", (String) false, false, false);
((DisplayableListPanel) _void).getPanel();

Test 34: 
SessionProperties sessionProperties = new SessionProperties();
sessionProperties.setProperty("currentUser", (Object) null);
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) "retrievalService", (String) false, false, false);
((DisplayableListPanel) _void).addListItem();

Test 35: 
SessionProperties sessionProperties = new SessionProperties();
ArrayList<Displayable> arrayList = new ArrayList<Displayable>();
User user = null;
((ArrayList) user).add((Displayable) user);
User user = null;
((ArrayList) user).add((Displayable) user);
String string = "database";
boolean _boolean = true;
boolean _boolean = true;
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) string, (String) _boolean, _boolean, true);
((DisplayableListPanel) user).setDisplayableItems(arrayList);
((DisplayableListPanel) user).deleteSelectedListItems();

Test 36: 
SessionProperties sessionProperties = new SessionProperties();
sessionProperties.setProperty("currentUser", (Object) null);
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) "database", (String) true, true, true);
((DisplayableListPanel) _void).deleteSelectedListItems();

Test 37: 
SessionProperties sessionProperties = new SessionProperties();
sessionProperties.setProperty("currentUser", (Object) null);
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) "", (String) true, false, false);
((DisplayableListPanel) _void).updateButtonStates();

Test 38: 
SessionProperties sessionProperties = new SessionProperties();
sessionProperties.setProperty("currentUser", (Object) null);
ArrayList<Displayable> arrayList = new ArrayList<Displayable>();
User user = null;
((ArrayList)null).add((Displayable) null);
String string = "retrievalService";
boolean _boolean = false;
boolean _boolean = false;
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) string, (String) _boolean, _boolean, false);
boolean _boolean = true;
((DisplayableListPanel) user).setNewRecord(_boolean);
((DisplayableListPanel) user).setDisplayableItems(arrayList);
((DisplayableListPanel) user).updateButtonStates();

Test 39: 
SessionProperties sessionProperties = new SessionProperties();
sessionProperties.setProperty("currentUser", (Object) null);
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) "retrievalService", (String) true, true);
int _int = 5408;
String string = "currentUser";
ActionEvent actionEvent = new ActionEvent(sessionProperties, _int, string);
((DisplayableListPanel) _void).actionPerformed(actionEvent);

Test 40: 
SessionProperties sessionProperties = new SessionProperties();
User user = new User();
sessionProperties.setProperty("currentUser", user);
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) "database", (String) false, false);
((DisplayableListPanel) _void).updateButtonStates();

Test 41: 
SessionProperties sessionProperties = new SessionProperties();
sessionProperties.setProperty("currentUser", (Object) null);
ArrayList<Displayable> arrayList = new ArrayList<Displayable>();
User user = null;
((ArrayList)null).add((Displayable) null);
String string = "retrievalService";
boolean _boolean = true;
boolean _boolean = false;
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) string, (String) _boolean, _boolean, false);
((DisplayableListPanel) user).setDisplayableItems(arrayList);
((DisplayableListPanel) user).updateButtonStates();

Test 42: 
SessionProperties sessionProperties = new SessionProperties();
User user = new User("loggedInUser", "userInterfaceFactory");
sessionProperties.setProperty("currentUser", user);
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) "userInterfaceFactory", (String) true, true);
((DisplayableListPanel) user).updateButtonStates();

Test 43: 
SessionProperties sessionProperties = new SessionProperties();
sessionProperties.setProperty("currentUser", (Object) null);
String string = "startupOptions";
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) "startupOptions", (String) true, true);
ArrayList<Displayable> arrayList = new ArrayList<Displayable>();
User user = null;
((ArrayList) string).add((Displayable) user);
((DisplayableListPanel) _void).setDisplayableItems(arrayList);
((DisplayableListPanel) _void).updateButtonStates();

Test 44: 
SessionProperties sessionProperties = new SessionProperties();
sessionProperties.setProperty("currentUser", (Object) null);
String string = "log";
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) "log", (String) false, false, false);
ArrayList<Displayable> arrayList = new ArrayList<Displayable>();
User user = null;
((ArrayList) string).add((Displayable) user);
((DisplayableListPanel) _void).setDisplayableItems(arrayList);
((DisplayableListPanel) _void).updateButtonStates();

Test 45: 
SessionProperties sessionProperties = new SessionProperties();
sessionProperties.setProperty("currentUser", (Object) null);
String string = "startupOptions";
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) "startupOptions", (String) false, false);
ArrayList<Displayable> arrayList = new ArrayList<Displayable>();
User user = null;
((ArrayList) string).add((Displayable) user);
((DisplayableListPanel) _void).setDisplayableItems(arrayList);
((DisplayableListPanel) _void).getAllListItems();


* Minimizing test suite
* test suite isTestSuite: 23
Test 0: 
SessionProperties sessionProperties = new SessionProperties();
User user = new User();
sessionProperties.setProperty("currentUser", user);
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) null, "database", false, false);
displayableListPanel.getPanel();
Test 1: 
SessionProperties sessionProperties = new SessionProperties();
User user = new User();
sessionProperties.setProperty("currentUser", user);
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) null, "database", true, true);
displayableListPanel.setListOwnerName("log");
Test 2: 
SessionProperties sessionProperties = new SessionProperties();
User user = new User();
sessionProperties.setProperty("currentUser", user);
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) null, "database", true, true);
displayableListPanel.setDisplayableListItemDeleter((DisplayableListItemDeleter) null);
Test 3: 
SessionProperties sessionProperties = new SessionProperties();
User user = new User();
sessionProperties.setProperty("currentUser", user);
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) null, "log", true, true);
displayableListPanel.setNewRecord(true);
displayableListPanel.updateButtonStates();
Test 4: 
SessionProperties sessionProperties = new SessionProperties();
User user = new User();
sessionProperties.setProperty("currentUser", user);
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) null, "startupOptions", true, true);
displayableListPanel.setDisplayableListItemAdder((DisplayableListItemAdder) null);
Test 5: 
SessionProperties sessionProperties = new SessionProperties();
User user = new User();
sessionProperties.setProperty("currentUser", user);
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) null, "retrievalService", true);
displayableListPanel.save();
Test 6: 
SessionProperties sessionProperties = new SessionProperties();
User user = new User();
sessionProperties.setProperty("currentUser", user);
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) null, "startupOptions", true);
displayableListPanel.setDisplayableListItemEditor((DisplayableListItemEditor) null);
Test 7: 
SessionProperties sessionProperties = new SessionProperties();
User user = new User();
sessionProperties.setProperty("currentUser", user);
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) null, "log", true, true);
displayableListPanel.getAllListItems();
Test 8: 
SessionProperties sessionProperties = new SessionProperties();
User user = new User("database", "securityService");
sessionProperties.setProperty("currentUser", user);
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) null, "securityService", false);
displayableListPanel.setDisplayableListItemViewer((DisplayableListItemViewer) null);
Test 9: 
SessionProperties sessionProperties = new SessionProperties();
User user = new User("log", "startupOptions");
sessionProperties.setProperty("currentUser", user);
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) null, "currentUser", true, true);
displayableListPanel.setDisplayableListItemSelector((DisplayableListItemSelector) null);
Test 10: 
SessionProperties sessionProperties = new SessionProperties();
User user = new User();
sessionProperties.setProperty("currentUser", user);
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) null, "log", true, true);
displayableListPanel.getPanel();
Test 11: 
SessionProperties sessionProperties = new SessionProperties();
User user = new User();
sessionProperties.setProperty("currentUser", user);
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) null, "retrievalService", false, false);
// Undeclared exception!
try { 
  displayableListPanel.addListItem();
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 12: 
SessionProperties sessionProperties = new SessionProperties();
User user = new User();
sessionProperties.setProperty("currentUser", user);
ArrayList<Displayable> arrayList = new ArrayList<Displayable>();
arrayList.add((Displayable) user);
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) null, "database", true, true);
displayableListPanel.setDisplayableItems(arrayList);
// Undeclared exception!
try { 
  displayableListPanel.deleteSelectedListItems();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("macaw.util.DisplayableListPanel", e);
}

Test 13: 
SessionProperties sessionProperties = new SessionProperties();
User user = new User();
sessionProperties.setProperty("currentUser", user);
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) null, "database", true, true);
// Undeclared exception!
try { 
  displayableListPanel.deleteSelectedListItems();
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 14: 
SessionProperties sessionProperties = new SessionProperties();
User user = new User();
sessionProperties.setProperty("currentUser", user);
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) null, "database", false);
displayableListPanel.updateButtonStates();
Test 15: 
SessionProperties sessionProperties = new SessionProperties();
User user = new User();
sessionProperties.setProperty("currentUser", user);
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) null, "", true, false);
displayableListPanel.updateButtonStates();
Test 16: 
SessionProperties sessionProperties = new SessionProperties();
User user = new User();
sessionProperties.setProperty("currentUser", user);
ArrayList<Displayable> arrayList = new ArrayList<Displayable>();
arrayList.add((Displayable) user);
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) null, "retrievalService", true, false);
displayableListPanel.setDisplayableItems(arrayList);
displayableListPanel.updateButtonStates();
Test 17: 
SessionProperties sessionProperties = new SessionProperties();
User user = new User();
sessionProperties.setProperty("currentUser", user);
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) null, "log", false, false);
ArrayList<Displayable> arrayList = new ArrayList<Displayable>();
arrayList.add((Displayable) user);
displayableListPanel.setDisplayableItems(arrayList);
displayableListPanel.updateButtonStates();
Test 18: 
SessionProperties sessionProperties = new SessionProperties();
User user = new User();
sessionProperties.setProperty("currentUser", user);
ArrayList<Displayable> arrayList = new ArrayList<Displayable>();
arrayList.add((Displayable) user);
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) null, "retrievalService", false, false);
displayableListPanel.setNewRecord(true);
displayableListPanel.setDisplayableItems(arrayList);
displayableListPanel.updateButtonStates();
Test 19: 
SessionProperties sessionProperties = new SessionProperties();
User user = new User();
sessionProperties.setProperty("currentUser", user);
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) null, "retrievalService", true);
ActionEvent actionEvent = new ActionEvent(sessionProperties, 5408, "currentUser");
displayableListPanel.actionPerformed(actionEvent);
Test 20: 
SessionProperties sessionProperties = new SessionProperties();
User user = new User("log", "userInterfaceFactory");
sessionProperties.setProperty("currentUser", user);
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) null, "userInterfaceFactory", true);
displayableListPanel.updateButtonStates();
Test 21: 
SessionProperties sessionProperties = new SessionProperties();
User user = new User();
sessionProperties.setProperty("currentUser", user);
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) null, "startupOptions", true);
ArrayList<Displayable> arrayList = new ArrayList<Displayable>();
arrayList.add((Displayable) user);
displayableListPanel.setDisplayableItems(arrayList);
displayableListPanel.updateButtonStates();
Test 22: 
SessionProperties sessionProperties = new SessionProperties();
User user = new User();
sessionProperties.setProperty("currentUser", user);
DisplayableListPanel displayableListPanel = new DisplayableListPanel(sessionProperties, (DisplayableListParentForm) null, "startupOptions", false);
ArrayList<Displayable> arrayList = new ArrayList<Displayable>();
arrayList.add((Displayable) user);
displayableListPanel.setDisplayableItems(arrayList);
displayableListPanel.getAllListItems();

* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 63%
* Total number of goals: 70
* Number of covered goals: 44
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 63%
* Total number of goals: 203
* Number of covered goals: 128
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 53%
* Total number of goals: 17
* Number of covered goals: 9
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 17
* Number of covered goals: 17
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 63%
* Total number of goals: 70
* Number of covered goals: 44
* Generated 23 tests with total length 136
* Resulting test suite's coverage: 68% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 5%
* Compiling and checking tests
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: SessionProperties arg0 = new SessionProperties();
User arg1 = new User();
arg0.setProperty("currentUser", arg1);
DisplayableListPanel displayableListPanel = new DisplayableListPanel(arg0, (DisplayableListParentForm) null, "database", false, false);
JPanel panel = displayableListPanel.getPanel();
assertTrue(panel.getFocusTraversalKeysEnabled());


** It was a parseable test case! 
refined test name is: testEnableFocusTraversalKeys
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: SessionProperties arg0 = new SessionProperties();
User arg1 = new User();
arg0.setProperty("currentUser", arg1);
DisplayableListPanel displayableListPanel = new DisplayableListPanel(arg0, (DisplayableListParentForm) null, "database", true, true);
displayableListPanel.setListOwnerName("log");

** It was a parseable test case! 
refined test name is: testDisplayableListPanelCreation
* Compiling Tests
refined test name is: testCreateDisplayableListPanelWithCorrectOwnerName
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: SessionProperties arg0 = new SessionProperties();
User arg1 = new User();
arg0.setProperty("currentUser", arg1);
DisplayableListPanel displayableListPanel = new DisplayableListPanel(arg0, (DisplayableListParentForm) null, "database", true, true);
displayableListPanel.setDisplayableListItemDeleter((DisplayableListItemDeleter) null);

** It was a parseable test case! 
refined test name is: testSetDisplayableListItemDeleterNull
* Compiling Tests
refined test name is: testSetDisplayableListItemDeleterNull
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: SessionProperties arg0 = new SessionProperties();
User arg1 = new User();
arg0.setProperty("currentUser", arg1);
DisplayableListPanel displayableListPanel = new DisplayableListPanel(arg0, (DisplayableListParentForm) null, "log", true, true);
displayableListPanel.setNewRecord(true);
displayableListPanel.updateButtonStates();

** It was a parseable test case! 
refined test name is: testUpdateButtonStatesForNewRecordAndUserSettings
* Compiling Tests
refined test name is: testUpdateButtonStatesnewRecordAndUserSettings
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: SessionProperties arg0 = new SessionProperties();
User arg1 = new User();
arg0.setProperty("currentUser", arg1);
DisplayableListPanel displayableListPanel = new DisplayableListPanel(arg0, (DisplayableListParentForm) null, "startupOptions", true, true);
displayableListPanel.setDisplayableListItemAdder((DisplayableListItemAdder) null);

** It was a parseable test case! 
refined test name is: testCreateNewSessionAndDisplayableListPanel
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: SessionProperties arg0 = new SessionProperties();
User arg1 = new User();
arg0.setProperty("currentUser", arg1);
DisplayableListPanel displayableListPanel = new DisplayableListPanel(arg0, (DisplayableListParentForm) null, "retrievalService", true);
displayableListPanel.save();

** It was a parseable test case! 
refined test name is: testRetrieveDataForCurrentUser
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: SessionProperties arg0 = new SessionProperties();
User arg1 = new User();
arg0.setProperty("currentUser", arg1);
DisplayableListPanel displayableListPanel = new DisplayableListPanel(arg0, (DisplayableListParentForm) null, "startupOptions", true);
displayableListPanel.setDisplayableListItemEditor((DisplayableListItemEditor) null);

** It was a parseable test case! 
refined test name is: testSetPropertyWithCurrentUser
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: SessionProperties arg0 = new SessionProperties();
User arg1 = new User();
arg0.setProperty("currentUser", arg1);
DisplayableListPanel displayableListPanel = new DisplayableListPanel(arg0, (DisplayableListParentForm) null, "log", true, true);
ArrayList<Displayable> allListItems = displayableListPanel.getAllListItems();
assertEquals(0, allListItems.size());


** It was a parseable test case! 
refined test name is: testGetAllListItemsEmptyLog
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: SessionProperties arg0 = new SessionProperties();
User arg1 = new User("database", "securityService");
arg0.setProperty("currentUser", arg1);
DisplayableListPanel displayableListPanel = new DisplayableListPanel(arg0, (DisplayableListParentForm) null, "securityService", false);
displayableListPanel.setDisplayableListItemViewer((DisplayableListItemViewer) null);

** It was a parseable test case! 
refined test name is: testSetDisplayableListItemViewerToNull
* Compiling Tests
refined test name is: testSetDisplayableListItemViewerNull
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: SessionProperties arg0 = new SessionProperties();
User arg1 = new User("log", "startupOptions");
arg0.setProperty("currentUser", arg1);
DisplayableListPanel displayableListPanel = new DisplayableListPanel(arg0, (DisplayableListParentForm) null, "currentUser", true, true);
displayableListPanel.setDisplayableListItemSelector((DisplayableListItemSelector) null);

** It was a parseable test case! 
refined test name is: testConstructorSetsPropertiesCorrectly
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: SessionProperties arg0 = new SessionProperties();
User arg1 = new User();
arg0.setProperty("currentUser", arg1);
DisplayableListPanel displayableListPanel = new DisplayableListPanel(arg0, (DisplayableListParentForm) null, "log", true, true);
JPanel panel = displayableListPanel.getPanel();
assertFalse(panel.getIgnoreRepaint());


** It was a parseable test case! 
refined test name is: testLogPanelShouldNotIgnoreRepaint
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: SessionProperties arg0 = new SessionProperties();
User arg1 = new User();
arg0.setProperty("currentUser", arg1);
DisplayableListPanel displayableListPanel = new DisplayableListPanel(arg0, (DisplayableListParentForm) null, "retrievalService", false, false);
// Undeclared exception!
try { 
  displayableListPanel.addListItem();
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}


** It was a parseable test case! 
refined test name is: testAddListItemThrowsHeadlessException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: SessionProperties arg0 = new SessionProperties();
User arg1 = new User();
arg0.setProperty("currentUser", arg1);
DisplayableListPanel displayableListPanel = new DisplayableListPanel(arg0, (DisplayableListParentForm) null, "database", true, true);
// Undeclared exception!
try { 
  displayableListPanel.deleteSelectedListItems();
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}


** It was a parseable test case! 
refined test name is: testDeleteSelectedListItemsNoGUIEnv
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: SessionProperties arg0 = new SessionProperties();
User arg1 = new User();
arg0.setProperty("currentUser", arg1);
DisplayableListPanel displayableListPanel = new DisplayableListPanel(arg0, (DisplayableListParentForm) null, "database", false);
displayableListPanel.updateButtonStates();

** It was a parseable test case! 
refined test name is: testUpdateButtonStatesWithCurrentUserPermissions
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: SessionProperties arg0 = new SessionProperties();
User arg1 = new User();
arg0.setProperty("currentUser", arg1);
DisplayableListPanel displayableListPanel = new DisplayableListPanel(arg0, (DisplayableListParentForm) null, "", true, false);
displayableListPanel.updateButtonStates();

** It was a parseable test case! 
refined test name is: testUpdateButtonStates
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: SessionProperties arg0 = new SessionProperties();
User arg1 = new User("log", "userInterfaceFactory");
arg0.setProperty("currentUser", arg1);
DisplayableListPanel displayableListPanel = new DisplayableListPanel(arg0, (DisplayableListParentForm) null, "userInterfaceFactory", true);
displayableListPanel.updateButtonStates();

** It was a parseable test case! 
refined test name is: testUpdateButtonStates
* Compiling Tests
refined test name is: testDisplayableListPanelUpdateButtonStates
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 04:29:29.645 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/tmp/EvoSuite_pathingJar2538632379113878211.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 04:29:29.678 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2538632379113878211.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 04:29:29.758 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/tmp/EvoSuite_pathingJar2538632379113878211.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 04:29:29.760 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2538632379113878211.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 04:29:29.841 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/tmp/EvoSuite_pathingJar2538632379113878211.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 04:29:29.843 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2538632379113878211.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 04:29:29.943 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/tmp/EvoSuite_pathingJar2538632379113878211.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 04:29:29.944 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2538632379113878211.jar
[MASTER] 04:29:30.042 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/tmp/EvoSuite_pathingJar2538632379113878211.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 04:29:30.044 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2538632379113878211.jar
[MASTER] 04:29:30.138 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/tmp/EvoSuite_pathingJar2538632379113878211.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 04:29:30.139 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2538632379113878211.jar
[MASTER] 04:29:30.226 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/tmp/EvoSuite_pathingJar2538632379113878211.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 04:29:30.228 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2538632379113878211.jar
[MASTER] 04:29:30.310 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/tmp/EvoSuite_pathingJar2538632379113878211.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 04:29:30.311 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2538632379113878211.jar
[MASTER] 04:29:30.388 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/tmp/EvoSuite_pathingJar2538632379113878211.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 04:29:30.389 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2538632379113878211.jar
[MASTER] 04:29:30.465 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/tmp/EvoSuite_pathingJar2538632379113878211.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 04:29:30.466 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2538632379113878211.jar
[MASTER] 04:29:30.549 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/tmp/EvoSuite_pathingJar2538632379113878211.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 04:29:30.551 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2538632379113878211.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 04:29:30.639 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/tmp/EvoSuite_pathingJar2538632379113878211.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 04:29:30.645 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2538632379113878211.jar
[MASTER] 04:29:30.881 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/tmp/EvoSuite_pathingJar2538632379113878211.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 04:29:30.883 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2538632379113878211.jar
[MASTER] 04:29:30.961 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/tmp/EvoSuite_pathingJar2538632379113878211.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 04:29:30.962 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2538632379113878211.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 04:29:31.022 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/tmp/EvoSuite_pathingJar2538632379113878211.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 04:29:31.024 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2538632379113878211.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 04:29:31.090 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/tmp/EvoSuite_pathingJar2538632379113878211.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 04:29:31.092 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2538632379113878211.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 1 called: 0 to improve: false
** Write a test suite: 2 called: 1 to improve: false
** Write a test suite: 3 called: 2 to improve: false
** Write a test suite: 8 called: 3 to improve: false
** Write a test suite: 15 called: 4 to improve: false
[MASTER] 04:29:31.291 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/tmp/EvoSuite_pathingJar2538632379113878211.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 04:29:31.293 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2538632379113878211.jar
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 7 called: 1 to improve: false
** Write a test suite: 12 called: 2 to improve: false
** Write a test suite: 13 called: 3 to improve: false
** Write a test suite: 14 called: 4 to improve: false
[MASTER] 04:29:31.479 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/tmp/EvoSuite_pathingJar2538632379113878211.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
* Writing tests to file
* Writing JUnit test case 'DisplayableListPanel_ESTest' to evosuite-tests
[MASTER] 04:29:31.481 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2538632379113878211.jar
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 7 called: 1 to improve: false
** Write a test suite: 12 called: 2 to improve: false
** Write a test suite: 13 called: 3 to improve: false
** Write a test suite: 14 called: 4 to improve: false
* Done!

* Computation finished
